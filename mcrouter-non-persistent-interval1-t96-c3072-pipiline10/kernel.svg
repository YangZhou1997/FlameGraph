<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="779.1" y="1541" width="0.2" height="15.0" fill="rgb(227,189,20)" rx="2" ry="2" />
<text  x="782.05" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="534.2" y="1797" width="0.2" height="15.0" fill="rgb(219,81,11)" rx="2" ry="2" />
<text  x="537.20" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="817.3" y="1653" width="0.2" height="15.0" fill="rgb(241,3,43)" rx="2" ry="2" />
<text  x="820.34" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="104.7" y="1541" width="16.6" height="15.0" fill="rgb(230,29,9)" rx="2" ry="2" />
<text  x="107.71" y="1551.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (2 samples, 0.03%)</title><rect x="38.7" y="2005" width="0.4" height="15.0" fill="rgb(232,130,28)" rx="2" ry="2" />
<text  x="41.71" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (4 samples, 0.07%)</title><rect x="75.6" y="1925" width="0.8" height="15.0" fill="rgb(246,126,12)" rx="2" ry="2" />
<text  x="78.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="675.0" y="1701" width="0.6" height="15.0" fill="rgb(236,156,49)" rx="2" ry="2" />
<text  x="677.97" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (24 samples, 0.41%)</title><rect x="147.4" y="1909" width="4.8" height="15.0" fill="rgb(232,197,5)" rx="2" ry="2" />
<text  x="150.38" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (4 samples, 0.07%)</title><rect x="109.3" y="37" width="0.8" height="15.0" fill="rgb(251,90,13)" rx="2" ry="2" />
<text  x="112.30" y="47.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="230.9" y="1957" width="0.6" height="15.0" fill="rgb(219,120,48)" rx="2" ry="2" />
<text  x="233.93" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="665.2" y="1845" width="0.2" height="15.0" fill="rgb(241,23,17)" rx="2" ry="2" />
<text  x="668.20" y="1855.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="617.1" y="1893" width="0.2" height="15.0" fill="rgb(224,147,28)" rx="2" ry="2" />
<text  x="620.15" y="1903.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="17.6" y="2005" width="1.0" height="15.0" fill="rgb(211,126,49)" rx="2" ry="2" />
<text  x="20.58" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="117.7" y="69" width="0.6" height="15.0" fill="rgb(252,9,46)" rx="2" ry="2" />
<text  x="120.67" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="88.0" y="1909" width="0.4" height="15.0" fill="rgb(244,35,53)" rx="2" ry="2" />
<text  x="90.96" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="40.1" y="1957" width="0.2" height="15.0" fill="rgb(231,185,8)" rx="2" ry="2" />
<text  x="43.11" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="697.9" y="1733" width="0.2" height="15.0" fill="rgb(243,184,49)" rx="2" ry="2" />
<text  x="700.90" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="542.0" y="1781" width="0.2" height="15.0" fill="rgb(225,161,41)" rx="2" ry="2" />
<text  x="544.98" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="462.4" y="1893" width="0.2" height="15.0" fill="rgb(232,154,23)" rx="2" ry="2" />
<text  x="465.42" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="149.8" y="1749" width="0.2" height="15.0" fill="rgb(211,196,40)" rx="2" ry="2" />
<text  x="152.77" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="81.2" y="1957" width="0.2" height="15.0" fill="rgb(212,198,1)" rx="2" ry="2" />
<text  x="84.18" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="618.9" y="1781" width="1.0" height="15.0" fill="rgb(217,9,17)" rx="2" ry="2" />
<text  x="621.94" y="1791.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.03%)</title><rect x="599.8" y="1573" width="0.4" height="15.0" fill="rgb(224,177,43)" rx="2" ry="2" />
<text  x="602.80" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="623.5" y="2005" width="0.2" height="15.0" fill="rgb(237,196,8)" rx="2" ry="2" />
<text  x="626.53" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (1 samples, 0.02%)</title><rect x="905.7" y="1973" width="0.2" height="15.0" fill="rgb(221,150,12)" rx="2" ry="2" />
<text  x="908.67" y="1983.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="1157.7" y="1861" width="0.2" height="15.0" fill="rgb(206,76,2)" rx="2" ry="2" />
<text  x="1160.70" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (5 samples, 0.08%)</title><rect x="75.6" y="1941" width="1.0" height="15.0" fill="rgb(220,108,50)" rx="2" ry="2" />
<text  x="78.60" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="903.3" y="2005" width="0.4" height="15.0" fill="rgb(249,146,0)" rx="2" ry="2" />
<text  x="906.27" y="2015.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1127.4" y="2053" width="0.2" height="15.0" fill="rgb(232,116,54)" rx="2" ry="2" />
<text  x="1130.39" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="17.6" y="1765" width="0.2" height="15.0" fill="rgb(239,61,42)" rx="2" ry="2" />
<text  x="20.58" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="756.1" y="1557" width="0.2" height="15.0" fill="rgb(211,125,20)" rx="2" ry="2" />
<text  x="759.12" y="1567.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="2005" width="0.2" height="15.0" fill="rgb(247,60,26)" rx="2" ry="2" />
<text  x="1037.28" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="887.5" y="1925" width="0.2" height="15.0" fill="rgb(242,125,9)" rx="2" ry="2" />
<text  x="890.52" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="1188.4" y="1941" width="0.8" height="15.0" fill="rgb(238,173,27)" rx="2" ry="2" />
<text  x="1191.40" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="498.5" y="1781" width="0.2" height="15.0" fill="rgb(233,75,33)" rx="2" ry="2" />
<text  x="501.51" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1012.7" y="1925" width="0.2" height="15.0" fill="rgb(225,69,5)" rx="2" ry="2" />
<text  x="1015.74" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (28 samples, 0.47%)</title><rect x="986.6" y="1957" width="5.6" height="15.0" fill="rgb(216,87,44)" rx="2" ry="2" />
<text  x="989.62" y="1967.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="488.7" y="1781" width="0.2" height="15.0" fill="rgb(244,37,22)" rx="2" ry="2" />
<text  x="491.74" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="40.1" y="2005" width="0.2" height="15.0" fill="rgb(251,7,31)" rx="2" ry="2" />
<text  x="43.11" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="516.9" y="1941" width="0.4" height="15.0" fill="rgb(217,165,35)" rx="2" ry="2" />
<text  x="519.85" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="550.0" y="1925" width="0.2" height="15.0" fill="rgb(228,24,19)" rx="2" ry="2" />
<text  x="552.95" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="675.0" y="1813" width="0.6" height="15.0" fill="rgb(227,104,32)" rx="2" ry="2" />
<text  x="677.97" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="97.9" y="1973" width="0.2" height="15.0" fill="rgb(214,149,13)" rx="2" ry="2" />
<text  x="100.93" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (16 samples, 0.27%)</title><rect x="475.0" y="1973" width="3.2" height="15.0" fill="rgb(234,145,33)" rx="2" ry="2" />
<text  x="477.98" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="17.6" y="1781" width="0.2" height="15.0" fill="rgb(251,86,27)" rx="2" ry="2" />
<text  x="20.58" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="548.0" y="1973" width="0.2" height="15.0" fill="rgb(230,200,47)" rx="2" ry="2" />
<text  x="550.96" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="453.0" y="1685" width="0.2" height="15.0" fill="rgb(238,229,13)" rx="2" ry="2" />
<text  x="456.05" y="1695.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="358.7" y="1957" width="0.2" height="15.0" fill="rgb(248,153,36)" rx="2" ry="2" />
<text  x="361.74" y="1967.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="292.7" y="1317" width="0.2" height="15.0" fill="rgb(205,149,15)" rx="2" ry="2" />
<text  x="295.74" y="1327.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (4 samples, 0.07%)</title><rect x="706.1" y="2037" width="0.8" height="15.0" fill="rgb(238,206,27)" rx="2" ry="2" />
<text  x="709.08" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="124.7" y="1845" width="0.1" height="15.0" fill="rgb(247,165,46)" rx="2" ry="2" />
<text  x="127.65" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.2" y="1861" width="0.2" height="15.0" fill="rgb(228,214,21)" rx="2" ry="2" />
<text  x="544.18" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="134.4" y="1813" width="0.2" height="15.0" fill="rgb(211,173,51)" rx="2" ry="2" />
<text  x="137.42" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="378.5" y="1909" width="0.6" height="15.0" fill="rgb(218,167,43)" rx="2" ry="2" />
<text  x="381.48" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.4" y="1957" width="0.2" height="15.0" fill="rgb(220,167,43)" rx="2" ry="2" />
<text  x="861.41" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="330.2" y="1765" width="0.2" height="15.0" fill="rgb(215,101,43)" rx="2" ry="2" />
<text  x="333.22" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="846.8" y="1845" width="0.2" height="15.0" fill="rgb(205,49,24)" rx="2" ry="2" />
<text  x="849.85" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1171.7" y="1973" width="0.2" height="15.0" fill="rgb(250,137,16)" rx="2" ry="2" />
<text  x="1174.66" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.0" y="1797" width="0.2" height="15.0" fill="rgb(248,207,7)" rx="2" ry="2" />
<text  x="159.95" y="1807.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="618.9" y="1861" width="1.0" height="15.0" fill="rgb(235,143,11)" rx="2" ry="2" />
<text  x="621.94" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.3" y="69" width="0.2" height="15.0" fill="rgb(251,91,5)" rx="2" ry="2" />
<text  x="121.27" y="79.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (15 samples, 0.25%)</title><rect x="980.4" y="1973" width="3.0" height="15.0" fill="rgb(213,224,21)" rx="2" ry="2" />
<text  x="983.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (7 samples, 0.12%)</title><rect x="628.9" y="2005" width="1.4" height="15.0" fill="rgb(234,143,27)" rx="2" ry="2" />
<text  x="631.91" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="115.1" y="53" width="0.6" height="15.0" fill="rgb(238,71,6)" rx="2" ry="2" />
<text  x="118.08" y="63.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="482.8" y="1573" width="0.2" height="15.0" fill="rgb(209,67,5)" rx="2" ry="2" />
<text  x="485.76" y="1583.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="412.2" y="1765" width="0.2" height="15.0" fill="rgb(245,56,31)" rx="2" ry="2" />
<text  x="415.17" y="1775.5" ></text>
</g>
<g >
<title>sock_alloc (57 samples, 0.96%)</title><rect x="387.0" y="1957" width="11.4" height="15.0" fill="rgb(232,121,42)" rx="2" ry="2" />
<text  x="390.05" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.4" y="1909" width="0.2" height="15.0" fill="rgb(252,7,12)" rx="2" ry="2" />
<text  x="146.39" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (2 samples, 0.03%)</title><rect x="901.3" y="1973" width="0.4" height="15.0" fill="rgb(240,169,34)" rx="2" ry="2" />
<text  x="904.28" y="1983.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="911.8" y="2005" width="0.4" height="15.0" fill="rgb(237,25,43)" rx="2" ry="2" />
<text  x="914.85" y="2015.5" ></text>
</g>
<g >
<title>inet_release (390 samples, 6.59%)</title><rect x="750.7" y="1765" width="77.8" height="15.0" fill="rgb(217,194,12)" rx="2" ry="2" />
<text  x="753.74" y="1775.5" >inet_rel..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="158.1" y="1877" width="0.2" height="15.0" fill="rgb(219,201,16)" rx="2" ry="2" />
<text  x="161.15" y="1887.5" ></text>
</g>
<g >
<title>get_empty_filp (31 samples, 0.52%)</title><rect x="399.0" y="1925" width="6.2" height="15.0" fill="rgb(220,189,47)" rx="2" ry="2" />
<text  x="402.01" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.9" y="1957" width="0.4" height="15.0" fill="rgb(206,111,12)" rx="2" ry="2" />
<text  x="576.88" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="291.1" y="1349" width="0.2" height="15.0" fill="rgb(210,175,20)" rx="2" ry="2" />
<text  x="294.14" y="1359.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="386.7" y="1669" width="0.2" height="15.0" fill="rgb(228,3,53)" rx="2" ry="2" />
<text  x="389.65" y="1679.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="664.0" y="1909" width="1.0" height="15.0" fill="rgb(238,64,48)" rx="2" ry="2" />
<text  x="667.00" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="17.6" y="1877" width="0.2" height="15.0" fill="rgb(222,24,48)" rx="2" ry="2" />
<text  x="20.58" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (2 samples, 0.03%)</title><rect x="229.5" y="1941" width="0.4" height="15.0" fill="rgb(213,125,17)" rx="2" ry="2" />
<text  x="232.53" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="782.2" y="1509" width="0.2" height="15.0" fill="rgb(241,23,50)" rx="2" ry="2" />
<text  x="785.24" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="877.0" y="1941" width="0.2" height="15.0" fill="rgb(214,14,41)" rx="2" ry="2" />
<text  x="879.96" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="982.0" y="1941" width="0.2" height="15.0" fill="rgb(235,28,30)" rx="2" ry="2" />
<text  x="985.03" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="563.5" y="1701" width="0.2" height="15.0" fill="rgb(232,91,49)" rx="2" ry="2" />
<text  x="566.51" y="1711.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="479.0" y="1909" width="0.2" height="15.0" fill="rgb(216,220,52)" rx="2" ry="2" />
<text  x="481.97" y="1919.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="561.3" y="1813" width="0.2" height="15.0" fill="rgb(226,63,54)" rx="2" ry="2" />
<text  x="564.32" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="694.3" y="1877" width="0.2" height="15.0" fill="rgb(253,207,41)" rx="2" ry="2" />
<text  x="697.31" y="1887.5" ></text>
</g>
<g >
<title>lock_timer_base (9 samples, 0.15%)</title><rect x="325.0" y="1749" width="1.8" height="15.0" fill="rgb(210,87,44)" rx="2" ry="2" />
<text  x="328.04" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (11 samples, 0.19%)</title><rect x="537.0" y="1989" width="2.2" height="15.0" fill="rgb(251,110,37)" rx="2" ry="2" />
<text  x="539.99" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (2 samples, 0.03%)</title><rect x="1005.6" y="2021" width="0.4" height="15.0" fill="rgb(241,127,16)" rx="2" ry="2" />
<text  x="1008.56" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="901.3" y="1941" width="0.2" height="15.0" fill="rgb(232,133,50)" rx="2" ry="2" />
<text  x="904.28" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="75.2" y="1845" width="0.2" height="15.0" fill="rgb(218,18,37)" rx="2" ry="2" />
<text  x="78.20" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (15 samples, 0.25%)</title><rect x="290.3" y="1685" width="3.0" height="15.0" fill="rgb(222,83,2)" rx="2" ry="2" />
<text  x="293.34" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="856.2" y="1829" width="0.2" height="15.0" fill="rgb(253,137,51)" rx="2" ry="2" />
<text  x="859.22" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="577.1" y="1989" width="0.4" height="15.0" fill="rgb(205,98,39)" rx="2" ry="2" />
<text  x="580.07" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (2 samples, 0.03%)</title><rect x="890.3" y="1941" width="0.4" height="15.0" fill="rgb(251,146,3)" rx="2" ry="2" />
<text  x="893.31" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="256.4" y="1653" width="0.2" height="15.0" fill="rgb(211,60,22)" rx="2" ry="2" />
<text  x="259.45" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (92 samples, 1.55%)</title><rect x="1142.5" y="2037" width="18.4" height="15.0" fill="rgb(249,222,40)" rx="2" ry="2" />
<text  x="1145.54" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="33.1" y="1957" width="0.2" height="15.0" fill="rgb(210,173,44)" rx="2" ry="2" />
<text  x="36.13" y="1967.5" ></text>
</g>
<g >
<title>snprintf@plt (1 samples, 0.02%)</title><rect x="1019.3" y="2037" width="0.2" height="15.0" fill="rgb(216,200,18)" rx="2" ry="2" />
<text  x="1022.32" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="330.2" y="1829" width="0.2" height="15.0" fill="rgb(235,181,21)" rx="2" ry="2" />
<text  x="333.22" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="599.8" y="1797" width="0.4" height="15.0" fill="rgb(249,228,6)" rx="2" ry="2" />
<text  x="602.80" y="1807.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="168.7" y="1989" width="0.2" height="15.0" fill="rgb(248,159,31)" rx="2" ry="2" />
<text  x="171.72" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="169.5" y="2005" width="0.2" height="15.0" fill="rgb(207,113,14)" rx="2" ry="2" />
<text  x="172.51" y="2015.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="338.4" y="1909" width="0.2" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="341.40" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (44 samples, 0.74%)</title><rect x="634.9" y="1989" width="8.8" height="15.0" fill="rgb(228,135,15)" rx="2" ry="2" />
<text  x="637.89" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="78.6" y="1941" width="0.4" height="15.0" fill="rgb(242,152,35)" rx="2" ry="2" />
<text  x="81.59" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="333.4" y="1861" width="0.2" height="15.0" fill="rgb(223,160,25)" rx="2" ry="2" />
<text  x="336.41" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="157.0" y="1509" width="0.2" height="15.0" fill="rgb(218,83,10)" rx="2" ry="2" />
<text  x="159.95" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (1 samples, 0.02%)</title><rect x="912.6" y="2005" width="0.2" height="15.0" fill="rgb(205,181,54)" rx="2" ry="2" />
<text  x="915.65" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="505.5" y="1765" width="0.2" height="15.0" fill="rgb(253,179,26)" rx="2" ry="2" />
<text  x="508.49" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="483.0" y="1765" width="0.2" height="15.0" fill="rgb(227,99,47)" rx="2" ry="2" />
<text  x="485.96" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="508.1" y="1797" width="0.2" height="15.0" fill="rgb(245,59,45)" rx="2" ry="2" />
<text  x="511.08" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="615.8" y="1733" width="0.2" height="15.0" fill="rgb(248,64,50)" rx="2" ry="2" />
<text  x="618.75" y="1743.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="897.5" y="2005" width="0.4" height="15.0" fill="rgb(221,198,1)" rx="2" ry="2" />
<text  x="900.49" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (48 samples, 0.81%)</title><rect x="1101.7" y="1685" width="9.5" height="15.0" fill="rgb(241,119,5)" rx="2" ry="2" />
<text  x="1104.67" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="634.5" y="1989" width="0.2" height="15.0" fill="rgb(232,39,30)" rx="2" ry="2" />
<text  x="637.49" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (14 samples, 0.24%)</title><rect x="1113.6" y="1941" width="2.8" height="15.0" fill="rgb(211,164,5)" rx="2" ry="2" />
<text  x="1116.63" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="246.9" y="1765" width="0.2" height="15.0" fill="rgb(213,184,34)" rx="2" ry="2" />
<text  x="249.88" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="886.7" y="1941" width="1.6" height="15.0" fill="rgb(208,225,4)" rx="2" ry="2" />
<text  x="889.73" y="1951.5" ></text>
</g>
<g >
<title>iput (48 samples, 0.81%)</title><rect x="734.0" y="1733" width="9.6" height="15.0" fill="rgb(227,108,6)" rx="2" ry="2" />
<text  x="736.99" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="435.9" y="1973" width="0.2" height="15.0" fill="rgb(224,19,52)" rx="2" ry="2" />
<text  x="438.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (4 samples, 0.07%)</title><rect x="579.5" y="1973" width="0.8" height="15.0" fill="rgb(223,215,48)" rx="2" ry="2" />
<text  x="582.46" y="1983.5" ></text>
</g>
<g >
<title>inet_sendmsg (405 samples, 6.84%)</title><rect x="253.1" y="1925" width="80.7" height="15.0" fill="rgb(254,142,12)" rx="2" ry="2" />
<text  x="256.06" y="1935.5" >inet_send..</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1157.5" y="1637" width="0.2" height="15.0" fill="rgb(209,27,12)" rx="2" ry="2" />
<text  x="1160.50" y="1647.5" ></text>
</g>
<g >
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="318.1" y="1813" width="0.6" height="15.0" fill="rgb(242,191,17)" rx="2" ry="2" />
<text  x="321.06" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="55.7" y="1893" width="0.8" height="15.0" fill="rgb(224,93,15)" rx="2" ry="2" />
<text  x="58.66" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="157.9" y="1669" width="0.2" height="15.0" fill="rgb(222,87,39)" rx="2" ry="2" />
<text  x="160.95" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="453.8" y="1765" width="0.2" height="15.0" fill="rgb(219,127,32)" rx="2" ry="2" />
<text  x="456.85" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.7" y="1989" width="0.2" height="15.0" fill="rgb(237,45,28)" rx="2" ry="2" />
<text  x="911.66" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (25 samples, 0.42%)</title><rect x="54.1" y="1973" width="5.0" height="15.0" fill="rgb(232,35,33)" rx="2" ry="2" />
<text  x="57.07" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="168.9" y="1989" width="0.6" height="15.0" fill="rgb(249,156,26)" rx="2" ry="2" />
<text  x="171.92" y="1999.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.03%)</title><rect x="456.6" y="1941" width="0.4" height="15.0" fill="rgb(226,129,9)" rx="2" ry="2" />
<text  x="459.64" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="172.3" y="2005" width="0.2" height="15.0" fill="rgb(242,144,42)" rx="2" ry="2" />
<text  x="175.30" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="93.9" y="1973" width="0.2" height="15.0" fill="rgb(206,5,36)" rx="2" ry="2" />
<text  x="96.94" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (9 samples, 0.15%)</title><rect x="552.3" y="1989" width="1.8" height="15.0" fill="rgb(216,205,36)" rx="2" ry="2" />
<text  x="555.35" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="88.4" y="1925" width="0.2" height="15.0" fill="rgb(230,159,16)" rx="2" ry="2" />
<text  x="91.36" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="618.3" y="1957" width="0.2" height="15.0" fill="rgb(235,191,17)" rx="2" ry="2" />
<text  x="621.34" y="1967.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (31 samples, 0.52%)</title><rect x="809.6" y="1685" width="6.1" height="15.0" fill="rgb(248,219,37)" rx="2" ry="2" />
<text  x="812.56" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (1 samples, 0.02%)</title><rect x="971.3" y="2037" width="0.2" height="15.0" fill="rgb(226,175,11)" rx="2" ry="2" />
<text  x="974.27" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="190.6" y="2021" width="0.2" height="15.0" fill="rgb(205,219,13)" rx="2" ry="2" />
<text  x="193.65" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1049.8" y="1861" width="0.2" height="15.0" fill="rgb(216,220,33)" rx="2" ry="2" />
<text  x="1052.83" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="708.1" y="1973" width="0.2" height="15.0" fill="rgb(230,113,22)" rx="2" ry="2" />
<text  x="711.07" y="1983.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (8 samples, 0.14%)</title><rect x="746.8" y="1781" width="1.5" height="15.0" fill="rgb(216,191,44)" rx="2" ry="2" />
<text  x="749.75" y="1791.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="232.9" y="2037" width="0.6" height="15.0" fill="rgb(221,2,51)" rx="2" ry="2" />
<text  x="235.92" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="866.6" y="1701" width="0.2" height="15.0" fill="rgb(227,97,37)" rx="2" ry="2" />
<text  x="869.59" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.1" y="1605" width="0.2" height="15.0" fill="rgb(234,212,19)" rx="2" ry="2" />
<text  x="125.06" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="139.0" y="2005" width="1.0" height="15.0" fill="rgb(229,128,34)" rx="2" ry="2" />
<text  x="142.01" y="2015.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="593.6" y="1861" width="0.4" height="15.0" fill="rgb(218,56,12)" rx="2" ry="2" />
<text  x="596.62" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1034.3" y="1989" width="0.2" height="15.0" fill="rgb(241,49,20)" rx="2" ry="2" />
<text  x="1037.28" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="628.3" y="2005" width="0.2" height="15.0" fill="rgb(222,146,23)" rx="2" ry="2" />
<text  x="631.31" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="76.4" y="1717" width="0.2" height="15.0" fill="rgb(214,74,18)" rx="2" ry="2" />
<text  x="79.40" y="1727.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="76.0" y="1829" width="0.2" height="15.0" fill="rgb(205,76,15)" rx="2" ry="2" />
<text  x="79.00" y="1839.5" ></text>
</g>
<g >
<title>dev_queue_xmit (99 samples, 1.67%)</title><rect x="782.4" y="1589" width="19.8" height="15.0" fill="rgb(237,211,35)" rx="2" ry="2" />
<text  x="785.44" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (4 samples, 0.07%)</title><rect x="1111.8" y="1925" width="0.8" height="15.0" fill="rgb(227,125,30)" rx="2" ry="2" />
<text  x="1114.84" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="231.3" y="1685" width="0.2" height="15.0" fill="rgb(208,146,33)" rx="2" ry="2" />
<text  x="234.32" y="1695.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1121.2" y="1973" width="0.2" height="15.0" fill="rgb(220,64,53)" rx="2" ry="2" />
<text  x="1124.21" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="264.2" y="1557" width="0.2" height="15.0" fill="rgb(254,12,1)" rx="2" ry="2" />
<text  x="267.22" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="255.1" y="1877" width="0.6" height="15.0" fill="rgb(241,6,31)" rx="2" ry="2" />
<text  x="258.05" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.14%)</title><rect x="1174.2" y="2037" width="1.6" height="15.0" fill="rgb(217,94,5)" rx="2" ry="2" />
<text  x="1177.25" y="2047.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="228.9" y="1877" width="0.2" height="15.0" fill="rgb(218,0,9)" rx="2" ry="2" />
<text  x="231.93" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="648.9" y="1717" width="0.2" height="15.0" fill="rgb(251,45,13)" rx="2" ry="2" />
<text  x="651.85" y="1727.5" ></text>
</g>
<g >
<title>locks_remove_posix (4 samples, 0.07%)</title><rect x="834.9" y="1813" width="0.8" height="15.0" fill="rgb(246,66,14)" rx="2" ry="2" />
<text  x="837.88" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1116.2" y="1717" width="0.2" height="15.0" fill="rgb(225,142,13)" rx="2" ry="2" />
<text  x="1119.23" y="1727.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="62.6" y="1893" width="0.2" height="15.0" fill="rgb(224,167,8)" rx="2" ry="2" />
<text  x="65.64" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="76.4" y="1845" width="0.2" height="15.0" fill="rgb(229,25,14)" rx="2" ry="2" />
<text  x="79.40" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="858.4" y="1829" width="0.2" height="15.0" fill="rgb(230,51,22)" rx="2" ry="2" />
<text  x="861.41" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="336.2" y="1861" width="0.2" height="15.0" fill="rgb(210,135,41)" rx="2" ry="2" />
<text  x="339.20" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="563.3" y="1973" width="0.6" height="15.0" fill="rgb(239,141,44)" rx="2" ry="2" />
<text  x="566.31" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="362.3" y="1941" width="0.2" height="15.0" fill="rgb(220,116,45)" rx="2" ry="2" />
<text  x="365.33" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (79 samples, 1.33%)</title><rect x="662.2" y="2005" width="15.8" height="15.0" fill="rgb(229,109,44)" rx="2" ry="2" />
<text  x="665.21" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncReader::AsyncReader (2 samples, 0.03%)</title><rect x="566.9" y="1989" width="0.4" height="15.0" fill="rgb(231,118,5)" rx="2" ry="2" />
<text  x="569.90" y="1999.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(214,55,32)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="534.2" y="1973" width="0.2" height="15.0" fill="rgb(205,144,50)" rx="2" ry="2" />
<text  x="537.20" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="231.3" y="1829" width="0.2" height="15.0" fill="rgb(210,134,53)" rx="2" ry="2" />
<text  x="234.32" y="1839.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="697.9" y="1685" width="0.2" height="15.0" fill="rgb(211,160,47)" rx="2" ry="2" />
<text  x="700.90" y="1695.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="866.6" y="1685" width="0.2" height="15.0" fill="rgb(214,131,44)" rx="2" ry="2" />
<text  x="869.59" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="889.3" y="1893" width="0.2" height="15.0" fill="rgb(220,89,52)" rx="2" ry="2" />
<text  x="892.32" y="1903.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="910.3" y="2005" width="0.2" height="15.0" fill="rgb(219,161,33)" rx="2" ry="2" />
<text  x="913.25" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.6" y="1829" width="0.2" height="15.0" fill="rgb(216,120,52)" rx="2" ry="2" />
<text  x="854.63" y="1839.5" ></text>
</g>
<g >
<title>skb_release_all (66 samples, 1.12%)</title><rect x="1068.0" y="1909" width="13.1" height="15.0" fill="rgb(209,100,45)" rx="2" ry="2" />
<text  x="1070.97" y="1919.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (6 samples, 0.10%)</title><rect x="512.3" y="1925" width="1.2" height="15.0" fill="rgb(231,95,30)" rx="2" ry="2" />
<text  x="515.27" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="840.3" y="1925" width="0.2" height="15.0" fill="rgb(238,34,6)" rx="2" ry="2" />
<text  x="843.27" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="268.2" y="1781" width="0.2" height="15.0" fill="rgb(215,95,52)" rx="2" ry="2" />
<text  x="271.21" y="1791.5" ></text>
</g>
<g >
<title>down_write (3 samples, 0.05%)</title><rect x="750.1" y="1765" width="0.6" height="15.0" fill="rgb(239,145,6)" rx="2" ry="2" />
<text  x="753.14" y="1775.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="540.0" y="1973" width="0.2" height="15.0" fill="rgb(241,226,2)" rx="2" ry="2" />
<text  x="542.98" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1067.8" y="1877" width="0.2" height="15.0" fill="rgb(209,150,42)" rx="2" ry="2" />
<text  x="1070.77" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="968.3" y="1957" width="0.2" height="15.0" fill="rgb(248,225,9)" rx="2" ry="2" />
<text  x="971.28" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (3 samples, 0.05%)</title><rect x="508.9" y="2037" width="0.6" height="15.0" fill="rgb(210,57,11)" rx="2" ry="2" />
<text  x="511.88" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="577.3" y="1957" width="0.2" height="15.0" fill="rgb(245,95,52)" rx="2" ry="2" />
<text  x="580.27" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="453.8" y="1861" width="0.2" height="15.0" fill="rgb(234,217,48)" rx="2" ry="2" />
<text  x="456.85" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="386.9" y="1845" width="0.1" height="15.0" fill="rgb(226,73,15)" rx="2" ry="2" />
<text  x="389.85" y="1855.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.32%)</title><rect x="483.2" y="2021" width="3.7" height="15.0" fill="rgb(206,44,1)" rx="2" ry="2" />
<text  x="486.16" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (5 samples, 0.08%)</title><rect x="575.3" y="1973" width="1.0" height="15.0" fill="rgb(212,136,7)" rx="2" ry="2" />
<text  x="578.28" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="997" width="14.4" height="15.0" fill="rgb(250,196,35)" rx="2" ry="2" />
<text  x="108.11" y="1007.5" ></text>
</g>
<g >
<title>tcp_current_mss (16 samples, 0.27%)</title><rect x="825.1" y="1717" width="3.2" height="15.0" fill="rgb(245,6,9)" rx="2" ry="2" />
<text  x="828.11" y="1727.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="836.1" y="1877" width="0.2" height="15.0" fill="rgb(236,188,40)" rx="2" ry="2" />
<text  x="839.08" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="869.2" y="1989" width="0.2" height="15.0" fill="rgb(253,48,53)" rx="2" ry="2" />
<text  x="872.18" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="135.6" y="1925" width="0.2" height="15.0" fill="rgb(214,152,22)" rx="2" ry="2" />
<text  x="138.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="972.7" y="1861" width="0.2" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text  x="975.66" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (14 samples, 0.24%)</title><rect x="1132.8" y="2037" width="2.8" height="15.0" fill="rgb(246,21,15)" rx="2" ry="2" />
<text  x="1135.77" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="537.8" y="1925" width="0.2" height="15.0" fill="rgb(211,21,43)" rx="2" ry="2" />
<text  x="540.79" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="748.5" y="1765" width="1.0" height="15.0" fill="rgb(207,218,17)" rx="2" ry="2" />
<text  x="751.55" y="1775.5" ></text>
</g>
<g >
<title>__init_rwsem (2 samples, 0.03%)</title><rect x="390.4" y="1893" width="0.4" height="15.0" fill="rgb(236,207,38)" rx="2" ry="2" />
<text  x="393.44" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="993.4" y="1989" width="0.2" height="15.0" fill="rgb(252,120,22)" rx="2" ry="2" />
<text  x="996.40" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="850.8" y="1893" width="0.4" height="15.0" fill="rgb(249,7,28)" rx="2" ry="2" />
<text  x="853.83" y="1903.5" ></text>
</g>
<g >
<title>sys_fcntl (5 samples, 0.08%)</title><rect x="562.3" y="1941" width="1.0" height="15.0" fill="rgb(237,180,17)" rx="2" ry="2" />
<text  x="565.31" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="64.0" y="1877" width="0.2" height="15.0" fill="rgb(236,212,26)" rx="2" ry="2" />
<text  x="67.04" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="611.4" y="1669" width="0.2" height="15.0" fill="rgb(229,228,33)" rx="2" ry="2" />
<text  x="614.37" y="1679.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (6 samples, 0.10%)</title><rect x="1156.5" y="1909" width="1.2" height="15.0" fill="rgb(206,111,32)" rx="2" ry="2" />
<text  x="1159.50" y="1919.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="168.5" y="1973" width="0.2" height="15.0" fill="rgb(219,12,23)" rx="2" ry="2" />
<text  x="171.52" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1119.8" y="1749" width="0.2" height="15.0" fill="rgb(222,145,51)" rx="2" ry="2" />
<text  x="1122.81" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::hasTasks (1 samples, 0.02%)</title><rect x="159.9" y="1941" width="0.2" height="15.0" fill="rgb(221,65,14)" rx="2" ry="2" />
<text  x="162.94" y="1951.5" ></text>
</g>
<g >
<title>filp_close (10 samples, 0.17%)</title><rect x="833.9" y="1829" width="2.0" height="15.0" fill="rgb(220,62,40)" rx="2" ry="2" />
<text  x="836.89" y="1839.5" ></text>
</g>
<g >
<title>alloc_inode (46 samples, 0.78%)</title><rect x="389.0" y="1925" width="9.2" height="15.0" fill="rgb(244,222,54)" rx="2" ry="2" />
<text  x="392.04" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="817.5" y="1573" width="0.2" height="15.0" fill="rgb(244,197,50)" rx="2" ry="2" />
<text  x="820.54" y="1583.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="1158.1" y="1653" width="0.2" height="15.0" fill="rgb(226,5,8)" rx="2" ry="2" />
<text  x="1161.10" y="1663.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1050.8" y="1957" width="0.2" height="15.0" fill="rgb(228,182,18)" rx="2" ry="2" />
<text  x="1053.82" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="648.9" y="1845" width="0.2" height="15.0" fill="rgb(208,11,11)" rx="2" ry="2" />
<text  x="651.85" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1169.3" y="1973" width="0.2" height="15.0" fill="rgb(246,42,18)" rx="2" ry="2" />
<text  x="1172.26" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="17.6" y="1829" width="0.2" height="15.0" fill="rgb(242,69,48)" rx="2" ry="2" />
<text  x="20.58" y="1839.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="236.5" y="1925" width="0.2" height="15.0" fill="rgb(234,72,39)" rx="2" ry="2" />
<text  x="239.51" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="542.0" y="1669" width="0.2" height="15.0" fill="rgb(227,177,5)" rx="2" ry="2" />
<text  x="544.98" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="675.0" y="1717" width="0.6" height="15.0" fill="rgb(205,145,35)" rx="2" ry="2" />
<text  x="677.97" y="1727.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="370.5" y="1925" width="0.6" height="15.0" fill="rgb(214,109,10)" rx="2" ry="2" />
<text  x="373.50" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (33 samples, 0.56%)</title><rect x="10.8" y="1925" width="6.6" height="15.0" fill="rgb(228,170,10)" rx="2" ry="2" />
<text  x="13.80" y="1935.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (31 samples, 0.52%)</title><rect x="465.2" y="1957" width="6.2" height="15.0" fill="rgb(212,154,2)" rx="2" ry="2" />
<text  x="468.21" y="1967.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="462.0" y="1893" width="0.2" height="15.0" fill="rgb(245,194,23)" rx="2" ry="2" />
<text  x="465.02" y="1903.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (101 samples, 1.71%)</title><rect x="488.3" y="1957" width="20.2" height="15.0" fill="rgb(219,133,29)" rx="2" ry="2" />
<text  x="491.34" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="979.6" y="1973" width="0.2" height="15.0" fill="rgb(239,49,5)" rx="2" ry="2" />
<text  x="982.64" y="1983.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="673.2" y="1861" width="0.6" height="15.0" fill="rgb(239,182,11)" rx="2" ry="2" />
<text  x="676.18" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (10 samples, 0.17%)</title><rect x="537.0" y="1957" width="2.0" height="15.0" fill="rgb(221,48,26)" rx="2" ry="2" />
<text  x="539.99" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="498.3" y="1893" width="0.2" height="15.0" fill="rgb(244,133,14)" rx="2" ry="2" />
<text  x="501.31" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="821" width="14.0" height="15.0" fill="rgb(237,224,54)" rx="2" ry="2" />
<text  x="108.11" y="831.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="815.9" y="1685" width="0.6" height="15.0" fill="rgb(227,209,44)" rx="2" ry="2" />
<text  x="818.94" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.7" y="1685" width="17.8" height="15.0" fill="rgb(216,207,35)" rx="2" ry="2" />
<text  x="107.71" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (19 samples, 0.32%)</title><rect x="888.5" y="1957" width="3.8" height="15.0" fill="rgb(213,83,45)" rx="2" ry="2" />
<text  x="891.52" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (2 samples, 0.03%)</title><rect x="599.8" y="1621" width="0.4" height="15.0" fill="rgb(238,33,7)" rx="2" ry="2" />
<text  x="602.80" y="1631.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="1090.3" y="1893" width="0.8" height="15.0" fill="rgb(213,179,23)" rx="2" ry="2" />
<text  x="1093.30" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="847.0" y="1909" width="0.8" height="15.0" fill="rgb(241,204,49)" rx="2" ry="2" />
<text  x="850.05" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="118.7" y="149" width="0.2" height="15.0" fill="rgb(219,19,15)" rx="2" ry="2" />
<text  x="121.67" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="974.9" y="1925" width="0.2" height="15.0" fill="rgb(207,76,25)" rx="2" ry="2" />
<text  x="977.86" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="482.6" y="1893" width="0.6" height="15.0" fill="rgb(226,74,42)" rx="2" ry="2" />
<text  x="485.56" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="648.9" y="1781" width="0.2" height="15.0" fill="rgb(236,84,9)" rx="2" ry="2" />
<text  x="651.85" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="611.2" y="1877" width="0.4" height="15.0" fill="rgb(216,107,20)" rx="2" ry="2" />
<text  x="614.17" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="840.3" y="1909" width="0.2" height="15.0" fill="rgb(216,132,33)" rx="2" ry="2" />
<text  x="843.27" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="310.3" y="1733" width="0.2" height="15.0" fill="rgb(245,59,25)" rx="2" ry="2" />
<text  x="313.28" y="1743.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="577.3" y="1653" width="0.2" height="15.0" fill="rgb(243,133,6)" rx="2" ry="2" />
<text  x="580.27" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="225.3" y="1845" width="0.6" height="15.0" fill="rgb(238,117,0)" rx="2" ry="2" />
<text  x="228.34" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="989.8" y="1909" width="0.2" height="15.0" fill="rgb(221,66,45)" rx="2" ry="2" />
<text  x="992.81" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="572.1" y="1989" width="0.2" height="15.0" fill="rgb(234,158,37)" rx="2" ry="2" />
<text  x="575.09" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="126.2" y="1989" width="0.2" height="15.0" fill="rgb(211,145,30)" rx="2" ry="2" />
<text  x="129.25" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (2 samples, 0.03%)</title><rect x="648.7" y="1989" width="0.4" height="15.0" fill="rgb(238,212,43)" rx="2" ry="2" />
<text  x="651.65" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="274.4" y="1781" width="0.2" height="15.0" fill="rgb(246,227,25)" rx="2" ry="2" />
<text  x="277.39" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="925.6" y="1941" width="1.2" height="15.0" fill="rgb(223,40,41)" rx="2" ry="2" />
<text  x="928.61" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="1082.7" y="1909" width="1.0" height="15.0" fill="rgb(228,202,21)" rx="2" ry="2" />
<text  x="1085.73" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1049.8" y="1701" width="0.2" height="15.0" fill="rgb(251,39,27)" rx="2" ry="2" />
<text  x="1052.83" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="83.4" y="1909" width="0.2" height="15.0" fill="rgb(240,10,11)" rx="2" ry="2" />
<text  x="86.38" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="675.0" y="1765" width="0.6" height="15.0" fill="rgb(245,186,2)" rx="2" ry="2" />
<text  x="677.97" y="1775.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="276.8" y="1845" width="0.2" height="15.0" fill="rgb(212,141,44)" rx="2" ry="2" />
<text  x="279.79" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.9" y="1717" width="0.2" height="15.0" fill="rgb(225,213,28)" rx="2" ry="2" />
<text  x="125.86" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="918.2" y="2021" width="0.2" height="15.0" fill="rgb(220,133,28)" rx="2" ry="2" />
<text  x="921.23" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="704.5" y="1765" width="0.2" height="15.0" fill="rgb(230,11,7)" rx="2" ry="2" />
<text  x="707.48" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="704.5" y="1653" width="0.2" height="15.0" fill="rgb(236,65,31)" rx="2" ry="2" />
<text  x="707.48" y="1663.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="914.0" y="2005" width="0.2" height="15.0" fill="rgb(238,200,8)" rx="2" ry="2" />
<text  x="917.04" y="2015.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="665.4" y="1925" width="0.2" height="15.0" fill="rgb(218,152,40)" rx="2" ry="2" />
<text  x="668.40" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="435.9" y="1797" width="0.2" height="15.0" fill="rgb(231,47,17)" rx="2" ry="2" />
<text  x="438.90" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="858.6" y="1797" width="0.2" height="15.0" fill="rgb(235,19,7)" rx="2" ry="2" />
<text  x="861.61" y="1807.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="599.0" y="1877" width="0.2" height="15.0" fill="rgb(253,48,9)" rx="2" ry="2" />
<text  x="602.00" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="224.1" y="1541" width="0.2" height="15.0" fill="rgb(226,89,36)" rx="2" ry="2" />
<text  x="227.15" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="626.9" y="1989" width="0.4" height="15.0" fill="rgb(246,53,16)" rx="2" ry="2" />
<text  x="629.92" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="704.5" y="1893" width="0.2" height="15.0" fill="rgb(222,205,29)" rx="2" ry="2" />
<text  x="707.48" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="562.1" y="1797" width="0.2" height="15.0" fill="rgb(246,53,5)" rx="2" ry="2" />
<text  x="565.12" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (23 samples, 0.39%)</title><rect x="612.2" y="1893" width="4.5" height="15.0" fill="rgb(230,105,48)" rx="2" ry="2" />
<text  x="615.16" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="224.7" y="1861" width="1.2" height="15.0" fill="rgb(248,227,30)" rx="2" ry="2" />
<text  x="227.74" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (6 samples, 0.10%)</title><rect x="1066.2" y="1861" width="1.2" height="15.0" fill="rgb(214,70,10)" rx="2" ry="2" />
<text  x="1069.18" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="377.7" y="1877" width="0.2" height="15.0" fill="rgb(240,43,49)" rx="2" ry="2" />
<text  x="380.68" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="223.7" y="1861" width="0.4" height="15.0" fill="rgb(253,137,50)" rx="2" ry="2" />
<text  x="226.75" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="725.6" y="1717" width="0.2" height="15.0" fill="rgb(252,54,44)" rx="2" ry="2" />
<text  x="728.62" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="404.6" y="1637" width="0.2" height="15.0" fill="rgb(216,61,36)" rx="2" ry="2" />
<text  x="407.60" y="1647.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="246.1" y="1973" width="1.0" height="15.0" fill="rgb(245,229,0)" rx="2" ry="2" />
<text  x="249.08" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (23 samples, 0.39%)</title><rect x="1104.9" y="1477" width="4.5" height="15.0" fill="rgb(245,75,4)" rx="2" ry="2" />
<text  x="1107.86" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="341" width="14.0" height="15.0" fill="rgb(249,88,0)" rx="2" ry="2" />
<text  x="108.11" y="351.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="152.6" y="1925" width="0.2" height="15.0" fill="rgb(235,91,24)" rx="2" ry="2" />
<text  x="155.57" y="1935.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="978.6" y="1973" width="0.2" height="15.0" fill="rgb(238,25,18)" rx="2" ry="2" />
<text  x="981.64" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (4 samples, 0.07%)</title><rect x="882.9" y="1925" width="0.8" height="15.0" fill="rgb(219,36,52)" rx="2" ry="2" />
<text  x="885.94" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::recv (6 samples, 0.10%)</title><rect x="68.6" y="1973" width="1.2" height="15.0" fill="rgb(233,49,2)" rx="2" ry="2" />
<text  x="71.62" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1121.4" y="1861" width="0.4" height="15.0" fill="rgb(223,64,20)" rx="2" ry="2" />
<text  x="1124.41" y="1871.5" ></text>
</g>
<g >
<title>__sys_sendmsg (452 samples, 7.64%)</title><rect x="247.3" y="1973" width="90.1" height="15.0" fill="rgb(207,94,41)" rx="2" ry="2" />
<text  x="250.28" y="1983.5" >__sys_send..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="386.7" y="1845" width="0.2" height="15.0" fill="rgb(220,176,7)" rx="2" ry="2" />
<text  x="389.65" y="1855.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="675.4" y="1589" width="0.2" height="15.0" fill="rgb(227,28,26)" rx="2" ry="2" />
<text  x="678.37" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="972.7" y="1909" width="0.2" height="15.0" fill="rgb(247,17,13)" rx="2" ry="2" />
<text  x="975.66" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1157.7" y="1941" width="0.8" height="15.0" fill="rgb(214,54,42)" rx="2" ry="2" />
<text  x="1160.70" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="892.3" y="1973" width="0.2" height="15.0" fill="rgb(227,115,13)" rx="2" ry="2" />
<text  x="895.31" y="1983.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (2 samples, 0.03%)</title><rect x="737.4" y="1653" width="0.4" height="15.0" fill="rgb(235,63,51)" rx="2" ry="2" />
<text  x="740.38" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="848.2" y="1909" width="0.2" height="15.0" fill="rgb(232,173,0)" rx="2" ry="2" />
<text  x="851.24" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="881.5" y="1909" width="0.6" height="15.0" fill="rgb(245,206,13)" rx="2" ry="2" />
<text  x="884.54" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="674.8" y="1717" width="0.2" height="15.0" fill="rgb(211,89,4)" rx="2" ry="2" />
<text  x="677.77" y="1727.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (2 samples, 0.03%)</title><rect x="569.7" y="2005" width="0.4" height="15.0" fill="rgb(243,43,31)" rx="2" ry="2" />
<text  x="572.69" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1178.0" y="1685" width="0.2" height="15.0" fill="rgb(212,146,2)" rx="2" ry="2" />
<text  x="1181.04" y="1695.5" ></text>
</g>
<g >
<title>tcp_sendmsg (403 samples, 6.81%)</title><rect x="253.5" y="1909" width="80.3" height="15.0" fill="rgb(247,178,10)" rx="2" ry="2" />
<text  x="256.46" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="397.4" y="1605" width="0.2" height="15.0" fill="rgb(236,18,52)" rx="2" ry="2" />
<text  x="400.42" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (8 samples, 0.14%)</title><rect x="955.9" y="2037" width="1.6" height="15.0" fill="rgb(238,167,30)" rx="2" ry="2" />
<text  x="958.91" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="157.0" y="1589" width="0.2" height="15.0" fill="rgb(214,223,31)" rx="2" ry="2" />
<text  x="159.95" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="1162.5" y="2053" width="0.6" height="15.0" fill="rgb(245,151,42)" rx="2" ry="2" />
<text  x="1165.48" y="2063.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1130.2" y="1765" width="0.2" height="15.0" fill="rgb(220,41,4)" rx="2" ry="2" />
<text  x="1133.18" y="1775.5" ></text>
</g>
<g >
<title>tcp_write_xmit (247 samples, 4.17%)</title><rect x="768.5" y="1701" width="49.2" height="15.0" fill="rgb(244,96,0)" rx="2" ry="2" />
<text  x="771.49" y="1711.5" >tcp_..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="779.1" y="1573" width="0.2" height="15.0" fill="rgb(210,76,33)" rx="2" ry="2" />
<text  x="782.05" y="1583.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="112.5" y="37" width="0.2" height="15.0" fill="rgb(236,168,3)" rx="2" ry="2" />
<text  x="115.49" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="599.8" y="1717" width="0.4" height="15.0" fill="rgb(253,107,31)" rx="2" ry="2" />
<text  x="602.80" y="1727.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (15 samples, 0.25%)</title><rect x="1176.0" y="2053" width="3.0" height="15.0" fill="rgb(234,216,31)" rx="2" ry="2" />
<text  x="1179.04" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="1023.9" y="2021" width="1.8" height="15.0" fill="rgb(253,23,23)" rx="2" ry="2" />
<text  x="1026.91" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="577.3" y="1861" width="0.2" height="15.0" fill="rgb(214,136,11)" rx="2" ry="2" />
<text  x="580.27" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="576.9" y="1829" width="0.2" height="15.0" fill="rgb(245,60,43)" rx="2" ry="2" />
<text  x="579.87" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="177.3" y="1973" width="2.2" height="15.0" fill="rgb(227,220,33)" rx="2" ry="2" />
<text  x="180.29" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="97.9" y="1781" width="0.2" height="15.0" fill="rgb(220,81,24)" rx="2" ry="2" />
<text  x="100.93" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="562.1" y="1781" width="0.2" height="15.0" fill="rgb(244,32,46)" rx="2" ry="2" />
<text  x="565.12" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="627.1" y="1909" width="0.2" height="15.0" fill="rgb(251,48,53)" rx="2" ry="2" />
<text  x="630.12" y="1919.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="401.4" y="1877" width="0.2" height="15.0" fill="rgb(236,63,8)" rx="2" ry="2" />
<text  x="404.41" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="310.3" y="1701" width="0.2" height="15.0" fill="rgb(218,135,33)" rx="2" ry="2" />
<text  x="313.28" y="1711.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="246.1" y="1909" width="0.8" height="15.0" fill="rgb(244,29,38)" rx="2" ry="2" />
<text  x="249.08" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="655.2" y="1973" width="0.2" height="15.0" fill="rgb(214,183,53)" rx="2" ry="2" />
<text  x="658.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="900.9" y="2005" width="0.2" height="15.0" fill="rgb(228,151,16)" rx="2" ry="2" />
<text  x="903.88" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="858.4" y="1845" width="0.2" height="15.0" fill="rgb(215,190,9)" rx="2" ry="2" />
<text  x="861.41" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1012.7" y="1749" width="0.2" height="15.0" fill="rgb(221,100,46)" rx="2" ry="2" />
<text  x="1015.74" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="576.9" y="1941" width="0.2" height="15.0" fill="rgb(208,213,30)" rx="2" ry="2" />
<text  x="579.87" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="704.5" y="1909" width="0.2" height="15.0" fill="rgb(208,64,33)" rx="2" ry="2" />
<text  x="707.48" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="150.0" y="1877" width="0.4" height="15.0" fill="rgb(205,139,25)" rx="2" ry="2" />
<text  x="152.97" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="1131.8" y="1989" width="0.8" height="15.0" fill="rgb(209,222,45)" rx="2" ry="2" />
<text  x="1134.78" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="40.1" y="1893" width="0.2" height="15.0" fill="rgb(237,128,22)" rx="2" ry="2" />
<text  x="43.11" y="1903.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="246.1" y="1861" width="0.2" height="15.0" fill="rgb(244,52,1)" rx="2" ry="2" />
<text  x="249.08" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="275.0" y="1829" width="0.8" height="15.0" fill="rgb(212,80,26)" rx="2" ry="2" />
<text  x="277.99" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1157.7" y="1909" width="0.2" height="15.0" fill="rgb(233,135,22)" rx="2" ry="2" />
<text  x="1160.70" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="996.4" y="1829" width="0.2" height="15.0" fill="rgb(248,55,0)" rx="2" ry="2" />
<text  x="999.39" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="842.7" y="1909" width="0.4" height="15.0" fill="rgb(234,42,20)" rx="2" ry="2" />
<text  x="845.66" y="1919.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="138.0" y="1973" width="0.2" height="15.0" fill="rgb(234,152,50)" rx="2" ry="2" />
<text  x="141.01" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="518.8" y="1781" width="0.2" height="15.0" fill="rgb(219,125,44)" rx="2" ry="2" />
<text  x="521.85" y="1791.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="999.2" y="1925" width="0.2" height="15.0" fill="rgb(233,38,9)" rx="2" ry="2" />
<text  x="1002.18" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="817.3" y="1669" width="0.2" height="15.0" fill="rgb(216,70,45)" rx="2" ry="2" />
<text  x="820.34" y="1679.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1009.9" y="1973" width="0.2" height="15.0" fill="rgb(233,148,3)" rx="2" ry="2" />
<text  x="1012.95" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="525.6" y="1957" width="0.2" height="15.0" fill="rgb(232,125,20)" rx="2" ry="2" />
<text  x="528.63" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="542.0" y="1733" width="0.2" height="15.0" fill="rgb(205,159,54)" rx="2" ry="2" />
<text  x="544.98" y="1743.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="883.5" y="1877" width="0.2" height="15.0" fill="rgb(241,199,41)" rx="2" ry="2" />
<text  x="886.53" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="615.8" y="1589" width="0.2" height="15.0" fill="rgb(239,60,30)" rx="2" ry="2" />
<text  x="618.75" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="462.4" y="1845" width="0.2" height="15.0" fill="rgb(247,54,40)" rx="2" ry="2" />
<text  x="465.42" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (5 samples, 0.08%)</title><rect x="658.0" y="2037" width="1.0" height="15.0" fill="rgb(213,34,11)" rx="2" ry="2" />
<text  x="661.02" y="2047.5" ></text>
</g>
<g >
<title>SYSC_getpeername (14 samples, 0.24%)</title><rect x="672.2" y="1877" width="2.8" height="15.0" fill="rgb(251,95,37)" rx="2" ry="2" />
<text  x="675.18" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="380.7" y="1925" width="1.2" height="15.0" fill="rgb(223,208,29)" rx="2" ry="2" />
<text  x="383.67" y="1935.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (4 samples, 0.07%)</title><rect x="963.9" y="2005" width="0.8" height="15.0" fill="rgb(211,78,2)" rx="2" ry="2" />
<text  x="966.89" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="704.5" y="1701" width="0.2" height="15.0" fill="rgb(216,102,1)" rx="2" ry="2" />
<text  x="707.48" y="1711.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.6" y="1957" width="0.2" height="15.0" fill="rgb(243,70,26)" rx="2" ry="2" />
<text  x="943.56" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="252.7" y="1925" width="0.4" height="15.0" fill="rgb(223,131,10)" rx="2" ry="2" />
<text  x="255.66" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (2 samples, 0.03%)</title><rect x="858.2" y="1973" width="0.4" height="15.0" fill="rgb(213,172,41)" rx="2" ry="2" />
<text  x="861.21" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="172.9" y="2005" width="0.2" height="15.0" fill="rgb(244,215,4)" rx="2" ry="2" />
<text  x="175.90" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (3 samples, 0.05%)</title><rect x="962.3" y="2037" width="0.6" height="15.0" fill="rgb(225,94,40)" rx="2" ry="2" />
<text  x="965.29" y="2047.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="124.3" y="1813" width="0.2" height="15.0" fill="rgb(249,133,24)" rx="2" ry="2" />
<text  x="127.25" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="134.4" y="1845" width="0.2" height="15.0" fill="rgb(248,123,42)" rx="2" ry="2" />
<text  x="137.42" y="1855.5" ></text>
</g>
<g >
<title>evict (2 samples, 0.03%)</title><rect x="733.6" y="1733" width="0.4" height="15.0" fill="rgb(217,110,42)" rx="2" ry="2" />
<text  x="736.59" y="1743.5" ></text>
</g>
<g >
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="278.8" y="1877" width="0.4" height="15.0" fill="rgb(210,206,0)" rx="2" ry="2" />
<text  x="281.78" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="32.1" y="1829" width="0.2" height="15.0" fill="rgb(238,191,19)" rx="2" ry="2" />
<text  x="35.13" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="836.7" y="1797" width="0.2" height="15.0" fill="rgb(245,21,17)" rx="2" ry="2" />
<text  x="839.68" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1002.8" y="1973" width="0.2" height="15.0" fill="rgb(218,134,17)" rx="2" ry="2" />
<text  x="1005.77" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="224.1" y="1685" width="0.2" height="15.0" fill="rgb(242,212,49)" rx="2" ry="2" />
<text  x="227.15" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="802.2" y="1557" width="0.2" height="15.0" fill="rgb(234,19,2)" rx="2" ry="2" />
<text  x="805.18" y="1567.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="453.0" y="1813" width="0.2" height="15.0" fill="rgb(235,68,17)" rx="2" ry="2" />
<text  x="456.05" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.30%)</title><rect x="612.2" y="1861" width="3.6" height="15.0" fill="rgb(235,37,36)" rx="2" ry="2" />
<text  x="615.16" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="163.3" y="2005" width="0.2" height="15.0" fill="rgb(225,44,46)" rx="2" ry="2" />
<text  x="166.33" y="2015.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.07%)</title><rect x="780.1" y="1605" width="0.7" height="15.0" fill="rgb(242,19,12)" rx="2" ry="2" />
<text  x="783.05" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (2 samples, 0.03%)</title><rect x="162.1" y="2005" width="0.4" height="15.0" fill="rgb(236,139,36)" rx="2" ry="2" />
<text  x="165.14" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="453.8" y="1925" width="0.2" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="456.85" y="1935.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.6" y="1973" width="0.2" height="15.0" fill="rgb(220,38,15)" rx="2" ry="2" />
<text  x="943.56" y="1983.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="92.1" y="1941" width="0.2" height="15.0" fill="rgb(242,28,25)" rx="2" ry="2" />
<text  x="95.15" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="407.8" y="1877" width="0.2" height="15.0" fill="rgb(206,111,5)" rx="2" ry="2" />
<text  x="410.79" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="40.1" y="1797" width="0.2" height="15.0" fill="rgb(248,81,52)" rx="2" ry="2" />
<text  x="43.11" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="615.8" y="1685" width="0.2" height="15.0" fill="rgb(209,208,33)" rx="2" ry="2" />
<text  x="618.75" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="276.2" y="1829" width="0.2" height="15.0" fill="rgb(230,155,19)" rx="2" ry="2" />
<text  x="279.19" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="509.5" y="2037" width="0.2" height="15.0" fill="rgb(206,19,27)" rx="2" ry="2" />
<text  x="512.48" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="104.5" y="1749" width="18.6" height="15.0" fill="rgb(225,13,2)" rx="2" ry="2" />
<text  x="107.51" y="1759.5" ></text>
</g>
<g >
<title>kfree (15 samples, 0.25%)</title><rect x="1106.5" y="1445" width="2.9" height="15.0" fill="rgb(242,140,13)" rx="2" ry="2" />
<text  x="1109.45" y="1455.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="285.6" y="1765" width="0.4" height="15.0" fill="rgb(231,3,31)" rx="2" ry="2" />
<text  x="288.56" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="832.3" y="1813" width="0.2" height="15.0" fill="rgb(232,70,44)" rx="2" ry="2" />
<text  x="835.29" y="1823.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="16.8" y="1813" width="0.2" height="15.0" fill="rgb(219,200,13)" rx="2" ry="2" />
<text  x="19.78" y="1823.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="462.6" y="1941" width="0.4" height="15.0" fill="rgb(247,148,6)" rx="2" ry="2" />
<text  x="465.62" y="1951.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="20.6" y="1829" width="0.2" height="15.0" fill="rgb(213,153,42)" rx="2" ry="2" />
<text  x="23.57" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="863.2" y="1909" width="0.2" height="15.0" fill="rgb(254,228,15)" rx="2" ry="2" />
<text  x="866.20" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="900.9" y="2037" width="0.2" height="15.0" fill="rgb(253,40,6)" rx="2" ry="2" />
<text  x="903.88" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="746.2" y="1589" width="0.4" height="15.0" fill="rgb(241,1,10)" rx="2" ry="2" />
<text  x="749.15" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="211.4" y="1941" width="0.2" height="15.0" fill="rgb(233,114,6)" rx="2" ry="2" />
<text  x="214.39" y="1951.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.14%)</title><rect x="1083.9" y="1925" width="1.6" height="15.0" fill="rgb(209,209,44)" rx="2" ry="2" />
<text  x="1086.92" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (71 samples, 1.20%)</title><rect x="144.8" y="1941" width="14.1" height="15.0" fill="rgb(232,185,42)" rx="2" ry="2" />
<text  x="147.79" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="225.9" y="1573" width="0.2" height="15.0" fill="rgb(217,38,34)" rx="2" ry="2" />
<text  x="228.94" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="350.6" y="2021" width="0.2" height="15.0" fill="rgb(251,32,3)" rx="2" ry="2" />
<text  x="353.56" y="2031.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="34.9" y="1973" width="0.6" height="15.0" fill="rgb(244,195,37)" rx="2" ry="2" />
<text  x="37.92" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="472.8" y="1893" width="0.2" height="15.0" fill="rgb(243,129,41)" rx="2" ry="2" />
<text  x="475.79" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="865.4" y="1973" width="0.8" height="15.0" fill="rgb(240,138,4)" rx="2" ry="2" />
<text  x="868.39" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (3 samples, 0.05%)</title><rect x="37.3" y="1973" width="0.6" height="15.0" fill="rgb(223,31,32)" rx="2" ry="2" />
<text  x="40.32" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="577.3" y="1669" width="0.2" height="15.0" fill="rgb(211,47,47)" rx="2" ry="2" />
<text  x="580.27" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="97.9" y="1797" width="0.2" height="15.0" fill="rgb(233,66,0)" rx="2" ry="2" />
<text  x="100.93" y="1807.5" ></text>
</g>
<g >
<title>__fdget (23 samples, 0.39%)</title><rect x="448.7" y="1973" width="4.5" height="15.0" fill="rgb(205,180,32)" rx="2" ry="2" />
<text  x="451.66" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="542.0" y="1493" width="0.2" height="15.0" fill="rgb(249,227,22)" rx="2" ry="2" />
<text  x="544.98" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="858.6" y="1749" width="0.2" height="15.0" fill="rgb(208,126,54)" rx="2" ry="2" />
<text  x="861.61" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1000.2" y="1957" width="0.2" height="15.0" fill="rgb(208,57,27)" rx="2" ry="2" />
<text  x="1003.18" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="412.0" y="1925" width="0.4" height="15.0" fill="rgb(240,121,44)" rx="2" ry="2" />
<text  x="414.97" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="912.6" y="1829" width="0.2" height="15.0" fill="rgb(213,116,41)" rx="2" ry="2" />
<text  x="915.65" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="996.4" y="1765" width="0.2" height="15.0" fill="rgb(224,138,39)" rx="2" ry="2" />
<text  x="999.39" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="462.2" y="1829" width="0.2" height="15.0" fill="rgb(222,112,42)" rx="2" ry="2" />
<text  x="465.22" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="78.4" y="1733" width="0.2" height="15.0" fill="rgb(231,18,23)" rx="2" ry="2" />
<text  x="81.39" y="1743.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="68.2" y="1861" width="0.2" height="15.0" fill="rgb(220,133,54)" rx="2" ry="2" />
<text  x="71.22" y="1871.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="247.1" y="1701" width="0.2" height="15.0" fill="rgb(216,45,8)" rx="2" ry="2" />
<text  x="250.08" y="1711.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="513.1" y="1909" width="0.4" height="15.0" fill="rgb(237,0,9)" rx="2" ry="2" />
<text  x="516.07" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="939.8" y="1877" width="0.2" height="15.0" fill="rgb(217,215,30)" rx="2" ry="2" />
<text  x="942.76" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1126.8" y="1781" width="0.2" height="15.0" fill="rgb(206,198,35)" rx="2" ry="2" />
<text  x="1129.79" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="247.1" y="1989" width="0.2" height="15.0" fill="rgb(220,17,5)" rx="2" ry="2" />
<text  x="250.08" y="1999.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="930.2" y="1893" width="0.2" height="15.0" fill="rgb(223,11,40)" rx="2" ry="2" />
<text  x="933.19" y="1903.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="736.4" y="1669" width="0.2" height="15.0" fill="rgb(222,26,19)" rx="2" ry="2" />
<text  x="739.38" y="1679.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="144.8" y="1925" width="0.2" height="15.0" fill="rgb(254,54,22)" rx="2" ry="2" />
<text  x="147.79" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="453.0" y="1925" width="0.2" height="15.0" fill="rgb(211,86,43)" rx="2" ry="2" />
<text  x="456.05" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1145.3" y="1877" width="0.2" height="15.0" fill="rgb(212,97,9)" rx="2" ry="2" />
<text  x="1148.34" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="130.0" y="1941" width="0.4" height="15.0" fill="rgb(212,166,33)" rx="2" ry="2" />
<text  x="133.03" y="1951.5" ></text>
</g>
<g >
<title>_copy_to_iter (27 samples, 0.46%)</title><rect x="1091.1" y="1909" width="5.4" height="15.0" fill="rgb(244,23,36)" rx="2" ry="2" />
<text  x="1094.10" y="1919.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="932.2" y="1893" width="0.2" height="15.0" fill="rgb(243,229,39)" rx="2" ry="2" />
<text  x="935.19" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="116.7" y="37" width="0.2" height="15.0" fill="rgb(232,196,5)" rx="2" ry="2" />
<text  x="119.67" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (101 samples, 1.71%)</title><rect x="509.9" y="2021" width="20.1" height="15.0" fill="rgb(237,9,11)" rx="2" ry="2" />
<text  x="512.87" y="2031.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="435.9" y="1701" width="0.2" height="15.0" fill="rgb(230,43,32)" rx="2" ry="2" />
<text  x="438.90" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="16.8" y="1861" width="0.2" height="15.0" fill="rgb(212,56,38)" rx="2" ry="2" />
<text  x="19.78" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="78.4" y="1925" width="0.2" height="15.0" fill="rgb(242,73,43)" rx="2" ry="2" />
<text  x="81.39" y="1935.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (1 samples, 0.02%)</title><rect x="32.5" y="1989" width="0.2" height="15.0" fill="rgb(251,125,5)" rx="2" ry="2" />
<text  x="35.53" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="974.9" y="1973" width="0.2" height="15.0" fill="rgb(231,29,31)" rx="2" ry="2" />
<text  x="977.86" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="462.4" y="1669" width="0.2" height="15.0" fill="rgb(248,116,33)" rx="2" ry="2" />
<text  x="465.42" y="1679.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="453.8" y="1621" width="0.2" height="15.0" fill="rgb(212,207,6)" rx="2" ry="2" />
<text  x="456.85" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="577.3" y="1813" width="0.2" height="15.0" fill="rgb(232,40,50)" rx="2" ry="2" />
<text  x="580.27" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="57.9" y="1957" width="1.2" height="15.0" fill="rgb(244,35,6)" rx="2" ry="2" />
<text  x="60.85" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="336.2" y="1909" width="0.2" height="15.0" fill="rgb(211,219,33)" rx="2" ry="2" />
<text  x="339.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1178.0" y="1717" width="0.2" height="15.0" fill="rgb(245,54,7)" rx="2" ry="2" />
<text  x="1181.04" y="1727.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.1" y="1749" width="0.2" height="15.0" fill="rgb(232,45,42)" rx="2" ry="2" />
<text  x="126.06" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="725.6" y="1685" width="0.2" height="15.0" fill="rgb(246,211,49)" rx="2" ry="2" />
<text  x="728.62" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_reqsk_destructor (1 samples, 0.02%)</title><rect x="379.5" y="1925" width="0.2" height="15.0" fill="rgb(253,17,10)" rx="2" ry="2" />
<text  x="382.47" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="999.0" y="1941" width="0.2" height="15.0" fill="rgb(217,34,53)" rx="2" ry="2" />
<text  x="1001.98" y="1951.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (4 samples, 0.07%)</title><rect x="756.9" y="1733" width="0.8" height="15.0" fill="rgb(252,145,41)" rx="2" ry="2" />
<text  x="759.92" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="626.9" y="1973" width="0.4" height="15.0" fill="rgb(219,70,34)" rx="2" ry="2" />
<text  x="629.92" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="157.0" y="1573" width="0.2" height="15.0" fill="rgb(211,229,29)" rx="2" ry="2" />
<text  x="159.95" y="1583.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="696.1" y="1925" width="1.6" height="15.0" fill="rgb(226,224,42)" rx="2" ry="2" />
<text  x="699.11" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="998.4" y="1957" width="0.2" height="15.0" fill="rgb(241,113,32)" rx="2" ry="2" />
<text  x="1001.38" y="1967.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="522.2" y="1925" width="0.2" height="15.0" fill="rgb(210,178,52)" rx="2" ry="2" />
<text  x="525.24" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="161.1" y="1957" width="0.2" height="15.0" fill="rgb(227,193,21)" rx="2" ry="2" />
<text  x="164.14" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="972.7" y="1957" width="0.2" height="15.0" fill="rgb(210,111,52)" rx="2" ry="2" />
<text  x="975.66" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="542.0" y="1861" width="0.2" height="15.0" fill="rgb(252,178,26)" rx="2" ry="2" />
<text  x="544.98" y="1871.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="695.3" y="1877" width="0.8" height="15.0" fill="rgb(230,226,9)" rx="2" ry="2" />
<text  x="698.31" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="412.0" y="1957" width="0.4" height="15.0" fill="rgb(244,195,30)" rx="2" ry="2" />
<text  x="414.97" y="1967.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="998.2" y="1957" width="0.2" height="15.0" fill="rgb(214,61,38)" rx="2" ry="2" />
<text  x="1001.19" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="274.4" y="1765" width="0.2" height="15.0" fill="rgb(227,97,21)" rx="2" ry="2" />
<text  x="277.39" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="223.9" y="1797" width="0.2" height="15.0" fill="rgb(220,62,10)" rx="2" ry="2" />
<text  x="226.95" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="53.5" y="1909" width="0.2" height="15.0" fill="rgb(234,187,38)" rx="2" ry="2" />
<text  x="56.47" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="291.1" y="1397" width="0.2" height="15.0" fill="rgb(218,136,33)" rx="2" ry="2" />
<text  x="294.14" y="1407.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="846.8" y="1829" width="0.2" height="15.0" fill="rgb(244,38,29)" rx="2" ry="2" />
<text  x="849.85" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="67.8" y="1909" width="0.6" height="15.0" fill="rgb(254,191,32)" rx="2" ry="2" />
<text  x="70.82" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="817.5" y="1557" width="0.2" height="15.0" fill="rgb(222,35,26)" rx="2" ry="2" />
<text  x="820.54" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="890.7" y="1909" width="0.6" height="15.0" fill="rgb(244,72,20)" rx="2" ry="2" />
<text  x="893.71" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (2 samples, 0.03%)</title><rect x="1012.9" y="1973" width="0.4" height="15.0" fill="rgb(250,118,44)" rx="2" ry="2" />
<text  x="1015.94" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="597" width="14.0" height="15.0" fill="rgb(210,182,48)" rx="2" ry="2" />
<text  x="108.11" y="607.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="378.3" y="1925" width="1.2" height="15.0" fill="rgb(219,172,13)" rx="2" ry="2" />
<text  x="381.28" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (3 samples, 0.05%)</title><rect x="79.6" y="1941" width="0.6" height="15.0" fill="rgb(227,24,25)" rx="2" ry="2" />
<text  x="82.59" y="1951.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="246.9" y="1669" width="0.2" height="15.0" fill="rgb(249,210,5)" rx="2" ry="2" />
<text  x="249.88" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.8" y="1845" width="0.2" height="15.0" fill="rgb(225,157,43)" rx="2" ry="2" />
<text  x="146.79" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="290.7" y="1541" width="0.8" height="15.0" fill="rgb(253,16,43)" rx="2" ry="2" />
<text  x="293.74" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="386.9" y="1941" width="0.1" height="15.0" fill="rgb(237,148,32)" rx="2" ry="2" />
<text  x="389.85" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="892.1" y="1861" width="0.2" height="15.0" fill="rgb(215,45,40)" rx="2" ry="2" />
<text  x="895.11" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="757.3" y="1717" width="0.4" height="15.0" fill="rgb(245,51,38)" rx="2" ry="2" />
<text  x="760.32" y="1727.5" ></text>
</g>
<g >
<title>__mutex_init (1 samples, 0.02%)</title><rect x="399.4" y="1909" width="0.2" height="15.0" fill="rgb(207,160,18)" rx="2" ry="2" />
<text  x="402.41" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="576.9" y="1781" width="0.2" height="15.0" fill="rgb(250,144,15)" rx="2" ry="2" />
<text  x="579.87" y="1791.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (2 samples, 0.03%)</title><rect x="79.2" y="1941" width="0.4" height="15.0" fill="rgb(244,202,34)" rx="2" ry="2" />
<text  x="82.19" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="545.4" y="1909" width="0.8" height="15.0" fill="rgb(226,201,25)" rx="2" ry="2" />
<text  x="548.37" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="268.4" y="1797" width="0.2" height="15.0" fill="rgb(205,5,11)" rx="2" ry="2" />
<text  x="271.41" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="149.8" y="1845" width="0.2" height="15.0" fill="rgb(211,142,6)" rx="2" ry="2" />
<text  x="152.77" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="117.7" y="37" width="0.6" height="15.0" fill="rgb(243,66,43)" rx="2" ry="2" />
<text  x="120.67" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (15 samples, 0.25%)</title><rect x="515.9" y="1989" width="2.9" height="15.0" fill="rgb(246,183,49)" rx="2" ry="2" />
<text  x="518.86" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="655.2" y="2005" width="0.2" height="15.0" fill="rgb(213,124,5)" rx="2" ry="2" />
<text  x="658.23" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1125" width="14.4" height="15.0" fill="rgb(213,19,39)" rx="2" ry="2" />
<text  x="108.11" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (9 samples, 0.15%)</title><rect x="618.1" y="1989" width="1.8" height="15.0" fill="rgb(218,196,18)" rx="2" ry="2" />
<text  x="621.14" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="481.0" y="1717" width="0.2" height="15.0" fill="rgb(212,11,51)" rx="2" ry="2" />
<text  x="483.96" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="39.7" y="2005" width="0.2" height="15.0" fill="rgb(205,24,18)" rx="2" ry="2" />
<text  x="42.71" y="2015.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="526.2" y="1989" width="0.4" height="15.0" fill="rgb(228,44,32)" rx="2" ry="2" />
<text  x="529.23" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1119.8" y="1589" width="0.2" height="15.0" fill="rgb(250,192,44)" rx="2" ry="2" />
<text  x="1122.81" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (2 samples, 0.03%)</title><rect x="900.5" y="2005" width="0.4" height="15.0" fill="rgb(238,192,2)" rx="2" ry="2" />
<text  x="903.48" y="2015.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="279.2" y="1845" width="0.2" height="15.0" fill="rgb(252,187,4)" rx="2" ry="2" />
<text  x="282.18" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1130.4" y="1781" width="0.2" height="15.0" fill="rgb(229,143,8)" rx="2" ry="2" />
<text  x="1133.38" y="1791.5" ></text>
</g>
<g >
<title>move_addr_to_user (10 samples, 0.17%)</title><rect x="595.4" y="1861" width="2.0" height="15.0" fill="rgb(219,61,53)" rx="2" ry="2" />
<text  x="598.41" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="842.9" y="1893" width="0.2" height="15.0" fill="rgb(252,206,37)" rx="2" ry="2" />
<text  x="845.86" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="145.0" y="1925" width="0.2" height="15.0" fill="rgb(244,176,49)" rx="2" ry="2" />
<text  x="147.99" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="404.6" y="1653" width="0.2" height="15.0" fill="rgb(238,214,40)" rx="2" ry="2" />
<text  x="407.60" y="1663.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="225.7" y="1781" width="0.2" height="15.0" fill="rgb(233,223,10)" rx="2" ry="2" />
<text  x="228.74" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (19 samples, 0.32%)</title><rect x="543.4" y="1941" width="3.8" height="15.0" fill="rgb(239,64,25)" rx="2" ry="2" />
<text  x="546.37" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="247.1" y="1861" width="0.2" height="15.0" fill="rgb(238,8,45)" rx="2" ry="2" />
<text  x="250.08" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="482.6" y="1829" width="0.6" height="15.0" fill="rgb(225,139,43)" rx="2" ry="2" />
<text  x="485.56" y="1839.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="680.4" y="2005" width="0.2" height="15.0" fill="rgb(253,226,12)" rx="2" ry="2" />
<text  x="683.35" y="2015.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (3 samples, 0.05%)</title><rect x="523.6" y="1973" width="0.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="526.63" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="453.0" y="1749" width="0.2" height="15.0" fill="rgb(226,1,2)" rx="2" ry="2" />
<text  x="456.05" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="144.4" y="1909" width="0.2" height="15.0" fill="rgb(250,175,35)" rx="2" ry="2" />
<text  x="147.39" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (84 samples, 1.42%)</title><rect x="662.2" y="2021" width="16.8" height="15.0" fill="rgb(252,183,41)" rx="2" ry="2" />
<text  x="665.21" y="2031.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="756.3" y="1733" width="0.6" height="15.0" fill="rgb(231,158,35)" rx="2" ry="2" />
<text  x="759.32" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="885.7" y="1765" width="0.2" height="15.0" fill="rgb(252,114,41)" rx="2" ry="2" />
<text  x="888.73" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1180.8" y="1797" width="0.2" height="15.0" fill="rgb(232,83,10)" rx="2" ry="2" />
<text  x="1183.83" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="80.6" y="1941" width="0.2" height="15.0" fill="rgb(248,102,14)" rx="2" ry="2" />
<text  x="83.58" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="386.7" y="1781" width="0.2" height="15.0" fill="rgb(216,190,3)" rx="2" ry="2" />
<text  x="389.65" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1134.2" y="2005" width="0.2" height="15.0" fill="rgb(206,105,34)" rx="2" ry="2" />
<text  x="1137.17" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.6" y="1861" width="0.2" height="15.0" fill="rgb(252,222,53)" rx="2" ry="2" />
<text  x="146.59" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="925.2" y="1909" width="0.4" height="15.0" fill="rgb(240,209,46)" rx="2" ry="2" />
<text  x="928.21" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.4" y="2005" width="0.2" height="15.0" fill="rgb(233,123,31)" rx="2" ry="2" />
<text  x="923.42" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="892.1" y="1749" width="0.2" height="15.0" fill="rgb(253,3,29)" rx="2" ry="2" />
<text  x="895.11" y="1759.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="673.0" y="1861" width="0.2" height="15.0" fill="rgb(241,30,8)" rx="2" ry="2" />
<text  x="675.98" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="884.9" y="1925" width="0.2" height="15.0" fill="rgb(212,91,24)" rx="2" ry="2" />
<text  x="887.93" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="781.8" y="1589" width="0.6" height="15.0" fill="rgb(227,41,53)" rx="2" ry="2" />
<text  x="784.85" y="1599.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (17 samples, 0.29%)</title><rect x="1116.6" y="1973" width="3.4" height="15.0" fill="rgb(246,10,17)" rx="2" ry="2" />
<text  x="1119.62" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="277.4" y="1845" width="0.2" height="15.0" fill="rgb(205,187,1)" rx="2" ry="2" />
<text  x="280.38" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="832.3" y="1685" width="0.2" height="15.0" fill="rgb(215,168,9)" rx="2" ry="2" />
<text  x="835.29" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="117.7" y="53" width="0.6" height="15.0" fill="rgb(221,49,22)" rx="2" ry="2" />
<text  x="120.67" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="836.7" y="1893" width="0.2" height="15.0" fill="rgb(247,143,27)" rx="2" ry="2" />
<text  x="839.68" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="75.6" y="1877" width="0.6" height="15.0" fill="rgb(215,57,21)" rx="2" ry="2" />
<text  x="78.60" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1120.4" y="1925" width="0.2" height="15.0" fill="rgb(253,120,10)" rx="2" ry="2" />
<text  x="1123.41" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="104.7" y="1573" width="16.8" height="15.0" fill="rgb(213,228,12)" rx="2" ry="2" />
<text  x="107.71" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.08%)</title><rect x="482.2" y="1973" width="1.0" height="15.0" fill="rgb(242,132,19)" rx="2" ry="2" />
<text  x="485.16" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (2 samples, 0.03%)</title><rect x="37.9" y="1973" width="0.4" height="15.0" fill="rgb(226,139,48)" rx="2" ry="2" />
<text  x="40.91" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="53.5" y="1861" width="0.2" height="15.0" fill="rgb(211,136,52)" rx="2" ry="2" />
<text  x="56.47" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="655.2" y="2021" width="0.2" height="15.0" fill="rgb(245,79,9)" rx="2" ry="2" />
<text  x="658.23" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="158.3" y="1845" width="0.2" height="15.0" fill="rgb(235,100,19)" rx="2" ry="2" />
<text  x="161.35" y="1855.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="675.4" y="1637" width="0.2" height="15.0" fill="rgb(227,183,31)" rx="2" ry="2" />
<text  x="678.37" y="1647.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="887.1" y="1925" width="0.4" height="15.0" fill="rgb(222,84,17)" rx="2" ry="2" />
<text  x="890.12" y="1935.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="743.8" y="1653" width="0.2" height="15.0" fill="rgb(238,13,24)" rx="2" ry="2" />
<text  x="746.76" y="1663.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.17%)</title><rect x="18.8" y="1989" width="2.0" height="15.0" fill="rgb(250,191,21)" rx="2" ry="2" />
<text  x="21.77" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="379.1" y="1893" width="0.4" height="15.0" fill="rgb(216,75,24)" rx="2" ry="2" />
<text  x="382.07" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="926.0" y="1925" width="0.8" height="15.0" fill="rgb(219,46,13)" rx="2" ry="2" />
<text  x="929.01" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="630.1" y="1957" width="0.2" height="15.0" fill="rgb(236,120,26)" rx="2" ry="2" />
<text  x="633.11" y="1967.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1097.5" y="1893" width="0.4" height="15.0" fill="rgb(253,216,1)" rx="2" ry="2" />
<text  x="1100.48" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::close (3 samples, 0.05%)</title><rect x="854.0" y="1941" width="0.6" height="15.0" fill="rgb(217,6,38)" rx="2" ry="2" />
<text  x="857.03" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1188.4" y="1909" width="0.8" height="15.0" fill="rgb(244,59,48)" rx="2" ry="2" />
<text  x="1191.40" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="890.9" y="1861" width="0.4" height="15.0" fill="rgb(211,195,36)" rx="2" ry="2" />
<text  x="893.91" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1140.8" y="2021" width="0.1" height="15.0" fill="rgb(212,222,16)" rx="2" ry="2" />
<text  x="1143.75" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="58.7" y="1909" width="0.4" height="15.0" fill="rgb(235,197,37)" rx="2" ry="2" />
<text  x="61.65" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.1" y="1525" width="0.2" height="15.0" fill="rgb(217,52,47)" rx="2" ry="2" />
<text  x="124.06" y="1535.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="1188.4" y="1957" width="0.8" height="15.0" fill="rgb(247,153,25)" rx="2" ry="2" />
<text  x="1191.40" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="851.2" y="1893" width="0.6" height="15.0" fill="rgb(251,15,48)" rx="2" ry="2" />
<text  x="854.23" y="1903.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="623.5" y="1989" width="0.2" height="15.0" fill="rgb(216,83,10)" rx="2" ry="2" />
<text  x="626.53" y="1999.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="615.4" y="1829" width="0.4" height="15.0" fill="rgb(207,24,46)" rx="2" ry="2" />
<text  x="618.35" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onAccepted (1 samples, 0.02%)</title><rect x="140.0" y="2005" width="0.2" height="15.0" fill="rgb(218,142,46)" rx="2" ry="2" />
<text  x="143.00" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="237.1" y="2005" width="0.2" height="15.0" fill="rgb(210,206,16)" rx="2" ry="2" />
<text  x="240.11" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="336.2" y="1733" width="0.2" height="15.0" fill="rgb(230,129,33)" rx="2" ry="2" />
<text  x="339.20" y="1743.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1063.6" y="1893" width="0.2" height="15.0" fill="rgb(249,113,12)" rx="2" ry="2" />
<text  x="1066.59" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="675.0" y="1861" width="0.6" height="15.0" fill="rgb(248,156,14)" rx="2" ry="2" />
<text  x="677.97" y="1871.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_cpu (1 samples, 0.02%)</title><rect x="264.4" y="1749" width="0.2" height="15.0" fill="rgb(217,21,47)" rx="2" ry="2" />
<text  x="267.42" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="586.0" y="1813" width="0.2" height="15.0" fill="rgb(246,104,45)" rx="2" ry="2" />
<text  x="589.04" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="17.6" y="1797" width="0.2" height="15.0" fill="rgb(211,137,44)" rx="2" ry="2" />
<text  x="20.58" y="1807.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="813.9" y="1605" width="0.4" height="15.0" fill="rgb(218,183,28)" rx="2" ry="2" />
<text  x="816.95" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="1131.8" y="2005" width="0.8" height="15.0" fill="rgb(249,94,14)" rx="2" ry="2" />
<text  x="1134.78" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="38.5" y="1941" width="0.2" height="15.0" fill="rgb(218,72,43)" rx="2" ry="2" />
<text  x="41.51" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (3 samples, 0.05%)</title><rect x="963.3" y="2037" width="0.6" height="15.0" fill="rgb(209,122,8)" rx="2" ry="2" />
<text  x="966.29" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="836.7" y="1781" width="0.2" height="15.0" fill="rgb(254,17,28)" rx="2" ry="2" />
<text  x="839.68" y="1791.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7 samples, 0.12%)</title><rect x="939.2" y="1957" width="1.4" height="15.0" fill="rgb(222,25,53)" rx="2" ry="2" />
<text  x="942.17" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="373" width="14.0" height="15.0" fill="rgb(219,149,50)" rx="2" ry="2" />
<text  x="108.11" y="383.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="462.4" y="1749" width="0.2" height="15.0" fill="rgb(249,120,47)" rx="2" ry="2" />
<text  x="465.42" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="633.1" y="1989" width="1.4" height="15.0" fill="rgb(221,17,22)" rx="2" ry="2" />
<text  x="636.10" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="157.0" y="1445" width="0.2" height="15.0" fill="rgb(213,27,1)" rx="2" ry="2" />
<text  x="159.95" y="1455.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1120.0" y="1989" width="0.4" height="15.0" fill="rgb(233,63,34)" rx="2" ry="2" />
<text  x="1123.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="97.9" y="1749" width="0.2" height="15.0" fill="rgb(213,81,48)" rx="2" ry="2" />
<text  x="100.93" y="1759.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="229.9" y="1941" width="0.2" height="15.0" fill="rgb(232,162,4)" rx="2" ry="2" />
<text  x="232.93" y="1951.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="193.6" y="2021" width="0.2" height="15.0" fill="rgb(236,50,24)" rx="2" ry="2" />
<text  x="196.64" y="2031.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="74.8" y="1877" width="0.6" height="15.0" fill="rgb(239,62,36)" rx="2" ry="2" />
<text  x="77.80" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="67.2" y="1781" width="0.2" height="15.0" fill="rgb(239,202,40)" rx="2" ry="2" />
<text  x="70.23" y="1791.5" ></text>
</g>
<g >
<title>__slab_free (10 samples, 0.17%)</title><rect x="1065.8" y="1877" width="2.0" height="15.0" fill="rgb(228,147,41)" rx="2" ry="2" />
<text  x="1068.78" y="1887.5" ></text>
</g>
<g >
<title>rb_erase_cached (8 samples, 0.14%)</title><rect x="471.4" y="1957" width="1.6" height="15.0" fill="rgb(236,65,36)" rx="2" ry="2" />
<text  x="474.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="913.6" y="2037" width="0.2" height="15.0" fill="rgb(242,91,30)" rx="2" ry="2" />
<text  x="916.64" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="336.2" y="1797" width="0.2" height="15.0" fill="rgb(217,136,26)" rx="2" ry="2" />
<text  x="339.20" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="602.8" y="1909" width="0.2" height="15.0" fill="rgb(246,150,29)" rx="2" ry="2" />
<text  x="605.79" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="160.3" y="1861" width="0.2" height="15.0" fill="rgb(227,7,34)" rx="2" ry="2" />
<text  x="163.34" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="149.8" y="1813" width="0.2" height="15.0" fill="rgb(208,122,6)" rx="2" ry="2" />
<text  x="152.77" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="982.0" y="1829" width="0.2" height="15.0" fill="rgb(209,194,14)" rx="2" ry="2" />
<text  x="985.03" y="1839.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="746.0" y="1797" width="0.2" height="15.0" fill="rgb(208,18,51)" rx="2" ry="2" />
<text  x="748.95" y="1807.5" ></text>
</g>
<g >
<title>ep_poll (101 samples, 1.71%)</title><rect x="488.3" y="1973" width="20.2" height="15.0" fill="rgb(243,120,3)" rx="2" ry="2" />
<text  x="491.34" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="482.8" y="1669" width="0.2" height="15.0" fill="rgb(223,90,0)" rx="2" ry="2" />
<text  x="485.76" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="615.8" y="1717" width="0.2" height="15.0" fill="rgb(219,119,27)" rx="2" ry="2" />
<text  x="618.75" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="938.6" y="1973" width="0.2" height="15.0" fill="rgb(251,154,19)" rx="2" ry="2" />
<text  x="941.57" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (186 samples, 3.14%)</title><rect x="281.8" y="1829" width="37.1" height="15.0" fill="rgb(228,49,44)" rx="2" ry="2" />
<text  x="284.77" y="1839.5" >__t..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (4 samples, 0.07%)</title><rect x="115.1" y="69" width="0.8" height="15.0" fill="rgb(228,70,52)" rx="2" ry="2" />
<text  x="118.08" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="938.8" y="1957" width="0.2" height="15.0" fill="rgb(208,155,0)" rx="2" ry="2" />
<text  x="941.77" y="1967.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="983.8" y="1941" width="2.4" height="15.0" fill="rgb(237,92,11)" rx="2" ry="2" />
<text  x="986.83" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="116.3" y="37" width="0.2" height="15.0" fill="rgb(207,227,2)" rx="2" ry="2" />
<text  x="119.28" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="1120.6" y="2037" width="0.4" height="15.0" fill="rgb(225,221,26)" rx="2" ry="2" />
<text  x="1123.61" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1126.8" y="1765" width="0.2" height="15.0" fill="rgb(254,212,33)" rx="2" ry="2" />
<text  x="1129.79" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="160.3" y="1893" width="0.2" height="15.0" fill="rgb(232,115,39)" rx="2" ry="2" />
<text  x="163.34" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="412.0" y="1829" width="0.4" height="15.0" fill="rgb(230,156,36)" rx="2" ry="2" />
<text  x="414.97" y="1839.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="534.2" y="1685" width="0.2" height="15.0" fill="rgb(219,204,11)" rx="2" ry="2" />
<text  x="537.20" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (82 samples, 1.39%)</title><rect x="681.6" y="1957" width="16.3" height="15.0" fill="rgb(227,72,30)" rx="2" ry="2" />
<text  x="684.55" y="1967.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="799.4" y="1509" width="0.2" height="15.0" fill="rgb(219,154,50)" rx="2" ry="2" />
<text  x="802.39" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="51.9" y="1973" width="0.2" height="15.0" fill="rgb(242,79,27)" rx="2" ry="2" />
<text  x="54.87" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="919.2" y="2005" width="0.6" height="15.0" fill="rgb(207,59,11)" rx="2" ry="2" />
<text  x="922.23" y="2015.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="627.7" y="1941" width="0.2" height="15.0" fill="rgb(248,83,5)" rx="2" ry="2" />
<text  x="630.72" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="412.0" y="1749" width="0.2" height="15.0" fill="rgb(229,157,47)" rx="2" ry="2" />
<text  x="414.97" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (48 samples, 0.81%)</title><rect x="1101.7" y="1669" width="9.5" height="15.0" fill="rgb(229,35,1)" rx="2" ry="2" />
<text  x="1104.67" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="955.9" y="1925" width="0.2" height="15.0" fill="rgb(230,154,23)" rx="2" ry="2" />
<text  x="958.91" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (107 samples, 1.81%)</title><rect x="871.8" y="2005" width="21.3" height="15.0" fill="rgb(237,155,25)" rx="2" ry="2" />
<text  x="874.77" y="2015.5" >f..</text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="104.7" y="1285" width="15.6" height="15.0" fill="rgb(254,136,38)" rx="2" ry="2" />
<text  x="107.71" y="1295.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="576.3" y="1989" width="0.8" height="15.0" fill="rgb(224,26,48)" rx="2" ry="2" />
<text  x="579.27" y="1999.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="899.5" y="2005" width="0.2" height="15.0" fill="rgb(243,20,14)" rx="2" ry="2" />
<text  x="902.49" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="748.3" y="1781" width="1.2" height="15.0" fill="rgb(237,7,19)" rx="2" ry="2" />
<text  x="751.35" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (11 samples, 0.19%)</title><rect x="154.6" y="1893" width="2.2" height="15.0" fill="rgb(205,44,35)" rx="2" ry="2" />
<text  x="157.56" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="76.4" y="1765" width="0.2" height="15.0" fill="rgb(217,72,9)" rx="2" ry="2" />
<text  x="79.40" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="480.6" y="1877" width="0.2" height="15.0" fill="rgb(229,21,39)" rx="2" ry="2" />
<text  x="483.56" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="198.8" y="1989" width="0.2" height="15.0" fill="rgb(209,82,19)" rx="2" ry="2" />
<text  x="201.82" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (99 samples, 1.67%)</title><rect x="583.3" y="1973" width="19.7" height="15.0" fill="rgb(250,93,15)" rx="2" ry="2" />
<text  x="586.25" y="1983.5" ></text>
</g>
<g >
<title>syscall (80 samples, 1.35%)</title><rect x="1144.9" y="1973" width="16.0" height="15.0" fill="rgb(241,79,45)" rx="2" ry="2" />
<text  x="1147.94" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (4 samples, 0.07%)</title><rect x="907.9" y="1973" width="0.8" height="15.0" fill="rgb(254,222,7)" rx="2" ry="2" />
<text  x="910.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="693" width="14.0" height="15.0" fill="rgb(215,14,39)" rx="2" ry="2" />
<text  x="108.11" y="703.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="828.3" y="1685" width="0.2" height="15.0" fill="rgb(214,161,34)" rx="2" ry="2" />
<text  x="831.30" y="1695.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1145.3" y="1957" width="0.2" height="15.0" fill="rgb(253,85,0)" rx="2" ry="2" />
<text  x="1148.34" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="644.9" y="1717" width="0.2" height="15.0" fill="rgb(212,69,32)" rx="2" ry="2" />
<text  x="647.86" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="903.9" y="1973" width="0.2" height="15.0" fill="rgb(245,15,5)" rx="2" ry="2" />
<text  x="906.87" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.1" y="1925" width="0.2" height="15.0" fill="rgb(237,38,17)" rx="2" ry="2" />
<text  x="107.11" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.1" y="1957" width="0.2" height="15.0" fill="rgb(240,120,47)" rx="2" ry="2" />
<text  x="576.08" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="758.1" y="1701" width="0.2" height="15.0" fill="rgb(247,20,47)" rx="2" ry="2" />
<text  x="761.12" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="481.2" y="1717" width="0.2" height="15.0" fill="rgb(208,34,24)" rx="2" ry="2" />
<text  x="484.16" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="817.5" y="1509" width="0.2" height="15.0" fill="rgb(215,166,33)" rx="2" ry="2" />
<text  x="820.54" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="665.0" y="1909" width="0.4" height="15.0" fill="rgb(237,68,24)" rx="2" ry="2" />
<text  x="668.00" y="1919.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (1 samples, 0.02%)</title><rect x="359.5" y="1957" width="0.2" height="15.0" fill="rgb(245,228,52)" rx="2" ry="2" />
<text  x="362.53" y="1967.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="57.5" y="1621" width="0.2" height="15.0" fill="rgb(242,204,38)" rx="2" ry="2" />
<text  x="60.46" y="1631.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (24 samples, 0.41%)</title><rect x="1091.5" y="1893" width="4.8" height="15.0" fill="rgb(213,121,13)" rx="2" ry="2" />
<text  x="1094.50" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="678.2" y="2005" width="0.4" height="15.0" fill="rgb(224,174,19)" rx="2" ry="2" />
<text  x="681.16" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="246.9" y="1797" width="0.2" height="15.0" fill="rgb(231,86,3)" rx="2" ry="2" />
<text  x="249.88" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="576.9" y="1765" width="0.2" height="15.0" fill="rgb(242,17,33)" rx="2" ry="2" />
<text  x="579.87" y="1775.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="707.7" y="1973" width="0.4" height="15.0" fill="rgb(222,84,27)" rx="2" ry="2" />
<text  x="710.67" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="600.2" y="1925" width="2.6" height="15.0" fill="rgb(227,46,53)" rx="2" ry="2" />
<text  x="603.20" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (2 samples, 0.03%)</title><rect x="599.8" y="1589" width="0.4" height="15.0" fill="rgb(230,78,0)" rx="2" ry="2" />
<text  x="602.80" y="1599.5" ></text>
</g>
<g >
<title>call_rcu_sched (3 samples, 0.05%)</title><rect x="729.4" y="1797" width="0.6" height="15.0" fill="rgb(224,59,36)" rx="2" ry="2" />
<text  x="732.41" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1180.8" y="1957" width="0.2" height="15.0" fill="rgb(244,161,27)" rx="2" ry="2" />
<text  x="1183.83" y="1967.5" ></text>
</g>
<g >
<title>ip_output (123 samples, 2.08%)</title><rect x="286.0" y="1781" width="24.5" height="15.0" fill="rgb(254,186,21)" rx="2" ry="2" />
<text  x="288.96" y="1791.5" >i..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="881.7" y="1861" width="0.4" height="15.0" fill="rgb(236,11,23)" rx="2" ry="2" />
<text  x="884.74" y="1871.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (30 samples, 0.51%)</title><rect x="320.9" y="1813" width="5.9" height="15.0" fill="rgb(234,218,34)" rx="2" ry="2" />
<text  x="323.85" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="956.5" y="1989" width="0.4" height="15.0" fill="rgb(242,198,14)" rx="2" ry="2" />
<text  x="959.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="104.1" y="1957" width="21.7" height="15.0" fill="rgb(207,87,45)" rx="2" ry="2" />
<text  x="107.11" y="1967.5" >[..</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="80.8" y="1925" width="0.4" height="15.0" fill="rgb(223,87,15)" rx="2" ry="2" />
<text  x="83.78" y="1935.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="672.4" y="1861" width="0.2" height="15.0" fill="rgb(222,157,5)" rx="2" ry="2" />
<text  x="675.38" y="1871.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.02%)</title><rect x="896.5" y="1909" width="0.2" height="15.0" fill="rgb(237,81,13)" rx="2" ry="2" />
<text  x="899.50" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (7 samples, 0.12%)</title><rect x="514.5" y="1989" width="1.4" height="15.0" fill="rgb(221,105,14)" rx="2" ry="2" />
<text  x="517.46" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="645.3" y="1989" width="0.6" height="15.0" fill="rgb(240,188,38)" rx="2" ry="2" />
<text  x="648.26" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="917" width="14.2" height="15.0" fill="rgb(245,206,15)" rx="2" ry="2" />
<text  x="108.11" y="927.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (12 samples, 0.20%)</title><rect x="539.8" y="1989" width="2.4" height="15.0" fill="rgb(248,82,25)" rx="2" ry="2" />
<text  x="542.78" y="1999.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="472.8" y="1877" width="0.2" height="15.0" fill="rgb(218,105,47)" rx="2" ry="2" />
<text  x="475.79" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="462.4" y="1781" width="0.2" height="15.0" fill="rgb(254,26,23)" rx="2" ry="2" />
<text  x="465.42" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="545.2" y="1829" width="0.2" height="15.0" fill="rgb(208,214,13)" rx="2" ry="2" />
<text  x="548.17" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="386.7" y="1605" width="0.2" height="15.0" fill="rgb(208,135,20)" rx="2" ry="2" />
<text  x="389.65" y="1615.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (22 samples, 0.37%)</title><rect x="811.4" y="1653" width="4.3" height="15.0" fill="rgb(231,194,32)" rx="2" ry="2" />
<text  x="814.36" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.5" y="85" width="0.2" height="15.0" fill="rgb(250,108,37)" rx="2" ry="2" />
<text  x="121.47" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="982.0" y="1797" width="0.2" height="15.0" fill="rgb(254,83,18)" rx="2" ry="2" />
<text  x="985.03" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="546.4" y="1829" width="0.8" height="15.0" fill="rgb(219,216,37)" rx="2" ry="2" />
<text  x="549.36" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="224.1" y="1781" width="0.2" height="15.0" fill="rgb(220,221,3)" rx="2" ry="2" />
<text  x="227.15" y="1791.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="934.6" y="1877" width="0.4" height="15.0" fill="rgb(224,108,31)" rx="2" ry="2" />
<text  x="937.58" y="1887.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="10.8" y="1893" width="0.2" height="15.0" fill="rgb(219,225,36)" rx="2" ry="2" />
<text  x="13.80" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="571.5" y="1925" width="0.2" height="15.0" fill="rgb(216,62,5)" rx="2" ry="2" />
<text  x="574.49" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (727 samples, 12.28%)</title><rect x="712.1" y="1957" width="144.9" height="15.0" fill="rgb(215,23,3)" rx="2" ry="2" />
<text  x="715.06" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (1 samples, 0.02%)</title><rect x="75.4" y="1941" width="0.2" height="15.0" fill="rgb(248,147,14)" rx="2" ry="2" />
<text  x="78.40" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (12 samples, 0.20%)</title><rect x="894.1" y="1973" width="2.4" height="15.0" fill="rgb(245,61,20)" rx="2" ry="2" />
<text  x="897.10" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="105.1" y="53" width="6.2" height="15.0" fill="rgb(243,224,13)" rx="2" ry="2" />
<text  x="108.11" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1116.2" y="1909" width="0.2" height="15.0" fill="rgb(233,9,27)" rx="2" ry="2" />
<text  x="1119.23" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="982.0" y="1781" width="0.2" height="15.0" fill="rgb(226,159,25)" rx="2" ry="2" />
<text  x="985.03" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="918.2" y="1989" width="0.2" height="15.0" fill="rgb(234,181,30)" rx="2" ry="2" />
<text  x="921.23" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.7" y="1445" width="0.2" height="15.0" fill="rgb(209,58,36)" rx="2" ry="2" />
<text  x="123.66" y="1455.5" ></text>
</g>
<g >
<title>__close_fd (17 samples, 0.29%)</title><rect x="832.5" y="1845" width="3.4" height="15.0" fill="rgb(217,75,18)" rx="2" ry="2" />
<text  x="835.49" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="550.2" y="1957" width="0.2" height="15.0" fill="rgb(248,190,12)" rx="2" ry="2" />
<text  x="553.15" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="482.6" y="1861" width="0.6" height="15.0" fill="rgb(237,196,46)" rx="2" ry="2" />
<text  x="485.56" y="1871.5" ></text>
</g>
<g >
<title>__mix_pool_bytes (1 samples, 0.02%)</title><rect x="1157.7" y="1845" width="0.2" height="15.0" fill="rgb(205,102,21)" rx="2" ry="2" />
<text  x="1160.70" y="1855.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="290.9" y="1461" width="0.2" height="15.0" fill="rgb(217,169,44)" rx="2" ry="2" />
<text  x="293.94" y="1471.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="286.6" y="1765" width="0.2" height="15.0" fill="rgb(224,198,22)" rx="2" ry="2" />
<text  x="289.56" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="563.3" y="1893" width="0.6" height="15.0" fill="rgb(221,168,4)" rx="2" ry="2" />
<text  x="566.31" y="1903.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1178.0" y="1653" width="0.2" height="15.0" fill="rgb(240,3,17)" rx="2" ry="2" />
<text  x="1181.04" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1119.8" y="1813" width="0.2" height="15.0" fill="rgb(219,92,13)" rx="2" ry="2" />
<text  x="1122.81" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="1104.1" y="1477" width="0.6" height="15.0" fill="rgb(212,3,15)" rx="2" ry="2" />
<text  x="1107.06" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="104.5" y="1781" width="19.2" height="15.0" fill="rgb(222,94,46)" rx="2" ry="2" />
<text  x="107.51" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="885.7" y="1845" width="0.2" height="15.0" fill="rgb(229,200,32)" rx="2" ry="2" />
<text  x="888.73" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="543.0" y="1973" width="0.2" height="15.0" fill="rgb(224,76,8)" rx="2" ry="2" />
<text  x="545.97" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.4" y="1877" width="0.1" height="15.0" fill="rgb(221,64,27)" rx="2" ry="2" />
<text  x="160.35" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="97.9" y="1813" width="0.2" height="15.0" fill="rgb(226,112,53)" rx="2" ry="2" />
<text  x="100.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.47%)</title><rect x="104.7" y="1605" width="17.4" height="15.0" fill="rgb(207,157,9)" rx="2" ry="2" />
<text  x="107.71" y="1615.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="553.9" y="1941" width="0.2" height="15.0" fill="rgb(243,131,44)" rx="2" ry="2" />
<text  x="556.94" y="1951.5" ></text>
</g>
<g >
<title>lock_sock_nested (8 samples, 0.14%)</title><rect x="380.3" y="1941" width="1.6" height="15.0" fill="rgb(249,14,51)" rx="2" ry="2" />
<text  x="383.27" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="1157.9" y="1813" width="0.6" height="15.0" fill="rgb(218,174,47)" rx="2" ry="2" />
<text  x="1160.90" y="1823.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="17.8" y="1845" width="0.8" height="15.0" fill="rgb(248,227,12)" rx="2" ry="2" />
<text  x="20.78" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="386.9" y="1765" width="0.1" height="15.0" fill="rgb(248,124,19)" rx="2" ry="2" />
<text  x="389.85" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="611.4" y="1573" width="0.2" height="15.0" fill="rgb(239,221,15)" rx="2" ry="2" />
<text  x="614.37" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="143.4" y="1941" width="0.2" height="15.0" fill="rgb(222,38,47)" rx="2" ry="2" />
<text  x="146.39" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="189.9" y="1989" width="0.2" height="15.0" fill="rgb(224,15,10)" rx="2" ry="2" />
<text  x="192.85" y="1999.5" ></text>
</g>
<g >
<title>___sys_sendmsg (443 samples, 7.49%)</title><rect x="247.9" y="1957" width="88.3" height="15.0" fill="rgb(239,181,43)" rx="2" ry="2" />
<text  x="250.87" y="1967.5" >___sys_sen..</text>
</g>
<g >
<title>sys_getsockname (33 samples, 0.56%)</title><rect x="593.0" y="1893" width="6.6" height="15.0" fill="rgb(212,165,3)" rx="2" ry="2" />
<text  x="596.02" y="1903.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="853.8" y="1941" width="0.2" height="15.0" fill="rgb(251,218,48)" rx="2" ry="2" />
<text  x="856.83" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="896.5" y="2005" width="0.2" height="15.0" fill="rgb(224,52,30)" rx="2" ry="2" />
<text  x="899.50" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_val&lt;folly::FunctionScheduler::RunTimeOrder&gt;::operator (1 samples, 0.02%)</title><rect x="10.2" y="1893" width="0.2" height="15.0" fill="rgb(223,58,5)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="679.8" y="1941" width="0.2" height="15.0" fill="rgb(233,212,52)" rx="2" ry="2" />
<text  x="682.76" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="518.1" y="1941" width="0.1" height="15.0" fill="rgb(233,128,10)" rx="2" ry="2" />
<text  x="521.05" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="225.7" y="1765" width="0.2" height="15.0" fill="rgb(213,183,18)" rx="2" ry="2" />
<text  x="228.74" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (30 samples, 0.51%)</title><rect x="637.3" y="1957" width="6.0" height="15.0" fill="rgb(236,223,46)" rx="2" ry="2" />
<text  x="640.29" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="482.8" y="1621" width="0.2" height="15.0" fill="rgb(243,86,7)" rx="2" ry="2" />
<text  x="485.76" y="1631.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="817.3" y="1621" width="0.2" height="15.0" fill="rgb(218,125,38)" rx="2" ry="2" />
<text  x="820.34" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="189.9" y="1765" width="0.2" height="15.0" fill="rgb(245,117,2)" rx="2" ry="2" />
<text  x="192.85" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="950.7" y="2005" width="0.2" height="15.0" fill="rgb(217,91,48)" rx="2" ry="2" />
<text  x="953.73" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="182.3" y="1941" width="0.6" height="15.0" fill="rgb(253,217,30)" rx="2" ry="2" />
<text  x="185.27" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="402.4" y="1909" width="0.2" height="15.0" fill="rgb(212,135,16)" rx="2" ry="2" />
<text  x="405.40" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="917.6" y="1989" width="0.2" height="15.0" fill="rgb(214,95,42)" rx="2" ry="2" />
<text  x="920.63" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="41.5" y="2005" width="0.2" height="15.0" fill="rgb(226,19,9)" rx="2" ry="2" />
<text  x="44.50" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (91 samples, 1.54%)</title><rect x="875.0" y="1989" width="18.1" height="15.0" fill="rgb(215,186,53)" rx="2" ry="2" />
<text  x="877.96" y="1999.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="124.7" y="1589" width="0.1" height="15.0" fill="rgb(215,121,45)" rx="2" ry="2" />
<text  x="127.65" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="863.8" y="1893" width="0.2" height="15.0" fill="rgb(218,173,34)" rx="2" ry="2" />
<text  x="866.80" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="114.9" y="53" width="0.2" height="15.0" fill="rgb(209,26,52)" rx="2" ry="2" />
<text  x="117.88" y="63.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="1158.1" y="1685" width="0.2" height="15.0" fill="rgb(242,73,12)" rx="2" ry="2" />
<text  x="1161.10" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1049.8" y="1925" width="0.2" height="15.0" fill="rgb(238,84,41)" rx="2" ry="2" />
<text  x="1052.83" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="508.3" y="1781" width="0.2" height="15.0" fill="rgb(207,95,40)" rx="2" ry="2" />
<text  x="511.28" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="912.6" y="1925" width="0.2" height="15.0" fill="rgb(245,186,54)" rx="2" ry="2" />
<text  x="915.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="462.4" y="1621" width="0.2" height="15.0" fill="rgb(221,190,27)" rx="2" ry="2" />
<text  x="465.42" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="228.1" y="1909" width="1.0" height="15.0" fill="rgb(242,21,35)" rx="2" ry="2" />
<text  x="231.13" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="782.2" y="1429" width="0.2" height="15.0" fill="rgb(226,183,30)" rx="2" ry="2" />
<text  x="785.24" y="1439.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="861.2" y="1973" width="0.2" height="15.0" fill="rgb(241,4,45)" rx="2" ry="2" />
<text  x="864.20" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (8 samples, 0.14%)</title><rect x="578.7" y="2005" width="1.6" height="15.0" fill="rgb(215,141,53)" rx="2" ry="2" />
<text  x="581.67" y="2015.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="220.4" y="1861" width="0.2" height="15.0" fill="rgb(214,131,5)" rx="2" ry="2" />
<text  x="223.36" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (54 samples, 0.91%)</title><rect x="1101.1" y="1909" width="10.7" height="15.0" fill="rgb(208,8,16)" rx="2" ry="2" />
<text  x="1104.07" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="907.1" y="1925" width="0.2" height="15.0" fill="rgb(221,222,8)" rx="2" ry="2" />
<text  x="910.06" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="912.6" y="1861" width="0.2" height="15.0" fill="rgb(223,84,29)" rx="2" ry="2" />
<text  x="915.65" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (2 samples, 0.03%)</title><rect x="142.0" y="1925" width="0.4" height="15.0" fill="rgb(207,78,38)" rx="2" ry="2" />
<text  x="145.00" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="462.4" y="1765" width="0.2" height="15.0" fill="rgb(213,73,14)" rx="2" ry="2" />
<text  x="465.42" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.6" y="1973" width="0.2" height="15.0" fill="rgb(240,146,7)" rx="2" ry="2" />
<text  x="861.61" y="1983.5" ></text>
</g>
<g >
<title>do_futex (34 samples, 0.57%)</title><rect x="10.6" y="1989" width="6.8" height="15.0" fill="rgb(249,147,52)" rx="2" ry="2" />
<text  x="13.60" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::maySend (1 samples, 0.02%)</title><rect x="951.5" y="2005" width="0.2" height="15.0" fill="rgb(230,94,31)" rx="2" ry="2" />
<text  x="954.53" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.74%)</title><rect x="554.5" y="1973" width="8.8" height="15.0" fill="rgb(220,201,18)" rx="2" ry="2" />
<text  x="557.54" y="1983.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="336.4" y="1957" width="1.0" height="15.0" fill="rgb(223,99,4)" rx="2" ry="2" />
<text  x="339.40" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="561.3" y="1893" width="0.8" height="15.0" fill="rgb(241,137,37)" rx="2" ry="2" />
<text  x="564.32" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="2021" width="0.2" height="15.0" fill="rgb(225,81,14)" rx="2" ry="2" />
<text  x="1135.58" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="377.5" y="1861" width="0.2" height="15.0" fill="rgb(247,151,44)" rx="2" ry="2" />
<text  x="380.48" y="1871.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="434.7" y="1957" width="0.8" height="15.0" fill="rgb(208,66,50)" rx="2" ry="2" />
<text  x="437.70" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="397.4" y="1797" width="0.4" height="15.0" fill="rgb(231,188,17)" rx="2" ry="2" />
<text  x="400.42" y="1807.5" ></text>
</g>
<g >
<title>inet_recvmsg (311 samples, 5.26%)</title><rect x="1051.0" y="1957" width="62.0" height="15.0" fill="rgb(252,226,35)" rx="2" ry="2" />
<text  x="1054.02" y="1967.5" >inet_r..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="996.4" y="1797" width="0.2" height="15.0" fill="rgb(230,164,24)" rx="2" ry="2" />
<text  x="999.39" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="231.3" y="1717" width="0.2" height="15.0" fill="rgb(237,83,17)" rx="2" ry="2" />
<text  x="234.32" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="996.4" y="1893" width="0.2" height="15.0" fill="rgb(228,176,15)" rx="2" ry="2" />
<text  x="999.39" y="1903.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="903.7" y="1973" width="0.2" height="15.0" fill="rgb(239,14,7)" rx="2" ry="2" />
<text  x="906.67" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="291.5" y="1525" width="0.2" height="15.0" fill="rgb(224,13,22)" rx="2" ry="2" />
<text  x="294.54" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="901.3" y="1957" width="0.4" height="15.0" fill="rgb(250,191,34)" rx="2" ry="2" />
<text  x="904.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="225.9" y="1589" width="0.2" height="15.0" fill="rgb(216,174,11)" rx="2" ry="2" />
<text  x="228.94" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="453.8" y="1909" width="0.2" height="15.0" fill="rgb(232,111,34)" rx="2" ry="2" />
<text  x="456.85" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="118.9" y="165" width="0.2" height="15.0" fill="rgb(223,136,46)" rx="2" ry="2" />
<text  x="121.87" y="175.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (47 samples, 0.79%)</title><rect x="1101.9" y="1589" width="9.3" height="15.0" fill="rgb(216,204,31)" rx="2" ry="2" />
<text  x="1104.87" y="1599.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (3 samples, 0.05%)</title><rect x="569.1" y="2005" width="0.6" height="15.0" fill="rgb(228,209,16)" rx="2" ry="2" />
<text  x="572.09" y="2015.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (5 samples, 0.08%)</title><rect x="883.7" y="1925" width="1.0" height="15.0" fill="rgb(254,225,30)" rx="2" ry="2" />
<text  x="886.73" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="881.5" y="1893" width="0.6" height="15.0" fill="rgb(227,75,9)" rx="2" ry="2" />
<text  x="884.54" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (18 samples, 0.30%)</title><rect x="648.5" y="2005" width="3.5" height="15.0" fill="rgb(231,106,9)" rx="2" ry="2" />
<text  x="651.45" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (265 samples, 4.48%)</title><rect x="41.7" y="2005" width="52.8" height="15.0" fill="rgb(212,63,8)" rx="2" ry="2" />
<text  x="44.70" y="2015.5" >folly..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="845.3" y="1893" width="0.5" height="15.0" fill="rgb(213,114,13)" rx="2" ry="2" />
<text  x="848.25" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="520.6" y="1957" width="0.4" height="15.0" fill="rgb(237,39,18)" rx="2" ry="2" />
<text  x="523.64" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="924.8" y="1909" width="0.4" height="15.0" fill="rgb(232,1,44)" rx="2" ry="2" />
<text  x="927.81" y="1919.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="887.1" y="1637" width="0.2" height="15.0" fill="rgb(222,29,13)" rx="2" ry="2" />
<text  x="890.12" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="131.0" y="1973" width="0.4" height="15.0" fill="rgb(250,213,10)" rx="2" ry="2" />
<text  x="134.03" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="881.3" y="1925" width="0.2" height="15.0" fill="rgb(240,69,4)" rx="2" ry="2" />
<text  x="884.34" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="517.3" y="1941" width="0.2" height="15.0" fill="rgb(205,128,51)" rx="2" ry="2" />
<text  x="520.25" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="545.6" y="1861" width="0.6" height="15.0" fill="rgb(213,40,4)" rx="2" ry="2" />
<text  x="548.57" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="695.5" y="1861" width="0.6" height="15.0" fill="rgb(209,112,13)" rx="2" ry="2" />
<text  x="698.51" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="830.9" y="1669" width="0.2" height="15.0" fill="rgb(243,4,31)" rx="2" ry="2" />
<text  x="833.90" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (9 samples, 0.15%)</title><rect x="844.7" y="1941" width="1.7" height="15.0" fill="rgb(254,138,7)" rx="2" ry="2" />
<text  x="847.65" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="225.7" y="1749" width="0.2" height="15.0" fill="rgb(232,4,28)" rx="2" ry="2" />
<text  x="228.74" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="104.7" y="1669" width="17.6" height="15.0" fill="rgb(211,193,11)" rx="2" ry="2" />
<text  x="107.71" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="595.2" y="1829" width="0.2" height="15.0" fill="rgb(207,228,47)" rx="2" ry="2" />
<text  x="598.21" y="1839.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="339.4" y="1861" width="0.6" height="15.0" fill="rgb(220,32,54)" rx="2" ry="2" />
<text  x="342.40" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="725.6" y="1813" width="0.2" height="15.0" fill="rgb(236,202,41)" rx="2" ry="2" />
<text  x="728.62" y="1823.5" ></text>
</g>
<g >
<title>__libc_fcntl (61 samples, 1.03%)</title><rect x="554.1" y="1989" width="12.2" height="15.0" fill="rgb(212,109,46)" rx="2" ry="2" />
<text  x="557.14" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1049.8" y="1893" width="0.2" height="15.0" fill="rgb(218,135,25)" rx="2" ry="2" />
<text  x="1052.83" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.7" y="1413" width="0.2" height="15.0" fill="rgb(244,186,28)" rx="2" ry="2" />
<text  x="123.66" y="1423.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="256.4" y="1637" width="0.2" height="15.0" fill="rgb(212,207,39)" rx="2" ry="2" />
<text  x="259.45" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4 samples, 0.07%)</title><rect x="516.5" y="1957" width="0.8" height="15.0" fill="rgb(205,207,40)" rx="2" ry="2" />
<text  x="519.45" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="462.4" y="1797" width="0.2" height="15.0" fill="rgb(214,156,52)" rx="2" ry="2" />
<text  x="465.42" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="885.7" y="1925" width="0.2" height="15.0" fill="rgb(250,213,53)" rx="2" ry="2" />
<text  x="888.73" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="856.2" y="1797" width="0.2" height="15.0" fill="rgb(254,140,25)" rx="2" ry="2" />
<text  x="859.22" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1018.9" y="2037" width="0.2" height="15.0" fill="rgb(226,227,38)" rx="2" ry="2" />
<text  x="1021.92" y="2047.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="746.4" y="1493" width="0.2" height="15.0" fill="rgb(243,198,33)" rx="2" ry="2" />
<text  x="749.35" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="531.4" y="1893" width="0.4" height="15.0" fill="rgb(225,147,17)" rx="2" ry="2" />
<text  x="534.41" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="160.3" y="1813" width="0.2" height="15.0" fill="rgb(221,156,33)" rx="2" ry="2" />
<text  x="163.34" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="268.4" y="1813" width="0.2" height="15.0" fill="rgb(227,94,36)" rx="2" ry="2" />
<text  x="271.41" y="1823.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="481.0" y="1701" width="0.2" height="15.0" fill="rgb(234,103,9)" rx="2" ry="2" />
<text  x="483.96" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="534.2" y="1781" width="0.2" height="15.0" fill="rgb(229,50,47)" rx="2" ry="2" />
<text  x="537.20" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="81.4" y="1957" width="0.2" height="15.0" fill="rgb(237,228,49)" rx="2" ry="2" />
<text  x="84.38" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="291.3" y="1461" width="0.2" height="15.0" fill="rgb(214,113,10)" rx="2" ry="2" />
<text  x="294.34" y="1471.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="488.7" y="1829" width="0.2" height="15.0" fill="rgb(236,5,47)" rx="2" ry="2" />
<text  x="491.74" y="1839.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="333.6" y="1877" width="0.2" height="15.0" fill="rgb(247,200,12)" rx="2" ry="2" />
<text  x="336.61" y="1887.5" ></text>
</g>
<g >
<title>remove_wait_queue (15 samples, 0.25%)</title><rect x="468.4" y="1941" width="3.0" height="15.0" fill="rgb(246,175,7)" rx="2" ry="2" />
<text  x="471.40" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="569.3" y="1973" width="0.4" height="15.0" fill="rgb(246,43,47)" rx="2" ry="2" />
<text  x="572.29" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="914.2" y="1973" width="0.2" height="15.0" fill="rgb(254,48,36)" rx="2" ry="2" />
<text  x="917.24" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1019.3" y="2005" width="0.2" height="15.0" fill="rgb(213,222,5)" rx="2" ry="2" />
<text  x="1022.32" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="67.8" y="1893" width="0.6" height="15.0" fill="rgb(227,15,6)" rx="2" ry="2" />
<text  x="70.82" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="158.3" y="1909" width="0.2" height="15.0" fill="rgb(240,171,51)" rx="2" ry="2" />
<text  x="161.35" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="824.9" y="1669" width="0.2" height="15.0" fill="rgb(247,123,15)" rx="2" ry="2" />
<text  x="827.91" y="1679.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="456.4" y="1941" width="0.2" height="15.0" fill="rgb(208,154,48)" rx="2" ry="2" />
<text  x="459.44" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1178.0" y="1781" width="0.2" height="15.0" fill="rgb(214,19,12)" rx="2" ry="2" />
<text  x="1181.04" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (5 samples, 0.08%)</title><rect x="545.2" y="1925" width="1.0" height="15.0" fill="rgb(237,123,17)" rx="2" ry="2" />
<text  x="548.17" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="135.6" y="1941" width="0.2" height="15.0" fill="rgb(216,70,11)" rx="2" ry="2" />
<text  x="138.62" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="756.1" y="1653" width="0.2" height="15.0" fill="rgb(231,87,30)" rx="2" ry="2" />
<text  x="759.12" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="16.8" y="1845" width="0.2" height="15.0" fill="rgb(224,37,2)" rx="2" ry="2" />
<text  x="19.78" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="779.1" y="1589" width="0.2" height="15.0" fill="rgb(228,181,13)" rx="2" ry="2" />
<text  x="782.05" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="901.5" y="1909" width="0.2" height="15.0" fill="rgb(246,52,0)" rx="2" ry="2" />
<text  x="904.48" y="1919.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="1121.6" y="1685" width="0.2" height="15.0" fill="rgb(242,23,47)" rx="2" ry="2" />
<text  x="1124.61" y="1695.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="985.6" y="1893" width="0.6" height="15.0" fill="rgb(235,62,35)" rx="2" ry="2" />
<text  x="988.62" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="505.5" y="1669" width="0.2" height="15.0" fill="rgb(218,136,26)" rx="2" ry="2" />
<text  x="508.49" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="901.3" y="1989" width="0.4" height="15.0" fill="rgb(217,59,5)" rx="2" ry="2" />
<text  x="904.28" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="336.2" y="1845" width="0.2" height="15.0" fill="rgb(215,25,32)" rx="2" ry="2" />
<text  x="339.20" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.1" y="1813" width="0.2" height="15.0" fill="rgb(235,171,31)" rx="2" ry="2" />
<text  x="887.13" y="1823.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="739.8" y="1653" width="0.2" height="15.0" fill="rgb(235,182,40)" rx="2" ry="2" />
<text  x="742.77" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="910.5" y="2005" width="0.4" height="15.0" fill="rgb(235,33,49)" rx="2" ry="2" />
<text  x="913.45" y="2015.5" ></text>
</g>
<g >
<title>__skb_clone (33 samples, 0.56%)</title><rect x="311.1" y="1797" width="6.6" height="15.0" fill="rgb(226,159,33)" rx="2" ry="2" />
<text  x="314.08" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="264.2" y="1733" width="0.2" height="15.0" fill="rgb(251,31,52)" rx="2" ry="2" />
<text  x="267.22" y="1743.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1178.0" y="1989" width="0.2" height="15.0" fill="rgb(240,11,19)" rx="2" ry="2" />
<text  x="1181.04" y="1999.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6 samples, 0.10%)</title><rect x="264.6" y="1861" width="1.2" height="15.0" fill="rgb(242,65,30)" rx="2" ry="2" />
<text  x="267.62" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="836.7" y="1765" width="0.2" height="15.0" fill="rgb(254,194,36)" rx="2" ry="2" />
<text  x="839.68" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (2 samples, 0.03%)</title><rect x="114.5" y="37" width="0.4" height="15.0" fill="rgb(214,68,48)" rx="2" ry="2" />
<text  x="117.48" y="47.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="124.1" y="1797" width="0.2" height="15.0" fill="rgb(205,91,23)" rx="2" ry="2" />
<text  x="127.05" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="613" width="14.0" height="15.0" fill="rgb(225,208,35)" rx="2" ry="2" />
<text  x="108.11" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="1188.4" y="1861" width="0.8" height="15.0" fill="rgb(214,215,11)" rx="2" ry="2" />
<text  x="1191.40" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="902.7" y="1989" width="0.2" height="15.0" fill="rgb(254,213,33)" rx="2" ry="2" />
<text  x="905.68" y="1999.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="518.8" y="1877" width="0.8" height="15.0" fill="rgb(208,93,35)" rx="2" ry="2" />
<text  x="521.85" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="157.9" y="1733" width="0.2" height="15.0" fill="rgb(243,139,1)" rx="2" ry="2" />
<text  x="160.95" y="1743.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (2 samples, 0.03%)</title><rect x="10.0" y="1941" width="0.4" height="15.0" fill="rgb(246,109,25)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="282.8" y="1813" width="0.2" height="15.0" fill="rgb(235,52,42)" rx="2" ry="2" />
<text  x="285.77" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="158.3" y="1925" width="0.2" height="15.0" fill="rgb(254,195,37)" rx="2" ry="2" />
<text  x="161.35" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (40 samples, 0.68%)</title><rect x="60.4" y="1957" width="8.0" height="15.0" fill="rgb(206,121,43)" rx="2" ry="2" />
<text  x="63.45" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="129.8" y="1973" width="1.2" height="15.0" fill="rgb(206,7,22)" rx="2" ry="2" />
<text  x="132.83" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.5" y="69" width="0.2" height="15.0" fill="rgb(225,126,39)" rx="2" ry="2" />
<text  x="121.47" y="79.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="1135.2" y="2021" width="0.2" height="15.0" fill="rgb(221,40,0)" rx="2" ry="2" />
<text  x="1138.17" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="508.1" y="1765" width="0.2" height="15.0" fill="rgb(226,104,20)" rx="2" ry="2" />
<text  x="511.08" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1130.2" y="1941" width="0.4" height="15.0" fill="rgb(209,102,0)" rx="2" ry="2" />
<text  x="1133.18" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (6 samples, 0.10%)</title><rect x="576.3" y="2005" width="1.2" height="15.0" fill="rgb(246,78,25)" rx="2" ry="2" />
<text  x="579.27" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="150.4" y="1877" width="0.2" height="15.0" fill="rgb(245,203,53)" rx="2" ry="2" />
<text  x="153.37" y="1887.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="220.6" y="1861" width="0.2" height="15.0" fill="rgb(207,114,1)" rx="2" ry="2" />
<text  x="223.56" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.3" y="53" width="0.2" height="15.0" fill="rgb(230,134,45)" rx="2" ry="2" />
<text  x="121.27" y="63.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1189.8" y="1989" width="0.2" height="15.0" fill="rgb(226,139,50)" rx="2" ry="2" />
<text  x="1192.80" y="1999.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (9 samples, 0.15%)</title><rect x="1073.8" y="1813" width="1.7" height="15.0" fill="rgb(234,190,44)" rx="2" ry="2" />
<text  x="1076.75" y="1823.5" ></text>
</g>
<g >
<title>carbon-global-s (37 samples, 0.63%)</title><rect x="10.0" y="2069" width="7.4" height="15.0" fill="rgb(213,37,48)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.56%)</title><rect x="903.7" y="2005" width="6.6" height="15.0" fill="rgb(217,6,14)" rx="2" ry="2" />
<text  x="906.67" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="453.0" y="1829" width="0.2" height="15.0" fill="rgb(246,164,17)" rx="2" ry="2" />
<text  x="456.05" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="912.8" y="2037" width="0.4" height="15.0" fill="rgb(220,32,38)" rx="2" ry="2" />
<text  x="915.85" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="665.2" y="1781" width="0.2" height="15.0" fill="rgb(206,29,37)" rx="2" ry="2" />
<text  x="668.20" y="1791.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (63 samples, 1.06%)</title><rect x="1085.5" y="1925" width="12.6" height="15.0" fill="rgb(230,75,53)" rx="2" ry="2" />
<text  x="1088.52" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="179.1" y="1941" width="0.4" height="15.0" fill="rgb(212,41,1)" rx="2" ry="2" />
<text  x="182.08" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="840.5" y="1925" width="0.2" height="15.0" fill="rgb(232,180,3)" rx="2" ry="2" />
<text  x="843.47" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="547.2" y="1765" width="0.2" height="15.0" fill="rgb(239,119,40)" rx="2" ry="2" />
<text  x="550.16" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="290.9" y="1477" width="0.4" height="15.0" fill="rgb(214,52,14)" rx="2" ry="2" />
<text  x="293.94" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="404.6" y="1733" width="0.2" height="15.0" fill="rgb(243,184,20)" rx="2" ry="2" />
<text  x="407.60" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="817.5" y="1493" width="0.2" height="15.0" fill="rgb(247,178,32)" rx="2" ry="2" />
<text  x="820.54" y="1503.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="516.3" y="1973" width="0.2" height="15.0" fill="rgb(249,205,42)" rx="2" ry="2" />
<text  x="519.26" y="1983.5" ></text>
</g>
<g >
<title>__sock_release (409 samples, 6.91%)</title><rect x="749.5" y="1781" width="81.6" height="15.0" fill="rgb(206,160,30)" rx="2" ry="2" />
<text  x="752.54" y="1791.5" >__sock_re..</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="824.9" y="1461" width="0.2" height="15.0" fill="rgb(209,129,4)" rx="2" ry="2" />
<text  x="827.91" y="1471.5" ></text>
</g>
<g >
<title>copyin (3 samples, 0.05%)</title><rect x="267.6" y="1877" width="0.6" height="15.0" fill="rgb(213,37,40)" rx="2" ry="2" />
<text  x="270.61" y="1887.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1104.5" y="1365" width="0.2" height="15.0" fill="rgb(235,204,24)" rx="2" ry="2" />
<text  x="1107.46" y="1375.5" ></text>
</g>
<g >
<title>__d_instantiate (1 samples, 0.02%)</title><rect x="398.6" y="1941" width="0.2" height="15.0" fill="rgb(220,3,8)" rx="2" ry="2" />
<text  x="401.61" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1178.0" y="1893" width="0.2" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="1181.04" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (21 samples, 0.35%)</title><rect x="64.2" y="1941" width="4.2" height="15.0" fill="rgb(254,193,49)" rx="2" ry="2" />
<text  x="67.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="97.9" y="1701" width="0.2" height="15.0" fill="rgb(206,165,0)" rx="2" ry="2" />
<text  x="100.93" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="839.5" y="1909" width="0.2" height="15.0" fill="rgb(214,95,30)" rx="2" ry="2" />
<text  x="842.47" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1178.0" y="1957" width="0.2" height="15.0" fill="rgb(238,116,7)" rx="2" ry="2" />
<text  x="1181.04" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (21 samples, 0.35%)</title><rect x="543.2" y="1973" width="4.2" height="15.0" fill="rgb(252,206,13)" rx="2" ry="2" />
<text  x="546.17" y="1983.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (1 samples, 0.02%)</title><rect x="1075.5" y="1829" width="0.2" height="15.0" fill="rgb(235,103,10)" rx="2" ry="2" />
<text  x="1078.55" y="1839.5" ></text>
</g>
<g >
<title>free (16 samples, 0.27%)</title><rect x="1014.1" y="2037" width="3.2" height="15.0" fill="rgb(212,27,26)" rx="2" ry="2" />
<text  x="1017.14" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="538.0" y="1925" width="0.8" height="15.0" fill="rgb(225,187,34)" rx="2" ry="2" />
<text  x="540.99" y="1935.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (5 samples, 0.08%)</title><rect x="394.2" y="1861" width="1.0" height="15.0" fill="rgb(207,46,51)" rx="2" ry="2" />
<text  x="397.23" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (7 samples, 0.12%)</title><rect x="526.8" y="1989" width="1.4" height="15.0" fill="rgb(235,171,2)" rx="2" ry="2" />
<text  x="529.82" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="55.7" y="1909" width="0.8" height="15.0" fill="rgb(225,120,22)" rx="2" ry="2" />
<text  x="58.66" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="986.4" y="1989" width="0.2" height="15.0" fill="rgb(243,84,30)" rx="2" ry="2" />
<text  x="989.42" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (9 samples, 0.15%)</title><rect x="36.5" y="1989" width="1.8" height="15.0" fill="rgb(254,59,38)" rx="2" ry="2" />
<text  x="39.52" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="124.7" y="1669" width="0.1" height="15.0" fill="rgb(228,14,32)" rx="2" ry="2" />
<text  x="127.65" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="2005" width="0.2" height="15.0" fill="rgb(244,73,31)" rx="2" ry="2" />
<text  x="239.51" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="842.9" y="1877" width="0.2" height="15.0" fill="rgb(227,114,7)" rx="2" ry="2" />
<text  x="845.86" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (30 samples, 0.51%)</title><rect x="542.4" y="1989" width="6.0" height="15.0" fill="rgb(228,179,12)" rx="2" ry="2" />
<text  x="545.38" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="404.6" y="1781" width="0.2" height="15.0" fill="rgb(238,65,2)" rx="2" ry="2" />
<text  x="407.60" y="1791.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="644.9" y="1669" width="0.2" height="15.0" fill="rgb(248,78,23)" rx="2" ry="2" />
<text  x="647.86" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="615.8" y="1813" width="0.2" height="15.0" fill="rgb(243,57,19)" rx="2" ry="2" />
<text  x="618.75" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (11 samples, 0.19%)</title><rect x="531.2" y="2037" width="2.2" height="15.0" fill="rgb(251,229,17)" rx="2" ry="2" />
<text  x="534.21" y="2047.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="482.4" y="1925" width="0.2" height="15.0" fill="rgb(235,30,53)" rx="2" ry="2" />
<text  x="485.36" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="858.6" y="1941" width="0.2" height="15.0" fill="rgb(236,103,48)" rx="2" ry="2" />
<text  x="861.61" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="141.2" y="1989" width="0.4" height="15.0" fill="rgb(244,134,17)" rx="2" ry="2" />
<text  x="144.20" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1116.2" y="1701" width="0.2" height="15.0" fill="rgb(250,76,46)" rx="2" ry="2" />
<text  x="1119.23" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="864.6" y="1989" width="0.2" height="15.0" fill="rgb(227,63,38)" rx="2" ry="2" />
<text  x="867.59" y="1999.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="597.8" y="1845" width="1.2" height="15.0" fill="rgb(217,202,22)" rx="2" ry="2" />
<text  x="600.81" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="675.4" y="1653" width="0.2" height="15.0" fill="rgb(226,127,19)" rx="2" ry="2" />
<text  x="678.37" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="696.7" y="1893" width="1.0" height="15.0" fill="rgb(243,209,29)" rx="2" ry="2" />
<text  x="699.70" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="336.0" y="1877" width="0.2" height="15.0" fill="rgb(229,222,41)" rx="2" ry="2" />
<text  x="339.01" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1130.0" y="1957" width="0.2" height="15.0" fill="rgb(244,144,17)" rx="2" ry="2" />
<text  x="1132.98" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="247.1" y="1717" width="0.2" height="15.0" fill="rgb(238,144,24)" rx="2" ry="2" />
<text  x="250.08" y="1727.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="40.1" y="1989" width="0.2" height="15.0" fill="rgb(234,30,52)" rx="2" ry="2" />
<text  x="43.11" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="599.8" y="1509" width="0.4" height="15.0" fill="rgb(210,123,20)" rx="2" ry="2" />
<text  x="602.80" y="1519.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="618.9" y="1845" width="1.0" height="15.0" fill="rgb(214,205,3)" rx="2" ry="2" />
<text  x="621.94" y="1855.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="144.8" y="1861" width="0.2" height="15.0" fill="rgb(212,113,25)" rx="2" ry="2" />
<text  x="147.79" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1717" width="0.2" height="15.0" fill="rgb(253,3,26)" rx="2" ry="2" />
<text  x="614.37" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="576.9" y="1749" width="0.2" height="15.0" fill="rgb(210,173,11)" rx="2" ry="2" />
<text  x="579.87" y="1759.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="105.3" y="37" width="0.2" height="15.0" fill="rgb(218,67,48)" rx="2" ry="2" />
<text  x="108.31" y="47.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="156.8" y="1893" width="0.4" height="15.0" fill="rgb(230,66,54)" rx="2" ry="2" />
<text  x="159.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="563.3" y="1717" width="0.2" height="15.0" fill="rgb(237,135,11)" rx="2" ry="2" />
<text  x="566.31" y="1727.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="487.5" y="2021" width="0.2" height="15.0" fill="rgb(237,168,46)" rx="2" ry="2" />
<text  x="490.54" y="2031.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (7 samples, 0.12%)</title><rect x="753.7" y="1733" width="1.4" height="15.0" fill="rgb(213,109,37)" rx="2" ry="2" />
<text  x="756.73" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (9 samples, 0.15%)</title><rect x="155.0" y="1877" width="1.8" height="15.0" fill="rgb(235,193,17)" rx="2" ry="2" />
<text  x="157.96" y="1887.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="563.3" y="1701" width="0.2" height="15.0" fill="rgb(235,54,21)" rx="2" ry="2" />
<text  x="566.31" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="702.5" y="1989" width="2.2" height="15.0" fill="rgb(209,127,26)" rx="2" ry="2" />
<text  x="705.49" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1140.9" y="2037" width="0.2" height="15.0" fill="rgb(241,118,38)" rx="2" ry="2" />
<text  x="1143.95" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="563.3" y="1861" width="0.6" height="15.0" fill="rgb(210,148,54)" rx="2" ry="2" />
<text  x="566.31" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="741" width="14.0" height="15.0" fill="rgb(218,38,10)" rx="2" ry="2" />
<text  x="108.11" y="751.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="853.2" y="1861" width="0.4" height="15.0" fill="rgb(228,206,27)" rx="2" ry="2" />
<text  x="856.23" y="1871.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="279.6" y="1845" width="0.2" height="15.0" fill="rgb(253,108,15)" rx="2" ry="2" />
<text  x="282.58" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="372.1" y="1653" width="0.2" height="15.0" fill="rgb(209,186,47)" rx="2" ry="2" />
<text  x="375.10" y="1663.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="528.4" y="1893" width="0.8" height="15.0" fill="rgb(247,33,13)" rx="2" ry="2" />
<text  x="531.42" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="102.7" y="1701" width="0.2" height="15.0" fill="rgb(214,32,6)" rx="2" ry="2" />
<text  x="105.72" y="1711.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (17 samples, 0.29%)</title><rect x="1113.0" y="1957" width="3.4" height="15.0" fill="rgb(226,205,52)" rx="2" ry="2" />
<text  x="1116.03" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1121.4" y="1973" width="0.4" height="15.0" fill="rgb(248,205,25)" rx="2" ry="2" />
<text  x="1124.41" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="520.2" y="1973" width="0.2" height="15.0" fill="rgb(215,174,5)" rx="2" ry="2" />
<text  x="523.24" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="189.9" y="1781" width="0.2" height="15.0" fill="rgb(207,203,42)" rx="2" ry="2" />
<text  x="192.85" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.9" y="1173" width="0.2" height="15.0" fill="rgb(243,110,52)" rx="2" ry="2" />
<text  x="107.91" y="1183.5" ></text>
</g>
<g >
<title>mntget (2 samples, 0.03%)</title><rect x="385.1" y="1957" width="0.4" height="15.0" fill="rgb(239,27,30)" rx="2" ry="2" />
<text  x="388.06" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="482.6" y="1797" width="0.6" height="15.0" fill="rgb(238,48,10)" rx="2" ry="2" />
<text  x="485.56" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="538.0" y="1941" width="0.8" height="15.0" fill="rgb(208,174,10)" rx="2" ry="2" />
<text  x="540.99" y="1951.5" ></text>
</g>
<g >
<title>new_inode_pseudo (55 samples, 0.93%)</title><rect x="387.4" y="1941" width="11.0" height="15.0" fill="rgb(221,197,3)" rx="2" ry="2" />
<text  x="390.45" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="905.1" y="1941" width="0.4" height="15.0" fill="rgb(213,118,26)" rx="2" ry="2" />
<text  x="908.07" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="840.9" y="1893" width="0.4" height="15.0" fill="rgb(244,76,42)" rx="2" ry="2" />
<text  x="843.87" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (56 samples, 0.95%)</title><rect x="606.2" y="1925" width="11.1" height="15.0" fill="rgb(216,217,34)" rx="2" ry="2" />
<text  x="609.18" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="434.7" y="1925" width="0.8" height="15.0" fill="rgb(212,20,40)" rx="2" ry="2" />
<text  x="437.70" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="929.8" y="1909" width="0.8" height="15.0" fill="rgb(253,58,38)" rx="2" ry="2" />
<text  x="932.79" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="435.9" y="1989" width="0.2" height="15.0" fill="rgb(217,171,44)" rx="2" ry="2" />
<text  x="438.90" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="461.6" y="1893" width="0.4" height="15.0" fill="rgb(212,67,4)" rx="2" ry="2" />
<text  x="464.62" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (6 samples, 0.10%)</title><rect x="291.9" y="1573" width="1.2" height="15.0" fill="rgb(217,171,12)" rx="2" ry="2" />
<text  x="294.94" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="938.0" y="1941" width="0.6" height="15.0" fill="rgb(217,98,38)" rx="2" ry="2" />
<text  x="940.97" y="1951.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="453.8" y="1637" width="0.2" height="15.0" fill="rgb(208,101,13)" rx="2" ry="2" />
<text  x="456.85" y="1647.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1158.3" y="1621" width="0.2" height="15.0" fill="rgb(254,53,17)" rx="2" ry="2" />
<text  x="1161.30" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.1" y="1893" width="0.2" height="15.0" fill="rgb(227,77,15)" rx="2" ry="2" />
<text  x="887.13" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="159.7" y="1941" width="0.2" height="15.0" fill="rgb(209,160,27)" rx="2" ry="2" />
<text  x="162.74" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1157.9" y="1701" width="0.2" height="15.0" fill="rgb(244,208,27)" rx="2" ry="2" />
<text  x="1160.90" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="836.7" y="1733" width="0.2" height="15.0" fill="rgb(254,95,11)" rx="2" ry="2" />
<text  x="839.68" y="1743.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="102.7" y="1717" width="0.2" height="15.0" fill="rgb(236,56,9)" rx="2" ry="2" />
<text  x="105.72" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1158.1" y="1701" width="0.2" height="15.0" fill="rgb(215,90,10)" rx="2" ry="2" />
<text  x="1161.10" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="226.9" y="1861" width="1.2" height="15.0" fill="rgb(217,56,10)" rx="2" ry="2" />
<text  x="229.94" y="1871.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="892.9" y="1973" width="0.2" height="15.0" fill="rgb(254,137,35)" rx="2" ry="2" />
<text  x="895.91" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (14 samples, 0.24%)</title><rect x="983.6" y="1973" width="2.8" height="15.0" fill="rgb(219,194,34)" rx="2" ry="2" />
<text  x="986.63" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="957.1" y="2005" width="0.4" height="15.0" fill="rgb(245,51,14)" rx="2" ry="2" />
<text  x="960.11" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="79.0" y="1941" width="0.2" height="15.0" fill="rgb(217,11,29)" rx="2" ry="2" />
<text  x="81.99" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="805" width="14.0" height="15.0" fill="rgb(241,173,2)" rx="2" ry="2" />
<text  x="108.11" y="815.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1116.2" y="1685" width="0.2" height="15.0" fill="rgb(253,4,37)" rx="2" ry="2" />
<text  x="1119.23" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="885.7" y="1781" width="0.2" height="15.0" fill="rgb(232,146,27)" rx="2" ry="2" />
<text  x="888.73" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="832.3" y="1733" width="0.2" height="15.0" fill="rgb(215,118,6)" rx="2" ry="2" />
<text  x="835.29" y="1743.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1137.2" y="1957" width="0.2" height="15.0" fill="rgb(230,185,49)" rx="2" ry="2" />
<text  x="1140.16" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="158.3" y="1893" width="0.2" height="15.0" fill="rgb(212,45,33)" rx="2" ry="2" />
<text  x="161.35" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="985.4" y="1877" width="0.2" height="15.0" fill="rgb(220,94,7)" rx="2" ry="2" />
<text  x="988.42" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1005.4" y="2021" width="0.2" height="15.0" fill="rgb(211,17,0)" rx="2" ry="2" />
<text  x="1008.36" y="2031.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (3 samples, 0.05%)</title><rect x="1173.1" y="2053" width="0.5" height="15.0" fill="rgb(233,8,29)" rx="2" ry="2" />
<text  x="1176.05" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="817.1" y="1685" width="0.6" height="15.0" fill="rgb(208,44,46)" rx="2" ry="2" />
<text  x="820.14" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="917.0" y="2021" width="1.2" height="15.0" fill="rgb(225,4,3)" rx="2" ry="2" />
<text  x="920.03" y="2031.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="377.9" y="1925" width="0.4" height="15.0" fill="rgb(251,81,45)" rx="2" ry="2" />
<text  x="380.88" y="1935.5" ></text>
</g>
<g >
<title>ep_send_events_proc (98 samples, 1.66%)</title><rect x="488.9" y="1941" width="19.6" height="15.0" fill="rgb(229,134,2)" rx="2" ry="2" />
<text  x="491.94" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="577.3" y="1701" width="0.2" height="15.0" fill="rgb(236,49,14)" rx="2" ry="2" />
<text  x="580.27" y="1711.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="611.2" y="1733" width="0.2" height="15.0" fill="rgb(224,131,29)" rx="2" ry="2" />
<text  x="614.17" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="866.6" y="1829" width="0.2" height="15.0" fill="rgb(233,101,15)" rx="2" ry="2" />
<text  x="869.59" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="993.8" y="1989" width="0.2" height="15.0" fill="rgb(221,149,30)" rx="2" ry="2" />
<text  x="996.80" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="372.1" y="1829" width="0.2" height="15.0" fill="rgb(230,84,17)" rx="2" ry="2" />
<text  x="375.10" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="110.1" y="37" width="0.6" height="15.0" fill="rgb(254,20,33)" rx="2" ry="2" />
<text  x="113.09" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="505.5" y="1797" width="0.2" height="15.0" fill="rgb(208,115,26)" rx="2" ry="2" />
<text  x="508.49" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="900.9" y="2021" width="0.2" height="15.0" fill="rgb(234,172,7)" rx="2" ry="2" />
<text  x="903.88" y="2031.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.17%)</title><rect x="18.8" y="1893" width="2.0" height="15.0" fill="rgb(253,126,23)" rx="2" ry="2" />
<text  x="21.77" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="481.0" y="1877" width="0.4" height="15.0" fill="rgb(248,129,11)" rx="2" ry="2" />
<text  x="483.96" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1012.7" y="1637" width="0.2" height="15.0" fill="rgb(218,40,46)" rx="2" ry="2" />
<text  x="1015.74" y="1647.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="887.7" y="1925" width="0.6" height="15.0" fill="rgb(223,203,0)" rx="2" ry="2" />
<text  x="890.72" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 0.10%)</title><rect x="982.2" y="1941" width="1.2" height="15.0" fill="rgb(205,82,2)" rx="2" ry="2" />
<text  x="985.23" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (101 samples, 1.71%)</title><rect x="920.6" y="2005" width="20.2" height="15.0" fill="rgb(228,38,35)" rx="2" ry="2" />
<text  x="923.62" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (6 samples, 0.10%)</title><rect x="290.5" y="1621" width="1.2" height="15.0" fill="rgb(223,71,2)" rx="2" ry="2" />
<text  x="293.54" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1180.8" y="1781" width="0.2" height="15.0" fill="rgb(250,216,12)" rx="2" ry="2" />
<text  x="1183.83" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="224.1" y="1461" width="0.2" height="15.0" fill="rgb(229,216,13)" rx="2" ry="2" />
<text  x="227.15" y="1471.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="611.2" y="1797" width="0.4" height="15.0" fill="rgb(222,104,20)" rx="2" ry="2" />
<text  x="614.17" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="17.8" y="1893" width="0.8" height="15.0" fill="rgb(236,104,41)" rx="2" ry="2" />
<text  x="20.78" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="336.8" y="1925" width="0.6" height="15.0" fill="rgb(236,112,30)" rx="2" ry="2" />
<text  x="339.80" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="32.1" y="1861" width="0.2" height="15.0" fill="rgb(219,95,45)" rx="2" ry="2" />
<text  x="35.13" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="224.1" y="1765" width="0.2" height="15.0" fill="rgb(236,40,10)" rx="2" ry="2" />
<text  x="227.15" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="782.0" y="1541" width="0.4" height="15.0" fill="rgb(252,10,32)" rx="2" ry="2" />
<text  x="785.04" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="225.9" y="1717" width="0.2" height="15.0" fill="rgb(251,4,29)" rx="2" ry="2" />
<text  x="228.94" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (3 samples, 0.05%)</title><rect x="85.8" y="1909" width="0.6" height="15.0" fill="rgb(244,183,37)" rx="2" ry="2" />
<text  x="88.77" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1140.9" y="2005" width="0.2" height="15.0" fill="rgb(225,206,6)" rx="2" ry="2" />
<text  x="1143.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="199.6" y="2021" width="0.2" height="15.0" fill="rgb(229,218,33)" rx="2" ry="2" />
<text  x="202.62" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1049.8" y="1765" width="0.2" height="15.0" fill="rgb(212,15,44)" rx="2" ry="2" />
<text  x="1052.83" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="161.1" y="1941" width="0.2" height="15.0" fill="rgb(215,34,15)" rx="2" ry="2" />
<text  x="164.14" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="1167.7" y="1989" width="0.2" height="15.0" fill="rgb(216,11,27)" rx="2" ry="2" />
<text  x="1170.67" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="766.3" y="1685" width="0.4" height="15.0" fill="rgb(250,89,15)" rx="2" ry="2" />
<text  x="769.29" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.1" y="1845" width="0.2" height="15.0" fill="rgb(218,146,26)" rx="2" ry="2" />
<text  x="890.12" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (1 samples, 0.02%)</title><rect x="231.9" y="2005" width="0.2" height="15.0" fill="rgb(215,88,2)" rx="2" ry="2" />
<text  x="234.92" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1167.3" y="2005" width="0.2" height="15.0" fill="rgb(225,174,47)" rx="2" ry="2" />
<text  x="1170.27" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="17.8" y="1957" width="0.8" height="15.0" fill="rgb(238,194,28)" rx="2" ry="2" />
<text  x="20.78" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1128.0" y="2037" width="0.6" height="15.0" fill="rgb(212,3,31)" rx="2" ry="2" />
<text  x="1130.99" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="541.2" y="1845" width="0.2" height="15.0" fill="rgb(231,83,25)" rx="2" ry="2" />
<text  x="544.18" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="563.5" y="1685" width="0.2" height="15.0" fill="rgb(224,127,44)" rx="2" ry="2" />
<text  x="566.51" y="1695.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="886.9" y="1925" width="0.2" height="15.0" fill="rgb(250,202,48)" rx="2" ry="2" />
<text  x="889.92" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (8 samples, 0.14%)</title><rect x="215.2" y="1925" width="1.6" height="15.0" fill="rgb(235,212,34)" rx="2" ry="2" />
<text  x="218.17" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="161.1" y="1829" width="0.2" height="15.0" fill="rgb(209,226,44)" rx="2" ry="2" />
<text  x="164.14" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="697.9" y="1765" width="0.2" height="15.0" fill="rgb(227,6,12)" rx="2" ry="2" />
<text  x="700.90" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="53.5" y="1813" width="0.2" height="15.0" fill="rgb(221,23,35)" rx="2" ry="2" />
<text  x="56.47" y="1823.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="397.4" y="1637" width="0.2" height="15.0" fill="rgb(205,134,20)" rx="2" ry="2" />
<text  x="400.42" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="725.6" y="1749" width="0.2" height="15.0" fill="rgb(219,72,53)" rx="2" ry="2" />
<text  x="728.62" y="1759.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="828.3" y="1669" width="0.2" height="15.0" fill="rgb(243,7,49)" rx="2" ry="2" />
<text  x="831.30" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="1158.5" y="1957" width="2.4" height="15.0" fill="rgb(229,98,11)" rx="2" ry="2" />
<text  x="1161.50" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1173" width="14.4" height="15.0" fill="rgb(244,111,33)" rx="2" ry="2" />
<text  x="108.11" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="225.9" y="1701" width="0.2" height="15.0" fill="rgb(207,145,19)" rx="2" ry="2" />
<text  x="228.94" y="1711.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (379 samples, 6.40%)</title><rect x="20.8" y="2053" width="75.5" height="15.0" fill="rgb(234,40,1)" rx="2" ry="2" />
<text  x="23.77" y="2063.5" >[libeven..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="674.8" y="1813" width="0.2" height="15.0" fill="rgb(242,77,8)" rx="2" ry="2" />
<text  x="677.77" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="641.7" y="1925" width="0.2" height="15.0" fill="rgb(251,180,2)" rx="2" ry="2" />
<text  x="644.67" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="453.0" y="1621" width="0.2" height="15.0" fill="rgb(216,126,14)" rx="2" ry="2" />
<text  x="456.05" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="216.6" y="1829" width="0.2" height="15.0" fill="rgb(234,214,35)" rx="2" ry="2" />
<text  x="219.57" y="1839.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="848.0" y="1909" width="0.2" height="15.0" fill="rgb(249,223,42)" rx="2" ry="2" />
<text  x="851.04" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (2 samples, 0.03%)</title><rect x="143.6" y="1941" width="0.4" height="15.0" fill="rgb(223,88,44)" rx="2" ry="2" />
<text  x="146.59" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1130.2" y="1925" width="0.4" height="15.0" fill="rgb(220,197,25)" rx="2" ry="2" />
<text  x="1133.18" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (6 samples, 0.10%)</title><rect x="111.3" y="53" width="1.2" height="15.0" fill="rgb(238,219,31)" rx="2" ry="2" />
<text  x="114.29" y="63.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="749.3" y="1749" width="0.2" height="15.0" fill="rgb(213,190,1)" rx="2" ry="2" />
<text  x="752.34" y="1759.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="939.8" y="1845" width="0.2" height="15.0" fill="rgb(210,143,16)" rx="2" ry="2" />
<text  x="942.76" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="534.2" y="1877" width="0.2" height="15.0" fill="rgb(214,102,18)" rx="2" ry="2" />
<text  x="537.20" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (82 samples, 1.39%)</title><rect x="293.3" y="1717" width="16.4" height="15.0" fill="rgb(216,12,46)" rx="2" ry="2" />
<text  x="296.34" y="1727.5" ></text>
</g>
<g >
<title>free_unref_page (19 samples, 0.32%)</title><rect x="1072.0" y="1845" width="3.7" height="15.0" fill="rgb(225,35,24)" rx="2" ry="2" />
<text  x="1074.96" y="1855.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1083.7" y="1925" width="0.2" height="15.0" fill="rgb(248,1,44)" rx="2" ry="2" />
<text  x="1086.72" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="264.2" y="1701" width="0.2" height="15.0" fill="rgb(238,164,37)" rx="2" ry="2" />
<text  x="267.22" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="828.3" y="1701" width="0.2" height="15.0" fill="rgb(215,49,28)" rx="2" ry="2" />
<text  x="831.30" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="640.5" y="1669" width="0.2" height="15.0" fill="rgb(210,198,11)" rx="2" ry="2" />
<text  x="643.48" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (74 samples, 1.25%)</title><rect x="662.8" y="1989" width="14.8" height="15.0" fill="rgb(222,61,47)" rx="2" ry="2" />
<text  x="665.81" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="52.3" y="1957" width="0.6" height="15.0" fill="rgb(211,213,42)" rx="2" ry="2" />
<text  x="55.27" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (27 samples, 0.46%)</title><rect x="922.4" y="1973" width="5.4" height="15.0" fill="rgb(210,80,6)" rx="2" ry="2" />
<text  x="925.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (105 samples, 1.77%)</title><rect x="659.0" y="2037" width="21.0" height="15.0" fill="rgb(216,176,34)" rx="2" ry="2" />
<text  x="662.02" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_active_ (7 samples, 0.12%)</title><rect x="1129.2" y="2053" width="1.4" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="1132.19" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1019.3" y="1989" width="0.2" height="15.0" fill="rgb(214,219,1)" rx="2" ry="2" />
<text  x="1022.32" y="1999.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="274.0" y="1765" width="0.2" height="15.0" fill="rgb(231,162,16)" rx="2" ry="2" />
<text  x="276.99" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="147.2" y="1909" width="0.2" height="15.0" fill="rgb(209,21,22)" rx="2" ry="2" />
<text  x="150.18" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="134.2" y="1925" width="0.2" height="15.0" fill="rgb(218,107,39)" rx="2" ry="2" />
<text  x="137.22" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="521.4" y="1957" width="0.4" height="15.0" fill="rgb(244,114,32)" rx="2" ry="2" />
<text  x="524.44" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="283.2" y="1781" width="0.2" height="15.0" fill="rgb(237,129,40)" rx="2" ry="2" />
<text  x="286.17" y="1791.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="488.7" y="1797" width="0.2" height="15.0" fill="rgb(251,205,20)" rx="2" ry="2" />
<text  x="491.74" y="1807.5" ></text>
</g>
<g >
<title>__GI___getsockname (1 samples, 0.02%)</title><rect x="163.5" y="2021" width="0.2" height="15.0" fill="rgb(215,207,29)" rx="2" ry="2" />
<text  x="166.53" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="602.8" y="1925" width="0.2" height="15.0" fill="rgb(216,167,34)" rx="2" ry="2" />
<text  x="605.79" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11 samples, 0.19%)</title><rect x="799.8" y="1541" width="2.2" height="15.0" fill="rgb(253,163,14)" rx="2" ry="2" />
<text  x="802.79" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="540.8" y="1941" width="1.2" height="15.0" fill="rgb(212,110,51)" rx="2" ry="2" />
<text  x="543.78" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="866.6" y="1909" width="0.2" height="15.0" fill="rgb(226,119,23)" rx="2" ry="2" />
<text  x="869.59" y="1919.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="193.8" y="2021" width="0.2" height="15.0" fill="rgb(251,170,47)" rx="2" ry="2" />
<text  x="196.84" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="377.7" y="1893" width="0.2" height="15.0" fill="rgb(236,62,28)" rx="2" ry="2" />
<text  x="380.68" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="779.1" y="1493" width="0.2" height="15.0" fill="rgb(209,157,20)" rx="2" ry="2" />
<text  x="782.05" y="1503.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="411.6" y="2005" width="0.2" height="15.0" fill="rgb(234,132,7)" rx="2" ry="2" />
<text  x="414.57" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="969.3" y="1989" width="0.2" height="15.0" fill="rgb(216,103,38)" rx="2" ry="2" />
<text  x="972.27" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (1 samples, 0.02%)</title><rect x="40.7" y="2021" width="0.2" height="15.0" fill="rgb(247,44,18)" rx="2" ry="2" />
<text  x="43.71" y="2031.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="224.1" y="1429" width="0.2" height="15.0" fill="rgb(239,226,20)" rx="2" ry="2" />
<text  x="227.15" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="99.9" y="2021" width="2.8" height="15.0" fill="rgb(227,185,13)" rx="2" ry="2" />
<text  x="102.93" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="268.2" y="1813" width="0.2" height="15.0" fill="rgb(243,174,46)" rx="2" ry="2" />
<text  x="271.21" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="462.4" y="1573" width="0.2" height="15.0" fill="rgb(214,214,17)" rx="2" ry="2" />
<text  x="465.42" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1126.8" y="1845" width="0.2" height="15.0" fill="rgb(209,222,16)" rx="2" ry="2" />
<text  x="1129.79" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="697.9" y="1861" width="0.2" height="15.0" fill="rgb(245,55,14)" rx="2" ry="2" />
<text  x="700.90" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="488.7" y="1877" width="0.2" height="15.0" fill="rgb(210,162,23)" rx="2" ry="2" />
<text  x="491.74" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="982.0" y="1925" width="0.2" height="15.0" fill="rgb(211,147,4)" rx="2" ry="2" />
<text  x="985.03" y="1935.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="586.0" y="1845" width="0.2" height="15.0" fill="rgb(232,62,9)" rx="2" ry="2" />
<text  x="589.04" y="1855.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (9 samples, 0.15%)</title><rect x="375.9" y="1893" width="1.8" height="15.0" fill="rgb(234,195,36)" rx="2" ry="2" />
<text  x="378.88" y="1903.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.02%)</title><rect x="359.3" y="1957" width="0.2" height="15.0" fill="rgb(238,206,24)" rx="2" ry="2" />
<text  x="362.33" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.14%)</title><rect x="939.0" y="1973" width="1.6" height="15.0" fill="rgb(250,27,9)" rx="2" ry="2" />
<text  x="941.97" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1145.3" y="1925" width="0.2" height="15.0" fill="rgb(205,69,52)" rx="2" ry="2" />
<text  x="1148.34" y="1935.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.02%)</title><rect x="192.4" y="2037" width="0.2" height="15.0" fill="rgb(253,33,21)" rx="2" ry="2" />
<text  x="195.44" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="569.3" y="1989" width="0.4" height="15.0" fill="rgb(224,209,49)" rx="2" ry="2" />
<text  x="572.29" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (2 samples, 0.03%)</title><rect x="78.2" y="1957" width="0.4" height="15.0" fill="rgb(228,172,46)" rx="2" ry="2" />
<text  x="81.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (1 samples, 0.02%)</title><rect x="183.5" y="2021" width="0.2" height="15.0" fill="rgb(242,125,15)" rx="2" ry="2" />
<text  x="186.47" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="648.9" y="1957" width="0.2" height="15.0" fill="rgb(208,90,25)" rx="2" ry="2" />
<text  x="651.85" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="324.4" y="1541" width="0.4" height="15.0" fill="rgb(207,190,47)" rx="2" ry="2" />
<text  x="327.44" y="1551.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="745.6" y="1733" width="0.2" height="15.0" fill="rgb(211,144,34)" rx="2" ry="2" />
<text  x="748.56" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (2 samples, 0.03%)</title><rect x="973.3" y="2005" width="0.4" height="15.0" fill="rgb(223,72,40)" rx="2" ry="2" />
<text  x="976.26" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="453.0" y="1861" width="0.2" height="15.0" fill="rgb(218,138,24)" rx="2" ry="2" />
<text  x="456.05" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="462.4" y="1685" width="0.2" height="15.0" fill="rgb(242,128,3)" rx="2" ry="2" />
<text  x="465.42" y="1695.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="64.0" y="1893" width="0.2" height="15.0" fill="rgb(205,76,48)" rx="2" ry="2" />
<text  x="67.04" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="562.1" y="1829" width="0.2" height="15.0" fill="rgb(235,182,41)" rx="2" ry="2" />
<text  x="565.12" y="1839.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="144.0" y="1941" width="0.2" height="15.0" fill="rgb(232,3,52)" rx="2" ry="2" />
<text  x="146.99" y="1951.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="828.3" y="1717" width="0.2" height="15.0" fill="rgb(214,194,2)" rx="2" ry="2" />
<text  x="831.30" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="583.1" y="1973" width="0.2" height="15.0" fill="rgb(238,46,17)" rx="2" ry="2" />
<text  x="586.05" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="85.4" y="1909" width="0.2" height="15.0" fill="rgb(221,203,53)" rx="2" ry="2" />
<text  x="88.37" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="10.0" y="1861" width="0.2" height="15.0" fill="rgb(209,84,40)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>event_add@plt (1 samples, 0.02%)</title><rect x="223.5" y="1861" width="0.2" height="15.0" fill="rgb(254,51,44)" rx="2" ry="2" />
<text  x="226.55" y="1871.5" ></text>
</g>
<g >
<title>ksize (5 samples, 0.08%)</title><rect x="766.7" y="1701" width="1.0" height="15.0" fill="rgb(213,12,49)" rx="2" ry="2" />
<text  x="769.69" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="534.2" y="1541" width="0.2" height="15.0" fill="rgb(219,196,32)" rx="2" ry="2" />
<text  x="537.20" y="1551.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="412.0" y="1701" width="0.2" height="15.0" fill="rgb(221,49,34)" rx="2" ry="2" />
<text  x="414.97" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="397.6" y="1685" width="0.2" height="15.0" fill="rgb(215,136,31)" rx="2" ry="2" />
<text  x="400.62" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="756.1" y="1589" width="0.2" height="15.0" fill="rgb(206,135,10)" rx="2" ry="2" />
<text  x="759.12" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="76.4" y="1925" width="0.2" height="15.0" fill="rgb(239,35,31)" rx="2" ry="2" />
<text  x="79.40" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="412.4" y="2021" width="3.0" height="15.0" fill="rgb(225,164,6)" rx="2" ry="2" />
<text  x="415.37" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="462.2" y="1845" width="0.2" height="15.0" fill="rgb(226,93,21)" rx="2" ry="2" />
<text  x="465.22" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="584.0" y="1925" width="2.2" height="15.0" fill="rgb(217,74,43)" rx="2" ry="2" />
<text  x="587.05" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1082.3" y="1909" width="0.2" height="15.0" fill="rgb(209,7,13)" rx="2" ry="2" />
<text  x="1085.33" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1019.3" y="2021" width="0.2" height="15.0" fill="rgb(237,180,51)" rx="2" ry="2" />
<text  x="1022.32" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (100 samples, 1.69%)</title><rect x="583.3" y="1989" width="19.9" height="15.0" fill="rgb(252,200,31)" rx="2" ry="2" />
<text  x="586.25" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="57.5" y="1797" width="0.2" height="15.0" fill="rgb(237,2,31)" rx="2" ry="2" />
<text  x="60.46" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="563.3" y="1829" width="0.6" height="15.0" fill="rgb(213,40,3)" rx="2" ry="2" />
<text  x="566.31" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="97.9" y="1733" width="0.2" height="15.0" fill="rgb(210,110,11)" rx="2" ry="2" />
<text  x="100.93" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="104.7" y="1525" width="16.4" height="15.0" fill="rgb(254,67,15)" rx="2" ry="2" />
<text  x="107.71" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (14 samples, 0.24%)</title><rect x="1176.2" y="2037" width="2.8" height="15.0" fill="rgb(233,78,10)" rx="2" ry="2" />
<text  x="1179.24" y="2047.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="477.2" y="1941" width="0.4" height="15.0" fill="rgb(249,76,4)" rx="2" ry="2" />
<text  x="480.17" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.9" y="1797" width="0.2" height="15.0" fill="rgb(236,173,53)" rx="2" ry="2" />
<text  x="126.85" y="1807.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1179.0" y="2021" width="0.6" height="15.0" fill="rgb(219,54,49)" rx="2" ry="2" />
<text  x="1182.03" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="482.6" y="1925" width="0.6" height="15.0" fill="rgb(207,141,30)" rx="2" ry="2" />
<text  x="485.56" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="124.7" y="1797" width="0.1" height="15.0" fill="rgb(250,162,34)" rx="2" ry="2" />
<text  x="127.65" y="1807.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.10%)</title><rect x="207.6" y="2005" width="1.2" height="15.0" fill="rgb(212,84,49)" rx="2" ry="2" />
<text  x="210.60" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (4 samples, 0.07%)</title><rect x="889.1" y="1909" width="0.8" height="15.0" fill="rgb(230,24,11)" rx="2" ry="2" />
<text  x="892.12" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="570.9" y="1941" width="0.2" height="15.0" fill="rgb(215,106,16)" rx="2" ry="2" />
<text  x="573.89" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8 samples, 0.14%)</title><rect x="1169.5" y="1989" width="1.6" height="15.0" fill="rgb(227,201,51)" rx="2" ry="2" />
<text  x="1172.46" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="483.0" y="1557" width="0.2" height="15.0" fill="rgb(253,229,18)" rx="2" ry="2" />
<text  x="485.96" y="1567.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="218.8" y="1877" width="0.2" height="15.0" fill="rgb(225,46,39)" rx="2" ry="2" />
<text  x="221.76" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="655.2" y="1957" width="0.2" height="15.0" fill="rgb(209,90,39)" rx="2" ry="2" />
<text  x="658.23" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (10 samples, 0.17%)</title><rect x="334.2" y="1909" width="2.0" height="15.0" fill="rgb(231,139,32)" rx="2" ry="2" />
<text  x="337.21" y="1919.5" ></text>
</g>
<g >
<title>netdev_pick_tx (10 samples, 0.17%)</title><rect x="295.9" y="1701" width="2.0" height="15.0" fill="rgb(213,188,45)" rx="2" ry="2" />
<text  x="298.93" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="571.5" y="1829" width="0.2" height="15.0" fill="rgb(223,87,5)" rx="2" ry="2" />
<text  x="574.49" y="1839.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="164.3" y="2021" width="0.4" height="15.0" fill="rgb(224,24,34)" rx="2" ry="2" />
<text  x="167.33" y="2031.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="844.3" y="1877" width="0.4" height="15.0" fill="rgb(235,117,38)" rx="2" ry="2" />
<text  x="847.25" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="330.2" y="1717" width="0.2" height="15.0" fill="rgb(248,211,41)" rx="2" ry="2" />
<text  x="333.22" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="40.1" y="1925" width="0.2" height="15.0" fill="rgb(218,169,26)" rx="2" ry="2" />
<text  x="43.11" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="78.4" y="1717" width="0.2" height="15.0" fill="rgb(230,160,51)" rx="2" ry="2" />
<text  x="81.39" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1012.7" y="1669" width="0.2" height="15.0" fill="rgb(213,58,36)" rx="2" ry="2" />
<text  x="1015.74" y="1679.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="899.7" y="2005" width="0.2" height="15.0" fill="rgb(218,140,15)" rx="2" ry="2" />
<text  x="902.69" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="603.6" y="2005" width="0.4" height="15.0" fill="rgb(246,199,39)" rx="2" ry="2" />
<text  x="606.59" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="948.1" y="1989" width="0.4" height="15.0" fill="rgb(242,17,26)" rx="2" ry="2" />
<text  x="951.14" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="537.2" y="1941" width="0.8" height="15.0" fill="rgb(242,117,30)" rx="2" ry="2" />
<text  x="540.19" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="679.8" y="1877" width="0.2" height="15.0" fill="rgb(207,97,41)" rx="2" ry="2" />
<text  x="682.76" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="67.4" y="1925" width="1.0" height="15.0" fill="rgb(220,71,51)" rx="2" ry="2" />
<text  x="70.42" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="76.4" y="1893" width="0.2" height="15.0" fill="rgb(230,33,25)" rx="2" ry="2" />
<text  x="79.40" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1349" width="15.8" height="15.0" fill="rgb(214,91,8)" rx="2" ry="2" />
<text  x="107.71" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="613.4" y="1845" width="0.8" height="15.0" fill="rgb(214,71,19)" rx="2" ry="2" />
<text  x="616.36" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="40.1" y="1941" width="0.2" height="15.0" fill="rgb(219,7,42)" rx="2" ry="2" />
<text  x="43.11" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="453.8" y="1701" width="0.2" height="15.0" fill="rgb(239,162,14)" rx="2" ry="2" />
<text  x="456.85" y="1711.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="477.8" y="1957" width="0.4" height="15.0" fill="rgb(245,157,35)" rx="2" ry="2" />
<text  x="480.77" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.15%)</title><rect x="105.1" y="117" width="13.6" height="15.0" fill="rgb(217,162,4)" rx="2" ry="2" />
<text  x="108.11" y="127.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="883.3" y="1829" width="0.2" height="15.0" fill="rgb(224,109,23)" rx="2" ry="2" />
<text  x="886.34" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="336.2" y="1781" width="0.2" height="15.0" fill="rgb(245,136,42)" rx="2" ry="2" />
<text  x="339.20" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="999.8" y="1973" width="0.4" height="15.0" fill="rgb(224,39,45)" rx="2" ry="2" />
<text  x="1002.78" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="643.5" y="1957" width="0.2" height="15.0" fill="rgb(219,123,35)" rx="2" ry="2" />
<text  x="646.47" y="1967.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="827.9" y="1701" width="0.4" height="15.0" fill="rgb(212,36,14)" rx="2" ry="2" />
<text  x="830.90" y="1711.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="698.1" y="1973" width="0.2" height="15.0" fill="rgb(220,45,42)" rx="2" ry="2" />
<text  x="701.10" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="599.8" y="1669" width="0.4" height="15.0" fill="rgb(250,79,44)" rx="2" ry="2" />
<text  x="602.80" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="842.9" y="1845" width="0.2" height="15.0" fill="rgb(206,2,35)" rx="2" ry="2" />
<text  x="845.86" y="1855.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="189.9" y="1717" width="0.2" height="15.0" fill="rgb(209,59,46)" rx="2" ry="2" />
<text  x="192.85" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1008.8" y="1829" width="0.2" height="15.0" fill="rgb(228,216,50)" rx="2" ry="2" />
<text  x="1011.75" y="1839.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="482.8" y="1749" width="0.2" height="15.0" fill="rgb(205,28,43)" rx="2" ry="2" />
<text  x="485.76" y="1759.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="694.9" y="1861" width="0.2" height="15.0" fill="rgb(225,207,33)" rx="2" ry="2" />
<text  x="697.91" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="176.9" y="1957" width="0.4" height="15.0" fill="rgb(207,22,49)" rx="2" ry="2" />
<text  x="179.89" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (14 samples, 0.24%)</title><rect x="64.6" y="1925" width="2.8" height="15.0" fill="rgb(241,137,54)" rx="2" ry="2" />
<text  x="67.63" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="990.0" y="1893" width="1.0" height="15.0" fill="rgb(243,70,8)" rx="2" ry="2" />
<text  x="993.01" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="640.9" y="1909" width="0.4" height="15.0" fill="rgb(242,182,0)" rx="2" ry="2" />
<text  x="643.88" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="830.9" y="1749" width="0.2" height="15.0" fill="rgb(225,188,34)" rx="2" ry="2" />
<text  x="833.90" y="1759.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="1126.8" y="1701" width="0.2" height="15.0" fill="rgb(243,24,1)" rx="2" ry="2" />
<text  x="1129.79" y="1711.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (4 samples, 0.07%)</title><rect x="841.7" y="1925" width="0.8" height="15.0" fill="rgb(247,126,11)" rx="2" ry="2" />
<text  x="844.66" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="225.9" y="1685" width="0.2" height="15.0" fill="rgb(253,37,11)" rx="2" ry="2" />
<text  x="228.94" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1158.3" y="1493" width="0.2" height="15.0" fill="rgb(243,89,14)" rx="2" ry="2" />
<text  x="1161.30" y="1503.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1104.5" y="1397" width="0.2" height="15.0" fill="rgb(245,59,42)" rx="2" ry="2" />
<text  x="1107.46" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="704.5" y="1829" width="0.2" height="15.0" fill="rgb(209,63,51)" rx="2" ry="2" />
<text  x="707.48" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="25.6" y="2037" width="0.4" height="15.0" fill="rgb(224,92,9)" rx="2" ry="2" />
<text  x="28.55" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="999.4" y="1973" width="0.2" height="15.0" fill="rgb(218,20,21)" rx="2" ry="2" />
<text  x="1002.38" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (2 samples, 0.03%)</title><rect x="563.5" y="1733" width="0.4" height="15.0" fill="rgb(207,150,15)" rx="2" ry="2" />
<text  x="566.51" y="1743.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="563.3" y="1733" width="0.2" height="15.0" fill="rgb(223,176,37)" rx="2" ry="2" />
<text  x="566.31" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="225.9" y="1749" width="0.2" height="15.0" fill="rgb(235,21,43)" rx="2" ry="2" />
<text  x="228.94" y="1759.5" ></text>
</g>
<g >
<title>tcp_tso_segs (3 samples, 0.05%)</title><rect x="816.5" y="1685" width="0.6" height="15.0" fill="rgb(219,51,2)" rx="2" ry="2" />
<text  x="819.54" y="1695.5" ></text>
</g>
<g >
<title>tcp_write_xmit (238 samples, 4.02%)</title><rect x="280.2" y="1845" width="47.4" height="15.0" fill="rgb(231,18,42)" rx="2" ry="2" />
<text  x="283.18" y="1855.5" >tcp_..</text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="996.4" y="1637" width="0.2" height="15.0" fill="rgb(250,214,1)" rx="2" ry="2" />
<text  x="999.39" y="1647.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="479.0" y="1925" width="0.2" height="15.0" fill="rgb(238,105,26)" rx="2" ry="2" />
<text  x="481.97" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (10 samples, 0.17%)</title><rect x="129.4" y="1989" width="2.0" height="15.0" fill="rgb(244,189,52)" rx="2" ry="2" />
<text  x="132.44" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1157.9" y="1925" width="0.6" height="15.0" fill="rgb(237,195,54)" rx="2" ry="2" />
<text  x="1160.90" y="1935.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::RunTimeOrder::operator (1 samples, 0.02%)</title><rect x="10.2" y="1877" width="0.2" height="15.0" fill="rgb(244,153,1)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="68.4" y="1941" width="0.2" height="15.0" fill="rgb(236,40,49)" rx="2" ry="2" />
<text  x="71.42" y="1951.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1188.4" y="2005" width="0.8" height="15.0" fill="rgb(244,1,19)" rx="2" ry="2" />
<text  x="1191.40" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="453.0" y="1845" width="0.2" height="15.0" fill="rgb(205,163,2)" rx="2" ry="2" />
<text  x="456.05" y="1855.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="157.0" y="1541" width="0.2" height="15.0" fill="rgb(215,101,44)" rx="2" ry="2" />
<text  x="159.95" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="336.2" y="1717" width="0.2" height="15.0" fill="rgb(244,176,30)" rx="2" ry="2" />
<text  x="339.20" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="883.3" y="1813" width="0.2" height="15.0" fill="rgb(253,102,22)" rx="2" ry="2" />
<text  x="886.34" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="483.0" y="1541" width="0.2" height="15.0" fill="rgb(247,117,53)" rx="2" ry="2" />
<text  x="485.96" y="1551.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="153.2" y="1877" width="0.2" height="15.0" fill="rgb(211,77,2)" rx="2" ry="2" />
<text  x="156.16" y="1887.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="321.6" y="1765" width="0.2" height="15.0" fill="rgb(206,217,54)" rx="2" ry="2" />
<text  x="324.65" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="333.0" y="1781" width="0.2" height="15.0" fill="rgb(241,189,43)" rx="2" ry="2" />
<text  x="336.01" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.6" y="1957" width="0.2" height="15.0" fill="rgb(226,175,18)" rx="2" ry="2" />
<text  x="861.61" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1178.2" y="1973" width="0.2" height="15.0" fill="rgb(240,28,40)" rx="2" ry="2" />
<text  x="1181.24" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="783.2" y="1557" width="0.4" height="15.0" fill="rgb(221,155,12)" rx="2" ry="2" />
<text  x="786.24" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="640.1" y="1909" width="0.6" height="15.0" fill="rgb(250,109,6)" rx="2" ry="2" />
<text  x="643.08" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="951.7" y="2005" width="0.2" height="15.0" fill="rgb(224,102,43)" rx="2" ry="2" />
<text  x="954.73" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1111.4" y="1749" width="0.2" height="15.0" fill="rgb(221,93,24)" rx="2" ry="2" />
<text  x="1114.44" y="1759.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="69.6" y="1909" width="0.2" height="15.0" fill="rgb(239,145,47)" rx="2" ry="2" />
<text  x="72.62" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="665.2" y="1893" width="0.2" height="15.0" fill="rgb(240,8,31)" rx="2" ry="2" />
<text  x="668.20" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="189.9" y="1829" width="0.2" height="15.0" fill="rgb(212,100,8)" rx="2" ry="2" />
<text  x="192.85" y="1839.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="815.7" y="1685" width="0.2" height="15.0" fill="rgb(211,193,23)" rx="2" ry="2" />
<text  x="818.74" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="546.2" y="1925" width="1.0" height="15.0" fill="rgb(243,70,8)" rx="2" ry="2" />
<text  x="549.16" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="157.9" y="1685" width="0.2" height="15.0" fill="rgb(221,12,10)" rx="2" ry="2" />
<text  x="160.95" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="703.3" y="1973" width="0.4" height="15.0" fill="rgb(244,159,52)" rx="2" ry="2" />
<text  x="706.28" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.08%)</title><rect x="155.8" y="1861" width="1.0" height="15.0" fill="rgb(215,121,24)" rx="2" ry="2" />
<text  x="158.76" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="571.5" y="1845" width="0.2" height="15.0" fill="rgb(246,49,41)" rx="2" ry="2" />
<text  x="574.49" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="934.0" y="1877" width="0.6" height="15.0" fill="rgb(233,104,51)" rx="2" ry="2" />
<text  x="936.98" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="572.5" y="1957" width="0.2" height="15.0" fill="rgb(214,45,43)" rx="2" ry="2" />
<text  x="575.48" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="157.0" y="1637" width="0.2" height="15.0" fill="rgb(210,147,51)" rx="2" ry="2" />
<text  x="159.95" y="1647.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1109.4" y="1477" width="0.2" height="15.0" fill="rgb(237,39,28)" rx="2" ry="2" />
<text  x="1112.45" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="85.0" y="1925" width="0.6" height="15.0" fill="rgb(247,14,34)" rx="2" ry="2" />
<text  x="87.97" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="150.6" y="1877" width="0.6" height="15.0" fill="rgb(216,99,28)" rx="2" ry="2" />
<text  x="153.57" y="1887.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="808.6" y="1685" width="0.4" height="15.0" fill="rgb(213,70,10)" rx="2" ry="2" />
<text  x="811.56" y="1695.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1101.3" y="1877" width="0.2" height="15.0" fill="rgb(215,178,8)" rx="2" ry="2" />
<text  x="1104.27" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="139.6" y="1941" width="0.2" height="15.0" fill="rgb(218,39,47)" rx="2" ry="2" />
<text  x="142.60" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (734 samples, 12.40%)</title><rect x="711.9" y="1973" width="146.3" height="15.0" fill="rgb(208,4,10)" rx="2" ry="2" />
<text  x="714.86" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1130.2" y="1813" width="0.4" height="15.0" fill="rgb(244,75,32)" rx="2" ry="2" />
<text  x="1133.18" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="40.1" y="1829" width="0.2" height="15.0" fill="rgb(250,2,20)" rx="2" ry="2" />
<text  x="43.11" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="542.0" y="1829" width="0.2" height="15.0" fill="rgb(252,172,8)" rx="2" ry="2" />
<text  x="544.98" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="224.1" y="1749" width="0.2" height="15.0" fill="rgb(217,44,17)" rx="2" ry="2" />
<text  x="227.15" y="1759.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="746.4" y="1525" width="0.2" height="15.0" fill="rgb(241,18,29)" rx="2" ry="2" />
<text  x="749.35" y="1535.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1189.8" y="1941" width="0.2" height="15.0" fill="rgb(236,125,5)" rx="2" ry="2" />
<text  x="1192.80" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="529.2" y="2005" width="0.8" height="15.0" fill="rgb(217,3,31)" rx="2" ry="2" />
<text  x="532.22" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="178.9" y="1941" width="0.2" height="15.0" fill="rgb(220,76,27)" rx="2" ry="2" />
<text  x="181.88" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1171.9" y="1973" width="0.4" height="15.0" fill="rgb(243,174,23)" rx="2" ry="2" />
<text  x="1174.86" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.9" y="1845" width="0.2" height="15.0" fill="rgb(228,195,20)" rx="2" ry="2" />
<text  x="160.95" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="971.5" y="2021" width="1.4" height="15.0" fill="rgb(253,136,47)" rx="2" ry="2" />
<text  x="974.47" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="824.9" y="1477" width="0.2" height="15.0" fill="rgb(219,90,8)" rx="2" ry="2" />
<text  x="827.91" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="148.6" y="1877" width="0.2" height="15.0" fill="rgb(243,217,17)" rx="2" ry="2" />
<text  x="151.58" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="675.0" y="1925" width="0.6" height="15.0" fill="rgb(249,142,42)" rx="2" ry="2" />
<text  x="677.97" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="160.3" y="1797" width="0.2" height="15.0" fill="rgb(231,218,14)" rx="2" ry="2" />
<text  x="163.34" y="1807.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="10.6" y="1925" width="0.2" height="15.0" fill="rgb(222,28,22)" rx="2" ry="2" />
<text  x="13.60" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (6 samples, 0.10%)</title><rect x="290.5" y="1653" width="1.2" height="15.0" fill="rgb(219,221,3)" rx="2" ry="2" />
<text  x="293.54" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="527.2" y="1973" width="1.0" height="15.0" fill="rgb(213,122,7)" rx="2" ry="2" />
<text  x="530.22" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="247.1" y="1909" width="0.2" height="15.0" fill="rgb(223,8,50)" rx="2" ry="2" />
<text  x="250.08" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="912.6" y="1877" width="0.2" height="15.0" fill="rgb(218,26,7)" rx="2" ry="2" />
<text  x="915.65" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (51 samples, 0.86%)</title><rect x="128.8" y="2005" width="10.2" height="15.0" fill="rgb(221,165,8)" rx="2" ry="2" />
<text  x="131.84" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (3 samples, 0.05%)</title><rect x="149.4" y="1877" width="0.6" height="15.0" fill="rgb(211,197,32)" rx="2" ry="2" />
<text  x="152.37" y="1887.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (6 samples, 0.10%)</title><rect x="753.9" y="1717" width="1.2" height="15.0" fill="rgb(209,68,4)" rx="2" ry="2" />
<text  x="756.93" y="1727.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="679.2" y="2021" width="0.2" height="15.0" fill="rgb(237,170,0)" rx="2" ry="2" />
<text  x="682.16" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="219.8" y="1877" width="1.0" height="15.0" fill="rgb(220,143,1)" rx="2" ry="2" />
<text  x="222.76" y="1887.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1178.2" y="1957" width="0.2" height="15.0" fill="rgb(209,207,52)" rx="2" ry="2" />
<text  x="1181.24" y="1967.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="998.8" y="1941" width="0.2" height="15.0" fill="rgb(229,84,29)" rx="2" ry="2" />
<text  x="1001.78" y="1951.5" ></text>
</g>
<g >
<title>copy_page_to_iter (7 samples, 0.12%)</title><rect x="1096.5" y="1909" width="1.4" height="15.0" fill="rgb(252,6,34)" rx="2" ry="2" />
<text  x="1099.49" y="1919.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="985.4" y="1893" width="0.2" height="15.0" fill="rgb(224,171,2)" rx="2" ry="2" />
<text  x="988.42" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="836.7" y="1717" width="0.2" height="15.0" fill="rgb(212,226,5)" rx="2" ry="2" />
<text  x="839.68" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="453.0" y="1893" width="0.2" height="15.0" fill="rgb(251,152,45)" rx="2" ry="2" />
<text  x="456.05" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="290.7" y="1477" width="0.2" height="15.0" fill="rgb(244,142,53)" rx="2" ry="2" />
<text  x="293.74" y="1487.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="674.2" y="1861" width="0.8" height="15.0" fill="rgb(209,163,54)" rx="2" ry="2" />
<text  x="677.17" y="1871.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="453.8" y="1525" width="0.2" height="15.0" fill="rgb(215,58,27)" rx="2" ry="2" />
<text  x="456.85" y="1535.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="63.6" y="1861" width="0.2" height="15.0" fill="rgb(221,126,21)" rx="2" ry="2" />
<text  x="66.64" y="1871.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="137.2" y="1957" width="0.2" height="15.0" fill="rgb(233,171,7)" rx="2" ry="2" />
<text  x="140.21" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="542.0" y="1893" width="0.2" height="15.0" fill="rgb(253,205,11)" rx="2" ry="2" />
<text  x="544.98" y="1903.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="1050.4" y="1973" width="0.2" height="15.0" fill="rgb(208,73,23)" rx="2" ry="2" />
<text  x="1053.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="534.2" y="1765" width="0.2" height="15.0" fill="rgb(222,172,24)" rx="2" ry="2" />
<text  x="537.20" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="118.9" y="197" width="0.2" height="15.0" fill="rgb(243,185,3)" rx="2" ry="2" />
<text  x="121.87" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (25 samples, 0.42%)</title><rect x="11.8" y="1829" width="5.0" height="15.0" fill="rgb(234,213,51)" rx="2" ry="2" />
<text  x="14.79" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="644.9" y="1845" width="0.2" height="15.0" fill="rgb(241,86,44)" rx="2" ry="2" />
<text  x="647.86" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (1 samples, 0.02%)</title><rect x="1172.9" y="2053" width="0.2" height="15.0" fill="rgb(248,36,21)" rx="2" ry="2" />
<text  x="1175.85" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="725.6" y="1765" width="0.2" height="15.0" fill="rgb(217,30,16)" rx="2" ry="2" />
<text  x="728.62" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1000.2" y="1973" width="0.2" height="15.0" fill="rgb(235,116,16)" rx="2" ry="2" />
<text  x="1003.18" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="160.1" y="1941" width="0.2" height="15.0" fill="rgb(211,18,15)" rx="2" ry="2" />
<text  x="163.14" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="264.2" y="1781" width="0.4" height="15.0" fill="rgb(240,216,30)" rx="2" ry="2" />
<text  x="267.22" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (5 samples, 0.08%)</title><rect x="614.2" y="1845" width="1.0" height="15.0" fill="rgb(233,40,46)" rx="2" ry="2" />
<text  x="617.16" y="1855.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="665.2" y="1653" width="0.2" height="15.0" fill="rgb(228,211,43)" rx="2" ry="2" />
<text  x="668.20" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="38.5" y="1861" width="0.2" height="15.0" fill="rgb(252,199,35)" rx="2" ry="2" />
<text  x="41.51" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="975.1" y="2005" width="0.4" height="15.0" fill="rgb(216,187,18)" rx="2" ry="2" />
<text  x="978.06" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="524.2" y="1973" width="0.2" height="15.0" fill="rgb(247,17,53)" rx="2" ry="2" />
<text  x="527.23" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="377.7" y="1909" width="0.2" height="15.0" fill="rgb(233,164,43)" rx="2" ry="2" />
<text  x="380.68" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="453.4" y="1973" width="0.2" height="15.0" fill="rgb(212,129,29)" rx="2" ry="2" />
<text  x="456.45" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="524.4" y="1989" width="0.2" height="15.0" fill="rgb(218,105,29)" rx="2" ry="2" />
<text  x="527.43" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (64 samples, 1.08%)</title><rect x="605.0" y="1989" width="12.7" height="15.0" fill="rgb(217,66,5)" rx="2" ry="2" />
<text  x="607.98" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="602.8" y="1861" width="0.2" height="15.0" fill="rgb(243,75,25)" rx="2" ry="2" />
<text  x="605.79" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="808.4" y="1669" width="0.2" height="15.0" fill="rgb(217,42,16)" rx="2" ry="2" />
<text  x="811.36" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="626.5" y="2021" width="1.4" height="15.0" fill="rgb(249,117,50)" rx="2" ry="2" />
<text  x="629.52" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="183.1" y="1973" width="0.4" height="15.0" fill="rgb(223,193,5)" rx="2" ry="2" />
<text  x="186.07" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="290.3" y="1669" width="0.2" height="15.0" fill="rgb(231,30,19)" rx="2" ry="2" />
<text  x="293.34" y="1679.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1174.0" y="2037" width="0.2" height="15.0" fill="rgb(248,195,16)" rx="2" ry="2" />
<text  x="1177.05" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="453.8" y="1685" width="0.2" height="15.0" fill="rgb(241,65,25)" rx="2" ry="2" />
<text  x="456.85" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="129.8" y="1957" width="1.2" height="15.0" fill="rgb(245,107,21)" rx="2" ry="2" />
<text  x="132.83" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (26 samples, 0.44%)</title><rect x="612.2" y="1909" width="5.1" height="15.0" fill="rgb(243,37,5)" rx="2" ry="2" />
<text  x="615.16" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="832.3" y="1669" width="0.2" height="15.0" fill="rgb(254,15,26)" rx="2" ry="2" />
<text  x="835.29" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.1" y="1877" width="0.2" height="15.0" fill="rgb(208,30,48)" rx="2" ry="2" />
<text  x="887.13" y="1887.5" ></text>
</g>
<g >
<title>malloc (41 samples, 0.69%)</title><rect x="1181.0" y="2053" width="8.2" height="15.0" fill="rgb(241,129,48)" rx="2" ry="2" />
<text  x="1184.03" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (17 samples, 0.29%)</title><rect x="347.2" y="2021" width="3.4" height="15.0" fill="rgb(254,165,20)" rx="2" ry="2" />
<text  x="350.17" y="2031.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (40 samples, 0.68%)</title><rect x="996.6" y="2037" width="8.0" height="15.0" fill="rgb(228,19,53)" rx="2" ry="2" />
<text  x="999.59" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="520.8" y="1941" width="0.2" height="15.0" fill="rgb(229,180,50)" rx="2" ry="2" />
<text  x="523.84" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="158.9" y="1941" width="0.2" height="15.0" fill="rgb(253,222,22)" rx="2" ry="2" />
<text  x="161.95" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="1020.3" y="2037" width="0.8" height="15.0" fill="rgb(224,94,12)" rx="2" ry="2" />
<text  x="1023.32" y="2047.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="246.1" y="1957" width="1.0" height="15.0" fill="rgb(238,166,44)" rx="2" ry="2" />
<text  x="249.08" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1111.2" y="1749" width="0.2" height="15.0" fill="rgb(210,50,14)" rx="2" ry="2" />
<text  x="1114.24" y="1759.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="339.2" y="1893" width="0.8" height="15.0" fill="rgb(216,108,6)" rx="2" ry="2" />
<text  x="342.20" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="745.6" y="1781" width="0.2" height="15.0" fill="rgb(245,106,50)" rx="2" ry="2" />
<text  x="748.56" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="2021" width="0.2" height="15.0" fill="rgb(247,151,47)" rx="2" ry="2" />
<text  x="239.51" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="1160.9" y="2053" width="0.2" height="15.0" fill="rgb(253,201,19)" rx="2" ry="2" />
<text  x="1163.89" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="225.9" y="1653" width="0.2" height="15.0" fill="rgb(216,58,52)" rx="2" ry="2" />
<text  x="228.94" y="1663.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="546.4" y="1893" width="0.8" height="15.0" fill="rgb(228,63,27)" rx="2" ry="2" />
<text  x="549.36" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (17 samples, 0.29%)</title><rect x="701.3" y="2021" width="3.4" height="15.0" fill="rgb(206,59,19)" rx="2" ry="2" />
<text  x="704.29" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.7" y="1461" width="0.2" height="15.0" fill="rgb(250,136,46)" rx="2" ry="2" />
<text  x="123.66" y="1471.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (2 samples, 0.03%)</title><rect x="522.0" y="1941" width="0.4" height="15.0" fill="rgb(205,70,54)" rx="2" ry="2" />
<text  x="525.04" y="1951.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="563.7" y="1669" width="0.2" height="15.0" fill="rgb(232,107,16)" rx="2" ry="2" />
<text  x="566.71" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="837" width="14.2" height="15.0" fill="rgb(234,205,26)" rx="2" ry="2" />
<text  x="108.11" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="114.3" y="37" width="0.2" height="15.0" fill="rgb(248,20,43)" rx="2" ry="2" />
<text  x="117.28" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1171.5" y="2005" width="0.2" height="15.0" fill="rgb(217,61,1)" rx="2" ry="2" />
<text  x="1174.46" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="582.9" y="1989" width="0.4" height="15.0" fill="rgb(246,23,14)" rx="2" ry="2" />
<text  x="585.85" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="226.5" y="1877" width="0.4" height="15.0" fill="rgb(234,143,46)" rx="2" ry="2" />
<text  x="229.54" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="852.0" y="1925" width="0.2" height="15.0" fill="rgb(238,213,41)" rx="2" ry="2" />
<text  x="855.03" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="957.5" y="2021" width="4.6" height="15.0" fill="rgb(226,200,53)" rx="2" ry="2" />
<text  x="960.51" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="745.6" y="1717" width="0.2" height="15.0" fill="rgb(211,27,20)" rx="2" ry="2" />
<text  x="748.56" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1029" width="14.4" height="15.0" fill="rgb(232,17,48)" rx="2" ry="2" />
<text  x="108.11" y="1039.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="106.3" y="37" width="0.2" height="15.0" fill="rgb(244,110,42)" rx="2" ry="2" />
<text  x="109.31" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="324.4" y="1573" width="0.4" height="15.0" fill="rgb(229,196,40)" rx="2" ry="2" />
<text  x="327.44" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (23 samples, 0.39%)</title><rect x="612.2" y="1877" width="4.5" height="15.0" fill="rgb(213,168,52)" rx="2" ry="2" />
<text  x="615.16" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (101 samples, 1.71%)</title><rect x="70.4" y="1989" width="20.2" height="15.0" fill="rgb(207,55,35)" rx="2" ry="2" />
<text  x="73.42" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="531.0" y="2021" width="0.2" height="15.0" fill="rgb(221,105,39)" rx="2" ry="2" />
<text  x="534.01" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (6 samples, 0.10%)</title><rect x="215.6" y="1893" width="1.2" height="15.0" fill="rgb(218,1,44)" rx="2" ry="2" />
<text  x="218.57" y="1903.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="483.0" y="1525" width="0.2" height="15.0" fill="rgb(247,7,24)" rx="2" ry="2" />
<text  x="485.96" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="151.2" y="1893" width="0.2" height="15.0" fill="rgb(225,212,43)" rx="2" ry="2" />
<text  x="154.17" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="938.8" y="1973" width="0.2" height="15.0" fill="rgb(216,115,43)" rx="2" ry="2" />
<text  x="941.77" y="1983.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1158.3" y="1637" width="0.2" height="15.0" fill="rgb(221,24,17)" rx="2" ry="2" />
<text  x="1161.30" y="1647.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (7 samples, 0.12%)</title><rect x="570.3" y="1989" width="1.4" height="15.0" fill="rgb(217,190,32)" rx="2" ry="2" />
<text  x="573.29" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="115.9" y="37" width="0.4" height="15.0" fill="rgb(208,61,41)" rx="2" ry="2" />
<text  x="118.88" y="47.5" ></text>
</g>
<g >
<title>find_exception (1 samples, 0.02%)</title><rect x="1126.8" y="1653" width="0.2" height="15.0" fill="rgb(229,96,38)" rx="2" ry="2" />
<text  x="1129.79" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1012.7" y="1877" width="0.2" height="15.0" fill="rgb(220,32,43)" rx="2" ry="2" />
<text  x="1015.74" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (7 samples, 0.12%)</title><rect x="971.5" y="2037" width="1.4" height="15.0" fill="rgb(237,184,6)" rx="2" ry="2" />
<text  x="974.47" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (5 samples, 0.08%)</title><rect x="157.4" y="1909" width="0.9" height="15.0" fill="rgb(213,175,35)" rx="2" ry="2" />
<text  x="160.35" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="907.1" y="1941" width="0.2" height="15.0" fill="rgb(254,74,25)" rx="2" ry="2" />
<text  x="910.06" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.6" y="1845" width="0.2" height="15.0" fill="rgb(205,217,44)" rx="2" ry="2" />
<text  x="854.63" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="181" width="13.8" height="15.0" fill="rgb(224,157,20)" rx="2" ry="2" />
<text  x="108.11" y="191.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="648.9" y="1909" width="0.2" height="15.0" fill="rgb(228,75,24)" rx="2" ry="2" />
<text  x="651.85" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (2 samples, 0.03%)</title><rect x="622.3" y="2037" width="0.4" height="15.0" fill="rgb(247,100,47)" rx="2" ry="2" />
<text  x="625.33" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="154.4" y="1893" width="0.2" height="15.0" fill="rgb(210,75,24)" rx="2" ry="2" />
<text  x="157.36" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.8" y="1893" width="0.2" height="15.0" fill="rgb(232,209,13)" rx="2" ry="2" />
<text  x="19.78" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="157.9" y="1621" width="0.2" height="15.0" fill="rgb(230,174,49)" rx="2" ry="2" />
<text  x="160.95" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="628.5" y="2005" width="0.4" height="15.0" fill="rgb(216,170,43)" rx="2" ry="2" />
<text  x="631.51" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.7" y="1925" width="0.2" height="15.0" fill="rgb(223,79,18)" rx="2" ry="2" />
<text  x="887.73" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (3 samples, 0.05%)</title><rect x="571.1" y="1957" width="0.6" height="15.0" fill="rgb(216,196,1)" rx="2" ry="2" />
<text  x="574.09" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1019.3" y="1845" width="0.2" height="15.0" fill="rgb(244,31,18)" rx="2" ry="2" />
<text  x="1022.32" y="1855.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="69.6" y="1877" width="0.2" height="15.0" fill="rgb(213,25,16)" rx="2" ry="2" />
<text  x="72.62" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="1111.2" y="1765" width="0.6" height="15.0" fill="rgb(245,19,13)" rx="2" ry="2" />
<text  x="1114.24" y="1775.5" ></text>
</g>
<g >
<title>__memchr_avx2 (5 samples, 0.08%)</title><rect x="1142.5" y="1973" width="1.0" height="15.0" fill="rgb(249,101,7)" rx="2" ry="2" />
<text  x="1145.54" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="106.7" y="37" width="0.4" height="15.0" fill="rgb(207,184,48)" rx="2" ry="2" />
<text  x="109.70" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1013.1" y="1877" width="0.2" height="15.0" fill="rgb(227,38,5)" rx="2" ry="2" />
<text  x="1016.14" y="1887.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1157.9" y="1717" width="0.2" height="15.0" fill="rgb(229,138,45)" rx="2" ry="2" />
<text  x="1160.90" y="1727.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="597.2" y="1845" width="0.2" height="15.0" fill="rgb(223,65,27)" rx="2" ry="2" />
<text  x="600.21" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="145.4" y="1925" width="0.2" height="15.0" fill="rgb(237,102,19)" rx="2" ry="2" />
<text  x="148.39" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="969.3" y="1941" width="0.2" height="15.0" fill="rgb(248,144,7)" rx="2" ry="2" />
<text  x="972.27" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1157.5" y="1733" width="0.2" height="15.0" fill="rgb(212,113,32)" rx="2" ry="2" />
<text  x="1160.50" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="858.6" y="1925" width="0.2" height="15.0" fill="rgb(231,212,13)" rx="2" ry="2" />
<text  x="861.61" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="386.7" y="1685" width="0.2" height="15.0" fill="rgb(224,146,38)" rx="2" ry="2" />
<text  x="389.65" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1081.1" y="1925" width="0.2" height="15.0" fill="rgb(237,64,3)" rx="2" ry="2" />
<text  x="1084.13" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="541.6" y="1909" width="0.4" height="15.0" fill="rgb(215,121,35)" rx="2" ry="2" />
<text  x="544.58" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="585.2" y="1893" width="0.2" height="15.0" fill="rgb(209,124,42)" rx="2" ry="2" />
<text  x="588.25" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="508.1" y="1733" width="0.2" height="15.0" fill="rgb(231,24,29)" rx="2" ry="2" />
<text  x="511.08" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="102.7" y="1925" width="0.2" height="15.0" fill="rgb(221,151,48)" rx="2" ry="2" />
<text  x="105.72" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="336.0" y="1605" width="0.2" height="15.0" fill="rgb(224,178,2)" rx="2" ry="2" />
<text  x="339.01" y="1615.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="935.0" y="1877" width="0.2" height="15.0" fill="rgb(241,20,15)" rx="2" ry="2" />
<text  x="937.98" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="339.2" y="1877" width="0.8" height="15.0" fill="rgb(252,210,1)" rx="2" ry="2" />
<text  x="342.20" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="224.7" y="1845" width="0.2" height="15.0" fill="rgb(224,4,18)" rx="2" ry="2" />
<text  x="227.74" y="1855.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1145.3" y="1909" width="0.2" height="15.0" fill="rgb(240,223,50)" rx="2" ry="2" />
<text  x="1148.34" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="622.7" y="2037" width="0.2" height="15.0" fill="rgb(214,38,13)" rx="2" ry="2" />
<text  x="625.73" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="595.2" y="1813" width="0.2" height="15.0" fill="rgb(236,8,15)" rx="2" ry="2" />
<text  x="598.21" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.4" y="1893" width="0.1" height="15.0" fill="rgb(248,33,51)" rx="2" ry="2" />
<text  x="160.35" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="157.0" y="1621" width="0.2" height="15.0" fill="rgb(208,70,33)" rx="2" ry="2" />
<text  x="159.95" y="1631.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="516.7" y="1941" width="0.2" height="15.0" fill="rgb(239,21,40)" rx="2" ry="2" />
<text  x="519.65" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="965.3" y="1989" width="0.2" height="15.0" fill="rgb(252,202,27)" rx="2" ry="2" />
<text  x="968.29" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="901.5" y="1925" width="0.2" height="15.0" fill="rgb(219,120,22)" rx="2" ry="2" />
<text  x="904.48" y="1935.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="372.3" y="1925" width="0.4" height="15.0" fill="rgb(222,202,19)" rx="2" ry="2" />
<text  x="375.29" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (10 samples, 0.17%)</title><rect x="52.1" y="1973" width="2.0" height="15.0" fill="rgb(246,127,20)" rx="2" ry="2" />
<text  x="55.07" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (25 samples, 0.42%)</title><rect x="1104.7" y="1493" width="4.9" height="15.0" fill="rgb(221,54,25)" rx="2" ry="2" />
<text  x="1107.66" y="1503.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="505.5" y="1781" width="0.2" height="15.0" fill="rgb(205,203,50)" rx="2" ry="2" />
<text  x="508.49" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="547.2" y="1941" width="0.2" height="15.0" fill="rgb(207,18,2)" rx="2" ry="2" />
<text  x="550.16" y="1951.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="162.5" y="2005" width="0.8" height="15.0" fill="rgb(230,130,50)" rx="2" ry="2" />
<text  x="165.53" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="377.9" y="1909" width="0.4" height="15.0" fill="rgb(251,95,40)" rx="2" ry="2" />
<text  x="380.88" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1177.4" y="2005" width="0.4" height="15.0" fill="rgb(244,42,4)" rx="2" ry="2" />
<text  x="1180.44" y="2015.5" ></text>
</g>
<g >
<title>ksize (2 samples, 0.03%)</title><rect x="276.4" y="1845" width="0.4" height="15.0" fill="rgb(248,34,40)" rx="2" ry="2" />
<text  x="279.39" y="1855.5" ></text>
</g>
<g >
<title>netif_skb_features (6 samples, 0.10%)</title><rect x="800.4" y="1509" width="1.2" height="15.0" fill="rgb(235,27,7)" rx="2" ry="2" />
<text  x="803.39" y="1519.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="1120.4" y="1989" width="0.2" height="15.0" fill="rgb(243,199,35)" rx="2" ry="2" />
<text  x="1123.41" y="1999.5" ></text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(249,139,31)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1157.5" y="1877" width="0.2" height="15.0" fill="rgb(206,207,42)" rx="2" ry="2" />
<text  x="1160.50" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (306 samples, 5.17%)</title><rect x="350.8" y="2021" width="61.0" height="15.0" fill="rgb(254,146,27)" rx="2" ry="2" />
<text  x="353.76" y="2031.5" >entry_..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="679.8" y="1989" width="0.2" height="15.0" fill="rgb(217,23,19)" rx="2" ry="2" />
<text  x="682.76" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="626.7" y="1973" width="0.2" height="15.0" fill="rgb(219,171,50)" rx="2" ry="2" />
<text  x="629.72" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="562.1" y="1861" width="0.2" height="15.0" fill="rgb(206,170,14)" rx="2" ry="2" />
<text  x="565.12" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="901.1" y="1989" width="0.2" height="15.0" fill="rgb(231,36,36)" rx="2" ry="2" />
<text  x="904.08" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1180.8" y="1845" width="0.2" height="15.0" fill="rgb(253,161,34)" rx="2" ry="2" />
<text  x="1183.83" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="462.2" y="1877" width="0.2" height="15.0" fill="rgb(233,71,14)" rx="2" ry="2" />
<text  x="465.22" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1130.2" y="1893" width="0.4" height="15.0" fill="rgb(230,15,30)" rx="2" ry="2" />
<text  x="1133.18" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="158.9" y="1925" width="0.2" height="15.0" fill="rgb(245,38,54)" rx="2" ry="2" />
<text  x="161.95" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="545.4" y="1877" width="0.2" height="15.0" fill="rgb(234,203,16)" rx="2" ry="2" />
<text  x="548.37" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="170.5" y="1989" width="0.6" height="15.0" fill="rgb(243,139,51)" rx="2" ry="2" />
<text  x="173.51" y="1999.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (33 samples, 0.56%)</title><rect x="1166.3" y="2053" width="6.6" height="15.0" fill="rgb(240,0,47)" rx="2" ry="2" />
<text  x="1169.27" y="2063.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="999.8" y="1957" width="0.4" height="15.0" fill="rgb(238,96,18)" rx="2" ry="2" />
<text  x="1002.78" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="92.7" y="1893" width="0.2" height="15.0" fill="rgb(237,24,19)" rx="2" ry="2" />
<text  x="95.75" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="548.8" y="1989" width="0.2" height="15.0" fill="rgb(220,37,27)" rx="2" ry="2" />
<text  x="551.76" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="143.4" y="1893" width="0.2" height="15.0" fill="rgb(216,206,46)" rx="2" ry="2" />
<text  x="146.39" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="224.1" y="1637" width="0.2" height="15.0" fill="rgb(232,110,16)" rx="2" ry="2" />
<text  x="227.15" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="858.4" y="1909" width="0.2" height="15.0" fill="rgb(208,210,10)" rx="2" ry="2" />
<text  x="861.41" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="508.1" y="1717" width="0.2" height="15.0" fill="rgb(253,201,44)" rx="2" ry="2" />
<text  x="511.08" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="832.3" y="1605" width="0.2" height="15.0" fill="rgb(231,185,27)" rx="2" ry="2" />
<text  x="835.29" y="1615.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="528.4" y="1989" width="0.8" height="15.0" fill="rgb(215,37,35)" rx="2" ry="2" />
<text  x="531.42" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="397.4" y="1861" width="0.4" height="15.0" fill="rgb(212,207,49)" rx="2" ry="2" />
<text  x="400.42" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="102.7" y="1973" width="0.2" height="15.0" fill="rgb(206,229,49)" rx="2" ry="2" />
<text  x="105.72" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="947.5" y="1989" width="0.6" height="15.0" fill="rgb(247,139,38)" rx="2" ry="2" />
<text  x="950.54" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (2 samples, 0.03%)</title><rect x="617.3" y="1941" width="0.4" height="15.0" fill="rgb(244,211,23)" rx="2" ry="2" />
<text  x="620.35" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="462.4" y="1541" width="0.2" height="15.0" fill="rgb(254,198,22)" rx="2" ry="2" />
<text  x="465.42" y="1551.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="809.0" y="1669" width="0.6" height="15.0" fill="rgb(229,161,9)" rx="2" ry="2" />
<text  x="811.96" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1116.2" y="1749" width="0.2" height="15.0" fill="rgb(229,6,44)" rx="2" ry="2" />
<text  x="1119.23" y="1759.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="340.2" y="2021" width="2.6" height="15.0" fill="rgb(253,72,31)" rx="2" ry="2" />
<text  x="343.19" y="2031.5" ></text>
</g>
<g >
<title>std::push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.2" y="1925" width="0.2" height="15.0" fill="rgb(236,55,38)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="963.9" y="2021" width="1.8" height="15.0" fill="rgb(243,144,22)" rx="2" ry="2" />
<text  x="966.89" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (4 samples, 0.07%)</title><rect x="89.6" y="1973" width="0.8" height="15.0" fill="rgb(238,180,30)" rx="2" ry="2" />
<text  x="92.56" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="571.5" y="1861" width="0.2" height="15.0" fill="rgb(219,4,50)" rx="2" ry="2" />
<text  x="574.49" y="1871.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="358.9" y="1957" width="0.2" height="15.0" fill="rgb(208,0,19)" rx="2" ry="2" />
<text  x="361.94" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="745.8" y="1701" width="0.2" height="15.0" fill="rgb(221,110,17)" rx="2" ry="2" />
<text  x="748.76" y="1711.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="743.8" y="1685" width="0.8" height="15.0" fill="rgb(228,218,8)" rx="2" ry="2" />
<text  x="746.76" y="1695.5" ></text>
</g>
<g >
<title>fput (4 samples, 0.07%)</title><rect x="834.1" y="1813" width="0.8" height="15.0" fill="rgb(222,50,3)" rx="2" ry="2" />
<text  x="837.09" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="852.6" y="1909" width="0.2" height="15.0" fill="rgb(218,199,15)" rx="2" ry="2" />
<text  x="855.63" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="864.8" y="1989" width="1.4" height="15.0" fill="rgb(253,133,39)" rx="2" ry="2" />
<text  x="867.79" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1119.8" y="1861" width="0.2" height="15.0" fill="rgb(211,134,53)" rx="2" ry="2" />
<text  x="1122.81" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1019.3" y="1925" width="0.2" height="15.0" fill="rgb(242,60,31)" rx="2" ry="2" />
<text  x="1022.32" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="853" width="14.2" height="15.0" fill="rgb(215,17,36)" rx="2" ry="2" />
<text  x="108.11" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (10 samples, 0.17%)</title><rect x="84.6" y="1941" width="2.0" height="15.0" fill="rgb(212,30,10)" rx="2" ry="2" />
<text  x="87.57" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="923.6" y="1925" width="0.8" height="15.0" fill="rgb(208,139,18)" rx="2" ry="2" />
<text  x="926.61" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (20 samples, 0.34%)</title><rect x="811.8" y="1621" width="3.9" height="15.0" fill="rgb(212,139,49)" rx="2" ry="2" />
<text  x="814.75" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="57.5" y="1861" width="0.2" height="15.0" fill="rgb(240,146,36)" rx="2" ry="2" />
<text  x="60.46" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (83 samples, 1.40%)</title><rect x="293.3" y="1733" width="16.6" height="15.0" fill="rgb(236,208,32)" rx="2" ry="2" />
<text  x="296.34" y="1743.5" ></text>
</g>
<g >
<title>__fdget_raw (1 samples, 0.02%)</title><rect x="563.1" y="1925" width="0.2" height="15.0" fill="rgb(209,158,25)" rx="2" ry="2" />
<text  x="566.11" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (7 samples, 0.12%)</title><rect x="879.3" y="1941" width="1.4" height="15.0" fill="rgb(206,218,52)" rx="2" ry="2" />
<text  x="882.35" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="57.5" y="1717" width="0.2" height="15.0" fill="rgb(231,160,42)" rx="2" ry="2" />
<text  x="60.46" y="1727.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="968.1" y="2005" width="0.2" height="15.0" fill="rgb(218,118,22)" rx="2" ry="2" />
<text  x="971.08" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (2 samples, 0.03%)</title><rect x="903.3" y="2037" width="0.4" height="15.0" fill="rgb(229,118,23)" rx="2" ry="2" />
<text  x="906.27" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (1 samples, 0.02%)</title><rect x="857.0" y="1957" width="0.2" height="15.0" fill="rgb(222,94,35)" rx="2" ry="2" />
<text  x="860.02" y="1967.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="884.7" y="1685" width="0.2" height="15.0" fill="rgb(254,125,12)" rx="2" ry="2" />
<text  x="887.73" y="1695.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (29 samples, 0.49%)</title><rect x="302.9" y="1685" width="5.8" height="15.0" fill="rgb(217,133,33)" rx="2" ry="2" />
<text  x="305.91" y="1695.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="274.2" y="1797" width="0.2" height="15.0" fill="rgb(209,128,7)" rx="2" ry="2" />
<text  x="277.19" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="910.1" y="1989" width="0.2" height="15.0" fill="rgb(247,33,13)" rx="2" ry="2" />
<text  x="913.05" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="310.3" y="1685" width="0.2" height="15.0" fill="rgb(248,226,34)" rx="2" ry="2" />
<text  x="313.28" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="939.6" y="1941" width="0.6" height="15.0" fill="rgb(211,48,49)" rx="2" ry="2" />
<text  x="942.56" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="69.6" y="1957" width="0.2" height="15.0" fill="rgb(252,28,53)" rx="2" ry="2" />
<text  x="72.62" y="1967.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="455.8" y="1973" width="0.2" height="15.0" fill="rgb(242,82,8)" rx="2" ry="2" />
<text  x="458.84" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (1 samples, 0.02%)</title><rect x="31.9" y="1973" width="0.2" height="15.0" fill="rgb(234,209,32)" rx="2" ry="2" />
<text  x="34.93" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.12%)</title><rect x="814.3" y="1589" width="1.4" height="15.0" fill="rgb(209,194,4)" rx="2" ry="2" />
<text  x="817.35" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="969.3" y="1957" width="0.2" height="15.0" fill="rgb(252,201,21)" rx="2" ry="2" />
<text  x="972.27" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="595.2" y="1781" width="0.2" height="15.0" fill="rgb(205,101,18)" rx="2" ry="2" />
<text  x="598.21" y="1791.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="644.9" y="1653" width="0.2" height="15.0" fill="rgb(250,115,52)" rx="2" ry="2" />
<text  x="647.86" y="1663.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="542.0" y="1525" width="0.2" height="15.0" fill="rgb(214,138,4)" rx="2" ry="2" />
<text  x="544.98" y="1535.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="599.8" y="1461" width="0.2" height="15.0" fill="rgb(209,51,47)" rx="2" ry="2" />
<text  x="602.80" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.1" y="1909" width="0.2" height="15.0" fill="rgb(253,106,51)" rx="2" ry="2" />
<text  x="890.12" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (2 samples, 0.03%)</title><rect x="125.4" y="1941" width="0.4" height="15.0" fill="rgb(218,130,32)" rx="2" ry="2" />
<text  x="128.45" y="1951.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="808.4" y="1653" width="0.2" height="15.0" fill="rgb(215,102,32)" rx="2" ry="2" />
<text  x="811.36" y="1663.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="742.2" y="1637" width="0.2" height="15.0" fill="rgb(238,179,12)" rx="2" ry="2" />
<text  x="745.17" y="1647.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="126.2" y="1973" width="0.2" height="15.0" fill="rgb(220,190,18)" rx="2" ry="2" />
<text  x="129.25" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="397.4" y="1845" width="0.4" height="15.0" fill="rgb(231,155,8)" rx="2" ry="2" />
<text  x="400.42" y="1855.5" ></text>
</g>
<g >
<title>inet_accept (1 samples, 0.02%)</title><rect x="411.2" y="1973" width="0.2" height="15.0" fill="rgb(221,203,22)" rx="2" ry="2" />
<text  x="414.18" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="539.0" y="1973" width="0.2" height="15.0" fill="rgb(211,185,49)" rx="2" ry="2" />
<text  x="541.99" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.7" y="1925" width="0.2" height="15.0" fill="rgb(246,36,18)" rx="2" ry="2" />
<text  x="95.75" y="1935.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="434.3" y="1989" width="0.2" height="15.0" fill="rgb(223,90,9)" rx="2" ry="2" />
<text  x="437.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (23 samples, 0.39%)</title><rect x="1136.4" y="2053" width="4.5" height="15.0" fill="rgb(219,21,12)" rx="2" ry="2" />
<text  x="1139.36" y="2063.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="675.4" y="1605" width="0.2" height="15.0" fill="rgb(230,145,17)" rx="2" ry="2" />
<text  x="678.37" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="697.9" y="1749" width="0.2" height="15.0" fill="rgb(236,225,23)" rx="2" ry="2" />
<text  x="700.90" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10 samples, 0.17%)</title><rect x="618.1" y="2005" width="2.0" height="15.0" fill="rgb(237,36,46)" rx="2" ry="2" />
<text  x="621.14" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="78.4" y="1781" width="0.2" height="15.0" fill="rgb(245,12,32)" rx="2" ry="2" />
<text  x="81.39" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="849.6" y="1925" width="0.2" height="15.0" fill="rgb(237,56,11)" rx="2" ry="2" />
<text  x="852.64" y="1935.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (2 samples, 0.03%)</title><rect x="737.4" y="1621" width="0.4" height="15.0" fill="rgb(216,217,18)" rx="2" ry="2" />
<text  x="740.38" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="409.2" y="1925" width="0.2" height="15.0" fill="rgb(243,126,12)" rx="2" ry="2" />
<text  x="412.18" y="1935.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="974.9" y="1941" width="0.2" height="15.0" fill="rgb(219,213,33)" rx="2" ry="2" />
<text  x="977.86" y="1951.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="194.4" y="2021" width="0.2" height="15.0" fill="rgb(205,203,17)" rx="2" ry="2" />
<text  x="197.44" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="508.1" y="1781" width="0.2" height="15.0" fill="rgb(242,222,4)" rx="2" ry="2" />
<text  x="511.08" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="600.0" y="1461" width="0.2" height="15.0" fill="rgb(215,88,40)" rx="2" ry="2" />
<text  x="603.00" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="832.3" y="1829" width="0.2" height="15.0" fill="rgb(212,120,30)" rx="2" ry="2" />
<text  x="835.29" y="1839.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (2 samples, 0.03%)</title><rect x="737.4" y="1669" width="0.4" height="15.0" fill="rgb(242,87,27)" rx="2" ry="2" />
<text  x="740.38" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.0" y="1781" width="0.2" height="15.0" fill="rgb(250,112,31)" rx="2" ry="2" />
<text  x="159.95" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (14 samples, 0.24%)</title><rect x="983.6" y="1989" width="2.8" height="15.0" fill="rgb(250,65,51)" rx="2" ry="2" />
<text  x="986.63" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1157.5" y="1797" width="0.2" height="15.0" fill="rgb(235,163,49)" rx="2" ry="2" />
<text  x="1160.50" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="982.0" y="1765" width="0.2" height="15.0" fill="rgb(250,87,37)" rx="2" ry="2" />
<text  x="985.03" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.19%)</title><rect x="886.3" y="1957" width="2.2" height="15.0" fill="rgb(228,143,27)" rx="2" ry="2" />
<text  x="889.33" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="46.3" y="1957" width="0.6" height="15.0" fill="rgb(210,55,36)" rx="2" ry="2" />
<text  x="49.29" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="412.0" y="1941" width="0.4" height="15.0" fill="rgb(213,177,21)" rx="2" ry="2" />
<text  x="414.97" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="397.4" y="1813" width="0.4" height="15.0" fill="rgb(206,217,0)" rx="2" ry="2" />
<text  x="400.42" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="92.9" y="1957" width="0.4" height="15.0" fill="rgb(229,59,39)" rx="2" ry="2" />
<text  x="95.95" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (9 samples, 0.15%)</title><rect x="96.3" y="2053" width="1.8" height="15.0" fill="rgb(226,18,33)" rx="2" ry="2" />
<text  x="99.34" y="2063.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="57.5" y="1941" width="0.2" height="15.0" fill="rgb(208,154,36)" rx="2" ry="2" />
<text  x="60.46" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="746.2" y="1493" width="0.2" height="15.0" fill="rgb(217,157,16)" rx="2" ry="2" />
<text  x="749.15" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="32.1" y="1909" width="0.2" height="15.0" fill="rgb(206,170,31)" rx="2" ry="2" />
<text  x="35.13" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="246.1" y="1989" width="1.0" height="15.0" fill="rgb(214,28,41)" rx="2" ry="2" />
<text  x="249.08" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="624.5" y="2005" width="0.4" height="15.0" fill="rgb(244,216,27)" rx="2" ry="2" />
<text  x="627.53" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="640.5" y="1765" width="0.2" height="15.0" fill="rgb(211,170,14)" rx="2" ry="2" />
<text  x="643.48" y="1775.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="339.2" y="1909" width="0.8" height="15.0" fill="rgb(248,17,12)" rx="2" ry="2" />
<text  x="342.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="1180.8" y="1733" width="0.2" height="15.0" fill="rgb(248,82,54)" rx="2" ry="2" />
<text  x="1183.83" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="851.0" y="1877" width="0.2" height="15.0" fill="rgb(215,122,26)" rx="2" ry="2" />
<text  x="854.03" y="1887.5" ></text>
</g>
<g >
<title>tcp_drop (1 samples, 0.02%)</title><rect x="102.7" y="1733" width="0.2" height="15.0" fill="rgb(228,25,10)" rx="2" ry="2" />
<text  x="105.72" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.74%)</title><rect x="104.3" y="1893" width="20.5" height="15.0" fill="rgb(210,122,22)" rx="2" ry="2" />
<text  x="107.31" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="67.2" y="1797" width="0.2" height="15.0" fill="rgb(231,78,34)" rx="2" ry="2" />
<text  x="70.23" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="615.8" y="1861" width="0.2" height="15.0" fill="rgb(209,178,5)" rx="2" ry="2" />
<text  x="618.75" y="1871.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (3 samples, 0.05%)</title><rect x="798.8" y="1509" width="0.6" height="15.0" fill="rgb(251,102,23)" rx="2" ry="2" />
<text  x="801.79" y="1519.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="620.7" y="2005" width="0.2" height="15.0" fill="rgb(239,89,34)" rx="2" ry="2" />
<text  x="623.74" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1061" width="14.4" height="15.0" fill="rgb(241,205,16)" rx="2" ry="2" />
<text  x="108.11" y="1071.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="88.4" y="1941" width="0.2" height="15.0" fill="rgb(253,38,3)" rx="2" ry="2" />
<text  x="91.36" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1012.7" y="1733" width="0.2" height="15.0" fill="rgb(215,208,49)" rx="2" ry="2" />
<text  x="1015.74" y="1743.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="745.2" y="1781" width="0.2" height="15.0" fill="rgb(213,20,5)" rx="2" ry="2" />
<text  x="748.16" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="526.4" y="1957" width="0.2" height="15.0" fill="rgb(248,70,42)" rx="2" ry="2" />
<text  x="529.42" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="758.1" y="1717" width="0.2" height="15.0" fill="rgb(249,74,25)" rx="2" ry="2" />
<text  x="761.12" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (8 samples, 0.14%)</title><rect x="1164.7" y="2053" width="1.6" height="15.0" fill="rgb(251,76,0)" rx="2" ry="2" />
<text  x="1167.68" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="746.2" y="1749" width="0.4" height="15.0" fill="rgb(218,78,8)" rx="2" ry="2" />
<text  x="749.15" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="139.8" y="1957" width="0.2" height="15.0" fill="rgb(215,67,38)" rx="2" ry="2" />
<text  x="142.80" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="832.3" y="1749" width="0.2" height="15.0" fill="rgb(235,129,10)" rx="2" ry="2" />
<text  x="835.29" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1013.1" y="1957" width="0.2" height="15.0" fill="rgb(226,139,30)" rx="2" ry="2" />
<text  x="1016.14" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="896.5" y="1941" width="0.2" height="15.0" fill="rgb(219,219,2)" rx="2" ry="2" />
<text  x="899.50" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="17.6" y="1717" width="0.2" height="15.0" fill="rgb(219,69,18)" rx="2" ry="2" />
<text  x="20.58" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="573.3" y="1957" width="0.6" height="15.0" fill="rgb(244,21,36)" rx="2" ry="2" />
<text  x="576.28" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="246.9" y="1813" width="0.2" height="15.0" fill="rgb(220,225,11)" rx="2" ry="2" />
<text  x="249.88" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="1001.8" y="1989" width="0.2" height="15.0" fill="rgb(242,143,14)" rx="2" ry="2" />
<text  x="1004.77" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="234.5" y="2021" width="2.0" height="15.0" fill="rgb(209,219,7)" rx="2" ry="2" />
<text  x="237.52" y="2031.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="67.2" y="1765" width="0.2" height="15.0" fill="rgb(234,105,2)" rx="2" ry="2" />
<text  x="70.23" y="1775.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="885.7" y="1669" width="0.2" height="15.0" fill="rgb(244,169,21)" rx="2" ry="2" />
<text  x="888.73" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (9 samples, 0.15%)</title><rect x="708.3" y="1973" width="1.8" height="15.0" fill="rgb(251,74,17)" rx="2" ry="2" />
<text  x="711.27" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="887.1" y="1797" width="0.2" height="15.0" fill="rgb(238,60,36)" rx="2" ry="2" />
<text  x="890.12" y="1807.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="827.7" y="1701" width="0.2" height="15.0" fill="rgb(223,19,4)" rx="2" ry="2" />
<text  x="830.71" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="228.7" y="1845" width="0.2" height="15.0" fill="rgb(253,216,18)" rx="2" ry="2" />
<text  x="231.73" y="1855.5" ></text>
</g>
<g >
<title>event_del_nolock_ (4 samples, 0.07%)</title><rect x="101.9" y="2005" width="0.8" height="15.0" fill="rgb(251,60,38)" rx="2" ry="2" />
<text  x="104.92" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="247.1" y="1813" width="0.2" height="15.0" fill="rgb(226,220,19)" rx="2" ry="2" />
<text  x="250.08" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (13 samples, 0.22%)</title><rect x="649.1" y="1989" width="2.5" height="15.0" fill="rgb(224,206,32)" rx="2" ry="2" />
<text  x="652.05" y="1999.5" ></text>
</g>
<g >
<title>ghes_copy_tofrom_phys (1 samples, 0.02%)</title><rect x="618.9" y="1749" width="0.2" height="15.0" fill="rgb(226,222,2)" rx="2" ry="2" />
<text  x="621.94" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="1139.0" y="1957" width="0.2" height="15.0" fill="rgb(221,29,51)" rx="2" ry="2" />
<text  x="1141.96" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="256.4" y="1685" width="0.2" height="15.0" fill="rgb(205,30,42)" rx="2" ry="2" />
<text  x="259.45" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="310.3" y="1717" width="0.2" height="15.0" fill="rgb(212,14,14)" rx="2" ry="2" />
<text  x="313.28" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="619.1" y="1749" width="0.8" height="15.0" fill="rgb(225,146,23)" rx="2" ry="2" />
<text  x="622.14" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="330.2" y="1685" width="0.2" height="15.0" fill="rgb(205,172,17)" rx="2" ry="2" />
<text  x="333.22" y="1695.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (9 samples, 0.15%)</title><rect x="842.5" y="1925" width="1.8" height="15.0" fill="rgb(226,81,7)" rx="2" ry="2" />
<text  x="845.46" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="644.9" y="1797" width="0.2" height="15.0" fill="rgb(211,54,7)" rx="2" ry="2" />
<text  x="647.86" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="746.2" y="1621" width="0.4" height="15.0" fill="rgb(241,132,5)" rx="2" ry="2" />
<text  x="749.15" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="982.0" y="1893" width="0.2" height="15.0" fill="rgb(224,159,11)" rx="2" ry="2" />
<text  x="985.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="117.5" y="69" width="0.2" height="15.0" fill="rgb(237,6,52)" rx="2" ry="2" />
<text  x="120.47" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="402.4" y="1765" width="0.2" height="15.0" fill="rgb(225,174,2)" rx="2" ry="2" />
<text  x="405.40" y="1775.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="773.9" y="1669" width="0.4" height="15.0" fill="rgb(213,229,54)" rx="2" ry="2" />
<text  x="776.87" y="1679.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="848.2" y="1925" width="0.2" height="15.0" fill="rgb(245,72,15)" rx="2" ry="2" />
<text  x="851.24" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="980.0" y="1973" width="0.2" height="15.0" fill="rgb(244,64,0)" rx="2" ry="2" />
<text  x="983.04" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="907.1" y="1813" width="0.2" height="15.0" fill="rgb(208,216,9)" rx="2" ry="2" />
<text  x="910.06" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (27 samples, 0.46%)</title><rect x="986.6" y="1925" width="5.4" height="15.0" fill="rgb(250,83,34)" rx="2" ry="2" />
<text  x="989.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="615.8" y="1621" width="0.2" height="15.0" fill="rgb(251,159,52)" rx="2" ry="2" />
<text  x="618.75" y="1631.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="397.6" y="1669" width="0.2" height="15.0" fill="rgb(208,119,22)" rx="2" ry="2" />
<text  x="400.62" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="377.7" y="1749" width="0.2" height="15.0" fill="rgb(210,107,4)" rx="2" ry="2" />
<text  x="380.68" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="277.4" y="1861" width="0.2" height="15.0" fill="rgb(254,19,53)" rx="2" ry="2" />
<text  x="280.38" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="885.7" y="1717" width="0.2" height="15.0" fill="rgb(248,97,41)" rx="2" ry="2" />
<text  x="888.73" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="663.4" y="1957" width="2.2" height="15.0" fill="rgb(228,76,45)" rx="2" ry="2" />
<text  x="666.41" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="611.4" y="1685" width="0.2" height="15.0" fill="rgb(219,41,45)" rx="2" ry="2" />
<text  x="614.37" y="1695.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="674.2" y="1845" width="0.8" height="15.0" fill="rgb(253,76,28)" rx="2" ry="2" />
<text  x="677.17" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="858.6" y="1765" width="0.2" height="15.0" fill="rgb(222,152,40)" rx="2" ry="2" />
<text  x="861.61" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="480.8" y="1925" width="0.6" height="15.0" fill="rgb(244,196,37)" rx="2" ry="2" />
<text  x="483.76" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.5" y="1685" width="0.2" height="15.0" fill="rgb(232,103,11)" rx="2" ry="2" />
<text  x="107.51" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="102.7" y="1829" width="0.2" height="15.0" fill="rgb(206,166,30)" rx="2" ry="2" />
<text  x="105.72" y="1839.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1010.1" y="1989" width="0.2" height="15.0" fill="rgb(237,70,53)" rx="2" ry="2" />
<text  x="1013.15" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="783.6" y="1557" width="0.4" height="15.0" fill="rgb(230,112,20)" rx="2" ry="2" />
<text  x="786.64" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="482.8" y="1765" width="0.2" height="15.0" fill="rgb(205,218,25)" rx="2" ry="2" />
<text  x="485.76" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="111.1" y="37" width="0.2" height="15.0" fill="rgb(226,35,53)" rx="2" ry="2" />
<text  x="114.09" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="318.7" y="1813" width="0.2" height="15.0" fill="rgb(240,139,54)" rx="2" ry="2" />
<text  x="321.66" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="613.8" y="1829" width="0.2" height="15.0" fill="rgb(245,15,7)" rx="2" ry="2" />
<text  x="616.76" y="1839.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="292.7" y="1365" width="0.4" height="15.0" fill="rgb(253,224,33)" rx="2" ry="2" />
<text  x="295.74" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="856.2" y="1893" width="0.2" height="15.0" fill="rgb(205,54,12)" rx="2" ry="2" />
<text  x="859.22" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="453.8" y="1781" width="0.2" height="15.0" fill="rgb(253,168,48)" rx="2" ry="2" />
<text  x="456.85" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="571.5" y="1749" width="0.2" height="15.0" fill="rgb(239,181,23)" rx="2" ry="2" />
<text  x="574.49" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (6 samples, 0.10%)</title><rect x="985.0" y="1909" width="1.2" height="15.0" fill="rgb(243,170,39)" rx="2" ry="2" />
<text  x="988.03" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="1021.1" y="2021" width="0.4" height="15.0" fill="rgb(247,36,32)" rx="2" ry="2" />
<text  x="1024.12" y="2031.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (4 samples, 0.07%)</title><rect x="839.5" y="1925" width="0.8" height="15.0" fill="rgb(227,223,17)" rx="2" ry="2" />
<text  x="842.47" y="1935.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="611.4" y="1541" width="0.2" height="15.0" fill="rgb(211,65,32)" rx="2" ry="2" />
<text  x="614.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="86.6" y="1941" width="0.2" height="15.0" fill="rgb(232,120,5)" rx="2" ry="2" />
<text  x="89.57" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="890.7" y="1925" width="0.6" height="15.0" fill="rgb(210,144,21)" rx="2" ry="2" />
<text  x="893.71" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="978.6" y="1989" width="0.2" height="15.0" fill="rgb(238,44,32)" rx="2" ry="2" />
<text  x="981.64" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="887.1" y="1765" width="0.2" height="15.0" fill="rgb(228,196,6)" rx="2" ry="2" />
<text  x="890.12" y="1775.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="124.5" y="1813" width="0.2" height="15.0" fill="rgb(220,28,2)" rx="2" ry="2" />
<text  x="127.45" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1049.8" y="1733" width="0.2" height="15.0" fill="rgb(237,153,41)" rx="2" ry="2" />
<text  x="1052.83" y="1743.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="547.2" y="1573" width="0.2" height="15.0" fill="rgb(222,151,10)" rx="2" ry="2" />
<text  x="550.16" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="697.9" y="1925" width="0.2" height="15.0" fill="rgb(226,159,27)" rx="2" ry="2" />
<text  x="700.90" y="1935.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="292.1" y="1509" width="0.2" height="15.0" fill="rgb(235,181,16)" rx="2" ry="2" />
<text  x="295.14" y="1519.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="640.5" y="1621" width="0.2" height="15.0" fill="rgb(251,14,7)" rx="2" ry="2" />
<text  x="643.48" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="157.9" y="1749" width="0.2" height="15.0" fill="rgb(253,35,12)" rx="2" ry="2" />
<text  x="160.95" y="1759.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1121.2" y="1941" width="0.2" height="15.0" fill="rgb(254,18,47)" rx="2" ry="2" />
<text  x="1124.21" y="1951.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (2 samples, 0.03%)</title><rect x="737.4" y="1637" width="0.4" height="15.0" fill="rgb(217,158,47)" rx="2" ry="2" />
<text  x="740.38" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="704.5" y="1925" width="0.2" height="15.0" fill="rgb(245,119,24)" rx="2" ry="2" />
<text  x="707.48" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.34%)</title><rect x="392.0" y="1893" width="4.0" height="15.0" fill="rgb(235,172,26)" rx="2" ry="2" />
<text  x="395.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (31 samples, 0.52%)</title><rect x="628.3" y="2037" width="6.2" height="15.0" fill="rgb(242,181,38)" rx="2" ry="2" />
<text  x="631.31" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="884.9" y="1877" width="0.2" height="15.0" fill="rgb(232,103,18)" rx="2" ry="2" />
<text  x="887.93" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1003.8" y="1925" width="0.8" height="15.0" fill="rgb(227,47,7)" rx="2" ry="2" />
<text  x="1006.77" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="745.8" y="1765" width="0.2" height="15.0" fill="rgb(231,72,52)" rx="2" ry="2" />
<text  x="748.76" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="988.4" y="1909" width="0.2" height="15.0" fill="rgb(211,60,47)" rx="2" ry="2" />
<text  x="991.42" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.1" y="1861" width="0.2" height="15.0" fill="rgb(250,178,17)" rx="2" ry="2" />
<text  x="887.13" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="640.5" y="1829" width="0.2" height="15.0" fill="rgb(226,89,50)" rx="2" ry="2" />
<text  x="643.48" y="1839.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="869.6" y="2005" width="0.2" height="15.0" fill="rgb(240,19,0)" rx="2" ry="2" />
<text  x="872.58" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="138.2" y="1973" width="0.6" height="15.0" fill="rgb(215,186,43)" rx="2" ry="2" />
<text  x="141.21" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="339.2" y="1861" width="0.2" height="15.0" fill="rgb(212,118,34)" rx="2" ry="2" />
<text  x="342.20" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (15 samples, 0.25%)</title><rect x="511.3" y="1989" width="3.0" height="15.0" fill="rgb(214,210,41)" rx="2" ry="2" />
<text  x="514.27" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="157.0" y="1829" width="0.2" height="15.0" fill="rgb(224,93,26)" rx="2" ry="2" />
<text  x="159.95" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="453.8" y="1749" width="0.2" height="15.0" fill="rgb(218,2,53)" rx="2" ry="2" />
<text  x="456.85" y="1759.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="483.0" y="1733" width="0.2" height="15.0" fill="rgb(225,27,7)" rx="2" ry="2" />
<text  x="485.96" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="531.2" y="1941" width="0.8" height="15.0" fill="rgb(218,196,37)" rx="2" ry="2" />
<text  x="534.21" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="483.0" y="1685" width="0.2" height="15.0" fill="rgb(239,55,34)" rx="2" ry="2" />
<text  x="485.96" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.7" y="1989" width="0.2" height="15.0" fill="rgb(253,47,19)" rx="2" ry="2" />
<text  x="1175.65" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="725.6" y="1733" width="0.2" height="15.0" fill="rgb(230,11,2)" rx="2" ry="2" />
<text  x="728.62" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="333.0" y="1813" width="0.2" height="15.0" fill="rgb(217,198,47)" rx="2" ry="2" />
<text  x="336.01" y="1823.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="616.2" y="1861" width="0.5" height="15.0" fill="rgb(216,122,14)" rx="2" ry="2" />
<text  x="619.15" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="866.6" y="1733" width="0.2" height="15.0" fill="rgb(226,45,15)" rx="2" ry="2" />
<text  x="869.59" y="1743.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="551.1" y="1941" width="0.2" height="15.0" fill="rgb(226,87,0)" rx="2" ry="2" />
<text  x="554.15" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="534.2" y="1621" width="0.2" height="15.0" fill="rgb(214,59,53)" rx="2" ry="2" />
<text  x="537.20" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1019.3" y="1877" width="0.2" height="15.0" fill="rgb(243,194,0)" rx="2" ry="2" />
<text  x="1022.32" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="925.2" y="1925" width="0.4" height="15.0" fill="rgb(240,48,3)" rx="2" ry="2" />
<text  x="928.21" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="67.2" y="1893" width="0.2" height="15.0" fill="rgb(213,143,54)" rx="2" ry="2" />
<text  x="70.23" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1126.8" y="1797" width="0.2" height="15.0" fill="rgb(235,34,7)" rx="2" ry="2" />
<text  x="1129.79" y="1807.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="1180.4" y="2053" width="0.6" height="15.0" fill="rgb(216,203,54)" rx="2" ry="2" />
<text  x="1183.43" y="2063.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="225.1" y="1797" width="0.2" height="15.0" fill="rgb(234,60,50)" rx="2" ry="2" />
<text  x="228.14" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="889.5" y="1893" width="0.4" height="15.0" fill="rgb(222,173,4)" rx="2" ry="2" />
<text  x="892.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (39 samples, 0.66%)</title><rect x="940.8" y="2005" width="7.7" height="15.0" fill="rgb(210,90,8)" rx="2" ry="2" />
<text  x="943.76" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="175.3" y="1973" width="0.2" height="15.0" fill="rgb(248,214,27)" rx="2" ry="2" />
<text  x="178.30" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="1171.7" y="2005" width="0.8" height="15.0" fill="rgb(234,140,20)" rx="2" ry="2" />
<text  x="1174.66" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (1 samples, 0.02%)</title><rect x="894.5" y="1957" width="0.2" height="15.0" fill="rgb(254,124,33)" rx="2" ry="2" />
<text  x="897.50" y="1967.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="844.3" y="1861" width="0.2" height="15.0" fill="rgb(209,96,40)" rx="2" ry="2" />
<text  x="847.25" y="1871.5" ></text>
</g>
<g >
<title>module_put (2 samples, 0.03%)</title><rect x="831.3" y="1813" width="0.4" height="15.0" fill="rgb(238,55,5)" rx="2" ry="2" />
<text  x="834.29" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.40%)</title><rect x="681.4" y="1973" width="16.5" height="15.0" fill="rgb(208,224,28)" rx="2" ry="2" />
<text  x="684.35" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="571.5" y="1765" width="0.2" height="15.0" fill="rgb(228,101,43)" rx="2" ry="2" />
<text  x="574.49" y="1775.5" ></text>
</g>
<g >
<title>[mcrouter] (28 samples, 0.47%)</title><rect x="986.6" y="1941" width="5.6" height="15.0" fill="rgb(234,90,18)" rx="2" ry="2" />
<text  x="989.62" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="80.2" y="1941" width="0.4" height="15.0" fill="rgb(205,137,39)" rx="2" ry="2" />
<text  x="83.19" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="39.1" y="2005" width="0.2" height="15.0" fill="rgb(207,183,37)" rx="2" ry="2" />
<text  x="42.11" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="274.4" y="1733" width="0.2" height="15.0" fill="rgb(238,9,47)" rx="2" ry="2" />
<text  x="277.39" y="1743.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="674.8" y="1733" width="0.2" height="15.0" fill="rgb(240,204,39)" rx="2" ry="2" />
<text  x="677.77" y="1743.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="1188.4" y="1925" width="0.8" height="15.0" fill="rgb(217,174,51)" rx="2" ry="2" />
<text  x="1191.40" y="1935.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (6 samples, 0.10%)</title><rect x="570.5" y="1973" width="1.2" height="15.0" fill="rgb(233,168,46)" rx="2" ry="2" />
<text  x="573.49" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="545.2" y="1717" width="0.2" height="15.0" fill="rgb(236,162,5)" rx="2" ry="2" />
<text  x="548.17" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="256.4" y="1717" width="0.2" height="15.0" fill="rgb(241,182,33)" rx="2" ry="2" />
<text  x="259.45" y="1727.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="652.6" y="1989" width="0.2" height="15.0" fill="rgb(212,27,49)" rx="2" ry="2" />
<text  x="655.64" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="824.9" y="1493" width="0.2" height="15.0" fill="rgb(224,60,48)" rx="2" ry="2" />
<text  x="827.91" y="1503.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="134.4" y="1877" width="0.2" height="15.0" fill="rgb(246,36,27)" rx="2" ry="2" />
<text  x="137.42" y="1887.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="17.8" y="1925" width="0.8" height="15.0" fill="rgb(214,159,4)" rx="2" ry="2" />
<text  x="20.78" y="1935.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="114.5" y="53" width="0.4" height="15.0" fill="rgb(205,67,4)" rx="2" ry="2" />
<text  x="117.48" y="63.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="104.7" y="1333" width="15.6" height="15.0" fill="rgb(228,79,54)" rx="2" ry="2" />
<text  x="107.71" y="1343.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="534.2" y="1589" width="0.2" height="15.0" fill="rgb(215,110,20)" rx="2" ry="2" />
<text  x="537.20" y="1599.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="546.4" y="1797" width="0.8" height="15.0" fill="rgb(218,94,16)" rx="2" ry="2" />
<text  x="549.36" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="147.0" y="1909" width="0.2" height="15.0" fill="rgb(234,104,14)" rx="2" ry="2" />
<text  x="149.98" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="953.1" y="2005" width="0.4" height="15.0" fill="rgb(225,129,29)" rx="2" ry="2" />
<text  x="956.12" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1012.7" y="1909" width="0.2" height="15.0" fill="rgb(235,169,20)" rx="2" ry="2" />
<text  x="1015.74" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="864.0" y="1989" width="0.2" height="15.0" fill="rgb(225,32,53)" rx="2" ry="2" />
<text  x="866.99" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="858.4" y="1749" width="0.2" height="15.0" fill="rgb(214,185,50)" rx="2" ry="2" />
<text  x="861.41" y="1759.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="603.4" y="2005" width="0.2" height="15.0" fill="rgb(221,104,37)" rx="2" ry="2" />
<text  x="606.39" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="746.2" y="1765" width="0.4" height="15.0" fill="rgb(227,21,11)" rx="2" ry="2" />
<text  x="749.15" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="885.7" y="1733" width="0.2" height="15.0" fill="rgb(225,147,34)" rx="2" ry="2" />
<text  x="888.73" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="635.5" y="1973" width="0.4" height="15.0" fill="rgb(236,46,42)" rx="2" ry="2" />
<text  x="638.49" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1158.3" y="1573" width="0.2" height="15.0" fill="rgb(225,182,47)" rx="2" ry="2" />
<text  x="1161.30" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="746.2" y="1653" width="0.4" height="15.0" fill="rgb(222,47,23)" rx="2" ry="2" />
<text  x="749.15" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="518.8" y="1973" width="0.8" height="15.0" fill="rgb(207,7,44)" rx="2" ry="2" />
<text  x="521.85" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="887.1" y="1701" width="0.2" height="15.0" fill="rgb(207,47,28)" rx="2" ry="2" />
<text  x="890.12" y="1711.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="177.1" y="1941" width="0.2" height="15.0" fill="rgb(213,172,24)" rx="2" ry="2" />
<text  x="180.09" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1178.6" y="2021" width="0.2" height="15.0" fill="rgb(243,155,3)" rx="2" ry="2" />
<text  x="1181.63" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="386.7" y="1717" width="0.2" height="15.0" fill="rgb(250,35,20)" rx="2" ry="2" />
<text  x="389.65" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="78.4" y="1877" width="0.2" height="15.0" fill="rgb(238,218,53)" rx="2" ry="2" />
<text  x="81.39" y="1887.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="518.8" y="1893" width="0.8" height="15.0" fill="rgb(220,113,32)" rx="2" ry="2" />
<text  x="521.85" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (10 samples, 0.17%)</title><rect x="18.8" y="1877" width="2.0" height="15.0" fill="rgb(230,74,52)" rx="2" ry="2" />
<text  x="21.77" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="118.5" y="37" width="0.2" height="15.0" fill="rgb(222,171,43)" rx="2" ry="2" />
<text  x="121.47" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="97.9" y="1877" width="0.2" height="15.0" fill="rgb(223,148,47)" rx="2" ry="2" />
<text  x="100.93" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="542.0" y="1621" width="0.2" height="15.0" fill="rgb(206,27,44)" rx="2" ry="2" />
<text  x="544.98" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="547.2" y="1797" width="0.2" height="15.0" fill="rgb(210,23,41)" rx="2" ry="2" />
<text  x="550.16" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="38.5" y="1909" width="0.2" height="15.0" fill="rgb(205,9,53)" rx="2" ry="2" />
<text  x="41.51" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="562.1" y="1765" width="0.2" height="15.0" fill="rgb(239,64,33)" rx="2" ry="2" />
<text  x="565.12" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1413" width="15.8" height="15.0" fill="rgb(210,175,45)" rx="2" ry="2" />
<text  x="107.71" y="1423.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="18.8" y="2037" width="2.0" height="15.0" fill="rgb(248,185,27)" rx="2" ry="2" />
<text  x="21.77" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="912.6" y="1701" width="0.2" height="15.0" fill="rgb(208,187,40)" rx="2" ry="2" />
<text  x="915.65" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="483.0" y="1637" width="0.2" height="15.0" fill="rgb(230,57,27)" rx="2" ry="2" />
<text  x="485.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="640.5" y="1653" width="0.2" height="15.0" fill="rgb(226,206,45)" rx="2" ry="2" />
<text  x="643.48" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="131.2" y="1957" width="0.2" height="15.0" fill="rgb(240,199,31)" rx="2" ry="2" />
<text  x="134.23" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="841.5" y="1893" width="0.2" height="15.0" fill="rgb(206,123,40)" rx="2" ry="2" />
<text  x="844.46" y="1903.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.02%)</title><rect x="831.7" y="1813" width="0.2" height="15.0" fill="rgb(217,212,19)" rx="2" ry="2" />
<text  x="834.69" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="178.7" y="1957" width="0.8" height="15.0" fill="rgb(227,54,30)" rx="2" ry="2" />
<text  x="181.69" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="419.9" y="2021" width="0.2" height="15.0" fill="rgb(219,16,39)" rx="2" ry="2" />
<text  x="422.95" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="160.3" y="1877" width="0.2" height="15.0" fill="rgb(249,172,50)" rx="2" ry="2" />
<text  x="163.34" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="813.5" y="1605" width="0.2" height="15.0" fill="rgb(222,213,20)" rx="2" ry="2" />
<text  x="816.55" y="1615.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="866.8" y="1989" width="0.4" height="15.0" fill="rgb(245,84,41)" rx="2" ry="2" />
<text  x="869.79" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="675.0" y="1733" width="0.6" height="15.0" fill="rgb(231,107,43)" rx="2" ry="2" />
<text  x="677.97" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="974.9" y="1989" width="0.2" height="15.0" fill="rgb(243,183,4)" rx="2" ry="2" />
<text  x="977.86" y="1999.5" ></text>
</g>
<g >
<title>expand_files (2 samples, 0.03%)</title><rect x="360.7" y="1925" width="0.4" height="15.0" fill="rgb(229,180,41)" rx="2" ry="2" />
<text  x="363.73" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="746.2" y="1557" width="0.4" height="15.0" fill="rgb(205,66,41)" rx="2" ry="2" />
<text  x="749.15" y="1567.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="482.8" y="1733" width="0.2" height="15.0" fill="rgb(254,179,28)" rx="2" ry="2" />
<text  x="485.76" y="1743.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="268.2" y="1797" width="0.2" height="15.0" fill="rgb(208,50,23)" rx="2" ry="2" />
<text  x="271.21" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="161.1" y="1893" width="0.2" height="15.0" fill="rgb(230,72,2)" rx="2" ry="2" />
<text  x="164.14" y="1903.5" ></text>
</g>
<g >
<title>sock_poll (35 samples, 0.59%)</title><rect x="456.0" y="1957" width="7.0" height="15.0" fill="rgb(230,94,1)" rx="2" ry="2" />
<text  x="459.04" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1067.6" y="1845" width="0.2" height="15.0" fill="rgb(218,225,30)" rx="2" ry="2" />
<text  x="1070.57" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (13 samples, 0.22%)</title><rect x="583.6" y="1941" width="2.6" height="15.0" fill="rgb(231,172,9)" rx="2" ry="2" />
<text  x="586.65" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="869" width="14.2" height="15.0" fill="rgb(205,49,38)" rx="2" ry="2" />
<text  x="108.11" y="879.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="143.2" y="1941" width="0.2" height="15.0" fill="rgb(252,182,51)" rx="2" ry="2" />
<text  x="146.19" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="550.8" y="1941" width="0.1" height="15.0" fill="rgb(233,184,8)" rx="2" ry="2" />
<text  x="553.75" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="505.5" y="1653" width="0.2" height="15.0" fill="rgb(236,55,20)" rx="2" ry="2" />
<text  x="508.49" y="1663.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="776.7" y="1653" width="0.2" height="15.0" fill="rgb(232,137,35)" rx="2" ry="2" />
<text  x="779.66" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="197" width="13.8" height="15.0" fill="rgb(231,83,44)" rx="2" ry="2" />
<text  x="108.11" y="207.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="462.4" y="1861" width="0.2" height="15.0" fill="rgb(230,92,49)" rx="2" ry="2" />
<text  x="465.42" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (29 samples, 0.49%)</title><rect x="1167.1" y="2037" width="5.8" height="15.0" fill="rgb(238,217,19)" rx="2" ry="2" />
<text  x="1170.07" y="2047.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="998.6" y="1941" width="0.2" height="15.0" fill="rgb(246,59,18)" rx="2" ry="2" />
<text  x="1001.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="481.0" y="1813" width="0.4" height="15.0" fill="rgb(219,75,14)" rx="2" ry="2" />
<text  x="483.96" y="1823.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="386.7" y="1525" width="0.2" height="15.0" fill="rgb(236,76,19)" rx="2" ry="2" />
<text  x="389.65" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="211.2" y="1941" width="0.2" height="15.0" fill="rgb(246,198,22)" rx="2" ry="2" />
<text  x="214.19" y="1951.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="813.7" y="1605" width="0.2" height="15.0" fill="rgb(249,137,33)" rx="2" ry="2" />
<text  x="816.75" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (2 samples, 0.03%)</title><rect x="725.4" y="1845" width="0.4" height="15.0" fill="rgb(245,163,47)" rx="2" ry="2" />
<text  x="728.42" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (27 samples, 0.46%)</title><rect x="132.2" y="1973" width="5.4" height="15.0" fill="rgb(232,24,18)" rx="2" ry="2" />
<text  x="135.23" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="57.5" y="1733" width="0.2" height="15.0" fill="rgb(227,25,2)" rx="2" ry="2" />
<text  x="60.46" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (61 samples, 1.03%)</title><rect x="554.1" y="2005" width="12.2" height="15.0" fill="rgb(225,76,23)" rx="2" ry="2" />
<text  x="557.14" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (12 samples, 0.20%)</title><rect x="702.3" y="2005" width="2.4" height="15.0" fill="rgb(225,116,31)" rx="2" ry="2" />
<text  x="705.29" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1049.8" y="1941" width="0.2" height="15.0" fill="rgb(217,142,41)" rx="2" ry="2" />
<text  x="1052.83" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="626.9" y="1941" width="0.4" height="15.0" fill="rgb(240,166,42)" rx="2" ry="2" />
<text  x="629.92" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10 samples, 0.17%)</title><rect x="406.2" y="1909" width="2.0" height="15.0" fill="rgb(210,88,2)" rx="2" ry="2" />
<text  x="409.19" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.74%)</title><rect x="104.3" y="1925" width="20.5" height="15.0" fill="rgb(207,72,5)" rx="2" ry="2" />
<text  x="107.31" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="336.0" y="1653" width="0.2" height="15.0" fill="rgb(250,100,36)" rx="2" ry="2" />
<text  x="339.01" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="459.6" y="1893" width="0.4" height="15.0" fill="rgb(214,142,27)" rx="2" ry="2" />
<text  x="462.63" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="157.0" y="1717" width="0.2" height="15.0" fill="rgb(241,121,30)" rx="2" ry="2" />
<text  x="159.95" y="1727.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="292.9" y="1333" width="0.2" height="15.0" fill="rgb(212,193,1)" rx="2" ry="2" />
<text  x="295.94" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (310 samples, 5.24%)</title><rect x="420.3" y="2021" width="61.9" height="15.0" fill="rgb(207,120,9)" rx="2" ry="2" />
<text  x="423.35" y="2031.5" >entry_..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="903.3" y="2021" width="0.4" height="15.0" fill="rgb(216,21,48)" rx="2" ry="2" />
<text  x="906.27" y="2031.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="880.1" y="1893" width="0.2" height="15.0" fill="rgb(221,117,41)" rx="2" ry="2" />
<text  x="883.15" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1157.5" y="1685" width="0.2" height="15.0" fill="rgb(239,103,52)" rx="2" ry="2" />
<text  x="1160.50" y="1695.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="528.4" y="1941" width="0.8" height="15.0" fill="rgb(241,173,29)" rx="2" ry="2" />
<text  x="531.42" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="251.3" y="1893" width="0.4" height="15.0" fill="rgb(234,54,32)" rx="2" ry="2" />
<text  x="254.26" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="578.3" y="1973" width="0.4" height="15.0" fill="rgb(228,114,54)" rx="2" ry="2" />
<text  x="581.27" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1013.1" y="1813" width="0.2" height="15.0" fill="rgb(219,24,36)" rx="2" ry="2" />
<text  x="1016.14" y="1823.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (117 samples, 1.98%)</title><rect x="208.8" y="2037" width="23.3" height="15.0" fill="rgb(233,101,48)" rx="2" ry="2" />
<text  x="211.79" y="2047.5" >_..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="35.5" y="1973" width="0.4" height="15.0" fill="rgb(239,131,41)" rx="2" ry="2" />
<text  x="38.52" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1003.8" y="1989" width="0.8" height="15.0" fill="rgb(225,4,39)" rx="2" ry="2" />
<text  x="1006.77" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="482.8" y="1541" width="0.2" height="15.0" fill="rgb(234,213,48)" rx="2" ry="2" />
<text  x="485.76" y="1551.5" ></text>
</g>
<g >
<title>ip_local_out (128 samples, 2.16%)</title><rect x="776.9" y="1653" width="25.5" height="15.0" fill="rgb(210,181,16)" rx="2" ry="2" />
<text  x="779.86" y="1663.5" >i..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="704.5" y="1957" width="0.2" height="15.0" fill="rgb(246,108,3)" rx="2" ry="2" />
<text  x="707.48" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="57.5" y="1877" width="0.2" height="15.0" fill="rgb(217,190,44)" rx="2" ry="2" />
<text  x="60.46" y="1887.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="960.3" y="1973" width="0.6" height="15.0" fill="rgb(214,211,25)" rx="2" ry="2" />
<text  x="963.30" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (18 samples, 0.30%)</title><rect x="1137.4" y="2037" width="3.5" height="15.0" fill="rgb(213,168,1)" rx="2" ry="2" />
<text  x="1140.36" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="896.5" y="1957" width="0.2" height="15.0" fill="rgb(222,223,17)" rx="2" ry="2" />
<text  x="899.50" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1157.9" y="1909" width="0.6" height="15.0" fill="rgb(245,90,4)" rx="2" ry="2" />
<text  x="1160.90" y="1919.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="36.3" y="1989" width="0.2" height="15.0" fill="rgb(242,8,43)" rx="2" ry="2" />
<text  x="39.32" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="622.3" y="2021" width="0.4" height="15.0" fill="rgb(243,8,39)" rx="2" ry="2" />
<text  x="625.33" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="277.0" y="1861" width="0.2" height="15.0" fill="rgb(216,88,53)" rx="2" ry="2" />
<text  x="279.99" y="1871.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1128.8" y="2053" width="0.2" height="15.0" fill="rgb(251,185,51)" rx="2" ry="2" />
<text  x="1131.79" y="2063.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1158.3" y="1589" width="0.2" height="15.0" fill="rgb(210,149,29)" rx="2" ry="2" />
<text  x="1161.30" y="1599.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (15 samples, 0.25%)</title><rect x="459.4" y="1925" width="3.0" height="15.0" fill="rgb(229,162,5)" rx="2" ry="2" />
<text  x="462.43" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="97.9" y="1941" width="0.2" height="15.0" fill="rgb(224,36,12)" rx="2" ry="2" />
<text  x="100.93" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (7 samples, 0.12%)</title><rect x="572.9" y="1973" width="1.4" height="15.0" fill="rgb(251,207,37)" rx="2" ry="2" />
<text  x="575.88" y="1983.5" ></text>
</g>
<g >
<title>make_kgid (2 samples, 0.03%)</title><rect x="391.2" y="1909" width="0.4" height="15.0" fill="rgb(216,6,39)" rx="2" ry="2" />
<text  x="394.24" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="377.5" y="1813" width="0.2" height="15.0" fill="rgb(226,32,47)" rx="2" ry="2" />
<text  x="380.48" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="404.6" y="1861" width="0.2" height="15.0" fill="rgb(250,47,48)" rx="2" ry="2" />
<text  x="407.60" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="68.2" y="1877" width="0.2" height="15.0" fill="rgb(206,150,40)" rx="2" ry="2" />
<text  x="71.22" y="1887.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.10%)</title><rect x="126.4" y="1989" width="1.2" height="15.0" fill="rgb(214,133,17)" rx="2" ry="2" />
<text  x="129.44" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="134.4" y="1925" width="0.2" height="15.0" fill="rgb(247,114,47)" rx="2" ry="2" />
<text  x="137.42" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="250.7" y="1909" width="0.2" height="15.0" fill="rgb(238,69,38)" rx="2" ry="2" />
<text  x="253.67" y="1919.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="292.7" y="1381" width="0.4" height="15.0" fill="rgb(238,207,22)" rx="2" ry="2" />
<text  x="295.74" y="1391.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="856.4" y="1941" width="0.2" height="15.0" fill="rgb(205,49,48)" rx="2" ry="2" />
<text  x="859.42" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="17.6" y="1701" width="0.2" height="15.0" fill="rgb(235,193,19)" rx="2" ry="2" />
<text  x="20.58" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="505.3" y="1861" width="0.4" height="15.0" fill="rgb(241,15,0)" rx="2" ry="2" />
<text  x="508.29" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::recv (6 samples, 0.10%)</title><rect x="56.5" y="1957" width="1.2" height="15.0" fill="rgb(216,73,17)" rx="2" ry="2" />
<text  x="59.46" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="74.6" y="1893" width="0.8" height="15.0" fill="rgb(244,123,1)" rx="2" ry="2" />
<text  x="77.60" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="912.6" y="1781" width="0.2" height="15.0" fill="rgb(249,189,34)" rx="2" ry="2" />
<text  x="915.65" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="679.0" y="2021" width="0.2" height="15.0" fill="rgb(254,150,49)" rx="2" ry="2" />
<text  x="681.96" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="17.6" y="1893" width="0.2" height="15.0" fill="rgb(228,56,36)" rx="2" ry="2" />
<text  x="20.58" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="336.2" y="1893" width="0.2" height="15.0" fill="rgb(221,180,54)" rx="2" ry="2" />
<text  x="339.20" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="625.5" y="1957" width="0.2" height="15.0" fill="rgb(214,219,14)" rx="2" ry="2" />
<text  x="628.52" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (17 samples, 0.29%)</title><rect x="289.9" y="1717" width="3.4" height="15.0" fill="rgb(244,211,9)" rx="2" ry="2" />
<text  x="292.95" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.08%)</title><rect x="855.4" y="1941" width="1.0" height="15.0" fill="rgb(211,101,14)" rx="2" ry="2" />
<text  x="858.42" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1119.8" y="1877" width="0.2" height="15.0" fill="rgb(240,199,52)" rx="2" ry="2" />
<text  x="1122.81" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="256.4" y="1765" width="0.2" height="15.0" fill="rgb(218,119,4)" rx="2" ry="2" />
<text  x="259.45" y="1775.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="844.5" y="1861" width="0.2" height="15.0" fill="rgb(226,51,54)" rx="2" ry="2" />
<text  x="847.45" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1126.8" y="1909" width="0.2" height="15.0" fill="rgb(241,39,52)" rx="2" ry="2" />
<text  x="1129.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="78.4" y="1701" width="0.2" height="15.0" fill="rgb(211,140,15)" rx="2" ry="2" />
<text  x="81.39" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="231.3" y="1701" width="0.2" height="15.0" fill="rgb(218,31,22)" rx="2" ry="2" />
<text  x="234.32" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1034.5" y="2037" width="0.2" height="15.0" fill="rgb(205,87,3)" rx="2" ry="2" />
<text  x="1037.47" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="223.7" y="1829" width="0.4" height="15.0" fill="rgb(220,75,31)" rx="2" ry="2" />
<text  x="226.75" y="1839.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="505.5" y="1637" width="0.2" height="15.0" fill="rgb(213,1,2)" rx="2" ry="2" />
<text  x="508.49" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="640.5" y="1861" width="0.2" height="15.0" fill="rgb(241,42,36)" rx="2" ry="2" />
<text  x="643.48" y="1871.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="120.1" y="1253" width="0.2" height="15.0" fill="rgb(240,142,27)" rx="2" ry="2" />
<text  x="123.06" y="1263.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="488.7" y="1861" width="0.2" height="15.0" fill="rgb(241,193,17)" rx="2" ry="2" />
<text  x="491.74" y="1871.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="295.5" y="1653" width="0.2" height="15.0" fill="rgb(236,62,54)" rx="2" ry="2" />
<text  x="298.53" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="40.5" y="2005" width="0.2" height="15.0" fill="rgb(236,169,45)" rx="2" ry="2" />
<text  x="43.51" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="472.8" y="1909" width="0.2" height="15.0" fill="rgb(208,57,24)" rx="2" ry="2" />
<text  x="475.79" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (2 samples, 0.03%)</title><rect x="34.3" y="1989" width="0.4" height="15.0" fill="rgb(245,63,6)" rx="2" ry="2" />
<text  x="37.33" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="324.6" y="1493" width="0.2" height="15.0" fill="rgb(235,87,4)" rx="2" ry="2" />
<text  x="327.64" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1178.0" y="1973" width="0.2" height="15.0" fill="rgb(211,165,11)" rx="2" ry="2" />
<text  x="1181.04" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="637.5" y="1941" width="0.4" height="15.0" fill="rgb(233,45,23)" rx="2" ry="2" />
<text  x="640.49" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="917.8" y="1989" width="0.2" height="15.0" fill="rgb(221,22,11)" rx="2" ry="2" />
<text  x="920.83" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1180.8" y="1877" width="0.2" height="15.0" fill="rgb(238,181,54)" rx="2" ry="2" />
<text  x="1183.83" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="648.9" y="1797" width="0.2" height="15.0" fill="rgb(244,22,38)" rx="2" ry="2" />
<text  x="651.85" y="1807.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="1132.0" y="1973" width="0.4" height="15.0" fill="rgb(207,129,42)" rx="2" ry="2" />
<text  x="1134.98" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="158.3" y="1829" width="0.2" height="15.0" fill="rgb(237,49,42)" rx="2" ry="2" />
<text  x="161.35" y="1839.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="178.3" y="1957" width="0.4" height="15.0" fill="rgb(217,169,32)" rx="2" ry="2" />
<text  x="181.29" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="697.9" y="1893" width="0.2" height="15.0" fill="rgb(240,189,45)" rx="2" ry="2" />
<text  x="700.90" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="177.9" y="1957" width="0.4" height="15.0" fill="rgb(217,205,24)" rx="2" ry="2" />
<text  x="180.89" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="310.3" y="1621" width="0.2" height="15.0" fill="rgb(208,3,31)" rx="2" ry="2" />
<text  x="313.28" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="231.3" y="1925" width="0.2" height="15.0" fill="rgb(236,70,16)" rx="2" ry="2" />
<text  x="234.32" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="324.6" y="1461" width="0.2" height="15.0" fill="rgb(211,199,11)" rx="2" ry="2" />
<text  x="327.64" y="1471.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="275.0" y="1813" width="0.8" height="15.0" fill="rgb(245,139,23)" rx="2" ry="2" />
<text  x="277.99" y="1823.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (4 samples, 0.07%)</title><rect x="167.9" y="1989" width="0.8" height="15.0" fill="rgb(211,58,28)" rx="2" ry="2" />
<text  x="170.92" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="292.5" y="1445" width="0.6" height="15.0" fill="rgb(232,101,16)" rx="2" ry="2" />
<text  x="295.54" y="1455.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="544.8" y="1877" width="0.4" height="15.0" fill="rgb(242,129,18)" rx="2" ry="2" />
<text  x="547.77" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="152.2" y="1909" width="0.2" height="15.0" fill="rgb(249,102,29)" rx="2" ry="2" />
<text  x="155.17" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1130.2" y="1861" width="0.4" height="15.0" fill="rgb(234,85,21)" rx="2" ry="2" />
<text  x="1133.18" y="1871.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="319.1" y="1829" width="1.0" height="15.0" fill="rgb(251,48,14)" rx="2" ry="2" />
<text  x="322.06" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="174.9" y="1941" width="0.4" height="15.0" fill="rgb(253,142,37)" rx="2" ry="2" />
<text  x="177.90" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="276.2" y="1813" width="0.2" height="15.0" fill="rgb(247,169,45)" rx="2" ry="2" />
<text  x="279.19" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="714.1" y="1941" width="0.7" height="15.0" fill="rgb(250,113,34)" rx="2" ry="2" />
<text  x="717.05" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="746.2" y="1717" width="0.4" height="15.0" fill="rgb(252,112,31)" rx="2" ry="2" />
<text  x="749.15" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="118.9" y="181" width="0.2" height="15.0" fill="rgb(220,8,46)" rx="2" ry="2" />
<text  x="121.87" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.7" y="1941" width="0.2" height="15.0" fill="rgb(214,95,1)" rx="2" ry="2" />
<text  x="173.71" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="372.1" y="1845" width="0.2" height="15.0" fill="rgb(241,99,34)" rx="2" ry="2" />
<text  x="375.10" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="586.0" y="1909" width="0.2" height="15.0" fill="rgb(239,189,17)" rx="2" ry="2" />
<text  x="589.04" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="372.1" y="1877" width="0.2" height="15.0" fill="rgb(207,206,3)" rx="2" ry="2" />
<text  x="375.10" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="455.4" y="1973" width="0.4" height="15.0" fill="rgb(230,219,39)" rx="2" ry="2" />
<text  x="458.44" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="57.5" y="1909" width="0.2" height="15.0" fill="rgb(207,60,53)" rx="2" ry="2" />
<text  x="60.46" y="1919.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="745.0" y="1765" width="0.2" height="15.0" fill="rgb(240,110,4)" rx="2" ry="2" />
<text  x="747.96" y="1775.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="105.1" y="37" width="0.2" height="15.0" fill="rgb(247,24,17)" rx="2" ry="2" />
<text  x="108.11" y="47.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1140.6" y="2005" width="0.2" height="15.0" fill="rgb(215,32,47)" rx="2" ry="2" />
<text  x="1143.55" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="725.6" y="1829" width="0.2" height="15.0" fill="rgb(235,16,41)" rx="2" ry="2" />
<text  x="728.62" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="626.1" y="2005" width="0.2" height="15.0" fill="rgb(253,21,17)" rx="2" ry="2" />
<text  x="629.12" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="115.9" y="69" width="1.0" height="15.0" fill="rgb(244,93,13)" rx="2" ry="2" />
<text  x="118.88" y="79.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1121.4" y="1701" width="0.2" height="15.0" fill="rgb(244,217,27)" rx="2" ry="2" />
<text  x="1124.41" y="1711.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="225.9" y="1525" width="0.2" height="15.0" fill="rgb(236,12,35)" rx="2" ry="2" />
<text  x="228.94" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="161.1" y="1877" width="0.2" height="15.0" fill="rgb(221,207,51)" rx="2" ry="2" />
<text  x="164.14" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="453.8" y="1893" width="0.2" height="15.0" fill="rgb(206,118,14)" rx="2" ry="2" />
<text  x="456.85" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="568.1" y="1973" width="0.2" height="15.0" fill="rgb(211,211,23)" rx="2" ry="2" />
<text  x="571.10" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="120.3" y="1333" width="0.2" height="15.0" fill="rgb(239,182,13)" rx="2" ry="2" />
<text  x="123.26" y="1343.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1003.8" y="1877" width="0.8" height="15.0" fill="rgb(239,44,20)" rx="2" ry="2" />
<text  x="1006.77" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="562.1" y="1877" width="0.2" height="15.0" fill="rgb(224,95,26)" rx="2" ry="2" />
<text  x="565.12" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="453.0" y="1877" width="0.2" height="15.0" fill="rgb(236,212,40)" rx="2" ry="2" />
<text  x="456.05" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.7" y="1909" width="0.2" height="15.0" fill="rgb(208,44,15)" rx="2" ry="2" />
<text  x="491.74" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="830.9" y="1653" width="0.2" height="15.0" fill="rgb(230,91,37)" rx="2" ry="2" />
<text  x="833.90" y="1663.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="397.4" y="1589" width="0.2" height="15.0" fill="rgb(205,110,48)" rx="2" ry="2" />
<text  x="400.42" y="1599.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="483.0" y="1621" width="0.2" height="15.0" fill="rgb(212,206,6)" rx="2" ry="2" />
<text  x="485.96" y="1631.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (4 samples, 0.07%)</title><rect x="968.7" y="2037" width="0.8" height="15.0" fill="rgb(209,228,20)" rx="2" ry="2" />
<text  x="971.68" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="902.3" y="2005" width="0.2" height="15.0" fill="rgb(250,37,30)" rx="2" ry="2" />
<text  x="905.28" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="386.9" y="1909" width="0.1" height="15.0" fill="rgb(232,174,42)" rx="2" ry="2" />
<text  x="389.85" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="1176.8" y="2005" width="0.4" height="15.0" fill="rgb(207,184,44)" rx="2" ry="2" />
<text  x="1179.84" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="102.7" y="1957" width="0.2" height="15.0" fill="rgb(228,164,30)" rx="2" ry="2" />
<text  x="105.72" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="17.8" y="1941" width="0.8" height="15.0" fill="rgb(229,212,6)" rx="2" ry="2" />
<text  x="20.78" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1130.2" y="1781" width="0.2" height="15.0" fill="rgb(235,205,52)" rx="2" ry="2" />
<text  x="1133.18" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (3 samples, 0.05%)</title><rect x="46.3" y="1941" width="0.6" height="15.0" fill="rgb(249,157,39)" rx="2" ry="2" />
<text  x="49.29" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="628.1" y="2037" width="0.2" height="15.0" fill="rgb(226,135,49)" rx="2" ry="2" />
<text  x="631.11" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="189.9" y="1909" width="0.2" height="15.0" fill="rgb(215,58,17)" rx="2" ry="2" />
<text  x="192.85" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (3 samples, 0.05%)</title><rect x="1163.1" y="2053" width="0.6" height="15.0" fill="rgb(215,214,11)" rx="2" ry="2" />
<text  x="1166.08" y="2063.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="1026.3" y="2053" width="0.4" height="15.0" fill="rgb(248,41,31)" rx="2" ry="2" />
<text  x="1029.30" y="2063.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="124.7" y="1525" width="0.1" height="15.0" fill="rgb(232,211,17)" rx="2" ry="2" />
<text  x="127.65" y="1535.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="264.2" y="1829" width="0.4" height="15.0" fill="rgb(212,204,50)" rx="2" ry="2" />
<text  x="267.22" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.15%)</title><rect x="105.1" y="149" width="13.6" height="15.0" fill="rgb(245,161,16)" rx="2" ry="2" />
<text  x="108.11" y="159.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="508.3" y="1765" width="0.2" height="15.0" fill="rgb(212,94,0)" rx="2" ry="2" />
<text  x="511.28" y="1775.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="547.2" y="1589" width="0.2" height="15.0" fill="rgb(220,228,3)" rx="2" ry="2" />
<text  x="550.16" y="1599.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="339.2" y="1989" width="1.0" height="15.0" fill="rgb(229,156,51)" rx="2" ry="2" />
<text  x="342.20" y="1999.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="614.6" y="1813" width="0.4" height="15.0" fill="rgb(206,154,26)" rx="2" ry="2" />
<text  x="617.56" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::AsyncSocketBase (2 samples, 0.03%)</title><rect x="567.3" y="1989" width="0.4" height="15.0" fill="rgb(229,98,52)" rx="2" ry="2" />
<text  x="570.30" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="224.1" y="1669" width="0.2" height="15.0" fill="rgb(250,117,39)" rx="2" ry="2" />
<text  x="227.15" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1012.7" y="1861" width="0.2" height="15.0" fill="rgb(243,92,37)" rx="2" ry="2" />
<text  x="1015.74" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="824.9" y="1589" width="0.2" height="15.0" fill="rgb(248,155,21)" rx="2" ry="2" />
<text  x="827.91" y="1599.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="540.4" y="1973" width="0.2" height="15.0" fill="rgb(218,189,16)" rx="2" ry="2" />
<text  x="543.38" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="130.4" y="1941" width="0.6" height="15.0" fill="rgb(244,108,36)" rx="2" ry="2" />
<text  x="133.43" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1180.8" y="1989" width="0.2" height="15.0" fill="rgb(245,228,50)" rx="2" ry="2" />
<text  x="1183.83" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_mss (24 samples, 0.41%)</title><rect x="328.8" y="1877" width="4.8" height="15.0" fill="rgb(205,81,15)" rx="2" ry="2" />
<text  x="331.83" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="832.3" y="1653" width="0.2" height="15.0" fill="rgb(214,90,17)" rx="2" ry="2" />
<text  x="835.29" y="1663.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1126.4" y="2053" width="0.4" height="15.0" fill="rgb(224,136,9)" rx="2" ry="2" />
<text  x="1129.39" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="640.5" y="1845" width="0.2" height="15.0" fill="rgb(210,21,27)" rx="2" ry="2" />
<text  x="643.48" y="1855.5" ></text>
</g>
<g >
<title>free (26 samples, 0.44%)</title><rect x="184.9" y="2021" width="5.2" height="15.0" fill="rgb(216,20,52)" rx="2" ry="2" />
<text  x="187.87" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="824.9" y="1525" width="0.2" height="15.0" fill="rgb(216,62,51)" rx="2" ry="2" />
<text  x="827.91" y="1535.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="372.1" y="1589" width="0.2" height="15.0" fill="rgb(209,2,17)" rx="2" ry="2" />
<text  x="375.10" y="1599.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="967.5" y="2005" width="0.2" height="15.0" fill="rgb(226,73,7)" rx="2" ry="2" />
<text  x="970.48" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="124.3" y="1797" width="0.2" height="15.0" fill="rgb(247,215,50)" rx="2" ry="2" />
<text  x="127.25" y="1807.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="817.3" y="1637" width="0.2" height="15.0" fill="rgb(223,127,37)" rx="2" ry="2" />
<text  x="820.34" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="765.9" y="1685" width="0.4" height="15.0" fill="rgb(235,88,6)" rx="2" ry="2" />
<text  x="768.89" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="702.1" y="2005" width="0.2" height="15.0" fill="rgb(246,197,48)" rx="2" ry="2" />
<text  x="705.09" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (10 samples, 0.17%)</title><rect x="18.8" y="1957" width="2.0" height="15.0" fill="rgb(229,222,16)" rx="2" ry="2" />
<text  x="21.77" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1178.0" y="1909" width="0.2" height="15.0" fill="rgb(223,156,53)" rx="2" ry="2" />
<text  x="1181.04" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="710.5" y="1973" width="0.2" height="15.0" fill="rgb(252,202,48)" rx="2" ry="2" />
<text  x="713.46" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="224.1" y="1861" width="0.2" height="15.0" fill="rgb(232,16,17)" rx="2" ry="2" />
<text  x="227.15" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (4 samples, 0.07%)</title><rect x="529.2" y="1989" width="0.8" height="15.0" fill="rgb(208,225,27)" rx="2" ry="2" />
<text  x="532.22" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10 samples, 0.17%)</title><rect x="460.2" y="1909" width="2.0" height="15.0" fill="rgb(242,48,9)" rx="2" ry="2" />
<text  x="463.23" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="412.0" y="2021" width="0.4" height="15.0" fill="rgb(238,222,33)" rx="2" ry="2" />
<text  x="414.97" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="508.1" y="1829" width="0.2" height="15.0" fill="rgb(246,7,38)" rx="2" ry="2" />
<text  x="511.08" y="1839.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="453.8" y="1669" width="0.2" height="15.0" fill="rgb(247,156,18)" rx="2" ry="2" />
<text  x="456.85" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="521.2" y="1957" width="0.2" height="15.0" fill="rgb(235,56,26)" rx="2" ry="2" />
<text  x="524.24" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="140.4" y="2005" width="0.2" height="15.0" fill="rgb(249,134,43)" rx="2" ry="2" />
<text  x="143.40" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (1 samples, 0.02%)</title><rect x="604.0" y="2005" width="0.2" height="15.0" fill="rgb(216,171,45)" rx="2" ry="2" />
<text  x="606.99" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.0" y="1925" width="0.2" height="15.0" fill="rgb(207,66,51)" rx="2" ry="2" />
<text  x="942.96" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1138.6" y="1973" width="0.2" height="15.0" fill="rgb(244,190,8)" rx="2" ry="2" />
<text  x="1141.56" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="745.8" y="1733" width="0.2" height="15.0" fill="rgb(247,54,10)" rx="2" ry="2" />
<text  x="748.76" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="513.9" y="1973" width="0.4" height="15.0" fill="rgb(241,127,12)" rx="2" ry="2" />
<text  x="516.86" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="157.2" y="1909" width="0.2" height="15.0" fill="rgb(227,114,1)" rx="2" ry="2" />
<text  x="160.15" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (37 samples, 0.63%)</title><rect x="997.2" y="2021" width="7.4" height="15.0" fill="rgb(206,92,33)" rx="2" ry="2" />
<text  x="1000.19" y="2031.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="1126.8" y="1717" width="0.2" height="15.0" fill="rgb(212,224,13)" rx="2" ry="2" />
<text  x="1129.79" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="143.6" y="1893" width="0.4" height="15.0" fill="rgb(250,166,16)" rx="2" ry="2" />
<text  x="146.59" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="918.2" y="2037" width="0.4" height="15.0" fill="rgb(213,30,42)" rx="2" ry="2" />
<text  x="921.23" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="53.5" y="1845" width="0.2" height="15.0" fill="rgb(253,13,30)" rx="2" ry="2" />
<text  x="56.47" y="1855.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="278.6" y="1861" width="0.2" height="15.0" fill="rgb(224,211,2)" rx="2" ry="2" />
<text  x="281.58" y="1871.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="386.5" y="1941" width="0.4" height="15.0" fill="rgb(231,138,45)" rx="2" ry="2" />
<text  x="389.45" y="1951.5" ></text>
</g>
<g >
<title>__inet_inherit_port (1 samples, 0.02%)</title><rect x="1013.1" y="1685" width="0.2" height="15.0" fill="rgb(245,82,3)" rx="2" ry="2" />
<text  x="1016.14" y="1695.5" ></text>
</g>
<g >
<title>tcp_conn_request (2 samples, 0.03%)</title><rect x="599.8" y="1637" width="0.4" height="15.0" fill="rgb(211,143,17)" rx="2" ry="2" />
<text  x="602.80" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="571.9" y="1973" width="0.2" height="15.0" fill="rgb(236,5,29)" rx="2" ry="2" />
<text  x="574.89" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="227.9" y="1813" width="0.2" height="15.0" fill="rgb(231,222,51)" rx="2" ry="2" />
<text  x="230.94" y="1823.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="616.9" y="1893" width="0.2" height="15.0" fill="rgb(244,203,38)" rx="2" ry="2" />
<text  x="619.95" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (13 samples, 0.22%)</title><rect x="1113.8" y="1925" width="2.6" height="15.0" fill="rgb(231,190,24)" rx="2" ry="2" />
<text  x="1116.83" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="117.3" y="53" width="0.2" height="15.0" fill="rgb(230,100,36)" rx="2" ry="2" />
<text  x="120.27" y="63.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="704.5" y="1781" width="0.2" height="15.0" fill="rgb(215,46,27)" rx="2" ry="2" />
<text  x="707.48" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1120.4" y="1941" width="0.2" height="15.0" fill="rgb(229,197,28)" rx="2" ry="2" />
<text  x="1123.41" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="843.5" y="1877" width="0.8" height="15.0" fill="rgb(216,181,22)" rx="2" ry="2" />
<text  x="846.46" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (52 samples, 0.88%)</title><rect x="27.9" y="2005" width="10.4" height="15.0" fill="rgb(235,24,20)" rx="2" ry="2" />
<text  x="30.95" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="870.4" y="1989" width="1.4" height="15.0" fill="rgb(209,153,22)" rx="2" ry="2" />
<text  x="873.38" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="846.8" y="1877" width="0.2" height="15.0" fill="rgb(209,189,26)" rx="2" ry="2" />
<text  x="849.85" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="617.7" y="2005" width="0.2" height="15.0" fill="rgb(218,164,44)" rx="2" ry="2" />
<text  x="620.75" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="1049.8" y="1669" width="0.2" height="15.0" fill="rgb(232,80,27)" rx="2" ry="2" />
<text  x="1052.83" y="1679.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="832.3" y="1541" width="0.2" height="15.0" fill="rgb(232,50,44)" rx="2" ry="2" />
<text  x="835.29" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="824.9" y="1557" width="0.2" height="15.0" fill="rgb(247,151,49)" rx="2" ry="2" />
<text  x="827.91" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="863.2" y="1893" width="0.2" height="15.0" fill="rgb(206,103,41)" rx="2" ry="2" />
<text  x="866.20" y="1903.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="1115.6" y="1909" width="0.6" height="15.0" fill="rgb(252,112,46)" rx="2" ry="2" />
<text  x="1118.63" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="157.0" y="1461" width="0.2" height="15.0" fill="rgb(245,193,50)" rx="2" ry="2" />
<text  x="159.95" y="1471.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="939.8" y="1893" width="0.2" height="15.0" fill="rgb(226,129,26)" rx="2" ry="2" />
<text  x="942.76" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1052.4" y="1941" width="0.2" height="15.0" fill="rgb(244,59,38)" rx="2" ry="2" />
<text  x="1055.42" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="866.6" y="1861" width="0.2" height="15.0" fill="rgb(234,57,9)" rx="2" ry="2" />
<text  x="869.59" y="1871.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="615.0" y="1813" width="0.2" height="15.0" fill="rgb(241,16,41)" rx="2" ry="2" />
<text  x="617.95" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1121.4" y="1845" width="0.4" height="15.0" fill="rgb(229,212,9)" rx="2" ry="2" />
<text  x="1124.41" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="38.5" y="1973" width="0.2" height="15.0" fill="rgb(229,197,49)" rx="2" ry="2" />
<text  x="41.51" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="402.4" y="1829" width="0.2" height="15.0" fill="rgb(251,49,28)" rx="2" ry="2" />
<text  x="405.40" y="1839.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="869.4" y="1989" width="0.2" height="15.0" fill="rgb(248,12,35)" rx="2" ry="2" />
<text  x="872.38" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1121.4" y="1765" width="0.2" height="15.0" fill="rgb(213,16,10)" rx="2" ry="2" />
<text  x="1124.41" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1008.8" y="1781" width="0.2" height="15.0" fill="rgb(236,206,23)" rx="2" ry="2" />
<text  x="1011.75" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="17.2" y="1893" width="0.2" height="15.0" fill="rgb(253,10,0)" rx="2" ry="2" />
<text  x="20.18" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="851.8" y="1909" width="0.2" height="15.0" fill="rgb(249,75,34)" rx="2" ry="2" />
<text  x="854.83" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="918.8" y="2037" width="0.4" height="15.0" fill="rgb(226,96,5)" rx="2" ry="2" />
<text  x="921.83" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="157.0" y="1493" width="0.2" height="15.0" fill="rgb(233,139,24)" rx="2" ry="2" />
<text  x="159.95" y="1503.5" ></text>
</g>
<g >
<title>task_work_add (4 samples, 0.07%)</title><rect x="834.1" y="1797" width="0.8" height="15.0" fill="rgb(217,163,44)" rx="2" ry="2" />
<text  x="837.09" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="336.0" y="1733" width="0.2" height="15.0" fill="rgb(220,53,19)" rx="2" ry="2" />
<text  x="339.01" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="866.6" y="1893" width="0.2" height="15.0" fill="rgb(213,160,11)" rx="2" ry="2" />
<text  x="869.59" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="134.4" y="1861" width="0.2" height="15.0" fill="rgb(206,74,32)" rx="2" ry="2" />
<text  x="137.42" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="627.3" y="2005" width="0.2" height="15.0" fill="rgb(233,203,1)" rx="2" ry="2" />
<text  x="630.32" y="2015.5" ></text>
</g>
<g >
<title>check_stack_object (4 samples, 0.07%)</title><rect x="596.4" y="1829" width="0.8" height="15.0" fill="rgb(244,67,8)" rx="2" ry="2" />
<text  x="599.41" y="1839.5" ></text>
</g>
<g >
<title>__GI___getsockname (83 samples, 1.40%)</title><rect x="586.2" y="1941" width="16.6" height="15.0" fill="rgb(244,194,32)" rx="2" ry="2" />
<text  x="589.24" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="901.1" y="2021" width="1.2" height="15.0" fill="rgb(226,191,20)" rx="2" ry="2" />
<text  x="904.08" y="2031.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="17.6" y="1973" width="1.0" height="15.0" fill="rgb(247,8,38)" rx="2" ry="2" />
<text  x="20.58" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::close (611 samples, 10.32%)</title><rect x="717.4" y="1925" width="121.9" height="15.0" fill="rgb(239,143,47)" rx="2" ry="2" />
<text  x="720.44" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (1 samples, 0.02%)</title><rect x="581.3" y="2021" width="0.2" height="15.0" fill="rgb(229,181,22)" rx="2" ry="2" />
<text  x="584.26" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="828.3" y="1605" width="0.2" height="15.0" fill="rgb(234,94,33)" rx="2" ry="2" />
<text  x="831.30" y="1615.5" ></text>
</g>
<g >
<title>skb_entail (6 samples, 0.10%)</title><rect x="277.6" y="1877" width="1.2" height="15.0" fill="rgb(242,81,52)" rx="2" ry="2" />
<text  x="280.58" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1137.2" y="2005" width="0.2" height="15.0" fill="rgb(248,74,47)" rx="2" ry="2" />
<text  x="1140.16" y="2015.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="675.0" y="1685" width="0.2" height="15.0" fill="rgb(218,176,21)" rx="2" ry="2" />
<text  x="677.97" y="1695.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="291.3" y="1429" width="0.2" height="15.0" fill="rgb(236,42,34)" rx="2" ry="2" />
<text  x="294.34" y="1439.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="410.8" y="1941" width="0.2" height="15.0" fill="rgb(232,25,39)" rx="2" ry="2" />
<text  x="413.78" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="575.5" y="1957" width="0.8" height="15.0" fill="rgb(231,184,22)" rx="2" ry="2" />
<text  x="578.47" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 1.06%)</title><rect x="634.5" y="2005" width="12.6" height="15.0" fill="rgb(238,147,9)" rx="2" ry="2" />
<text  x="637.49" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1189.8" y="1973" width="0.2" height="15.0" fill="rgb(254,78,22)" rx="2" ry="2" />
<text  x="1192.80" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="841.3" y="1909" width="0.4" height="15.0" fill="rgb(232,224,43)" rx="2" ry="2" />
<text  x="844.26" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="508.1" y="1813" width="0.2" height="15.0" fill="rgb(252,138,51)" rx="2" ry="2" />
<text  x="511.08" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="751.7" y="1749" width="0.2" height="15.0" fill="rgb(233,42,8)" rx="2" ry="2" />
<text  x="754.74" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (4 samples, 0.07%)</title><rect x="74.6" y="1925" width="0.8" height="15.0" fill="rgb(217,113,17)" rx="2" ry="2" />
<text  x="77.60" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="330.2" y="1861" width="0.2" height="15.0" fill="rgb(206,215,21)" rx="2" ry="2" />
<text  x="333.22" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="517.3" y="1925" width="0.2" height="15.0" fill="rgb(244,131,44)" rx="2" ry="2" />
<text  x="520.25" y="1935.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1112.4" y="1909" width="0.2" height="15.0" fill="rgb(230,82,19)" rx="2" ry="2" />
<text  x="1115.44" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="384.5" y="1925" width="0.2" height="15.0" fill="rgb(225,130,39)" rx="2" ry="2" />
<text  x="387.46" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1158.3" y="1605" width="0.2" height="15.0" fill="rgb(223,133,36)" rx="2" ry="2" />
<text  x="1161.30" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="934.4" y="1861" width="0.2" height="15.0" fill="rgb(242,154,0)" rx="2" ry="2" />
<text  x="937.38" y="1871.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="704.5" y="1973" width="0.2" height="15.0" fill="rgb(222,22,30)" rx="2" ry="2" />
<text  x="707.48" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="544.8" y="1925" width="0.4" height="15.0" fill="rgb(212,137,6)" rx="2" ry="2" />
<text  x="547.77" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (52 samples, 0.88%)</title><rect x="1101.5" y="1845" width="10.3" height="15.0" fill="rgb(248,108,36)" rx="2" ry="2" />
<text  x="1104.47" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (3 samples, 0.05%)</title><rect x="866.2" y="1989" width="0.6" height="15.0" fill="rgb(229,88,53)" rx="2" ry="2" />
<text  x="869.19" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.0" y="1829" width="0.2" height="15.0" fill="rgb(241,6,18)" rx="2" ry="2" />
<text  x="854.03" y="1839.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="578.5" y="1957" width="0.2" height="15.0" fill="rgb(223,215,18)" rx="2" ry="2" />
<text  x="581.47" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="531.2" y="2021" width="2.2" height="15.0" fill="rgb(223,182,25)" rx="2" ry="2" />
<text  x="534.21" y="2031.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (17 samples, 0.29%)</title><rect x="405.2" y="1941" width="3.4" height="15.0" fill="rgb(217,195,21)" rx="2" ry="2" />
<text  x="408.19" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="704.5" y="1797" width="0.2" height="15.0" fill="rgb(209,229,2)" rx="2" ry="2" />
<text  x="707.48" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="525.4" y="1973" width="0.8" height="15.0" fill="rgb(227,8,2)" rx="2" ry="2" />
<text  x="528.43" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="482.8" y="1701" width="0.2" height="15.0" fill="rgb(224,170,44)" rx="2" ry="2" />
<text  x="485.76" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="782.2" y="1381" width="0.2" height="15.0" fill="rgb(223,188,9)" rx="2" ry="2" />
<text  x="785.24" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1019.3" y="1797" width="0.2" height="15.0" fill="rgb(226,57,40)" rx="2" ry="2" />
<text  x="1022.32" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (63 samples, 1.06%)</title><rect x="634.5" y="2037" width="12.6" height="15.0" fill="rgb(250,196,13)" rx="2" ry="2" />
<text  x="637.49" y="2047.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="611.4" y="1557" width="0.2" height="15.0" fill="rgb(230,128,32)" rx="2" ry="2" />
<text  x="614.37" y="1567.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="918.4" y="2021" width="0.2" height="15.0" fill="rgb(207,59,41)" rx="2" ry="2" />
<text  x="921.43" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="517.5" y="1973" width="0.7" height="15.0" fill="rgb(234,6,4)" rx="2" ry="2" />
<text  x="520.45" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="256.4" y="1797" width="0.2" height="15.0" fill="rgb(216,69,41)" rx="2" ry="2" />
<text  x="259.45" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1013.1" y="1829" width="0.2" height="15.0" fill="rgb(207,115,28)" rx="2" ry="2" />
<text  x="1016.14" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="534.2" y="1845" width="0.2" height="15.0" fill="rgb(236,85,23)" rx="2" ry="2" />
<text  x="537.20" y="1855.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="914.0" y="1941" width="0.2" height="15.0" fill="rgb(210,91,2)" rx="2" ry="2" />
<text  x="917.04" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="611.4" y="1733" width="0.2" height="15.0" fill="rgb(246,119,19)" rx="2" ry="2" />
<text  x="614.37" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="412.0" y="2005" width="0.4" height="15.0" fill="rgb(211,116,1)" rx="2" ry="2" />
<text  x="414.97" y="2015.5" ></text>
</g>
<g >
<title>clear_inode (4 samples, 0.07%)</title><rect x="736.4" y="1701" width="0.8" height="15.0" fill="rgb(208,222,4)" rx="2" ry="2" />
<text  x="739.38" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="231.3" y="1845" width="0.2" height="15.0" fill="rgb(231,217,43)" rx="2" ry="2" />
<text  x="234.32" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="57.5" y="1685" width="0.2" height="15.0" fill="rgb(232,211,30)" rx="2" ry="2" />
<text  x="60.46" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (8 samples, 0.14%)</title><rect x="572.7" y="1989" width="1.6" height="15.0" fill="rgb(213,218,51)" rx="2" ry="2" />
<text  x="575.68" y="1999.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1112.4" y="1893" width="0.2" height="15.0" fill="rgb(213,148,42)" rx="2" ry="2" />
<text  x="1115.44" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="404.6" y="1509" width="0.2" height="15.0" fill="rgb(222,95,4)" rx="2" ry="2" />
<text  x="407.60" y="1519.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (10 samples, 0.17%)</title><rect x="18.8" y="1845" width="2.0" height="15.0" fill="rgb(233,35,44)" rx="2" ry="2" />
<text  x="21.77" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="824.9" y="1637" width="0.2" height="15.0" fill="rgb(226,183,6)" rx="2" ry="2" />
<text  x="827.91" y="1647.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.17%)</title><rect x="18.8" y="2005" width="2.0" height="15.0" fill="rgb(252,46,13)" rx="2" ry="2" />
<text  x="21.77" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="990.6" y="1877" width="0.4" height="15.0" fill="rgb(226,113,46)" rx="2" ry="2" />
<text  x="993.61" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="969.3" y="1925" width="0.2" height="15.0" fill="rgb(250,41,11)" rx="2" ry="2" />
<text  x="972.27" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="994.0" y="1989" width="0.2" height="15.0" fill="rgb(246,203,41)" rx="2" ry="2" />
<text  x="997.00" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="482.6" y="1845" width="0.6" height="15.0" fill="rgb(214,153,21)" rx="2" ry="2" />
<text  x="485.56" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="952.7" y="1989" width="0.4" height="15.0" fill="rgb(216,4,3)" rx="2" ry="2" />
<text  x="955.72" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="518.8" y="1813" width="0.8" height="15.0" fill="rgb(228,197,53)" rx="2" ry="2" />
<text  x="521.85" y="1823.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="856.2" y="1701" width="0.2" height="15.0" fill="rgb(230,43,16)" rx="2" ry="2" />
<text  x="859.22" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1013.1" y="1909" width="0.2" height="15.0" fill="rgb(242,73,36)" rx="2" ry="2" />
<text  x="1016.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="505.7" y="1877" width="0.2" height="15.0" fill="rgb(216,175,49)" rx="2" ry="2" />
<text  x="508.69" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="572.3" y="2005" width="0.2" height="15.0" fill="rgb(213,73,23)" rx="2" ry="2" />
<text  x="575.28" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="117.3" y="69" width="0.2" height="15.0" fill="rgb(239,20,26)" rx="2" ry="2" />
<text  x="120.27" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (15 samples, 0.25%)</title><rect x="623.5" y="2037" width="3.0" height="15.0" fill="rgb(252,208,7)" rx="2" ry="2" />
<text  x="626.53" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (16 samples, 0.27%)</title><rect x="998.0" y="1989" width="3.2" height="15.0" fill="rgb(219,49,12)" rx="2" ry="2" />
<text  x="1000.99" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="652.6" y="2005" width="0.2" height="15.0" fill="rgb(227,218,28)" rx="2" ry="2" />
<text  x="655.64" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="651.4" y="1957" width="0.2" height="15.0" fill="rgb(218,19,13)" rx="2" ry="2" />
<text  x="654.44" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="599.8" y="1557" width="0.4" height="15.0" fill="rgb(247,169,50)" rx="2" ry="2" />
<text  x="602.80" y="1567.5" ></text>
</g>
<g >
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="283.4" y="1813" width="0.4" height="15.0" fill="rgb(216,111,24)" rx="2" ry="2" />
<text  x="286.37" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (4 samples, 0.07%)</title><rect x="862.6" y="1989" width="0.8" height="15.0" fill="rgb(217,194,16)" rx="2" ry="2" />
<text  x="865.60" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="926.0" y="1909" width="0.6" height="15.0" fill="rgb(244,165,42)" rx="2" ry="2" />
<text  x="929.01" y="1919.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="336.8" y="1941" width="0.6" height="15.0" fill="rgb(218,9,6)" rx="2" ry="2" />
<text  x="339.80" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="170.7" y="1973" width="0.4" height="15.0" fill="rgb(220,177,27)" rx="2" ry="2" />
<text  x="173.71" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (1 samples, 0.02%)</title><rect x="580.7" y="2021" width="0.2" height="15.0" fill="rgb(243,199,49)" rx="2" ry="2" />
<text  x="583.66" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="996.4" y="1909" width="0.2" height="15.0" fill="rgb(210,125,48)" rx="2" ry="2" />
<text  x="999.39" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="371.9" y="1925" width="0.4" height="15.0" fill="rgb(218,117,40)" rx="2" ry="2" />
<text  x="374.90" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1101.1" y="1861" width="0.2" height="15.0" fill="rgb(254,151,51)" rx="2" ry="2" />
<text  x="1104.07" y="1871.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1179.0" y="2037" width="0.6" height="15.0" fill="rgb(205,51,17)" rx="2" ry="2" />
<text  x="1182.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="104.7" y="1509" width="16.4" height="15.0" fill="rgb(222,52,45)" rx="2" ry="2" />
<text  x="107.71" y="1519.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (2 samples, 0.03%)</title><rect x="80.8" y="1941" width="0.4" height="15.0" fill="rgb(243,78,6)" rx="2" ry="2" />
<text  x="83.78" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="191.6" y="2021" width="0.4" height="15.0" fill="rgb(213,27,47)" rx="2" ry="2" />
<text  x="194.65" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="996.4" y="1685" width="0.2" height="15.0" fill="rgb(238,70,2)" rx="2" ry="2" />
<text  x="999.39" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="117.7" y="85" width="0.6" height="15.0" fill="rgb(240,134,12)" rx="2" ry="2" />
<text  x="120.67" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="883.1" y="1877" width="0.4" height="15.0" fill="rgb(243,194,39)" rx="2" ry="2" />
<text  x="886.14" y="1887.5" ></text>
</g>
<g >
<title>call_rcu_sched (3 samples, 0.05%)</title><rect x="464.6" y="1957" width="0.6" height="15.0" fill="rgb(217,15,38)" rx="2" ry="2" />
<text  x="467.61" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="644.9" y="1941" width="0.2" height="15.0" fill="rgb(220,115,6)" rx="2" ry="2" />
<text  x="647.86" y="1951.5" ></text>
</g>
<g >
<title>dst_release (12 samples, 0.20%)</title><rect x="1076.7" y="1877" width="2.4" height="15.0" fill="rgb(234,85,1)" rx="2" ry="2" />
<text  x="1079.75" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1012.7" y="1957" width="0.2" height="15.0" fill="rgb(207,5,1)" rx="2" ry="2" />
<text  x="1015.74" y="1967.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="581.9" y="2021" width="0.2" height="15.0" fill="rgb(246,109,40)" rx="2" ry="2" />
<text  x="584.86" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (20 samples, 0.34%)</title><rect x="416.0" y="2021" width="3.9" height="15.0" fill="rgb(236,4,54)" rx="2" ry="2" />
<text  x="418.96" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="149.8" y="1829" width="0.2" height="15.0" fill="rgb(240,92,37)" rx="2" ry="2" />
<text  x="152.77" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (2 samples, 0.03%)</title><rect x="673.8" y="1845" width="0.4" height="15.0" fill="rgb(254,31,39)" rx="2" ry="2" />
<text  x="676.77" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="976.1" y="1957" width="0.2" height="15.0" fill="rgb(235,102,48)" rx="2" ry="2" />
<text  x="979.05" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="336.2" y="1877" width="0.2" height="15.0" fill="rgb(228,56,51)" rx="2" ry="2" />
<text  x="339.20" y="1887.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1140.4" y="2005" width="0.2" height="15.0" fill="rgb(237,189,53)" rx="2" ry="2" />
<text  x="1143.35" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="481.0" y="1749" width="0.4" height="15.0" fill="rgb(254,135,48)" rx="2" ry="2" />
<text  x="483.96" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (10 samples, 0.17%)</title><rect x="649.6" y="1973" width="2.0" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="652.65" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="863.8" y="1957" width="0.2" height="15.0" fill="rgb(244,140,42)" rx="2" ry="2" />
<text  x="866.80" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="104.1" y="1941" width="20.9" height="15.0" fill="rgb(248,151,36)" rx="2" ry="2" />
<text  x="107.11" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="561.3" y="1845" width="0.8" height="15.0" fill="rgb(237,176,24)" rx="2" ry="2" />
<text  x="564.32" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="498.5" y="1813" width="0.2" height="15.0" fill="rgb(222,154,34)" rx="2" ry="2" />
<text  x="501.51" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="983.4" y="1957" width="0.2" height="15.0" fill="rgb(241,27,35)" rx="2" ry="2" />
<text  x="986.43" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="858.4" y="1877" width="0.2" height="15.0" fill="rgb(216,45,36)" rx="2" ry="2" />
<text  x="861.41" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="973.7" y="2037" width="1.4" height="15.0" fill="rgb(241,135,45)" rx="2" ry="2" />
<text  x="976.66" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="310.3" y="1605" width="0.2" height="15.0" fill="rgb(246,25,34)" rx="2" ry="2" />
<text  x="313.28" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="264.2" y="1637" width="0.2" height="15.0" fill="rgb(205,223,22)" rx="2" ry="2" />
<text  x="267.22" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1012.7" y="1797" width="0.2" height="15.0" fill="rgb(250,124,31)" rx="2" ry="2" />
<text  x="1015.74" y="1807.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (4 samples, 0.07%)</title><rect x="179.9" y="1989" width="0.8" height="15.0" fill="rgb(208,21,45)" rx="2" ry="2" />
<text  x="182.88" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (4 samples, 0.07%)</title><rect x="880.7" y="1941" width="0.8" height="15.0" fill="rgb(247,124,5)" rx="2" ry="2" />
<text  x="883.74" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.8" y="1909" width="0.2" height="15.0" fill="rgb(247,148,12)" rx="2" ry="2" />
<text  x="940.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="710.5" y="1989" width="0.2" height="15.0" fill="rgb(206,91,6)" rx="2" ry="2" />
<text  x="713.46" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="892.1" y="1765" width="0.2" height="15.0" fill="rgb(231,223,40)" rx="2" ry="2" />
<text  x="895.11" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="956.9" y="2005" width="0.2" height="15.0" fill="rgb(236,78,36)" rx="2" ry="2" />
<text  x="959.91" y="2015.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.08%)</title><rect x="266.2" y="1861" width="1.0" height="15.0" fill="rgb(205,68,1)" rx="2" ry="2" />
<text  x="269.22" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="97.9" y="1861" width="0.2" height="15.0" fill="rgb(214,4,32)" rx="2" ry="2" />
<text  x="100.93" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1156.3" y="1909" width="0.2" height="15.0" fill="rgb(225,134,39)" rx="2" ry="2" />
<text  x="1159.30" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="464.2" y="1957" width="0.4" height="15.0" fill="rgb(205,189,32)" rx="2" ry="2" />
<text  x="467.21" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="386.7" y="1829" width="0.2" height="15.0" fill="rgb(227,224,47)" rx="2" ry="2" />
<text  x="389.65" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash@plt (2 samples, 0.03%)</title><rect x="1022.9" y="2037" width="0.4" height="15.0" fill="rgb(239,147,51)" rx="2" ry="2" />
<text  x="1025.91" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="641.5" y="1925" width="0.2" height="15.0" fill="rgb(224,75,0)" rx="2" ry="2" />
<text  x="644.47" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1012.7" y="1813" width="0.2" height="15.0" fill="rgb(221,163,20)" rx="2" ry="2" />
<text  x="1015.74" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="782.2" y="1333" width="0.2" height="15.0" fill="rgb(232,67,34)" rx="2" ry="2" />
<text  x="785.24" y="1343.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="696.9" y="1877" width="0.8" height="15.0" fill="rgb(246,85,46)" rx="2" ry="2" />
<text  x="699.90" y="1887.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="809.0" y="1653" width="0.6" height="15.0" fill="rgb(228,76,34)" rx="2" ry="2" />
<text  x="811.96" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="404.6" y="1877" width="0.2" height="15.0" fill="rgb(229,18,5)" rx="2" ry="2" />
<text  x="407.60" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="216.2" y="1861" width="0.2" height="15.0" fill="rgb(241,60,40)" rx="2" ry="2" />
<text  x="219.17" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="514.3" y="1989" width="0.2" height="15.0" fill="rgb(243,189,46)" rx="2" ry="2" />
<text  x="517.26" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="1157.9" y="1893" width="0.6" height="15.0" fill="rgb(236,53,50)" rx="2" ry="2" />
<text  x="1160.90" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="58.3" y="1941" width="0.8" height="15.0" fill="rgb(233,39,44)" rx="2" ry="2" />
<text  x="61.25" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (13 samples, 0.22%)</title><rect x="44.7" y="1989" width="2.6" height="15.0" fill="rgb(219,22,19)" rx="2" ry="2" />
<text  x="47.69" y="1999.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="464.6" y="1941" width="0.6" height="15.0" fill="rgb(205,0,38)" rx="2" ry="2" />
<text  x="467.61" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="710.3" y="1989" width="0.2" height="15.0" fill="rgb(223,103,43)" rx="2" ry="2" />
<text  x="713.26" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="644.9" y="1893" width="0.2" height="15.0" fill="rgb(210,187,34)" rx="2" ry="2" />
<text  x="647.86" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="160.3" y="1765" width="0.2" height="15.0" fill="rgb(231,212,14)" rx="2" ry="2" />
<text  x="163.34" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="130.4" y="1925" width="0.6" height="15.0" fill="rgb(251,145,12)" rx="2" ry="2" />
<text  x="133.43" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1126.8" y="1749" width="0.2" height="15.0" fill="rgb(227,192,46)" rx="2" ry="2" />
<text  x="1129.79" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="640.5" y="1685" width="0.2" height="15.0" fill="rgb(229,220,7)" rx="2" ry="2" />
<text  x="643.48" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="912.6" y="1813" width="0.2" height="15.0" fill="rgb(242,89,47)" rx="2" ry="2" />
<text  x="915.65" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (48 samples, 0.81%)</title><rect x="1101.7" y="1733" width="9.5" height="15.0" fill="rgb(237,118,46)" rx="2" ry="2" />
<text  x="1104.67" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1157" width="14.4" height="15.0" fill="rgb(210,57,20)" rx="2" ry="2" />
<text  x="108.11" y="1167.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="880.3" y="1861" width="0.2" height="15.0" fill="rgb(252,173,25)" rx="2" ry="2" />
<text  x="883.34" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="274.4" y="1813" width="0.2" height="15.0" fill="rgb(235,51,16)" rx="2" ry="2" />
<text  x="277.39" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="144.6" y="1941" width="0.2" height="15.0" fill="rgb(235,22,47)" rx="2" ry="2" />
<text  x="147.59" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="104.9" y="1205" width="14.8" height="15.0" fill="rgb(216,150,32)" rx="2" ry="2" />
<text  x="107.91" y="1215.5" ></text>
</g>
<g >
<title>ip_finish_output2 (107 samples, 1.81%)</title><rect x="780.8" y="1605" width="21.4" height="15.0" fill="rgb(245,81,48)" rx="2" ry="2" />
<text  x="783.85" y="1615.5" >i..</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="127.6" y="1989" width="0.2" height="15.0" fill="rgb(243,119,13)" rx="2" ry="2" />
<text  x="130.64" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.74%)</title><rect x="666.2" y="1925" width="8.8" height="15.0" fill="rgb(246,218,39)" rx="2" ry="2" />
<text  x="669.20" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="435.9" y="1893" width="0.2" height="15.0" fill="rgb(233,50,12)" rx="2" ry="2" />
<text  x="438.90" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="640.5" y="1813" width="0.2" height="15.0" fill="rgb(234,217,18)" rx="2" ry="2" />
<text  x="643.48" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="167.1" y="1989" width="0.2" height="15.0" fill="rgb(207,198,17)" rx="2" ry="2" />
<text  x="170.12" y="1999.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="224.1" y="1445" width="0.2" height="15.0" fill="rgb(214,85,29)" rx="2" ry="2" />
<text  x="227.15" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1049.8" y="1845" width="0.2" height="15.0" fill="rgb(249,121,10)" rx="2" ry="2" />
<text  x="1052.83" y="1855.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="268.2" y="1829" width="0.2" height="15.0" fill="rgb(249,157,3)" rx="2" ry="2" />
<text  x="271.21" y="1839.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="17.4" y="2069" width="1.2" height="15.0" fill="rgb(253,7,2)" rx="2" ry="2" />
<text  x="20.38" y="2079.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1109" width="14.4" height="15.0" fill="rgb(218,84,33)" rx="2" ry="2" />
<text  x="108.11" y="1119.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="404.6" y="1541" width="0.2" height="15.0" fill="rgb(250,20,34)" rx="2" ry="2" />
<text  x="407.60" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="104.9" y="1237" width="15.0" height="15.0" fill="rgb(209,54,16)" rx="2" ry="2" />
<text  x="107.91" y="1247.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="225.9" y="1781" width="0.2" height="15.0" fill="rgb(254,154,45)" rx="2" ry="2" />
<text  x="228.94" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="453.8" y="1829" width="0.2" height="15.0" fill="rgb(220,220,6)" rx="2" ry="2" />
<text  x="456.85" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="974.9" y="2005" width="0.2" height="15.0" fill="rgb(245,78,52)" rx="2" ry="2" />
<text  x="977.86" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="57.5" y="1701" width="0.2" height="15.0" fill="rgb(242,30,23)" rx="2" ry="2" />
<text  x="60.46" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="333.0" y="1845" width="0.2" height="15.0" fill="rgb(249,127,49)" rx="2" ry="2" />
<text  x="336.01" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (2 samples, 0.03%)</title><rect x="74.2" y="1925" width="0.4" height="15.0" fill="rgb(227,12,24)" rx="2" ry="2" />
<text  x="77.20" y="1935.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="896.1" y="1957" width="0.2" height="15.0" fill="rgb(236,120,6)" rx="2" ry="2" />
<text  x="899.10" y="1967.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (84 samples, 1.42%)</title><rect x="491.5" y="1925" width="16.8" height="15.0" fill="rgb(251,79,19)" rx="2" ry="2" />
<text  x="494.53" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="104.7" y="1269" width="15.6" height="15.0" fill="rgb(246,77,29)" rx="2" ry="2" />
<text  x="107.71" y="1279.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="124.7" y="1621" width="0.1" height="15.0" fill="rgb(205,194,53)" rx="2" ry="2" />
<text  x="127.65" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="836.7" y="1861" width="0.2" height="15.0" fill="rgb(213,22,16)" rx="2" ry="2" />
<text  x="839.68" y="1871.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="651.6" y="1989" width="0.4" height="15.0" fill="rgb(239,196,15)" rx="2" ry="2" />
<text  x="654.64" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="261" width="13.8" height="15.0" fill="rgb(207,22,6)" rx="2" ry="2" />
<text  x="108.11" y="271.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="310.3" y="1653" width="0.2" height="15.0" fill="rgb(218,18,26)" rx="2" ry="2" />
<text  x="313.28" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="324.4" y="1525" width="0.4" height="15.0" fill="rgb(245,227,29)" rx="2" ry="2" />
<text  x="327.44" y="1535.5" ></text>
</g>
<g >
<title>inet_accept (117 samples, 1.98%)</title><rect x="361.3" y="1957" width="23.4" height="15.0" fill="rgb(243,42,43)" rx="2" ry="2" />
<text  x="364.33" y="1967.5" >i..</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="78.4" y="1685" width="0.2" height="15.0" fill="rgb(229,215,37)" rx="2" ry="2" />
<text  x="81.39" y="1695.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="332.6" y="1845" width="0.2" height="15.0" fill="rgb(240,163,54)" rx="2" ry="2" />
<text  x="335.62" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (74 samples, 1.25%)</title><rect x="214.8" y="1941" width="14.7" height="15.0" fill="rgb(210,123,54)" rx="2" ry="2" />
<text  x="217.78" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (2 samples, 0.03%)</title><rect x="70.6" y="1973" width="0.4" height="15.0" fill="rgb(236,138,19)" rx="2" ry="2" />
<text  x="73.62" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1130.2" y="1797" width="0.2" height="15.0" fill="rgb(225,209,35)" rx="2" ry="2" />
<text  x="1133.18" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="836.7" y="1669" width="0.2" height="15.0" fill="rgb(242,42,2)" rx="2" ry="2" />
<text  x="839.68" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="572.5" y="1941" width="0.2" height="15.0" fill="rgb(242,133,19)" rx="2" ry="2" />
<text  x="575.48" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="53.5" y="1749" width="0.2" height="15.0" fill="rgb(216,122,36)" rx="2" ry="2" />
<text  x="56.47" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="198.8" y="2005" width="0.2" height="15.0" fill="rgb(218,44,50)" rx="2" ry="2" />
<text  x="201.82" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (11 samples, 0.19%)</title><rect x="1130.6" y="2053" width="2.2" height="15.0" fill="rgb(228,156,23)" rx="2" ry="2" />
<text  x="1133.58" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="310.3" y="1749" width="0.2" height="15.0" fill="rgb(218,68,8)" rx="2" ry="2" />
<text  x="313.28" y="1759.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="483.0" y="1701" width="0.2" height="15.0" fill="rgb(231,180,12)" rx="2" ry="2" />
<text  x="485.96" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="976.1" y="1989" width="0.2" height="15.0" fill="rgb(226,86,47)" rx="2" ry="2" />
<text  x="979.05" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="996.4" y="1733" width="0.2" height="15.0" fill="rgb(210,155,21)" rx="2" ry="2" />
<text  x="999.39" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1116.2" y="1845" width="0.2" height="15.0" fill="rgb(247,150,43)" rx="2" ry="2" />
<text  x="1119.23" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="32.1" y="1733" width="0.2" height="15.0" fill="rgb(229,52,27)" rx="2" ry="2" />
<text  x="35.13" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="863.8" y="1909" width="0.2" height="15.0" fill="rgb(250,185,49)" rx="2" ry="2" />
<text  x="866.80" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="226.1" y="1861" width="0.2" height="15.0" fill="rgb(252,18,44)" rx="2" ry="2" />
<text  x="229.14" y="1871.5" ></text>
</g>
<g >
<title>ip_output (115 samples, 1.94%)</title><rect x="779.3" y="1637" width="22.9" height="15.0" fill="rgb(219,73,44)" rx="2" ry="2" />
<text  x="782.25" y="1647.5" >i..</text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="561.5" y="1813" width="0.6" height="15.0" fill="rgb(247,95,1)" rx="2" ry="2" />
<text  x="564.52" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="577.3" y="1973" width="0.2" height="15.0" fill="rgb(249,42,26)" rx="2" ry="2" />
<text  x="580.27" y="1983.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="295.5" y="1637" width="0.2" height="15.0" fill="rgb(225,108,45)" rx="2" ry="2" />
<text  x="298.53" y="1647.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="84.4" y="1909" width="0.2" height="15.0" fill="rgb(245,43,9)" rx="2" ry="2" />
<text  x="87.37" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1121.4" y="1797" width="0.4" height="15.0" fill="rgb(209,44,19)" rx="2" ry="2" />
<text  x="1124.41" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="78.4" y="1749" width="0.2" height="15.0" fill="rgb(228,158,53)" rx="2" ry="2" />
<text  x="81.39" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1013.1" y="1797" width="0.2" height="15.0" fill="rgb(230,44,21)" rx="2" ry="2" />
<text  x="1016.14" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="171.5" y="2021" width="1.0" height="15.0" fill="rgb(251,196,23)" rx="2" ry="2" />
<text  x="174.51" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="231.3" y="1733" width="0.2" height="15.0" fill="rgb(232,127,11)" rx="2" ry="2" />
<text  x="234.32" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (92 samples, 1.55%)</title><rect x="1142.5" y="2053" width="18.4" height="15.0" fill="rgb(217,131,2)" rx="2" ry="2" />
<text  x="1145.54" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="140.2" y="2005" width="0.2" height="15.0" fill="rgb(211,32,42)" rx="2" ry="2" />
<text  x="143.20" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="866.6" y="1941" width="0.2" height="15.0" fill="rgb(208,162,20)" rx="2" ry="2" />
<text  x="869.59" y="1951.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="435.9" y="1717" width="0.2" height="15.0" fill="rgb(210,102,49)" rx="2" ry="2" />
<text  x="438.90" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (89 samples, 1.50%)</title><rect x="976.5" y="2005" width="17.7" height="15.0" fill="rgb(206,196,9)" rx="2" ry="2" />
<text  x="979.45" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (7 samples, 0.12%)</title><rect x="215.4" y="1909" width="1.4" height="15.0" fill="rgb(240,0,54)" rx="2" ry="2" />
<text  x="218.37" y="1919.5" ></text>
</g>
<g >
<title>task_work_run (534 samples, 9.02%)</title><rect x="725.8" y="1845" width="106.5" height="15.0" fill="rgb(216,3,34)" rx="2" ry="2" />
<text  x="728.82" y="1855.5" >task_work_run</text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="615.8" y="1525" width="0.2" height="15.0" fill="rgb(224,61,42)" rx="2" ry="2" />
<text  x="618.75" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (48 samples, 0.81%)</title><rect x="1101.7" y="1653" width="9.5" height="15.0" fill="rgb(238,183,32)" rx="2" ry="2" />
<text  x="1104.67" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="832.3" y="1765" width="0.2" height="15.0" fill="rgb(216,166,4)" rx="2" ry="2" />
<text  x="835.29" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="310.3" y="1525" width="0.2" height="15.0" fill="rgb(222,189,50)" rx="2" ry="2" />
<text  x="313.28" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="644.9" y="1909" width="0.2" height="15.0" fill="rgb(235,195,2)" rx="2" ry="2" />
<text  x="647.86" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (58 samples, 0.98%)</title><rect x="665.6" y="1957" width="11.6" height="15.0" fill="rgb(230,136,36)" rx="2" ry="2" />
<text  x="668.60" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1008.8" y="1877" width="0.2" height="15.0" fill="rgb(229,180,41)" rx="2" ry="2" />
<text  x="1011.75" y="1887.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.17%)</title><rect x="18.8" y="1925" width="2.0" height="15.0" fill="rgb(220,135,19)" rx="2" ry="2" />
<text  x="21.77" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::get (1 samples, 0.02%)</title><rect x="10.2" y="1845" width="0.2" height="15.0" fill="rgb(205,211,6)" rx="2" ry="2" />
<text  x="13.20" y="1855.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="956.1" y="1941" width="0.2" height="15.0" fill="rgb(227,206,30)" rx="2" ry="2" />
<text  x="959.11" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="38.5" y="1845" width="0.2" height="15.0" fill="rgb(240,166,25)" rx="2" ry="2" />
<text  x="41.51" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="546.6" y="1765" width="0.6" height="15.0" fill="rgb(227,41,12)" rx="2" ry="2" />
<text  x="549.56" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="836.7" y="1845" width="0.2" height="15.0" fill="rgb(222,49,53)" rx="2" ry="2" />
<text  x="839.68" y="1855.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="600.0" y="1477" width="0.2" height="15.0" fill="rgb(230,228,39)" rx="2" ry="2" />
<text  x="603.00" y="1487.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="76.4" y="1653" width="0.2" height="15.0" fill="rgb(241,148,35)" rx="2" ry="2" />
<text  x="79.40" y="1663.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1019.3" y="1781" width="0.2" height="15.0" fill="rgb(211,25,6)" rx="2" ry="2" />
<text  x="1022.32" y="1791.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (3 samples, 0.05%)</title><rect x="362.5" y="1941" width="0.6" height="15.0" fill="rgb(237,141,41)" rx="2" ry="2" />
<text  x="365.52" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="231.3" y="1893" width="0.2" height="15.0" fill="rgb(211,144,46)" rx="2" ry="2" />
<text  x="234.32" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="386.9" y="1925" width="0.1" height="15.0" fill="rgb(236,221,15)" rx="2" ry="2" />
<text  x="389.85" y="1935.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="483.0" y="1589" width="0.2" height="15.0" fill="rgb(218,160,51)" rx="2" ry="2" />
<text  x="485.96" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="926.8" y="1941" width="0.2" height="15.0" fill="rgb(225,86,39)" rx="2" ry="2" />
<text  x="929.80" y="1951.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="704.5" y="1637" width="0.2" height="15.0" fill="rgb(243,16,4)" rx="2" ry="2" />
<text  x="707.48" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="254.9" y="1893" width="0.2" height="15.0" fill="rgb(209,214,53)" rx="2" ry="2" />
<text  x="257.85" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.1" y="1621" width="0.2" height="15.0" fill="rgb(214,26,4)" rx="2" ry="2" />
<text  x="125.06" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (27 samples, 0.46%)</title><rect x="1167.1" y="2021" width="5.4" height="15.0" fill="rgb(206,59,28)" rx="2" ry="2" />
<text  x="1170.07" y="2031.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="397.0" y="1877" width="0.2" height="15.0" fill="rgb(206,191,21)" rx="2" ry="2" />
<text  x="400.02" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="142.4" y="1941" width="0.2" height="15.0" fill="rgb(249,186,11)" rx="2" ry="2" />
<text  x="145.40" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="278.4" y="1781" width="0.2" height="15.0" fill="rgb(241,182,49)" rx="2" ry="2" />
<text  x="281.38" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="161.1" y="1813" width="0.2" height="15.0" fill="rgb(254,111,1)" rx="2" ry="2" />
<text  x="164.14" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="544.6" y="1925" width="0.2" height="15.0" fill="rgb(230,167,49)" rx="2" ry="2" />
<text  x="547.57" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="725.6" y="1797" width="0.2" height="15.0" fill="rgb(211,22,52)" rx="2" ry="2" />
<text  x="728.62" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1157.5" y="1781" width="0.2" height="15.0" fill="rgb(244,142,14)" rx="2" ry="2" />
<text  x="1160.50" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="224.1" y="1621" width="0.2" height="15.0" fill="rgb(252,57,43)" rx="2" ry="2" />
<text  x="227.15" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="377.7" y="1813" width="0.2" height="15.0" fill="rgb(249,151,43)" rx="2" ry="2" />
<text  x="380.68" y="1823.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="68.4" y="1957" width="0.2" height="15.0" fill="rgb(221,132,19)" rx="2" ry="2" />
<text  x="71.42" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="435.9" y="1813" width="0.2" height="15.0" fill="rgb(229,49,36)" rx="2" ry="2" />
<text  x="438.90" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="848.2" y="1877" width="0.2" height="15.0" fill="rgb(221,136,18)" rx="2" ry="2" />
<text  x="851.24" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="586.0" y="1893" width="0.2" height="15.0" fill="rgb(213,97,25)" rx="2" ry="2" />
<text  x="589.04" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="372.1" y="1797" width="0.2" height="15.0" fill="rgb(224,114,2)" rx="2" ry="2" />
<text  x="375.10" y="1807.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="982.0" y="1637" width="0.2" height="15.0" fill="rgb(207,157,12)" rx="2" ry="2" />
<text  x="985.03" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (3 samples, 0.05%)</title><rect x="141.8" y="1941" width="0.6" height="15.0" fill="rgb(240,56,2)" rx="2" ry="2" />
<text  x="144.80" y="1951.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.8" y="1925" width="0.2" height="15.0" fill="rgb(206,228,53)" rx="2" ry="2" />
<text  x="940.77" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="247.1" y="1941" width="0.2" height="15.0" fill="rgb(208,25,34)" rx="2" ry="2" />
<text  x="250.08" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="907.1" y="1909" width="0.2" height="15.0" fill="rgb(224,209,20)" rx="2" ry="2" />
<text  x="910.06" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="481.0" y="1733" width="0.4" height="15.0" fill="rgb(227,172,53)" rx="2" ry="2" />
<text  x="483.96" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="336.0" y="1797" width="0.2" height="15.0" fill="rgb(240,163,31)" rx="2" ry="2" />
<text  x="339.01" y="1807.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="415.4" y="2037" width="0.2" height="15.0" fill="rgb(213,106,11)" rx="2" ry="2" />
<text  x="418.36" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (19 samples, 0.32%)</title><rect x="373.9" y="1909" width="3.8" height="15.0" fill="rgb(249,27,14)" rx="2" ry="2" />
<text  x="376.89" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (2 samples, 0.03%)</title><rect x="844.3" y="1941" width="0.4" height="15.0" fill="rgb(233,139,26)" rx="2" ry="2" />
<text  x="847.25" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="1135.6" y="2053" width="0.4" height="15.0" fill="rgb(218,4,19)" rx="2" ry="2" />
<text  x="1138.57" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (2 samples, 0.03%)</title><rect x="1173.6" y="2053" width="0.4" height="15.0" fill="rgb(243,221,48)" rx="2" ry="2" />
<text  x="1176.65" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="746.2" y="1573" width="0.4" height="15.0" fill="rgb(237,50,42)" rx="2" ry="2" />
<text  x="749.15" y="1583.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.5" y="1749" width="0.2" height="15.0" fill="rgb(215,77,22)" rx="2" ry="2" />
<text  x="126.45" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1008.8" y="1893" width="0.2" height="15.0" fill="rgb(216,1,47)" rx="2" ry="2" />
<text  x="1011.75" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="802.2" y="1637" width="0.2" height="15.0" fill="rgb(242,28,2)" rx="2" ry="2" />
<text  x="805.18" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="997.6" y="1989" width="0.2" height="15.0" fill="rgb(246,1,42)" rx="2" ry="2" />
<text  x="1000.59" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="521.6" y="1941" width="0.2" height="15.0" fill="rgb(239,72,8)" rx="2" ry="2" />
<text  x="524.64" y="1951.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="339.2" y="1941" width="0.8" height="15.0" fill="rgb(253,24,30)" rx="2" ry="2" />
<text  x="342.20" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="505.5" y="1717" width="0.2" height="15.0" fill="rgb(244,225,19)" rx="2" ry="2" />
<text  x="508.49" y="1727.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="546.4" y="1877" width="0.8" height="15.0" fill="rgb(213,77,49)" rx="2" ry="2" />
<text  x="549.36" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.7" y="101" width="0.2" height="15.0" fill="rgb(227,93,40)" rx="2" ry="2" />
<text  x="121.67" y="111.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.02%)</title><rect x="835.7" y="1813" width="0.2" height="15.0" fill="rgb(243,144,35)" rx="2" ry="2" />
<text  x="838.68" y="1823.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="220.8" y="1877" width="0.2" height="15.0" fill="rgb(216,85,12)" rx="2" ry="2" />
<text  x="223.76" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="62.0" y="1925" width="1.2" height="15.0" fill="rgb(219,209,6)" rx="2" ry="2" />
<text  x="65.04" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="542.0" y="1717" width="0.2" height="15.0" fill="rgb(239,217,46)" rx="2" ry="2" />
<text  x="544.98" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="61.8" y="1941" width="1.4" height="15.0" fill="rgb(206,76,32)" rx="2" ry="2" />
<text  x="64.84" y="1951.5" ></text>
</g>
<g >
<title>find_exception (1 samples, 0.02%)</title><rect x="17.6" y="1621" width="0.2" height="15.0" fill="rgb(220,144,32)" rx="2" ry="2" />
<text  x="20.58" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="924.8" y="1925" width="0.4" height="15.0" fill="rgb(247,213,34)" rx="2" ry="2" />
<text  x="927.81" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="840.1" y="1893" width="0.2" height="15.0" fill="rgb(247,169,42)" rx="2" ry="2" />
<text  x="843.07" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="161.1" y="1733" width="0.2" height="15.0" fill="rgb(206,190,46)" rx="2" ry="2" />
<text  x="164.14" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (1 samples, 0.02%)</title><rect x="603.0" y="1973" width="0.2" height="15.0" fill="rgb(238,204,1)" rx="2" ry="2" />
<text  x="605.99" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1188.4" y="1877" width="0.8" height="15.0" fill="rgb(222,44,29)" rx="2" ry="2" />
<text  x="1191.40" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="160.3" y="1749" width="0.2" height="15.0" fill="rgb(239,41,2)" rx="2" ry="2" />
<text  x="163.34" y="1759.5" ></text>
</g>
<g >
<title>swiotlb_sync_single (1 samples, 0.02%)</title><rect x="264.4" y="1733" width="0.2" height="15.0" fill="rgb(228,147,40)" rx="2" ry="2" />
<text  x="267.42" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (2 samples, 0.03%)</title><rect x="165.1" y="2021" width="0.4" height="15.0" fill="rgb(233,31,12)" rx="2" ry="2" />
<text  x="168.13" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (244 samples, 4.12%)</title><rect x="533.4" y="2037" width="48.7" height="15.0" fill="rgb(209,73,32)" rx="2" ry="2" />
<text  x="536.40" y="2047.5" >face..</text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (25 samples, 0.42%)</title><rect x="98.1" y="2037" width="5.0" height="15.0" fill="rgb(254,45,32)" rx="2" ry="2" />
<text  x="101.13" y="2047.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1034.3" y="1941" width="0.2" height="15.0" fill="rgb(231,120,53)" rx="2" ry="2" />
<text  x="1037.28" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="1003.2" y="2005" width="0.2" height="15.0" fill="rgb(237,18,14)" rx="2" ry="2" />
<text  x="1006.17" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="310.3" y="1669" width="0.2" height="15.0" fill="rgb(223,3,43)" rx="2" ry="2" />
<text  x="313.28" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="914.2" y="2005" width="0.2" height="15.0" fill="rgb(248,187,24)" rx="2" ry="2" />
<text  x="917.24" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="246.9" y="1717" width="0.2" height="15.0" fill="rgb(224,43,54)" rx="2" ry="2" />
<text  x="249.88" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="576.9" y="1845" width="0.2" height="15.0" fill="rgb(228,20,19)" rx="2" ry="2" />
<text  x="579.87" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="542.0" y="1509" width="0.2" height="15.0" fill="rgb(253,107,21)" rx="2" ry="2" />
<text  x="544.98" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="118.7" y="165" width="0.2" height="15.0" fill="rgb(219,144,42)" rx="2" ry="2" />
<text  x="121.67" y="175.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="746.2" y="1525" width="0.2" height="15.0" fill="rgb(232,167,47)" rx="2" ry="2" />
<text  x="749.15" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="616.7" y="1893" width="0.2" height="15.0" fill="rgb(249,119,4)" rx="2" ry="2" />
<text  x="619.75" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.9" y="229" width="0.2" height="15.0" fill="rgb(219,12,41)" rx="2" ry="2" />
<text  x="121.87" y="239.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="102.7" y="1813" width="0.2" height="15.0" fill="rgb(239,199,21)" rx="2" ry="2" />
<text  x="105.72" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="857.2" y="1957" width="0.2" height="15.0" fill="rgb(240,117,51)" rx="2" ry="2" />
<text  x="860.22" y="1967.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="533.0" y="1877" width="0.2" height="15.0" fill="rgb(217,28,31)" rx="2" ry="2" />
<text  x="536.00" y="1887.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="779.1" y="1477" width="0.2" height="15.0" fill="rgb(236,115,48)" rx="2" ry="2" />
<text  x="782.05" y="1487.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="256.4" y="1845" width="0.2" height="15.0" fill="rgb(235,208,32)" rx="2" ry="2" />
<text  x="259.45" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="756.1" y="1669" width="0.2" height="15.0" fill="rgb(227,7,37)" rx="2" ry="2" />
<text  x="759.12" y="1679.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="584.8" y="1909" width="0.6" height="15.0" fill="rgb(222,163,38)" rx="2" ry="2" />
<text  x="587.85" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="246.9" y="1781" width="0.2" height="15.0" fill="rgb(234,1,53)" rx="2" ry="2" />
<text  x="249.88" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="665.2" y="1813" width="0.2" height="15.0" fill="rgb(207,90,28)" rx="2" ry="2" />
<text  x="668.20" y="1823.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="78.8" y="1925" width="0.2" height="15.0" fill="rgb(243,31,8)" rx="2" ry="2" />
<text  x="81.79" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="508.3" y="1893" width="0.2" height="15.0" fill="rgb(240,20,33)" rx="2" ry="2" />
<text  x="511.28" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="839.7" y="1909" width="0.2" height="15.0" fill="rgb(253,88,0)" rx="2" ry="2" />
<text  x="842.67" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="577.3" y="1733" width="0.2" height="15.0" fill="rgb(248,80,48)" rx="2" ry="2" />
<text  x="580.27" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="435.9" y="1957" width="0.2" height="15.0" fill="rgb(251,24,2)" rx="2" ry="2" />
<text  x="438.90" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="905.7" y="1989" width="3.0" height="15.0" fill="rgb(226,182,15)" rx="2" ry="2" />
<text  x="908.67" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="435.9" y="1749" width="0.2" height="15.0" fill="rgb(232,113,30)" rx="2" ry="2" />
<text  x="438.90" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="57.7" y="1957" width="0.2" height="15.0" fill="rgb(246,24,54)" rx="2" ry="2" />
<text  x="60.65" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.1" y="1829" width="0.2" height="15.0" fill="rgb(232,210,50)" rx="2" ry="2" />
<text  x="887.13" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="697.9" y="1957" width="0.2" height="15.0" fill="rgb(235,52,33)" rx="2" ry="2" />
<text  x="700.90" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="885.7" y="1861" width="0.2" height="15.0" fill="rgb(251,137,4)" rx="2" ry="2" />
<text  x="888.73" y="1871.5" ></text>
</g>
<g >
<title>____fput (524 samples, 8.85%)</title><rect x="727.4" y="1829" width="104.5" height="15.0" fill="rgb(249,135,17)" rx="2" ry="2" />
<text  x="730.41" y="1839.5" >____fput</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="274.0" y="1749" width="0.2" height="15.0" fill="rgb(214,49,35)" rx="2" ry="2" />
<text  x="276.99" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="124.7" y="1701" width="0.1" height="15.0" fill="rgb(221,66,24)" rx="2" ry="2" />
<text  x="127.65" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="215.4" y="1893" width="0.2" height="15.0" fill="rgb(207,192,14)" rx="2" ry="2" />
<text  x="218.37" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="522.0" y="1957" width="0.4" height="15.0" fill="rgb(251,140,31)" rx="2" ry="2" />
<text  x="525.04" y="1967.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="344.2" y="2037" width="0.2" height="15.0" fill="rgb(234,133,5)" rx="2" ry="2" />
<text  x="347.18" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1877" width="0.2" height="15.0" fill="rgb(235,213,42)" rx="2" ry="2" />
<text  x="148.39" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="104.7" y="1493" width="16.2" height="15.0" fill="rgb(214,137,7)" rx="2" ry="2" />
<text  x="107.71" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="97.9" y="1845" width="0.2" height="15.0" fill="rgb(227,70,30)" rx="2" ry="2" />
<text  x="100.93" y="1855.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="743.8" y="1701" width="0.8" height="15.0" fill="rgb(237,129,45)" rx="2" ry="2" />
<text  x="746.76" y="1711.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (3 samples, 0.05%)</title><rect x="199.0" y="2037" width="0.6" height="15.0" fill="rgb(216,226,54)" rx="2" ry="2" />
<text  x="202.02" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="126.0" y="1973" width="0.2" height="15.0" fill="rgb(224,153,31)" rx="2" ry="2" />
<text  x="129.05" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="362.1" y="1941" width="0.2" height="15.0" fill="rgb(217,0,22)" rx="2" ry="2" />
<text  x="365.13" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="562.1" y="1909" width="0.2" height="15.0" fill="rgb(246,64,15)" rx="2" ry="2" />
<text  x="565.12" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1119.8" y="1829" width="0.2" height="15.0" fill="rgb(248,175,8)" rx="2" ry="2" />
<text  x="1122.81" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1178.2" y="2005" width="0.2" height="15.0" fill="rgb(234,13,54)" rx="2" ry="2" />
<text  x="1181.24" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="602.8" y="1893" width="0.2" height="15.0" fill="rgb(232,207,30)" rx="2" ry="2" />
<text  x="605.79" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="277" width="13.8" height="15.0" fill="rgb(206,205,49)" rx="2" ry="2" />
<text  x="108.11" y="287.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="372.1" y="1781" width="0.2" height="15.0" fill="rgb(243,145,29)" rx="2" ry="2" />
<text  x="375.10" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="32.3" y="1973" width="0.2" height="15.0" fill="rgb(237,39,52)" rx="2" ry="2" />
<text  x="35.33" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="885.7" y="1813" width="0.2" height="15.0" fill="rgb(216,57,34)" rx="2" ry="2" />
<text  x="888.73" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (7 samples, 0.12%)</title><rect x="75.4" y="1957" width="1.4" height="15.0" fill="rgb(226,95,6)" rx="2" ry="2" />
<text  x="78.40" y="1967.5" ></text>
</g>
<g >
<title>__libc_sendmsg (3 samples, 0.05%)</title><rect x="883.7" y="1909" width="0.6" height="15.0" fill="rgb(218,226,24)" rx="2" ry="2" />
<text  x="886.73" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="561.3" y="1909" width="0.8" height="15.0" fill="rgb(242,137,21)" rx="2" ry="2" />
<text  x="564.32" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="255.1" y="1893" width="0.6" height="15.0" fill="rgb(216,6,29)" rx="2" ry="2" />
<text  x="258.05" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="836.7" y="1813" width="0.2" height="15.0" fill="rgb(249,226,19)" rx="2" ry="2" />
<text  x="839.68" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.0" y="1749" width="0.2" height="15.0" fill="rgb(230,110,51)" rx="2" ry="2" />
<text  x="159.95" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1121.4" y="1941" width="0.4" height="15.0" fill="rgb(227,35,30)" rx="2" ry="2" />
<text  x="1124.41" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (47 samples, 0.79%)</title><rect x="1101.9" y="1573" width="9.3" height="15.0" fill="rgb(215,73,21)" rx="2" ry="2" />
<text  x="1104.87" y="1583.5" ></text>
</g>
<g >
<title>tcp_ack (45 samples, 0.76%)</title><rect x="1102.3" y="1541" width="8.9" height="15.0" fill="rgb(206,184,30)" rx="2" ry="2" />
<text  x="1105.27" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="397.4" y="1765" width="0.4" height="15.0" fill="rgb(229,192,38)" rx="2" ry="2" />
<text  x="400.42" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="866.6" y="1877" width="0.2" height="15.0" fill="rgb(243,14,52)" rx="2" ry="2" />
<text  x="869.59" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="1003.8" y="1845" width="0.2" height="15.0" fill="rgb(235,89,48)" rx="2" ry="2" />
<text  x="1006.77" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="599.8" y="1781" width="0.4" height="15.0" fill="rgb(250,159,36)" rx="2" ry="2" />
<text  x="602.80" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (6 samples, 0.10%)</title><rect x="897.9" y="2005" width="1.2" height="15.0" fill="rgb(205,59,16)" rx="2" ry="2" />
<text  x="900.89" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="955.9" y="1989" width="0.4" height="15.0" fill="rgb(205,214,36)" rx="2" ry="2" />
<text  x="958.91" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (52 samples, 0.88%)</title><rect x="1101.5" y="1797" width="10.3" height="15.0" fill="rgb(229,62,51)" rx="2" ry="2" />
<text  x="1104.47" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="856.2" y="1765" width="0.2" height="15.0" fill="rgb(206,72,18)" rx="2" ry="2" />
<text  x="859.22" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (48 samples, 0.81%)</title><rect x="1101.7" y="1637" width="9.5" height="15.0" fill="rgb(222,146,1)" rx="2" ry="2" />
<text  x="1104.67" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="462.4" y="1909" width="0.2" height="15.0" fill="rgb(225,205,13)" rx="2" ry="2" />
<text  x="465.42" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="256.4" y="1733" width="0.2" height="15.0" fill="rgb(241,158,6)" rx="2" ry="2" />
<text  x="259.45" y="1743.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="62.8" y="1909" width="0.4" height="15.0" fill="rgb(206,211,54)" rx="2" ry="2" />
<text  x="65.84" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="102.9" y="1989" width="0.2" height="15.0" fill="rgb(221,199,41)" rx="2" ry="2" />
<text  x="105.92" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (445 samples, 7.52%)</title><rect x="103.7" y="2037" width="88.7" height="15.0" fill="rgb(235,80,52)" rx="2" ry="2" />
<text  x="106.71" y="2047.5" >[unknown]</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (28 samples, 0.47%)</title><rect x="11.2" y="1845" width="5.6" height="15.0" fill="rgb(226,197,40)" rx="2" ry="2" />
<text  x="14.20" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="782.2" y="1413" width="0.2" height="15.0" fill="rgb(207,18,35)" rx="2" ry="2" />
<text  x="785.24" y="1423.5" ></text>
</g>
<g >
<title>add_wait_queue (3 samples, 0.05%)</title><rect x="459.6" y="1909" width="0.6" height="15.0" fill="rgb(233,29,23)" rx="2" ry="2" />
<text  x="462.63" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="386.9" y="1861" width="0.1" height="15.0" fill="rgb(250,117,52)" rx="2" ry="2" />
<text  x="389.85" y="1871.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="118.9" y="53" width="0.2" height="15.0" fill="rgb(231,180,4)" rx="2" ry="2" />
<text  x="121.87" y="63.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="498.1" y="1893" width="0.2" height="15.0" fill="rgb(206,54,33)" rx="2" ry="2" />
<text  x="501.11" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="453.0" y="1701" width="0.2" height="15.0" fill="rgb(205,187,23)" rx="2" ry="2" />
<text  x="456.05" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="678.8" y="1973" width="0.2" height="15.0" fill="rgb(227,226,51)" rx="2" ry="2" />
<text  x="681.76" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="914.2" y="1989" width="0.2" height="15.0" fill="rgb(210,36,52)" rx="2" ry="2" />
<text  x="917.24" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="505.5" y="1701" width="0.2" height="15.0" fill="rgb(210,2,6)" rx="2" ry="2" />
<text  x="508.49" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="481.2" y="1701" width="0.2" height="15.0" fill="rgb(221,56,16)" rx="2" ry="2" />
<text  x="484.16" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="498.5" y="1893" width="0.2" height="15.0" fill="rgb(225,7,19)" rx="2" ry="2" />
<text  x="501.51" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1170.9" y="1973" width="0.2" height="15.0" fill="rgb(209,64,3)" rx="2" ry="2" />
<text  x="1173.86" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (11 samples, 0.19%)</title><rect x="849.8" y="1925" width="2.2" height="15.0" fill="rgb(234,51,51)" rx="2" ry="2" />
<text  x="852.84" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="704.5" y="1685" width="0.2" height="15.0" fill="rgb(233,35,12)" rx="2" ry="2" />
<text  x="707.48" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="17.6" y="1685" width="0.2" height="15.0" fill="rgb(228,180,5)" rx="2" ry="2" />
<text  x="20.58" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="213.2" y="1957" width="0.2" height="15.0" fill="rgb(227,155,31)" rx="2" ry="2" />
<text  x="216.18" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="640.5" y="1637" width="0.2" height="15.0" fill="rgb(224,195,17)" rx="2" ry="2" />
<text  x="643.48" y="1647.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="32.5" y="1973" width="0.2" height="15.0" fill="rgb(217,53,18)" rx="2" ry="2" />
<text  x="35.53" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="411.8" y="2021" width="0.2" height="15.0" fill="rgb(237,215,31)" rx="2" ry="2" />
<text  x="414.77" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="526.0" y="1925" width="0.2" height="15.0" fill="rgb(211,147,41)" rx="2" ry="2" />
<text  x="529.03" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="817.5" y="1477" width="0.2" height="15.0" fill="rgb(228,28,41)" rx="2" ry="2" />
<text  x="820.54" y="1487.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (15 samples, 0.25%)</title><rect x="882.1" y="1941" width="3.0" height="15.0" fill="rgb(233,184,24)" rx="2" ry="2" />
<text  x="885.14" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="105.5" y="37" width="0.2" height="15.0" fill="rgb(236,55,0)" rx="2" ry="2" />
<text  x="108.51" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="547.2" y="1877" width="0.2" height="15.0" fill="rgb(251,14,43)" rx="2" ry="2" />
<text  x="550.16" y="1887.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="149.8" y="1653" width="0.2" height="15.0" fill="rgb(205,216,7)" rx="2" ry="2" />
<text  x="152.77" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="545.6" y="1877" width="0.6" height="15.0" fill="rgb(222,200,0)" rx="2" ry="2" />
<text  x="548.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (815 samples, 13.77%)</title><rect x="707.1" y="2005" width="162.5" height="15.0" fill="rgb(226,155,22)" rx="2" ry="2" />
<text  x="710.07" y="2015.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1001.0" y="1973" width="0.2" height="15.0" fill="rgb(220,191,7)" rx="2" ry="2" />
<text  x="1003.98" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (93 samples, 1.57%)</title><rect x="142.6" y="1957" width="18.5" height="15.0" fill="rgb(253,92,52)" rx="2" ry="2" />
<text  x="145.60" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1164.7" y="2021" width="0.6" height="15.0" fill="rgb(242,215,0)" rx="2" ry="2" />
<text  x="1167.68" y="2031.5" ></text>
</g>
<g >
<title>close@plt (1 samples, 0.02%)</title><rect x="838.9" y="1909" width="0.2" height="15.0" fill="rgb(245,23,52)" rx="2" ry="2" />
<text  x="841.87" y="1919.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="892.1" y="1717" width="0.2" height="15.0" fill="rgb(222,47,20)" rx="2" ry="2" />
<text  x="895.11" y="1727.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="297.5" y="1669" width="0.4" height="15.0" fill="rgb(219,188,15)" rx="2" ry="2" />
<text  x="300.52" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="972.7" y="1813" width="0.2" height="15.0" fill="rgb(228,123,54)" rx="2" ry="2" />
<text  x="975.66" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="397.4" y="1717" width="0.4" height="15.0" fill="rgb(216,99,52)" rx="2" ry="2" />
<text  x="400.42" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="615.8" y="1637" width="0.2" height="15.0" fill="rgb(205,202,47)" rx="2" ry="2" />
<text  x="618.75" y="1647.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1000.2" y="1925" width="0.2" height="15.0" fill="rgb(209,162,37)" rx="2" ry="2" />
<text  x="1003.18" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="483.0" y="1717" width="0.2" height="15.0" fill="rgb(242,110,34)" rx="2" ry="2" />
<text  x="485.96" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="333.0" y="1829" width="0.2" height="15.0" fill="rgb(228,135,44)" rx="2" ry="2" />
<text  x="336.01" y="1839.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="623.7" y="2005" width="0.4" height="15.0" fill="rgb(226,209,27)" rx="2" ry="2" />
<text  x="626.73" y="2015.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="412.2" y="1781" width="0.2" height="15.0" fill="rgb(230,38,37)" rx="2" ry="2" />
<text  x="415.17" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="55.9" y="1877" width="0.2" height="15.0" fill="rgb(220,195,32)" rx="2" ry="2" />
<text  x="58.86" y="1887.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="868.0" y="1989" width="0.8" height="15.0" fill="rgb(227,117,23)" rx="2" ry="2" />
<text  x="870.98" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext (12 samples, 0.20%)</title><rect x="994.2" y="2005" width="2.4" height="15.0" fill="rgb(238,116,27)" rx="2" ry="2" />
<text  x="997.20" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="58.9" y="1893" width="0.2" height="15.0" fill="rgb(222,20,46)" rx="2" ry="2" />
<text  x="61.85" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="858.6" y="1813" width="0.2" height="15.0" fill="rgb(251,152,51)" rx="2" ry="2" />
<text  x="861.61" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="93.3" y="1957" width="0.4" height="15.0" fill="rgb(213,201,42)" rx="2" ry="2" />
<text  x="96.35" y="1967.5" ></text>
</g>
<g >
<title>tcp_poll (28 samples, 0.47%)</title><rect x="457.0" y="1941" width="5.6" height="15.0" fill="rgb(221,110,19)" rx="2" ry="2" />
<text  x="460.04" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1157.5" y="1813" width="0.2" height="15.0" fill="rgb(211,16,1)" rx="2" ry="2" />
<text  x="1160.50" y="1823.5" ></text>
</g>
<g >
<title>ip_queue_xmit (52 samples, 0.88%)</title><rect x="1101.5" y="1861" width="10.3" height="15.0" fill="rgb(242,185,33)" rx="2" ry="2" />
<text  x="1104.47" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="900.5" y="2021" width="0.4" height="15.0" fill="rgb(229,14,11)" rx="2" ry="2" />
<text  x="903.48" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="637.5" y="1925" width="0.4" height="15.0" fill="rgb(225,15,44)" rx="2" ry="2" />
<text  x="640.49" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="462.4" y="1525" width="0.2" height="15.0" fill="rgb(235,179,4)" rx="2" ry="2" />
<text  x="465.42" y="1535.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="481.0" y="1653" width="0.2" height="15.0" fill="rgb(224,64,17)" rx="2" ry="2" />
<text  x="483.96" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="142.4" y="1909" width="0.2" height="15.0" fill="rgb(242,92,36)" rx="2" ry="2" />
<text  x="145.40" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="858.6" y="1781" width="0.2" height="15.0" fill="rgb(230,208,47)" rx="2" ry="2" />
<text  x="861.61" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="231.3" y="1909" width="0.2" height="15.0" fill="rgb(226,84,25)" rx="2" ry="2" />
<text  x="234.32" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (6 samples, 0.10%)</title><rect x="639.5" y="1925" width="1.2" height="15.0" fill="rgb(240,116,29)" rx="2" ry="2" />
<text  x="642.48" y="1935.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1130.0" y="1973" width="0.2" height="15.0" fill="rgb(212,10,19)" rx="2" ry="2" />
<text  x="1132.98" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66 samples, 1.12%)</title><rect x="586.6" y="1925" width="13.2" height="15.0" fill="rgb(213,76,22)" rx="2" ry="2" />
<text  x="589.64" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="149.8" y="1781" width="0.2" height="15.0" fill="rgb(217,126,3)" rx="2" ry="2" />
<text  x="152.77" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="78.4" y="1893" width="0.2" height="15.0" fill="rgb(249,65,4)" rx="2" ry="2" />
<text  x="81.39" y="1903.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (4 samples, 0.07%)</title><rect x="742.4" y="1701" width="0.8" height="15.0" fill="rgb(230,122,19)" rx="2" ry="2" />
<text  x="745.37" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="599.8" y="1893" width="0.4" height="15.0" fill="rgb(239,2,43)" rx="2" ry="2" />
<text  x="602.80" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="563.3" y="1941" width="0.6" height="15.0" fill="rgb(206,130,11)" rx="2" ry="2" />
<text  x="566.31" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="675.4" y="1669" width="0.2" height="15.0" fill="rgb(240,208,52)" rx="2" ry="2" />
<text  x="678.37" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="293" width="14.0" height="15.0" fill="rgb(247,89,35)" rx="2" ry="2" />
<text  x="108.11" y="303.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="412.0" y="1989" width="0.4" height="15.0" fill="rgb(205,119,22)" rx="2" ry="2" />
<text  x="414.97" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (1 samples, 0.02%)</title><rect x="524.2" y="1989" width="0.2" height="15.0" fill="rgb(214,144,8)" rx="2" ry="2" />
<text  x="527.23" y="1999.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="992.2" y="1989" width="0.2" height="15.0" fill="rgb(217,37,10)" rx="2" ry="2" />
<text  x="995.20" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="828.3" y="1621" width="0.2" height="15.0" fill="rgb(218,127,12)" rx="2" ry="2" />
<text  x="831.30" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="104.5" y="1797" width="19.4" height="15.0" fill="rgb(221,225,33)" rx="2" ry="2" />
<text  x="107.51" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="890.9" y="1877" width="0.4" height="15.0" fill="rgb(248,81,9)" rx="2" ry="2" />
<text  x="893.91" y="1887.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (22 samples, 0.37%)</title><rect x="811.4" y="1669" width="4.3" height="15.0" fill="rgb(232,116,48)" rx="2" ry="2" />
<text  x="814.36" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="213" width="13.8" height="15.0" fill="rgb(219,135,24)" rx="2" ry="2" />
<text  x="108.11" y="223.5" ></text>
</g>
<g >
<title>__libc_fcntl (5 samples, 0.08%)</title><rect x="1165.3" y="2037" width="1.0" height="15.0" fill="rgb(230,227,45)" rx="2" ry="2" />
<text  x="1168.28" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="397.4" y="1877" width="0.4" height="15.0" fill="rgb(217,52,28)" rx="2" ry="2" />
<text  x="400.42" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="907.1" y="1861" width="0.2" height="15.0" fill="rgb(231,224,51)" rx="2" ry="2" />
<text  x="910.06" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="372.1" y="1605" width="0.2" height="15.0" fill="rgb(243,12,24)" rx="2" ry="2" />
<text  x="375.10" y="1615.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="1135.4" y="2021" width="0.2" height="15.0" fill="rgb(227,19,25)" rx="2" ry="2" />
<text  x="1138.37" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="91.2" y="1973" width="2.5" height="15.0" fill="rgb(212,160,31)" rx="2" ry="2" />
<text  x="94.15" y="1983.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="675.2" y="1621" width="0.2" height="15.0" fill="rgb(240,59,40)" rx="2" ry="2" />
<text  x="678.17" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="225.9" y="1845" width="0.2" height="15.0" fill="rgb(219,221,51)" rx="2" ry="2" />
<text  x="228.94" y="1855.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="124.7" y="1541" width="0.1" height="15.0" fill="rgb(253,122,44)" rx="2" ry="2" />
<text  x="127.65" y="1551.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="542.0" y="1605" width="0.2" height="15.0" fill="rgb(210,39,49)" rx="2" ry="2" />
<text  x="544.98" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (1 samples, 0.02%)</title><rect x="858.0" y="1957" width="0.2" height="15.0" fill="rgb(228,143,48)" rx="2" ry="2" />
<text  x="861.01" y="1967.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="481.4" y="1973" width="0.2" height="15.0" fill="rgb(233,45,48)" rx="2" ry="2" />
<text  x="484.36" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="160.9" y="1941" width="0.2" height="15.0" fill="rgb(238,35,11)" rx="2" ry="2" />
<text  x="163.94" y="1951.5" ></text>
</g>
<g >
<title>__alloc_fd (6 samples, 0.10%)</title><rect x="359.9" y="1941" width="1.2" height="15.0" fill="rgb(211,103,11)" rx="2" ry="2" />
<text  x="362.93" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (10 samples, 0.17%)</title><rect x="869.8" y="2005" width="2.0" height="15.0" fill="rgb(214,161,1)" rx="2" ry="2" />
<text  x="872.78" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1178.0" y="1797" width="0.2" height="15.0" fill="rgb(214,193,30)" rx="2" ry="2" />
<text  x="1181.04" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="231.3" y="1941" width="0.2" height="15.0" fill="rgb(223,205,11)" rx="2" ry="2" />
<text  x="234.32" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="779.1" y="1509" width="0.2" height="15.0" fill="rgb(240,152,29)" rx="2" ry="2" />
<text  x="782.05" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1158.3" y="1653" width="0.2" height="15.0" fill="rgb(232,166,49)" rx="2" ry="2" />
<text  x="1161.30" y="1663.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="160.5" y="1925" width="0.2" height="15.0" fill="rgb(233,43,31)" rx="2" ry="2" />
<text  x="163.54" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="847.4" y="1893" width="0.4" height="15.0" fill="rgb(239,103,30)" rx="2" ry="2" />
<text  x="850.45" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (52 samples, 0.88%)</title><rect x="928.2" y="1957" width="10.4" height="15.0" fill="rgb(235,223,34)" rx="2" ry="2" />
<text  x="931.20" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="230.1" y="1941" width="0.4" height="15.0" fill="rgb(247,8,33)" rx="2" ry="2" />
<text  x="233.13" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (1 samples, 0.02%)</title><rect x="857.4" y="1957" width="0.2" height="15.0" fill="rgb(253,10,2)" rx="2" ry="2" />
<text  x="860.41" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="152.4" y="1909" width="0.2" height="15.0" fill="rgb(215,73,10)" rx="2" ry="2" />
<text  x="155.37" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="76.4" y="1813" width="0.2" height="15.0" fill="rgb(246,8,29)" rx="2" ry="2" />
<text  x="79.40" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="67.2" y="1877" width="0.2" height="15.0" fill="rgb(220,87,3)" rx="2" ry="2" />
<text  x="70.23" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="124.7" y="1605" width="0.1" height="15.0" fill="rgb(238,175,14)" rx="2" ry="2" />
<text  x="127.65" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="38.5" y="1925" width="0.2" height="15.0" fill="rgb(250,210,27)" rx="2" ry="2" />
<text  x="41.51" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="225.5" y="1797" width="0.4" height="15.0" fill="rgb(240,121,51)" rx="2" ry="2" />
<text  x="228.54" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.5" y="1941" width="0.2" height="15.0" fill="rgb(212,104,49)" rx="2" ry="2" />
<text  x="576.48" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="534.2" y="1861" width="0.2" height="15.0" fill="rgb(250,3,16)" rx="2" ry="2" />
<text  x="537.20" y="1871.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="327.4" y="1829" width="0.2" height="15.0" fill="rgb(246,98,18)" rx="2" ry="2" />
<text  x="330.43" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="881.5" y="1941" width="0.6" height="15.0" fill="rgb(254,77,31)" rx="2" ry="2" />
<text  x="884.54" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="952.1" y="2005" width="0.2" height="15.0" fill="rgb(234,209,20)" rx="2" ry="2" />
<text  x="955.13" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="678.6" y="2005" width="0.4" height="15.0" fill="rgb(217,81,14)" rx="2" ry="2" />
<text  x="681.56" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="665.2" y="1829" width="0.2" height="15.0" fill="rgb(210,165,10)" rx="2" ry="2" />
<text  x="668.20" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.4" y="1845" width="0.2" height="15.0" fill="rgb(237,44,20)" rx="2" ry="2" />
<text  x="854.43" y="1855.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="546.4" y="1781" width="0.8" height="15.0" fill="rgb(254,54,13)" rx="2" ry="2" />
<text  x="549.36" y="1791.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="283.2" y="1813" width="0.2" height="15.0" fill="rgb(211,190,38)" rx="2" ry="2" />
<text  x="286.17" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="622.5" y="2005" width="0.2" height="15.0" fill="rgb(253,108,54)" rx="2" ry="2" />
<text  x="625.53" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="770.9" y="1685" width="0.2" height="15.0" fill="rgb(237,200,40)" rx="2" ry="2" />
<text  x="773.88" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="541.2" y="1893" width="0.2" height="15.0" fill="rgb(223,221,52)" rx="2" ry="2" />
<text  x="544.18" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="63.4" y="1941" width="0.8" height="15.0" fill="rgb(206,189,54)" rx="2" ry="2" />
<text  x="66.44" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="611.4" y="1621" width="0.2" height="15.0" fill="rgb(218,221,11)" rx="2" ry="2" />
<text  x="614.37" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="117.3" y="37" width="0.2" height="15.0" fill="rgb(250,179,35)" rx="2" ry="2" />
<text  x="120.27" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="118.9" y="261" width="0.2" height="15.0" fill="rgb(208,177,50)" rx="2" ry="2" />
<text  x="121.87" y="271.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="57.5" y="1925" width="0.2" height="15.0" fill="rgb(223,89,4)" rx="2" ry="2" />
<text  x="60.46" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="246.9" y="1893" width="0.2" height="15.0" fill="rgb(210,44,46)" rx="2" ry="2" />
<text  x="249.88" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="69.6" y="1941" width="0.2" height="15.0" fill="rgb(210,56,7)" rx="2" ry="2" />
<text  x="72.62" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (1 samples, 0.02%)</title><rect x="71.0" y="1973" width="0.2" height="15.0" fill="rgb(251,55,23)" rx="2" ry="2" />
<text  x="74.01" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="595.2" y="1797" width="0.2" height="15.0" fill="rgb(225,129,37)" rx="2" ry="2" />
<text  x="598.21" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="337.2" y="1877" width="0.2" height="15.0" fill="rgb(227,212,52)" rx="2" ry="2" />
<text  x="340.20" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="627.5" y="1989" width="0.2" height="15.0" fill="rgb(238,178,1)" rx="2" ry="2" />
<text  x="630.52" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="203.8" y="2021" width="0.2" height="15.0" fill="rgb(234,0,43)" rx="2" ry="2" />
<text  x="206.81" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1001.6" y="1973" width="0.2" height="15.0" fill="rgb(226,208,24)" rx="2" ry="2" />
<text  x="1004.57" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (595 samples, 10.05%)</title><rect x="718.0" y="1893" width="118.7" height="15.0" fill="rgb(231,16,34)" rx="2" ry="2" />
<text  x="721.04" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="801.6" y="1525" width="0.4" height="15.0" fill="rgb(219,45,7)" rx="2" ry="2" />
<text  x="804.58" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="246.9" y="1925" width="0.2" height="15.0" fill="rgb(242,147,30)" rx="2" ry="2" />
<text  x="249.88" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1007.2" y="2005" width="0.2" height="15.0" fill="rgb(210,215,27)" rx="2" ry="2" />
<text  x="1010.16" y="2015.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="247.1" y="1685" width="0.2" height="15.0" fill="rgb(222,12,33)" rx="2" ry="2" />
<text  x="250.08" y="1695.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="310.5" y="1797" width="0.4" height="15.0" fill="rgb(249,68,31)" rx="2" ry="2" />
<text  x="313.48" y="1807.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1081.3" y="1925" width="0.4" height="15.0" fill="rgb(222,179,23)" rx="2" ry="2" />
<text  x="1084.33" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="615.8" y="1845" width="0.2" height="15.0" fill="rgb(252,150,2)" rx="2" ry="2" />
<text  x="618.75" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="247.1" y="1877" width="0.2" height="15.0" fill="rgb(248,114,7)" rx="2" ry="2" />
<text  x="250.08" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="541.6" y="1893" width="0.2" height="15.0" fill="rgb(247,60,52)" rx="2" ry="2" />
<text  x="544.58" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (115 samples, 1.94%)</title><rect x="209.0" y="2005" width="22.9" height="15.0" fill="rgb(228,145,2)" rx="2" ry="2" />
<text  x="211.99" y="2015.5" >f..</text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="604.8" y="1989" width="0.2" height="15.0" fill="rgb(221,201,54)" rx="2" ry="2" />
<text  x="607.79" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="891.7" y="1877" width="0.6" height="15.0" fill="rgb(211,10,42)" rx="2" ry="2" />
<text  x="894.71" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (539 samples, 9.11%)</title><rect x="724.8" y="1861" width="107.5" height="15.0" fill="rgb(213,19,21)" rx="2" ry="2" />
<text  x="727.82" y="1871.5" >exit_to_userm..</text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="219.0" y="1877" width="0.8" height="15.0" fill="rgb(244,218,35)" rx="2" ry="2" />
<text  x="221.96" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="858.4" y="1861" width="0.2" height="15.0" fill="rgb(238,201,38)" rx="2" ry="2" />
<text  x="861.41" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="901" width="14.2" height="15.0" fill="rgb(229,154,21)" rx="2" ry="2" />
<text  x="108.11" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="156.8" y="1877" width="0.2" height="15.0" fill="rgb(233,140,28)" rx="2" ry="2" />
<text  x="159.75" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="310.3" y="1589" width="0.2" height="15.0" fill="rgb(246,104,31)" rx="2" ry="2" />
<text  x="313.28" y="1599.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.9" y="2005" width="0.2" height="15.0" fill="rgb(252,112,41)" rx="2" ry="2" />
<text  x="106.91" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="648.9" y="1829" width="0.2" height="15.0" fill="rgb(249,167,14)" rx="2" ry="2" />
<text  x="651.85" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="725" width="14.0" height="15.0" fill="rgb(220,32,35)" rx="2" ry="2" />
<text  x="108.11" y="735.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="32.1" y="1893" width="0.2" height="15.0" fill="rgb(219,79,39)" rx="2" ry="2" />
<text  x="35.13" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (28 samples, 0.47%)</title><rect x="942.0" y="1989" width="5.5" height="15.0" fill="rgb(229,120,36)" rx="2" ry="2" />
<text  x="944.96" y="1999.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="498.5" y="1797" width="0.2" height="15.0" fill="rgb(220,121,36)" rx="2" ry="2" />
<text  x="501.51" y="1807.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1012.3" y="1957" width="0.2" height="15.0" fill="rgb(205,137,17)" rx="2" ry="2" />
<text  x="1015.34" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="704.5" y="1669" width="0.2" height="15.0" fill="rgb(239,206,48)" rx="2" ry="2" />
<text  x="707.48" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="372.1" y="1637" width="0.2" height="15.0" fill="rgb(245,80,49)" rx="2" ry="2" />
<text  x="375.10" y="1647.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1068.2" y="1893" width="0.2" height="15.0" fill="rgb(237,118,2)" rx="2" ry="2" />
<text  x="1071.17" y="1903.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (29 samples, 0.49%)</title><rect x="321.1" y="1797" width="5.7" height="15.0" fill="rgb(236,194,17)" rx="2" ry="2" />
<text  x="324.05" y="1807.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="324.2" y="1733" width="0.2" height="15.0" fill="rgb(243,71,39)" rx="2" ry="2" />
<text  x="327.24" y="1743.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="97.9" y="1765" width="0.2" height="15.0" fill="rgb(246,41,21)" rx="2" ry="2" />
<text  x="100.93" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1130.2" y="2005" width="0.4" height="15.0" fill="rgb(220,193,32)" rx="2" ry="2" />
<text  x="1133.18" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="158.7" y="1925" width="0.2" height="15.0" fill="rgb(242,33,22)" rx="2" ry="2" />
<text  x="161.75" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="144.8" y="1829" width="0.2" height="15.0" fill="rgb(229,83,23)" rx="2" ry="2" />
<text  x="147.79" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1019.3" y="1765" width="0.2" height="15.0" fill="rgb(235,47,6)" rx="2" ry="2" />
<text  x="1022.32" y="1775.5" ></text>
</g>
<g >
<title>folly::isSet (7 samples, 0.12%)</title><rect x="879.3" y="1909" width="1.4" height="15.0" fill="rgb(207,26,25)" rx="2" ry="2" />
<text  x="882.35" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="531.6" y="1877" width="0.2" height="15.0" fill="rgb(205,119,26)" rx="2" ry="2" />
<text  x="534.61" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (24 samples, 0.41%)</title><rect x="978.8" y="1989" width="4.8" height="15.0" fill="rgb(241,193,21)" rx="2" ry="2" />
<text  x="981.84" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="996.4" y="1813" width="0.2" height="15.0" fill="rgb(254,103,22)" rx="2" ry="2" />
<text  x="999.39" y="1823.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="498.5" y="1845" width="0.2" height="15.0" fill="rgb(209,216,36)" rx="2" ry="2" />
<text  x="501.51" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1081.7" y="1925" width="0.2" height="15.0" fill="rgb(214,211,18)" rx="2" ry="2" />
<text  x="1084.73" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="1026.9" y="2053" width="0.2" height="15.0" fill="rgb(254,84,29)" rx="2" ry="2" />
<text  x="1029.90" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.03%)</title><rect x="1145.5" y="1957" width="12.2" height="15.0" fill="rgb(251,105,7)" rx="2" ry="2" />
<text  x="1148.54" y="1967.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="801.4" y="1493" width="0.2" height="15.0" fill="rgb(209,211,5)" rx="2" ry="2" />
<text  x="804.39" y="1503.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="281.4" y="1829" width="0.2" height="15.0" fill="rgb(215,24,37)" rx="2" ry="2" />
<text  x="284.37" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="626.7" y="1989" width="0.2" height="15.0" fill="rgb(214,42,11)" rx="2" ry="2" />
<text  x="629.72" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1008.8" y="1797" width="0.2" height="15.0" fill="rgb(235,147,5)" rx="2" ry="2" />
<text  x="1011.75" y="1807.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (5 samples, 0.08%)</title><rect x="728.4" y="1797" width="1.0" height="15.0" fill="rgb(215,0,22)" rx="2" ry="2" />
<text  x="731.41" y="1807.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="664.4" y="1893" width="0.2" height="15.0" fill="rgb(215,23,14)" rx="2" ry="2" />
<text  x="667.40" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (31 samples, 0.52%)</title><rect x="628.3" y="2021" width="6.2" height="15.0" fill="rgb(223,149,50)" rx="2" ry="2" />
<text  x="631.31" y="2031.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (4 samples, 0.07%)</title><rect x="344.6" y="2037" width="0.8" height="15.0" fill="rgb(237,198,29)" rx="2" ry="2" />
<text  x="347.58" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.9" y="1861" width="0.2" height="15.0" fill="rgb(209,43,35)" rx="2" ry="2" />
<text  x="160.95" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="104.7" y="1317" width="15.6" height="15.0" fill="rgb(251,28,5)" rx="2" ry="2" />
<text  x="107.71" y="1327.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="542.0" y="1573" width="0.2" height="15.0" fill="rgb(220,93,5)" rx="2" ry="2" />
<text  x="544.98" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="157.0" y="1877" width="0.2" height="15.0" fill="rgb(250,87,40)" rx="2" ry="2" />
<text  x="159.95" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="224.1" y="1605" width="0.2" height="15.0" fill="rgb(213,169,7)" rx="2" ry="2" />
<text  x="227.15" y="1615.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="400.8" y="1893" width="0.8" height="15.0" fill="rgb(208,219,12)" rx="2" ry="2" />
<text  x="403.81" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1845" width="0.2" height="15.0" fill="rgb(214,173,27)" rx="2" ry="2" />
<text  x="148.39" y="1855.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="627.7" y="1989" width="0.2" height="15.0" fill="rgb(252,89,12)" rx="2" ry="2" />
<text  x="630.72" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.3" y="1829" width="20.4" height="15.0" fill="rgb(233,105,49)" rx="2" ry="2" />
<text  x="107.31" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="529.4" y="1957" width="0.2" height="15.0" fill="rgb(221,61,20)" rx="2" ry="2" />
<text  x="532.42" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="644.9" y="1813" width="0.2" height="15.0" fill="rgb(241,43,38)" rx="2" ry="2" />
<text  x="647.86" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="902.5" y="2005" width="0.2" height="15.0" fill="rgb(212,75,37)" rx="2" ry="2" />
<text  x="905.48" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (6 samples, 0.10%)</title><rect x="858.8" y="1989" width="1.2" height="15.0" fill="rgb(251,158,49)" rx="2" ry="2" />
<text  x="861.81" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="397.4" y="1829" width="0.4" height="15.0" fill="rgb(239,152,15)" rx="2" ry="2" />
<text  x="400.42" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1157.7" y="1925" width="0.2" height="15.0" fill="rgb(208,36,27)" rx="2" ry="2" />
<text  x="1160.70" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (6 samples, 0.10%)</title><rect x="291.9" y="1605" width="1.2" height="15.0" fill="rgb(243,66,17)" rx="2" ry="2" />
<text  x="294.94" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="906.5" y="1973" width="0.2" height="15.0" fill="rgb(209,25,18)" rx="2" ry="2" />
<text  x="909.47" y="1983.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="332.8" y="1845" width="0.2" height="15.0" fill="rgb(230,196,17)" rx="2" ry="2" />
<text  x="335.82" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="615.8" y="1541" width="0.2" height="15.0" fill="rgb(209,50,35)" rx="2" ry="2" />
<text  x="618.75" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="572.5" y="1989" width="0.2" height="15.0" fill="rgb(221,214,33)" rx="2" ry="2" />
<text  x="575.48" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="371.9" y="1909" width="0.4" height="15.0" fill="rgb(217,166,14)" rx="2" ry="2" />
<text  x="374.90" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="337.2" y="1829" width="0.2" height="15.0" fill="rgb(223,135,7)" rx="2" ry="2" />
<text  x="340.20" y="1839.5" ></text>
</g>
<g >
<title>sys_getsockname (1 samples, 0.02%)</title><rect x="599.6" y="1909" width="0.2" height="15.0" fill="rgb(216,209,22)" rx="2" ry="2" />
<text  x="602.60" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="528.4" y="1829" width="0.2" height="15.0" fill="rgb(245,180,25)" rx="2" ry="2" />
<text  x="531.42" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="453.0" y="1909" width="0.2" height="15.0" fill="rgb(224,206,12)" rx="2" ry="2" />
<text  x="456.05" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1012.7" y="1605" width="0.2" height="15.0" fill="rgb(251,27,24)" rx="2" ry="2" />
<text  x="1015.74" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="565" width="14.0" height="15.0" fill="rgb(230,65,19)" rx="2" ry="2" />
<text  x="108.11" y="575.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="482.6" y="1765" width="0.2" height="15.0" fill="rgb(227,142,45)" rx="2" ry="2" />
<text  x="485.56" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="648.9" y="1813" width="0.2" height="15.0" fill="rgb(220,123,3)" rx="2" ry="2" />
<text  x="651.85" y="1823.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1129.0" y="2053" width="0.2" height="15.0" fill="rgb(212,18,32)" rx="2" ry="2" />
<text  x="1131.99" y="2063.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="857.6" y="1957" width="0.4" height="15.0" fill="rgb(228,11,13)" rx="2" ry="2" />
<text  x="860.61" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1157.7" y="1893" width="0.2" height="15.0" fill="rgb(220,191,27)" rx="2" ry="2" />
<text  x="1160.70" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="104.7" y="1653" width="17.6" height="15.0" fill="rgb(243,126,47)" rx="2" ry="2" />
<text  x="107.71" y="1663.5" ></text>
</g>
<g >
<title>expand_files (1 samples, 0.02%)</title><rect x="361.1" y="1941" width="0.2" height="15.0" fill="rgb(236,102,43)" rx="2" ry="2" />
<text  x="364.13" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="247.1" y="1829" width="0.2" height="15.0" fill="rgb(212,131,12)" rx="2" ry="2" />
<text  x="250.08" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="625.3" y="1973" width="0.4" height="15.0" fill="rgb(220,101,40)" rx="2" ry="2" />
<text  x="628.32" y="1983.5" ></text>
</g>
<g >
<title>inet_sk_rebuild_header (1 samples, 0.02%)</title><rect x="665.2" y="1605" width="0.2" height="15.0" fill="rgb(207,212,39)" rx="2" ry="2" />
<text  x="668.20" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="969.3" y="1973" width="0.2" height="15.0" fill="rgb(205,188,54)" rx="2" ry="2" />
<text  x="972.27" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="278.4" y="1861" width="0.2" height="15.0" fill="rgb(243,72,10)" rx="2" ry="2" />
<text  x="281.38" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1121.4" y="1909" width="0.4" height="15.0" fill="rgb(214,181,38)" rx="2" ry="2" />
<text  x="1124.41" y="1919.5" ></text>
</g>
<g >
<title>__check_heap_object (3 samples, 0.05%)</title><rect x="264.0" y="1861" width="0.6" height="15.0" fill="rgb(236,8,10)" rx="2" ry="2" />
<text  x="267.03" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="563.3" y="1797" width="0.6" height="15.0" fill="rgb(237,227,37)" rx="2" ry="2" />
<text  x="566.31" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (198 samples, 3.35%)</title><rect x="582.1" y="2037" width="39.4" height="15.0" fill="rgb(213,140,6)" rx="2" ry="2" />
<text  x="585.05" y="2047.5" >fac..</text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="892.1" y="1685" width="0.2" height="15.0" fill="rgb(237,162,10)" rx="2" ry="2" />
<text  x="895.11" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="892.1" y="1829" width="0.2" height="15.0" fill="rgb(221,130,9)" rx="2" ry="2" />
<text  x="895.11" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="615.8" y="1701" width="0.2" height="15.0" fill="rgb(205,63,19)" rx="2" ry="2" />
<text  x="618.75" y="1711.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="246.1" y="1877" width="0.8" height="15.0" fill="rgb(242,3,48)" rx="2" ry="2" />
<text  x="249.08" y="1887.5" ></text>
</g>
<g >
<title>tcp_init_xmit_timers (1 samples, 0.02%)</title><rect x="256.4" y="1589" width="0.2" height="15.0" fill="rgb(225,166,48)" rx="2" ry="2" />
<text  x="259.45" y="1599.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="177.1" y="1925" width="0.2" height="15.0" fill="rgb(254,25,18)" rx="2" ry="2" />
<text  x="180.09" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="675.0" y="1829" width="0.6" height="15.0" fill="rgb(206,161,52)" rx="2" ry="2" />
<text  x="677.97" y="1839.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="386.7" y="1477" width="0.2" height="15.0" fill="rgb(211,178,0)" rx="2" ry="2" />
<text  x="389.65" y="1487.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="945.9" y="1973" width="0.8" height="15.0" fill="rgb(245,159,36)" rx="2" ry="2" />
<text  x="948.94" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="1157.9" y="1765" width="0.6" height="15.0" fill="rgb(242,159,51)" rx="2" ry="2" />
<text  x="1160.90" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="802.2" y="1573" width="0.2" height="15.0" fill="rgb(250,20,25)" rx="2" ry="2" />
<text  x="805.18" y="1583.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="662.4" y="1973" width="0.4" height="15.0" fill="rgb(237,86,9)" rx="2" ry="2" />
<text  x="665.41" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="599.8" y="1909" width="0.4" height="15.0" fill="rgb(226,100,7)" rx="2" ry="2" />
<text  x="602.80" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.3" y="1845" width="20.4" height="15.0" fill="rgb(241,217,4)" rx="2" ry="2" />
<text  x="107.31" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="858.4" y="1765" width="0.2" height="15.0" fill="rgb(226,81,38)" rx="2" ry="2" />
<text  x="861.41" y="1775.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="285.6" y="1781" width="0.4" height="15.0" fill="rgb(254,127,16)" rx="2" ry="2" />
<text  x="288.56" y="1791.5" ></text>
</g>
<g >
<title>ip_queue_xmit (136 samples, 2.30%)</title><rect x="283.8" y="1813" width="27.1" height="15.0" fill="rgb(220,188,43)" rx="2" ry="2" />
<text  x="286.76" y="1823.5" >i..</text>
</g>
<g >
<title>skb_free_head (24 samples, 0.41%)</title><rect x="1071.0" y="1877" width="4.7" height="15.0" fill="rgb(244,138,21)" rx="2" ry="2" />
<text  x="1073.96" y="1887.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1019.1" y="2037" width="0.2" height="15.0" fill="rgb(213,28,48)" rx="2" ry="2" />
<text  x="1022.12" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="563.3" y="1845" width="0.6" height="15.0" fill="rgb(238,65,23)" rx="2" ry="2" />
<text  x="566.31" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="881.5" y="1925" width="0.6" height="15.0" fill="rgb(242,26,30)" rx="2" ry="2" />
<text  x="884.54" y="1935.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="523.8" y="1957" width="0.2" height="15.0" fill="rgb(220,60,18)" rx="2" ry="2" />
<text  x="526.83" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="863.2" y="1957" width="0.2" height="15.0" fill="rgb(222,94,38)" rx="2" ry="2" />
<text  x="866.20" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="996.4" y="1749" width="0.2" height="15.0" fill="rgb(214,57,22)" rx="2" ry="2" />
<text  x="999.39" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="524.6" y="1989" width="0.2" height="15.0" fill="rgb(230,83,22)" rx="2" ry="2" />
<text  x="527.63" y="1999.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="563.5" y="1717" width="0.2" height="15.0" fill="rgb(226,103,29)" rx="2" ry="2" />
<text  x="566.51" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1119.8" y="1893" width="0.2" height="15.0" fill="rgb(222,192,49)" rx="2" ry="2" />
<text  x="1122.81" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (3 samples, 0.05%)</title><rect x="82.2" y="1941" width="0.6" height="15.0" fill="rgb(232,220,30)" rx="2" ry="2" />
<text  x="85.18" y="1951.5" ></text>
</g>
<g >
<title>sys_futex (34 samples, 0.57%)</title><rect x="10.6" y="2005" width="6.8" height="15.0" fill="rgb(215,185,28)" rx="2" ry="2" />
<text  x="13.60" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="246.9" y="1861" width="0.2" height="15.0" fill="rgb(210,111,49)" rx="2" ry="2" />
<text  x="249.88" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="630.9" y="2005" width="0.2" height="15.0" fill="rgb(219,123,36)" rx="2" ry="2" />
<text  x="633.91" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="174.3" y="1973" width="0.2" height="15.0" fill="rgb(206,107,19)" rx="2" ry="2" />
<text  x="177.30" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="102.7" y="1797" width="0.2" height="15.0" fill="rgb(221,212,53)" rx="2" ry="2" />
<text  x="105.72" y="1807.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="477.2" y="1957" width="0.4" height="15.0" fill="rgb(238,203,41)" rx="2" ry="2" />
<text  x="480.17" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="571.7" y="2005" width="0.2" height="15.0" fill="rgb(227,173,11)" rx="2" ry="2" />
<text  x="574.69" y="2015.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (3 samples, 0.05%)</title><rect x="742.4" y="1685" width="0.6" height="15.0" fill="rgb(214,186,32)" rx="2" ry="2" />
<text  x="745.37" y="1695.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1082.5" y="1909" width="0.2" height="15.0" fill="rgb(226,162,49)" rx="2" ry="2" />
<text  x="1085.53" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (1 samples, 0.02%)</title><rect x="70.2" y="1989" width="0.2" height="15.0" fill="rgb(238,90,22)" rx="2" ry="2" />
<text  x="73.22" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="18.0" y="1829" width="0.6" height="15.0" fill="rgb(216,18,14)" rx="2" ry="2" />
<text  x="20.98" y="1839.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="809.0" y="1685" width="0.6" height="15.0" fill="rgb(237,57,4)" rx="2" ry="2" />
<text  x="811.96" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="581.7" y="2021" width="0.2" height="15.0" fill="rgb(214,99,0)" rx="2" ry="2" />
<text  x="584.66" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="148.6" y="1893" width="0.2" height="15.0" fill="rgb(224,63,4)" rx="2" ry="2" />
<text  x="151.58" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="372.1" y="1733" width="0.2" height="15.0" fill="rgb(216,65,48)" rx="2" ry="2" />
<text  x="375.10" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="134.4" y="1909" width="0.2" height="15.0" fill="rgb(236,156,18)" rx="2" ry="2" />
<text  x="137.42" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="526.2" y="1973" width="0.4" height="15.0" fill="rgb(252,98,30)" rx="2" ry="2" />
<text  x="529.23" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="57.5" y="1637" width="0.2" height="15.0" fill="rgb(223,202,52)" rx="2" ry="2" />
<text  x="60.46" y="1647.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (12 samples, 0.20%)</title><rect x="333.8" y="1925" width="2.4" height="15.0" fill="rgb(208,99,18)" rx="2" ry="2" />
<text  x="336.81" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="264.2" y="1573" width="0.2" height="15.0" fill="rgb(226,144,6)" rx="2" ry="2" />
<text  x="267.22" y="1583.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="246.1" y="1941" width="1.0" height="15.0" fill="rgb(208,168,9)" rx="2" ry="2" />
<text  x="249.08" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="17.2" y="1877" width="0.2" height="15.0" fill="rgb(254,49,37)" rx="2" ry="2" />
<text  x="20.18" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (15 samples, 0.25%)</title><rect x="539.2" y="2005" width="3.0" height="15.0" fill="rgb(253,156,11)" rx="2" ry="2" />
<text  x="542.19" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="996.4" y="1989" width="0.2" height="15.0" fill="rgb(224,92,28)" rx="2" ry="2" />
<text  x="999.39" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1130.2" y="1829" width="0.4" height="15.0" fill="rgb(213,43,35)" rx="2" ry="2" />
<text  x="1133.18" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1130.0" y="2005" width="0.2" height="15.0" fill="rgb(206,202,31)" rx="2" ry="2" />
<text  x="1132.98" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="149.8" y="1861" width="0.2" height="15.0" fill="rgb(241,21,40)" rx="2" ry="2" />
<text  x="152.77" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="884.7" y="1749" width="0.2" height="15.0" fill="rgb(216,21,53)" rx="2" ry="2" />
<text  x="887.73" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1013.1" y="1941" width="0.2" height="15.0" fill="rgb(222,21,23)" rx="2" ry="2" />
<text  x="1016.14" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="561.3" y="1941" width="0.8" height="15.0" fill="rgb(216,168,41)" rx="2" ry="2" />
<text  x="564.32" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="1161.9" y="2053" width="0.4" height="15.0" fill="rgb(234,189,49)" rx="2" ry="2" />
<text  x="1164.89" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (3 samples, 0.05%)</title><rect x="517.7" y="1957" width="0.5" height="15.0" fill="rgb(244,200,52)" rx="2" ry="2" />
<text  x="520.65" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="404.6" y="1797" width="0.2" height="15.0" fill="rgb(241,206,50)" rx="2" ry="2" />
<text  x="407.60" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="505.3" y="1877" width="0.4" height="15.0" fill="rgb(232,79,29)" rx="2" ry="2" />
<text  x="508.29" y="1887.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="817.5" y="1365" width="0.2" height="15.0" fill="rgb(235,54,41)" rx="2" ry="2" />
<text  x="820.54" y="1375.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="527.6" y="1941" width="0.6" height="15.0" fill="rgb(212,112,6)" rx="2" ry="2" />
<text  x="530.62" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="453.8" y="1877" width="0.2" height="15.0" fill="rgb(242,57,5)" rx="2" ry="2" />
<text  x="456.85" y="1887.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="256.8" y="1893" width="0.2" height="15.0" fill="rgb(247,48,0)" rx="2" ry="2" />
<text  x="259.85" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="157.0" y="1685" width="0.2" height="15.0" fill="rgb(243,127,30)" rx="2" ry="2" />
<text  x="159.95" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="545.2" y="1813" width="0.2" height="15.0" fill="rgb(232,177,52)" rx="2" ry="2" />
<text  x="548.17" y="1823.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.5" y="1765" width="0.2" height="15.0" fill="rgb(212,229,38)" rx="2" ry="2" />
<text  x="126.45" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (11 samples, 0.19%)</title><rect x="537.0" y="2005" width="2.2" height="15.0" fill="rgb(236,83,40)" rx="2" ry="2" />
<text  x="539.99" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="732.6" y="1717" width="0.6" height="15.0" fill="rgb(221,217,15)" rx="2" ry="2" />
<text  x="735.60" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="153.6" y="1893" width="0.4" height="15.0" fill="rgb(245,211,15)" rx="2" ry="2" />
<text  x="156.56" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="782.0" y="1573" width="0.4" height="15.0" fill="rgb(232,225,26)" rx="2" ry="2" />
<text  x="785.04" y="1583.5" ></text>
</g>
<g >
<title>inet_getname (7 samples, 0.12%)</title><rect x="594.0" y="1861" width="1.4" height="15.0" fill="rgb(236,168,22)" rx="2" ry="2" />
<text  x="597.02" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="576.9" y="1877" width="0.2" height="15.0" fill="rgb(240,111,4)" rx="2" ry="2" />
<text  x="579.87" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="324.4" y="1637" width="0.4" height="15.0" fill="rgb(233,70,10)" rx="2" ry="2" />
<text  x="327.44" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="824.9" y="1605" width="0.2" height="15.0" fill="rgb(242,156,26)" rx="2" ry="2" />
<text  x="827.91" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="1157.9" y="1733" width="0.6" height="15.0" fill="rgb(253,7,17)" rx="2" ry="2" />
<text  x="1160.90" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="129.2" y="1989" width="0.2" height="15.0" fill="rgb(228,164,50)" rx="2" ry="2" />
<text  x="132.24" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1104.3" y="1461" width="0.4" height="15.0" fill="rgb(207,59,52)" rx="2" ry="2" />
<text  x="1107.26" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4 samples, 0.07%)</title><rect x="292.3" y="1525" width="0.8" height="15.0" fill="rgb(231,36,12)" rx="2" ry="2" />
<text  x="295.34" y="1535.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.14%)</title><rect x="19.0" y="1829" width="1.6" height="15.0" fill="rgb(233,104,43)" rx="2" ry="2" />
<text  x="21.97" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="404.6" y="1813" width="0.2" height="15.0" fill="rgb(240,192,52)" rx="2" ry="2" />
<text  x="407.60" y="1823.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="462.4" y="1493" width="0.2" height="15.0" fill="rgb(235,179,43)" rx="2" ry="2" />
<text  x="465.42" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1116.2" y="1829" width="0.2" height="15.0" fill="rgb(206,10,25)" rx="2" ry="2" />
<text  x="1119.23" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="571.5" y="1893" width="0.2" height="15.0" fill="rgb(220,113,34)" rx="2" ry="2" />
<text  x="574.49" y="1903.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="919.2" y="1973" width="0.6" height="15.0" fill="rgb(215,147,42)" rx="2" ry="2" />
<text  x="922.23" y="1983.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1096.3" y="1893" width="0.2" height="15.0" fill="rgb(212,55,11)" rx="2" ry="2" />
<text  x="1099.29" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="291.3" y="1477" width="0.2" height="15.0" fill="rgb(225,159,49)" rx="2" ry="2" />
<text  x="294.34" y="1487.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="159.5" y="1925" width="0.2" height="15.0" fill="rgb(206,66,9)" rx="2" ry="2" />
<text  x="162.54" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="324.4" y="1669" width="0.4" height="15.0" fill="rgb(217,91,2)" rx="2" ry="2" />
<text  x="327.44" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="104.5" y="1701" width="18.4" height="15.0" fill="rgb(212,1,48)" rx="2" ry="2" />
<text  x="107.51" y="1711.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1011.9" y="1973" width="0.6" height="15.0" fill="rgb(229,115,5)" rx="2" ry="2" />
<text  x="1014.94" y="1983.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="274.0" y="1733" width="0.2" height="15.0" fill="rgb(211,186,17)" rx="2" ry="2" />
<text  x="276.99" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (5 samples, 0.08%)</title><rect x="290.7" y="1605" width="1.0" height="15.0" fill="rgb(230,118,14)" rx="2" ry="2" />
<text  x="293.74" y="1615.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="483.0" y="1605" width="0.2" height="15.0" fill="rgb(246,70,24)" rx="2" ry="2" />
<text  x="485.96" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="508.3" y="1829" width="0.2" height="15.0" fill="rgb(224,176,39)" rx="2" ry="2" />
<text  x="511.28" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="935.4" y="1893" width="0.8" height="15.0" fill="rgb(228,153,34)" rx="2" ry="2" />
<text  x="938.38" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="648.9" y="1877" width="0.2" height="15.0" fill="rgb(219,178,28)" rx="2" ry="2" />
<text  x="651.85" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="615.8" y="1669" width="0.2" height="15.0" fill="rgb(221,57,17)" rx="2" ry="2" />
<text  x="618.75" y="1679.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="412.0" y="1733" width="0.2" height="15.0" fill="rgb(245,98,1)" rx="2" ry="2" />
<text  x="414.97" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="225.9" y="1605" width="0.2" height="15.0" fill="rgb(235,210,53)" rx="2" ry="2" />
<text  x="228.94" y="1615.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="32.1" y="1669" width="0.2" height="15.0" fill="rgb(235,94,27)" rx="2" ry="2" />
<text  x="35.13" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="105.7" y="37" width="0.2" height="15.0" fill="rgb(240,197,32)" rx="2" ry="2" />
<text  x="108.71" y="47.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 0.02%)</title><rect x="758.3" y="1733" width="0.2" height="15.0" fill="rgb(220,204,39)" rx="2" ry="2" />
<text  x="761.32" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="644.9" y="1749" width="0.2" height="15.0" fill="rgb(222,97,44)" rx="2" ry="2" />
<text  x="647.86" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (5 samples, 0.08%)</title><rect x="532.2" y="1893" width="1.0" height="15.0" fill="rgb(206,43,18)" rx="2" ry="2" />
<text  x="535.21" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="462.4" y="1829" width="0.2" height="15.0" fill="rgb(208,186,42)" rx="2" ry="2" />
<text  x="465.42" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="679.8" y="1893" width="0.2" height="15.0" fill="rgb(246,218,2)" rx="2" ry="2" />
<text  x="682.76" y="1903.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (6 samples, 0.10%)</title><rect x="479.6" y="1973" width="1.2" height="15.0" fill="rgb(208,147,16)" rx="2" ry="2" />
<text  x="482.57" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="412.0" y="1685" width="0.2" height="15.0" fill="rgb(227,100,42)" rx="2" ry="2" />
<text  x="414.97" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (9 samples, 0.15%)</title><rect x="175.5" y="1989" width="1.8" height="15.0" fill="rgb(220,12,3)" rx="2" ry="2" />
<text  x="178.50" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1013.1" y="1701" width="0.2" height="15.0" fill="rgb(253,102,0)" rx="2" ry="2" />
<text  x="1016.14" y="1711.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="211.2" y="1957" width="0.4" height="15.0" fill="rgb(236,48,12)" rx="2" ry="2" />
<text  x="214.19" y="1967.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (7 samples, 0.12%)</title><rect x="552.7" y="1973" width="1.4" height="15.0" fill="rgb(218,79,12)" rx="2" ry="2" />
<text  x="555.74" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="157.9" y="1637" width="0.2" height="15.0" fill="rgb(213,47,1)" rx="2" ry="2" />
<text  x="160.95" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="338.6" y="1861" width="0.4" height="15.0" fill="rgb(253,70,29)" rx="2" ry="2" />
<text  x="341.60" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="877.2" y="1941" width="0.4" height="15.0" fill="rgb(210,67,7)" rx="2" ry="2" />
<text  x="880.15" y="1951.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="309.7" y="1717" width="0.2" height="15.0" fill="rgb(214,70,16)" rx="2" ry="2" />
<text  x="312.69" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.9" y="1589" width="0.2" height="15.0" fill="rgb(250,213,50)" rx="2" ry="2" />
<text  x="124.86" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="627.5" y="2005" width="0.2" height="15.0" fill="rgb(216,119,15)" rx="2" ry="2" />
<text  x="630.52" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (2 samples, 0.03%)</title><rect x="548.4" y="1989" width="0.4" height="15.0" fill="rgb(248,145,8)" rx="2" ry="2" />
<text  x="551.36" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="128.4" y="1989" width="0.2" height="15.0" fill="rgb(222,166,5)" rx="2" ry="2" />
<text  x="131.44" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="412.0" y="1845" width="0.4" height="15.0" fill="rgb(222,115,18)" rx="2" ry="2" />
<text  x="414.97" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="912.6" y="1941" width="0.2" height="15.0" fill="rgb(210,0,34)" rx="2" ry="2" />
<text  x="915.65" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="920.2" y="1973" width="0.2" height="15.0" fill="rgb(246,124,53)" rx="2" ry="2" />
<text  x="923.22" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="663.6" y="1941" width="2.0" height="15.0" fill="rgb(229,177,5)" rx="2" ry="2" />
<text  x="666.61" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="143.4" y="1877" width="0.2" height="15.0" fill="rgb(212,51,16)" rx="2" ry="2" />
<text  x="146.39" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="679.8" y="1925" width="0.2" height="15.0" fill="rgb(211,135,50)" rx="2" ry="2" />
<text  x="682.76" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="39.3" y="2005" width="0.2" height="15.0" fill="rgb(229,103,18)" rx="2" ry="2" />
<text  x="42.31" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="264.2" y="1797" width="0.4" height="15.0" fill="rgb(252,31,36)" rx="2" ry="2" />
<text  x="267.22" y="1807.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="397.4" y="1573" width="0.2" height="15.0" fill="rgb(226,96,30)" rx="2" ry="2" />
<text  x="400.42" y="1583.5" ></text>
</g>
<g >
<title>__GI___getpeername (58 samples, 0.98%)</title><rect x="665.6" y="1941" width="11.6" height="15.0" fill="rgb(238,105,17)" rx="2" ry="2" />
<text  x="668.60" y="1951.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1012.5" y="1973" width="0.2" height="15.0" fill="rgb(208,128,49)" rx="2" ry="2" />
<text  x="1015.54" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="1158.1" y="1669" width="0.2" height="15.0" fill="rgb(205,93,11)" rx="2" ry="2" />
<text  x="1161.10" y="1679.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="163.9" y="2005" width="0.2" height="15.0" fill="rgb(210,51,30)" rx="2" ry="2" />
<text  x="166.93" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="969.3" y="2021" width="0.2" height="15.0" fill="rgb(219,223,50)" rx="2" ry="2" />
<text  x="972.27" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="264.2" y="1765" width="0.4" height="15.0" fill="rgb(245,146,27)" rx="2" ry="2" />
<text  x="267.22" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="839.9" y="1893" width="0.2" height="15.0" fill="rgb(210,159,44)" rx="2" ry="2" />
<text  x="842.87" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="508.3" y="1877" width="0.2" height="15.0" fill="rgb(254,135,26)" rx="2" ry="2" />
<text  x="511.28" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="632.9" y="1989" width="0.2" height="15.0" fill="rgb(243,168,54)" rx="2" ry="2" />
<text  x="635.90" y="1999.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="982.0" y="1653" width="0.2" height="15.0" fill="rgb(212,103,30)" rx="2" ry="2" />
<text  x="985.03" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (1 samples, 0.02%)</title><rect x="106.5" y="37" width="0.2" height="15.0" fill="rgb(240,28,48)" rx="2" ry="2" />
<text  x="109.51" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="57.5" y="1829" width="0.2" height="15.0" fill="rgb(252,153,33)" rx="2" ry="2" />
<text  x="60.46" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (2 samples, 0.03%)</title><rect x="611.6" y="1909" width="0.4" height="15.0" fill="rgb(231,148,39)" rx="2" ry="2" />
<text  x="614.56" y="1919.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.3" y="1813" width="0.2" height="15.0" fill="rgb(224,203,24)" rx="2" ry="2" />
<text  x="107.31" y="1823.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (13 samples, 0.22%)</title><rect x="272.0" y="1829" width="2.6" height="15.0" fill="rgb(219,82,45)" rx="2" ry="2" />
<text  x="275.00" y="1839.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1144.7" y="1973" width="0.2" height="15.0" fill="rgb(212,126,7)" rx="2" ry="2" />
<text  x="1147.74" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="975.3" y="1973" width="0.2" height="15.0" fill="rgb(210,32,54)" rx="2" ry="2" />
<text  x="978.26" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="644.9" y="1829" width="0.2" height="15.0" fill="rgb(207,166,23)" rx="2" ry="2" />
<text  x="647.86" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="231.3" y="1765" width="0.2" height="15.0" fill="rgb(231,140,12)" rx="2" ry="2" />
<text  x="234.32" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="40.1" y="1781" width="0.2" height="15.0" fill="rgb(219,199,42)" rx="2" ry="2" />
<text  x="43.11" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.83%)</title><rect x="105.1" y="69" width="9.8" height="15.0" fill="rgb(205,22,4)" rx="2" ry="2" />
<text  x="108.11" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1008.8" y="1765" width="0.2" height="15.0" fill="rgb(249,86,44)" rx="2" ry="2" />
<text  x="1011.75" y="1775.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="158.9" y="1893" width="0.2" height="15.0" fill="rgb(241,200,8)" rx="2" ry="2" />
<text  x="161.95" y="1903.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="17.6" y="1989" width="1.0" height="15.0" fill="rgb(237,37,31)" rx="2" ry="2" />
<text  x="20.58" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="674.8" y="1781" width="0.2" height="15.0" fill="rgb(205,94,48)" rx="2" ry="2" />
<text  x="677.77" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="856.8" y="1941" width="0.2" height="15.0" fill="rgb(235,98,24)" rx="2" ry="2" />
<text  x="859.82" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="679.8" y="2021" width="0.2" height="15.0" fill="rgb(238,56,10)" rx="2" ry="2" />
<text  x="682.76" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="337.2" y="1893" width="0.2" height="15.0" fill="rgb(217,40,50)" rx="2" ry="2" />
<text  x="340.20" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.9" y="1221" width="0.2" height="15.0" fill="rgb(236,175,46)" rx="2" ry="2" />
<text  x="122.86" y="1231.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="854.6" y="1941" width="0.4" height="15.0" fill="rgb(214,7,35)" rx="2" ry="2" />
<text  x="857.62" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="914.2" y="2021" width="0.4" height="15.0" fill="rgb(251,85,14)" rx="2" ry="2" />
<text  x="917.24" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="665.2" y="1861" width="0.2" height="15.0" fill="rgb(210,77,45)" rx="2" ry="2" />
<text  x="668.20" y="1871.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="184.3" y="2021" width="0.2" height="15.0" fill="rgb(220,79,15)" rx="2" ry="2" />
<text  x="187.27" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1130.0" y="2021" width="0.6" height="15.0" fill="rgb(226,218,3)" rx="2" ry="2" />
<text  x="1132.98" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1116.2" y="1877" width="0.2" height="15.0" fill="rgb(231,63,6)" rx="2" ry="2" />
<text  x="1119.23" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="844.3" y="1893" width="0.4" height="15.0" fill="rgb(226,29,4)" rx="2" ry="2" />
<text  x="847.25" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="412.0" y="1813" width="0.4" height="15.0" fill="rgb(214,104,3)" rx="2" ry="2" />
<text  x="414.97" y="1823.5" ></text>
</g>
<g >
<title>__alloc_skb (39 samples, 0.66%)</title><rect x="269.2" y="1861" width="7.8" height="15.0" fill="rgb(225,92,52)" rx="2" ry="2" />
<text  x="272.21" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="625.3" y="1989" width="0.4" height="15.0" fill="rgb(218,20,38)" rx="2" ry="2" />
<text  x="628.32" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="937.0" y="1893" width="0.4" height="15.0" fill="rgb(224,84,49)" rx="2" ry="2" />
<text  x="939.97" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="336.0" y="1541" width="0.2" height="15.0" fill="rgb(237,142,47)" rx="2" ry="2" />
<text  x="339.01" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="104.9" y="1221" width="15.0" height="15.0" fill="rgb(228,9,48)" rx="2" ry="2" />
<text  x="107.91" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1169.9" y="1957" width="0.2" height="15.0" fill="rgb(227,197,1)" rx="2" ry="2" />
<text  x="1172.86" y="1967.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="1081.9" y="1925" width="1.8" height="15.0" fill="rgb(254,208,20)" rx="2" ry="2" />
<text  x="1084.93" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="675.4" y="1621" width="0.2" height="15.0" fill="rgb(213,3,51)" rx="2" ry="2" />
<text  x="678.37" y="1631.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="236.5" y="1973" width="0.2" height="15.0" fill="rgb(246,106,45)" rx="2" ry="2" />
<text  x="239.51" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="866.6" y="1797" width="0.2" height="15.0" fill="rgb(206,100,11)" rx="2" ry="2" />
<text  x="869.59" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="189.9" y="1749" width="0.2" height="15.0" fill="rgb(236,132,54)" rx="2" ry="2" />
<text  x="192.85" y="1759.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="517.3" y="1893" width="0.2" height="15.0" fill="rgb(205,121,24)" rx="2" ry="2" />
<text  x="520.25" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="1121.4" y="1781" width="0.4" height="15.0" fill="rgb(249,164,22)" rx="2" ry="2" />
<text  x="1124.41" y="1791.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="189.9" y="1733" width="0.2" height="15.0" fill="rgb(206,50,17)" rx="2" ry="2" />
<text  x="192.85" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="338.6" y="1845" width="0.4" height="15.0" fill="rgb(237,225,11)" rx="2" ry="2" />
<text  x="341.60" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="229" width="13.8" height="15.0" fill="rgb(251,69,5)" rx="2" ry="2" />
<text  x="108.11" y="239.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (28 samples, 0.47%)</title><rect x="986.6" y="1989" width="5.6" height="15.0" fill="rgb(223,40,35)" rx="2" ry="2" />
<text  x="989.62" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="225.3" y="1829" width="0.6" height="15.0" fill="rgb(246,63,30)" rx="2" ry="2" />
<text  x="228.34" y="1839.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="118.9" y="37" width="0.2" height="15.0" fill="rgb(205,90,46)" rx="2" ry="2" />
<text  x="121.87" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="1169.3" y="1957" width="0.2" height="15.0" fill="rgb(213,63,16)" rx="2" ry="2" />
<text  x="1172.26" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="531.8" y="1893" width="0.2" height="15.0" fill="rgb(221,197,12)" rx="2" ry="2" />
<text  x="534.81" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="836.7" y="1829" width="0.2" height="15.0" fill="rgb(254,112,44)" rx="2" ry="2" />
<text  x="839.68" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="227.5" y="1829" width="0.6" height="15.0" fill="rgb(222,91,24)" rx="2" ry="2" />
<text  x="230.54" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="435.9" y="1765" width="0.2" height="15.0" fill="rgb(237,71,28)" rx="2" ry="2" />
<text  x="438.90" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="171.3" y="2021" width="0.2" height="15.0" fill="rgb(208,118,50)" rx="2" ry="2" />
<text  x="174.31" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="665.2" y="1717" width="0.2" height="15.0" fill="rgb(250,152,15)" rx="2" ry="2" />
<text  x="668.20" y="1727.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (2 samples, 0.03%)</title><rect x="508.5" y="2037" width="0.4" height="15.0" fill="rgb(211,200,12)" rx="2" ry="2" />
<text  x="511.48" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.3" y="1541" width="0.2" height="15.0" fill="rgb(222,89,27)" rx="2" ry="2" />
<text  x="124.26" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="798.6" y="1493" width="0.2" height="15.0" fill="rgb(211,54,36)" rx="2" ry="2" />
<text  x="801.59" y="1503.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (34 samples, 0.57%)</title><rect x="221.4" y="1909" width="6.7" height="15.0" fill="rgb(235,177,6)" rx="2" ry="2" />
<text  x="224.36" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="562.1" y="1925" width="0.2" height="15.0" fill="rgb(250,135,17)" rx="2" ry="2" />
<text  x="565.12" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="482.8" y="1717" width="0.2" height="15.0" fill="rgb(222,12,14)" rx="2" ry="2" />
<text  x="485.76" y="1727.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="225.9" y="1541" width="0.2" height="15.0" fill="rgb(231,208,16)" rx="2" ry="2" />
<text  x="228.94" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="397.4" y="1781" width="0.4" height="15.0" fill="rgb(253,17,21)" rx="2" ry="2" />
<text  x="400.42" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="576.9" y="1797" width="0.2" height="15.0" fill="rgb(224,3,11)" rx="2" ry="2" />
<text  x="579.87" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="916.4" y="2005" width="0.2" height="15.0" fill="rgb(228,132,19)" rx="2" ry="2" />
<text  x="919.43" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="38.5" y="1877" width="0.2" height="15.0" fill="rgb(216,91,53)" rx="2" ry="2" />
<text  x="41.51" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="675.0" y="1845" width="0.6" height="15.0" fill="rgb(240,181,41)" rx="2" ry="2" />
<text  x="677.97" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="678.8" y="1989" width="0.2" height="15.0" fill="rgb(207,69,26)" rx="2" ry="2" />
<text  x="681.76" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="528.6" y="1829" width="0.6" height="15.0" fill="rgb(230,103,24)" rx="2" ry="2" />
<text  x="531.62" y="1839.5" ></text>
</g>
<g >
<title>skb_clone (34 samples, 0.57%)</title><rect x="310.9" y="1813" width="6.8" height="15.0" fill="rgb(211,121,47)" rx="2" ry="2" />
<text  x="313.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="789" width="14.0" height="15.0" fill="rgb(248,58,48)" rx="2" ry="2" />
<text  x="108.11" y="799.5" ></text>
</g>
<g >
<title>kfree_skbmem (22 samples, 0.37%)</title><rect x="1063.6" y="1909" width="4.4" height="15.0" fill="rgb(237,87,34)" rx="2" ry="2" />
<text  x="1066.59" y="1919.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (3 samples, 0.05%)</title><rect x="716.8" y="1925" width="0.6" height="15.0" fill="rgb(220,80,33)" rx="2" ry="2" />
<text  x="719.84" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="890.9" y="1893" width="0.4" height="15.0" fill="rgb(239,124,25)" rx="2" ry="2" />
<text  x="893.91" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="924.2" y="1909" width="0.2" height="15.0" fill="rgb(228,221,48)" rx="2" ry="2" />
<text  x="927.21" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="529.8" y="1941" width="0.2" height="15.0" fill="rgb(240,209,24)" rx="2" ry="2" />
<text  x="532.81" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="571.5" y="1813" width="0.2" height="15.0" fill="rgb(254,70,19)" rx="2" ry="2" />
<text  x="574.49" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1008.8" y="1941" width="0.2" height="15.0" fill="rgb(247,216,26)" rx="2" ry="2" />
<text  x="1011.75" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="955.9" y="1893" width="0.2" height="15.0" fill="rgb(217,194,32)" rx="2" ry="2" />
<text  x="958.91" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="918.2" y="2005" width="0.2" height="15.0" fill="rgb(242,38,26)" rx="2" ry="2" />
<text  x="921.23" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1008.8" y="1973" width="0.2" height="15.0" fill="rgb(209,60,21)" rx="2" ry="2" />
<text  x="1011.75" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="957.5" y="1957" width="2.8" height="15.0" fill="rgb(237,218,33)" rx="2" ry="2" />
<text  x="960.51" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.78%)</title><rect x="903.7" y="2021" width="9.1" height="15.0" fill="rgb(229,197,24)" rx="2" ry="2" />
<text  x="906.67" y="2031.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="1166.9" y="2037" width="0.2" height="15.0" fill="rgb(240,60,34)" rx="2" ry="2" />
<text  x="1169.87" y="2047.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1957" width="0.4" height="15.0" fill="rgb(214,209,52)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="528.4" y="1877" width="0.8" height="15.0" fill="rgb(249,151,32)" rx="2" ry="2" />
<text  x="531.42" y="1887.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="274.0" y="1781" width="0.2" height="15.0" fill="rgb(231,129,30)" rx="2" ry="2" />
<text  x="276.99" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="336.2" y="1765" width="0.2" height="15.0" fill="rgb(243,8,39)" rx="2" ry="2" />
<text  x="339.20" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="231.3" y="1877" width="0.2" height="15.0" fill="rgb(232,168,23)" rx="2" ry="2" />
<text  x="234.32" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="690.7" y="1909" width="0.4" height="15.0" fill="rgb(219,178,22)" rx="2" ry="2" />
<text  x="693.72" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="511.1" y="1989" width="0.2" height="15.0" fill="rgb(234,228,4)" rx="2" ry="2" />
<text  x="514.07" y="1999.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 0.10%)</title><rect x="250.9" y="1909" width="1.2" height="15.0" fill="rgb(212,3,25)" rx="2" ry="2" />
<text  x="253.87" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="17.6" y="1845" width="0.2" height="15.0" fill="rgb(246,147,46)" rx="2" ry="2" />
<text  x="20.58" y="1855.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="675.2" y="1653" width="0.2" height="15.0" fill="rgb(213,203,22)" rx="2" ry="2" />
<text  x="678.17" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="481.0" y="1781" width="0.4" height="15.0" fill="rgb(239,41,6)" rx="2" ry="2" />
<text  x="483.96" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (4 samples, 0.07%)</title><rect x="85.8" y="1925" width="0.8" height="15.0" fill="rgb(253,3,51)" rx="2" ry="2" />
<text  x="88.77" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="996.4" y="1717" width="0.2" height="15.0" fill="rgb(233,170,35)" rx="2" ry="2" />
<text  x="999.39" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="435.9" y="1781" width="0.2" height="15.0" fill="rgb(243,37,5)" rx="2" ry="2" />
<text  x="438.90" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1156.3" y="1925" width="0.2" height="15.0" fill="rgb(237,115,35)" rx="2" ry="2" />
<text  x="1159.30" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="657.0" y="2005" width="0.4" height="15.0" fill="rgb(228,140,35)" rx="2" ry="2" />
<text  x="660.03" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="844.3" y="1909" width="0.4" height="15.0" fill="rgb(254,72,0)" rx="2" ry="2" />
<text  x="847.25" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (99 samples, 1.67%)</title><rect x="141.6" y="1989" width="19.7" height="15.0" fill="rgb(247,150,6)" rx="2" ry="2" />
<text  x="144.60" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (6 samples, 0.10%)</title><rect x="888.9" y="1925" width="1.2" height="15.0" fill="rgb(242,135,39)" rx="2" ry="2" />
<text  x="891.92" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="675.0" y="1749" width="0.6" height="15.0" fill="rgb(236,225,44)" rx="2" ry="2" />
<text  x="677.97" y="1759.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="938.8" y="1941" width="0.2" height="15.0" fill="rgb(247,187,7)" rx="2" ry="2" />
<text  x="941.77" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="17.8" y="1861" width="0.8" height="15.0" fill="rgb(220,170,8)" rx="2" ry="2" />
<text  x="20.78" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.2" y="1941" width="0.2" height="15.0" fill="rgb(226,128,2)" rx="2" ry="2" />
<text  x="1002.18" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (11 samples, 0.19%)</title><rect x="531.2" y="1957" width="2.2" height="15.0" fill="rgb(219,205,44)" rx="2" ry="2" />
<text  x="534.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="641.5" y="1893" width="0.2" height="15.0" fill="rgb(224,182,31)" rx="2" ry="2" />
<text  x="644.47" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="817.5" y="1413" width="0.2" height="15.0" fill="rgb(234,192,39)" rx="2" ry="2" />
<text  x="820.54" y="1423.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="94.3" y="1989" width="0.2" height="15.0" fill="rgb(251,30,35)" rx="2" ry="2" />
<text  x="97.34" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="836.7" y="1685" width="0.2" height="15.0" fill="rgb(208,112,54)" rx="2" ry="2" />
<text  x="839.68" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="149.8" y="1765" width="0.2" height="15.0" fill="rgb(231,222,25)" rx="2" ry="2" />
<text  x="152.77" y="1775.5" ></text>
</g>
<g >
<title>fput (10 samples, 0.17%)</title><rect x="473.0" y="1973" width="2.0" height="15.0" fill="rgb(242,54,28)" rx="2" ry="2" />
<text  x="475.99" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="462.4" y="1477" width="0.2" height="15.0" fill="rgb(230,128,42)" rx="2" ry="2" />
<text  x="465.42" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1119.8" y="1701" width="0.2" height="15.0" fill="rgb(222,186,38)" rx="2" ry="2" />
<text  x="1122.81" y="1711.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1104.5" y="1349" width="0.2" height="15.0" fill="rgb(239,166,1)" rx="2" ry="2" />
<text  x="1107.46" y="1359.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="144.8" y="1877" width="0.2" height="15.0" fill="rgb(241,11,34)" rx="2" ry="2" />
<text  x="147.79" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="117.5" y="37" width="0.2" height="15.0" fill="rgb(242,201,39)" rx="2" ry="2" />
<text  x="120.47" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1180.8" y="1861" width="0.2" height="15.0" fill="rgb(206,42,39)" rx="2" ry="2" />
<text  x="1183.83" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="192.0" y="2021" width="0.2" height="15.0" fill="rgb(217,65,25)" rx="2" ry="2" />
<text  x="195.04" y="2031.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="160.3" y="1717" width="0.2" height="15.0" fill="rgb(221,152,45)" rx="2" ry="2" />
<text  x="163.34" y="1727.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (4 samples, 0.07%)</title><rect x="531.2" y="1925" width="0.8" height="15.0" fill="rgb(205,172,2)" rx="2" ry="2" />
<text  x="534.21" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="618.9" y="1797" width="1.0" height="15.0" fill="rgb(235,182,40)" rx="2" ry="2" />
<text  x="621.94" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1049.8" y="1813" width="0.2" height="15.0" fill="rgb(238,207,30)" rx="2" ry="2" />
<text  x="1052.83" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::store (2 samples, 0.03%)</title><rect x="160.3" y="1941" width="0.4" height="15.0" fill="rgb(235,135,22)" rx="2" ry="2" />
<text  x="163.34" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="404.6" y="1829" width="0.2" height="15.0" fill="rgb(227,189,49)" rx="2" ry="2" />
<text  x="407.60" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="17.6" y="1909" width="0.2" height="15.0" fill="rgb(237,67,9)" rx="2" ry="2" />
<text  x="20.58" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="120.7" y="1477" width="0.2" height="15.0" fill="rgb(229,27,46)" rx="2" ry="2" />
<text  x="123.66" y="1487.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="532.6" y="1861" width="0.2" height="15.0" fill="rgb(206,35,2)" rx="2" ry="2" />
<text  x="535.61" y="1871.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="673.6" y="1845" width="0.2" height="15.0" fill="rgb(231,142,11)" rx="2" ry="2" />
<text  x="676.58" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1012.7" y="1557" width="0.2" height="15.0" fill="rgb(246,177,36)" rx="2" ry="2" />
<text  x="1015.74" y="1567.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="655.2" y="1989" width="0.2" height="15.0" fill="rgb(209,29,35)" rx="2" ry="2" />
<text  x="658.23" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="698.3" y="1973" width="2.8" height="15.0" fill="rgb(254,171,11)" rx="2" ry="2" />
<text  x="701.30" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (11 samples, 0.19%)</title><rect x="107.1" y="37" width="2.2" height="15.0" fill="rgb(216,1,50)" rx="2" ry="2" />
<text  x="110.10" y="47.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="811.6" y="1621" width="0.2" height="15.0" fill="rgb(245,112,39)" rx="2" ry="2" />
<text  x="814.55" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="534.2" y="1749" width="0.2" height="15.0" fill="rgb(232,167,4)" rx="2" ry="2" />
<text  x="537.20" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1973" width="0.4" height="15.0" fill="rgb(232,157,52)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (32 samples, 0.54%)</title><rect x="931.0" y="1909" width="6.4" height="15.0" fill="rgb(241,113,6)" rx="2" ry="2" />
<text  x="933.99" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="782.2" y="1397" width="0.2" height="15.0" fill="rgb(253,92,7)" rx="2" ry="2" />
<text  x="785.24" y="1407.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1116.2" y="1669" width="0.2" height="15.0" fill="rgb(230,214,23)" rx="2" ry="2" />
<text  x="1119.23" y="1679.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="386.1" y="1941" width="0.2" height="15.0" fill="rgb(253,126,44)" rx="2" ry="2" />
<text  x="389.05" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="844.7" y="1909" width="0.2" height="15.0" fill="rgb(249,36,10)" rx="2" ry="2" />
<text  x="847.65" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="10.6" y="1941" width="0.2" height="15.0" fill="rgb(205,196,27)" rx="2" ry="2" />
<text  x="13.60" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="182.1" y="1941" width="0.2" height="15.0" fill="rgb(226,99,26)" rx="2" ry="2" />
<text  x="185.08" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="595.2" y="1765" width="0.2" height="15.0" fill="rgb(252,79,22)" rx="2" ry="2" />
<text  x="598.21" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="480.6" y="1957" width="0.2" height="15.0" fill="rgb(219,176,10)" rx="2" ry="2" />
<text  x="483.56" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (6 samples, 0.10%)</title><rect x="988.6" y="1909" width="1.2" height="15.0" fill="rgb(241,115,8)" rx="2" ry="2" />
<text  x="991.61" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (10 samples, 0.17%)</title><rect x="181.1" y="1989" width="2.0" height="15.0" fill="rgb(209,196,31)" rx="2" ry="2" />
<text  x="184.08" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="598.0" y="1829" width="1.0" height="15.0" fill="rgb(214,215,9)" rx="2" ry="2" />
<text  x="601.01" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="377.7" y="1797" width="0.2" height="15.0" fill="rgb(226,12,23)" rx="2" ry="2" />
<text  x="380.68" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="644.7" y="1973" width="0.6" height="15.0" fill="rgb(243,130,14)" rx="2" ry="2" />
<text  x="647.66" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (3 samples, 0.05%)</title><rect x="159.1" y="1941" width="0.6" height="15.0" fill="rgb(211,48,9)" rx="2" ry="2" />
<text  x="162.14" y="1951.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="618.7" y="1941" width="0.2" height="15.0" fill="rgb(206,153,18)" rx="2" ry="2" />
<text  x="621.74" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="404.6" y="1765" width="0.2" height="15.0" fill="rgb(249,195,18)" rx="2" ry="2" />
<text  x="407.60" y="1775.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="10.4" y="2053" width="0.2" height="15.0" fill="rgb(235,91,52)" rx="2" ry="2" />
<text  x="13.40" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="562.1" y="1893" width="0.2" height="15.0" fill="rgb(242,114,10)" rx="2" ry="2" />
<text  x="565.12" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="545.2" y="1733" width="0.2" height="15.0" fill="rgb(252,176,52)" rx="2" ry="2" />
<text  x="548.17" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="534.2" y="1893" width="0.2" height="15.0" fill="rgb(233,172,48)" rx="2" ry="2" />
<text  x="537.20" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.9" y="1781" width="0.2" height="15.0" fill="rgb(210,161,10)" rx="2" ry="2" />
<text  x="160.95" y="1791.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="124.7" y="1877" width="0.1" height="15.0" fill="rgb(249,180,26)" rx="2" ry="2" />
<text  x="127.65" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1126.8" y="1829" width="0.2" height="15.0" fill="rgb(250,134,36)" rx="2" ry="2" />
<text  x="1129.79" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="479.0" y="1941" width="0.2" height="15.0" fill="rgb(239,63,20)" rx="2" ry="2" />
<text  x="481.97" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="675.0" y="1909" width="0.6" height="15.0" fill="rgb(220,175,25)" rx="2" ry="2" />
<text  x="677.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="40.1" y="1749" width="0.2" height="15.0" fill="rgb(252,159,1)" rx="2" ry="2" />
<text  x="43.11" y="1759.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="1049.4" y="1973" width="0.6" height="15.0" fill="rgb(252,172,43)" rx="2" ry="2" />
<text  x="1052.43" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="135.0" y="1957" width="1.2" height="15.0" fill="rgb(229,187,39)" rx="2" ry="2" />
<text  x="138.02" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="991.6" y="1909" width="0.4" height="15.0" fill="rgb(218,107,5)" rx="2" ry="2" />
<text  x="994.61" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.17%)</title><rect x="18.8" y="1909" width="2.0" height="15.0" fill="rgb(246,15,34)" rx="2" ry="2" />
<text  x="21.77" y="1919.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1119.8" y="1669" width="0.2" height="15.0" fill="rgb(234,44,30)" rx="2" ry="2" />
<text  x="1122.81" y="1679.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="309.9" y="1765" width="0.6" height="15.0" fill="rgb(242,134,48)" rx="2" ry="2" />
<text  x="312.89" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="746.2" y="1781" width="0.4" height="15.0" fill="rgb(246,33,36)" rx="2" ry="2" />
<text  x="749.15" y="1791.5" ></text>
</g>
<g >
<title>sock_recvmsg (331 samples, 5.59%)</title><rect x="1050.6" y="1973" width="66.0" height="15.0" fill="rgb(224,146,10)" rx="2" ry="2" />
<text  x="1053.63" y="1983.5" >sock_re..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="901.7" y="1973" width="0.2" height="15.0" fill="rgb(224,83,21)" rx="2" ry="2" />
<text  x="904.68" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="254.5" y="1893" width="0.4" height="15.0" fill="rgb(240,78,52)" rx="2" ry="2" />
<text  x="257.45" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1189.8" y="2005" width="0.2" height="15.0" fill="rgb(223,51,8)" rx="2" ry="2" />
<text  x="1192.80" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="540.2" y="1973" width="0.2" height="15.0" fill="rgb(238,196,18)" rx="2" ry="2" />
<text  x="543.18" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (2 samples, 0.03%)</title><rect x="704.7" y="2021" width="0.4" height="15.0" fill="rgb(215,34,29)" rx="2" ry="2" />
<text  x="707.68" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="225.9" y="1621" width="0.2" height="15.0" fill="rgb(216,62,10)" rx="2" ry="2" />
<text  x="228.94" y="1631.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (8 samples, 0.14%)</title><rect x="570.1" y="2005" width="1.6" height="15.0" fill="rgb(212,137,1)" rx="2" ry="2" />
<text  x="573.09" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="865.8" y="1957" width="0.4" height="15.0" fill="rgb(247,229,14)" rx="2" ry="2" />
<text  x="868.79" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1013.1" y="1925" width="0.2" height="15.0" fill="rgb(227,51,23)" rx="2" ry="2" />
<text  x="1016.14" y="1935.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="149.8" y="1637" width="0.2" height="15.0" fill="rgb(235,130,4)" rx="2" ry="2" />
<text  x="152.77" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1073.6" y="1813" width="0.2" height="15.0" fill="rgb(250,188,37)" rx="2" ry="2" />
<text  x="1076.56" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="640.5" y="1749" width="0.2" height="15.0" fill="rgb(229,107,44)" rx="2" ry="2" />
<text  x="643.48" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="11.2" y="1829" width="0.2" height="15.0" fill="rgb(247,216,45)" rx="2" ry="2" />
<text  x="14.20" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1121.0" y="2021" width="0.8" height="15.0" fill="rgb(251,186,1)" rx="2" ry="2" />
<text  x="1124.01" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="679.8" y="2005" width="0.2" height="15.0" fill="rgb(222,143,32)" rx="2" ry="2" />
<text  x="682.76" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="640.5" y="1701" width="0.2" height="15.0" fill="rgb(232,68,38)" rx="2" ry="2" />
<text  x="643.48" y="1711.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (12 samples, 0.20%)</title><rect x="505.9" y="1893" width="2.4" height="15.0" fill="rgb(243,41,49)" rx="2" ry="2" />
<text  x="508.89" y="1903.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="324.4" y="1493" width="0.2" height="15.0" fill="rgb(249,70,52)" rx="2" ry="2" />
<text  x="327.44" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="782.2" y="1461" width="0.2" height="15.0" fill="rgb(235,193,27)" rx="2" ry="2" />
<text  x="785.24" y="1471.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="478.2" y="1973" width="0.2" height="15.0" fill="rgb(249,226,3)" rx="2" ry="2" />
<text  x="481.17" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="615.8" y="1829" width="0.2" height="15.0" fill="rgb(206,112,50)" rx="2" ry="2" />
<text  x="618.75" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (3 samples, 0.05%)</title><rect x="95.7" y="2021" width="0.6" height="15.0" fill="rgb(212,194,22)" rx="2" ry="2" />
<text  x="98.74" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="171.1" y="1989" width="0.2" height="15.0" fill="rgb(222,221,13)" rx="2" ry="2" />
<text  x="174.11" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="372.1" y="1573" width="0.2" height="15.0" fill="rgb(246,19,8)" rx="2" ry="2" />
<text  x="375.10" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="951.3" y="1973" width="0.2" height="15.0" fill="rgb(206,70,24)" rx="2" ry="2" />
<text  x="954.33" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="644.9" y="1925" width="0.2" height="15.0" fill="rgb(245,170,41)" rx="2" ry="2" />
<text  x="647.86" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="171.3" y="2005" width="0.2" height="15.0" fill="rgb(252,198,40)" rx="2" ry="2" />
<text  x="174.31" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1003.4" y="2005" width="0.2" height="15.0" fill="rgb(234,90,23)" rx="2" ry="2" />
<text  x="1006.37" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="158.3" y="1797" width="0.2" height="15.0" fill="rgb(216,175,31)" rx="2" ry="2" />
<text  x="161.35" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="562.1" y="1813" width="0.2" height="15.0" fill="rgb(214,163,37)" rx="2" ry="2" />
<text  x="565.12" y="1823.5" ></text>
</g>
<g >
<title>sock_alloc_inode (33 samples, 0.56%)</title><rect x="391.6" y="1909" width="6.6" height="15.0" fill="rgb(252,195,49)" rx="2" ry="2" />
<text  x="394.64" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="991.0" y="1893" width="0.4" height="15.0" fill="rgb(245,134,19)" rx="2" ry="2" />
<text  x="994.01" y="1903.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="160.3" y="1701" width="0.2" height="15.0" fill="rgb(209,117,13)" rx="2" ry="2" />
<text  x="163.34" y="1711.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="648.9" y="1701" width="0.2" height="15.0" fill="rgb(237,3,10)" rx="2" ry="2" />
<text  x="651.85" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="890.5" y="1909" width="0.2" height="15.0" fill="rgb(250,0,54)" rx="2" ry="2" />
<text  x="893.51" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="412.0" y="1765" width="0.2" height="15.0" fill="rgb(247,3,15)" rx="2" ry="2" />
<text  x="414.97" y="1775.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.19%)</title><rect x="18.6" y="2053" width="2.2" height="15.0" fill="rgb(229,203,20)" rx="2" ry="2" />
<text  x="21.57" y="2063.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="283.0" y="1813" width="0.2" height="15.0" fill="rgb(240,37,30)" rx="2" ry="2" />
<text  x="285.97" y="1823.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1180.8" y="1765" width="0.2" height="15.0" fill="rgb(208,187,43)" rx="2" ry="2" />
<text  x="1183.83" y="1775.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1097.9" y="1909" width="0.2" height="15.0" fill="rgb(244,151,39)" rx="2" ry="2" />
<text  x="1100.88" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (116 samples, 1.96%)</title><rect x="286.8" y="1765" width="23.1" height="15.0" fill="rgb(245,32,33)" rx="2" ry="2" />
<text  x="289.76" y="1775.5" >i..</text>
</g>
<g >
<title>std::__addressof&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.8" y="1893" width="0.2" height="15.0" fill="rgb(214,175,3)" rx="2" ry="2" />
<text  x="940.77" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="576.9" y="1925" width="0.2" height="15.0" fill="rgb(237,178,43)" rx="2" ry="2" />
<text  x="579.87" y="1935.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="190.3" y="2021" width="0.1" height="15.0" fill="rgb(238,0,0)" rx="2" ry="2" />
<text  x="193.25" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (1 samples, 0.02%)</title><rect x="1140.9" y="2021" width="0.2" height="15.0" fill="rgb(223,33,2)" rx="2" ry="2" />
<text  x="1143.95" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="136.2" y="1957" width="1.0" height="15.0" fill="rgb(248,114,18)" rx="2" ry="2" />
<text  x="139.21" y="1967.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="694.5" y="1877" width="0.8" height="15.0" fill="rgb(218,77,23)" rx="2" ry="2" />
<text  x="697.51" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="542.0" y="1765" width="0.2" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="544.98" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="746.2" y="1669" width="0.4" height="15.0" fill="rgb(225,38,45)" rx="2" ry="2" />
<text  x="749.15" y="1679.5" ></text>
</g>
<g >
<title>__GI___setsockopt (8 samples, 0.14%)</title><rect x="211.6" y="1957" width="1.6" height="15.0" fill="rgb(225,27,45)" rx="2" ry="2" />
<text  x="214.58" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="531.2" y="2005" width="2.2" height="15.0" fill="rgb(233,133,19)" rx="2" ry="2" />
<text  x="534.21" y="2015.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2037" width="0.4" height="15.0" fill="rgb(229,176,42)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="776.5" y="1653" width="0.2" height="15.0" fill="rgb(222,211,26)" rx="2" ry="2" />
<text  x="779.46" y="1663.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1019.3" y="1749" width="0.2" height="15.0" fill="rgb(219,108,21)" rx="2" ry="2" />
<text  x="1022.32" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="118.5" y="53" width="0.2" height="15.0" fill="rgb(217,92,18)" rx="2" ry="2" />
<text  x="121.47" y="63.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="256.4" y="1573" width="0.2" height="15.0" fill="rgb(210,12,14)" rx="2" ry="2" />
<text  x="259.45" y="1583.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="53.9" y="1941" width="0.2" height="15.0" fill="rgb(212,181,26)" rx="2" ry="2" />
<text  x="56.87" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="549.6" y="1957" width="0.6" height="15.0" fill="rgb(215,197,15)" rx="2" ry="2" />
<text  x="552.55" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1000.2" y="1941" width="0.2" height="15.0" fill="rgb(218,24,51)" rx="2" ry="2" />
<text  x="1003.18" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1180.8" y="1829" width="0.2" height="15.0" fill="rgb(252,147,10)" rx="2" ry="2" />
<text  x="1183.83" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1068.0" y="1893" width="0.2" height="15.0" fill="rgb(223,212,32)" rx="2" ry="2" />
<text  x="1070.97" y="1903.5" ></text>
</g>
<g >
<title>dentry_free (8 samples, 0.14%)</title><rect x="731.6" y="1749" width="1.6" height="15.0" fill="rgb(247,55,24)" rx="2" ry="2" />
<text  x="734.60" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="97.9" y="2005" width="0.2" height="15.0" fill="rgb(216,91,51)" rx="2" ry="2" />
<text  x="100.93" y="2015.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="939.8" y="1829" width="0.2" height="15.0" fill="rgb(244,117,22)" rx="2" ry="2" />
<text  x="942.76" y="1839.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (361 samples, 6.10%)</title><rect x="1048.0" y="1989" width="72.0" height="15.0" fill="rgb(220,71,10)" rx="2" ry="2" />
<text  x="1051.03" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="674.8" y="1749" width="0.2" height="15.0" fill="rgb(220,23,8)" rx="2" ry="2" />
<text  x="677.77" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="153.4" y="1893" width="0.2" height="15.0" fill="rgb(233,117,37)" rx="2" ry="2" />
<text  x="156.36" y="1903.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="534.2" y="1605" width="0.2" height="15.0" fill="rgb(210,212,52)" rx="2" ry="2" />
<text  x="537.20" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.9" y="1957" width="0.2" height="15.0" fill="rgb(206,167,29)" rx="2" ry="2" />
<text  x="173.91" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="32.1" y="1717" width="0.2" height="15.0" fill="rgb(233,26,17)" rx="2" ry="2" />
<text  x="35.13" y="1727.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23 samples, 0.39%)</title><rect x="1121.8" y="2037" width="4.6" height="15.0" fill="rgb(218,137,50)" rx="2" ry="2" />
<text  x="1124.81" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="256.4" y="1813" width="0.2" height="15.0" fill="rgb(208,135,21)" rx="2" ry="2" />
<text  x="259.45" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (1 samples, 0.02%)</title><rect x="653.0" y="2021" width="0.2" height="15.0" fill="rgb(241,14,22)" rx="2" ry="2" />
<text  x="656.04" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1189.8" y="2037" width="0.2" height="15.0" fill="rgb(217,165,26)" rx="2" ry="2" />
<text  x="1192.80" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="40.1" y="1861" width="0.2" height="15.0" fill="rgb(245,42,41)" rx="2" ry="2" />
<text  x="43.11" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="256.4" y="1701" width="0.2" height="15.0" fill="rgb(254,214,30)" rx="2" ry="2" />
<text  x="259.45" y="1711.5" ></text>
</g>
<g >
<title>__dentry_kill (65 samples, 1.10%)</title><rect x="730.8" y="1765" width="13.0" height="15.0" fill="rgb(208,88,26)" rx="2" ry="2" />
<text  x="733.80" y="1775.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="161.1" y="1701" width="0.2" height="15.0" fill="rgb(227,42,30)" rx="2" ry="2" />
<text  x="164.14" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="216.6" y="1845" width="0.2" height="15.0" fill="rgb(230,72,19)" rx="2" ry="2" />
<text  x="219.57" y="1855.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="767.9" y="1701" width="0.2" height="15.0" fill="rgb(233,43,33)" rx="2" ry="2" />
<text  x="770.89" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="648.9" y="1973" width="0.2" height="15.0" fill="rgb(231,170,39)" rx="2" ry="2" />
<text  x="651.85" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="992.4" y="1989" width="0.2" height="15.0" fill="rgb(215,138,17)" rx="2" ry="2" />
<text  x="995.40" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1157.5" y="1765" width="0.2" height="15.0" fill="rgb(241,194,33)" rx="2" ry="2" />
<text  x="1160.50" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1013.1" y="1861" width="0.2" height="15.0" fill="rgb(219,115,5)" rx="2" ry="2" />
<text  x="1016.14" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="33.3" y="1957" width="0.2" height="15.0" fill="rgb(213,69,45)" rx="2" ry="2" />
<text  x="36.33" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.08%)</title><rect x="287.4" y="1749" width="1.0" height="15.0" fill="rgb(213,215,19)" rx="2" ry="2" />
<text  x="290.35" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1637" width="0.2" height="15.0" fill="rgb(254,111,53)" rx="2" ry="2" />
<text  x="614.37" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="866.6" y="1973" width="0.2" height="15.0" fill="rgb(212,69,4)" rx="2" ry="2" />
<text  x="869.59" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="547.2" y="1781" width="0.2" height="15.0" fill="rgb(253,64,47)" rx="2" ry="2" />
<text  x="550.16" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="57.5" y="1749" width="0.2" height="15.0" fill="rgb(229,50,54)" rx="2" ry="2" />
<text  x="60.46" y="1759.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="309.3" y="1653" width="0.4" height="15.0" fill="rgb(235,191,41)" rx="2" ry="2" />
<text  x="312.29" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (4 samples, 0.07%)</title><rect x="146.2" y="1909" width="0.8" height="15.0" fill="rgb(224,152,52)" rx="2" ry="2" />
<text  x="149.18" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="435.9" y="1941" width="0.2" height="15.0" fill="rgb(210,33,31)" rx="2" ry="2" />
<text  x="438.90" y="1951.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="745.8" y="1797" width="0.2" height="15.0" fill="rgb(244,143,43)" rx="2" ry="2" />
<text  x="748.76" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="665.2" y="1669" width="0.2" height="15.0" fill="rgb(244,165,47)" rx="2" ry="2" />
<text  x="668.20" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.4" y="1893" width="0.2" height="15.0" fill="rgb(249,59,43)" rx="2" ry="2" />
<text  x="544.38" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="40.1" y="1765" width="0.2" height="15.0" fill="rgb(235,137,38)" rx="2" ry="2" />
<text  x="43.11" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="324.4" y="1509" width="0.4" height="15.0" fill="rgb(208,83,20)" rx="2" ry="2" />
<text  x="327.44" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="118.9" y="149" width="0.2" height="15.0" fill="rgb(207,108,35)" rx="2" ry="2" />
<text  x="121.87" y="159.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="189.9" y="1813" width="0.2" height="15.0" fill="rgb(252,32,17)" rx="2" ry="2" />
<text  x="192.85" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="118.9" y="245" width="0.2" height="15.0" fill="rgb(230,84,36)" rx="2" ry="2" />
<text  x="121.87" y="255.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="817.5" y="1429" width="0.2" height="15.0" fill="rgb(249,155,23)" rx="2" ry="2" />
<text  x="820.54" y="1439.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (28 samples, 0.47%)</title><rect x="986.6" y="1973" width="5.6" height="15.0" fill="rgb(251,143,52)" rx="2" ry="2" />
<text  x="989.62" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="386.7" y="1509" width="0.2" height="15.0" fill="rgb(246,189,36)" rx="2" ry="2" />
<text  x="389.65" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (9 samples, 0.15%)</title><rect x="963.9" y="2037" width="1.8" height="15.0" fill="rgb(230,223,16)" rx="2" ry="2" />
<text  x="966.89" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="377.5" y="1797" width="0.2" height="15.0" fill="rgb(245,136,11)" rx="2" ry="2" />
<text  x="380.48" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="225.9" y="1557" width="0.2" height="15.0" fill="rgb(208,185,18)" rx="2" ry="2" />
<text  x="228.94" y="1567.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="453.8" y="1589" width="0.2" height="15.0" fill="rgb(254,93,28)" rx="2" ry="2" />
<text  x="456.85" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="674.8" y="1797" width="0.2" height="15.0" fill="rgb(225,110,1)" rx="2" ry="2" />
<text  x="677.77" y="1807.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="481.8" y="2005" width="0.4" height="15.0" fill="rgb(237,127,34)" rx="2" ry="2" />
<text  x="484.76" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.9" y="1893" width="0.2" height="15.0" fill="rgb(245,146,11)" rx="2" ry="2" />
<text  x="887.93" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="505.3" y="1813" width="0.4" height="15.0" fill="rgb(208,0,9)" rx="2" ry="2" />
<text  x="508.29" y="1823.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="512.9" y="1909" width="0.2" height="15.0" fill="rgb(223,160,40)" rx="2" ry="2" />
<text  x="515.87" y="1919.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.03%)</title><rect x="745.4" y="1797" width="0.4" height="15.0" fill="rgb(247,194,6)" rx="2" ry="2" />
<text  x="748.36" y="1807.5" ></text>
</g>
<g >
<title>sch_direct_xmit (59 samples, 1.00%)</title><rect x="297.9" y="1701" width="11.8" height="15.0" fill="rgb(231,42,3)" rx="2" ry="2" />
<text  x="300.92" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="66.4" y="1877" width="0.8" height="15.0" fill="rgb(228,207,32)" rx="2" ry="2" />
<text  x="69.43" y="1887.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="1018.7" y="2037" width="0.2" height="15.0" fill="rgb(207,133,44)" rx="2" ry="2" />
<text  x="1021.72" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="626.3" y="2005" width="0.2" height="15.0" fill="rgb(242,63,39)" rx="2" ry="2" />
<text  x="629.32" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="189.9" y="1893" width="0.2" height="15.0" fill="rgb(207,144,48)" rx="2" ry="2" />
<text  x="192.85" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (8 samples, 0.14%)</title><rect x="574.7" y="2005" width="1.6" height="15.0" fill="rgb(232,44,10)" rx="2" ry="2" />
<text  x="577.68" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="158.3" y="1877" width="0.2" height="15.0" fill="rgb(210,212,45)" rx="2" ry="2" />
<text  x="161.35" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="274.4" y="1749" width="0.2" height="15.0" fill="rgb(222,181,33)" rx="2" ry="2" />
<text  x="277.39" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="615.8" y="1605" width="0.2" height="15.0" fill="rgb(235,163,9)" rx="2" ry="2" />
<text  x="618.75" y="1615.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="434.9" y="1861" width="0.6" height="15.0" fill="rgb(246,40,30)" rx="2" ry="2" />
<text  x="437.90" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="656.8" y="2005" width="0.2" height="15.0" fill="rgb(223,202,46)" rx="2" ry="2" />
<text  x="659.83" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="319.7" y="1813" width="0.4" height="15.0" fill="rgb(232,143,39)" rx="2" ry="2" />
<text  x="322.66" y="1823.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1101.1" y="1877" width="0.2" height="15.0" fill="rgb(236,19,29)" rx="2" ry="2" />
<text  x="1104.07" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="224.1" y="1573" width="0.2" height="15.0" fill="rgb(244,27,53)" rx="2" ry="2" />
<text  x="227.15" y="1583.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="273.4" y="1813" width="1.0" height="15.0" fill="rgb(226,209,21)" rx="2" ry="2" />
<text  x="276.40" y="1823.5" ></text>
</g>
<g >
<title>ip_queue_xmit (138 samples, 2.33%)</title><rect x="774.9" y="1669" width="27.5" height="15.0" fill="rgb(211,180,22)" rx="2" ry="2" />
<text  x="777.87" y="1679.5" >i..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="581.5" y="2021" width="0.2" height="15.0" fill="rgb(225,225,13)" rx="2" ry="2" />
<text  x="584.46" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="545.2" y="1781" width="0.2" height="15.0" fill="rgb(250,78,22)" rx="2" ry="2" />
<text  x="548.17" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="662.8" y="1973" width="0.2" height="15.0" fill="rgb(251,12,47)" rx="2" ry="2" />
<text  x="665.81" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="110.7" y="37" width="0.4" height="15.0" fill="rgb(247,29,25)" rx="2" ry="2" />
<text  x="113.69" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="38.5" y="1989" width="0.2" height="15.0" fill="rgb(219,228,17)" rx="2" ry="2" />
<text  x="41.51" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="586.0" y="1829" width="0.2" height="15.0" fill="rgb(252,202,43)" rx="2" ry="2" />
<text  x="589.04" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (15 samples, 0.25%)</title><rect x="1010.3" y="2005" width="3.0" height="15.0" fill="rgb(233,21,17)" rx="2" ry="2" />
<text  x="1013.35" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="321.3" y="1765" width="0.1" height="15.0" fill="rgb(207,213,34)" rx="2" ry="2" />
<text  x="324.25" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="886.1" y="1957" width="0.2" height="15.0" fill="rgb(222,86,46)" rx="2" ry="2" />
<text  x="889.13" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1013.1" y="1765" width="0.2" height="15.0" fill="rgb(212,106,22)" rx="2" ry="2" />
<text  x="1016.14" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="10.2" y="1829" width="0.2" height="15.0" fill="rgb(207,31,7)" rx="2" ry="2" />
<text  x="13.20" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="215.8" y="1877" width="1.0" height="15.0" fill="rgb(242,21,24)" rx="2" ry="2" />
<text  x="218.77" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="827.5" y="1701" width="0.2" height="15.0" fill="rgb(221,40,27)" rx="2" ry="2" />
<text  x="830.51" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (26 samples, 0.44%)</title><rect x="647.7" y="2021" width="5.1" height="15.0" fill="rgb(248,229,35)" rx="2" ry="2" />
<text  x="650.65" y="2031.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="518.8" y="1797" width="0.8" height="15.0" fill="rgb(211,69,7)" rx="2" ry="2" />
<text  x="521.85" y="1807.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="811.2" y="1669" width="0.2" height="15.0" fill="rgb(219,80,40)" rx="2" ry="2" />
<text  x="814.16" y="1679.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="729.6" y="1781" width="0.4" height="15.0" fill="rgb(210,127,15)" rx="2" ry="2" />
<text  x="732.60" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="914.4" y="2005" width="0.2" height="15.0" fill="rgb(205,226,44)" rx="2" ry="2" />
<text  x="917.44" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="371.1" y="1925" width="0.8" height="15.0" fill="rgb(206,121,47)" rx="2" ry="2" />
<text  x="374.10" y="1935.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="400.4" y="1877" width="0.4" height="15.0" fill="rgb(249,170,29)" rx="2" ry="2" />
<text  x="403.41" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="224.1" y="1829" width="0.2" height="15.0" fill="rgb(227,83,47)" rx="2" ry="2" />
<text  x="227.15" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="32.1" y="1925" width="0.2" height="15.0" fill="rgb(226,69,45)" rx="2" ry="2" />
<text  x="35.13" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.7" y="1845" width="0.2" height="15.0" fill="rgb(210,50,40)" rx="2" ry="2" />
<text  x="887.73" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="858.4" y="1893" width="0.2" height="15.0" fill="rgb(252,9,10)" rx="2" ry="2" />
<text  x="861.41" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="901.9" y="1989" width="0.4" height="15.0" fill="rgb(214,211,38)" rx="2" ry="2" />
<text  x="904.88" y="1999.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="295.3" y="1701" width="0.4" height="15.0" fill="rgb(249,112,39)" rx="2" ry="2" />
<text  x="298.33" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="225.9" y="1637" width="0.2" height="15.0" fill="rgb(253,40,10)" rx="2" ry="2" />
<text  x="228.94" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="848.8" y="1941" width="0.4" height="15.0" fill="rgb(239,185,30)" rx="2" ry="2" />
<text  x="851.84" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="697.9" y="1973" width="0.2" height="15.0" fill="rgb(213,30,24)" rx="2" ry="2" />
<text  x="700.90" y="1983.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="123.7" y="1781" width="0.2" height="15.0" fill="rgb(235,215,29)" rx="2" ry="2" />
<text  x="126.65" y="1791.5" ></text>
</g>
<g >
<title>sk_stream_kill_queues (1 samples, 0.02%)</title><rect x="1049.8" y="1653" width="0.2" height="15.0" fill="rgb(237,229,22)" rx="2" ry="2" />
<text  x="1052.83" y="1663.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="690.7" y="1877" width="0.4" height="15.0" fill="rgb(209,128,18)" rx="2" ry="2" />
<text  x="693.72" y="1887.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="398.0" y="1893" width="0.2" height="15.0" fill="rgb(246,120,16)" rx="2" ry="2" />
<text  x="401.02" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="481.0" y="1669" width="0.2" height="15.0" fill="rgb(224,128,49)" rx="2" ry="2" />
<text  x="483.96" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1003.8" y="2005" width="0.8" height="15.0" fill="rgb(238,134,11)" rx="2" ry="2" />
<text  x="1006.77" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="76.4" y="1701" width="0.2" height="15.0" fill="rgb(235,87,36)" rx="2" ry="2" />
<text  x="79.40" y="1711.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1034.3" y="1909" width="0.2" height="15.0" fill="rgb(233,136,37)" rx="2" ry="2" />
<text  x="1037.28" y="1919.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="482.8" y="1557" width="0.2" height="15.0" fill="rgb(239,135,0)" rx="2" ry="2" />
<text  x="485.76" y="1567.5" ></text>
</g>
<g >
<title>alloc_file (32 samples, 0.54%)</title><rect x="398.8" y="1941" width="6.4" height="15.0" fill="rgb(212,50,48)" rx="2" ry="2" />
<text  x="401.81" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="481.0" y="1829" width="0.4" height="15.0" fill="rgb(216,113,37)" rx="2" ry="2" />
<text  x="483.96" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="78.4" y="1813" width="0.2" height="15.0" fill="rgb(212,222,27)" rx="2" ry="2" />
<text  x="81.39" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="972.7" y="1925" width="0.2" height="15.0" fill="rgb(239,122,38)" rx="2" ry="2" />
<text  x="975.66" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="160.7" y="1941" width="0.2" height="15.0" fill="rgb(225,94,44)" rx="2" ry="2" />
<text  x="163.74" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="400.4" y="1893" width="0.4" height="15.0" fill="rgb(223,106,42)" rx="2" ry="2" />
<text  x="403.41" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="386.7" y="1701" width="0.2" height="15.0" fill="rgb(207,140,5)" rx="2" ry="2" />
<text  x="389.65" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="953.7" y="1989" width="0.2" height="15.0" fill="rgb(245,146,26)" rx="2" ry="2" />
<text  x="956.72" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1461" width="15.8" height="15.0" fill="rgb(208,221,2)" rx="2" ry="2" />
<text  x="107.71" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="174.1" y="1957" width="0.2" height="15.0" fill="rgb(246,36,2)" rx="2" ry="2" />
<text  x="177.10" y="1967.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="1179.0" y="2053" width="0.6" height="15.0" fill="rgb(233,199,38)" rx="2" ry="2" />
<text  x="1182.03" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="756.5" y="1717" width="0.4" height="15.0" fill="rgb(207,113,2)" rx="2" ry="2" />
<text  x="759.52" y="1727.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (3 samples, 0.05%)</title><rect x="585.4" y="1909" width="0.6" height="15.0" fill="rgb(244,186,33)" rx="2" ry="2" />
<text  x="588.44" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="173.9" y="1957" width="0.2" height="15.0" fill="rgb(225,124,53)" rx="2" ry="2" />
<text  x="176.90" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="189.9" y="1973" width="0.2" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="192.85" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="228.7" y="1877" width="0.2" height="15.0" fill="rgb(207,94,39)" rx="2" ry="2" />
<text  x="231.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_close (384 samples, 6.49%)</title><rect x="751.9" y="1749" width="76.6" height="15.0" fill="rgb(215,162,38)" rx="2" ry="2" />
<text  x="754.94" y="1759.5" >tcp_close</text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="337.8" y="2021" width="0.4" height="15.0" fill="rgb(234,197,11)" rx="2" ry="2" />
<text  x="340.80" y="2031.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="899.9" y="2005" width="0.4" height="15.0" fill="rgb(223,176,16)" rx="2" ry="2" />
<text  x="902.89" y="2015.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="477.4" y="1925" width="0.2" height="15.0" fill="rgb(214,141,26)" rx="2" ry="2" />
<text  x="480.37" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="93.7" y="1973" width="0.2" height="15.0" fill="rgb(213,94,33)" rx="2" ry="2" />
<text  x="96.74" y="1983.5" ></text>
</g>
<g >
<title>mutex_lock (4 samples, 0.07%)</title><rect x="478.4" y="1973" width="0.8" height="15.0" fill="rgb(225,143,28)" rx="2" ry="2" />
<text  x="481.37" y="1983.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="293.1" y="1669" width="0.2" height="15.0" fill="rgb(240,62,52)" rx="2" ry="2" />
<text  x="296.14" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (47 samples, 0.79%)</title><rect x="1101.9" y="1621" width="9.3" height="15.0" fill="rgb(239,103,34)" rx="2" ry="2" />
<text  x="1104.87" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="863.8" y="1925" width="0.2" height="15.0" fill="rgb(238,23,25)" rx="2" ry="2" />
<text  x="866.80" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="641.3" y="1925" width="0.2" height="15.0" fill="rgb(224,42,38)" rx="2" ry="2" />
<text  x="644.27" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="824.9" y="1653" width="0.2" height="15.0" fill="rgb(232,104,28)" rx="2" ry="2" />
<text  x="827.91" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="697.9" y="1781" width="0.2" height="15.0" fill="rgb(221,149,23)" rx="2" ry="2" />
<text  x="700.90" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="832.3" y="1861" width="0.2" height="15.0" fill="rgb(213,183,34)" rx="2" ry="2" />
<text  x="835.29" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (22 samples, 0.37%)</title><rect x="607.2" y="1893" width="4.4" height="15.0" fill="rgb(217,104,16)" rx="2" ry="2" />
<text  x="610.18" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="183.9" y="2021" width="0.2" height="15.0" fill="rgb(222,42,47)" rx="2" ry="2" />
<text  x="186.87" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="256.4" y="1621" width="0.2" height="15.0" fill="rgb(217,20,20)" rx="2" ry="2" />
<text  x="259.45" y="1631.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="158.3" y="1813" width="0.2" height="15.0" fill="rgb(242,34,1)" rx="2" ry="2" />
<text  x="161.35" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="247.1" y="1925" width="0.2" height="15.0" fill="rgb(254,15,28)" rx="2" ry="2" />
<text  x="250.08" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (4 samples, 0.07%)</title><rect x="308.9" y="1685" width="0.8" height="15.0" fill="rgb(207,47,30)" rx="2" ry="2" />
<text  x="311.89" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="310.3" y="1461" width="0.2" height="15.0" fill="rgb(212,227,21)" rx="2" ry="2" />
<text  x="313.28" y="1471.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="862.8" y="1973" width="0.6" height="15.0" fill="rgb(226,12,54)" rx="2" ry="2" />
<text  x="865.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="104.9" y="1189" width="14.6" height="15.0" fill="rgb(223,56,46)" rx="2" ry="2" />
<text  x="107.91" y="1199.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="1137.2" y="1925" width="0.2" height="15.0" fill="rgb(254,122,6)" rx="2" ry="2" />
<text  x="1140.16" y="1935.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="102.9" y="1941" width="0.2" height="15.0" fill="rgb(231,42,20)" rx="2" ry="2" />
<text  x="105.92" y="1951.5" ></text>
</g>
<g >
<title>cpu_needs_another_gp (1 samples, 0.02%)</title><rect x="92.7" y="1877" width="0.2" height="15.0" fill="rgb(246,110,33)" rx="2" ry="2" />
<text  x="95.75" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="232.3" y="2037" width="0.6" height="15.0" fill="rgb(251,184,48)" rx="2" ry="2" />
<text  x="235.32" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="118.9" y="69" width="0.2" height="15.0" fill="rgb(241,188,15)" rx="2" ry="2" />
<text  x="121.87" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.9" y="1909" width="0.2" height="15.0" fill="rgb(240,59,27)" rx="2" ry="2" />
<text  x="887.93" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="824.9" y="1685" width="0.2" height="15.0" fill="rgb(214,65,1)" rx="2" ry="2" />
<text  x="827.91" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="982.0" y="1813" width="0.2" height="15.0" fill="rgb(230,203,35)" rx="2" ry="2" />
<text  x="985.03" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="189.9" y="1925" width="0.2" height="15.0" fill="rgb(253,220,15)" rx="2" ry="2" />
<text  x="192.85" y="1935.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (34 samples, 0.57%)</title><rect x="818.3" y="1717" width="6.8" height="15.0" fill="rgb(224,83,20)" rx="2" ry="2" />
<text  x="821.33" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="939.8" y="1925" width="0.2" height="15.0" fill="rgb(246,131,14)" rx="2" ry="2" />
<text  x="942.76" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.1" y="1877" width="0.2" height="15.0" fill="rgb(250,29,9)" rx="2" ry="2" />
<text  x="890.12" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="939.8" y="1909" width="0.2" height="15.0" fill="rgb(254,207,33)" rx="2" ry="2" />
<text  x="942.76" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (4 samples, 0.07%)</title><rect x="861.8" y="1989" width="0.8" height="15.0" fill="rgb(251,32,6)" rx="2" ry="2" />
<text  x="864.80" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.3" y="1989" width="0.2" height="15.0" fill="rgb(250,136,14)" rx="2" ry="2" />
<text  x="173.31" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="866.6" y="1749" width="0.2" height="15.0" fill="rgb(234,163,26)" rx="2" ry="2" />
<text  x="869.59" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (23 samples, 0.39%)</title><rect x="849.2" y="1941" width="4.6" height="15.0" fill="rgb(251,198,36)" rx="2" ry="2" />
<text  x="852.24" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (16 samples, 0.27%)</title><rect x="166.3" y="2005" width="3.2" height="15.0" fill="rgb(251,109,13)" rx="2" ry="2" />
<text  x="169.32" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="999.2" y="1909" width="0.2" height="15.0" fill="rgb(218,116,1)" rx="2" ry="2" />
<text  x="1002.18" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="224.1" y="1365" width="0.2" height="15.0" fill="rgb(211,47,9)" rx="2" ry="2" />
<text  x="227.15" y="1375.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (10 samples, 0.17%)</title><rect x="933.2" y="1893" width="2.0" height="15.0" fill="rgb(209,111,19)" rx="2" ry="2" />
<text  x="936.18" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="112.7" y="53" width="1.8" height="15.0" fill="rgb(209,106,45)" rx="2" ry="2" />
<text  x="115.69" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1156.3" y="1893" width="0.2" height="15.0" fill="rgb(235,5,54)" rx="2" ry="2" />
<text  x="1159.30" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (2 samples, 0.03%)</title><rect x="841.3" y="1925" width="0.4" height="15.0" fill="rgb(252,222,19)" rx="2" ry="2" />
<text  x="844.26" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="118.5" y="101" width="0.2" height="15.0" fill="rgb(209,146,28)" rx="2" ry="2" />
<text  x="121.47" y="111.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="340.0" y="1941" width="0.2" height="15.0" fill="rgb(211,103,0)" rx="2" ry="2" />
<text  x="342.99" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="955.9" y="2021" width="1.6" height="15.0" fill="rgb(254,185,28)" rx="2" ry="2" />
<text  x="958.91" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="849.4" y="1909" width="0.2" height="15.0" fill="rgb(210,170,24)" rx="2" ry="2" />
<text  x="852.44" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="17.6" y="1669" width="0.2" height="15.0" fill="rgb(206,205,36)" rx="2" ry="2" />
<text  x="20.58" y="1679.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="434.7" y="1861" width="0.2" height="15.0" fill="rgb(249,65,43)" rx="2" ry="2" />
<text  x="437.70" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (184 samples, 3.11%)</title><rect x="919.2" y="2037" width="36.7" height="15.0" fill="rgb(238,40,50)" rx="2" ry="2" />
<text  x="922.23" y="2047.5" >fac..</text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="853.4" y="1829" width="0.2" height="15.0" fill="rgb(251,146,32)" rx="2" ry="2" />
<text  x="856.43" y="1839.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="384.5" y="1909" width="0.2" height="15.0" fill="rgb(206,27,27)" rx="2" ry="2" />
<text  x="387.46" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="124.7" y="1781" width="0.1" height="15.0" fill="rgb(230,8,5)" rx="2" ry="2" />
<text  x="127.65" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="90.4" y="1973" width="0.2" height="15.0" fill="rgb(225,73,2)" rx="2" ry="2" />
<text  x="93.35" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="735.0" y="1701" width="0.6" height="15.0" fill="rgb(253,152,15)" rx="2" ry="2" />
<text  x="737.99" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="563.3" y="1749" width="0.6" height="15.0" fill="rgb(212,101,26)" rx="2" ry="2" />
<text  x="566.31" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="706.9" y="2037" width="0.2" height="15.0" fill="rgb(244,13,4)" rx="2" ry="2" />
<text  x="709.87" y="2047.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="76.0" y="1861" width="0.2" height="15.0" fill="rgb(237,223,9)" rx="2" ry="2" />
<text  x="79.00" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="55.5" y="1909" width="0.2" height="15.0" fill="rgb(235,189,11)" rx="2" ry="2" />
<text  x="58.46" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (2 samples, 0.03%)</title><rect x="900.5" y="2037" width="0.4" height="15.0" fill="rgb(232,110,52)" rx="2" ry="2" />
<text  x="903.48" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="547.2" y="1845" width="0.2" height="15.0" fill="rgb(211,77,26)" rx="2" ry="2" />
<text  x="550.16" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="78.4" y="1941" width="0.2" height="15.0" fill="rgb(208,150,51)" rx="2" ry="2" />
<text  x="81.39" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="605.8" y="1957" width="0.2" height="15.0" fill="rgb(253,137,17)" rx="2" ry="2" />
<text  x="608.78" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="142.4" y="1893" width="0.2" height="15.0" fill="rgb(253,155,18)" rx="2" ry="2" />
<text  x="145.40" y="1903.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="279.4" y="1813" width="0.2" height="15.0" fill="rgb(219,119,25)" rx="2" ry="2" />
<text  x="282.38" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="547.2" y="1717" width="0.2" height="15.0" fill="rgb(216,185,3)" rx="2" ry="2" />
<text  x="550.16" y="1727.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="372.1" y="1893" width="0.2" height="15.0" fill="rgb(242,200,16)" rx="2" ry="2" />
<text  x="375.10" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="274.4" y="1701" width="0.2" height="15.0" fill="rgb(223,170,11)" rx="2" ry="2" />
<text  x="277.39" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (107 samples, 1.81%)</title><rect x="509.9" y="2037" width="21.3" height="15.0" fill="rgb(241,62,53)" rx="2" ry="2" />
<text  x="512.87" y="2047.5" >f..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="17.6" y="1861" width="0.2" height="15.0" fill="rgb(212,204,48)" rx="2" ry="2" />
<text  x="20.58" y="1871.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1116.4" y="1957" width="0.2" height="15.0" fill="rgb(243,3,39)" rx="2" ry="2" />
<text  x="1119.42" y="1967.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="528.4" y="1957" width="0.8" height="15.0" fill="rgb(223,160,51)" rx="2" ry="2" />
<text  x="531.42" y="1967.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1175.8" y="2053" width="0.2" height="15.0" fill="rgb(251,50,5)" rx="2" ry="2" />
<text  x="1178.84" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="1171.1" y="1989" width="0.4" height="15.0" fill="rgb(223,2,32)" rx="2" ry="2" />
<text  x="1174.06" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="1121.6" y="1701" width="0.2" height="15.0" fill="rgb(252,47,18)" rx="2" ry="2" />
<text  x="1124.61" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1180.8" y="1909" width="0.2" height="15.0" fill="rgb(218,209,13)" rx="2" ry="2" />
<text  x="1183.83" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="481.0" y="1845" width="0.4" height="15.0" fill="rgb(239,99,48)" rx="2" ry="2" />
<text  x="483.96" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="927.0" y="1925" width="0.4" height="15.0" fill="rgb(215,119,30)" rx="2" ry="2" />
<text  x="930.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (2 samples, 0.03%)</title><rect x="1143.5" y="1973" width="0.4" height="15.0" fill="rgb(209,45,31)" rx="2" ry="2" />
<text  x="1146.54" y="1983.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="462.4" y="1461" width="0.2" height="15.0" fill="rgb(210,110,5)" rx="2" ry="2" />
<text  x="465.42" y="1471.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="67.2" y="1861" width="0.2" height="15.0" fill="rgb(219,43,33)" rx="2" ry="2" />
<text  x="70.23" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="577.3" y="1717" width="0.2" height="15.0" fill="rgb(232,184,39)" rx="2" ry="2" />
<text  x="580.27" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1120.4" y="1957" width="0.2" height="15.0" fill="rgb(221,132,29)" rx="2" ry="2" />
<text  x="1123.41" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1909" width="0.2" height="15.0" fill="rgb(239,197,44)" rx="2" ry="2" />
<text  x="148.39" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="17.6" y="1733" width="0.2" height="15.0" fill="rgb(224,14,25)" rx="2" ry="2" />
<text  x="20.58" y="1743.5" ></text>
</g>
<g >
<title>evict (40 samples, 0.68%)</title><rect x="735.6" y="1717" width="8.0" height="15.0" fill="rgb(223,89,44)" rx="2" ry="2" />
<text  x="738.59" y="1727.5" ></text>
</g>
<g >
<title>[mcrouter] (117 samples, 1.98%)</title><rect x="208.8" y="2021" width="23.3" height="15.0" fill="rgb(243,35,43)" rx="2" ry="2" />
<text  x="211.79" y="2031.5" >[..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="336.0" y="1845" width="0.2" height="15.0" fill="rgb(247,210,45)" rx="2" ry="2" />
<text  x="339.01" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="276.2" y="1765" width="0.2" height="15.0" fill="rgb(212,89,39)" rx="2" ry="2" />
<text  x="279.19" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="151.6" y="1877" width="0.2" height="15.0" fill="rgb(251,68,20)" rx="2" ry="2" />
<text  x="154.57" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="817.5" y="1541" width="0.2" height="15.0" fill="rgb(230,95,38)" rx="2" ry="2" />
<text  x="820.54" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1049.8" y="1957" width="0.2" height="15.0" fill="rgb(250,42,11)" rx="2" ry="2" />
<text  x="1052.83" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="225.3" y="1813" width="0.6" height="15.0" fill="rgb(238,228,37)" rx="2" ry="2" />
<text  x="228.34" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="984.0" y="1925" width="0.2" height="15.0" fill="rgb(249,82,45)" rx="2" ry="2" />
<text  x="987.03" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="912.4" y="2005" width="0.2" height="15.0" fill="rgb(205,104,32)" rx="2" ry="2" />
<text  x="915.45" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="505.3" y="1829" width="0.4" height="15.0" fill="rgb(233,32,13)" rx="2" ry="2" />
<text  x="508.29" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="160.3" y="1845" width="0.2" height="15.0" fill="rgb(223,24,40)" rx="2" ry="2" />
<text  x="163.34" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="799.6" y="1541" width="0.2" height="15.0" fill="rgb(233,47,13)" rx="2" ry="2" />
<text  x="802.59" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1093" width="14.4" height="15.0" fill="rgb(229,46,24)" rx="2" ry="2" />
<text  x="108.11" y="1103.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="880.3" y="1893" width="0.4" height="15.0" fill="rgb(243,125,51)" rx="2" ry="2" />
<text  x="883.34" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="1157.9" y="1781" width="0.6" height="15.0" fill="rgb(227,169,27)" rx="2" ry="2" />
<text  x="1160.90" y="1791.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="409.8" y="1941" width="1.0" height="15.0" fill="rgb(209,221,1)" rx="2" ry="2" />
<text  x="412.78" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="389" width="14.0" height="15.0" fill="rgb(222,73,21)" rx="2" ry="2" />
<text  x="108.11" y="399.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="295.7" y="1701" width="0.2" height="15.0" fill="rgb(220,129,8)" rx="2" ry="2" />
<text  x="298.73" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="866.6" y="1765" width="0.2" height="15.0" fill="rgb(252,133,15)" rx="2" ry="2" />
<text  x="869.59" y="1775.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="1128.6" y="2053" width="0.2" height="15.0" fill="rgb(231,192,35)" rx="2" ry="2" />
<text  x="1131.59" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="336.0" y="1861" width="0.2" height="15.0" fill="rgb(206,53,32)" rx="2" ry="2" />
<text  x="339.01" y="1871.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="533.2" y="1941" width="0.2" height="15.0" fill="rgb(232,39,28)" rx="2" ry="2" />
<text  x="536.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="725.6" y="1605" width="0.2" height="15.0" fill="rgb(225,215,3)" rx="2" ry="2" />
<text  x="728.62" y="1615.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="914.0" y="2021" width="0.2" height="15.0" fill="rgb(224,223,19)" rx="2" ry="2" />
<text  x="917.04" y="2031.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="690.5" y="1925" width="0.2" height="15.0" fill="rgb(244,108,36)" rx="2" ry="2" />
<text  x="693.52" y="1935.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1109.2" y="1413" width="0.2" height="15.0" fill="rgb(239,215,17)" rx="2" ry="2" />
<text  x="1112.25" y="1423.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1126.8" y="1861" width="0.2" height="15.0" fill="rgb(213,135,3)" rx="2" ry="2" />
<text  x="1129.79" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="17.6" y="1941" width="0.2" height="15.0" fill="rgb(251,167,5)" rx="2" ry="2" />
<text  x="20.58" y="1951.5" ></text>
</g>
<g >
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="746.2" y="1477" width="0.2" height="15.0" fill="rgb(252,180,25)" rx="2" ry="2" />
<text  x="749.15" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="498.5" y="1877" width="0.2" height="15.0" fill="rgb(220,197,51)" rx="2" ry="2" />
<text  x="501.51" y="1887.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="768.3" y="1701" width="0.2" height="15.0" fill="rgb(240,116,46)" rx="2" ry="2" />
<text  x="771.29" y="1711.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="905.5" y="1973" width="0.2" height="15.0" fill="rgb(238,208,44)" rx="2" ry="2" />
<text  x="908.47" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="173.7" y="1957" width="0.2" height="15.0" fill="rgb(215,65,19)" rx="2" ry="2" />
<text  x="176.70" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="324.4" y="1685" width="0.4" height="15.0" fill="rgb(210,33,37)" rx="2" ry="2" />
<text  x="327.44" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="120.7" y="1397" width="0.2" height="15.0" fill="rgb(250,168,20)" rx="2" ry="2" />
<text  x="123.66" y="1407.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1049.8" y="1781" width="0.2" height="15.0" fill="rgb(244,9,54)" rx="2" ry="2" />
<text  x="1052.83" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="746.2" y="1541" width="0.4" height="15.0" fill="rgb(243,148,12)" rx="2" ry="2" />
<text  x="749.15" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="505.5" y="1685" width="0.2" height="15.0" fill="rgb(220,8,31)" rx="2" ry="2" />
<text  x="508.49" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="149.8" y="1797" width="0.2" height="15.0" fill="rgb(221,7,24)" rx="2" ry="2" />
<text  x="152.77" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="482.8" y="1653" width="0.2" height="15.0" fill="rgb(211,2,3)" rx="2" ry="2" />
<text  x="485.76" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="625.9" y="2005" width="0.2" height="15.0" fill="rgb(211,38,40)" rx="2" ry="2" />
<text  x="628.92" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="516.5" y="1973" width="1.0" height="15.0" fill="rgb(224,39,1)" rx="2" ry="2" />
<text  x="519.45" y="1983.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="481.2" y="1653" width="0.2" height="15.0" fill="rgb(243,138,40)" rx="2" ry="2" />
<text  x="484.16" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="128.6" y="2005" width="0.2" height="15.0" fill="rgb(215,31,47)" rx="2" ry="2" />
<text  x="131.64" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="877.0" y="1957" width="0.2" height="15.0" fill="rgb(250,211,5)" rx="2" ry="2" />
<text  x="879.96" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1139.0" y="1973" width="0.2" height="15.0" fill="rgb(234,80,14)" rx="2" ry="2" />
<text  x="1141.96" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="532.0" y="1909" width="1.2" height="15.0" fill="rgb(220,200,35)" rx="2" ry="2" />
<text  x="535.01" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="885.7" y="1701" width="0.2" height="15.0" fill="rgb(249,203,54)" rx="2" ry="2" />
<text  x="888.73" y="1711.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="144.8" y="1845" width="0.2" height="15.0" fill="rgb(225,156,41)" rx="2" ry="2" />
<text  x="147.79" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="736.2" y="1701" width="0.2" height="15.0" fill="rgb(215,95,50)" rx="2" ry="2" />
<text  x="739.18" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1121.4" y="1893" width="0.4" height="15.0" fill="rgb(236,219,54)" rx="2" ry="2" />
<text  x="1124.41" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="73.6" y="1941" width="0.2" height="15.0" fill="rgb(209,58,22)" rx="2" ry="2" />
<text  x="76.61" y="1951.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="830.9" y="1637" width="0.2" height="15.0" fill="rgb(232,124,37)" rx="2" ry="2" />
<text  x="833.90" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (11 samples, 0.19%)</title><rect x="572.5" y="2005" width="2.2" height="15.0" fill="rgb(236,148,54)" rx="2" ry="2" />
<text  x="575.48" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="17.6" y="1653" width="0.2" height="15.0" fill="rgb(209,120,32)" rx="2" ry="2" />
<text  x="20.58" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="746.2" y="1733" width="0.4" height="15.0" fill="rgb(248,63,10)" rx="2" ry="2" />
<text  x="749.15" y="1743.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="404.6" y="1589" width="0.2" height="15.0" fill="rgb(208,166,44)" rx="2" ry="2" />
<text  x="407.60" y="1599.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1102.1" y="1525" width="0.2" height="15.0" fill="rgb(220,115,10)" rx="2" ry="2" />
<text  x="1105.07" y="1535.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="534.2" y="1637" width="0.2" height="15.0" fill="rgb(234,84,18)" rx="2" ry="2" />
<text  x="537.20" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="802.2" y="1605" width="0.2" height="15.0" fill="rgb(247,57,13)" rx="2" ry="2" />
<text  x="805.18" y="1615.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="675.4" y="1573" width="0.2" height="15.0" fill="rgb(249,55,26)" rx="2" ry="2" />
<text  x="678.37" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="547.2" y="1829" width="0.2" height="15.0" fill="rgb(218,46,42)" rx="2" ry="2" />
<text  x="550.16" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="577.3" y="1765" width="0.2" height="15.0" fill="rgb(247,195,51)" rx="2" ry="2" />
<text  x="580.27" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="32.1" y="1973" width="0.2" height="15.0" fill="rgb(243,172,48)" rx="2" ry="2" />
<text  x="35.13" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="333.8" y="1909" width="0.4" height="15.0" fill="rgb(231,21,19)" rx="2" ry="2" />
<text  x="336.81" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="621.5" y="2021" width="0.8" height="15.0" fill="rgb(249,133,35)" rx="2" ry="2" />
<text  x="624.53" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (8 samples, 0.14%)</title><rect x="888.5" y="1941" width="1.6" height="15.0" fill="rgb(216,169,20)" rx="2" ry="2" />
<text  x="891.52" y="1951.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (10 samples, 0.17%)</title><rect x="402.8" y="1893" width="2.0" height="15.0" fill="rgb(207,116,32)" rx="2" ry="2" />
<text  x="405.80" y="1903.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1011.3" y="1989" width="0.2" height="15.0" fill="rgb(232,161,22)" rx="2" ry="2" />
<text  x="1014.35" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="664.8" y="1893" width="0.2" height="15.0" fill="rgb(223,215,40)" rx="2" ry="2" />
<text  x="667.80" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.4" y="1829" width="0.1" height="15.0" fill="rgb(242,147,24)" rx="2" ry="2" />
<text  x="160.35" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="972.7" y="1893" width="0.2" height="15.0" fill="rgb(223,16,19)" rx="2" ry="2" />
<text  x="975.66" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="996.4" y="1877" width="0.2" height="15.0" fill="rgb(233,5,43)" rx="2" ry="2" />
<text  x="999.39" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="599.8" y="1685" width="0.4" height="15.0" fill="rgb(210,44,52)" rx="2" ry="2" />
<text  x="602.80" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="710.5" y="1957" width="0.2" height="15.0" fill="rgb(238,61,30)" rx="2" ry="2" />
<text  x="713.46" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="858.6" y="1909" width="0.2" height="15.0" fill="rgb(231,194,11)" rx="2" ry="2" />
<text  x="861.61" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="895.7" y="1957" width="0.4" height="15.0" fill="rgb(228,83,35)" rx="2" ry="2" />
<text  x="898.70" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1172.5" y="2021" width="0.4" height="15.0" fill="rgb(217,34,47)" rx="2" ry="2" />
<text  x="1175.45" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="952.3" y="2005" width="0.8" height="15.0" fill="rgb(210,219,3)" rx="2" ry="2" />
<text  x="955.33" y="2015.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (2 samples, 0.03%)</title><rect x="599.8" y="1605" width="0.4" height="15.0" fill="rgb(207,223,14)" rx="2" ry="2" />
<text  x="602.80" y="1615.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (20 samples, 0.34%)</title><rect x="199.8" y="2021" width="4.0" height="15.0" fill="rgb(225,159,50)" rx="2" ry="2" />
<text  x="202.82" y="2031.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (5 samples, 0.08%)</title><rect x="734.6" y="1717" width="1.0" height="15.0" fill="rgb(242,228,40)" rx="2" ry="2" />
<text  x="737.59" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (4 samples, 0.07%)</title><rect x="1002.4" y="2005" width="0.8" height="15.0" fill="rgb(237,110,54)" rx="2" ry="2" />
<text  x="1005.37" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (10 samples, 0.17%)</title><rect x="846.4" y="1941" width="2.0" height="15.0" fill="rgb(214,13,10)" rx="2" ry="2" />
<text  x="849.45" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1175.0" y="2021" width="0.8" height="15.0" fill="rgb(209,177,15)" rx="2" ry="2" />
<text  x="1178.05" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="534.2" y="1733" width="0.2" height="15.0" fill="rgb(213,143,34)" rx="2" ry="2" />
<text  x="537.20" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (5 samples, 0.08%)</title><rect x="894.7" y="1957" width="1.0" height="15.0" fill="rgb(211,149,32)" rx="2" ry="2" />
<text  x="897.70" y="1967.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="618.9" y="1877" width="1.0" height="15.0" fill="rgb(230,175,20)" rx="2" ry="2" />
<text  x="621.94" y="1887.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1009.7" y="1989" width="0.4" height="15.0" fill="rgb(232,108,7)" rx="2" ry="2" />
<text  x="1012.75" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="337.2" y="1813" width="0.2" height="15.0" fill="rgb(207,185,40)" rx="2" ry="2" />
<text  x="340.20" y="1823.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1007.4" y="2005" width="0.2" height="15.0" fill="rgb(252,204,7)" rx="2" ry="2" />
<text  x="1010.36" y="2015.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="513.7" y="1957" width="0.2" height="15.0" fill="rgb(239,55,42)" rx="2" ry="2" />
<text  x="516.66" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1119.8" y="1621" width="0.2" height="15.0" fill="rgb(252,129,4)" rx="2" ry="2" />
<text  x="1122.81" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.7" y="1877" width="0.2" height="15.0" fill="rgb(235,204,45)" rx="2" ry="2" />
<text  x="887.73" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1121.4" y="1925" width="0.4" height="15.0" fill="rgb(220,59,3)" rx="2" ry="2" />
<text  x="1124.41" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1893" width="0.2" height="15.0" fill="rgb(221,203,0)" rx="2" ry="2" />
<text  x="148.39" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (232 samples, 3.92%)</title><rect x="534.4" y="2021" width="46.3" height="15.0" fill="rgb(242,101,12)" rx="2" ry="2" />
<text  x="537.40" y="2031.5" >foll..</text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (2 samples, 0.03%)</title><rect x="33.1" y="1989" width="0.4" height="15.0" fill="rgb(233,181,13)" rx="2" ry="2" />
<text  x="36.13" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="514.9" y="1957" width="0.2" height="15.0" fill="rgb(207,208,33)" rx="2" ry="2" />
<text  x="517.86" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="599.8" y="1813" width="0.4" height="15.0" fill="rgb(228,95,48)" rx="2" ry="2" />
<text  x="602.80" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="866.6" y="1781" width="0.2" height="15.0" fill="rgb(241,2,0)" rx="2" ry="2" />
<text  x="869.59" y="1791.5" ></text>
</g>
<g >
<title>__kfree_skb (88 samples, 1.49%)</title><rect x="1063.6" y="1925" width="17.5" height="15.0" fill="rgb(235,211,54)" rx="2" ry="2" />
<text  x="1066.59" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="550.9" y="1941" width="0.2" height="15.0" fill="rgb(233,75,45)" rx="2" ry="2" />
<text  x="553.95" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="851.2" y="1877" width="0.6" height="15.0" fill="rgb(235,185,20)" rx="2" ry="2" />
<text  x="854.23" y="1887.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="849.4" y="1925" width="0.2" height="15.0" fill="rgb(252,220,35)" rx="2" ry="2" />
<text  x="852.44" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="38.5" y="1829" width="0.2" height="15.0" fill="rgb(254,15,19)" rx="2" ry="2" />
<text  x="41.51" y="1839.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (16 samples, 0.27%)</title><rect x="363.1" y="1941" width="3.2" height="15.0" fill="rgb(242,120,32)" rx="2" ry="2" />
<text  x="366.12" y="1951.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (8 samples, 0.14%)</title><rect x="266.0" y="1877" width="1.6" height="15.0" fill="rgb(229,66,51)" rx="2" ry="2" />
<text  x="269.02" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="247.1" y="1893" width="0.2" height="15.0" fill="rgb(243,151,37)" rx="2" ry="2" />
<text  x="250.08" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="1134.8" y="2005" width="0.4" height="15.0" fill="rgb(236,142,25)" rx="2" ry="2" />
<text  x="1137.77" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="581" width="14.0" height="15.0" fill="rgb(216,16,35)" rx="2" ry="2" />
<text  x="108.11" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_enable (29 samples, 0.49%)</title><rect x="11.0" y="1877" width="5.8" height="15.0" fill="rgb(246,38,19)" rx="2" ry="2" />
<text  x="14.00" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1137.2" y="2037" width="0.2" height="15.0" fill="rgb(210,61,0)" rx="2" ry="2" />
<text  x="1140.16" y="2047.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="274.4" y="1685" width="0.2" height="15.0" fill="rgb(239,103,10)" rx="2" ry="2" />
<text  x="277.39" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="116.5" y="37" width="0.2" height="15.0" fill="rgb(223,54,19)" rx="2" ry="2" />
<text  x="119.48" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (5 samples, 0.08%)</title><rect x="59.1" y="1973" width="0.9" height="15.0" fill="rgb(210,207,0)" rx="2" ry="2" />
<text  x="62.05" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="547.4" y="1973" width="0.4" height="15.0" fill="rgb(241,226,4)" rx="2" ry="2" />
<text  x="550.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="437" width="14.0" height="15.0" fill="rgb(216,45,18)" rx="2" ry="2" />
<text  x="108.11" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.2" y="1909" width="0.2" height="15.0" fill="rgb(233,3,15)" rx="2" ry="2" />
<text  x="148.19" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1145.3" y="1893" width="0.2" height="15.0" fill="rgb(229,202,43)" rx="2" ry="2" />
<text  x="1148.34" y="1903.5" ></text>
</g>
<g >
<title>__fget (20 samples, 0.34%)</title><rect x="449.3" y="1941" width="3.9" height="15.0" fill="rgb(213,190,24)" rx="2" ry="2" />
<text  x="452.26" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.7" y="1237" width="0.2" height="15.0" fill="rgb(219,197,22)" rx="2" ry="2" />
<text  x="107.71" y="1247.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (648 samples, 10.95%)</title><rect x="715.0" y="1941" width="129.3" height="15.0" fill="rgb(238,124,20)" rx="2" ry="2" />
<text  x="718.05" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="118.3" y="85" width="0.2" height="15.0" fill="rgb(223,15,50)" rx="2" ry="2" />
<text  x="121.27" y="95.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="576.9" y="1909" width="0.2" height="15.0" fill="rgb(215,197,31)" rx="2" ry="2" />
<text  x="579.87" y="1919.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="318.9" y="1829" width="0.2" height="15.0" fill="rgb(243,192,3)" rx="2" ry="2" />
<text  x="321.86" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="453.8" y="1573" width="0.2" height="15.0" fill="rgb(216,228,33)" rx="2" ry="2" />
<text  x="456.85" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="877.2" y="1957" width="0.4" height="15.0" fill="rgb(217,66,2)" rx="2" ry="2" />
<text  x="880.15" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="124.7" y="1717" width="0.1" height="15.0" fill="rgb(240,149,7)" rx="2" ry="2" />
<text  x="127.65" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="32.1" y="1941" width="0.2" height="15.0" fill="rgb(216,70,7)" rx="2" ry="2" />
<text  x="35.13" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (2 samples, 0.03%)</title><rect x="223.0" y="1877" width="0.3" height="15.0" fill="rgb(219,44,2)" rx="2" ry="2" />
<text  x="225.95" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="76.4" y="1797" width="0.2" height="15.0" fill="rgb(209,3,41)" rx="2" ry="2" />
<text  x="79.40" y="1807.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="696.7" y="1909" width="1.0" height="15.0" fill="rgb(222,134,35)" rx="2" ry="2" />
<text  x="699.70" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="855.2" y="1941" width="0.2" height="15.0" fill="rgb(219,177,42)" rx="2" ry="2" />
<text  x="858.22" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="372.1" y="1717" width="0.2" height="15.0" fill="rgb(205,153,7)" rx="2" ry="2" />
<text  x="375.10" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="540.8" y="1925" width="0.8" height="15.0" fill="rgb(238,195,7)" rx="2" ry="2" />
<text  x="543.78" y="1935.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1137.2" y="1941" width="0.2" height="15.0" fill="rgb(252,18,49)" rx="2" ry="2" />
<text  x="1140.16" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="176.5" y="1973" width="0.8" height="15.0" fill="rgb(218,137,43)" rx="2" ry="2" />
<text  x="179.49" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="169.7" y="2021" width="0.4" height="15.0" fill="rgb(228,77,13)" rx="2" ry="2" />
<text  x="172.71" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="996.4" y="1973" width="0.2" height="15.0" fill="rgb(252,122,21)" rx="2" ry="2" />
<text  x="999.39" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="102.7" y="1765" width="0.2" height="15.0" fill="rgb(249,130,8)" rx="2" ry="2" />
<text  x="105.72" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="453.8" y="1653" width="0.2" height="15.0" fill="rgb(213,162,26)" rx="2" ry="2" />
<text  x="456.85" y="1663.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="84.8" y="1925" width="0.2" height="15.0" fill="rgb(222,80,21)" rx="2" ry="2" />
<text  x="87.77" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="856.6" y="1941" width="0.2" height="15.0" fill="rgb(231,192,47)" rx="2" ry="2" />
<text  x="859.62" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (108 samples, 1.82%)</title><rect x="582.7" y="2021" width="21.5" height="15.0" fill="rgb(213,121,30)" rx="2" ry="2" />
<text  x="585.65" y="2031.5" >f..</text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt;&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1845" width="0.2" height="15.0" fill="rgb(211,87,48)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="324.4" y="1557" width="0.4" height="15.0" fill="rgb(240,36,33)" rx="2" ry="2" />
<text  x="327.44" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1000.8" y="1973" width="0.2" height="15.0" fill="rgb(214,16,7)" rx="2" ry="2" />
<text  x="1003.78" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (13 samples, 0.22%)</title><rect x="893.9" y="1989" width="2.6" height="15.0" fill="rgb(242,218,15)" rx="2" ry="2" />
<text  x="896.90" y="1999.5" ></text>
</g>
<g >
<title>sock_poll (78 samples, 1.32%)</title><rect x="492.7" y="1909" width="15.6" height="15.0" fill="rgb(253,38,12)" rx="2" ry="2" />
<text  x="495.73" y="1919.5" ></text>
</g>
<g >
<title>all (5,918 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(210,125,1)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="386.9" y="1749" width="0.1" height="15.0" fill="rgb(232,178,16)" rx="2" ry="2" />
<text  x="389.85" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (61 samples, 1.03%)</title><rect x="587.4" y="1909" width="12.2" height="15.0" fill="rgb(210,50,49)" rx="2" ry="2" />
<text  x="590.44" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="310.3" y="1477" width="0.2" height="15.0" fill="rgb(218,104,50)" rx="2" ry="2" />
<text  x="313.28" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="704.5" y="1749" width="0.2" height="15.0" fill="rgb(249,199,17)" rx="2" ry="2" />
<text  x="707.48" y="1759.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="807.4" y="1653" width="0.2" height="15.0" fill="rgb(207,196,41)" rx="2" ry="2" />
<text  x="810.37" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="912.6" y="1989" width="0.2" height="15.0" fill="rgb(247,98,19)" rx="2" ry="2" />
<text  x="915.65" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (33 samples, 0.56%)</title><rect x="10.8" y="1909" width="6.6" height="15.0" fill="rgb(235,100,20)" rx="2" ry="2" />
<text  x="13.80" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="892.1" y="1845" width="0.2" height="15.0" fill="rgb(223,83,10)" rx="2" ry="2" />
<text  x="895.11" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="529.4" y="1973" width="0.6" height="15.0" fill="rgb(217,218,5)" rx="2" ry="2" />
<text  x="532.42" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="545.2" y="1797" width="0.2" height="15.0" fill="rgb(217,120,16)" rx="2" ry="2" />
<text  x="548.17" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="175.9" y="1957" width="0.4" height="15.0" fill="rgb(207,43,34)" rx="2" ry="2" />
<text  x="178.89" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (26 samples, 0.44%)</title><rect x="372.7" y="1925" width="5.2" height="15.0" fill="rgb(211,24,52)" rx="2" ry="2" />
<text  x="375.69" y="1935.5" ></text>
</g>
<g >
<title>enqueue_task_rt (1 samples, 0.02%)</title><rect x="914.0" y="1893" width="0.2" height="15.0" fill="rgb(221,213,21)" rx="2" ry="2" />
<text  x="917.04" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="117.5" y="85" width="0.2" height="15.0" fill="rgb(224,42,19)" rx="2" ry="2" />
<text  x="120.47" y="95.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (2 samples, 0.03%)</title><rect x="1144.3" y="1973" width="0.4" height="15.0" fill="rgb(215,140,41)" rx="2" ry="2" />
<text  x="1147.34" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="453.0" y="1717" width="0.2" height="15.0" fill="rgb(206,97,8)" rx="2" ry="2" />
<text  x="456.05" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="842.1" y="1909" width="0.4" height="15.0" fill="rgb(236,36,17)" rx="2" ry="2" />
<text  x="845.06" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="929.4" y="1925" width="1.2" height="15.0" fill="rgb(218,103,50)" rx="2" ry="2" />
<text  x="932.40" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="863.2" y="1845" width="0.2" height="15.0" fill="rgb(217,38,11)" rx="2" ry="2" />
<text  x="866.20" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (3 samples, 0.05%)</title><rect x="956.3" y="2005" width="0.6" height="15.0" fill="rgb(213,219,43)" rx="2" ry="2" />
<text  x="959.31" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="532.2" y="1877" width="0.8" height="15.0" fill="rgb(207,62,26)" rx="2" ry="2" />
<text  x="535.21" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="434.7" y="1877" width="0.8" height="15.0" fill="rgb(231,2,11)" rx="2" ry="2" />
<text  x="437.70" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="247.1" y="1781" width="0.2" height="15.0" fill="rgb(224,130,18)" rx="2" ry="2" />
<text  x="250.08" y="1791.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (7 samples, 0.12%)</title><rect x="738.4" y="1653" width="1.4" height="15.0" fill="rgb(232,110,3)" rx="2" ry="2" />
<text  x="741.38" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="599.8" y="1877" width="0.4" height="15.0" fill="rgb(250,72,10)" rx="2" ry="2" />
<text  x="602.80" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="453.8" y="1717" width="0.2" height="15.0" fill="rgb(246,188,4)" rx="2" ry="2" />
<text  x="456.85" y="1727.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (1 samples, 0.02%)</title><rect x="968.5" y="2037" width="0.2" height="15.0" fill="rgb(230,74,19)" rx="2" ry="2" />
<text  x="971.48" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="884.7" y="1717" width="0.2" height="15.0" fill="rgb(236,32,35)" rx="2" ry="2" />
<text  x="887.73" y="1727.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="518.8" y="1909" width="0.8" height="15.0" fill="rgb(237,176,18)" rx="2" ry="2" />
<text  x="521.85" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1157.5" y="1829" width="0.2" height="15.0" fill="rgb(214,6,6)" rx="2" ry="2" />
<text  x="1160.50" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1178.0" y="1813" width="0.2" height="15.0" fill="rgb(243,143,27)" rx="2" ry="2" />
<text  x="1181.04" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="832.3" y="1701" width="0.2" height="15.0" fill="rgb(212,123,19)" rx="2" ry="2" />
<text  x="835.29" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="247.1" y="1733" width="0.2" height="15.0" fill="rgb(254,11,30)" rx="2" ry="2" />
<text  x="250.08" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1121.4" y="1813" width="0.4" height="15.0" fill="rgb(220,24,33)" rx="2" ry="2" />
<text  x="1124.41" y="1823.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="982.0" y="1605" width="0.2" height="15.0" fill="rgb(248,95,36)" rx="2" ry="2" />
<text  x="985.03" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="644.9" y="1861" width="0.2" height="15.0" fill="rgb(251,184,28)" rx="2" ry="2" />
<text  x="647.86" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="627.7" y="1973" width="0.2" height="15.0" fill="rgb(243,141,42)" rx="2" ry="2" />
<text  x="630.72" y="1983.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="982.0" y="1669" width="0.2" height="15.0" fill="rgb(235,228,41)" rx="2" ry="2" />
<text  x="985.03" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="881.3" y="1893" width="0.2" height="15.0" fill="rgb(231,41,19)" rx="2" ry="2" />
<text  x="884.34" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="136.0" y="1941" width="0.2" height="15.0" fill="rgb(212,164,42)" rx="2" ry="2" />
<text  x="139.02" y="1951.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="251.7" y="1893" width="0.2" height="15.0" fill="rgb(236,85,20)" rx="2" ry="2" />
<text  x="254.66" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (6 samples, 0.10%)</title><rect x="152.8" y="1909" width="1.2" height="15.0" fill="rgb(212,54,22)" rx="2" ry="2" />
<text  x="155.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="32.1" y="1749" width="0.2" height="15.0" fill="rgb(232,206,42)" rx="2" ry="2" />
<text  x="35.13" y="1759.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="17.6" y="1637" width="0.2" height="15.0" fill="rgb(236,163,33)" rx="2" ry="2" />
<text  x="20.58" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="736.4" y="1685" width="0.2" height="15.0" fill="rgb(238,48,15)" rx="2" ry="2" />
<text  x="739.38" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="545.2" y="1877" width="0.2" height="15.0" fill="rgb(252,176,19)" rx="2" ry="2" />
<text  x="548.17" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="630.1" y="1973" width="0.2" height="15.0" fill="rgb(238,201,7)" rx="2" ry="2" />
<text  x="633.11" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="480.6" y="1893" width="0.2" height="15.0" fill="rgb(213,131,12)" rx="2" ry="2" />
<text  x="483.56" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="115.9" y="53" width="0.6" height="15.0" fill="rgb(242,208,35)" rx="2" ry="2" />
<text  x="118.88" y="63.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="102.9" y="2005" width="0.2" height="15.0" fill="rgb(246,137,8)" rx="2" ry="2" />
<text  x="105.92" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="372.1" y="1861" width="0.2" height="15.0" fill="rgb(214,228,38)" rx="2" ry="2" />
<text  x="375.10" y="1871.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1130.4" y="1797" width="0.2" height="15.0" fill="rgb(235,114,47)" rx="2" ry="2" />
<text  x="1133.38" y="1807.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="93.5" y="1941" width="0.2" height="15.0" fill="rgb(233,209,41)" rx="2" ry="2" />
<text  x="96.55" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="892.1" y="1701" width="0.2" height="15.0" fill="rgb(242,176,16)" rx="2" ry="2" />
<text  x="895.11" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="718.6" y="1877" width="0.2" height="15.0" fill="rgb(253,62,33)" rx="2" ry="2" />
<text  x="721.64" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="183.7" y="2021" width="0.2" height="15.0" fill="rgb(217,4,21)" rx="2" ry="2" />
<text  x="186.67" y="2031.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="134.6" y="1925" width="0.2" height="15.0" fill="rgb(239,174,15)" rx="2" ry="2" />
<text  x="137.62" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1130.2" y="1845" width="0.4" height="15.0" fill="rgb(247,76,33)" rx="2" ry="2" />
<text  x="1133.18" y="1855.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="563.1" y="1893" width="0.2" height="15.0" fill="rgb(219,72,17)" rx="2" ry="2" />
<text  x="566.11" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (12 samples, 0.20%)</title><rect x="511.5" y="1973" width="2.4" height="15.0" fill="rgb(251,200,23)" rx="2" ry="2" />
<text  x="514.47" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="541.0" y="1909" width="0.6" height="15.0" fill="rgb(220,72,47)" rx="2" ry="2" />
<text  x="543.98" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="246.9" y="1701" width="0.2" height="15.0" fill="rgb(235,21,45)" rx="2" ry="2" />
<text  x="249.88" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="577.3" y="1893" width="0.2" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="580.27" y="1903.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="633.5" y="1973" width="0.2" height="15.0" fill="rgb(232,102,5)" rx="2" ry="2" />
<text  x="636.50" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1121.2" y="2005" width="0.2" height="15.0" fill="rgb(205,30,51)" rx="2" ry="2" />
<text  x="1124.21" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="846.8" y="1893" width="0.2" height="15.0" fill="rgb(225,39,12)" rx="2" ry="2" />
<text  x="849.85" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="599.8" y="1829" width="0.4" height="15.0" fill="rgb(219,55,35)" rx="2" ry="2" />
<text  x="602.80" y="1839.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (34 samples, 0.57%)</title><rect x="320.1" y="1829" width="6.7" height="15.0" fill="rgb(239,100,19)" rx="2" ry="2" />
<text  x="323.05" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="836.7" y="1877" width="0.2" height="15.0" fill="rgb(238,156,14)" rx="2" ry="2" />
<text  x="839.68" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="482.8" y="1637" width="0.2" height="15.0" fill="rgb(236,172,30)" rx="2" ry="2" />
<text  x="485.76" y="1647.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="817.7" y="1717" width="0.6" height="15.0" fill="rgb(206,204,46)" rx="2" ry="2" />
<text  x="820.74" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="338.4" y="1925" width="0.6" height="15.0" fill="rgb(218,209,35)" rx="2" ry="2" />
<text  x="341.40" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="337.2" y="1861" width="0.2" height="15.0" fill="rgb(253,26,41)" rx="2" ry="2" />
<text  x="340.20" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="756.1" y="1541" width="0.2" height="15.0" fill="rgb(209,129,32)" rx="2" ry="2" />
<text  x="759.12" y="1551.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="481.0" y="1637" width="0.2" height="15.0" fill="rgb(245,194,39)" rx="2" ry="2" />
<text  x="483.96" y="1647.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="880.5" y="1829" width="0.2" height="15.0" fill="rgb(229,33,40)" rx="2" ry="2" />
<text  x="883.54" y="1839.5" ></text>
</g>
<g >
<title>ip_output (52 samples, 0.88%)</title><rect x="1101.5" y="1829" width="10.3" height="15.0" fill="rgb(250,28,19)" rx="2" ry="2" />
<text  x="1104.47" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="386.7" y="1893" width="0.2" height="15.0" fill="rgb(233,168,45)" rx="2" ry="2" />
<text  x="389.65" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (6 samples, 0.10%)</title><rect x="577.5" y="2005" width="1.2" height="15.0" fill="rgb(227,64,26)" rx="2" ry="2" />
<text  x="580.47" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="310.3" y="1493" width="0.2" height="15.0" fill="rgb(209,165,36)" rx="2" ry="2" />
<text  x="313.28" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1049.8" y="1717" width="0.2" height="15.0" fill="rgb(236,179,1)" rx="2" ry="2" />
<text  x="1052.83" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="377.7" y="1765" width="0.2" height="15.0" fill="rgb(209,67,31)" rx="2" ry="2" />
<text  x="380.68" y="1775.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="231.5" y="1957" width="0.2" height="15.0" fill="rgb(253,118,17)" rx="2" ry="2" />
<text  x="234.52" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="509.7" y="2037" width="0.2" height="15.0" fill="rgb(219,194,18)" rx="2" ry="2" />
<text  x="512.68" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.15%)</title><rect x="105.1" y="133" width="13.6" height="15.0" fill="rgb(225,181,10)" rx="2" ry="2" />
<text  x="108.11" y="143.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="145.2" y="1925" width="0.2" height="15.0" fill="rgb(237,195,41)" rx="2" ry="2" />
<text  x="148.19" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="57.5" y="1765" width="0.2" height="15.0" fill="rgb(210,194,38)" rx="2" ry="2" />
<text  x="60.46" y="1775.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (229 samples, 3.87%)</title><rect x="436.1" y="1989" width="45.7" height="15.0" fill="rgb(221,220,49)" rx="2" ry="2" />
<text  x="439.10" y="1999.5" >sys_..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="336.0" y="1701" width="0.2" height="15.0" fill="rgb(232,175,3)" rx="2" ry="2" />
<text  x="339.01" y="1711.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="333.0" y="1765" width="0.2" height="15.0" fill="rgb(224,191,34)" rx="2" ry="2" />
<text  x="336.01" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="336.2" y="1701" width="0.2" height="15.0" fill="rgb(217,211,47)" rx="2" ry="2" />
<text  x="339.20" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1013.1" y="1781" width="0.2" height="15.0" fill="rgb(236,199,23)" rx="2" ry="2" />
<text  x="1016.14" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="246.9" y="1733" width="0.2" height="15.0" fill="rgb(206,206,15)" rx="2" ry="2" />
<text  x="249.88" y="1743.5" ></text>
</g>
<g >
<title>skb_clone (23 samples, 0.39%)</title><rect x="802.4" y="1669" width="4.6" height="15.0" fill="rgb(246,223,44)" rx="2" ry="2" />
<text  x="805.38" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (5 samples, 0.08%)</title><rect x="223.3" y="1877" width="1.0" height="15.0" fill="rgb(242,73,0)" rx="2" ry="2" />
<text  x="226.35" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="75.6" y="1893" width="0.6" height="15.0" fill="rgb(233,187,17)" rx="2" ry="2" />
<text  x="78.60" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="528.4" y="1925" width="0.8" height="15.0" fill="rgb(248,197,43)" rx="2" ry="2" />
<text  x="531.42" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="224.1" y="1509" width="0.2" height="15.0" fill="rgb(224,116,25)" rx="2" ry="2" />
<text  x="227.15" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (8 samples, 0.14%)</title><rect x="1167.9" y="1989" width="1.6" height="15.0" fill="rgb(248,140,54)" rx="2" ry="2" />
<text  x="1170.87" y="1999.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="385.5" y="1957" width="0.8" height="15.0" fill="rgb(248,215,23)" rx="2" ry="2" />
<text  x="388.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1077" width="14.4" height="15.0" fill="rgb(218,11,12)" rx="2" ry="2" />
<text  x="108.11" y="1087.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="139.2" y="1973" width="0.8" height="15.0" fill="rgb(241,209,11)" rx="2" ry="2" />
<text  x="142.21" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="802.2" y="1541" width="0.2" height="15.0" fill="rgb(218,216,35)" rx="2" ry="2" />
<text  x="805.18" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="76.4" y="1733" width="0.2" height="15.0" fill="rgb(219,193,12)" rx="2" ry="2" />
<text  x="79.40" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="160.3" y="1781" width="0.2" height="15.0" fill="rgb(239,205,44)" rx="2" ry="2" />
<text  x="163.34" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (14 samples, 0.24%)</title><rect x="1132.8" y="2053" width="2.8" height="15.0" fill="rgb(218,226,28)" rx="2" ry="2" />
<text  x="1135.77" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="372.1" y="1701" width="0.2" height="15.0" fill="rgb(222,64,41)" rx="2" ry="2" />
<text  x="375.10" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="611.4" y="1701" width="0.2" height="15.0" fill="rgb(217,13,7)" rx="2" ry="2" />
<text  x="614.37" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="968.3" y="1941" width="0.2" height="15.0" fill="rgb(212,39,8)" rx="2" ry="2" />
<text  x="971.28" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (5 samples, 0.08%)</title><rect x="55.5" y="1925" width="1.0" height="15.0" fill="rgb(212,108,33)" rx="2" ry="2" />
<text  x="58.46" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="890.5" y="1925" width="0.2" height="15.0" fill="rgb(205,50,40)" rx="2" ry="2" />
<text  x="893.51" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="78.6" y="1925" width="0.2" height="15.0" fill="rgb(245,99,33)" rx="2" ry="2" />
<text  x="81.59" y="1935.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1164.7" y="2037" width="0.6" height="15.0" fill="rgb(241,40,47)" rx="2" ry="2" />
<text  x="1167.68" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="642.7" y="1941" width="0.6" height="15.0" fill="rgb(254,1,27)" rx="2" ry="2" />
<text  x="645.67" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="833.5" y="1829" width="0.4" height="15.0" fill="rgb(239,98,16)" rx="2" ry="2" />
<text  x="836.49" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="169.7" y="2005" width="0.4" height="15.0" fill="rgb(217,84,36)" rx="2" ry="2" />
<text  x="172.71" y="2015.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="379.5" y="1909" width="0.2" height="15.0" fill="rgb(247,216,52)" rx="2" ry="2" />
<text  x="382.47" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="626.7" y="2005" width="0.2" height="15.0" fill="rgb(223,11,38)" rx="2" ry="2" />
<text  x="629.72" y="2015.5" ></text>
</g>
<g >
<title>__d_instantiate (2 samples, 0.03%)</title><rect x="408.8" y="1925" width="0.4" height="15.0" fill="rgb(235,33,30)" rx="2" ry="2" />
<text  x="411.78" y="1935.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="478.0" y="1941" width="0.2" height="15.0" fill="rgb(211,11,25)" rx="2" ry="2" />
<text  x="480.97" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="836.9" y="1893" width="2.0" height="15.0" fill="rgb(251,66,41)" rx="2" ry="2" />
<text  x="839.88" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="119.9" y="1237" width="0.2" height="15.0" fill="rgb(221,6,37)" rx="2" ry="2" />
<text  x="122.86" y="1247.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="102.9" y="1973" width="0.2" height="15.0" fill="rgb(223,57,10)" rx="2" ry="2" />
<text  x="105.92" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="337.2" y="1845" width="0.2" height="15.0" fill="rgb(250,46,10)" rx="2" ry="2" />
<text  x="340.20" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="104.5" y="1765" width="19.0" height="15.0" fill="rgb(220,54,2)" rx="2" ry="2" />
<text  x="107.51" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="705.5" y="2037" width="0.6" height="15.0" fill="rgb(253,224,6)" rx="2" ry="2" />
<text  x="708.48" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="161.1" y="1749" width="0.2" height="15.0" fill="rgb(213,77,36)" rx="2" ry="2" />
<text  x="164.14" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="694.1" y="1877" width="0.2" height="15.0" fill="rgb(228,194,25)" rx="2" ry="2" />
<text  x="697.11" y="1887.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="895.3" y="1941" width="0.2" height="15.0" fill="rgb(222,158,36)" rx="2" ry="2" />
<text  x="898.30" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="843.1" y="1909" width="1.2" height="15.0" fill="rgb(231,68,37)" rx="2" ry="2" />
<text  x="846.06" y="1919.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="621.1" y="2021" width="0.2" height="15.0" fill="rgb(243,70,52)" rx="2" ry="2" />
<text  x="624.14" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="641.5" y="1909" width="0.2" height="15.0" fill="rgb(209,223,21)" rx="2" ry="2" />
<text  x="644.47" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15 samples, 0.25%)</title><rect x="290.3" y="1701" width="3.0" height="15.0" fill="rgb(205,5,3)" rx="2" ry="2" />
<text  x="293.34" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="569.5" y="1957" width="0.2" height="15.0" fill="rgb(217,39,39)" rx="2" ry="2" />
<text  x="572.49" y="1967.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="412.0" y="1717" width="0.2" height="15.0" fill="rgb(207,29,1)" rx="2" ry="2" />
<text  x="414.97" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="675.0" y="1877" width="0.6" height="15.0" fill="rgb(251,107,46)" rx="2" ry="2" />
<text  x="677.97" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="983.8" y="1925" width="0.2" height="15.0" fill="rgb(228,158,29)" rx="2" ry="2" />
<text  x="986.83" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (10 samples, 0.17%)</title><rect x="914.6" y="2037" width="2.0" height="15.0" fill="rgb(215,40,7)" rx="2" ry="2" />
<text  x="917.64" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1119.8" y="1717" width="0.2" height="15.0" fill="rgb(225,197,17)" rx="2" ry="2" />
<text  x="1122.81" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="464.0" y="1957" width="0.2" height="15.0" fill="rgb(224,116,24)" rx="2" ry="2" />
<text  x="467.01" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="420.1" y="2021" width="0.2" height="15.0" fill="rgb(223,181,46)" rx="2" ry="2" />
<text  x="423.15" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="53.5" y="1733" width="0.2" height="15.0" fill="rgb(205,172,3)" rx="2" ry="2" />
<text  x="56.47" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="151.8" y="1893" width="0.2" height="15.0" fill="rgb(240,18,42)" rx="2" ry="2" />
<text  x="154.77" y="1903.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="674.4" y="1813" width="0.4" height="15.0" fill="rgb(231,212,48)" rx="2" ry="2" />
<text  x="677.37" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (1 samples, 0.02%)</title><rect x="63.2" y="1941" width="0.2" height="15.0" fill="rgb(208,186,8)" rx="2" ry="2" />
<text  x="66.24" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="142.4" y="1925" width="0.2" height="15.0" fill="rgb(240,156,24)" rx="2" ry="2" />
<text  x="145.40" y="1935.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1012.7" y="1653" width="0.2" height="15.0" fill="rgb(240,188,30)" rx="2" ry="2" />
<text  x="1015.74" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (4 samples, 0.07%)</title><rect x="1084.7" y="1909" width="0.8" height="15.0" fill="rgb(233,228,30)" rx="2" ry="2" />
<text  x="1087.72" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="404.8" y="1893" width="0.4" height="15.0" fill="rgb(206,7,51)" rx="2" ry="2" />
<text  x="407.80" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="221.4" y="1893" width="0.2" height="15.0" fill="rgb(217,39,25)" rx="2" ry="2" />
<text  x="224.36" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1126.8" y="1941" width="0.2" height="15.0" fill="rgb(215,8,46)" rx="2" ry="2" />
<text  x="1129.79" y="1951.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, long, std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, __gnu_cxx::__ops::_Iter_comp_val&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.2" y="1909" width="0.2" height="15.0" fill="rgb(244,94,15)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1121.4" y="1877" width="0.4" height="15.0" fill="rgb(224,81,53)" rx="2" ry="2" />
<text  x="1124.41" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="657.8" y="2021" width="0.2" height="15.0" fill="rgb(225,2,27)" rx="2" ry="2" />
<text  x="660.82" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="118.7" y="133" width="0.2" height="15.0" fill="rgb(235,120,2)" rx="2" ry="2" />
<text  x="121.67" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="1023.3" y="2037" width="0.2" height="15.0" fill="rgb(223,106,15)" rx="2" ry="2" />
<text  x="1026.31" y="2047.5" ></text>
</g>
<g >
<title>sk_reset_timer (29 samples, 0.49%)</title><rect x="321.1" y="1781" width="5.7" height="15.0" fill="rgb(226,164,44)" rx="2" ry="2" />
<text  x="324.05" y="1791.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="327.0" y="1829" width="0.4" height="15.0" fill="rgb(213,224,14)" rx="2" ry="2" />
<text  x="330.03" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="336.0" y="1637" width="0.2" height="15.0" fill="rgb(241,98,29)" rx="2" ry="2" />
<text  x="339.01" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (4 samples, 0.07%)</title><rect x="141.8" y="1957" width="0.8" height="15.0" fill="rgb(220,24,20)" rx="2" ry="2" />
<text  x="144.80" y="1967.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (4 samples, 0.07%)</title><rect x="828.5" y="1765" width="0.8" height="15.0" fill="rgb(253,19,6)" rx="2" ry="2" />
<text  x="831.50" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1180.8" y="1941" width="0.2" height="15.0" fill="rgb(207,108,18)" rx="2" ry="2" />
<text  x="1183.83" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="472.8" y="1941" width="0.2" height="15.0" fill="rgb(254,219,32)" rx="2" ry="2" />
<text  x="475.79" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="844.7" y="1925" width="1.7" height="15.0" fill="rgb(244,64,41)" rx="2" ry="2" />
<text  x="847.65" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="896.5" y="1973" width="0.2" height="15.0" fill="rgb(212,163,43)" rx="2" ry="2" />
<text  x="899.50" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="453.2" y="1973" width="0.2" height="15.0" fill="rgb(215,127,1)" rx="2" ry="2" />
<text  x="456.25" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="161.1" y="1925" width="0.2" height="15.0" fill="rgb(240,122,24)" rx="2" ry="2" />
<text  x="164.14" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.88%)</title><rect x="104.1" y="1989" width="22.1" height="15.0" fill="rgb(217,196,20)" rx="2" ry="2" />
<text  x="107.11" y="1999.5" >[..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="550.0" y="1941" width="0.2" height="15.0" fill="rgb(252,93,27)" rx="2" ry="2" />
<text  x="552.95" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="612.0" y="1909" width="0.2" height="15.0" fill="rgb(214,71,21)" rx="2" ry="2" />
<text  x="614.96" y="1919.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="1170.7" y="1941" width="0.2" height="15.0" fill="rgb(231,121,0)" rx="2" ry="2" />
<text  x="1173.66" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1119.8" y="1637" width="0.2" height="15.0" fill="rgb(206,193,47)" rx="2" ry="2" />
<text  x="1122.81" y="1647.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="276.2" y="1781" width="0.2" height="15.0" fill="rgb(231,75,29)" rx="2" ry="2" />
<text  x="279.19" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="858.4" y="1813" width="0.2" height="15.0" fill="rgb(222,76,49)" rx="2" ry="2" />
<text  x="861.41" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="887.1" y="1813" width="0.2" height="15.0" fill="rgb(210,7,8)" rx="2" ry="2" />
<text  x="890.12" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="183.1" y="1989" width="0.4" height="15.0" fill="rgb(219,152,22)" rx="2" ry="2" />
<text  x="186.07" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="223.7" y="1845" width="0.4" height="15.0" fill="rgb(234,56,37)" rx="2" ry="2" />
<text  x="226.75" y="1855.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="743.8" y="1669" width="0.8" height="15.0" fill="rgb(215,36,23)" rx="2" ry="2" />
<text  x="746.76" y="1679.5" ></text>
</g>
<g >
<title>skb_free_head (15 samples, 0.25%)</title><rect x="1106.5" y="1461" width="2.9" height="15.0" fill="rgb(249,218,30)" rx="2" ry="2" />
<text  x="1109.45" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="333.2" y="1845" width="0.2" height="15.0" fill="rgb(224,28,16)" rx="2" ry="2" />
<text  x="336.21" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="225.9" y="1733" width="0.2" height="15.0" fill="rgb(221,187,23)" rx="2" ry="2" />
<text  x="228.94" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (2 samples, 0.03%)</title><rect x="525.8" y="1957" width="0.4" height="15.0" fill="rgb(216,100,15)" rx="2" ry="2" />
<text  x="528.83" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (113 samples, 1.91%)</title><rect x="779.7" y="1621" width="22.5" height="15.0" fill="rgb(232,83,2)" rx="2" ry="2" />
<text  x="782.65" y="1631.5" >i..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="310.3" y="1541" width="0.2" height="15.0" fill="rgb(218,207,42)" rx="2" ry="2" />
<text  x="313.28" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="278.4" y="1845" width="0.2" height="15.0" fill="rgb(246,5,44)" rx="2" ry="2" />
<text  x="281.38" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="563.7" y="1717" width="0.2" height="15.0" fill="rgb(244,80,47)" rx="2" ry="2" />
<text  x="566.71" y="1727.5" ></text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.02%)</title><rect x="743.0" y="1685" width="0.2" height="15.0" fill="rgb(254,136,45)" rx="2" ry="2" />
<text  x="745.96" y="1695.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="102.9" y="1957" width="0.2" height="15.0" fill="rgb(252,91,22)" rx="2" ry="2" />
<text  x="105.92" y="1967.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="935.2" y="1893" width="0.2" height="15.0" fill="rgb(245,122,31)" rx="2" ry="2" />
<text  x="938.18" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="336.2" y="1813" width="0.2" height="15.0" fill="rgb(251,116,13)" rx="2" ry="2" />
<text  x="339.20" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (49 samples, 0.83%)</title><rect x="1101.5" y="1781" width="9.7" height="15.0" fill="rgb(206,90,1)" rx="2" ry="2" />
<text  x="1104.47" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="325" width="14.0" height="15.0" fill="rgb(224,211,23)" rx="2" ry="2" />
<text  x="108.11" y="335.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1397" width="15.8" height="15.0" fill="rgb(241,125,12)" rx="2" ry="2" />
<text  x="107.71" y="1407.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="1157.5" y="1621" width="0.2" height="15.0" fill="rgb(208,200,30)" rx="2" ry="2" />
<text  x="1160.50" y="1631.5" ></text>
</g>
<g >
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="807.6" y="1669" width="0.4" height="15.0" fill="rgb(206,51,42)" rx="2" ry="2" />
<text  x="810.57" y="1679.5" ></text>
</g>
<g >
<title>__slab_free (13 samples, 0.22%)</title><rect x="1106.9" y="1429" width="2.5" height="15.0" fill="rgb(212,180,6)" rx="2" ry="2" />
<text  x="1109.85" y="1439.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="231.3" y="1861" width="0.2" height="15.0" fill="rgb(245,205,54)" rx="2" ry="2" />
<text  x="234.32" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="283.2" y="1749" width="0.2" height="15.0" fill="rgb(253,56,19)" rx="2" ry="2" />
<text  x="286.17" y="1759.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="940.4" y="1941" width="0.2" height="15.0" fill="rgb(243,4,53)" rx="2" ry="2" />
<text  x="943.36" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="386.9" y="1797" width="0.1" height="15.0" fill="rgb(230,174,32)" rx="2" ry="2" />
<text  x="389.85" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="63.8" y="1877" width="0.2" height="15.0" fill="rgb(249,129,43)" rx="2" ry="2" />
<text  x="66.84" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="462.4" y="1589" width="0.2" height="15.0" fill="rgb(247,178,38)" rx="2" ry="2" />
<text  x="465.42" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="453.0" y="1797" width="0.2" height="15.0" fill="rgb(237,26,28)" rx="2" ry="2" />
<text  x="456.05" y="1807.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="600.0" y="1493" width="0.2" height="15.0" fill="rgb(234,227,52)" rx="2" ry="2" />
<text  x="603.00" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="527.4" y="1957" width="0.8" height="15.0" fill="rgb(232,164,14)" rx="2" ry="2" />
<text  x="530.42" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="695.1" y="1861" width="0.2" height="15.0" fill="rgb(252,101,5)" rx="2" ry="2" />
<text  x="698.11" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (25 samples, 0.42%)</title><rect x="997.4" y="2005" width="5.0" height="15.0" fill="rgb(226,166,19)" rx="2" ry="2" />
<text  x="1000.39" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="521.2" y="1941" width="0.2" height="15.0" fill="rgb(209,87,28)" rx="2" ry="2" />
<text  x="524.24" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="324.4" y="1621" width="0.4" height="15.0" fill="rgb(219,190,53)" rx="2" ry="2" />
<text  x="327.44" y="1631.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="153.2" y="1893" width="0.2" height="15.0" fill="rgb(227,214,10)" rx="2" ry="2" />
<text  x="156.16" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1012.7" y="1781" width="0.2" height="15.0" fill="rgb(218,39,17)" rx="2" ry="2" />
<text  x="1015.74" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="488.7" y="1941" width="0.2" height="15.0" fill="rgb(239,191,13)" rx="2" ry="2" />
<text  x="491.74" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="32.1" y="1845" width="0.2" height="15.0" fill="rgb(243,172,21)" rx="2" ry="2" />
<text  x="35.13" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="533" width="14.0" height="15.0" fill="rgb(227,125,34)" rx="2" ry="2" />
<text  x="108.11" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="397.4" y="1653" width="0.2" height="15.0" fill="rgb(229,66,9)" rx="2" ry="2" />
<text  x="400.42" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1429" width="15.8" height="15.0" fill="rgb(244,174,43)" rx="2" ry="2" />
<text  x="107.71" y="1439.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="481.0" y="1893" width="0.4" height="15.0" fill="rgb(213,40,26)" rx="2" ry="2" />
<text  x="483.96" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="528.4" y="1973" width="0.8" height="15.0" fill="rgb(233,64,47)" rx="2" ry="2" />
<text  x="531.42" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="17.6" y="1813" width="0.2" height="15.0" fill="rgb(242,2,25)" rx="2" ry="2" />
<text  x="20.58" y="1823.5" ></text>
</g>
<g >
<title>skb_release_data (37 samples, 0.63%)</title><rect x="1068.4" y="1893" width="7.3" height="15.0" fill="rgb(214,177,7)" rx="2" ry="2" />
<text  x="1071.37" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="144.4" y="1893" width="0.2" height="15.0" fill="rgb(253,69,25)" rx="2" ry="2" />
<text  x="147.39" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.4" y="1925" width="0.2" height="15.0" fill="rgb(253,100,45)" rx="2" ry="2" />
<text  x="146.39" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="391.6" y="1893" width="0.4" height="15.0" fill="rgb(240,102,40)" rx="2" ry="2" />
<text  x="394.64" y="1903.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="618.9" y="1941" width="1.0" height="15.0" fill="rgb(250,192,25)" rx="2" ry="2" />
<text  x="621.94" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="965" width="14.2" height="15.0" fill="rgb(223,188,47)" rx="2" ry="2" />
<text  x="108.11" y="975.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="228.5" y="1893" width="0.6" height="15.0" fill="rgb(224,84,21)" rx="2" ry="2" />
<text  x="231.53" y="1903.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="222.2" y="1877" width="0.2" height="15.0" fill="rgb(254,186,3)" rx="2" ry="2" />
<text  x="225.15" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1116.2" y="1765" width="0.2" height="15.0" fill="rgb(237,186,18)" rx="2" ry="2" />
<text  x="1119.23" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.15%)</title><rect x="325.0" y="1733" width="1.8" height="15.0" fill="rgb(220,165,16)" rx="2" ry="2" />
<text  x="328.04" y="1743.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="125.2" y="1941" width="0.2" height="15.0" fill="rgb(227,182,48)" rx="2" ry="2" />
<text  x="128.25" y="1951.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (4 samples, 0.07%)</title><rect x="1179.6" y="2053" width="0.8" height="15.0" fill="rgb(211,169,3)" rx="2" ry="2" />
<text  x="1182.63" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="907.1" y="1957" width="0.2" height="15.0" fill="rgb(251,46,41)" rx="2" ry="2" />
<text  x="910.06" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (184 samples, 3.11%)</title><rect x="919.2" y="2021" width="36.7" height="15.0" fill="rgb(242,117,16)" rx="2" ry="2" />
<text  x="922.23" y="2031.5" >[un..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="996.4" y="1941" width="0.2" height="15.0" fill="rgb(222,167,20)" rx="2" ry="2" />
<text  x="999.39" y="1951.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1127.2" y="2053" width="0.2" height="15.0" fill="rgb(230,43,18)" rx="2" ry="2" />
<text  x="1130.19" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.34%)</title><rect x="638.3" y="1941" width="4.0" height="15.0" fill="rgb(249,175,34)" rx="2" ry="2" />
<text  x="641.28" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="481.0" y="1685" width="0.2" height="15.0" fill="rgb(234,81,21)" rx="2" ry="2" />
<text  x="483.96" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="697.9" y="1909" width="0.2" height="15.0" fill="rgb(225,121,41)" rx="2" ry="2" />
<text  x="700.90" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (11 samples, 0.19%)</title><rect x="173.3" y="1989" width="2.2" height="15.0" fill="rgb(208,107,17)" rx="2" ry="2" />
<text  x="176.30" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="324.4" y="1589" width="0.4" height="15.0" fill="rgb(250,217,50)" rx="2" ry="2" />
<text  x="327.44" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1013.1" y="1893" width="0.2" height="15.0" fill="rgb(219,120,29)" rx="2" ry="2" />
<text  x="1016.14" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="640.5" y="1893" width="0.2" height="15.0" fill="rgb(228,128,2)" rx="2" ry="2" />
<text  x="643.48" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (5 samples, 0.08%)</title><rect x="948.5" y="2005" width="1.0" height="15.0" fill="rgb(246,101,52)" rx="2" ry="2" />
<text  x="951.54" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="577.5" y="1989" width="1.2" height="15.0" fill="rgb(230,219,6)" rx="2" ry="2" />
<text  x="580.47" y="1999.5" ></text>
</g>
<g >
<title>watchdog_timer_fn (1 samples, 0.02%)</title><rect x="914.0" y="1957" width="0.2" height="15.0" fill="rgb(225,37,48)" rx="2" ry="2" />
<text  x="917.04" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="268.2" y="1845" width="0.2" height="15.0" fill="rgb(210,219,36)" rx="2" ry="2" />
<text  x="271.21" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (8 samples, 0.14%)</title><rect x="1131.2" y="2037" width="1.6" height="15.0" fill="rgb(207,91,18)" rx="2" ry="2" />
<text  x="1134.18" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="157.9" y="1701" width="0.2" height="15.0" fill="rgb(254,4,40)" rx="2" ry="2" />
<text  x="160.95" y="1711.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1003.8" y="1973" width="0.8" height="15.0" fill="rgb(209,127,8)" rx="2" ry="2" />
<text  x="1006.77" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="907.1" y="1845" width="0.2" height="15.0" fill="rgb(232,111,3)" rx="2" ry="2" />
<text  x="910.06" y="1855.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (1 samples, 0.02%)</title><rect x="534.2" y="2021" width="0.2" height="15.0" fill="rgb(245,16,41)" rx="2" ry="2" />
<text  x="537.20" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="704.5" y="1813" width="0.2" height="15.0" fill="rgb(210,216,32)" rx="2" ry="2" />
<text  x="707.48" y="1823.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="888.3" y="1941" width="0.2" height="15.0" fill="rgb(233,138,30)" rx="2" ry="2" />
<text  x="891.32" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1178.0" y="1845" width="0.2" height="15.0" fill="rgb(238,160,16)" rx="2" ry="2" />
<text  x="1181.04" y="1855.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="832.3" y="1557" width="0.2" height="15.0" fill="rgb(245,153,43)" rx="2" ry="2" />
<text  x="835.29" y="1567.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (3 samples, 0.05%)</title><rect x="689.1" y="1941" width="0.6" height="15.0" fill="rgb(218,188,1)" rx="2" ry="2" />
<text  x="692.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="916.6" y="2037" width="0.4" height="15.0" fill="rgb(216,173,36)" rx="2" ry="2" />
<text  x="919.63" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="956.9" y="1989" width="0.2" height="15.0" fill="rgb(228,117,28)" rx="2" ry="2" />
<text  x="959.91" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="1162.3" y="2053" width="0.2" height="15.0" fill="rgb(225,205,42)" rx="2" ry="2" />
<text  x="1165.28" y="2063.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="285.2" y="1797" width="0.2" height="15.0" fill="rgb(240,200,9)" rx="2" ry="2" />
<text  x="288.16" y="1807.5" ></text>
</g>
<g >
<title>tcp_current_mss (15 samples, 0.25%)</title><rect x="330.4" y="1861" width="3.0" height="15.0" fill="rgb(245,173,36)" rx="2" ry="2" />
<text  x="333.42" y="1871.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="782.0" y="1557" width="0.4" height="15.0" fill="rgb(237,66,18)" rx="2" ry="2" />
<text  x="785.04" y="1567.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="35.1" y="1957" width="0.4" height="15.0" fill="rgb(212,53,52)" rx="2" ry="2" />
<text  x="38.12" y="1967.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="771.1" y="1685" width="0.2" height="15.0" fill="rgb(213,136,33)" rx="2" ry="2" />
<text  x="774.08" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="124.7" y="1813" width="0.1" height="15.0" fill="rgb(244,162,47)" rx="2" ry="2" />
<text  x="127.65" y="1823.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (2 samples, 0.03%)</title><rect x="677.2" y="1973" width="0.4" height="15.0" fill="rgb(245,1,38)" rx="2" ry="2" />
<text  x="680.16" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="981" width="14.2" height="15.0" fill="rgb(234,161,35)" rx="2" ry="2" />
<text  x="108.11" y="991.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.1" y="1893" width="0.2" height="15.0" fill="rgb(218,134,0)" rx="2" ry="2" />
<text  x="890.12" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="118.9" y="213" width="0.2" height="15.0" fill="rgb(218,171,36)" rx="2" ry="2" />
<text  x="121.87" y="223.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="1145.3" y="1845" width="0.2" height="15.0" fill="rgb(229,191,6)" rx="2" ry="2" />
<text  x="1148.34" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (13 samples, 0.22%)</title><rect x="983.6" y="1957" width="2.6" height="15.0" fill="rgb(214,68,21)" rx="2" ry="2" />
<text  x="986.63" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="890.1" y="1941" width="0.2" height="15.0" fill="rgb(214,153,29)" rx="2" ry="2" />
<text  x="893.11" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="576.3" y="1957" width="0.8" height="15.0" fill="rgb(238,39,36)" rx="2" ry="2" />
<text  x="579.27" y="1967.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1188.4" y="2037" width="0.8" height="15.0" fill="rgb(220,83,26)" rx="2" ry="2" />
<text  x="1191.40" y="2047.5" ></text>
</g>
<g >
<title>sys_setsockopt (41 samples, 0.69%)</title><rect x="689.7" y="1941" width="8.2" height="15.0" fill="rgb(242,1,13)" rx="2" ry="2" />
<text  x="692.73" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1121.2" y="1989" width="0.2" height="15.0" fill="rgb(252,108,14)" rx="2" ry="2" />
<text  x="1124.21" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1012.7" y="1685" width="0.2" height="15.0" fill="rgb(243,126,7)" rx="2" ry="2" />
<text  x="1015.74" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (41 samples, 0.69%)</title><rect x="878.0" y="1957" width="8.1" height="15.0" fill="rgb(221,178,18)" rx="2" ry="2" />
<text  x="880.95" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="116.9" y="53" width="0.4" height="15.0" fill="rgb(231,34,50)" rx="2" ry="2" />
<text  x="119.87" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="576.9" y="1861" width="0.2" height="15.0" fill="rgb(226,44,6)" rx="2" ry="2" />
<text  x="579.87" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="230.5" y="1957" width="0.4" height="15.0" fill="rgb(252,143,13)" rx="2" ry="2" />
<text  x="233.53" y="1967.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (2 samples, 0.03%)</title><rect x="1112.6" y="1925" width="0.4" height="15.0" fill="rgb(208,9,44)" rx="2" ry="2" />
<text  x="1115.64" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="885.7" y="1877" width="0.2" height="15.0" fill="rgb(208,85,34)" rx="2" ry="2" />
<text  x="888.73" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="622.9" y="2037" width="0.4" height="15.0" fill="rgb(230,143,44)" rx="2" ry="2" />
<text  x="625.93" y="2047.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (36 samples, 0.61%)</title><rect x="456.0" y="1973" width="7.2" height="15.0" fill="rgb(210,7,1)" rx="2" ry="2" />
<text  x="459.04" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1012.7" y="1829" width="0.2" height="15.0" fill="rgb(215,125,11)" rx="2" ry="2" />
<text  x="1015.74" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="887.1" y="1829" width="0.2" height="15.0" fill="rgb(244,27,26)" rx="2" ry="2" />
<text  x="890.12" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (3 samples, 0.05%)</title><rect x="863.4" y="1989" width="0.6" height="15.0" fill="rgb(231,118,16)" rx="2" ry="2" />
<text  x="866.40" y="1999.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.03%)</title><rect x="57.1" y="1941" width="0.4" height="15.0" fill="rgb(240,74,36)" rx="2" ry="2" />
<text  x="60.06" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="508.3" y="1797" width="0.2" height="15.0" fill="rgb(215,30,17)" rx="2" ry="2" />
<text  x="511.28" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="562.1" y="1749" width="0.2" height="15.0" fill="rgb(218,92,52)" rx="2" ry="2" />
<text  x="565.12" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="644.9" y="1781" width="0.2" height="15.0" fill="rgb(210,123,46)" rx="2" ry="2" />
<text  x="647.86" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (5 samples, 0.08%)</title><rect x="290.7" y="1557" width="1.0" height="15.0" fill="rgb(210,199,7)" rx="2" ry="2" />
<text  x="293.74" y="1567.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="34.1" y="1941" width="0.2" height="15.0" fill="rgb(243,210,6)" rx="2" ry="2" />
<text  x="37.13" y="1951.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="746.2" y="1509" width="0.2" height="15.0" fill="rgb(226,140,17)" rx="2" ry="2" />
<text  x="749.15" y="1519.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="401.8" y="1909" width="0.2" height="15.0" fill="rgb(244,197,40)" rx="2" ry="2" />
<text  x="404.80" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="102.7" y="1989" width="0.2" height="15.0" fill="rgb(227,113,35)" rx="2" ry="2" />
<text  x="105.72" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (1 samples, 0.02%)</title><rect x="975.5" y="2005" width="0.2" height="15.0" fill="rgb(217,214,11)" rx="2" ry="2" />
<text  x="978.45" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="912.6" y="1845" width="0.2" height="15.0" fill="rgb(224,188,45)" rx="2" ry="2" />
<text  x="915.65" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output2 (108 samples, 1.82%)</title><rect x="288.4" y="1749" width="21.5" height="15.0" fill="rgb(220,35,27)" rx="2" ry="2" />
<text  x="291.35" y="1759.5" >i..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (69 samples, 1.17%)</title><rect x="1098.1" y="1925" width="13.7" height="15.0" fill="rgb(218,75,31)" rx="2" ry="2" />
<text  x="1101.08" y="1935.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="372.1" y="1541" width="0.2" height="15.0" fill="rgb(253,50,28)" rx="2" ry="2" />
<text  x="375.10" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="87.2" y="1925" width="0.4" height="15.0" fill="rgb(230,126,30)" rx="2" ry="2" />
<text  x="90.16" y="1935.5" ></text>
</g>
<g >
<title>__destroy_inode (4 samples, 0.07%)</title><rect x="737.2" y="1685" width="0.8" height="15.0" fill="rgb(214,107,48)" rx="2" ry="2" />
<text  x="740.18" y="1695.5" ></text>
</g>
<g >
<title>retint_kernel (1 samples, 0.02%)</title><rect x="337.4" y="2005" width="0.2" height="15.0" fill="rgb(206,148,27)" rx="2" ry="2" />
<text  x="340.40" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="846.8" y="1909" width="0.2" height="15.0" fill="rgb(226,193,24)" rx="2" ry="2" />
<text  x="849.85" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="67.2" y="1909" width="0.2" height="15.0" fill="rgb(237,158,43)" rx="2" ry="2" />
<text  x="70.23" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="338.6" y="1877" width="0.4" height="15.0" fill="rgb(233,166,48)" rx="2" ry="2" />
<text  x="341.60" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (2 samples, 0.03%)</title><rect x="877.6" y="1957" width="0.4" height="15.0" fill="rgb(216,104,47)" rx="2" ry="2" />
<text  x="880.55" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="324.4" y="1717" width="0.4" height="15.0" fill="rgb(231,210,39)" rx="2" ry="2" />
<text  x="327.44" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (24 samples, 0.41%)</title><rect x="653.2" y="2037" width="4.8" height="15.0" fill="rgb(235,31,35)" rx="2" ry="2" />
<text  x="656.24" y="2047.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="512.3" y="1941" width="1.4" height="15.0" fill="rgb(249,165,45)" rx="2" ry="2" />
<text  x="515.27" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.14%)</title><rect x="800.0" y="1525" width="1.6" height="15.0" fill="rgb(251,154,45)" rx="2" ry="2" />
<text  x="802.99" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="572.3" y="1989" width="0.2" height="15.0" fill="rgb(210,212,35)" rx="2" ry="2" />
<text  x="575.28" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1012.7" y="1765" width="0.2" height="15.0" fill="rgb(223,83,48)" rx="2" ry="2" />
<text  x="1015.74" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="918.6" y="2037" width="0.2" height="15.0" fill="rgb(237,86,3)" rx="2" ry="2" />
<text  x="921.63" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="782.2" y="1445" width="0.2" height="15.0" fill="rgb(248,54,35)" rx="2" ry="2" />
<text  x="785.24" y="1455.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="247.1" y="1973" width="0.2" height="15.0" fill="rgb(206,203,41)" rx="2" ry="2" />
<text  x="250.08" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="372.1" y="1557" width="0.2" height="15.0" fill="rgb(231,41,43)" rx="2" ry="2" />
<text  x="375.10" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.0" y="1765" width="0.2" height="15.0" fill="rgb(237,45,17)" rx="2" ry="2" />
<text  x="159.95" y="1775.5" ></text>
</g>
<g >
<title>__d_alloc (17 samples, 0.29%)</title><rect x="405.2" y="1925" width="3.4" height="15.0" fill="rgb(212,71,38)" rx="2" ry="2" />
<text  x="408.19" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1130.2" y="1909" width="0.4" height="15.0" fill="rgb(252,105,29)" rx="2" ry="2" />
<text  x="1133.18" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="290.7" y="1509" width="0.8" height="15.0" fill="rgb(251,158,31)" rx="2" ry="2" />
<text  x="293.74" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.7" y="2005" width="0.2" height="15.0" fill="rgb(215,204,52)" rx="2" ry="2" />
<text  x="1175.65" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.08%)</title><rect x="482.2" y="1957" width="1.0" height="15.0" fill="rgb(244,114,22)" rx="2" ry="2" />
<text  x="485.16" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="386.7" y="1797" width="0.2" height="15.0" fill="rgb(234,112,6)" rx="2" ry="2" />
<text  x="389.65" y="1807.5" ></text>
</g>
<g >
<title>__libc_recv (498 samples, 8.42%)</title><rect x="1027.1" y="2053" width="99.3" height="15.0" fill="rgb(210,57,38)" rx="2" ry="2" />
<text  x="1030.10" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="902.9" y="2037" width="0.2" height="15.0" fill="rgb(214,16,21)" rx="2" ry="2" />
<text  x="905.88" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="746.2" y="1685" width="0.4" height="15.0" fill="rgb(225,215,27)" rx="2" ry="2" />
<text  x="749.15" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="840.7" y="1925" width="0.2" height="15.0" fill="rgb(245,100,21)" rx="2" ry="2" />
<text  x="843.67" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="950.9" y="2005" width="0.4" height="15.0" fill="rgb(205,134,12)" rx="2" ry="2" />
<text  x="953.93" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="105.9" y="37" width="0.4" height="15.0" fill="rgb(218,144,48)" rx="2" ry="2" />
<text  x="108.91" y="47.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="514.9" y="1973" width="0.2" height="15.0" fill="rgb(243,9,26)" rx="2" ry="2" />
<text  x="517.86" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1157.5" y="1893" width="0.2" height="15.0" fill="rgb(236,195,23)" rx="2" ry="2" />
<text  x="1160.50" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="453.0" y="1669" width="0.2" height="15.0" fill="rgb(206,73,10)" rx="2" ry="2" />
<text  x="456.05" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1130.2" y="1973" width="0.4" height="15.0" fill="rgb(247,104,30)" rx="2" ry="2" />
<text  x="1133.18" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="665.2" y="1621" width="0.2" height="15.0" fill="rgb(207,101,50)" rx="2" ry="2" />
<text  x="668.20" y="1631.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="675.2" y="1685" width="0.2" height="15.0" fill="rgb(215,81,25)" rx="2" ry="2" />
<text  x="678.17" y="1695.5" ></text>
</g>
<g >
<title>sock_sendmsg (421 samples, 7.11%)</title><rect x="252.3" y="1941" width="83.9" height="15.0" fill="rgb(232,69,11)" rx="2" ry="2" />
<text  x="255.26" y="1951.5" >sock_send..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="755.1" y="1733" width="0.2" height="15.0" fill="rgb(240,229,10)" rx="2" ry="2" />
<text  x="758.13" y="1743.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1111.0" y="1525" width="0.2" height="15.0" fill="rgb(227,103,53)" rx="2" ry="2" />
<text  x="1114.04" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="846.8" y="1813" width="0.2" height="15.0" fill="rgb(242,190,0)" rx="2" ry="2" />
<text  x="849.85" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (303 samples, 5.12%)</title><rect x="351.2" y="2005" width="60.4" height="15.0" fill="rgb(220,150,12)" rx="2" ry="2" />
<text  x="354.16" y="2015.5" >do_sys..</text>
</g>
<g >
<title>__local_bh_enable_ip (17 samples, 0.29%)</title><rect x="289.9" y="1733" width="3.4" height="15.0" fill="rgb(252,157,54)" rx="2" ry="2" />
<text  x="292.95" y="1743.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1121.4" y="1717" width="0.2" height="15.0" fill="rgb(229,169,40)" rx="2" ry="2" />
<text  x="1124.41" y="1727.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (59 samples, 1.00%)</title><rect x="606.0" y="1957" width="11.7" height="15.0" fill="rgb(221,154,52)" rx="2" ry="2" />
<text  x="608.98" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="652.4" y="2005" width="0.2" height="15.0" fill="rgb(207,97,42)" rx="2" ry="2" />
<text  x="655.44" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="914.0" y="2037" width="0.2" height="15.0" fill="rgb(241,66,44)" rx="2" ry="2" />
<text  x="917.04" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="625.7" y="2005" width="0.2" height="15.0" fill="rgb(214,88,25)" rx="2" ry="2" />
<text  x="628.72" y="2015.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="996.4" y="1669" width="0.2" height="15.0" fill="rgb(216,30,3)" rx="2" ry="2" />
<text  x="999.39" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="453.0" y="1765" width="0.2" height="15.0" fill="rgb(212,127,16)" rx="2" ry="2" />
<text  x="456.05" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="134.8" y="1941" width="0.2" height="15.0" fill="rgb(242,200,51)" rx="2" ry="2" />
<text  x="137.82" y="1951.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="453.0" y="1637" width="0.2" height="15.0" fill="rgb(232,30,22)" rx="2" ry="2" />
<text  x="456.05" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="884.7" y="1797" width="0.2" height="15.0" fill="rgb(222,46,21)" rx="2" ry="2" />
<text  x="887.73" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="640.5" y="1877" width="0.2" height="15.0" fill="rgb(222,20,30)" rx="2" ry="2" />
<text  x="643.48" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="264.2" y="1669" width="0.2" height="15.0" fill="rgb(208,16,30)" rx="2" ry="2" />
<text  x="267.22" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="111.3" y="37" width="1.2" height="15.0" fill="rgb(231,166,49)" rx="2" ry="2" />
<text  x="114.29" y="47.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1049.8" y="1685" width="0.2" height="15.0" fill="rgb(236,83,5)" rx="2" ry="2" />
<text  x="1052.83" y="1695.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="144.8" y="1813" width="0.2" height="15.0" fill="rgb(219,145,12)" rx="2" ry="2" />
<text  x="147.79" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="982.0" y="1877" width="0.2" height="15.0" fill="rgb(241,33,27)" rx="2" ry="2" />
<text  x="985.03" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1012.7" y="1589" width="0.2" height="15.0" fill="rgb(249,45,27)" rx="2" ry="2" />
<text  x="1015.74" y="1599.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="492.5" y="1909" width="0.2" height="15.0" fill="rgb(230,22,28)" rx="2" ry="2" />
<text  x="495.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_push (243 samples, 4.11%)</title><rect x="279.2" y="1877" width="48.4" height="15.0" fill="rgb(225,178,29)" rx="2" ry="2" />
<text  x="282.18" y="1887.5" >tcp_..</text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="194.0" y="2021" width="0.4" height="15.0" fill="rgb(218,161,27)" rx="2" ry="2" />
<text  x="197.04" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="163.5" y="2005" width="0.2" height="15.0" fill="rgb(221,27,1)" rx="2" ry="2" />
<text  x="166.53" y="2015.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="912.6" y="1685" width="0.2" height="15.0" fill="rgb(249,33,24)" rx="2" ry="2" />
<text  x="915.65" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="139.2" y="1941" width="0.4" height="15.0" fill="rgb(207,88,48)" rx="2" ry="2" />
<text  x="142.21" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="104.5" y="1653" width="0.2" height="15.0" fill="rgb(230,89,53)" rx="2" ry="2" />
<text  x="107.51" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (8 samples, 0.14%)</title><rect x="148.8" y="1893" width="1.6" height="15.0" fill="rgb(241,33,20)" rx="2" ry="2" />
<text  x="151.78" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (43 samples, 0.73%)</title><rect x="60.0" y="1973" width="8.6" height="15.0" fill="rgb(254,114,16)" rx="2" ry="2" />
<text  x="63.05" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="630.1" y="1941" width="0.2" height="15.0" fill="rgb(238,164,44)" rx="2" ry="2" />
<text  x="633.11" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="377.7" y="1829" width="0.2" height="15.0" fill="rgb(210,204,30)" rx="2" ry="2" />
<text  x="380.68" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="933" width="14.2" height="15.0" fill="rgb(245,163,40)" rx="2" ry="2" />
<text  x="108.11" y="943.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="615.8" y="1557" width="0.2" height="15.0" fill="rgb(223,112,27)" rx="2" ry="2" />
<text  x="618.75" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="1019.9" y="2037" width="0.2" height="15.0" fill="rgb(250,22,46)" rx="2" ry="2" />
<text  x="1022.92" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1008.8" y="1813" width="0.2" height="15.0" fill="rgb(223,70,30)" rx="2" ry="2" />
<text  x="1011.75" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="274.4" y="1797" width="0.2" height="15.0" fill="rgb(239,184,29)" rx="2" ry="2" />
<text  x="277.39" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="32.1" y="1685" width="0.2" height="15.0" fill="rgb(231,143,18)" rx="2" ry="2" />
<text  x="35.13" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="97.9" y="2021" width="0.2" height="15.0" fill="rgb(212,214,3)" rx="2" ry="2" />
<text  x="100.93" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_free (21 samples, 0.35%)</title><rect x="1063.8" y="1893" width="4.2" height="15.0" fill="rgb(228,88,41)" rx="2" ry="2" />
<text  x="1066.79" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="264.2" y="1813" width="0.4" height="15.0" fill="rgb(218,144,36)" rx="2" ry="2" />
<text  x="267.22" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1119.8" y="1765" width="0.2" height="15.0" fill="rgb(216,37,7)" rx="2" ry="2" />
<text  x="1122.81" y="1775.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="841.7" y="1909" width="0.4" height="15.0" fill="rgb(234,109,51)" rx="2" ry="2" />
<text  x="844.66" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (6 samples, 0.10%)</title><rect x="901.1" y="2037" width="1.2" height="15.0" fill="rgb(213,225,54)" rx="2" ry="2" />
<text  x="904.08" y="2047.5" ></text>
</g>
<g >
<title>note_interrupt (1 samples, 0.02%)</title><rect x="479.0" y="1861" width="0.2" height="15.0" fill="rgb(232,84,8)" rx="2" ry="2" />
<text  x="481.97" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="907.1" y="1877" width="0.2" height="15.0" fill="rgb(223,31,1)" rx="2" ry="2" />
<text  x="910.06" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="866.6" y="1957" width="0.2" height="15.0" fill="rgb(253,192,6)" rx="2" ry="2" />
<text  x="869.59" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="386.7" y="1461" width="0.2" height="15.0" fill="rgb(234,89,24)" rx="2" ry="2" />
<text  x="389.65" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.3" y="1877" width="20.4" height="15.0" fill="rgb(243,164,30)" rx="2" ry="2" />
<text  x="107.31" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="603.2" y="1989" width="0.2" height="15.0" fill="rgb(223,68,1)" rx="2" ry="2" />
<text  x="606.19" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="901.7" y="1957" width="0.2" height="15.0" fill="rgb(242,153,48)" rx="2" ry="2" />
<text  x="904.68" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="830.9" y="1717" width="0.2" height="15.0" fill="rgb(219,1,16)" rx="2" ry="2" />
<text  x="833.90" y="1727.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="88.4" y="1957" width="0.2" height="15.0" fill="rgb(227,212,26)" rx="2" ry="2" />
<text  x="91.36" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1045" width="14.4" height="15.0" fill="rgb(214,115,14)" rx="2" ry="2" />
<text  x="108.11" y="1055.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="338.2" y="2005" width="0.8" height="15.0" fill="rgb(247,124,19)" rx="2" ry="2" />
<text  x="341.20" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="998.4" y="1941" width="0.2" height="15.0" fill="rgb(224,42,23)" rx="2" ry="2" />
<text  x="1001.38" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (4 samples, 0.07%)</title><rect x="911.1" y="2005" width="0.7" height="15.0" fill="rgb(233,137,16)" rx="2" ry="2" />
<text  x="914.05" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="154.8" y="1877" width="0.2" height="15.0" fill="rgb(220,125,30)" rx="2" ry="2" />
<text  x="157.76" y="1887.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="386.7" y="1573" width="0.2" height="15.0" fill="rgb(209,16,2)" rx="2" ry="2" />
<text  x="389.65" y="1583.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="755.9" y="1733" width="0.4" height="15.0" fill="rgb(207,129,24)" rx="2" ry="2" />
<text  x="758.92" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1365" width="15.8" height="15.0" fill="rgb(226,76,41)" rx="2" ry="2" />
<text  x="107.71" y="1375.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="84.0" y="1909" width="0.4" height="15.0" fill="rgb(209,171,28)" rx="2" ry="2" />
<text  x="86.97" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="482.8" y="1525" width="0.2" height="15.0" fill="rgb(247,7,27)" rx="2" ry="2" />
<text  x="485.76" y="1535.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="393.8" y="1877" width="0.2" height="15.0" fill="rgb(222,7,24)" rx="2" ry="2" />
<text  x="396.83" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (54 samples, 0.91%)</title><rect x="1101.1" y="1893" width="10.7" height="15.0" fill="rgb(246,161,18)" rx="2" ry="2" />
<text  x="1104.07" y="1903.5" ></text>
</g>
<g >
<title>___d_drop (1 samples, 0.02%)</title><rect x="730.6" y="1765" width="0.2" height="15.0" fill="rgb(244,4,29)" rx="2" ry="2" />
<text  x="733.60" y="1775.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="291.5" y="1541" width="0.2" height="15.0" fill="rgb(210,156,20)" rx="2" ry="2" />
<text  x="294.54" y="1551.5" ></text>
</g>
<g >
<title>__fget (12 samples, 0.20%)</title><rect x="1117.6" y="1925" width="2.4" height="15.0" fill="rgb(246,163,17)" rx="2" ry="2" />
<text  x="1120.62" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="848.4" y="1941" width="0.4" height="15.0" fill="rgb(209,174,14)" rx="2" ry="2" />
<text  x="851.44" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="32.1" y="1621" width="0.2" height="15.0" fill="rgb(253,69,30)" rx="2" ry="2" />
<text  x="35.13" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (6 samples, 0.10%)</title><rect x="291.9" y="1637" width="1.2" height="15.0" fill="rgb(224,189,54)" rx="2" ry="2" />
<text  x="294.94" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="161.3" y="2005" width="0.4" height="15.0" fill="rgb(232,46,18)" rx="2" ry="2" />
<text  x="164.34" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1013.1" y="1733" width="0.2" height="15.0" fill="rgb(216,11,2)" rx="2" ry="2" />
<text  x="1016.14" y="1743.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="830.9" y="1733" width="0.2" height="15.0" fill="rgb(214,172,40)" rx="2" ry="2" />
<text  x="833.90" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="542.0" y="1701" width="0.2" height="15.0" fill="rgb(215,139,4)" rx="2" ry="2" />
<text  x="544.98" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (36 samples, 0.61%)</title><rect x="930.6" y="1925" width="7.2" height="15.0" fill="rgb(235,66,18)" rx="2" ry="2" />
<text  x="933.59" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="150.4" y="1893" width="0.8" height="15.0" fill="rgb(215,90,18)" rx="2" ry="2" />
<text  x="153.37" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="856.2" y="1813" width="0.2" height="15.0" fill="rgb(217,154,39)" rx="2" ry="2" />
<text  x="859.22" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2 samples, 0.03%)</title><rect x="1000.4" y="1973" width="0.4" height="15.0" fill="rgb(206,203,46)" rx="2" ry="2" />
<text  x="1003.38" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="134.4" y="1893" width="0.2" height="15.0" fill="rgb(214,119,26)" rx="2" ry="2" />
<text  x="137.42" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="627.9" y="2037" width="0.2" height="15.0" fill="rgb(230,3,12)" rx="2" ry="2" />
<text  x="630.91" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1180.8" y="2037" width="0.2" height="15.0" fill="rgb(220,168,35)" rx="2" ry="2" />
<text  x="1183.83" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="78.4" y="1829" width="0.2" height="15.0" fill="rgb(239,33,12)" rx="2" ry="2" />
<text  x="81.39" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1130.2" y="1957" width="0.4" height="15.0" fill="rgb(252,182,7)" rx="2" ry="2" />
<text  x="1133.18" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="152.0" y="1893" width="0.2" height="15.0" fill="rgb(216,43,39)" rx="2" ry="2" />
<text  x="154.97" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="774.7" y="1669" width="0.2" height="15.0" fill="rgb(210,109,9)" rx="2" ry="2" />
<text  x="777.67" y="1679.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="199.6" y="2037" width="0.2" height="15.0" fill="rgb(244,66,24)" rx="2" ry="2" />
<text  x="202.62" y="2047.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="580.1" y="1941" width="0.2" height="15.0" fill="rgb(212,116,46)" rx="2" ry="2" />
<text  x="583.06" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="77.2" y="1941" width="0.2" height="15.0" fill="rgb(218,12,15)" rx="2" ry="2" />
<text  x="80.19" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="542.0" y="1845" width="0.2" height="15.0" fill="rgb(254,129,2)" rx="2" ry="2" />
<text  x="544.98" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1158.3" y="1541" width="0.2" height="15.0" fill="rgb(209,130,23)" rx="2" ry="2" />
<text  x="1161.30" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (17 samples, 0.29%)</title><rect x="893.1" y="2005" width="3.4" height="15.0" fill="rgb(206,126,26)" rx="2" ry="2" />
<text  x="896.11" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="256.4" y="1877" width="0.2" height="15.0" fill="rgb(248,86,9)" rx="2" ry="2" />
<text  x="259.45" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="462.2" y="1909" width="0.2" height="15.0" fill="rgb(222,192,34)" rx="2" ry="2" />
<text  x="465.22" y="1919.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="1017.3" y="2037" width="0.8" height="15.0" fill="rgb(206,87,54)" rx="2" ry="2" />
<text  x="1020.33" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="993.2" y="1989" width="0.2" height="15.0" fill="rgb(244,152,27)" rx="2" ry="2" />
<text  x="996.20" y="1999.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="390.8" y="1877" width="0.2" height="15.0" fill="rgb(232,98,43)" rx="2" ry="2" />
<text  x="393.84" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.08%)</title><rect x="482.2" y="2021" width="1.0" height="15.0" fill="rgb(240,114,15)" rx="2" ry="2" />
<text  x="485.16" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="924.4" y="1909" width="0.4" height="15.0" fill="rgb(239,213,17)" rx="2" ry="2" />
<text  x="927.41" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="189.9" y="1797" width="0.2" height="15.0" fill="rgb(224,103,43)" rx="2" ry="2" />
<text  x="192.85" y="1807.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (3 samples, 0.05%)</title><rect x="885.1" y="1941" width="0.6" height="15.0" fill="rgb(231,161,11)" rx="2" ry="2" />
<text  x="888.13" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="996.4" y="1621" width="0.2" height="15.0" fill="rgb(207,86,12)" rx="2" ry="2" />
<text  x="999.39" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="842.9" y="1829" width="0.2" height="15.0" fill="rgb(241,39,40)" rx="2" ry="2" />
<text  x="845.86" y="1839.5" ></text>
</g>
<g >
<title>ep_remove (49 samples, 0.83%)</title><rect x="463.2" y="1973" width="9.8" height="15.0" fill="rgb(212,27,23)" rx="2" ry="2" />
<text  x="466.22" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="84.4" y="1925" width="0.2" height="15.0" fill="rgb(233,126,16)" rx="2" ry="2" />
<text  x="87.37" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1126.8" y="1925" width="0.2" height="15.0" fill="rgb(253,27,47)" rx="2" ry="2" />
<text  x="1129.79" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="832.3" y="1797" width="0.2" height="15.0" fill="rgb(208,29,30)" rx="2" ry="2" />
<text  x="835.29" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="402.4" y="1797" width="0.2" height="15.0" fill="rgb(209,94,1)" rx="2" ry="2" />
<text  x="405.40" y="1807.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="310.3" y="1445" width="0.2" height="15.0" fill="rgb(214,168,41)" rx="2" ry="2" />
<text  x="313.28" y="1455.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (14 samples, 0.24%)</title><rect x="965.7" y="2037" width="2.8" height="15.0" fill="rgb(231,208,11)" rx="2" ry="2" />
<text  x="968.68" y="2047.5" ></text>
</g>
<g >
<title>_mix_pool_bytes (1 samples, 0.02%)</title><rect x="1157.7" y="1829" width="0.2" height="15.0" fill="rgb(229,18,14)" rx="2" ry="2" />
<text  x="1160.70" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (47 samples, 0.79%)</title><rect x="1101.9" y="1557" width="9.3" height="15.0" fill="rgb(239,67,24)" rx="2" ry="2" />
<text  x="1104.87" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.4" y="1941" width="0.2" height="15.0" fill="rgb(229,39,44)" rx="2" ry="2" />
<text  x="861.41" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="309" width="14.0" height="15.0" fill="rgb(211,3,4)" rx="2" ry="2" />
<text  x="108.11" y="319.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="291.1" y="1413" width="0.2" height="15.0" fill="rgb(207,164,42)" rx="2" ry="2" />
<text  x="294.14" y="1423.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="480.8" y="1973" width="0.6" height="15.0" fill="rgb(215,139,46)" rx="2" ry="2" />
<text  x="483.76" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="779.5" y="1621" width="0.2" height="15.0" fill="rgb(243,105,34)" rx="2" ry="2" />
<text  x="782.45" y="1631.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (353 samples, 5.96%)</title><rect x="26.0" y="2037" width="70.3" height="15.0" fill="rgb(241,162,45)" rx="2" ry="2" />
<text  x="28.95" y="2047.5" >folly::..</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1157.7" y="1877" width="0.2" height="15.0" fill="rgb(217,73,10)" rx="2" ry="2" />
<text  x="1160.70" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="531.8" y="1909" width="0.2" height="15.0" fill="rgb(212,160,14)" rx="2" ry="2" />
<text  x="534.81" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="817.5" y="1461" width="0.2" height="15.0" fill="rgb(223,10,2)" rx="2" ry="2" />
<text  x="820.54" y="1471.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="397.2" y="1877" width="0.2" height="15.0" fill="rgb(242,150,46)" rx="2" ry="2" />
<text  x="400.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="157.0" y="1557" width="0.2" height="15.0" fill="rgb(231,34,21)" rx="2" ry="2" />
<text  x="159.95" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="402.4" y="1845" width="0.2" height="15.0" fill="rgb(212,79,11)" rx="2" ry="2" />
<text  x="405.40" y="1855.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="231.7" y="1957" width="0.2" height="15.0" fill="rgb(245,149,35)" rx="2" ry="2" />
<text  x="234.72" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="863.8" y="1941" width="0.2" height="15.0" fill="rgb(239,89,7)" rx="2" ry="2" />
<text  x="866.80" y="1951.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (2 samples, 0.03%)</title><rect x="486.9" y="2037" width="0.4" height="15.0" fill="rgb(214,201,16)" rx="2" ry="2" />
<text  x="489.94" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="404.6" y="1669" width="0.2" height="15.0" fill="rgb(216,114,23)" rx="2" ry="2" />
<text  x="407.60" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="79.0" y="1957" width="0.6" height="15.0" fill="rgb(208,191,12)" rx="2" ry="2" />
<text  x="81.99" y="1967.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="292.1" y="1525" width="0.2" height="15.0" fill="rgb(211,101,24)" rx="2" ry="2" />
<text  x="295.14" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="82.8" y="1957" width="0.8" height="15.0" fill="rgb(239,126,23)" rx="2" ry="2" />
<text  x="85.78" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="10.8" y="1877" width="0.2" height="15.0" fill="rgb(219,66,27)" rx="2" ry="2" />
<text  x="13.80" y="1887.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (4 samples, 0.07%)</title><rect x="964.7" y="2005" width="0.8" height="15.0" fill="rgb(221,221,8)" rx="2" ry="2" />
<text  x="967.69" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="745.8" y="1781" width="0.2" height="15.0" fill="rgb(205,181,41)" rx="2" ry="2" />
<text  x="748.76" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="2037" width="0.2" height="15.0" fill="rgb(231,63,35)" rx="2" ry="2" />
<text  x="1037.28" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1116.2" y="1637" width="0.2" height="15.0" fill="rgb(223,202,29)" rx="2" ry="2" />
<text  x="1119.23" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="697.9" y="1717" width="0.2" height="15.0" fill="rgb(209,56,51)" rx="2" ry="2" />
<text  x="700.90" y="1727.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="157.0" y="1525" width="0.2" height="15.0" fill="rgb(239,1,14)" rx="2" ry="2" />
<text  x="159.95" y="1535.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (16 samples, 0.27%)</title><rect x="1137.6" y="2021" width="3.2" height="15.0" fill="rgb(209,116,53)" rx="2" ry="2" />
<text  x="1140.56" y="2031.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="335.8" y="1877" width="0.2" height="15.0" fill="rgb(251,102,17)" rx="2" ry="2" />
<text  x="338.81" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="975.9" y="2005" width="0.2" height="15.0" fill="rgb(237,116,21)" rx="2" ry="2" />
<text  x="978.85" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="892.7" y="1973" width="0.2" height="15.0" fill="rgb(252,159,45)" rx="2" ry="2" />
<text  x="895.71" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="144.8" y="1893" width="0.2" height="15.0" fill="rgb(227,53,47)" rx="2" ry="2" />
<text  x="147.79" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="114.9" y="37" width="0.2" height="15.0" fill="rgb(245,130,33)" rx="2" ry="2" />
<text  x="117.88" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="884.7" y="1829" width="0.2" height="15.0" fill="rgb(231,53,48)" rx="2" ry="2" />
<text  x="887.73" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="955.5" y="1973" width="0.4" height="15.0" fill="rgb(239,1,48)" rx="2" ry="2" />
<text  x="958.52" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="53.5" y="1797" width="0.2" height="15.0" fill="rgb(235,223,28)" rx="2" ry="2" />
<text  x="56.47" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (4 samples, 0.07%)</title><rect x="576.3" y="1973" width="0.8" height="15.0" fill="rgb(215,53,13)" rx="2" ry="2" />
<text  x="579.27" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="157.0" y="1653" width="0.2" height="15.0" fill="rgb(250,23,32)" rx="2" ry="2" />
<text  x="159.95" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="884.7" y="1701" width="0.2" height="15.0" fill="rgb(254,42,9)" rx="2" ry="2" />
<text  x="887.73" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (35 samples, 0.59%)</title><rect x="145.6" y="1925" width="7.0" height="15.0" fill="rgb(233,170,33)" rx="2" ry="2" />
<text  x="148.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (67 samples, 1.13%)</title><rect x="105.1" y="101" width="13.4" height="15.0" fill="rgb(207,73,8)" rx="2" ry="2" />
<text  x="108.11" y="111.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="982.0" y="1749" width="0.2" height="15.0" fill="rgb(223,186,14)" rx="2" ry="2" />
<text  x="985.03" y="1759.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="97.9" y="1717" width="0.2" height="15.0" fill="rgb(209,85,33)" rx="2" ry="2" />
<text  x="100.93" y="1727.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (2 samples, 0.03%)</title><rect x="32.7" y="1989" width="0.4" height="15.0" fill="rgb(245,204,14)" rx="2" ry="2" />
<text  x="35.73" y="1999.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="386.7" y="1637" width="0.2" height="15.0" fill="rgb(242,102,19)" rx="2" ry="2" />
<text  x="389.65" y="1647.5" ></text>
</g>
<g >
<title>__kfree_skb (30 samples, 0.51%)</title><rect x="1103.7" y="1509" width="5.9" height="15.0" fill="rgb(232,154,46)" rx="2" ry="2" />
<text  x="1106.66" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="542.0" y="1925" width="0.2" height="15.0" fill="rgb(214,55,54)" rx="2" ry="2" />
<text  x="544.98" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1012.7" y="1845" width="0.2" height="15.0" fill="rgb(225,41,35)" rx="2" ry="2" />
<text  x="1015.74" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1145.3" y="1941" width="0.2" height="15.0" fill="rgb(206,104,45)" rx="2" ry="2" />
<text  x="1148.34" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="884.7" y="1733" width="0.2" height="15.0" fill="rgb(246,171,36)" rx="2" ry="2" />
<text  x="887.73" y="1743.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="479.2" y="1973" width="0.4" height="15.0" fill="rgb(207,108,52)" rx="2" ry="2" />
<text  x="482.17" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="256.4" y="1557" width="0.2" height="15.0" fill="rgb(208,18,10)" rx="2" ry="2" />
<text  x="259.45" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="453.8" y="1797" width="0.2" height="15.0" fill="rgb(231,183,10)" rx="2" ry="2" />
<text  x="456.85" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1158.3" y="1685" width="0.2" height="15.0" fill="rgb(232,100,50)" rx="2" ry="2" />
<text  x="1161.30" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="1121.6" y="1717" width="0.2" height="15.0" fill="rgb(248,100,16)" rx="2" ry="2" />
<text  x="1124.61" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1158.3" y="1701" width="0.2" height="15.0" fill="rgb(228,168,2)" rx="2" ry="2" />
<text  x="1161.30" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="912.6" y="1765" width="0.2" height="15.0" fill="rgb(248,180,3)" rx="2" ry="2" />
<text  x="915.65" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="256.2" y="1877" width="0.2" height="15.0" fill="rgb(254,188,12)" rx="2" ry="2" />
<text  x="259.25" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="1139.2" y="1989" width="1.0" height="15.0" fill="rgb(242,180,23)" rx="2" ry="2" />
<text  x="1142.16" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.14%)</title><rect x="387.4" y="1925" width="1.6" height="15.0" fill="rgb(216,113,53)" rx="2" ry="2" />
<text  x="390.45" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1132.4" y="1957" width="0.2" height="15.0" fill="rgb(225,73,48)" rx="2" ry="2" />
<text  x="1135.38" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1020.1" y="2037" width="0.2" height="15.0" fill="rgb(232,137,7)" rx="2" ry="2" />
<text  x="1023.12" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="462.4" y="1925" width="0.2" height="15.0" fill="rgb(237,31,43)" rx="2" ry="2" />
<text  x="465.42" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="546.4" y="1813" width="0.8" height="15.0" fill="rgb(216,128,43)" rx="2" ry="2" />
<text  x="549.36" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1049.8" y="1749" width="0.2" height="15.0" fill="rgb(238,148,1)" rx="2" ry="2" />
<text  x="1052.83" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="704.5" y="1717" width="0.2" height="15.0" fill="rgb(213,130,4)" rx="2" ry="2" />
<text  x="707.48" y="1727.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (52 samples, 0.88%)</title><rect x="1101.5" y="1877" width="10.3" height="15.0" fill="rgb(205,154,45)" rx="2" ry="2" />
<text  x="1104.47" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="151.4" y="1893" width="0.2" height="15.0" fill="rgb(239,12,18)" rx="2" ry="2" />
<text  x="154.37" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="386.7" y="1749" width="0.2" height="15.0" fill="rgb(233,97,18)" rx="2" ry="2" />
<text  x="389.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="104.7" y="1301" width="15.6" height="15.0" fill="rgb(237,217,46)" rx="2" ry="2" />
<text  x="107.71" y="1311.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (10 samples, 0.17%)</title><rect x="18.8" y="1861" width="2.0" height="15.0" fill="rgb(250,12,21)" rx="2" ry="2" />
<text  x="21.77" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="143.6" y="1909" width="0.4" height="15.0" fill="rgb(231,18,42)" rx="2" ry="2" />
<text  x="146.59" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="1021.3" y="2005" width="0.2" height="15.0" fill="rgb(236,197,12)" rx="2" ry="2" />
<text  x="1024.31" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="817.5" y="1605" width="0.2" height="15.0" fill="rgb(228,149,20)" rx="2" ry="2" />
<text  x="820.54" y="1615.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1116.2" y="1797" width="0.2" height="15.0" fill="rgb(209,78,2)" rx="2" ry="2" />
<text  x="1119.23" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="247.1" y="1797" width="0.2" height="15.0" fill="rgb(234,64,10)" rx="2" ry="2" />
<text  x="250.08" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="379.1" y="1909" width="0.4" height="15.0" fill="rgb(236,58,4)" rx="2" ry="2" />
<text  x="382.07" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="756.1" y="1717" width="0.2" height="15.0" fill="rgb(224,141,39)" rx="2" ry="2" />
<text  x="759.12" y="1727.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="455.2" y="1957" width="0.2" height="15.0" fill="rgb(214,9,11)" rx="2" ry="2" />
<text  x="458.24" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="662.2" y="1989" width="0.6" height="15.0" fill="rgb(224,42,22)" rx="2" ry="2" />
<text  x="665.21" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="528.2" y="1989" width="0.2" height="15.0" fill="rgb(208,159,5)" rx="2" ry="2" />
<text  x="531.22" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="884.3" y="1909" width="0.4" height="15.0" fill="rgb(217,221,5)" rx="2" ry="2" />
<text  x="887.33" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1157.5" y="1749" width="0.2" height="15.0" fill="rgb(249,147,20)" rx="2" ry="2" />
<text  x="1160.50" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="508.3" y="1925" width="0.2" height="15.0" fill="rgb(240,199,49)" rx="2" ry="2" />
<text  x="511.28" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="996.4" y="1845" width="0.2" height="15.0" fill="rgb(247,41,11)" rx="2" ry="2" />
<text  x="999.39" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1019.3" y="1861" width="0.2" height="15.0" fill="rgb(227,167,13)" rx="2" ry="2" />
<text  x="1022.32" y="1871.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="224.1" y="1589" width="0.2" height="15.0" fill="rgb(223,1,53)" rx="2" ry="2" />
<text  x="227.15" y="1599.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="483.0" y="1669" width="0.2" height="15.0" fill="rgb(214,9,49)" rx="2" ry="2" />
<text  x="485.96" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="469" width="14.0" height="15.0" fill="rgb(208,35,6)" rx="2" ry="2" />
<text  x="108.11" y="479.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="885.7" y="1749" width="0.2" height="15.0" fill="rgb(239,76,37)" rx="2" ry="2" />
<text  x="888.73" y="1759.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="956.1" y="1957" width="0.2" height="15.0" fill="rgb(239,35,37)" rx="2" ry="2" />
<text  x="959.11" y="1967.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="532.8" y="1861" width="0.2" height="15.0" fill="rgb(216,170,37)" rx="2" ry="2" />
<text  x="535.81" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="549.4" y="1973" width="2.5" height="15.0" fill="rgb(246,48,43)" rx="2" ry="2" />
<text  x="552.35" y="1983.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1034.3" y="1925" width="0.2" height="15.0" fill="rgb(241,217,52)" rx="2" ry="2" />
<text  x="1037.28" y="1935.5" ></text>
</g>
<g >
<title>tcp_setsockopt (25 samples, 0.42%)</title><rect x="691.1" y="1909" width="5.0" height="15.0" fill="rgb(209,37,18)" rx="2" ry="2" />
<text  x="694.12" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="711.7" y="1973" width="0.2" height="15.0" fill="rgb(236,0,6)" rx="2" ry="2" />
<text  x="714.66" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="505.5" y="1621" width="0.2" height="15.0" fill="rgb(208,194,28)" rx="2" ry="2" />
<text  x="508.49" y="1631.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.8" y="1877" width="0.2" height="15.0" fill="rgb(231,121,4)" rx="2" ry="2" />
<text  x="19.78" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="645.3" y="1973" width="0.6" height="15.0" fill="rgb(219,10,15)" rx="2" ry="2" />
<text  x="648.26" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="339.2" y="1925" width="0.8" height="15.0" fill="rgb(249,82,32)" rx="2" ry="2" />
<text  x="342.20" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="148.4" y="1893" width="0.2" height="15.0" fill="rgb(216,41,30)" rx="2" ry="2" />
<text  x="151.38" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="756.1" y="1701" width="0.2" height="15.0" fill="rgb(249,72,30)" rx="2" ry="2" />
<text  x="759.12" y="1711.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (2 samples, 0.03%)</title><rect x="690.7" y="1925" width="0.4" height="15.0" fill="rgb(241,67,42)" rx="2" ry="2" />
<text  x="693.72" y="1935.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="232.1" y="2037" width="0.2" height="15.0" fill="rgb(251,52,32)" rx="2" ry="2" />
<text  x="235.12" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20 samples, 0.34%)</title><rect x="1167.5" y="2005" width="4.0" height="15.0" fill="rgb(222,15,9)" rx="2" ry="2" />
<text  x="1170.47" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="928.2" y="1941" width="0.2" height="15.0" fill="rgb(216,131,11)" rx="2" ry="2" />
<text  x="931.20" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="595.2" y="1845" width="0.2" height="15.0" fill="rgb(210,118,4)" rx="2" ry="2" />
<text  x="598.21" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (5 samples, 0.08%)</title><rect x="522.6" y="1957" width="1.0" height="15.0" fill="rgb(223,66,19)" rx="2" ry="2" />
<text  x="525.64" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="224.1" y="1797" width="0.2" height="15.0" fill="rgb(249,102,24)" rx="2" ry="2" />
<text  x="227.15" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="912.6" y="1909" width="0.2" height="15.0" fill="rgb(239,178,9)" rx="2" ry="2" />
<text  x="915.65" y="1919.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="102.7" y="2021" width="0.2" height="15.0" fill="rgb(254,138,41)" rx="2" ry="2" />
<text  x="105.72" y="2031.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="618.9" y="1765" width="1.0" height="15.0" fill="rgb(206,82,41)" rx="2" ry="2" />
<text  x="621.94" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="435.9" y="1733" width="0.2" height="15.0" fill="rgb(205,120,1)" rx="2" ry="2" />
<text  x="438.90" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="324.6" y="1477" width="0.2" height="15.0" fill="rgb(254,206,54)" rx="2" ry="2" />
<text  x="327.64" y="1487.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.14%)</title><rect x="675.6" y="1925" width="1.6" height="15.0" fill="rgb(236,219,31)" rx="2" ry="2" />
<text  x="678.57" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="926.6" y="1909" width="0.2" height="15.0" fill="rgb(209,191,37)" rx="2" ry="2" />
<text  x="929.60" y="1919.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="614.0" y="1829" width="0.2" height="15.0" fill="rgb(218,201,4)" rx="2" ry="2" />
<text  x="616.96" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="611.4" y="1605" width="0.2" height="15.0" fill="rgb(212,123,53)" rx="2" ry="2" />
<text  x="614.37" y="1615.5" ></text>
</g>
<g >
<title>__GI___getsockname (21 samples, 0.35%)</title><rect x="199.8" y="2037" width="4.2" height="15.0" fill="rgb(219,95,50)" rx="2" ry="2" />
<text  x="202.82" y="2047.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="18.8" y="1829" width="0.2" height="15.0" fill="rgb(218,38,52)" rx="2" ry="2" />
<text  x="21.77" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="992.8" y="1973" width="0.4" height="15.0" fill="rgb(249,102,27)" rx="2" ry="2" />
<text  x="995.80" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="483.0" y="1573" width="0.2" height="15.0" fill="rgb(235,8,25)" rx="2" ry="2" />
<text  x="485.96" y="1583.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="336.0" y="1621" width="0.2" height="15.0" fill="rgb(221,193,41)" rx="2" ry="2" />
<text  x="339.01" y="1631.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1005.2" y="2021" width="0.2" height="15.0" fill="rgb(228,163,17)" rx="2" ry="2" />
<text  x="1008.16" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="534.2" y="1813" width="0.2" height="15.0" fill="rgb(250,151,41)" rx="2" ry="2" />
<text  x="537.20" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1126.8" y="2005" width="0.2" height="15.0" fill="rgb(218,115,6)" rx="2" ry="2" />
<text  x="1129.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="17.6" y="1749" width="0.2" height="15.0" fill="rgb(214,109,49)" rx="2" ry="2" />
<text  x="20.58" y="1759.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1008.6" y="1989" width="0.2" height="15.0" fill="rgb(221,218,26)" rx="2" ry="2" />
<text  x="1011.55" y="1999.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="526.6" y="1989" width="0.2" height="15.0" fill="rgb(241,133,12)" rx="2" ry="2" />
<text  x="529.62" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="488.7" y="1813" width="0.2" height="15.0" fill="rgb(228,117,17)" rx="2" ry="2" />
<text  x="491.74" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1119.8" y="1909" width="0.2" height="15.0" fill="rgb(245,35,25)" rx="2" ry="2" />
<text  x="1122.81" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="955.9" y="1909" width="0.2" height="15.0" fill="rgb(209,182,20)" rx="2" ry="2" />
<text  x="958.91" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="996.4" y="1925" width="0.2" height="15.0" fill="rgb(250,125,36)" rx="2" ry="2" />
<text  x="999.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="338.6" y="1893" width="0.4" height="15.0" fill="rgb(211,42,38)" rx="2" ry="2" />
<text  x="341.60" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="703.7" y="1973" width="0.8" height="15.0" fill="rgb(215,176,21)" rx="2" ry="2" />
<text  x="706.68" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.3" y="1557" width="0.2" height="15.0" fill="rgb(233,13,5)" rx="2" ry="2" />
<text  x="124.26" y="1567.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="547.2" y="1605" width="0.2" height="15.0" fill="rgb(241,175,6)" rx="2" ry="2" />
<text  x="550.16" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="642.3" y="1941" width="0.4" height="15.0" fill="rgb(210,140,10)" rx="2" ry="2" />
<text  x="645.27" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="377.5" y="1829" width="0.2" height="15.0" fill="rgb(217,56,16)" rx="2" ry="2" />
<text  x="380.48" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="208.8" y="2005" width="0.2" height="15.0" fill="rgb(254,90,28)" rx="2" ry="2" />
<text  x="211.79" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="679.8" y="1909" width="0.2" height="15.0" fill="rgb(210,157,45)" rx="2" ry="2" />
<text  x="682.76" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="621.3" y="2021" width="0.2" height="15.0" fill="rgb(253,92,26)" rx="2" ry="2" />
<text  x="624.33" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="336.0" y="1573" width="0.2" height="15.0" fill="rgb(223,100,26)" rx="2" ry="2" />
<text  x="339.01" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="501" width="14.0" height="15.0" fill="rgb(236,39,7)" rx="2" ry="2" />
<text  x="108.11" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (8 samples, 0.14%)</title><rect x="86.8" y="1957" width="1.6" height="15.0" fill="rgb(231,133,37)" rx="2" ry="2" />
<text  x="89.77" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (8 samples, 0.14%)</title><rect x="133.4" y="1957" width="1.6" height="15.0" fill="rgb(230,82,12)" rx="2" ry="2" />
<text  x="136.42" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="2005" width="0.2" height="15.0" fill="rgb(235,125,44)" rx="2" ry="2" />
<text  x="1135.58" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="904.9" y="1957" width="0.6" height="15.0" fill="rgb(219,141,49)" rx="2" ry="2" />
<text  x="907.87" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1026.7" y="2053" width="0.2" height="15.0" fill="rgb(217,100,8)" rx="2" ry="2" />
<text  x="1029.70" y="2063.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="648.9" y="1733" width="0.2" height="15.0" fill="rgb(235,199,35)" rx="2" ry="2" />
<text  x="651.85" y="1743.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="756.1" y="1525" width="0.2" height="15.0" fill="rgb(234,77,40)" rx="2" ry="2" />
<text  x="759.12" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="149.8" y="1701" width="0.2" height="15.0" fill="rgb(224,152,37)" rx="2" ry="2" />
<text  x="152.77" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="645" width="14.0" height="15.0" fill="rgb(252,139,4)" rx="2" ry="2" />
<text  x="108.11" y="655.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="919.8" y="2005" width="0.6" height="15.0" fill="rgb(241,146,18)" rx="2" ry="2" />
<text  x="922.82" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="675.0" y="1893" width="0.6" height="15.0" fill="rgb(242,210,25)" rx="2" ry="2" />
<text  x="677.97" y="1903.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1138.6" y="1957" width="0.2" height="15.0" fill="rgb(225,39,43)" rx="2" ry="2" />
<text  x="1141.56" y="1967.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="324.8" y="1749" width="0.2" height="15.0" fill="rgb(235,186,5)" rx="2" ry="2" />
<text  x="327.84" y="1759.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1188.4" y="2021" width="0.8" height="15.0" fill="rgb(240,85,38)" rx="2" ry="2" />
<text  x="1191.40" y="2031.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="534.2" y="1557" width="0.2" height="15.0" fill="rgb(223,141,7)" rx="2" ry="2" />
<text  x="537.20" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="907.1" y="1829" width="0.2" height="15.0" fill="rgb(209,180,26)" rx="2" ry="2" />
<text  x="910.06" y="1839.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="887.7" y="1909" width="0.2" height="15.0" fill="rgb(219,127,7)" rx="2" ry="2" />
<text  x="890.72" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="75.2" y="1829" width="0.2" height="15.0" fill="rgb(253,183,6)" rx="2" ry="2" />
<text  x="78.20" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="640.5" y="1781" width="0.2" height="15.0" fill="rgb(240,78,54)" rx="2" ry="2" />
<text  x="643.48" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="336.2" y="1829" width="0.2" height="15.0" fill="rgb(236,26,8)" rx="2" ry="2" />
<text  x="339.20" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="896.5" y="1989" width="0.2" height="15.0" fill="rgb(229,100,47)" rx="2" ry="2" />
<text  x="899.50" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="697.9" y="1941" width="0.2" height="15.0" fill="rgb(213,185,22)" rx="2" ry="2" />
<text  x="700.90" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="561.3" y="1829" width="0.8" height="15.0" fill="rgb(237,34,36)" rx="2" ry="2" />
<text  x="564.32" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="224.9" y="1845" width="0.4" height="15.0" fill="rgb(236,82,8)" rx="2" ry="2" />
<text  x="227.94" y="1855.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="295.5" y="1685" width="0.2" height="15.0" fill="rgb(229,139,28)" rx="2" ry="2" />
<text  x="298.53" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="883.3" y="1797" width="0.2" height="15.0" fill="rgb(219,97,53)" rx="2" ry="2" />
<text  x="886.34" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="179.7" y="1973" width="0.2" height="15.0" fill="rgb(240,147,5)" rx="2" ry="2" />
<text  x="182.68" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="87.6" y="1925" width="0.4" height="15.0" fill="rgb(227,4,47)" rx="2" ry="2" />
<text  x="90.56" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.7" y="1909" width="0.2" height="15.0" fill="rgb(230,58,50)" rx="2" ry="2" />
<text  x="887.73" y="1919.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="385.7" y="1925" width="0.4" height="15.0" fill="rgb(235,112,2)" rx="2" ry="2" />
<text  x="388.65" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="577.3" y="1797" width="0.2" height="15.0" fill="rgb(247,20,36)" rx="2" ry="2" />
<text  x="580.27" y="1807.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="704.3" y="1957" width="0.2" height="15.0" fill="rgb(252,48,30)" rx="2" ry="2" />
<text  x="707.28" y="1967.5" ></text>
</g>
<g >
<title>__libc_sendmsg (545 samples, 9.21%)</title><rect x="234.1" y="2037" width="108.7" height="15.0" fill="rgb(244,209,45)" rx="2" ry="2" />
<text  x="237.12" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>tcp_rcv_established (4 samples, 0.07%)</title><rect x="292.3" y="1509" width="0.8" height="15.0" fill="rgb(227,204,18)" rx="2" ry="2" />
<text  x="295.34" y="1519.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="400.6" y="1861" width="0.2" height="15.0" fill="rgb(210,12,15)" rx="2" ry="2" />
<text  x="403.61" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="124.7" y="1637" width="0.1" height="15.0" fill="rgb(231,107,43)" rx="2" ry="2" />
<text  x="127.65" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="577.3" y="1781" width="0.2" height="15.0" fill="rgb(225,42,21)" rx="2" ry="2" />
<text  x="580.27" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.10%)</title><rect x="291.9" y="1557" width="1.2" height="15.0" fill="rgb(232,111,15)" rx="2" ry="2" />
<text  x="294.94" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="102.7" y="1877" width="0.2" height="15.0" fill="rgb(206,91,42)" rx="2" ry="2" />
<text  x="105.72" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (1 samples, 0.02%)</title><rect x="908.7" y="1973" width="0.2" height="15.0" fill="rgb(233,175,46)" rx="2" ry="2" />
<text  x="911.66" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1130.2" y="1989" width="0.4" height="15.0" fill="rgb(212,28,23)" rx="2" ry="2" />
<text  x="1133.18" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="524.8" y="1989" width="0.2" height="15.0" fill="rgb(211,121,44)" rx="2" ry="2" />
<text  x="527.83" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1157.5" y="1701" width="0.2" height="15.0" fill="rgb(236,19,45)" rx="2" ry="2" />
<text  x="1160.50" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="572.5" y="1973" width="0.2" height="15.0" fill="rgb(215,221,31)" rx="2" ry="2" />
<text  x="575.48" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1116.2" y="1781" width="0.2" height="15.0" fill="rgb(234,67,3)" rx="2" ry="2" />
<text  x="1119.23" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="336.2" y="1941" width="0.2" height="15.0" fill="rgb(235,131,12)" rx="2" ry="2" />
<text  x="339.20" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="453.8" y="1557" width="0.2" height="15.0" fill="rgb(242,89,8)" rx="2" ry="2" />
<text  x="456.85" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="746.2" y="1701" width="0.4" height="15.0" fill="rgb(214,201,27)" rx="2" ry="2" />
<text  x="749.15" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1445" width="15.8" height="15.0" fill="rgb(216,127,51)" rx="2" ry="2" />
<text  x="107.71" y="1455.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="881.5" y="1877" width="0.6" height="15.0" fill="rgb(243,182,46)" rx="2" ry="2" />
<text  x="884.54" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (23 samples, 0.39%)</title><rect x="519.6" y="1989" width="4.6" height="15.0" fill="rgb(253,126,22)" rx="2" ry="2" />
<text  x="522.65" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1120.4" y="1909" width="0.2" height="15.0" fill="rgb(246,185,0)" rx="2" ry="2" />
<text  x="1123.41" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="807.0" y="1669" width="0.6" height="15.0" fill="rgb(209,0,21)" rx="2" ry="2" />
<text  x="809.97" y="1679.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="868.8" y="1989" width="0.4" height="15.0" fill="rgb(235,88,53)" rx="2" ry="2" />
<text  x="871.78" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="887.1" y="1669" width="0.2" height="15.0" fill="rgb(249,47,39)" rx="2" ry="2" />
<text  x="890.12" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.07%)</title><rect x="190.8" y="2021" width="0.8" height="15.0" fill="rgb(227,113,25)" rx="2" ry="2" />
<text  x="193.85" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1001.4" y="1973" width="0.2" height="15.0" fill="rgb(226,68,37)" rx="2" ry="2" />
<text  x="1004.38" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="576.9" y="1893" width="0.2" height="15.0" fill="rgb(226,129,36)" rx="2" ry="2" />
<text  x="579.87" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (7 samples, 0.12%)</title><rect x="74.0" y="1941" width="1.4" height="15.0" fill="rgb(254,169,16)" rx="2" ry="2" />
<text  x="77.00" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="2021" width="0.2" height="15.0" fill="rgb(232,215,25)" rx="2" ry="2" />
<text  x="1037.28" y="2031.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="265.8" y="1861" width="0.2" height="15.0" fill="rgb(232,19,27)" rx="2" ry="2" />
<text  x="268.82" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="402.4" y="1813" width="0.2" height="15.0" fill="rgb(235,213,32)" rx="2" ry="2" />
<text  x="405.40" y="1823.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1050.0" y="1973" width="0.2" height="15.0" fill="rgb(247,150,13)" rx="2" ry="2" />
<text  x="1053.03" y="1983.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="267.2" y="1861" width="0.4" height="15.0" fill="rgb(251,85,33)" rx="2" ry="2" />
<text  x="270.22" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="968.3" y="1909" width="0.2" height="15.0" fill="rgb(251,73,38)" rx="2" ry="2" />
<text  x="971.28" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="462.4" y="1653" width="0.2" height="15.0" fill="rgb(214,55,13)" rx="2" ry="2" />
<text  x="465.42" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (502 samples, 8.48%)</title><rect x="237.3" y="2005" width="100.1" height="15.0" fill="rgb(232,148,4)" rx="2" ry="2" />
<text  x="240.31" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="52.9" y="1957" width="1.2" height="15.0" fill="rgb(208,116,17)" rx="2" ry="2" />
<text  x="55.87" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="644.7" y="1957" width="0.2" height="15.0" fill="rgb(236,26,17)" rx="2" ry="2" />
<text  x="647.66" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="409.6" y="1957" width="1.4" height="15.0" fill="rgb(243,45,39)" rx="2" ry="2" />
<text  x="412.58" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (6 samples, 0.10%)</title><rect x="988.6" y="1893" width="1.2" height="15.0" fill="rgb(240,96,37)" rx="2" ry="2" />
<text  x="991.61" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (2 samples, 0.03%)</title><rect x="46.9" y="1957" width="0.4" height="15.0" fill="rgb(234,222,40)" rx="2" ry="2" />
<text  x="49.89" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="180.1" y="1973" width="0.4" height="15.0" fill="rgb(252,63,42)" rx="2" ry="2" />
<text  x="183.08" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="710.1" y="1973" width="0.2" height="15.0" fill="rgb(223,123,28)" rx="2" ry="2" />
<text  x="713.06" y="1983.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="665.2" y="1589" width="0.2" height="15.0" fill="rgb(224,135,18)" rx="2" ry="2" />
<text  x="668.20" y="1599.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="69.6" y="1893" width="0.2" height="15.0" fill="rgb(246,96,30)" rx="2" ry="2" />
<text  x="72.62" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="882.9" y="1909" width="0.8" height="15.0" fill="rgb(241,56,41)" rx="2" ry="2" />
<text  x="885.94" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="508.3" y="1845" width="0.2" height="15.0" fill="rgb(248,228,36)" rx="2" ry="2" />
<text  x="511.28" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="885.7" y="1893" width="0.2" height="15.0" fill="rgb(211,90,26)" rx="2" ry="2" />
<text  x="888.73" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="842.9" y="1813" width="0.2" height="15.0" fill="rgb(247,90,7)" rx="2" ry="2" />
<text  x="845.86" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 0.14%)</title><rect x="765.1" y="1701" width="1.6" height="15.0" fill="rgb(236,66,48)" rx="2" ry="2" />
<text  x="768.10" y="1711.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (3 samples, 0.05%)</title><rect x="567.7" y="1989" width="0.6" height="15.0" fill="rgb(217,19,11)" rx="2" ry="2" />
<text  x="570.70" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="579.3" y="1973" width="0.2" height="15.0" fill="rgb(207,228,13)" rx="2" ry="2" />
<text  x="582.26" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="453.8" y="1941" width="0.2" height="15.0" fill="rgb(230,9,10)" rx="2" ry="2" />
<text  x="456.85" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="630.3" y="2005" width="0.6" height="15.0" fill="rgb(210,220,18)" rx="2" ry="2" />
<text  x="633.31" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1013.1" y="1845" width="0.2" height="15.0" fill="rgb(230,70,22)" rx="2" ry="2" />
<text  x="1016.14" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.2" y="1877" width="0.2" height="15.0" fill="rgb(210,213,35)" rx="2" ry="2" />
<text  x="544.18" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1180.8" y="1925" width="0.2" height="15.0" fill="rgb(243,69,10)" rx="2" ry="2" />
<text  x="1183.83" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="912.6" y="1797" width="0.2" height="15.0" fill="rgb(205,174,46)" rx="2" ry="2" />
<text  x="915.65" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (8 samples, 0.14%)</title><rect x="540.6" y="1973" width="1.6" height="15.0" fill="rgb(244,2,27)" rx="2" ry="2" />
<text  x="543.58" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="586.0" y="1877" width="0.2" height="15.0" fill="rgb(250,223,17)" rx="2" ry="2" />
<text  x="589.04" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="377.5" y="1845" width="0.2" height="15.0" fill="rgb(253,24,36)" rx="2" ry="2" />
<text  x="380.48" y="1855.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (2 samples, 0.03%)</title><rect x="1021.1" y="2037" width="0.4" height="15.0" fill="rgb(224,147,4)" rx="2" ry="2" />
<text  x="1024.12" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (54 samples, 0.91%)</title><rect x="927.8" y="1973" width="10.8" height="15.0" fill="rgb(246,138,47)" rx="2" ry="2" />
<text  x="930.80" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="38.3" y="2005" width="0.2" height="15.0" fill="rgb(223,19,43)" rx="2" ry="2" />
<text  x="41.31" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="1084.9" y="1893" width="0.6" height="15.0" fill="rgb(229,160,20)" rx="2" ry="2" />
<text  x="1087.92" y="1903.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="900.3" y="2005" width="0.2" height="15.0" fill="rgb(243,138,19)" rx="2" ry="2" />
<text  x="903.28" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="379.7" y="1941" width="0.6" height="15.0" fill="rgb(215,97,17)" rx="2" ry="2" />
<text  x="382.67" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="115.7" y="53" width="0.2" height="15.0" fill="rgb(228,56,22)" rx="2" ry="2" />
<text  x="118.68" y="63.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (25 samples, 0.42%)</title><rect x="691.1" y="1925" width="5.0" height="15.0" fill="rgb(245,177,12)" rx="2" ry="2" />
<text  x="694.12" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1019.3" y="1973" width="0.2" height="15.0" fill="rgb(253,135,53)" rx="2" ry="2" />
<text  x="1022.32" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (743 samples, 12.55%)</title><rect x="710.7" y="1989" width="148.1" height="15.0" fill="rgb(234,88,52)" rx="2" ry="2" />
<text  x="713.66" y="1999.5" >facebook::memcache..</text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (2 samples, 0.03%)</title><rect x="1008.2" y="1973" width="0.4" height="15.0" fill="rgb(246,77,53)" rx="2" ry="2" />
<text  x="1011.15" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="32.1" y="1701" width="0.2" height="15.0" fill="rgb(237,155,8)" rx="2" ry="2" />
<text  x="35.13" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="233.9" y="2021" width="0.2" height="15.0" fill="rgb(254,25,21)" rx="2" ry="2" />
<text  x="236.92" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="231.3" y="1749" width="0.2" height="15.0" fill="rgb(243,131,45)" rx="2" ry="2" />
<text  x="234.32" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="58.3" y="1925" width="0.8" height="15.0" fill="rgb(239,30,33)" rx="2" ry="2" />
<text  x="61.25" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="256.4" y="1861" width="0.2" height="15.0" fill="rgb(221,223,53)" rx="2" ry="2" />
<text  x="259.45" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1049.8" y="1797" width="0.2" height="15.0" fill="rgb(226,0,21)" rx="2" ry="2" />
<text  x="1052.83" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="631.9" y="2005" width="0.4" height="15.0" fill="rgb(224,228,22)" rx="2" ry="2" />
<text  x="634.90" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="731.6" y="1733" width="0.2" height="15.0" fill="rgb(222,218,9)" rx="2" ry="2" />
<text  x="734.60" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="599.8" y="1749" width="0.4" height="15.0" fill="rgb(230,123,5)" rx="2" ry="2" />
<text  x="602.80" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="541.6" y="1925" width="0.4" height="15.0" fill="rgb(247,193,7)" rx="2" ry="2" />
<text  x="544.58" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="960.5" y="1957" width="0.4" height="15.0" fill="rgb(236,198,42)" rx="2" ry="2" />
<text  x="963.50" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="223.7" y="1813" width="0.4" height="15.0" fill="rgb(243,179,43)" rx="2" ry="2" />
<text  x="226.75" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="648.9" y="1861" width="0.2" height="15.0" fill="rgb(210,51,22)" rx="2" ry="2" />
<text  x="651.85" y="1871.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="324.6" y="1445" width="0.2" height="15.0" fill="rgb(246,112,4)" rx="2" ry="2" />
<text  x="327.64" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="336.2" y="1925" width="0.2" height="15.0" fill="rgb(242,89,32)" rx="2" ry="2" />
<text  x="339.20" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="887.3" y="1909" width="0.2" height="15.0" fill="rgb(242,15,27)" rx="2" ry="2" />
<text  x="890.32" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="409.8" y="1925" width="1.0" height="15.0" fill="rgb(219,183,48)" rx="2" ry="2" />
<text  x="412.78" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="76.4" y="1749" width="0.2" height="15.0" fill="rgb(237,176,44)" rx="2" ry="2" />
<text  x="79.40" y="1759.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="852.8" y="1877" width="1.0" height="15.0" fill="rgb(220,88,12)" rx="2" ry="2" />
<text  x="855.83" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1178.0" y="1861" width="0.2" height="15.0" fill="rgb(223,102,44)" rx="2" ry="2" />
<text  x="1181.04" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="832.3" y="1637" width="0.2" height="15.0" fill="rgb(207,100,17)" rx="2" ry="2" />
<text  x="835.29" y="1647.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="946.7" y="1973" width="0.8" height="15.0" fill="rgb(246,64,9)" rx="2" ry="2" />
<text  x="949.74" y="1983.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="570.7" y="1957" width="0.4" height="15.0" fill="rgb(230,204,47)" rx="2" ry="2" />
<text  x="573.69" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1163.9" y="2053" width="0.8" height="15.0" fill="rgb(241,160,16)" rx="2" ry="2" />
<text  x="1166.88" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="858.6" y="1829" width="0.2" height="15.0" fill="rgb(239,81,7)" rx="2" ry="2" />
<text  x="861.61" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="901.1" y="2005" width="1.2" height="15.0" fill="rgb(228,17,13)" rx="2" ry="2" />
<text  x="904.08" y="2015.5" ></text>
</g>
<g >
<title>sys_getpeername (15 samples, 0.25%)</title><rect x="672.0" y="1893" width="3.0" height="15.0" fill="rgb(233,195,47)" rx="2" ry="2" />
<text  x="674.98" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (46 samples, 0.78%)</title><rect x="903.7" y="2037" width="9.1" height="15.0" fill="rgb(213,96,29)" rx="2" ry="2" />
<text  x="906.67" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="633.7" y="1973" width="0.2" height="15.0" fill="rgb(212,135,24)" rx="2" ry="2" />
<text  x="636.70" y="1983.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1104.5" y="1429" width="0.2" height="15.0" fill="rgb(249,65,14)" rx="2" ry="2" />
<text  x="1107.46" y="1439.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="164.1" y="2021" width="0.2" height="15.0" fill="rgb(228,80,13)" rx="2" ry="2" />
<text  x="167.13" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (5 samples, 0.08%)</title><rect x="1133.2" y="2005" width="1.0" height="15.0" fill="rgb(235,40,41)" rx="2" ry="2" />
<text  x="1136.17" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1121.0" y="2005" width="0.2" height="15.0" fill="rgb(207,64,0)" rx="2" ry="2" />
<text  x="1124.01" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="404.6" y="1701" width="0.2" height="15.0" fill="rgb(214,140,8)" rx="2" ry="2" />
<text  x="407.60" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="858.4" y="1797" width="0.2" height="15.0" fill="rgb(227,188,48)" rx="2" ry="2" />
<text  x="861.41" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22 samples, 0.37%)</title><rect x="298.5" y="1685" width="4.4" height="15.0" fill="rgb(242,82,13)" rx="2" ry="2" />
<text  x="301.52" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="76.4" y="1877" width="0.2" height="15.0" fill="rgb(237,112,40)" rx="2" ry="2" />
<text  x="79.40" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="586.0" y="1861" width="0.2" height="15.0" fill="rgb(210,209,17)" rx="2" ry="2" />
<text  x="589.04" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1119.8" y="1797" width="0.2" height="15.0" fill="rgb(235,39,40)" rx="2" ry="2" />
<text  x="1122.81" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="624.1" y="2005" width="0.4" height="15.0" fill="rgb(216,16,38)" rx="2" ry="2" />
<text  x="627.13" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="986.2" y="1957" width="0.2" height="15.0" fill="rgb(233,145,46)" rx="2" ry="2" />
<text  x="989.22" y="1967.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="755.5" y="1733" width="0.4" height="15.0" fill="rgb(252,40,52)" rx="2" ry="2" />
<text  x="758.53" y="1743.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="292.5" y="1461" width="0.6" height="15.0" fill="rgb(219,41,30)" rx="2" ry="2" />
<text  x="295.54" y="1471.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="124.8" y="1925" width="0.2" height="15.0" fill="rgb(248,219,18)" rx="2" ry="2" />
<text  x="127.85" y="1935.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="774.3" y="1669" width="0.2" height="15.0" fill="rgb(232,129,17)" rx="2" ry="2" />
<text  x="777.27" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="231.3" y="1797" width="0.2" height="15.0" fill="rgb(209,34,46)" rx="2" ry="2" />
<text  x="234.32" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="618.9" y="1893" width="1.0" height="15.0" fill="rgb(231,155,53)" rx="2" ry="2" />
<text  x="621.94" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_fin (350 samples, 5.91%)</title><rect x="758.7" y="1733" width="69.8" height="15.0" fill="rgb(253,108,18)" rx="2" ry="2" />
<text  x="761.72" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1126.8" y="1989" width="0.2" height="15.0" fill="rgb(242,17,48)" rx="2" ry="2" />
<text  x="1129.79" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1025.7" y="2021" width="0.2" height="15.0" fill="rgb(246,126,8)" rx="2" ry="2" />
<text  x="1028.70" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="225.9" y="1861" width="0.2" height="15.0" fill="rgb(250,100,33)" rx="2" ry="2" />
<text  x="228.94" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="968.3" y="1989" width="0.2" height="15.0" fill="rgb(211,111,54)" rx="2" ry="2" />
<text  x="971.28" y="1999.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8 samples, 0.14%)</title><rect x="359.7" y="1957" width="1.6" height="15.0" fill="rgb(208,6,1)" rx="2" ry="2" />
<text  x="362.73" y="1967.5" ></text>
</g>
<g >
<title>SYSC_getsockname (30 samples, 0.51%)</title><rect x="593.0" y="1877" width="6.0" height="15.0" fill="rgb(211,91,18)" rx="2" ry="2" />
<text  x="596.02" y="1887.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="280.0" y="1845" width="0.2" height="15.0" fill="rgb(209,12,14)" rx="2" ry="2" />
<text  x="282.98" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="542.0" y="1557" width="0.2" height="15.0" fill="rgb(245,101,27)" rx="2" ry="2" />
<text  x="544.98" y="1567.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="190.4" y="2021" width="0.2" height="15.0" fill="rgb(210,54,40)" rx="2" ry="2" />
<text  x="193.45" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1019.3" y="1813" width="0.2" height="15.0" fill="rgb(228,220,27)" rx="2" ry="2" />
<text  x="1022.32" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (39 samples, 0.66%)</title><rect x="635.9" y="1973" width="7.8" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="638.89" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.25%)</title><rect x="623.5" y="2021" width="3.0" height="15.0" fill="rgb(208,99,41)" rx="2" ry="2" />
<text  x="626.53" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="336.0" y="1765" width="0.2" height="15.0" fill="rgb(225,173,31)" rx="2" ry="2" />
<text  x="339.01" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="57.5" y="1781" width="0.2" height="15.0" fill="rgb(214,214,4)" rx="2" ry="2" />
<text  x="60.46" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="386.7" y="1909" width="0.2" height="15.0" fill="rgb(246,212,6)" rx="2" ry="2" />
<text  x="389.65" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (49 samples, 0.83%)</title><rect x="1101.5" y="1765" width="9.7" height="15.0" fill="rgb(220,157,23)" rx="2" ry="2" />
<text  x="1104.47" y="1775.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="508.3" y="1733" width="0.2" height="15.0" fill="rgb(215,66,27)" rx="2" ry="2" />
<text  x="511.28" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="1157.9" y="1845" width="0.6" height="15.0" fill="rgb(224,129,22)" rx="2" ry="2" />
<text  x="1160.90" y="1855.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (52 samples, 0.88%)</title><rect x="733.2" y="1749" width="10.4" height="15.0" fill="rgb(230,195,40)" rx="2" ry="2" />
<text  x="736.19" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="856.2" y="1781" width="0.2" height="15.0" fill="rgb(205,89,7)" rx="2" ry="2" />
<text  x="859.22" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="836.7" y="1701" width="0.2" height="15.0" fill="rgb(237,172,24)" rx="2" ry="2" />
<text  x="839.68" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="532.0" y="1941" width="1.2" height="15.0" fill="rgb(218,181,18)" rx="2" ry="2" />
<text  x="535.01" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="404.6" y="1525" width="0.2" height="15.0" fill="rgb(211,176,7)" rx="2" ry="2" />
<text  x="407.60" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="562.1" y="1845" width="0.2" height="15.0" fill="rgb(253,203,5)" rx="2" ry="2" />
<text  x="565.12" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="268.4" y="1845" width="0.2" height="15.0" fill="rgb(235,139,25)" rx="2" ry="2" />
<text  x="271.41" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="545.2" y="1909" width="0.2" height="15.0" fill="rgb(212,59,19)" rx="2" ry="2" />
<text  x="548.17" y="1919.5" ></text>
</g>
<g >
<title>free_unref_page_commit (15 samples, 0.25%)</title><rect x="1072.6" y="1829" width="2.9" height="15.0" fill="rgb(230,130,40)" rx="2" ry="2" />
<text  x="1075.56" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="932.4" y="1893" width="0.8" height="15.0" fill="rgb(245,105,25)" rx="2" ry="2" />
<text  x="935.39" y="1903.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.02%)</title><rect x="615.8" y="1509" width="0.2" height="15.0" fill="rgb(243,56,44)" rx="2" ry="2" />
<text  x="618.75" y="1519.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="33.5" y="1989" width="0.8" height="15.0" fill="rgb(231,64,49)" rx="2" ry="2" />
<text  x="36.53" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="62.6" y="1909" width="0.2" height="15.0" fill="rgb(236,53,48)" rx="2" ry="2" />
<text  x="65.64" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="330.2" y="1781" width="0.2" height="15.0" fill="rgb(225,193,49)" rx="2" ry="2" />
<text  x="333.22" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="435.9" y="1925" width="0.2" height="15.0" fill="rgb(219,229,2)" rx="2" ry="2" />
<text  x="438.90" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="461.4" y="1893" width="0.2" height="15.0" fill="rgb(252,186,1)" rx="2" ry="2" />
<text  x="464.42" y="1903.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="972.7" y="1781" width="0.2" height="15.0" fill="rgb(245,45,1)" rx="2" ry="2" />
<text  x="975.66" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.10%)</title><rect x="339.0" y="2021" width="1.2" height="15.0" fill="rgb(216,6,17)" rx="2" ry="2" />
<text  x="342.00" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="577.3" y="1829" width="0.2" height="15.0" fill="rgb(221,71,49)" rx="2" ry="2" />
<text  x="580.27" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.1" y="821" width="0.2" height="15.0" fill="rgb(222,17,4)" rx="2" ry="2" />
<text  x="122.07" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="884.7" y="1781" width="0.2" height="15.0" fill="rgb(218,17,38)" rx="2" ry="2" />
<text  x="887.73" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (2 samples, 0.03%)</title><rect x="79.2" y="1925" width="0.4" height="15.0" fill="rgb(221,86,8)" rx="2" ry="2" />
<text  x="82.19" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="902.1" y="1957" width="0.2" height="15.0" fill="rgb(237,155,54)" rx="2" ry="2" />
<text  x="905.08" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.08%)</title><rect x="482.2" y="2005" width="1.0" height="15.0" fill="rgb(226,15,22)" rx="2" ry="2" />
<text  x="485.16" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (59 samples, 1.00%)</title><rect x="1145.9" y="1941" width="11.8" height="15.0" fill="rgb(230,168,50)" rx="2" ry="2" />
<text  x="1148.93" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="949.7" y="2005" width="1.0" height="15.0" fill="rgb(249,2,6)" rx="2" ry="2" />
<text  x="952.73" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1121.4" y="2005" width="0.4" height="15.0" fill="rgb(238,14,41)" rx="2" ry="2" />
<text  x="1124.41" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="453" width="14.0" height="15.0" fill="rgb(223,66,48)" rx="2" ry="2" />
<text  x="108.11" y="463.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (6 samples, 0.10%)</title><rect x="152.8" y="1925" width="1.2" height="15.0" fill="rgb(209,199,1)" rx="2" ry="2" />
<text  x="155.76" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="577.3" y="1941" width="0.2" height="15.0" fill="rgb(226,12,38)" rx="2" ry="2" />
<text  x="580.27" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1178.8" y="2021" width="0.2" height="15.0" fill="rgb(235,215,13)" rx="2" ry="2" />
<text  x="1181.83" y="2031.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="975.1" y="1989" width="0.4" height="15.0" fill="rgb(233,152,18)" rx="2" ry="2" />
<text  x="978.06" y="1999.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1179.4" y="2005" width="0.2" height="15.0" fill="rgb(241,56,46)" rx="2" ry="2" />
<text  x="1182.43" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1989" width="0.4" height="15.0" fill="rgb(233,205,38)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>__close (608 samples, 10.27%)</title><rect x="717.6" y="1909" width="121.3" height="15.0" fill="rgb(234,150,51)" rx="2" ry="2" />
<text  x="720.64" y="1919.5" >__close</text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="290.7" y="1525" width="0.8" height="15.0" fill="rgb(243,124,34)" rx="2" ry="2" />
<text  x="293.74" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (42 samples, 0.71%)</title><rect x="666.6" y="1909" width="8.4" height="15.0" fill="rgb(233,61,12)" rx="2" ry="2" />
<text  x="669.60" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="468.0" y="1925" width="0.4" height="15.0" fill="rgb(214,20,43)" rx="2" ry="2" />
<text  x="471.00" y="1935.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="268.6" y="1877" width="0.4" height="15.0" fill="rgb(210,76,27)" rx="2" ry="2" />
<text  x="271.61" y="1887.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="386.7" y="1541" width="0.2" height="15.0" fill="rgb(251,51,46)" rx="2" ry="2" />
<text  x="389.65" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="160.3" y="1829" width="0.2" height="15.0" fill="rgb(222,114,37)" rx="2" ry="2" />
<text  x="163.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="485" width="14.0" height="15.0" fill="rgb(216,121,28)" rx="2" ry="2" />
<text  x="108.11" y="495.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="453.8" y="1477" width="0.2" height="15.0" fill="rgb(208,150,23)" rx="2" ry="2" />
<text  x="456.85" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="55.3" y="1941" width="1.2" height="15.0" fill="rgb(244,103,44)" rx="2" ry="2" />
<text  x="58.26" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="189.9" y="1941" width="0.2" height="15.0" fill="rgb(247,124,21)" rx="2" ry="2" />
<text  x="192.85" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1189.8" y="2021" width="0.2" height="15.0" fill="rgb(226,77,17)" rx="2" ry="2" />
<text  x="1192.80" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="741.2" y="1653" width="1.2" height="15.0" fill="rgb(228,28,6)" rx="2" ry="2" />
<text  x="744.17" y="1663.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="329.6" y="1861" width="0.6" height="15.0" fill="rgb(243,171,22)" rx="2" ry="2" />
<text  x="332.62" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="970.1" y="2037" width="0.2" height="15.0" fill="rgb(211,94,52)" rx="2" ry="2" />
<text  x="973.07" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="615.8" y="1653" width="0.2" height="15.0" fill="rgb(224,64,45)" rx="2" ry="2" />
<text  x="618.75" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="611.2" y="1829" width="0.4" height="15.0" fill="rgb(227,153,37)" rx="2" ry="2" />
<text  x="614.17" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="577.3" y="1909" width="0.2" height="15.0" fill="rgb(229,126,21)" rx="2" ry="2" />
<text  x="580.27" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="508.3" y="1813" width="0.2" height="15.0" fill="rgb(235,82,2)" rx="2" ry="2" />
<text  x="511.28" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="453.0" y="1733" width="0.2" height="15.0" fill="rgb(235,215,46)" rx="2" ry="2" />
<text  x="456.05" y="1743.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="92.7" y="1957" width="0.2" height="15.0" fill="rgb(222,187,34)" rx="2" ry="2" />
<text  x="95.75" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="454.0" y="1973" width="0.2" height="15.0" fill="rgb(223,85,29)" rx="2" ry="2" />
<text  x="457.05" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="246.9" y="1749" width="0.2" height="15.0" fill="rgb(228,185,30)" rx="2" ry="2" />
<text  x="249.88" y="1759.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="389.2" y="1909" width="0.2" height="15.0" fill="rgb(214,55,14)" rx="2" ry="2" />
<text  x="392.24" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="102.7" y="2005" width="0.2" height="15.0" fill="rgb(218,139,35)" rx="2" ry="2" />
<text  x="105.72" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="927.6" y="1957" width="0.2" height="15.0" fill="rgb(240,212,7)" rx="2" ry="2" />
<text  x="930.60" y="1967.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="982.0" y="1701" width="0.2" height="15.0" fill="rgb(247,130,6)" rx="2" ry="2" />
<text  x="985.03" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (62 samples, 1.05%)</title><rect x="105.1" y="85" width="12.4" height="15.0" fill="rgb(207,60,24)" rx="2" ry="2" />
<text  x="108.11" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="18.8" y="2021" width="2.0" height="15.0" fill="rgb(212,188,42)" rx="2" ry="2" />
<text  x="21.77" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="508.1" y="1845" width="0.2" height="15.0" fill="rgb(218,69,22)" rx="2" ry="2" />
<text  x="511.08" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="404.6" y="1845" width="0.2" height="15.0" fill="rgb(231,38,45)" rx="2" ry="2" />
<text  x="407.60" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="547.2" y="1653" width="0.2" height="15.0" fill="rgb(209,56,51)" rx="2" ry="2" />
<text  x="550.16" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (970 samples, 16.39%)</title><rect x="707.1" y="2021" width="193.4" height="15.0" fill="rgb(244,139,30)" rx="2" ry="2" />
<text  x="710.07" y="2031.5" >[unknown]</text>
</g>
<g >
<title>epoll_ctl (358 samples, 6.05%)</title><rect x="415.6" y="2037" width="71.3" height="15.0" fill="rgb(251,91,1)" rx="2" ry="2" />
<text  x="418.56" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="404.6" y="1717" width="0.2" height="15.0" fill="rgb(218,148,30)" rx="2" ry="2" />
<text  x="407.60" y="1727.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (6 samples, 0.10%)</title><rect x="552.9" y="1957" width="1.2" height="15.0" fill="rgb(219,194,33)" rx="2" ry="2" />
<text  x="555.94" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="611.2" y="1861" width="0.4" height="15.0" fill="rgb(253,86,49)" rx="2" ry="2" />
<text  x="614.17" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="547.2" y="1893" width="0.2" height="15.0" fill="rgb(218,36,17)" rx="2" ry="2" />
<text  x="550.16" y="1903.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="737.8" y="1669" width="0.2" height="15.0" fill="rgb(244,39,45)" rx="2" ry="2" />
<text  x="740.78" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.9" y="1781" width="0.2" height="15.0" fill="rgb(237,3,9)" rx="2" ry="2" />
<text  x="126.85" y="1791.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="698.1" y="1957" width="0.2" height="15.0" fill="rgb(213,38,37)" rx="2" ry="2" />
<text  x="701.10" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1008.8" y="1957" width="0.2" height="15.0" fill="rgb(224,97,23)" rx="2" ry="2" />
<text  x="1011.75" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="246.9" y="1877" width="0.2" height="15.0" fill="rgb(208,199,47)" rx="2" ry="2" />
<text  x="249.88" y="1887.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="743.6" y="1749" width="0.2" height="15.0" fill="rgb(236,115,24)" rx="2" ry="2" />
<text  x="746.56" y="1759.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="758.5" y="1733" width="0.2" height="15.0" fill="rgb(216,91,14)" rx="2" ry="2" />
<text  x="761.52" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1178.0" y="1829" width="0.2" height="15.0" fill="rgb(248,116,8)" rx="2" ry="2" />
<text  x="1181.04" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="697.9" y="1797" width="0.2" height="15.0" fill="rgb(230,148,29)" rx="2" ry="2" />
<text  x="700.90" y="1807.5" ></text>
</g>
<g >
<title>__fput (520 samples, 8.79%)</title><rect x="727.4" y="1813" width="103.7" height="15.0" fill="rgb(212,45,53)" rx="2" ry="2" />
<text  x="730.41" y="1823.5" >__fput</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="139.2" y="1989" width="0.8" height="15.0" fill="rgb(241,218,9)" rx="2" ry="2" />
<text  x="142.21" y="1999.5" ></text>
</g>
<g >
<title>event_del (1 samples, 0.02%)</title><rect x="65.2" y="1909" width="0.2" height="15.0" fill="rgb(212,24,2)" rx="2" ry="2" />
<text  x="68.23" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="386.9" y="1877" width="0.1" height="15.0" fill="rgb(213,204,34)" rx="2" ry="2" />
<text  x="389.85" y="1887.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="616.7" y="1877" width="0.2" height="15.0" fill="rgb(221,87,31)" rx="2" ry="2" />
<text  x="619.75" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="832.3" y="1573" width="0.2" height="15.0" fill="rgb(251,18,18)" rx="2" ry="2" />
<text  x="835.29" y="1583.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.1" y="1733" width="0.2" height="15.0" fill="rgb(243,196,6)" rx="2" ry="2" />
<text  x="126.06" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="97.9" y="1989" width="0.2" height="15.0" fill="rgb(233,75,38)" rx="2" ry="2" />
<text  x="100.93" y="1999.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="435.5" y="1989" width="0.4" height="15.0" fill="rgb(211,39,54)" rx="2" ry="2" />
<text  x="438.50" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="330.2" y="1749" width="0.2" height="15.0" fill="rgb(226,95,46)" rx="2" ry="2" />
<text  x="333.22" y="1759.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1158.3" y="1525" width="0.2" height="15.0" fill="rgb(238,53,9)" rx="2" ry="2" />
<text  x="1161.30" y="1535.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (63 samples, 1.06%)</title><rect x="605.2" y="1973" width="12.5" height="15.0" fill="rgb(221,115,28)" rx="2" ry="2" />
<text  x="608.18" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="330.2" y="1733" width="0.2" height="15.0" fill="rgb(217,123,48)" rx="2" ry="2" />
<text  x="333.22" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="542.0" y="1813" width="0.2" height="15.0" fill="rgb(228,0,49)" rx="2" ry="2" />
<text  x="544.98" y="1823.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="662.6" y="1957" width="0.2" height="15.0" fill="rgb(249,128,20)" rx="2" ry="2" />
<text  x="665.61" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="91.8" y="1957" width="0.1" height="15.0" fill="rgb(228,93,25)" rx="2" ry="2" />
<text  x="94.75" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.82%)</title><rect x="975.1" y="2021" width="21.5" height="15.0" fill="rgb(220,42,9)" rx="2" ry="2" />
<text  x="978.06" y="2031.5" >[..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="112.5" y="53" width="0.2" height="15.0" fill="rgb(249,133,50)" rx="2" ry="2" />
<text  x="115.49" y="63.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="326.6" y="1717" width="0.2" height="15.0" fill="rgb(232,77,7)" rx="2" ry="2" />
<text  x="329.63" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="1157.9" y="1829" width="0.6" height="15.0" fill="rgb(214,172,45)" rx="2" ry="2" />
<text  x="1160.90" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1012.7" y="1493" width="0.2" height="15.0" fill="rgb(233,160,34)" rx="2" ry="2" />
<text  x="1015.74" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1019.5" y="2037" width="0.2" height="15.0" fill="rgb(210,137,50)" rx="2" ry="2" />
<text  x="1022.52" y="2047.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (2 samples, 0.03%)</title><rect x="743.2" y="1701" width="0.4" height="15.0" fill="rgb(227,213,11)" rx="2" ry="2" />
<text  x="746.16" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="938.0" y="1925" width="0.6" height="15.0" fill="rgb(215,44,3)" rx="2" ry="2" />
<text  x="940.97" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="665.2" y="1765" width="0.2" height="15.0" fill="rgb(252,25,18)" rx="2" ry="2" />
<text  x="668.20" y="1775.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="528.4" y="1845" width="0.8" height="15.0" fill="rgb(251,1,25)" rx="2" ry="2" />
<text  x="531.42" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="548.2" y="1957" width="0.2" height="15.0" fill="rgb(234,29,54)" rx="2" ry="2" />
<text  x="551.16" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="571.5" y="1877" width="0.2" height="15.0" fill="rgb(236,45,49)" rx="2" ry="2" />
<text  x="574.49" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="224.1" y="1477" width="0.2" height="15.0" fill="rgb(254,31,20)" rx="2" ry="2" />
<text  x="227.15" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="949.5" y="2005" width="0.2" height="15.0" fill="rgb(248,20,13)" rx="2" ry="2" />
<text  x="952.53" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="1111.2" y="1781" width="0.6" height="15.0" fill="rgb(226,140,19)" rx="2" ry="2" />
<text  x="1114.24" y="1791.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="534.2" y="1669" width="0.2" height="15.0" fill="rgb(250,150,14)" rx="2" ry="2" />
<text  x="537.20" y="1679.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="672.8" y="1861" width="0.2" height="15.0" fill="rgb(247,58,54)" rx="2" ry="2" />
<text  x="675.78" y="1871.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.3" y="1669" width="0.2" height="15.0" fill="rgb(240,112,4)" rx="2" ry="2" />
<text  x="125.26" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="641.9" y="1925" width="0.2" height="15.0" fill="rgb(207,195,42)" rx="2" ry="2" />
<text  x="644.87" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="738.2" y="1669" width="0.2" height="15.0" fill="rgb(238,59,22)" rx="2" ry="2" />
<text  x="741.18" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (115 samples, 1.94%)</title><rect x="47.3" y="1989" width="22.9" height="15.0" fill="rgb(253,3,7)" rx="2" ry="2" />
<text  x="50.29" y="1999.5" >f..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (2 samples, 0.03%)</title><rect x="574.3" y="1989" width="0.4" height="15.0" fill="rgb(209,70,10)" rx="2" ry="2" />
<text  x="577.28" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1012.7" y="1541" width="0.2" height="15.0" fill="rgb(210,47,1)" rx="2" ry="2" />
<text  x="1015.74" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="863.2" y="1925" width="0.2" height="15.0" fill="rgb(253,107,15)" rx="2" ry="2" />
<text  x="866.20" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (2 samples, 0.03%)</title><rect x="229.1" y="1925" width="0.4" height="15.0" fill="rgb(228,133,47)" rx="2" ry="2" />
<text  x="232.13" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="571.9" y="1989" width="0.2" height="15.0" fill="rgb(239,213,12)" rx="2" ry="2" />
<text  x="574.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="629" width="14.0" height="15.0" fill="rgb(213,57,45)" rx="2" ry="2" />
<text  x="108.11" y="639.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (9 samples, 0.15%)</title><rect x="274.6" y="1845" width="1.8" height="15.0" fill="rgb(247,1,43)" rx="2" ry="2" />
<text  x="277.59" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="145.2" y="1877" width="0.2" height="15.0" fill="rgb(248,93,35)" rx="2" ry="2" />
<text  x="148.19" y="1887.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="256.4" y="1605" width="0.2" height="15.0" fill="rgb(234,40,39)" rx="2" ry="2" />
<text  x="259.45" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="405" width="14.0" height="15.0" fill="rgb(208,211,16)" rx="2" ry="2" />
<text  x="108.11" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="889.3" y="1877" width="0.2" height="15.0" fill="rgb(252,96,54)" rx="2" ry="2" />
<text  x="892.32" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1139.0" y="1925" width="0.2" height="15.0" fill="rgb(214,127,36)" rx="2" ry="2" />
<text  x="1141.96" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (126 samples, 2.13%)</title><rect x="680.0" y="2037" width="25.1" height="15.0" fill="rgb(213,92,26)" rx="2" ry="2" />
<text  x="682.96" y="2047.5" >f..</text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="116.5" y="53" width="0.4" height="15.0" fill="rgb(243,21,27)" rx="2" ry="2" />
<text  x="119.48" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="615.8" y="1749" width="0.2" height="15.0" fill="rgb(248,91,6)" rx="2" ry="2" />
<text  x="618.75" y="1759.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="144.8" y="1797" width="0.2" height="15.0" fill="rgb(235,221,2)" rx="2" ry="2" />
<text  x="147.79" y="1807.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1104.7" y="1477" width="0.2" height="15.0" fill="rgb(211,34,10)" rx="2" ry="2" />
<text  x="1107.66" y="1487.5" ></text>
</g>
<g >
<title>__fget_light (23 samples, 0.39%)</title><rect x="448.7" y="1957" width="4.5" height="15.0" fill="rgb(205,146,47)" rx="2" ry="2" />
<text  x="451.66" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="546.4" y="1861" width="0.8" height="15.0" fill="rgb(254,131,48)" rx="2" ry="2" />
<text  x="549.36" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.08%)</title><rect x="482.2" y="1989" width="1.0" height="15.0" fill="rgb(247,9,52)" rx="2" ry="2" />
<text  x="485.16" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (55 samples, 0.93%)</title><rect x="172.5" y="2021" width="11.0" height="15.0" fill="rgb(242,154,13)" rx="2" ry="2" />
<text  x="175.50" y="2031.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator== (1 samples, 0.02%)</title><rect x="937.6" y="1909" width="0.2" height="15.0" fill="rgb(242,39,41)" rx="2" ry="2" />
<text  x="940.57" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="907.3" y="1973" width="0.4" height="15.0" fill="rgb(218,44,3)" rx="2" ry="2" />
<text  x="910.26" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1126.8" y="1973" width="0.2" height="15.0" fill="rgb(207,101,19)" rx="2" ry="2" />
<text  x="1129.79" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (507 samples, 8.57%)</title><rect x="236.7" y="2021" width="101.1" height="15.0" fill="rgb(248,112,46)" rx="2" ry="2" />
<text  x="239.71" y="2031.5" >entry_SYSCAL..</text>
</g>
<g >
<title>__inet_inherit_port (1 samples, 0.02%)</title><rect x="290.7" y="1461" width="0.2" height="15.0" fill="rgb(216,184,22)" rx="2" ry="2" />
<text  x="293.74" y="1471.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="867.2" y="1989" width="0.8" height="15.0" fill="rgb(226,101,22)" rx="2" ry="2" />
<text  x="870.18" y="1999.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="547.2" y="1669" width="0.2" height="15.0" fill="rgb(230,0,44)" rx="2" ry="2" />
<text  x="550.16" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="225.9" y="1765" width="0.2" height="15.0" fill="rgb(236,1,10)" rx="2" ry="2" />
<text  x="228.94" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="124.7" y="1573" width="0.1" height="15.0" fill="rgb(209,207,0)" rx="2" ry="2" />
<text  x="127.65" y="1583.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="291.1" y="1429" width="0.2" height="15.0" fill="rgb(249,33,5)" rx="2" ry="2" />
<text  x="294.14" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.5" y="1973" width="0.2" height="15.0" fill="rgb(254,146,10)" rx="2" ry="2" />
<text  x="173.51" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="1075.2" y="1797" width="0.3" height="15.0" fill="rgb(233,223,23)" rx="2" ry="2" />
<text  x="1078.15" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (2 samples, 0.03%)</title><rect x="973.3" y="2037" width="0.4" height="15.0" fill="rgb(205,202,3)" rx="2" ry="2" />
<text  x="976.26" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="725.6" y="1637" width="0.2" height="15.0" fill="rgb(221,173,23)" rx="2" ry="2" />
<text  x="728.62" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="386.7" y="1765" width="0.2" height="15.0" fill="rgb(234,97,33)" rx="2" ry="2" />
<text  x="389.65" y="1775.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="691.3" y="1893" width="0.4" height="15.0" fill="rgb(237,169,48)" rx="2" ry="2" />
<text  x="694.32" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="104.1" y="1973" width="21.9" height="15.0" fill="rgb(251,166,28)" rx="2" ry="2" />
<text  x="107.11" y="1983.5" >[..</text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="453.6" y="1973" width="0.4" height="15.0" fill="rgb(243,186,47)" rx="2" ry="2" />
<text  x="456.65" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="962.3" y="2005" width="0.6" height="15.0" fill="rgb(210,207,9)" rx="2" ry="2" />
<text  x="965.29" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (2 samples, 0.03%)</title><rect x="1131.4" y="2005" width="0.4" height="15.0" fill="rgb(228,61,12)" rx="2" ry="2" />
<text  x="1134.38" y="2015.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1008.8" y="2005" width="0.2" height="15.0" fill="rgb(254,42,15)" rx="2" ry="2" />
<text  x="1011.75" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="118.9" y="117" width="0.2" height="15.0" fill="rgb(223,185,36)" rx="2" ry="2" />
<text  x="121.87" y="127.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="918.0" y="2005" width="0.2" height="15.0" fill="rgb(234,140,51)" rx="2" ry="2" />
<text  x="921.03" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (7 samples, 0.12%)</title><rect x="971.5" y="2005" width="1.4" height="15.0" fill="rgb(230,159,21)" rx="2" ry="2" />
<text  x="974.47" y="2015.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="914.0" y="1925" width="0.2" height="15.0" fill="rgb(212,87,38)" rx="2" ry="2" />
<text  x="917.04" y="1935.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="1158.1" y="1637" width="0.2" height="15.0" fill="rgb(222,128,34)" rx="2" ry="2" />
<text  x="1161.10" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (1 samples, 0.02%)</title><rect x="652.8" y="2021" width="0.2" height="15.0" fill="rgb(230,25,4)" rx="2" ry="2" />
<text  x="655.84" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="124.7" y="1685" width="0.1" height="15.0" fill="rgb(254,78,42)" rx="2" ry="2" />
<text  x="127.65" y="1695.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="774.5" y="1669" width="0.2" height="15.0" fill="rgb(219,28,52)" rx="2" ry="2" />
<text  x="777.47" y="1679.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="1180.8" y="1749" width="0.2" height="15.0" fill="rgb(230,126,53)" rx="2" ry="2" />
<text  x="1183.83" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="63.6" y="1925" width="0.6" height="15.0" fill="rgb(219,36,12)" rx="2" ry="2" />
<text  x="66.64" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="545.4" y="1893" width="0.8" height="15.0" fill="rgb(251,96,30)" rx="2" ry="2" />
<text  x="548.37" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="173.9" y="1973" width="0.4" height="15.0" fill="rgb(250,78,46)" rx="2" ry="2" />
<text  x="176.90" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="264.2" y="1749" width="0.2" height="15.0" fill="rgb(223,162,0)" rx="2" ry="2" />
<text  x="267.22" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.4" y="1829" width="0.2" height="15.0" fill="rgb(247,22,4)" rx="2" ry="2" />
<text  x="281.38" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (37 samples, 0.63%)</title><rect x="1006.0" y="2021" width="7.3" height="15.0" fill="rgb(236,200,49)" rx="2" ry="2" />
<text  x="1008.96" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="146.4" y="1893" width="0.6" height="15.0" fill="rgb(207,208,35)" rx="2" ry="2" />
<text  x="149.38" y="1903.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1130.0" y="1941" width="0.2" height="15.0" fill="rgb(231,128,48)" rx="2" ry="2" />
<text  x="1132.98" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1116.2" y="1653" width="0.2" height="15.0" fill="rgb(227,222,27)" rx="2" ry="2" />
<text  x="1119.23" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="648.9" y="1893" width="0.2" height="15.0" fill="rgb(215,227,48)" rx="2" ry="2" />
<text  x="651.85" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="611.2" y="1813" width="0.4" height="15.0" fill="rgb(210,105,30)" rx="2" ry="2" />
<text  x="614.17" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="116.9" y="37" width="0.4" height="15.0" fill="rgb(222,150,19)" rx="2" ry="2" />
<text  x="119.87" y="47.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1189.8" y="1957" width="0.2" height="15.0" fill="rgb(247,170,47)" rx="2" ry="2" />
<text  x="1192.80" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="996.4" y="1701" width="0.2" height="15.0" fill="rgb(209,14,24)" rx="2" ry="2" />
<text  x="999.39" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="310.3" y="1637" width="0.2" height="15.0" fill="rgb(206,217,48)" rx="2" ry="2" />
<text  x="313.28" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="397.4" y="1749" width="0.4" height="15.0" fill="rgb(218,213,29)" rx="2" ry="2" />
<text  x="400.42" y="1759.5" ></text>
</g>
<g >
<title>skb_entail (1 samples, 0.02%)</title><rect x="257.0" y="1893" width="0.2" height="15.0" fill="rgb(254,101,30)" rx="2" ry="2" />
<text  x="260.05" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="216.4" y="1861" width="0.4" height="15.0" fill="rgb(217,47,51)" rx="2" ry="2" />
<text  x="219.37" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="189.9" y="1957" width="0.2" height="15.0" fill="rgb(254,218,13)" rx="2" ry="2" />
<text  x="192.85" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="161.1" y="1765" width="0.2" height="15.0" fill="rgb(223,199,7)" rx="2" ry="2" />
<text  x="164.14" y="1775.5" ></text>
</g>
<g >
<title>security_socket_accept (4 samples, 0.07%)</title><rect x="386.3" y="1957" width="0.7" height="15.0" fill="rgb(233,78,0)" rx="2" ry="2" />
<text  x="389.25" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="743.8" y="1749" width="0.8" height="15.0" fill="rgb(212,19,36)" rx="2" ry="2" />
<text  x="746.76" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="534.2" y="1701" width="0.2" height="15.0" fill="rgb(237,20,4)" rx="2" ry="2" />
<text  x="537.20" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="462.2" y="1861" width="0.2" height="15.0" fill="rgb(241,184,30)" rx="2" ry="2" />
<text  x="465.22" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="563.3" y="1925" width="0.6" height="15.0" fill="rgb(228,75,52)" rx="2" ry="2" />
<text  x="566.31" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="599.8" y="1525" width="0.4" height="15.0" fill="rgb(223,10,22)" rx="2" ry="2" />
<text  x="602.80" y="1535.5" ></text>
</g>
<g >
<title>__ip_local_out (12 samples, 0.20%)</title><rect x="776.9" y="1637" width="2.4" height="15.0" fill="rgb(217,159,32)" rx="2" ry="2" />
<text  x="779.86" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="76.6" y="1941" width="0.2" height="15.0" fill="rgb(223,62,13)" rx="2" ry="2" />
<text  x="79.60" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="914.0" y="1973" width="0.2" height="15.0" fill="rgb(216,145,41)" rx="2" ry="2" />
<text  x="917.04" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.14%)</title><rect x="181.3" y="1957" width="1.6" height="15.0" fill="rgb(240,203,15)" rx="2" ry="2" />
<text  x="184.28" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="508.1" y="1749" width="0.2" height="15.0" fill="rgb(208,13,13)" rx="2" ry="2" />
<text  x="511.08" y="1759.5" ></text>
</g>
<g >
<title>sock_destroy_inode (22 samples, 0.37%)</title><rect x="738.0" y="1685" width="4.4" height="15.0" fill="rgb(218,188,45)" rx="2" ry="2" />
<text  x="740.98" y="1695.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1104.5" y="1381" width="0.2" height="15.0" fill="rgb(206,216,42)" rx="2" ry="2" />
<text  x="1107.46" y="1391.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="973.3" y="1989" width="0.4" height="15.0" fill="rgb(226,78,7)" rx="2" ry="2" />
<text  x="976.26" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="56.1" y="1877" width="0.2" height="15.0" fill="rgb(237,154,41)" rx="2" ry="2" />
<text  x="59.06" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="871.0" y="1973" width="0.6" height="15.0" fill="rgb(242,69,18)" rx="2" ry="2" />
<text  x="873.97" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (5 samples, 0.08%)</title><rect x="290.7" y="1573" width="1.0" height="15.0" fill="rgb(254,154,14)" rx="2" ry="2" />
<text  x="293.74" y="1583.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="851.6" y="1797" width="0.2" height="15.0" fill="rgb(206,37,31)" rx="2" ry="2" />
<text  x="854.63" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="189.9" y="1877" width="0.2" height="15.0" fill="rgb(250,25,27)" rx="2" ry="2" />
<text  x="192.85" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="53.5" y="1781" width="0.2" height="15.0" fill="rgb(253,27,34)" rx="2" ry="2" />
<text  x="56.47" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.0" y="1813" width="0.2" height="15.0" fill="rgb(247,73,10)" rx="2" ry="2" />
<text  x="159.95" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="675.2" y="1669" width="0.2" height="15.0" fill="rgb(222,226,7)" rx="2" ry="2" />
<text  x="678.17" y="1679.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="980.2" y="1973" width="0.2" height="15.0" fill="rgb(222,60,51)" rx="2" ry="2" />
<text  x="983.24" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="118.7" y="69" width="0.2" height="15.0" fill="rgb(225,26,34)" rx="2" ry="2" />
<text  x="121.67" y="79.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="291.3" y="1445" width="0.2" height="15.0" fill="rgb(243,212,26)" rx="2" ry="2" />
<text  x="294.34" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="637.9" y="1941" width="0.2" height="15.0" fill="rgb(254,21,6)" rx="2" ry="2" />
<text  x="640.88" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="644.9" y="1701" width="0.2" height="15.0" fill="rgb(213,65,1)" rx="2" ry="2" />
<text  x="647.86" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="746.2" y="1797" width="0.4" height="15.0" fill="rgb(249,200,2)" rx="2" ry="2" />
<text  x="749.15" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="386.7" y="1877" width="0.2" height="15.0" fill="rgb(240,111,46)" rx="2" ry="2" />
<text  x="389.65" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="631.5" y="2005" width="0.4" height="15.0" fill="rgb(222,77,54)" rx="2" ry="2" />
<text  x="634.50" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="645.1" y="1957" width="0.2" height="15.0" fill="rgb(210,205,50)" rx="2" ry="2" />
<text  x="648.06" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1121.4" y="1957" width="0.4" height="15.0" fill="rgb(254,222,5)" rx="2" ry="2" />
<text  x="1124.41" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="174.5" y="1973" width="0.8" height="15.0" fill="rgb(214,53,16)" rx="2" ry="2" />
<text  x="177.50" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="887.1" y="1653" width="0.2" height="15.0" fill="rgb(228,109,33)" rx="2" ry="2" />
<text  x="890.12" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (5 samples, 0.08%)</title><rect x="530.0" y="2021" width="1.0" height="15.0" fill="rgb(216,31,21)" rx="2" ry="2" />
<text  x="533.01" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.7" y="1925" width="0.2" height="15.0" fill="rgb(229,46,36)" rx="2" ry="2" />
<text  x="173.71" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="327.0" y="1813" width="0.4" height="15.0" fill="rgb(248,70,2)" rx="2" ry="2" />
<text  x="330.03" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="264.2" y="1605" width="0.2" height="15.0" fill="rgb(231,191,49)" rx="2" ry="2" />
<text  x="267.22" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="160.3" y="1733" width="0.2" height="15.0" fill="rgb(232,68,22)" rx="2" ry="2" />
<text  x="163.34" y="1743.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="551.3" y="1941" width="0.2" height="15.0" fill="rgb(224,156,37)" rx="2" ry="2" />
<text  x="554.35" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1188.4" y="1893" width="0.8" height="15.0" fill="rgb(243,207,35)" rx="2" ry="2" />
<text  x="1191.40" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.8" y="1877" width="0.2" height="15.0" fill="rgb(213,7,54)" rx="2" ry="2" />
<text  x="146.79" y="1887.5" ></text>
</g>
<g >
<title>inet_sock_destruct (1 samples, 0.02%)</title><rect x="982.0" y="1621" width="0.2" height="15.0" fill="rgb(249,26,25)" rx="2" ry="2" />
<text  x="985.03" y="1631.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1003.8" y="1893" width="0.8" height="15.0" fill="rgb(223,130,28)" rx="2" ry="2" />
<text  x="1006.77" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="498.5" y="1861" width="0.2" height="15.0" fill="rgb(241,107,11)" rx="2" ry="2" />
<text  x="501.51" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (106 samples, 1.79%)</title><rect x="210.8" y="1973" width="21.1" height="15.0" fill="rgb(235,107,21)" rx="2" ry="2" />
<text  x="213.79" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="562.1" y="1941" width="0.2" height="15.0" fill="rgb(222,107,48)" rx="2" ry="2" />
<text  x="565.12" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="158.9" y="1909" width="0.2" height="15.0" fill="rgb(246,75,51)" rx="2" ry="2" />
<text  x="161.95" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (3 samples, 0.05%)</title><rect x="88.6" y="1973" width="0.6" height="15.0" fill="rgb(219,202,34)" rx="2" ry="2" />
<text  x="91.56" y="1983.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="76.4" y="1685" width="0.2" height="15.0" fill="rgb(211,215,13)" rx="2" ry="2" />
<text  x="79.40" y="1695.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="125.8" y="1957" width="0.2" height="15.0" fill="rgb(205,43,10)" rx="2" ry="2" />
<text  x="128.85" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="746.2" y="1637" width="0.4" height="15.0" fill="rgb(220,14,27)" rx="2" ry="2" />
<text  x="749.15" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (13 samples, 0.22%)</title><rect x="290.5" y="1669" width="2.6" height="15.0" fill="rgb(254,190,39)" rx="2" ry="2" />
<text  x="293.54" y="1679.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1004.0" y="1845" width="0.6" height="15.0" fill="rgb(207,87,38)" rx="2" ry="2" />
<text  x="1006.97" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (48 samples, 0.81%)</title><rect x="928.4" y="1941" width="9.6" height="15.0" fill="rgb(238,219,21)" rx="2" ry="2" />
<text  x="931.40" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (5 samples, 0.08%)</title><rect x="133.8" y="1941" width="1.0" height="15.0" fill="rgb(234,175,24)" rx="2" ry="2" />
<text  x="136.82" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="969.5" y="2037" width="0.6" height="15.0" fill="rgb(213,12,34)" rx="2" ry="2" />
<text  x="972.47" y="2047.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="524.0" y="1957" width="0.2" height="15.0" fill="rgb(240,166,25)" rx="2" ry="2" />
<text  x="527.03" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (44 samples, 0.74%)</title><rect x="554.5" y="1957" width="8.8" height="15.0" fill="rgb(243,145,45)" rx="2" ry="2" />
<text  x="557.54" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="745.8" y="1717" width="0.2" height="15.0" fill="rgb(213,31,19)" rx="2" ry="2" />
<text  x="748.76" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="547.2" y="1701" width="0.2" height="15.0" fill="rgb(219,219,40)" rx="2" ry="2" />
<text  x="550.16" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="996.4" y="1781" width="0.2" height="15.0" fill="rgb(211,121,22)" rx="2" ry="2" />
<text  x="999.39" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="678.0" y="2005" width="0.2" height="15.0" fill="rgb(223,12,29)" rx="2" ry="2" />
<text  x="680.96" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="697.9" y="1829" width="0.2" height="15.0" fill="rgb(228,146,5)" rx="2" ry="2" />
<text  x="700.90" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (92 samples, 1.55%)</title><rect x="1142.5" y="1989" width="18.4" height="15.0" fill="rgb(235,186,17)" rx="2" ry="2" />
<text  x="1145.54" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="268.2" y="1861" width="0.4" height="15.0" fill="rgb(232,103,27)" rx="2" ry="2" />
<text  x="271.21" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1130.2" y="1877" width="0.4" height="15.0" fill="rgb(221,32,12)" rx="2" ry="2" />
<text  x="1133.18" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="848.2" y="1893" width="0.2" height="15.0" fill="rgb(250,65,15)" rx="2" ry="2" />
<text  x="851.24" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (1 samples, 0.02%)</title><rect x="652.0" y="2005" width="0.2" height="15.0" fill="rgb(213,161,32)" rx="2" ry="2" />
<text  x="655.04" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (6 samples, 0.10%)</title><rect x="1131.4" y="2021" width="1.2" height="15.0" fill="rgb(239,61,1)" rx="2" ry="2" />
<text  x="1134.38" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="615.8" y="1573" width="0.2" height="15.0" fill="rgb(251,195,53)" rx="2" ry="2" />
<text  x="618.75" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="222.4" y="1877" width="0.2" height="15.0" fill="rgb(245,168,24)" rx="2" ry="2" />
<text  x="225.35" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_skb (4 samples, 0.07%)</title><rect x="308.9" y="1669" width="0.8" height="15.0" fill="rgb(244,122,42)" rx="2" ry="2" />
<text  x="311.89" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="1177.8" y="2005" width="0.4" height="15.0" fill="rgb(243,19,9)" rx="2" ry="2" />
<text  x="1180.84" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="547.2" y="1621" width="0.2" height="15.0" fill="rgb(228,171,23)" rx="2" ry="2" />
<text  x="550.16" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="627.7" y="1957" width="0.2" height="15.0" fill="rgb(212,195,30)" rx="2" ry="2" />
<text  x="630.72" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="919.2" y="1957" width="0.6" height="15.0" fill="rgb(230,176,28)" rx="2" ry="2" />
<text  x="922.23" y="1967.5" ></text>
</g>
<g >
<title>epoll_wait (106 samples, 1.79%)</title><rect x="487.3" y="2037" width="21.2" height="15.0" fill="rgb(231,107,26)" rx="2" ry="2" />
<text  x="490.34" y="2047.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="802.6" y="1653" width="0.2" height="15.0" fill="rgb(238,208,42)" rx="2" ry="2" />
<text  x="805.58" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="904.7" y="1973" width="0.2" height="15.0" fill="rgb(223,3,1)" rx="2" ry="2" />
<text  x="907.67" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="563.7" y="1685" width="0.2" height="15.0" fill="rgb(238,60,9)" rx="2" ry="2" />
<text  x="566.71" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="972.7" y="1845" width="0.2" height="15.0" fill="rgb(231,22,32)" rx="2" ry="2" />
<text  x="975.66" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (87 samples, 1.47%)</title><rect x="71.2" y="1973" width="17.4" height="15.0" fill="rgb(234,53,7)" rx="2" ry="2" />
<text  x="74.21" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="936.4" y="1893" width="0.2" height="15.0" fill="rgb(214,19,44)" rx="2" ry="2" />
<text  x="939.37" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (98 samples, 1.66%)</title><rect x="782.4" y="1573" width="19.6" height="15.0" fill="rgb(230,152,27)" rx="2" ry="2" />
<text  x="785.44" y="1583.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="78.6" y="1957" width="0.4" height="15.0" fill="rgb(220,11,44)" rx="2" ry="2" />
<text  x="81.59" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="885.7" y="1941" width="0.2" height="15.0" fill="rgb(213,192,49)" rx="2" ry="2" />
<text  x="888.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1013.1" y="1717" width="0.2" height="15.0" fill="rgb(215,189,3)" rx="2" ry="2" />
<text  x="1016.14" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="642.7" y="1925" width="0.4" height="15.0" fill="rgb(211,160,5)" rx="2" ry="2" />
<text  x="645.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (7 samples, 0.12%)</title><rect x="990.0" y="1909" width="1.4" height="15.0" fill="rgb(205,118,28)" rx="2" ry="2" />
<text  x="993.01" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="236.5" y="1957" width="0.2" height="15.0" fill="rgb(217,214,17)" rx="2" ry="2" />
<text  x="239.51" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="599.8" y="1733" width="0.4" height="15.0" fill="rgb(238,135,16)" rx="2" ry="2" />
<text  x="602.80" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="525.0" y="1989" width="1.2" height="15.0" fill="rgb(230,223,31)" rx="2" ry="2" />
<text  x="528.03" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="63.6" y="1893" width="0.4" height="15.0" fill="rgb(233,133,8)" rx="2" ry="2" />
<text  x="66.64" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="640.5" y="1797" width="0.2" height="15.0" fill="rgb(239,144,42)" rx="2" ry="2" />
<text  x="643.48" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1158.3" y="1669" width="0.2" height="15.0" fill="rgb(235,191,35)" rx="2" ry="2" />
<text  x="1161.30" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock (30 samples, 0.51%)</title><rect x="785.4" y="1541" width="6.0" height="15.0" fill="rgb(220,152,13)" rx="2" ry="2" />
<text  x="788.43" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="104.5" y="1733" width="18.6" height="15.0" fill="rgb(252,192,13)" rx="2" ry="2" />
<text  x="107.51" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="249.3" y="1941" width="0.2" height="15.0" fill="rgb(217,217,42)" rx="2" ry="2" />
<text  x="252.27" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (6 samples, 0.10%)</title><rect x="644.1" y="1989" width="1.2" height="15.0" fill="rgb(240,44,34)" rx="2" ry="2" />
<text  x="647.07" y="1999.5" ></text>
</g>
<g >
<title>event_active_nolock_ (6 samples, 0.10%)</title><rect x="99.9" y="2005" width="1.2" height="15.0" fill="rgb(221,164,33)" rx="2" ry="2" />
<text  x="102.93" y="2015.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="552.7" y="1957" width="0.2" height="15.0" fill="rgb(249,23,0)" rx="2" ry="2" />
<text  x="555.74" y="1967.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="337.6" y="2005" width="0.2" height="15.0" fill="rgb(225,36,44)" rx="2" ry="2" />
<text  x="340.60" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="421.1" y="2005" width="0.4" height="15.0" fill="rgb(219,10,25)" rx="2" ry="2" />
<text  x="424.15" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="907.7" y="1973" width="0.2" height="15.0" fill="rgb(239,159,10)" rx="2" ry="2" />
<text  x="910.66" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1116.2" y="1621" width="0.2" height="15.0" fill="rgb(227,173,10)" rx="2" ry="2" />
<text  x="1119.23" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="336.0" y="1813" width="0.2" height="15.0" fill="rgb(235,1,14)" rx="2" ry="2" />
<text  x="339.01" y="1823.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="551.5" y="1941" width="0.4" height="15.0" fill="rgb(215,197,2)" rx="2" ry="2" />
<text  x="554.55" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="171.3" y="1989" width="0.2" height="15.0" fill="rgb(206,145,0)" rx="2" ry="2" />
<text  x="174.31" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (2 samples, 0.03%)</title><rect x="80.2" y="1909" width="0.4" height="15.0" fill="rgb(210,94,44)" rx="2" ry="2" />
<text  x="83.19" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (5 samples, 0.08%)</title><rect x="83.6" y="1957" width="1.0" height="15.0" fill="rgb(218,146,24)" rx="2" ry="2" />
<text  x="86.58" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="338.2" y="1989" width="0.8" height="15.0" fill="rgb(223,27,30)" rx="2" ry="2" />
<text  x="341.20" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="532.4" y="1845" width="0.2" height="15.0" fill="rgb(233,150,45)" rx="2" ry="2" />
<text  x="535.41" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="881.9" y="1845" width="0.2" height="15.0" fill="rgb(241,197,21)" rx="2" ry="2" />
<text  x="884.94" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.4" y="1845" width="0.1" height="15.0" fill="rgb(214,67,39)" rx="2" ry="2" />
<text  x="160.35" y="1855.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (48 samples, 0.81%)</title><rect x="1004.6" y="2037" width="9.5" height="15.0" fill="rgb(253,193,7)" rx="2" ry="2" />
<text  x="1007.57" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="1121.6" y="1733" width="0.2" height="15.0" fill="rgb(220,105,15)" rx="2" ry="2" />
<text  x="1124.61" y="1743.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="817.3" y="1605" width="0.2" height="15.0" fill="rgb(218,123,7)" rx="2" ry="2" />
<text  x="820.34" y="1615.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="1130.0" y="1925" width="0.2" height="15.0" fill="rgb(251,118,36)" rx="2" ry="2" />
<text  x="1132.98" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="505.3" y="1845" width="0.4" height="15.0" fill="rgb(228,123,38)" rx="2" ry="2" />
<text  x="508.29" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="779.1" y="1525" width="0.2" height="15.0" fill="rgb(215,51,32)" rx="2" ry="2" />
<text  x="782.05" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="912.6" y="1733" width="0.2" height="15.0" fill="rgb(254,73,35)" rx="2" ry="2" />
<text  x="915.65" y="1743.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="858.6" y="1733" width="0.2" height="15.0" fill="rgb(217,123,54)" rx="2" ry="2" />
<text  x="861.61" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="842.9" y="1861" width="0.2" height="15.0" fill="rgb(245,139,52)" rx="2" ry="2" />
<text  x="845.86" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="675.4" y="1685" width="0.2" height="15.0" fill="rgb(244,158,50)" rx="2" ry="2" />
<text  x="678.37" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="157.5" y="1893" width="0.8" height="15.0" fill="rgb(238,130,37)" rx="2" ry="2" />
<text  x="160.55" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="480.6" y="1909" width="0.2" height="15.0" fill="rgb(231,99,30)" rx="2" ry="2" />
<text  x="483.56" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="161.9" y="2005" width="0.2" height="15.0" fill="rgb(254,203,42)" rx="2" ry="2" />
<text  x="164.94" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="542.0" y="1541" width="0.2" height="15.0" fill="rgb(220,223,41)" rx="2" ry="2" />
<text  x="544.98" y="1551.5" ></text>
</g>
<g >
<title>accept4 (346 samples, 5.85%)</title><rect x="346.4" y="2037" width="69.0" height="15.0" fill="rgb(222,217,52)" rx="2" ry="2" />
<text  x="349.37" y="2047.5" >accept4</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1126.8" y="1957" width="0.2" height="15.0" fill="rgb(219,207,20)" rx="2" ry="2" />
<text  x="1129.79" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="36.1" y="1989" width="0.2" height="15.0" fill="rgb(209,69,41)" rx="2" ry="2" />
<text  x="39.12" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="277.4" y="1829" width="0.2" height="15.0" fill="rgb(216,32,49)" rx="2" ry="2" />
<text  x="280.38" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="520.4" y="1973" width="1.4" height="15.0" fill="rgb(250,133,23)" rx="2" ry="2" />
<text  x="523.44" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="551.9" y="1973" width="0.4" height="15.0" fill="rgb(233,134,23)" rx="2" ry="2" />
<text  x="554.95" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="246.9" y="1845" width="0.2" height="15.0" fill="rgb(207,99,24)" rx="2" ry="2" />
<text  x="249.88" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="824.9" y="1541" width="0.2" height="15.0" fill="rgb(214,217,43)" rx="2" ry="2" />
<text  x="827.91" y="1551.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="161.1" y="1845" width="0.2" height="15.0" fill="rgb(221,218,0)" rx="2" ry="2" />
<text  x="164.14" y="1855.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (4 samples, 0.07%)</title><rect x="528.4" y="2005" width="0.8" height="15.0" fill="rgb(226,227,49)" rx="2" ry="2" />
<text  x="531.42" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="264.2" y="1685" width="0.2" height="15.0" fill="rgb(230,111,42)" rx="2" ry="2" />
<text  x="267.22" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (99 samples, 1.67%)</title><rect x="141.6" y="1973" width="19.7" height="15.0" fill="rgb(248,78,4)" rx="2" ry="2" />
<text  x="144.60" y="1983.5" ></text>
</g>
<g >
<title>sock_alloc_file (56 samples, 0.95%)</title><rect x="398.4" y="1957" width="11.2" height="15.0" fill="rgb(248,17,2)" rx="2" ry="2" />
<text  x="401.42" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (57 samples, 0.96%)</title><rect x="216.8" y="1925" width="11.3" height="15.0" fill="rgb(205,202,21)" rx="2" ry="2" />
<text  x="219.77" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (3 samples, 0.05%)</title><rect x="83.0" y="1925" width="0.6" height="15.0" fill="rgb(245,138,26)" rx="2" ry="2" />
<text  x="85.98" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="518.8" y="1925" width="0.8" height="15.0" fill="rgb(237,14,30)" rx="2" ry="2" />
<text  x="521.85" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="278.4" y="1797" width="0.2" height="15.0" fill="rgb(233,104,23)" rx="2" ry="2" />
<text  x="281.38" y="1807.5" ></text>
</g>
<g >
<title>note_interrupt (1 samples, 0.02%)</title><rect x="1120.4" y="1877" width="0.2" height="15.0" fill="rgb(208,112,44)" rx="2" ry="2" />
<text  x="1123.41" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="481.0" y="1861" width="0.4" height="15.0" fill="rgb(221,197,52)" rx="2" ry="2" />
<text  x="483.96" y="1871.5" ></text>
</g>
<g >
<title>sys_sendmsg (452 samples, 7.64%)</title><rect x="247.3" y="1989" width="90.1" height="15.0" fill="rgb(227,43,5)" rx="2" ry="2" />
<text  x="250.28" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="577.3" y="1925" width="0.2" height="15.0" fill="rgb(221,19,11)" rx="2" ry="2" />
<text  x="580.27" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="913.8" y="2037" width="0.2" height="15.0" fill="rgb(248,219,28)" rx="2" ry="2" />
<text  x="916.84" y="2047.5" ></text>
</g>
<g >
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="317.3" y="1781" width="0.4" height="15.0" fill="rgb(236,131,9)" rx="2" ry="2" />
<text  x="320.26" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="397.4" y="1685" width="0.2" height="15.0" fill="rgb(233,49,8)" rx="2" ry="2" />
<text  x="400.42" y="1695.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.17%)</title><rect x="18.8" y="1941" width="2.0" height="15.0" fill="rgb(249,185,52)" rx="2" ry="2" />
<text  x="21.77" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="644.9" y="1685" width="0.2" height="15.0" fill="rgb(237,166,31)" rx="2" ry="2" />
<text  x="647.86" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (2 samples, 0.03%)</title><rect x="955.9" y="2005" width="0.4" height="15.0" fill="rgb(232,99,50)" rx="2" ry="2" />
<text  x="958.91" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="736.6" y="1685" width="0.4" height="15.0" fill="rgb(229,69,19)" rx="2" ry="2" />
<text  x="739.58" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="904.1" y="1973" width="0.6" height="15.0" fill="rgb(207,227,9)" rx="2" ry="2" />
<text  x="907.07" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1178.0" y="1749" width="0.2" height="15.0" fill="rgb(232,18,40)" rx="2" ry="2" />
<text  x="1181.04" y="1759.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="664.6" y="1893" width="0.2" height="15.0" fill="rgb(245,65,3)" rx="2" ry="2" />
<text  x="667.60" y="1903.5" ></text>
</g>
<g >
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="806.4" y="1637" width="0.6" height="15.0" fill="rgb(236,204,4)" rx="2" ry="2" />
<text  x="809.37" y="1647.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="275.8" y="1829" width="0.4" height="15.0" fill="rgb(208,166,52)" rx="2" ry="2" />
<text  x="278.79" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="863.2" y="1877" width="0.2" height="15.0" fill="rgb(250,116,3)" rx="2" ry="2" />
<text  x="866.20" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="435.9" y="1861" width="0.2" height="15.0" fill="rgb(217,12,37)" rx="2" ry="2" />
<text  x="438.90" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="839.3" y="1925" width="0.2" height="15.0" fill="rgb(209,101,15)" rx="2" ry="2" />
<text  x="842.27" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (6 samples, 0.10%)</title><rect x="290.5" y="1637" width="1.2" height="15.0" fill="rgb(218,2,44)" rx="2" ry="2" />
<text  x="293.54" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="104.7" y="1253" width="15.4" height="15.0" fill="rgb(205,141,18)" rx="2" ry="2" />
<text  x="107.71" y="1263.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="308.7" y="1685" width="0.2" height="15.0" fill="rgb(216,137,49)" rx="2" ry="2" />
<text  x="311.69" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="386.9" y="1893" width="0.1" height="15.0" fill="rgb(236,11,51)" rx="2" ry="2" />
<text  x="389.85" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="697.9" y="1669" width="0.2" height="15.0" fill="rgb(245,97,23)" rx="2" ry="2" />
<text  x="700.90" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="97.9" y="1957" width="0.2" height="15.0" fill="rgb(206,76,41)" rx="2" ry="2" />
<text  x="100.93" y="1967.5" ></text>
</g>
<g >
<title>malloc@plt (3 samples, 0.05%)</title><rect x="1018.1" y="2037" width="0.6" height="15.0" fill="rgb(250,175,37)" rx="2" ry="2" />
<text  x="1021.12" y="2047.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.03%)</title><rect x="292.7" y="1349" width="0.4" height="15.0" fill="rgb(233,184,18)" rx="2" ry="2" />
<text  x="295.74" y="1359.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="955.9" y="1973" width="0.2" height="15.0" fill="rgb(230,81,34)" rx="2" ry="2" />
<text  x="958.91" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="982.0" y="1733" width="0.2" height="15.0" fill="rgb(220,132,33)" rx="2" ry="2" />
<text  x="985.03" y="1743.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="546.4" y="1765" width="0.2" height="15.0" fill="rgb(224,192,17)" rx="2" ry="2" />
<text  x="549.36" y="1775.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="547.8" y="1973" width="0.2" height="15.0" fill="rgb(251,92,27)" rx="2" ry="2" />
<text  x="550.76" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (8 samples, 0.14%)</title><rect x="890.7" y="1941" width="1.6" height="15.0" fill="rgb(215,26,4)" rx="2" ry="2" />
<text  x="893.71" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="577.3" y="1877" width="0.2" height="15.0" fill="rgb(249,24,36)" rx="2" ry="2" />
<text  x="580.27" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="725.6" y="1781" width="0.2" height="15.0" fill="rgb(216,152,24)" rx="2" ry="2" />
<text  x="728.62" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (2 samples, 0.03%)</title><rect x="677.6" y="1989" width="0.4" height="15.0" fill="rgb(242,81,5)" rx="2" ry="2" />
<text  x="680.56" y="1999.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="63.6" y="1877" width="0.2" height="15.0" fill="rgb(224,41,2)" rx="2" ry="2" />
<text  x="66.64" y="1887.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="253.3" y="1909" width="0.2" height="15.0" fill="rgb(248,92,1)" rx="2" ry="2" />
<text  x="256.26" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="597.4" y="1861" width="1.6" height="15.0" fill="rgb(242,77,49)" rx="2" ry="2" />
<text  x="600.41" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="324.4" y="1605" width="0.4" height="15.0" fill="rgb(220,131,5)" rx="2" ry="2" />
<text  x="327.44" y="1615.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="17.8" y="1909" width="0.8" height="15.0" fill="rgb(245,137,17)" rx="2" ry="2" />
<text  x="20.78" y="1919.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="65.0" y="1909" width="0.2" height="15.0" fill="rgb(248,15,40)" rx="2" ry="2" />
<text  x="68.03" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="94.5" y="2005" width="0.2" height="15.0" fill="rgb(244,16,41)" rx="2" ry="2" />
<text  x="97.54" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="704.5" y="1845" width="0.2" height="15.0" fill="rgb(229,49,25)" rx="2" ry="2" />
<text  x="707.48" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.17%)</title><rect x="105.1" y="245" width="13.8" height="15.0" fill="rgb(208,179,50)" rx="2" ry="2" />
<text  x="108.11" y="255.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (970 samples, 16.39%)</title><rect x="707.1" y="2037" width="193.4" height="15.0" fill="rgb(219,217,53)" rx="2" ry="2" />
<text  x="710.07" y="2047.5" >facebook::memcache::McSer..</text>
</g>
<g >
<title>kmem_cache_alloc (11 samples, 0.19%)</title><rect x="399.6" y="1909" width="2.2" height="15.0" fill="rgb(209,159,36)" rx="2" ry="2" />
<text  x="402.61" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="859.6" y="1973" width="0.4" height="15.0" fill="rgb(214,116,41)" rx="2" ry="2" />
<text  x="862.61" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="907.1" y="1893" width="0.2" height="15.0" fill="rgb(207,209,54)" rx="2" ry="2" />
<text  x="910.06" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1180.8" y="1973" width="0.2" height="15.0" fill="rgb(211,175,11)" rx="2" ry="2" />
<text  x="1183.83" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="549" width="14.0" height="15.0" fill="rgb(209,171,49)" rx="2" ry="2" />
<text  x="108.11" y="559.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="883.3" y="1845" width="0.2" height="15.0" fill="rgb(207,208,17)" rx="2" ry="2" />
<text  x="886.34" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="157.9" y="1653" width="0.2" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="160.95" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.3" y="981" width="0.2" height="15.0" fill="rgb(239,10,22)" rx="2" ry="2" />
<text  x="122.27" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="529.6" y="1957" width="0.4" height="15.0" fill="rgb(226,104,47)" rx="2" ry="2" />
<text  x="532.61" y="1967.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="32.1" y="1637" width="0.2" height="15.0" fill="rgb(228,62,10)" rx="2" ry="2" />
<text  x="35.13" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="102.7" y="1893" width="0.2" height="15.0" fill="rgb(217,176,32)" rx="2" ry="2" />
<text  x="105.72" y="1903.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="518.8" y="1845" width="0.8" height="15.0" fill="rgb(221,65,29)" rx="2" ry="2" />
<text  x="521.85" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="78.4" y="1909" width="0.2" height="15.0" fill="rgb(246,152,14)" rx="2" ry="2" />
<text  x="81.39" y="1919.5" ></text>
</g>
<g >
<title>event_del@plt (1 samples, 0.02%)</title><rect x="65.4" y="1909" width="0.2" height="15.0" fill="rgb(251,147,44)" rx="2" ry="2" />
<text  x="68.43" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="984.8" y="1909" width="0.2" height="15.0" fill="rgb(210,45,40)" rx="2" ry="2" />
<text  x="987.83" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="377.7" y="1733" width="0.2" height="15.0" fill="rgb(247,9,24)" rx="2" ry="2" />
<text  x="380.68" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="330.2" y="1701" width="0.2" height="15.0" fill="rgb(211,194,34)" rx="2" ry="2" />
<text  x="333.22" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="161.1" y="1861" width="0.2" height="15.0" fill="rgb(224,136,49)" rx="2" ry="2" />
<text  x="164.14" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="161.1" y="1717" width="0.2" height="15.0" fill="rgb(226,182,13)" rx="2" ry="2" />
<text  x="164.14" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="84.0" y="1925" width="0.4" height="15.0" fill="rgb(235,22,36)" rx="2" ry="2" />
<text  x="86.97" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="972.7" y="1941" width="0.2" height="15.0" fill="rgb(236,145,10)" rx="2" ry="2" />
<text  x="975.66" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (6 samples, 0.10%)</title><rect x="81.6" y="1957" width="1.2" height="15.0" fill="rgb(223,221,28)" rx="2" ry="2" />
<text  x="84.58" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="218.4" y="1909" width="3.0" height="15.0" fill="rgb(219,1,21)" rx="2" ry="2" />
<text  x="221.36" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_locked (3 samples, 0.05%)</title><rect x="292.5" y="1413" width="0.6" height="15.0" fill="rgb(207,169,23)" rx="2" ry="2" />
<text  x="295.54" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="599.8" y="1701" width="0.4" height="15.0" fill="rgb(230,171,28)" rx="2" ry="2" />
<text  x="602.80" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="743.8" y="1765" width="0.8" height="15.0" fill="rgb(205,201,3)" rx="2" ry="2" />
<text  x="746.76" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (275 samples, 4.65%)</title><rect x="40.9" y="2021" width="54.8" height="15.0" fill="rgb(247,122,14)" rx="2" ry="2" />
<text  x="43.91" y="2031.5" >folly..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="534.2" y="2005" width="0.2" height="15.0" fill="rgb(210,28,40)" rx="2" ry="2" />
<text  x="537.20" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1121.4" y="1829" width="0.4" height="15.0" fill="rgb(206,77,12)" rx="2" ry="2" />
<text  x="1124.41" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.57%)</title><rect x="10.6" y="2037" width="6.8" height="15.0" fill="rgb(205,205,22)" rx="2" ry="2" />
<text  x="13.60" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (2 samples, 0.03%)</title><rect x="917.2" y="1989" width="0.4" height="15.0" fill="rgb(217,134,0)" rx="2" ry="2" />
<text  x="920.23" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="828.3" y="1637" width="0.2" height="15.0" fill="rgb(210,92,42)" rx="2" ry="2" />
<text  x="831.30" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1013.1" y="1669" width="0.2" height="15.0" fill="rgb(252,181,0)" rx="2" ry="2" />
<text  x="1016.14" y="1679.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="291.1" y="1445" width="0.2" height="15.0" fill="rgb(235,216,49)" rx="2" ry="2" />
<text  x="294.14" y="1455.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (12 samples, 0.20%)</title><rect x="981.0" y="1957" width="2.4" height="15.0" fill="rgb(240,160,20)" rx="2" ry="2" />
<text  x="984.04" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="996.4" y="1861" width="0.2" height="15.0" fill="rgb(232,179,31)" rx="2" ry="2" />
<text  x="999.39" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="264.2" y="1621" width="0.2" height="15.0" fill="rgb(229,191,1)" rx="2" ry="2" />
<text  x="267.22" y="1631.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="488.7" y="1925" width="0.2" height="15.0" fill="rgb(237,75,3)" rx="2" ry="2" />
<text  x="491.74" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="515.1" y="1973" width="0.8" height="15.0" fill="rgb(216,195,29)" rx="2" ry="2" />
<text  x="518.06" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="571.5" y="1941" width="0.2" height="15.0" fill="rgb(216,77,50)" rx="2" ry="2" />
<text  x="574.49" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="434.7" y="1989" width="0.8" height="15.0" fill="rgb(214,152,23)" rx="2" ry="2" />
<text  x="437.70" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (10 samples, 0.17%)</title><rect x="566.3" y="2005" width="2.0" height="15.0" fill="rgb(237,151,45)" rx="2" ry="2" />
<text  x="569.30" y="2015.5" ></text>
</g>
<g >
<title>isspace (3 samples, 0.05%)</title><rect x="1013.3" y="2021" width="0.6" height="15.0" fill="rgb(215,78,18)" rx="2" ry="2" />
<text  x="1016.34" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(234,208,17)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="861.4" y="1989" width="0.4" height="15.0" fill="rgb(213,163,13)" rx="2" ry="2" />
<text  x="864.40" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1019.3" y="1717" width="0.2" height="15.0" fill="rgb(251,156,20)" rx="2" ry="2" />
<text  x="1022.32" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (2 samples, 0.03%)</title><rect x="77.8" y="1957" width="0.4" height="15.0" fill="rgb(214,149,40)" rx="2" ry="2" />
<text  x="80.79" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="544.8" y="1909" width="0.4" height="15.0" fill="rgb(232,147,21)" rx="2" ry="2" />
<text  x="547.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (3 samples, 0.05%)</title><rect x="902.3" y="2037" width="0.6" height="15.0" fill="rgb(209,18,35)" rx="2" ry="2" />
<text  x="905.28" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="119.7" y="1205" width="0.2" height="15.0" fill="rgb(246,117,51)" rx="2" ry="2" />
<text  x="122.67" y="1215.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="330.2" y="1797" width="0.2" height="15.0" fill="rgb(228,33,33)" rx="2" ry="2" />
<text  x="333.22" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="631.3" y="2005" width="0.2" height="15.0" fill="rgb(242,136,13)" rx="2" ry="2" />
<text  x="634.30" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="611.2" y="1765" width="0.2" height="15.0" fill="rgb(243,18,5)" rx="2" ry="2" />
<text  x="614.17" y="1775.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="281.6" y="1829" width="0.2" height="15.0" fill="rgb(254,181,36)" rx="2" ry="2" />
<text  x="284.57" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="102.7" y="1909" width="0.2" height="15.0" fill="rgb(212,75,54)" rx="2" ry="2" />
<text  x="105.72" y="1919.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="330.2" y="1653" width="0.2" height="15.0" fill="rgb(209,156,8)" rx="2" ry="2" />
<text  x="333.22" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="528.2" y="1973" width="0.2" height="15.0" fill="rgb(236,193,47)" rx="2" ry="2" />
<text  x="531.22" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (8 samples, 0.14%)</title><rect x="578.7" y="1989" width="1.6" height="15.0" fill="rgb(244,108,21)" rx="2" ry="2" />
<text  x="581.67" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="817.5" y="1381" width="0.2" height="15.0" fill="rgb(230,135,33)" rx="2" ry="2" />
<text  x="820.54" y="1391.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="836.7" y="1637" width="0.2" height="15.0" fill="rgb(250,219,50)" rx="2" ry="2" />
<text  x="839.68" y="1647.5" ></text>
</g>
<g >
<title>sys_close (18 samples, 0.30%)</title><rect x="832.5" y="1861" width="3.6" height="15.0" fill="rgb(240,100,25)" rx="2" ry="2" />
<text  x="835.49" y="1871.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="545.2" y="1701" width="0.2" height="15.0" fill="rgb(240,206,39)" rx="2" ry="2" />
<text  x="548.17" y="1711.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (4 samples, 0.07%)</title><rect x="970.3" y="2037" width="0.8" height="15.0" fill="rgb(228,205,13)" rx="2" ry="2" />
<text  x="973.27" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="832.3" y="1845" width="0.2" height="15.0" fill="rgb(246,184,27)" rx="2" ry="2" />
<text  x="835.29" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="644.9" y="1877" width="0.2" height="15.0" fill="rgb(211,84,22)" rx="2" ry="2" />
<text  x="647.86" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="290.7" y="1589" width="1.0" height="15.0" fill="rgb(228,6,7)" rx="2" ry="2" />
<text  x="293.74" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="891.3" y="1925" width="1.0" height="15.0" fill="rgb(218,98,36)" rx="2" ry="2" />
<text  x="894.31" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1049.8" y="1829" width="0.2" height="15.0" fill="rgb(243,1,36)" rx="2" ry="2" />
<text  x="1052.83" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="745.8" y="1749" width="0.2" height="15.0" fill="rgb(249,35,44)" rx="2" ry="2" />
<text  x="748.76" y="1759.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="984.2" y="1925" width="2.0" height="15.0" fill="rgb(234,175,20)" rx="2" ry="2" />
<text  x="987.23" y="1935.5" ></text>
</g>
<g >
<title>hmm_mm_destroy (1 samples, 0.02%)</title><rect x="17.0" y="1893" width="0.2" height="15.0" fill="rgb(218,97,16)" rx="2" ry="2" />
<text  x="19.98" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="534.2" y="1717" width="0.2" height="15.0" fill="rgb(209,133,46)" rx="2" ry="2" />
<text  x="537.20" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="951.3" y="1989" width="0.2" height="15.0" fill="rgb(236,176,46)" rx="2" ry="2" />
<text  x="954.33" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="124.7" y="1733" width="0.1" height="15.0" fill="rgb(210,189,30)" rx="2" ry="2" />
<text  x="127.65" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (6 samples, 0.10%)</title><rect x="291.9" y="1541" width="1.2" height="15.0" fill="rgb(217,124,48)" rx="2" ry="2" />
<text  x="294.94" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="402.4" y="1877" width="0.2" height="15.0" fill="rgb(250,183,45)" rx="2" ry="2" />
<text  x="405.40" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="756.1" y="1573" width="0.2" height="15.0" fill="rgb(236,221,19)" rx="2" ry="2" />
<text  x="759.12" y="1583.5" ></text>
</g>
<g >
<title>security_file_alloc (13 samples, 0.22%)</title><rect x="402.6" y="1909" width="2.6" height="15.0" fill="rgb(254,89,12)" rx="2" ry="2" />
<text  x="405.60" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="968.3" y="1973" width="0.2" height="15.0" fill="rgb(219,98,15)" rx="2" ry="2" />
<text  x="971.28" y="1983.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1126.8" y="2053" width="0.2" height="15.0" fill="rgb(250,226,29)" rx="2" ry="2" />
<text  x="1129.79" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.7" y="1957" width="0.2" height="15.0" fill="rgb(240,56,52)" rx="2" ry="2" />
<text  x="173.71" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1012.7" y="1509" width="0.2" height="15.0" fill="rgb(216,68,16)" rx="2" ry="2" />
<text  x="1015.74" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="856.2" y="1845" width="0.2" height="15.0" fill="rgb(214,59,25)" rx="2" ry="2" />
<text  x="859.22" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="336.2" y="1749" width="0.2" height="15.0" fill="rgb(236,190,43)" rx="2" ry="2" />
<text  x="339.20" y="1759.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="542.8" y="1973" width="0.2" height="15.0" fill="rgb(215,10,0)" rx="2" ry="2" />
<text  x="545.77" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="336.0" y="1685" width="0.2" height="15.0" fill="rgb(209,112,48)" rx="2" ry="2" />
<text  x="339.01" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="975.3" y="1957" width="0.2" height="15.0" fill="rgb(254,79,33)" rx="2" ry="2" />
<text  x="978.26" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="577.3" y="1749" width="0.2" height="15.0" fill="rgb(208,100,17)" rx="2" ry="2" />
<text  x="580.27" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="224.1" y="1653" width="0.2" height="15.0" fill="rgb(214,198,25)" rx="2" ry="2" />
<text  x="227.15" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="157.0" y="1733" width="0.2" height="15.0" fill="rgb(218,187,27)" rx="2" ry="2" />
<text  x="159.95" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="160.3" y="1925" width="0.2" height="15.0" fill="rgb(229,209,5)" rx="2" ry="2" />
<text  x="163.34" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="67.2" y="1829" width="0.2" height="15.0" fill="rgb(238,224,17)" rx="2" ry="2" />
<text  x="70.23" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1116.2" y="1813" width="0.2" height="15.0" fill="rgb(250,163,50)" rx="2" ry="2" />
<text  x="1119.23" y="1823.5" ></text>
</g>
<g >
<title>wakeup_source_unregister (1 samples, 0.02%)</title><rect x="481.6" y="1973" width="0.2" height="15.0" fill="rgb(243,132,44)" rx="2" ry="2" />
<text  x="484.56" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="537.0" y="1973" width="2.0" height="15.0" fill="rgb(222,111,16)" rx="2" ry="2" />
<text  x="539.99" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (588 samples, 9.94%)</title><rect x="718.8" y="1877" width="117.3" height="15.0" fill="rgb(244,174,38)" rx="2" ry="2" />
<text  x="721.84" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="880.3" y="1877" width="0.4" height="15.0" fill="rgb(236,52,26)" rx="2" ry="2" />
<text  x="883.34" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="887.1" y="1781" width="0.2" height="15.0" fill="rgb(217,36,4)" rx="2" ry="2" />
<text  x="890.12" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="563.3" y="1909" width="0.6" height="15.0" fill="rgb(251,167,10)" rx="2" ry="2" />
<text  x="566.31" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="58.9" y="1877" width="0.2" height="15.0" fill="rgb(226,175,24)" rx="2" ry="2" />
<text  x="61.85" y="1887.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="599.8" y="1493" width="0.2" height="15.0" fill="rgb(211,156,21)" rx="2" ry="2" />
<text  x="602.80" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="611.4" y="1765" width="0.2" height="15.0" fill="rgb(227,185,14)" rx="2" ry="2" />
<text  x="614.37" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="92.7" y="1909" width="0.2" height="15.0" fill="rgb(242,74,33)" rx="2" ry="2" />
<text  x="95.75" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1140.9" y="2053" width="0.2" height="15.0" fill="rgb(246,149,54)" rx="2" ry="2" />
<text  x="1143.95" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="404.6" y="1621" width="0.2" height="15.0" fill="rgb(206,126,22)" rx="2" ry="2" />
<text  x="407.60" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="914.6" y="2005" width="1.8" height="15.0" fill="rgb(216,165,53)" rx="2" ry="2" />
<text  x="917.64" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (6 samples, 0.10%)</title><rect x="87.2" y="1941" width="1.2" height="15.0" fill="rgb(254,220,15)" rx="2" ry="2" />
<text  x="90.16" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="479.0" y="1893" width="0.2" height="15.0" fill="rgb(229,214,37)" rx="2" ry="2" />
<text  x="481.97" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="542.0" y="1749" width="0.2" height="15.0" fill="rgb(208,194,13)" rx="2" ry="2" />
<text  x="544.98" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="577.3" y="1845" width="0.2" height="15.0" fill="rgb(242,168,35)" rx="2" ry="2" />
<text  x="580.27" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="542.0" y="1477" width="0.2" height="15.0" fill="rgb(233,132,29)" rx="2" ry="2" />
<text  x="544.98" y="1487.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1127.6" y="2053" width="1.0" height="15.0" fill="rgb(233,32,13)" rx="2" ry="2" />
<text  x="1130.59" y="2063.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="744.0" y="1653" width="0.6" height="15.0" fill="rgb(230,149,20)" rx="2" ry="2" />
<text  x="746.96" y="1663.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="114.9" y="69" width="0.2" height="15.0" fill="rgb(229,131,42)" rx="2" ry="2" />
<text  x="117.88" y="79.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (8 samples, 0.14%)</title><rect x="211.6" y="1941" width="1.6" height="15.0" fill="rgb(235,149,52)" rx="2" ry="2" />
<text  x="214.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="887.1" y="1749" width="0.2" height="15.0" fill="rgb(212,11,43)" rx="2" ry="2" />
<text  x="890.12" y="1759.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="377.7" y="1701" width="0.2" height="15.0" fill="rgb(220,71,37)" rx="2" ry="2" />
<text  x="380.68" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1003.0" y="1989" width="0.2" height="15.0" fill="rgb(248,218,36)" rx="2" ry="2" />
<text  x="1005.97" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (2 samples, 0.03%)</title><rect x="1143.9" y="1973" width="0.4" height="15.0" fill="rgb(227,223,1)" rx="2" ry="2" />
<text  x="1146.94" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="57.5" y="1813" width="0.2" height="15.0" fill="rgb(252,42,39)" rx="2" ry="2" />
<text  x="60.46" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="972.7" y="1989" width="0.2" height="15.0" fill="rgb(244,49,18)" rx="2" ry="2" />
<text  x="975.66" y="1999.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="17.4" y="2053" width="1.2" height="15.0" fill="rgb(213,124,43)" rx="2" ry="2" />
<text  x="20.38" y="2063.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (1 samples, 0.02%)</title><rect x="568.5" y="2005" width="0.2" height="15.0" fill="rgb(233,106,26)" rx="2" ry="2" />
<text  x="571.50" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="291.1" y="1381" width="0.2" height="15.0" fill="rgb(221,151,4)" rx="2" ry="2" />
<text  x="294.14" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="599.8" y="1765" width="0.4" height="15.0" fill="rgb(240,216,25)" rx="2" ry="2" />
<text  x="602.80" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="157.9" y="1765" width="0.2" height="15.0" fill="rgb(226,219,23)" rx="2" ry="2" />
<text  x="160.95" y="1775.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="192.6" y="2037" width="0.2" height="15.0" fill="rgb(217,147,54)" rx="2" ry="2" />
<text  x="195.64" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (5 samples, 0.08%)</title><rect x="620.1" y="2021" width="1.0" height="15.0" fill="rgb(238,41,22)" rx="2" ry="2" />
<text  x="623.14" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="856.2" y="1749" width="0.2" height="15.0" fill="rgb(238,86,27)" rx="2" ry="2" />
<text  x="859.22" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1178.0" y="1877" width="0.2" height="15.0" fill="rgb(205,157,26)" rx="2" ry="2" />
<text  x="1181.04" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (66 samples, 1.12%)</title><rect x="604.6" y="2005" width="13.1" height="15.0" fill="rgb(226,164,2)" rx="2" ry="2" />
<text  x="607.59" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (8 samples, 0.14%)</title><rect x="54.9" y="1957" width="1.6" height="15.0" fill="rgb(230,89,15)" rx="2" ry="2" />
<text  x="57.86" y="1967.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="75.0" y="1861" width="0.4" height="15.0" fill="rgb(250,43,42)" rx="2" ry="2" />
<text  x="78.00" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="157.9" y="1877" width="0.2" height="15.0" fill="rgb(233,216,41)" rx="2" ry="2" />
<text  x="160.95" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="563.1" y="1909" width="0.2" height="15.0" fill="rgb(219,131,33)" rx="2" ry="2" />
<text  x="566.11" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="863.2" y="1781" width="0.2" height="15.0" fill="rgb(252,222,12)" rx="2" ry="2" />
<text  x="866.20" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="118.9" y="101" width="0.2" height="15.0" fill="rgb(239,227,6)" rx="2" ry="2" />
<text  x="121.87" y="111.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="545.2" y="1845" width="0.2" height="15.0" fill="rgb(228,200,13)" rx="2" ry="2" />
<text  x="548.17" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="856.2" y="1717" width="0.2" height="15.0" fill="rgb(217,210,3)" rx="2" ry="2" />
<text  x="859.22" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (5 samples, 0.08%)</title><rect x="1141.1" y="2053" width="1.0" height="15.0" fill="rgb(248,22,15)" rx="2" ry="2" />
<text  x="1144.15" y="2063.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="561.3" y="1877" width="0.8" height="15.0" fill="rgb(221,72,33)" rx="2" ry="2" />
<text  x="564.32" y="1887.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (3 samples, 0.05%)</title><rect x="103.1" y="2037" width="0.6" height="15.0" fill="rgb(217,217,45)" rx="2" ry="2" />
<text  x="106.12" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="644.9" y="1765" width="0.2" height="15.0" fill="rgb(241,158,16)" rx="2" ry="2" />
<text  x="647.86" y="1775.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="896.3" y="1957" width="0.2" height="15.0" fill="rgb(219,87,21)" rx="2" ry="2" />
<text  x="899.30" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="954.5" y="1973" width="0.4" height="15.0" fill="rgb(219,132,36)" rx="2" ry="2" />
<text  x="957.52" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="412.0" y="1781" width="0.2" height="15.0" fill="rgb(230,217,25)" rx="2" ry="2" />
<text  x="414.97" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="757" width="14.0" height="15.0" fill="rgb(252,228,31)" rx="2" ry="2" />
<text  x="108.11" y="767.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (7 samples, 0.12%)</title><rect x="850.4" y="1909" width="1.4" height="15.0" fill="rgb(233,201,38)" rx="2" ry="2" />
<text  x="853.44" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="634.7" y="1989" width="0.2" height="15.0" fill="rgb(231,40,29)" rx="2" ry="2" />
<text  x="637.69" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (34 samples, 0.57%)</title><rect x="10.6" y="1957" width="6.8" height="15.0" fill="rgb(211,111,36)" rx="2" ry="2" />
<text  x="13.60" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="161.1" y="1797" width="0.2" height="15.0" fill="rgb(221,11,40)" rx="2" ry="2" />
<text  x="164.14" y="1807.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (3 samples, 0.05%)</title><rect x="967.7" y="2021" width="0.6" height="15.0" fill="rgb(247,3,48)" rx="2" ry="2" />
<text  x="970.68" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="956.1" y="1973" width="0.2" height="15.0" fill="rgb(232,194,29)" rx="2" ry="2" />
<text  x="959.11" y="1983.5" ></text>
</g>
<g >
<title>sock_close (409 samples, 6.91%)</title><rect x="749.5" y="1797" width="81.6" height="15.0" fill="rgb(249,177,27)" rx="2" ry="2" />
<text  x="752.54" y="1807.5" >sock_close</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="914.2" y="2037" width="0.4" height="15.0" fill="rgb(250,187,44)" rx="2" ry="2" />
<text  x="917.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="290.7" y="1493" width="0.2" height="15.0" fill="rgb(210,122,48)" rx="2" ry="2" />
<text  x="293.74" y="1503.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="361.9" y="1941" width="0.2" height="15.0" fill="rgb(253,172,2)" rx="2" ry="2" />
<text  x="364.93" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (2 samples, 0.03%)</title><rect x="1142.1" y="2053" width="0.4" height="15.0" fill="rgb(231,63,3)" rx="2" ry="2" />
<text  x="1145.15" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (21 samples, 0.35%)</title><rect x="543.2" y="1957" width="4.2" height="15.0" fill="rgb(241,174,5)" rx="2" ry="2" />
<text  x="546.17" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="892.1" y="1733" width="0.2" height="15.0" fill="rgb(234,131,39)" rx="2" ry="2" />
<text  x="895.11" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="386.7" y="1653" width="0.2" height="15.0" fill="rgb(242,221,17)" rx="2" ry="2" />
<text  x="389.65" y="1663.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="880.5" y="1813" width="0.2" height="15.0" fill="rgb(232,110,45)" rx="2" ry="2" />
<text  x="883.54" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="515.5" y="1941" width="0.4" height="15.0" fill="rgb(237,154,50)" rx="2" ry="2" />
<text  x="518.46" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="661" width="14.0" height="15.0" fill="rgb(228,155,16)" rx="2" ry="2" />
<text  x="108.11" y="671.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="849.4" y="1893" width="0.2" height="15.0" fill="rgb(225,103,40)" rx="2" ry="2" />
<text  x="852.44" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="32.3" y="1957" width="0.2" height="15.0" fill="rgb(250,103,43)" rx="2" ry="2" />
<text  x="35.33" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="78.4" y="1861" width="0.2" height="15.0" fill="rgb(249,96,38)" rx="2" ry="2" />
<text  x="81.39" y="1871.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="839.9" y="1909" width="0.4" height="15.0" fill="rgb(209,100,34)" rx="2" ry="2" />
<text  x="842.87" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="885.7" y="1685" width="0.2" height="15.0" fill="rgb(236,96,43)" rx="2" ry="2" />
<text  x="888.73" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="228.7" y="1861" width="0.2" height="15.0" fill="rgb(235,145,24)" rx="2" ry="2" />
<text  x="231.73" y="1871.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="522.6" y="1973" width="1.0" height="15.0" fill="rgb(210,203,51)" rx="2" ry="2" />
<text  x="525.64" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="851.6" y="1813" width="0.2" height="15.0" fill="rgb(247,83,20)" rx="2" ry="2" />
<text  x="854.63" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="611.2" y="1845" width="0.4" height="15.0" fill="rgb(206,205,17)" rx="2" ry="2" />
<text  x="614.17" y="1855.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="224.1" y="1397" width="0.2" height="15.0" fill="rgb(241,166,53)" rx="2" ry="2" />
<text  x="227.15" y="1407.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="817.3" y="1589" width="0.2" height="15.0" fill="rgb(209,48,20)" rx="2" ry="2" />
<text  x="820.34" y="1599.5" ></text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.02%)</title><rect x="411.4" y="1973" width="0.2" height="15.0" fill="rgb(206,209,40)" rx="2" ry="2" />
<text  x="414.38" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (25 samples, 0.42%)</title><rect x="303.3" y="1669" width="5.0" height="15.0" fill="rgb(242,49,35)" rx="2" ry="2" />
<text  x="306.31" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="386.7" y="1733" width="0.2" height="15.0" fill="rgb(242,105,2)" rx="2" ry="2" />
<text  x="389.65" y="1743.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1145.3" y="1861" width="0.2" height="15.0" fill="rgb(207,29,17)" rx="2" ry="2" />
<text  x="1148.34" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="901.5" y="1941" width="0.2" height="15.0" fill="rgb(238,141,20)" rx="2" ry="2" />
<text  x="904.48" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="40.1" y="1909" width="0.2" height="15.0" fill="rgb(210,90,32)" rx="2" ry="2" />
<text  x="43.11" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4,655 samples, 78.66%)</title><rect x="98.1" y="2053" width="928.2" height="15.0" fill="rgb(245,76,45)" rx="2" ry="2" />
<text  x="101.13" y="2063.5" >[unknown]</text>
</g>
<g >
<title>folly::fibers::Fiber::resume (10 samples, 0.17%)</title><rect x="1138.4" y="2005" width="2.0" height="15.0" fill="rgb(238,5,41)" rx="2" ry="2" />
<text  x="1141.36" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="179.5" y="1973" width="0.2" height="15.0" fill="rgb(250,166,32)" rx="2" ry="2" />
<text  x="182.48" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="644.9" y="1733" width="0.2" height="15.0" fill="rgb(241,121,44)" rx="2" ry="2" />
<text  x="647.86" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1049.8" y="1909" width="0.2" height="15.0" fill="rgb(233,35,0)" rx="2" ry="2" />
<text  x="1052.83" y="1919.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (2 samples, 0.03%)</title><rect x="10.0" y="2053" width="0.4" height="15.0" fill="rgb(237,134,5)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1121.4" y="1989" width="0.4" height="15.0" fill="rgb(232,11,12)" rx="2" ry="2" />
<text  x="1124.41" y="1999.5" ></text>
</g>
<g >
<title>sock_rfree (7 samples, 0.12%)</title><rect x="1079.7" y="1893" width="1.4" height="15.0" fill="rgb(232,142,30)" rx="2" ry="2" />
<text  x="1082.74" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="704.5" y="1877" width="0.2" height="15.0" fill="rgb(229,174,13)" rx="2" ry="2" />
<text  x="707.48" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="755.3" y="1733" width="0.2" height="15.0" fill="rgb(228,160,0)" rx="2" ry="2" />
<text  x="758.33" y="1743.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="674.2" y="1829" width="0.8" height="15.0" fill="rgb(254,26,17)" rx="2" ry="2" />
<text  x="677.17" y="1839.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (3 samples, 0.05%)</title><rect x="1008.0" y="1989" width="0.6" height="15.0" fill="rgb(247,127,27)" rx="2" ry="2" />
<text  x="1010.96" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (56 samples, 0.95%)</title><rect x="606.2" y="1941" width="11.1" height="15.0" fill="rgb(223,16,41)" rx="2" ry="2" />
<text  x="609.18" y="1951.5" ></text>
</g>
<g >
<title>sys_gettid (6 samples, 0.10%)</title><rect x="1156.5" y="1925" width="1.2" height="15.0" fill="rgb(227,165,26)" rx="2" ry="2" />
<text  x="1159.50" y="1935.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="704.5" y="1621" width="0.2" height="15.0" fill="rgb(225,220,50)" rx="2" ry="2" />
<text  x="707.48" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="189.9" y="1861" width="0.2" height="15.0" fill="rgb(225,80,37)" rx="2" ry="2" />
<text  x="192.85" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (80 samples, 1.35%)</title><rect x="604.2" y="2021" width="15.9" height="15.0" fill="rgb(210,77,39)" rx="2" ry="2" />
<text  x="607.19" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="462.4" y="1733" width="0.2" height="15.0" fill="rgb(219,188,38)" rx="2" ry="2" />
<text  x="465.42" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="397.4" y="1669" width="0.2" height="15.0" fill="rgb(245,227,44)" rx="2" ry="2" />
<text  x="400.42" y="1679.5" ></text>
</g>
<g >
<title>__alloc_skb (39 samples, 0.66%)</title><rect x="759.9" y="1717" width="7.8" height="15.0" fill="rgb(228,77,15)" rx="2" ry="2" />
<text  x="762.91" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="53.5" y="1925" width="0.2" height="15.0" fill="rgb(236,209,16)" rx="2" ry="2" />
<text  x="56.47" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="547.2" y="1813" width="0.2" height="15.0" fill="rgb(205,66,29)" rx="2" ry="2" />
<text  x="550.16" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1049.8" y="1877" width="0.2" height="15.0" fill="rgb(232,38,10)" rx="2" ry="2" />
<text  x="1052.83" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="76.4" y="1829" width="0.2" height="15.0" fill="rgb(207,6,45)" rx="2" ry="2" />
<text  x="79.40" y="1839.5" ></text>
</g>
<g >
<title>event_assign (6 samples, 0.10%)</title><rect x="960.9" y="2005" width="1.2" height="15.0" fill="rgb(232,90,21)" rx="2" ry="2" />
<text  x="963.90" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="124.7" y="1557" width="0.1" height="15.0" fill="rgb(207,63,25)" rx="2" ry="2" />
<text  x="127.65" y="1567.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="336.2" y="1685" width="0.2" height="15.0" fill="rgb(233,38,49)" rx="2" ry="2" />
<text  x="339.20" y="1695.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="781.6" y="1589" width="0.2" height="15.0" fill="rgb(228,142,3)" rx="2" ry="2" />
<text  x="784.65" y="1599.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="17.8" y="1877" width="0.8" height="15.0" fill="rgb(206,78,43)" rx="2" ry="2" />
<text  x="20.78" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="880.5" y="1861" width="0.2" height="15.0" fill="rgb(210,186,5)" rx="2" ry="2" />
<text  x="883.54" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="453.8" y="1509" width="0.2" height="15.0" fill="rgb(209,6,54)" rx="2" ry="2" />
<text  x="456.85" y="1519.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="524.4" y="1973" width="0.2" height="15.0" fill="rgb(241,199,12)" rx="2" ry="2" />
<text  x="527.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="665.2" y="1637" width="0.2" height="15.0" fill="rgb(234,208,31)" rx="2" ry="2" />
<text  x="668.20" y="1647.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="246.9" y="1685" width="0.2" height="15.0" fill="rgb(231,125,49)" rx="2" ry="2" />
<text  x="249.88" y="1695.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 0.02%)</title><rect x="697.7" y="1925" width="0.2" height="15.0" fill="rgb(246,2,16)" rx="2" ry="2" />
<text  x="700.70" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="135.8" y="1941" width="0.2" height="15.0" fill="rgb(230,132,1)" rx="2" ry="2" />
<text  x="138.82" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="997.8" y="1989" width="0.2" height="15.0" fill="rgb(217,38,5)" rx="2" ry="2" />
<text  x="1000.79" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="745.6" y="1765" width="0.2" height="15.0" fill="rgb(239,219,14)" rx="2" ry="2" />
<text  x="748.56" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="76.4" y="1861" width="0.2" height="15.0" fill="rgb(224,174,45)" rx="2" ry="2" />
<text  x="79.40" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="999.6" y="1973" width="0.2" height="15.0" fill="rgb(211,226,17)" rx="2" ry="2" />
<text  x="1002.58" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="38.5" y="1957" width="0.2" height="15.0" fill="rgb(214,220,40)" rx="2" ry="2" />
<text  x="41.51" y="1967.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="563.7" y="1701" width="0.2" height="15.0" fill="rgb(235,117,1)" rx="2" ry="2" />
<text  x="566.71" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="844.3" y="1925" width="0.4" height="15.0" fill="rgb(253,3,19)" rx="2" ry="2" />
<text  x="847.25" y="1935.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="67.2" y="1749" width="0.2" height="15.0" fill="rgb(206,37,49)" rx="2" ry="2" />
<text  x="70.23" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="924.4" y="1925" width="0.4" height="15.0" fill="rgb(214,214,44)" rx="2" ry="2" />
<text  x="927.41" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="45.9" y="1973" width="0.4" height="15.0" fill="rgb(232,5,33)" rx="2" ry="2" />
<text  x="48.89" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (3 samples, 0.05%)</title><rect x="1079.1" y="1877" width="0.6" height="15.0" fill="rgb(216,98,51)" rx="2" ry="2" />
<text  x="1082.14" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (12 samples, 0.20%)</title><rect x="30.1" y="1989" width="2.4" height="15.0" fill="rgb(244,120,9)" rx="2" ry="2" />
<text  x="33.14" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="228.1" y="1925" width="1.0" height="15.0" fill="rgb(232,194,37)" rx="2" ry="2" />
<text  x="231.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="517" width="14.0" height="15.0" fill="rgb(236,125,17)" rx="2" ry="2" />
<text  x="108.11" y="527.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="397.4" y="1701" width="0.4" height="15.0" fill="rgb(231,70,53)" rx="2" ry="2" />
<text  x="400.42" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="372.1" y="1813" width="0.2" height="15.0" fill="rgb(225,83,53)" rx="2" ry="2" />
<text  x="375.10" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="102.7" y="1781" width="0.2" height="15.0" fill="rgb(252,204,19)" rx="2" ry="2" />
<text  x="105.72" y="1791.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1102.3" y="1525" width="0.2" height="15.0" fill="rgb(205,37,4)" rx="2" ry="2" />
<text  x="1105.27" y="1535.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="974.9" y="2021" width="0.2" height="15.0" fill="rgb(205,114,32)" rx="2" ry="2" />
<text  x="977.86" y="2031.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="339.2" y="1957" width="1.0" height="15.0" fill="rgb(245,68,40)" rx="2" ry="2" />
<text  x="342.20" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (104 samples, 1.76%)</title><rect x="487.7" y="2021" width="20.8" height="15.0" fill="rgb(206,97,48)" rx="2" ry="2" />
<text  x="490.74" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="67.2" y="1845" width="0.2" height="15.0" fill="rgb(227,145,31)" rx="2" ry="2" />
<text  x="70.23" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="972.7" y="1797" width="0.2" height="15.0" fill="rgb(217,22,28)" rx="2" ry="2" />
<text  x="975.66" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (2 samples, 0.03%)</title><rect x="1168.7" y="1957" width="0.4" height="15.0" fill="rgb(228,42,48)" rx="2" ry="2" />
<text  x="1171.67" y="1967.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="498.5" y="1765" width="0.2" height="15.0" fill="rgb(253,149,24)" rx="2" ry="2" />
<text  x="501.51" y="1775.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="319.7" y="1797" width="0.4" height="15.0" fill="rgb(208,161,37)" rx="2" ry="2" />
<text  x="322.66" y="1807.5" ></text>
</g>
<g >
<title>dput.part.26 (76 samples, 1.28%)</title><rect x="730.0" y="1781" width="15.2" height="15.0" fill="rgb(251,12,35)" rx="2" ry="2" />
<text  x="733.00" y="1791.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="118.7" y="37" width="0.2" height="15.0" fill="rgb(227,133,15)" rx="2" ry="2" />
<text  x="121.67" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="402.4" y="1781" width="0.2" height="15.0" fill="rgb(210,94,51)" rx="2" ry="2" />
<text  x="405.40" y="1791.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="914.0" y="1909" width="0.2" height="15.0" fill="rgb(212,117,26)" rx="2" ry="2" />
<text  x="917.04" y="1919.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="828.3" y="1653" width="0.2" height="15.0" fill="rgb(213,131,19)" rx="2" ry="2" />
<text  x="831.30" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.06%)</title><rect x="104.1" y="2005" width="24.3" height="15.0" fill="rgb(216,98,44)" rx="2" ry="2" />
<text  x="107.11" y="2015.5" >[..</text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="949" width="14.2" height="15.0" fill="rgb(227,30,41)" rx="2" ry="2" />
<text  x="108.11" y="959.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="408.0" y="1893" width="0.2" height="15.0" fill="rgb(248,198,21)" rx="2" ry="2" />
<text  x="410.99" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.7" y="1429" width="0.2" height="15.0" fill="rgb(246,75,37)" rx="2" ry="2" />
<text  x="123.66" y="1439.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (3 samples, 0.05%)</title><rect x="167.3" y="1989" width="0.6" height="15.0" fill="rgb(235,218,41)" rx="2" ry="2" />
<text  x="170.32" y="1999.5" ></text>
</g>
<g >
<title>futex_wait (34 samples, 0.57%)</title><rect x="10.6" y="1973" width="6.8" height="15.0" fill="rgb(223,90,37)" rx="2" ry="2" />
<text  x="13.60" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="247.1" y="1957" width="0.2" height="15.0" fill="rgb(241,215,25)" rx="2" ry="2" />
<text  x="250.08" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="725.6" y="1701" width="0.2" height="15.0" fill="rgb(211,142,11)" rx="2" ry="2" />
<text  x="728.62" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="377.7" y="1861" width="0.2" height="15.0" fill="rgb(250,127,20)" rx="2" ry="2" />
<text  x="380.68" y="1871.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="1126.8" y="1669" width="0.2" height="15.0" fill="rgb(211,77,6)" rx="2" ry="2" />
<text  x="1129.79" y="1679.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="292.5" y="1429" width="0.6" height="15.0" fill="rgb(245,226,3)" rx="2" ry="2" />
<text  x="295.54" y="1439.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="372.1" y="1621" width="0.2" height="15.0" fill="rgb(247,34,33)" rx="2" ry="2" />
<text  x="375.10" y="1631.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.17%)</title><rect x="18.8" y="1973" width="2.0" height="15.0" fill="rgb(216,215,23)" rx="2" ry="2" />
<text  x="21.77" y="1983.5" ></text>
</g>
<g >
<title>process_backlog (48 samples, 0.81%)</title><rect x="1101.7" y="1701" width="9.5" height="15.0" fill="rgb(230,227,39)" rx="2" ry="2" />
<text  x="1104.67" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1012.7" y="1893" width="0.2" height="15.0" fill="rgb(227,121,28)" rx="2" ry="2" />
<text  x="1015.74" y="1903.5" ></text>
</g>
<g >
<title>event_add_nolock_ (2 samples, 0.03%)</title><rect x="121.5" y="1589" width="0.4" height="15.0" fill="rgb(214,40,14)" rx="2" ry="2" />
<text  x="124.46" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1157.7" y="1957" width="0.8" height="15.0" fill="rgb(212,199,17)" rx="2" ry="2" />
<text  x="1160.70" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="602.8" y="1877" width="0.2" height="15.0" fill="rgb(220,52,36)" rx="2" ry="2" />
<text  x="605.79" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="75.6" y="1909" width="0.6" height="15.0" fill="rgb(247,50,21)" rx="2" ry="2" />
<text  x="78.60" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="638.1" y="1941" width="0.2" height="15.0" fill="rgb(254,139,26)" rx="2" ry="2" />
<text  x="641.08" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1180.8" y="2021" width="0.2" height="15.0" fill="rgb(208,1,15)" rx="2" ry="2" />
<text  x="1183.83" y="2031.5" ></text>
</g>
<g >
<title>__close (14 samples, 0.24%)</title><rect x="957.5" y="1973" width="2.8" height="15.0" fill="rgb(217,215,13)" rx="2" ry="2" />
<text  x="960.51" y="1983.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="233.5" y="2037" width="0.2" height="15.0" fill="rgb(233,30,52)" rx="2" ry="2" />
<text  x="236.52" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.6" y="1877" width="0.2" height="15.0" fill="rgb(210,224,1)" rx="2" ry="2" />
<text  x="146.59" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="164.7" y="2021" width="0.4" height="15.0" fill="rgb(213,43,15)" rx="2" ry="2" />
<text  x="167.73" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.07%)</title><rect x="988.6" y="1877" width="0.8" height="15.0" fill="rgb(234,63,51)" rx="2" ry="2" />
<text  x="991.61" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="97.9" y="1909" width="0.2" height="15.0" fill="rgb(206,30,53)" rx="2" ry="2" />
<text  x="100.93" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1013" width="14.4" height="15.0" fill="rgb(230,4,20)" rx="2" ry="2" />
<text  x="108.11" y="1023.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="40.1" y="1973" width="0.2" height="15.0" fill="rgb(231,48,41)" rx="2" ry="2" />
<text  x="43.11" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="521.0" y="1957" width="0.2" height="15.0" fill="rgb(215,47,44)" rx="2" ry="2" />
<text  x="524.04" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (6 samples, 0.10%)</title><rect x="394.0" y="1877" width="1.2" height="15.0" fill="rgb(251,15,14)" rx="2" ry="2" />
<text  x="397.03" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="377.7" y="1717" width="0.2" height="15.0" fill="rgb(215,138,43)" rx="2" ry="2" />
<text  x="380.68" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="157.9" y="1797" width="0.2" height="15.0" fill="rgb(239,158,43)" rx="2" ry="2" />
<text  x="160.95" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="545.8" y="1845" width="0.4" height="15.0" fill="rgb(247,110,48)" rx="2" ry="2" />
<text  x="548.77" y="1855.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="745.6" y="1701" width="0.2" height="15.0" fill="rgb(221,74,9)" rx="2" ry="2" />
<text  x="748.56" y="1711.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="746.4" y="1509" width="0.2" height="15.0" fill="rgb(234,202,21)" rx="2" ry="2" />
<text  x="749.35" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1157.5" y="1861" width="0.2" height="15.0" fill="rgb(239,20,35)" rx="2" ry="2" />
<text  x="1160.50" y="1871.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (30 samples, 0.51%)</title><rect x="193.0" y="2037" width="6.0" height="15.0" fill="rgb(254,179,29)" rx="2" ry="2" />
<text  x="196.04" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="70.0" y="1973" width="0.2" height="15.0" fill="rgb(253,56,24)" rx="2" ry="2" />
<text  x="73.02" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1121.0" y="2037" width="0.8" height="15.0" fill="rgb(208,179,32)" rx="2" ry="2" />
<text  x="1124.01" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1121.2" y="1957" width="0.2" height="15.0" fill="rgb(239,86,6)" rx="2" ry="2" />
<text  x="1124.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="579.9" y="1957" width="0.4" height="15.0" fill="rgb(233,88,14)" rx="2" ry="2" />
<text  x="582.86" y="1967.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="410.2" y="1909" width="0.6" height="15.0" fill="rgb(218,209,5)" rx="2" ry="2" />
<text  x="413.18" y="1919.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (15 samples, 0.25%)</title><rect x="271.6" y="1845" width="3.0" height="15.0" fill="rgb(213,68,23)" rx="2" ry="2" />
<text  x="274.60" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="973.3" y="2021" width="0.4" height="15.0" fill="rgb(239,212,10)" rx="2" ry="2" />
<text  x="976.26" y="2031.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="993.6" y="1989" width="0.2" height="15.0" fill="rgb(225,150,43)" rx="2" ry="2" />
<text  x="996.60" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="104.7" y="1477" width="16.0" height="15.0" fill="rgb(212,204,20)" rx="2" ry="2" />
<text  x="107.71" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="782.2" y="1365" width="0.2" height="15.0" fill="rgb(207,226,49)" rx="2" ry="2" />
<text  x="785.24" y="1375.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="377.5" y="1781" width="0.2" height="15.0" fill="rgb(206,176,50)" rx="2" ry="2" />
<text  x="380.48" y="1791.5" ></text>
</g>
<g >
<title>ip_local_out (126 samples, 2.13%)</title><rect x="285.4" y="1797" width="25.1" height="15.0" fill="rgb(210,59,1)" rx="2" ry="2" />
<text  x="288.36" y="1807.5" >i..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="37.1" y="1973" width="0.2" height="15.0" fill="rgb(226,179,30)" rx="2" ry="2" />
<text  x="40.12" y="1983.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (1 samples, 0.02%)</title><rect x="536.8" y="2005" width="0.2" height="15.0" fill="rgb(218,197,17)" rx="2" ry="2" />
<text  x="539.79" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="124.7" y="1653" width="0.1" height="15.0" fill="rgb(251,129,18)" rx="2" ry="2" />
<text  x="127.65" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="97.9" y="1829" width="0.2" height="15.0" fill="rgb(245,140,0)" rx="2" ry="2" />
<text  x="100.93" y="1839.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="221.2" y="1893" width="0.2" height="15.0" fill="rgb(254,67,22)" rx="2" ry="2" />
<text  x="224.16" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="611.4" y="1589" width="0.2" height="15.0" fill="rgb(218,55,28)" rx="2" ry="2" />
<text  x="614.37" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="1157.9" y="1749" width="0.6" height="15.0" fill="rgb(238,192,6)" rx="2" ry="2" />
<text  x="1160.90" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="56.3" y="1861" width="0.2" height="15.0" fill="rgb(226,182,52)" rx="2" ry="2" />
<text  x="59.26" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="17.6" y="1925" width="0.2" height="15.0" fill="rgb(231,30,45)" rx="2" ry="2" />
<text  x="20.58" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="10.2" y="1861" width="0.2" height="15.0" fill="rgb(232,172,49)" rx="2" ry="2" />
<text  x="13.20" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="40.1" y="1845" width="0.2" height="15.0" fill="rgb(239,1,47)" rx="2" ry="2" />
<text  x="43.11" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.1" y="1861" width="0.2" height="15.0" fill="rgb(246,117,10)" rx="2" ry="2" />
<text  x="890.12" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="913.2" y="2037" width="0.4" height="15.0" fill="rgb(248,3,45)" rx="2" ry="2" />
<text  x="916.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="290.9" y="1493" width="0.6" height="15.0" fill="rgb(232,37,2)" rx="2" ry="2" />
<text  x="293.94" y="1503.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1116.2" y="1861" width="0.2" height="15.0" fill="rgb(212,9,14)" rx="2" ry="2" />
<text  x="1119.23" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="391.0" y="1909" width="0.2" height="15.0" fill="rgb(228,171,28)" rx="2" ry="2" />
<text  x="394.04" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="599.2" y="1877" width="0.4" height="15.0" fill="rgb(218,76,48)" rx="2" ry="2" />
<text  x="602.20" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="33.9" y="1957" width="0.4" height="15.0" fill="rgb(232,43,7)" rx="2" ry="2" />
<text  x="36.93" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (52 samples, 0.88%)</title><rect x="1101.5" y="1813" width="10.3" height="15.0" fill="rgb(227,189,31)" rx="2" ry="2" />
<text  x="1104.47" y="1823.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (84 samples, 1.42%)</title><rect x="586.2" y="1957" width="16.8" height="15.0" fill="rgb(205,107,6)" rx="2" ry="2" />
<text  x="589.24" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (6 samples, 0.10%)</title><rect x="291.9" y="1589" width="1.2" height="15.0" fill="rgb(211,203,32)" rx="2" ry="2" />
<text  x="294.94" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="831.9" y="1829" width="0.4" height="15.0" fill="rgb(223,9,34)" rx="2" ry="2" />
<text  x="834.89" y="1839.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="701.1" y="1989" width="0.2" height="15.0" fill="rgb(205,121,2)" rx="2" ry="2" />
<text  x="704.09" y="1999.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1050.2" y="1973" width="0.2" height="15.0" fill="rgb(232,132,9)" rx="2" ry="2" />
<text  x="1053.23" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="817.5" y="1589" width="0.2" height="15.0" fill="rgb(247,175,24)" rx="2" ry="2" />
<text  x="820.54" y="1599.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="434.7" y="1909" width="0.8" height="15.0" fill="rgb(225,18,42)" rx="2" ry="2" />
<text  x="437.70" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="291.1" y="1461" width="0.2" height="15.0" fill="rgb(241,58,48)" rx="2" ry="2" />
<text  x="294.14" y="1471.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (11 samples, 0.19%)</title><rect x="224.3" y="1877" width="2.2" height="15.0" fill="rgb(215,175,17)" rx="2" ry="2" />
<text  x="227.35" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="968.3" y="2005" width="0.2" height="15.0" fill="rgb(233,31,27)" rx="2" ry="2" />
<text  x="971.28" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (1 samples, 0.02%)</title><rect x="73.8" y="1941" width="0.2" height="15.0" fill="rgb(213,199,24)" rx="2" ry="2" />
<text  x="76.81" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="17.6" y="1957" width="0.2" height="15.0" fill="rgb(211,221,17)" rx="2" ry="2" />
<text  x="20.58" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="631.1" y="2005" width="0.2" height="15.0" fill="rgb(215,154,27)" rx="2" ry="2" />
<text  x="634.11" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="927.4" y="1925" width="0.2" height="15.0" fill="rgb(244,17,3)" rx="2" ry="2" />
<text  x="930.40" y="1935.5" ></text>
</g>
<g >
<title>kfree_call_rcu (8 samples, 0.14%)</title><rect x="738.4" y="1669" width="1.6" height="15.0" fill="rgb(213,29,52)" rx="2" ry="2" />
<text  x="741.38" y="1679.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="532.6" y="1845" width="0.2" height="15.0" fill="rgb(209,61,6)" rx="2" ry="2" />
<text  x="535.61" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="725.6" y="1653" width="0.2" height="15.0" fill="rgb(231,115,5)" rx="2" ry="2" />
<text  x="728.62" y="1663.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1137.2" y="1973" width="0.2" height="15.0" fill="rgb(249,91,12)" rx="2" ry="2" />
<text  x="1140.16" y="1983.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="94.1" y="1989" width="0.2" height="15.0" fill="rgb(239,192,14)" rx="2" ry="2" />
<text  x="97.14" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="611.4" y="1781" width="0.2" height="15.0" fill="rgb(240,86,8)" rx="2" ry="2" />
<text  x="614.37" y="1791.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="137.4" y="1957" width="0.2" height="15.0" fill="rgb(205,163,21)" rx="2" ry="2" />
<text  x="140.41" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="407.8" y="1893" width="0.2" height="15.0" fill="rgb(245,36,7)" rx="2" ry="2" />
<text  x="410.79" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="405.0" y="1877" width="0.2" height="15.0" fill="rgb(224,46,46)" rx="2" ry="2" />
<text  x="407.99" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="97.9" y="2037" width="0.2" height="15.0" fill="rgb(213,81,0)" rx="2" ry="2" />
<text  x="100.93" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 1.15%)</title><rect x="105.1" y="165" width="13.6" height="15.0" fill="rgb(246,200,25)" rx="2" ry="2" />
<text  x="108.11" y="175.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="124.7" y="1765" width="0.1" height="15.0" fill="rgb(240,48,16)" rx="2" ry="2" />
<text  x="127.65" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="336.0" y="1669" width="0.2" height="15.0" fill="rgb(225,223,24)" rx="2" ry="2" />
<text  x="339.01" y="1679.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1130.0" y="1989" width="0.2" height="15.0" fill="rgb(216,138,17)" rx="2" ry="2" />
<text  x="1132.98" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="17.6" y="2021" width="1.0" height="15.0" fill="rgb(247,189,2)" rx="2" ry="2" />
<text  x="20.58" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="268.2" y="1877" width="0.4" height="15.0" fill="rgb(249,216,23)" rx="2" ry="2" />
<text  x="271.21" y="1887.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="32.1" y="1653" width="0.2" height="15.0" fill="rgb(249,40,47)" rx="2" ry="2" />
<text  x="35.13" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="333.0" y="1797" width="0.2" height="15.0" fill="rgb(249,217,51)" rx="2" ry="2" />
<text  x="336.01" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1019.3" y="1701" width="0.2" height="15.0" fill="rgb(209,125,21)" rx="2" ry="2" />
<text  x="1022.32" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="808.0" y="1669" width="0.4" height="15.0" fill="rgb(238,101,5)" rx="2" ry="2" />
<text  x="810.97" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="832.3" y="1717" width="0.2" height="15.0" fill="rgb(209,10,13)" rx="2" ry="2" />
<text  x="835.29" y="1727.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="542.0" y="1653" width="0.2" height="15.0" fill="rgb(222,82,37)" rx="2" ry="2" />
<text  x="544.98" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="324.4" y="1701" width="0.4" height="15.0" fill="rgb(254,130,10)" rx="2" ry="2" />
<text  x="327.44" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="851.2" y="1861" width="0.6" height="15.0" fill="rgb(241,71,16)" rx="2" ry="2" />
<text  x="854.23" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1003.6" y="2005" width="0.2" height="15.0" fill="rgb(205,207,19)" rx="2" ry="2" />
<text  x="1006.57" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="547.2" y="1685" width="0.2" height="15.0" fill="rgb(239,140,2)" rx="2" ry="2" />
<text  x="550.16" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="161.1" y="1909" width="0.2" height="15.0" fill="rgb(240,220,47)" rx="2" ry="2" />
<text  x="164.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="104.7" y="1637" width="17.6" height="15.0" fill="rgb(215,18,11)" rx="2" ry="2" />
<text  x="107.71" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="412.0" y="1861" width="0.4" height="15.0" fill="rgb(210,226,52)" rx="2" ry="2" />
<text  x="414.97" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="885.7" y="1909" width="0.2" height="15.0" fill="rgb(225,216,32)" rx="2" ry="2" />
<text  x="888.73" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="817.5" y="1669" width="0.2" height="15.0" fill="rgb(226,42,35)" rx="2" ry="2" />
<text  x="820.54" y="1679.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (104 samples, 1.76%)</title><rect x="680.6" y="2005" width="20.7" height="15.0" fill="rgb(240,102,31)" rx="2" ry="2" />
<text  x="683.55" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="231.3" y="1637" width="0.2" height="15.0" fill="rgb(237,66,29)" rx="2" ry="2" />
<text  x="234.32" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="563.3" y="1813" width="0.6" height="15.0" fill="rgb(219,206,28)" rx="2" ry="2" />
<text  x="566.31" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (11 samples, 0.19%)</title><rect x="382.3" y="1925" width="2.2" height="15.0" fill="rgb(209,72,0)" rx="2" ry="2" />
<text  x="385.26" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.57%)</title><rect x="10.6" y="2021" width="6.8" height="15.0" fill="rgb(229,161,27)" rx="2" ry="2" />
<text  x="13.60" y="2031.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="409.4" y="1941" width="0.2" height="15.0" fill="rgb(208,135,21)" rx="2" ry="2" />
<text  x="412.38" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="113.7" y="37" width="0.6" height="15.0" fill="rgb(240,163,31)" rx="2" ry="2" />
<text  x="116.68" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="173.3" y="1973" width="0.6" height="15.0" fill="rgb(243,121,32)" rx="2" ry="2" />
<text  x="176.30" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="57.5" y="1893" width="0.2" height="15.0" fill="rgb(246,35,26)" rx="2" ry="2" />
<text  x="60.46" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="115.7" y="37" width="0.2" height="15.0" fill="rgb(233,226,27)" rx="2" ry="2" />
<text  x="118.68" y="47.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="190.1" y="2021" width="0.2" height="15.0" fill="rgb(219,133,40)" rx="2" ry="2" />
<text  x="193.05" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="534.2" y="1989" width="0.2" height="15.0" fill="rgb(238,222,40)" rx="2" ry="2" />
<text  x="537.20" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="1158.3" y="1477" width="0.2" height="15.0" fill="rgb(232,81,22)" rx="2" ry="2" />
<text  x="1161.30" y="1487.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="756.1" y="1685" width="0.2" height="15.0" fill="rgb(233,17,10)" rx="2" ry="2" />
<text  x="759.12" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="66.0" y="1893" width="1.2" height="15.0" fill="rgb(229,36,17)" rx="2" ry="2" />
<text  x="69.03" y="1903.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="157.0" y="1477" width="0.2" height="15.0" fill="rgb(242,213,41)" rx="2" ry="2" />
<text  x="159.95" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="999.0" y="1973" width="0.4" height="15.0" fill="rgb(236,220,46)" rx="2" ry="2" />
<text  x="1001.98" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (41 samples, 0.69%)</title><rect x="791.4" y="1541" width="8.2" height="15.0" fill="rgb(205,58,6)" rx="2" ry="2" />
<text  x="794.42" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="665.2" y="1701" width="0.2" height="15.0" fill="rgb(228,159,15)" rx="2" ry="2" />
<text  x="668.20" y="1711.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="434.7" y="1973" width="0.8" height="15.0" fill="rgb(251,32,13)" rx="2" ry="2" />
<text  x="437.70" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="251.9" y="1893" width="0.2" height="15.0" fill="rgb(236,100,0)" rx="2" ry="2" />
<text  x="254.86" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (2 samples, 0.03%)</title><rect x="1023.5" y="2037" width="0.4" height="15.0" fill="rgb(252,164,19)" rx="2" ry="2" />
<text  x="1026.51" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1163.7" y="2053" width="0.2" height="15.0" fill="rgb(219,23,17)" rx="2" ry="2" />
<text  x="1166.68" y="2063.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="522.4" y="1957" width="0.2" height="15.0" fill="rgb(221,107,9)" rx="2" ry="2" />
<text  x="525.44" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="120.9" y="1493" width="0.2" height="15.0" fill="rgb(221,87,38)" rx="2" ry="2" />
<text  x="123.86" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="338.2" y="1941" width="0.8" height="15.0" fill="rgb(253,39,29)" rx="2" ry="2" />
<text  x="341.20" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="525.8" y="1941" width="0.4" height="15.0" fill="rgb(251,20,48)" rx="2" ry="2" />
<text  x="528.83" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (1 samples, 0.02%)</title><rect x="621.5" y="2005" width="0.2" height="15.0" fill="rgb(215,80,14)" rx="2" ry="2" />
<text  x="624.53" y="2015.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="339.2" y="1973" width="1.0" height="15.0" fill="rgb(233,210,9)" rx="2" ry="2" />
<text  x="342.20" y="1983.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="236.5" y="1893" width="0.2" height="15.0" fill="rgb(219,107,20)" rx="2" ry="2" />
<text  x="239.51" y="1903.5" ></text>
</g>
<g >
<title>event_base_set (4 samples, 0.07%)</title><rect x="101.1" y="2005" width="0.8" height="15.0" fill="rgb(210,11,29)" rx="2" ry="2" />
<text  x="104.12" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1158.3" y="1557" width="0.2" height="15.0" fill="rgb(222,159,50)" rx="2" ry="2" />
<text  x="1161.30" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="697.9" y="1877" width="0.2" height="15.0" fill="rgb(247,210,10)" rx="2" ry="2" />
<text  x="700.90" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="161.1" y="1781" width="0.2" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="164.14" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="623.5" y="1973" width="0.2" height="15.0" fill="rgb(212,155,6)" rx="2" ry="2" />
<text  x="626.53" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="453.8" y="1813" width="0.2" height="15.0" fill="rgb(242,135,44)" rx="2" ry="2" />
<text  x="456.85" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (33 samples, 0.56%)</title><rect x="792.2" y="1509" width="6.6" height="15.0" fill="rgb(240,40,0)" rx="2" ry="2" />
<text  x="795.21" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (7 samples, 0.12%)</title><rect x="1167.9" y="1973" width="1.4" height="15.0" fill="rgb(219,21,7)" rx="2" ry="2" />
<text  x="1170.87" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="264.2" y="1717" width="0.2" height="15.0" fill="rgb(241,18,24)" rx="2" ry="2" />
<text  x="267.22" y="1727.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="967.9" y="2005" width="0.2" height="15.0" fill="rgb(217,51,24)" rx="2" ry="2" />
<text  x="970.88" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="482.8" y="1781" width="0.4" height="15.0" fill="rgb(227,65,10)" rx="2" ry="2" />
<text  x="485.76" y="1791.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="618.9" y="1813" width="1.0" height="15.0" fill="rgb(231,94,12)" rx="2" ry="2" />
<text  x="621.94" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (384 samples, 6.49%)</title><rect x="257.2" y="1893" width="76.6" height="15.0" fill="rgb(240,114,35)" rx="2" ry="2" />
<text  x="260.25" y="1903.5" >tcp_send..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1119.8" y="1733" width="0.2" height="15.0" fill="rgb(249,42,13)" rx="2" ry="2" />
<text  x="1122.81" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="372.1" y="1669" width="0.2" height="15.0" fill="rgb(211,174,2)" rx="2" ry="2" />
<text  x="375.10" y="1679.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="515.5" y="1957" width="0.4" height="15.0" fill="rgb(250,207,24)" rx="2" ry="2" />
<text  x="518.46" y="1967.5" ></text>
</g>
<g >
<title>mcrouter (5,864 samples, 99.09%)</title><rect x="20.8" y="2069" width="1169.2" height="15.0" fill="rgb(206,190,3)" rx="2" ry="2" />
<text  x="23.77" y="2079.5" >mcrouter</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1126.8" y="1893" width="0.2" height="15.0" fill="rgb(249,187,32)" rx="2" ry="2" />
<text  x="1129.79" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (2 samples, 0.03%)</title><rect x="37.5" y="1957" width="0.4" height="15.0" fill="rgb(246,176,51)" rx="2" ry="2" />
<text  x="40.52" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="434.7" y="1941" width="0.8" height="15.0" fill="rgb(251,3,6)" rx="2" ry="2" />
<text  x="437.70" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1003.8" y="1941" width="0.8" height="15.0" fill="rgb(240,217,3)" rx="2" ry="2" />
<text  x="1006.77" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="412.0" y="1893" width="0.4" height="15.0" fill="rgb(219,83,6)" rx="2" ry="2" />
<text  x="414.97" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="157.0" y="1845" width="0.2" height="15.0" fill="rgb(246,94,43)" rx="2" ry="2" />
<text  x="159.95" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="386.7" y="1445" width="0.2" height="15.0" fill="rgb(249,172,35)" rx="2" ry="2" />
<text  x="389.65" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1021.1" y="2005" width="0.2" height="15.0" fill="rgb(217,34,30)" rx="2" ry="2" />
<text  x="1024.12" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="773" width="14.0" height="15.0" fill="rgb(208,73,44)" rx="2" ry="2" />
<text  x="108.11" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="863.2" y="1813" width="0.2" height="15.0" fill="rgb(253,124,45)" rx="2" ry="2" />
<text  x="866.20" y="1823.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="246.1" y="1893" width="0.8" height="15.0" fill="rgb(236,91,20)" rx="2" ry="2" />
<text  x="249.08" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="623.3" y="2037" width="0.2" height="15.0" fill="rgb(241,28,22)" rx="2" ry="2" />
<text  x="626.33" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="745.6" y="1749" width="0.2" height="15.0" fill="rgb(247,191,44)" rx="2" ry="2" />
<text  x="748.56" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="225.9" y="1797" width="0.2" height="15.0" fill="rgb(249,7,42)" rx="2" ry="2" />
<text  x="228.94" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="545.2" y="1893" width="0.2" height="15.0" fill="rgb(226,113,29)" rx="2" ry="2" />
<text  x="548.17" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="513.5" y="1925" width="0.2" height="15.0" fill="rgb(248,213,32)" rx="2" ry="2" />
<text  x="516.46" y="1935.5" ></text>
</g>
<g >
<title>security_socket_getpeername (2 samples, 0.03%)</title><rect x="673.8" y="1861" width="0.4" height="15.0" fill="rgb(249,100,51)" rx="2" ry="2" />
<text  x="676.77" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="939.8" y="1861" width="0.2" height="15.0" fill="rgb(215,141,14)" rx="2" ry="2" />
<text  x="942.76" y="1871.5" ></text>
</g>
<g >
<title>inode_init_always (8 samples, 0.14%)</title><rect x="389.4" y="1909" width="1.6" height="15.0" fill="rgb(210,71,50)" rx="2" ry="2" />
<text  x="392.44" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="836.7" y="1653" width="0.2" height="15.0" fill="rgb(207,15,38)" rx="2" ry="2" />
<text  x="839.68" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="482.6" y="1813" width="0.6" height="15.0" fill="rgb(243,69,29)" rx="2" ry="2" />
<text  x="485.56" y="1823.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="765.9" y="1669" width="0.4" height="15.0" fill="rgb(209,75,25)" rx="2" ry="2" />
<text  x="768.89" y="1679.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="974.9" y="1957" width="0.2" height="15.0" fill="rgb(251,145,13)" rx="2" ry="2" />
<text  x="977.86" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="532.0" y="1925" width="1.2" height="15.0" fill="rgb(227,57,21)" rx="2" ry="2" />
<text  x="535.01" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1178.4" y="2005" width="0.2" height="15.0" fill="rgb(247,125,25)" rx="2" ry="2" />
<text  x="1181.44" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="92.3" y="1957" width="0.4" height="15.0" fill="rgb(214,229,39)" rx="2" ry="2" />
<text  x="95.35" y="1967.5" ></text>
</g>
<g >
<title>up_write (9 samples, 0.15%)</title><rect x="829.3" y="1765" width="1.8" height="15.0" fill="rgb(245,101,20)" rx="2" ry="2" />
<text  x="832.30" y="1775.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="296.7" y="1685" width="0.6" height="15.0" fill="rgb(219,30,34)" rx="2" ry="2" />
<text  x="299.73" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="142.4" y="1877" width="0.2" height="15.0" fill="rgb(220,118,32)" rx="2" ry="2" />
<text  x="145.40" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1127.6" y="2037" width="0.4" height="15.0" fill="rgb(243,122,49)" rx="2" ry="2" />
<text  x="1130.59" y="2047.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="386.7" y="1589" width="0.2" height="15.0" fill="rgb(247,56,50)" rx="2" ry="2" />
<text  x="389.65" y="1599.5" ></text>
</g>
<g >
<title>__clock_gettime (24 samples, 0.41%)</title><rect x="204.0" y="2037" width="4.8" height="15.0" fill="rgb(238,145,8)" rx="2" ry="2" />
<text  x="207.01" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (16 samples, 0.27%)</title><rect x="707.1" y="1989" width="3.2" height="15.0" fill="rgb(217,170,7)" rx="2" ry="2" />
<text  x="710.07" y="1999.5" ></text>
</g>
<g >
<title>dput (77 samples, 1.30%)</title><rect x="730.0" y="1797" width="15.4" height="15.0" fill="rgb(226,174,27)" rx="2" ry="2" />
<text  x="733.00" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="615.8" y="1765" width="0.2" height="15.0" fill="rgb(222,167,29)" rx="2" ry="2" />
<text  x="618.75" y="1775.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="965.5" y="2005" width="0.2" height="15.0" fill="rgb(241,5,37)" rx="2" ry="2" />
<text  x="968.48" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="481.0" y="1909" width="0.4" height="15.0" fill="rgb(240,103,34)" rx="2" ry="2" />
<text  x="483.96" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1116.2" y="1733" width="0.2" height="15.0" fill="rgb(230,195,1)" rx="2" ry="2" />
<text  x="1119.23" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (6 samples, 0.10%)</title><rect x="226.9" y="1845" width="1.2" height="15.0" fill="rgb(221,187,0)" rx="2" ry="2" />
<text  x="229.94" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="1136.0" y="2053" width="0.4" height="15.0" fill="rgb(215,127,0)" rx="2" ry="2" />
<text  x="1138.96" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="142.0" y="1909" width="0.2" height="15.0" fill="rgb(240,32,44)" rx="2" ry="2" />
<text  x="145.00" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="17.6" y="2037" width="1.0" height="15.0" fill="rgb(214,194,38)" rx="2" ry="2" />
<text  x="20.58" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="84.0" y="1941" width="0.6" height="15.0" fill="rgb(208,214,29)" rx="2" ry="2" />
<text  x="86.97" y="1951.5" ></text>
</g>
<g >
<title>__GI___setsockopt (102 samples, 1.72%)</title><rect x="680.8" y="1989" width="20.3" height="15.0" fill="rgb(211,96,27)" rx="2" ry="2" />
<text  x="683.75" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="531.4" y="1909" width="0.4" height="15.0" fill="rgb(230,98,52)" rx="2" ry="2" />
<text  x="534.41" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="220.2" y="1861" width="0.2" height="15.0" fill="rgb(222,221,0)" rx="2" ry="2" />
<text  x="223.16" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="936.2" y="1893" width="0.2" height="15.0" fill="rgb(246,229,35)" rx="2" ry="2" />
<text  x="939.17" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="112.7" y="37" width="0.2" height="15.0" fill="rgb(224,134,33)" rx="2" ry="2" />
<text  x="115.69" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="1989" width="0.2" height="15.0" fill="rgb(206,144,43)" rx="2" ry="2" />
<text  x="239.51" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="645.7" y="1957" width="0.2" height="15.0" fill="rgb(234,147,43)" rx="2" ry="2" />
<text  x="648.66" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="153.6" y="1877" width="0.4" height="15.0" fill="rgb(233,112,49)" rx="2" ry="2" />
<text  x="156.56" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (6 samples, 0.10%)</title><rect x="339.0" y="2005" width="1.2" height="15.0" fill="rgb(230,215,35)" rx="2" ry="2" />
<text  x="342.00" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (15 samples, 0.25%)</title><rect x="468.4" y="1925" width="3.0" height="15.0" fill="rgb(213,96,33)" rx="2" ry="2" />
<text  x="471.40" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="82.8" y="1941" width="0.8" height="15.0" fill="rgb(250,133,25)" rx="2" ry="2" />
<text  x="85.78" y="1951.5" ></text>
</g>
<g >
<title>mod_timer (2 samples, 0.03%)</title><rect x="327.0" y="1797" width="0.4" height="15.0" fill="rgb(215,138,3)" rx="2" ry="2" />
<text  x="330.03" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (6 samples, 0.10%)</title><rect x="170.1" y="2021" width="1.2" height="15.0" fill="rgb(243,174,10)" rx="2" ry="2" />
<text  x="173.11" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="901.7" y="1989" width="0.2" height="15.0" fill="rgb(245,162,21)" rx="2" ry="2" />
<text  x="904.68" y="1999.5" ></text>
</g>
<g >
<title>sys_accept4 (269 samples, 4.55%)</title><rect x="357.9" y="1989" width="53.7" height="15.0" fill="rgb(217,179,32)" rx="2" ry="2" />
<text  x="360.94" y="1999.5" >sys_a..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="477.6" y="1957" width="0.2" height="15.0" fill="rgb(209,27,44)" rx="2" ry="2" />
<text  x="480.57" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1119.8" y="1605" width="0.2" height="15.0" fill="rgb(232,46,32)" rx="2" ry="2" />
<text  x="1122.81" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="118.9" y="133" width="0.2" height="15.0" fill="rgb(221,58,22)" rx="2" ry="2" />
<text  x="121.87" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="256.0" y="1877" width="0.2" height="15.0" fill="rgb(245,167,45)" rx="2" ry="2" />
<text  x="259.05" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_free (11 samples, 0.19%)</title><rect x="466.2" y="1941" width="2.2" height="15.0" fill="rgb(211,138,18)" rx="2" ry="2" />
<text  x="469.21" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="640.5" y="1717" width="0.2" height="15.0" fill="rgb(213,112,1)" rx="2" ry="2" />
<text  x="643.48" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.4" y="1861" width="0.1" height="15.0" fill="rgb(215,151,41)" rx="2" ry="2" />
<text  x="160.35" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="782.2" y="1493" width="0.2" height="15.0" fill="rgb(216,214,26)" rx="2" ry="2" />
<text  x="785.24" y="1503.5" ></text>
</g>
<g >
<title>mod_timer (25 samples, 0.42%)</title><rect x="321.8" y="1765" width="5.0" height="15.0" fill="rgb(223,41,20)" rx="2" ry="2" />
<text  x="324.85" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1157.9" y="1877" width="0.6" height="15.0" fill="rgb(250,127,9)" rx="2" ry="2" />
<text  x="1160.90" y="1887.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="750.5" y="1749" width="0.2" height="15.0" fill="rgb(207,134,54)" rx="2" ry="2" />
<text  x="753.54" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="856.2" y="1733" width="0.2" height="15.0" fill="rgb(231,92,27)" rx="2" ry="2" />
<text  x="859.22" y="1743.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="336.0" y="1557" width="0.2" height="15.0" fill="rgb(250,20,27)" rx="2" ry="2" />
<text  x="339.01" y="1567.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="323.8" y="1749" width="0.2" height="15.0" fill="rgb(242,86,36)" rx="2" ry="2" />
<text  x="326.84" y="1759.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1170.5" y="1941" width="0.2" height="15.0" fill="rgb(233,23,23)" rx="2" ry="2" />
<text  x="1173.46" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="725.6" y="1621" width="0.2" height="15.0" fill="rgb(247,3,47)" rx="2" ry="2" />
<text  x="728.62" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="472.8" y="1925" width="0.2" height="15.0" fill="rgb(248,214,0)" rx="2" ry="2" />
<text  x="475.79" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="256.4" y="1749" width="0.2" height="15.0" fill="rgb(242,84,24)" rx="2" ry="2" />
<text  x="259.45" y="1759.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="321.4" y="1765" width="0.2" height="15.0" fill="rgb(225,45,8)" rx="2" ry="2" />
<text  x="324.45" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1178.2" y="1989" width="0.2" height="15.0" fill="rgb(227,20,1)" rx="2" ry="2" />
<text  x="1181.24" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="226.3" y="1861" width="0.2" height="15.0" fill="rgb(238,126,17)" rx="2" ry="2" />
<text  x="229.34" y="1871.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="561.3" y="1925" width="0.8" height="15.0" fill="rgb(237,149,2)" rx="2" ry="2" />
<text  x="564.32" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="481.2" y="1669" width="0.2" height="15.0" fill="rgb(230,15,13)" rx="2" ry="2" />
<text  x="484.16" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="231.3" y="1813" width="0.2" height="15.0" fill="rgb(253,169,21)" rx="2" ry="2" />
<text  x="234.32" y="1823.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="884.9" y="1861" width="0.2" height="15.0" fill="rgb(252,170,27)" rx="2" ry="2" />
<text  x="887.93" y="1871.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="518.8" y="1941" width="0.8" height="15.0" fill="rgb(237,122,42)" rx="2" ry="2" />
<text  x="521.85" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="224.1" y="1413" width="0.2" height="15.0" fill="rgb(205,191,29)" rx="2" ry="2" />
<text  x="227.15" y="1423.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="856.2" y="1877" width="0.2" height="15.0" fill="rgb(230,171,35)" rx="2" ry="2" />
<text  x="859.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="866.6" y="1717" width="0.2" height="15.0" fill="rgb(215,218,33)" rx="2" ry="2" />
<text  x="869.59" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="743.8" y="1733" width="0.8" height="15.0" fill="rgb(249,155,36)" rx="2" ry="2" />
<text  x="746.76" y="1743.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="853.6" y="1845" width="0.2" height="15.0" fill="rgb(240,211,7)" rx="2" ry="2" />
<text  x="856.63" y="1855.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1138.8" y="1973" width="0.2" height="15.0" fill="rgb(208,48,37)" rx="2" ry="2" />
<text  x="1141.76" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="292.5" y="1397" width="0.6" height="15.0" fill="rgb(247,224,50)" rx="2" ry="2" />
<text  x="295.54" y="1407.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="598.0" y="1813" width="1.0" height="15.0" fill="rgb(248,188,47)" rx="2" ry="2" />
<text  x="601.01" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (425 samples, 7.18%)</title><rect x="1035.9" y="2021" width="84.7" height="15.0" fill="rgb(243,220,31)" rx="2" ry="2" />
<text  x="1038.87" y="2031.5" >do_syscal..</text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="974.9" y="1909" width="0.2" height="15.0" fill="rgb(236,211,13)" rx="2" ry="2" />
<text  x="977.86" y="1919.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="1156.3" y="1877" width="0.2" height="15.0" fill="rgb(237,98,30)" rx="2" ry="2" />
<text  x="1159.30" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="619.9" y="1989" width="0.2" height="15.0" fill="rgb(207,16,16)" rx="2" ry="2" />
<text  x="622.94" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="1126.8" y="1685" width="0.2" height="15.0" fill="rgb(229,29,8)" rx="2" ry="2" />
<text  x="1129.79" y="1695.5" ></text>
</g>
<g >
<title>d_flags_for_inode (1 samples, 0.02%)</title><rect x="409.0" y="1909" width="0.2" height="15.0" fill="rgb(212,22,42)" rx="2" ry="2" />
<text  x="411.98" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (104 samples, 1.76%)</title><rect x="487.7" y="2005" width="20.8" height="15.0" fill="rgb(240,77,35)" rx="2" ry="2" />
<text  x="490.74" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="626.9" y="2005" width="0.4" height="15.0" fill="rgb(218,224,52)" rx="2" ry="2" />
<text  x="629.92" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="460.0" y="1893" width="0.2" height="15.0" fill="rgb(232,198,28)" rx="2" ry="2" />
<text  x="463.03" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4 samples, 0.07%)</title><rect x="1171.7" y="1989" width="0.8" height="15.0" fill="rgb(210,216,19)" rx="2" ry="2" />
<text  x="1174.66" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="663.8" y="1925" width="1.6" height="15.0" fill="rgb(242,112,8)" rx="2" ry="2" />
<text  x="666.81" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="53.5" y="1829" width="0.2" height="15.0" fill="rgb(211,60,9)" rx="2" ry="2" />
<text  x="56.47" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1126.8" y="1813" width="0.2" height="15.0" fill="rgb(251,74,51)" rx="2" ry="2" />
<text  x="1129.79" y="1823.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (4 samples, 0.07%)</title><rect x="784.6" y="1525" width="0.8" height="15.0" fill="rgb(236,163,27)" rx="2" ry="2" />
<text  x="787.64" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1013.1" y="1749" width="0.2" height="15.0" fill="rgb(228,13,38)" rx="2" ry="2" />
<text  x="1016.14" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="222.6" y="1877" width="0.4" height="15.0" fill="rgb(226,86,37)" rx="2" ry="2" />
<text  x="225.55" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (7 samples, 0.12%)</title><rect x="1009.0" y="2005" width="1.3" height="15.0" fill="rgb(205,40,1)" rx="2" ry="2" />
<text  x="1011.95" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="276.2" y="1797" width="0.2" height="15.0" fill="rgb(247,107,22)" rx="2" ry="2" />
<text  x="279.19" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.2" y="1893" width="0.2" height="15.0" fill="rgb(211,196,51)" rx="2" ry="2" />
<text  x="148.19" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="561.3" y="1861" width="0.8" height="15.0" fill="rgb(235,64,7)" rx="2" ry="2" />
<text  x="564.32" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="602.8" y="1941" width="0.2" height="15.0" fill="rgb(236,59,54)" rx="2" ry="2" />
<text  x="605.79" y="1951.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::~allocator (2 samples, 0.03%)</title><rect x="88.0" y="1893" width="0.4" height="15.0" fill="rgb(206,89,37)" rx="2" ry="2" />
<text  x="90.96" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="573.7" y="1941" width="0.2" height="15.0" fill="rgb(215,38,28)" rx="2" ry="2" />
<text  x="576.68" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="53.7" y="1925" width="0.2" height="15.0" fill="rgb(252,194,49)" rx="2" ry="2" />
<text  x="56.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="955.9" y="1957" width="0.2" height="15.0" fill="rgb(205,63,32)" rx="2" ry="2" />
<text  x="958.91" y="1967.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="674.0" y="1829" width="0.2" height="15.0" fill="rgb(250,4,37)" rx="2" ry="2" />
<text  x="676.97" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="542.0" y="1909" width="0.2" height="15.0" fill="rgb(224,38,24)" rx="2" ry="2" />
<text  x="544.98" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="746.2" y="1605" width="0.4" height="15.0" fill="rgb(242,99,23)" rx="2" ry="2" />
<text  x="749.15" y="1615.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="967.3" y="2005" width="0.2" height="15.0" fill="rgb(221,71,52)" rx="2" ry="2" />
<text  x="970.28" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="539.0" y="1941" width="0.2" height="15.0" fill="rgb(218,166,50)" rx="2" ry="2" />
<text  x="541.99" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="782.2" y="1525" width="0.2" height="15.0" fill="rgb(205,191,20)" rx="2" ry="2" />
<text  x="785.24" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1019.3" y="1909" width="0.2" height="15.0" fill="rgb(214,206,52)" rx="2" ry="2" />
<text  x="1022.32" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="478.8" y="1957" width="0.2" height="15.0" fill="rgb(241,64,53)" rx="2" ry="2" />
<text  x="481.77" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (106 samples, 1.79%)</title><rect x="680.2" y="2021" width="21.1" height="15.0" fill="rgb(225,164,5)" rx="2" ry="2" />
<text  x="683.16" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1012.7" y="1573" width="0.2" height="15.0" fill="rgb(239,183,34)" rx="2" ry="2" />
<text  x="1015.74" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="404.6" y="1685" width="0.2" height="15.0" fill="rgb(229,31,34)" rx="2" ry="2" />
<text  x="407.60" y="1695.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="277.2" y="1861" width="0.2" height="15.0" fill="rgb(248,118,43)" rx="2" ry="2" />
<text  x="280.18" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="840.9" y="1909" width="0.4" height="15.0" fill="rgb(210,45,0)" rx="2" ry="2" />
<text  x="843.87" y="1919.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1034.3" y="1893" width="0.2" height="15.0" fill="rgb(240,85,9)" rx="2" ry="2" />
<text  x="1037.28" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="534.2" y="1957" width="0.2" height="15.0" fill="rgb(221,25,15)" rx="2" ry="2" />
<text  x="537.20" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="453.0" y="1781" width="0.2" height="15.0" fill="rgb(243,226,44)" rx="2" ry="2" />
<text  x="456.05" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="951.9" y="2005" width="0.2" height="15.0" fill="rgb(242,213,36)" rx="2" ry="2" />
<text  x="954.93" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1178.0" y="1701" width="0.2" height="15.0" fill="rgb(222,57,4)" rx="2" ry="2" />
<text  x="1181.04" y="1711.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="404.6" y="1605" width="0.2" height="15.0" fill="rgb(248,195,49)" rx="2" ry="2" />
<text  x="407.60" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (2 samples, 0.03%)</title><rect x="580.9" y="2021" width="0.4" height="15.0" fill="rgb(217,172,16)" rx="2" ry="2" />
<text  x="583.86" y="2031.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="912.2" y="2005" width="0.2" height="15.0" fill="rgb(226,49,18)" rx="2" ry="2" />
<text  x="915.25" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="521.8" y="1957" width="0.2" height="15.0" fill="rgb(249,78,36)" rx="2" ry="2" />
<text  x="524.84" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="518.8" y="1829" width="0.8" height="15.0" fill="rgb(234,171,47)" rx="2" ry="2" />
<text  x="521.85" y="1839.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="255.7" y="1893" width="1.1" height="15.0" fill="rgb(244,205,45)" rx="2" ry="2" />
<text  x="258.65" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="891.3" y="1909" width="1.0" height="15.0" fill="rgb(232,92,40)" rx="2" ry="2" />
<text  x="894.31" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="385.7" y="1941" width="0.4" height="15.0" fill="rgb(232,97,47)" rx="2" ry="2" />
<text  x="388.65" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="143.6" y="1925" width="0.4" height="15.0" fill="rgb(237,54,36)" rx="2" ry="2" />
<text  x="146.59" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="534.2" y="1941" width="0.2" height="15.0" fill="rgb(251,119,44)" rx="2" ry="2" />
<text  x="537.20" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="824.9" y="1621" width="0.2" height="15.0" fill="rgb(239,180,23)" rx="2" ry="2" />
<text  x="827.91" y="1631.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="434.5" y="1989" width="0.2" height="15.0" fill="rgb(221,122,46)" rx="2" ry="2" />
<text  x="437.50" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (5 samples, 0.08%)</title><rect x="1133.2" y="1989" width="1.0" height="15.0" fill="rgb(218,184,3)" rx="2" ry="2" />
<text  x="1136.17" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="386.9" y="1813" width="0.1" height="15.0" fill="rgb(244,144,46)" rx="2" ry="2" />
<text  x="389.85" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="508.3" y="1749" width="0.2" height="15.0" fill="rgb(230,16,18)" rx="2" ry="2" />
<text  x="511.28" y="1759.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="534.2" y="1573" width="0.2" height="15.0" fill="rgb(222,56,31)" rx="2" ry="2" />
<text  x="537.20" y="1583.5" ></text>
</g>
<g >
<title>prefetch_freepointer (4 samples, 0.07%)</title><rect x="395.2" y="1877" width="0.8" height="15.0" fill="rgb(248,31,47)" rx="2" ry="2" />
<text  x="398.22" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="976.1" y="1973" width="0.2" height="15.0" fill="rgb(249,155,7)" rx="2" ry="2" />
<text  x="979.05" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="480.6" y="1941" width="0.2" height="15.0" fill="rgb(251,157,27)" rx="2" ry="2" />
<text  x="483.56" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="264.2" y="1653" width="0.2" height="15.0" fill="rgb(251,146,6)" rx="2" ry="2" />
<text  x="267.22" y="1663.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (9 samples, 0.15%)</title><rect x="763.3" y="1701" width="1.8" height="15.0" fill="rgb(222,181,49)" rx="2" ry="2" />
<text  x="766.30" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (108 samples, 1.82%)</title><rect x="975.1" y="2037" width="21.5" height="15.0" fill="rgb(216,8,41)" rx="2" ry="2" />
<text  x="978.06" y="2047.5" >f..</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1102.1" y="1493" width="0.2" height="15.0" fill="rgb(220,164,8)" rx="2" ry="2" />
<text  x="1105.07" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4 samples, 0.07%)</title><rect x="998.2" y="1973" width="0.8" height="15.0" fill="rgb(249,212,17)" rx="2" ry="2" />
<text  x="1001.19" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="453.8" y="1845" width="0.2" height="15.0" fill="rgb(241,166,1)" rx="2" ry="2" />
<text  x="456.85" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="397.4" y="1621" width="0.2" height="15.0" fill="rgb(230,199,0)" rx="2" ry="2" />
<text  x="400.42" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1019.3" y="1893" width="0.2" height="15.0" fill="rgb(243,66,53)" rx="2" ry="2" />
<text  x="1022.32" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="102.7" y="1941" width="0.2" height="15.0" fill="rgb(241,110,5)" rx="2" ry="2" />
<text  x="105.72" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="633.9" y="1973" width="0.6" height="15.0" fill="rgb(226,77,45)" rx="2" ry="2" />
<text  x="636.90" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="675.0" y="1781" width="0.6" height="15.0" fill="rgb(212,15,2)" rx="2" ry="2" />
<text  x="677.97" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="885.7" y="1829" width="0.2" height="15.0" fill="rgb(205,132,1)" rx="2" ry="2" />
<text  x="888.73" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="817.5" y="1445" width="0.2" height="15.0" fill="rgb(252,49,31)" rx="2" ry="2" />
<text  x="820.54" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="912.6" y="1749" width="0.2" height="15.0" fill="rgb(208,96,48)" rx="2" ry="2" />
<text  x="915.65" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="909.9" y="1973" width="0.2" height="15.0" fill="rgb(237,162,43)" rx="2" ry="2" />
<text  x="912.85" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="357" width="14.0" height="15.0" fill="rgb(221,44,8)" rx="2" ry="2" />
<text  x="108.11" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="10.0" y="1877" width="0.2" height="15.0" fill="rgb(207,176,24)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="454.2" y="1973" width="1.2" height="15.0" fill="rgb(246,105,2)" rx="2" ry="2" />
<text  x="457.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="115.1" y="37" width="0.2" height="15.0" fill="rgb(226,213,11)" rx="2" ry="2" />
<text  x="118.08" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="480.8" y="1957" width="0.6" height="15.0" fill="rgb(221,44,8)" rx="2" ry="2" />
<text  x="483.76" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="1157.9" y="1797" width="0.6" height="15.0" fill="rgb(222,198,41)" rx="2" ry="2" />
<text  x="1160.90" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (47 samples, 0.79%)</title><rect x="1101.9" y="1605" width="9.3" height="15.0" fill="rgb(224,135,22)" rx="2" ry="2" />
<text  x="1104.87" y="1615.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="76.4" y="1669" width="0.2" height="15.0" fill="rgb(254,129,40)" rx="2" ry="2" />
<text  x="79.40" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="78.4" y="1845" width="0.2" height="15.0" fill="rgb(236,38,1)" rx="2" ry="2" />
<text  x="81.39" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1002.6" y="1989" width="0.4" height="15.0" fill="rgb(241,75,41)" rx="2" ry="2" />
<text  x="1005.57" y="1999.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="568.7" y="2005" width="0.4" height="15.0" fill="rgb(214,180,20)" rx="2" ry="2" />
<text  x="571.70" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="953.9" y="1989" width="2.0" height="15.0" fill="rgb(228,32,12)" rx="2" ry="2" />
<text  x="956.92" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="247.1" y="1845" width="0.2" height="15.0" fill="rgb(217,164,24)" rx="2" ry="2" />
<text  x="250.08" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="76.4" y="1909" width="0.2" height="15.0" fill="rgb(254,50,54)" rx="2" ry="2" />
<text  x="79.40" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="904.9" y="1973" width="0.6" height="15.0" fill="rgb(248,221,6)" rx="2" ry="2" />
<text  x="907.87" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="67.2" y="1813" width="0.2" height="15.0" fill="rgb(235,145,51)" rx="2" ry="2" />
<text  x="70.23" y="1823.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="488.7" y="1893" width="0.2" height="15.0" fill="rgb(222,37,21)" rx="2" ry="2" />
<text  x="491.74" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="655.4" y="2021" width="0.2" height="15.0" fill="rgb(237,161,21)" rx="2" ry="2" />
<text  x="658.43" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1178.0" y="1733" width="0.2" height="15.0" fill="rgb(216,150,8)" rx="2" ry="2" />
<text  x="1181.04" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="43.9" y="1989" width="0.2" height="15.0" fill="rgb(236,21,8)" rx="2" ry="2" />
<text  x="46.90" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="863.2" y="1861" width="0.2" height="15.0" fill="rgb(226,98,31)" rx="2" ry="2" />
<text  x="866.20" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (48 samples, 0.81%)</title><rect x="1101.7" y="1717" width="9.5" height="15.0" fill="rgb(254,22,40)" rx="2" ry="2" />
<text  x="1104.67" y="1727.5" ></text>
</g>
<g >
<title>sch_direct_xmit (83 samples, 1.40%)</title><rect x="785.4" y="1557" width="16.6" height="15.0" fill="rgb(233,178,38)" rx="2" ry="2" />
<text  x="788.43" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="705.3" y="2037" width="0.2" height="15.0" fill="rgb(222,20,47)" rx="2" ry="2" />
<text  x="708.28" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="863.8" y="1973" width="0.2" height="15.0" fill="rgb(207,146,0)" rx="2" ry="2" />
<text  x="866.80" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1121.4" y="1749" width="0.2" height="15.0" fill="rgb(224,10,35)" rx="2" ry="2" />
<text  x="1124.41" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="56.3" y="1877" width="0.2" height="15.0" fill="rgb(230,204,51)" rx="2" ry="2" />
<text  x="59.26" y="1887.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (13 samples, 0.22%)</title><rect x="249.5" y="1941" width="2.6" height="15.0" fill="rgb(220,42,4)" rx="2" ry="2" />
<text  x="252.47" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="163.7" y="2021" width="0.4" height="15.0" fill="rgb(224,87,37)" rx="2" ry="2" />
<text  x="166.73" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="397.4" y="1733" width="0.4" height="15.0" fill="rgb(231,98,29)" rx="2" ry="2" />
<text  x="400.42" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="338.8" y="1813" width="0.2" height="15.0" fill="rgb(224,85,23)" rx="2" ry="2" />
<text  x="341.80" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="962.1" y="2037" width="0.2" height="15.0" fill="rgb(215,110,51)" rx="2" ry="2" />
<text  x="965.10" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="118.9" y="85" width="0.2" height="15.0" fill="rgb(216,211,8)" rx="2" ry="2" />
<text  x="121.87" y="95.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="231.3" y="1653" width="0.2" height="15.0" fill="rgb(233,22,48)" rx="2" ry="2" />
<text  x="234.32" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1126.8" y="2021" width="0.2" height="15.0" fill="rgb(252,108,22)" rx="2" ry="2" />
<text  x="1129.79" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="627.7" y="2005" width="0.2" height="15.0" fill="rgb(239,2,10)" rx="2" ry="2" />
<text  x="630.72" y="2015.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="912.6" y="1717" width="0.2" height="15.0" fill="rgb(238,127,14)" rx="2" ry="2" />
<text  x="915.65" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="104.7" y="1557" width="16.6" height="15.0" fill="rgb(211,70,37)" rx="2" ry="2" />
<text  x="107.71" y="1567.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (243 samples, 4.11%)</title><rect x="279.2" y="1861" width="48.4" height="15.0" fill="rgb(220,147,15)" rx="2" ry="2" />
<text  x="282.18" y="1871.5" >__tc..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="149.8" y="1717" width="0.2" height="15.0" fill="rgb(218,18,13)" rx="2" ry="2" />
<text  x="152.77" y="1727.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="784.2" y="1541" width="0.2" height="15.0" fill="rgb(251,9,42)" rx="2" ry="2" />
<text  x="787.24" y="1551.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1121.6" y="1749" width="0.2" height="15.0" fill="rgb(218,210,19)" rx="2" ry="2" />
<text  x="1124.61" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="517.3" y="1957" width="0.2" height="15.0" fill="rgb(225,13,22)" rx="2" ry="2" />
<text  x="520.25" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="69.6" y="1925" width="0.2" height="15.0" fill="rgb(241,28,47)" rx="2" ry="2" />
<text  x="72.62" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1171.5" y="1989" width="0.2" height="15.0" fill="rgb(236,137,1)" rx="2" ry="2" />
<text  x="1174.46" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="882.9" y="1893" width="0.8" height="15.0" fill="rgb(252,153,19)" rx="2" ry="2" />
<text  x="885.94" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1126.8" y="1877" width="0.2" height="15.0" fill="rgb(207,15,12)" rx="2" ry="2" />
<text  x="1129.79" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (2 samples, 0.03%)</title><rect x="27.5" y="2005" width="0.4" height="15.0" fill="rgb(251,138,44)" rx="2" ry="2" />
<text  x="30.55" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="336.2" y="1957" width="0.2" height="15.0" fill="rgb(214,226,24)" rx="2" ry="2" />
<text  x="339.20" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="665.2" y="1877" width="0.2" height="15.0" fill="rgb(219,212,46)" rx="2" ry="2" />
<text  x="668.20" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="533.2" y="1925" width="0.2" height="15.0" fill="rgb(216,11,51)" rx="2" ry="2" />
<text  x="536.20" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="224.1" y="1381" width="0.2" height="15.0" fill="rgb(254,135,51)" rx="2" ry="2" />
<text  x="227.15" y="1391.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1178.0" y="1765" width="0.2" height="15.0" fill="rgb(214,139,51)" rx="2" ry="2" />
<text  x="1181.04" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="704.5" y="1733" width="0.2" height="15.0" fill="rgb(210,123,18)" rx="2" ry="2" />
<text  x="707.48" y="1743.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="252.1" y="1941" width="0.2" height="15.0" fill="rgb(231,154,5)" rx="2" ry="2" />
<text  x="255.06" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="120.7" y="1381" width="0.2" height="15.0" fill="rgb(252,184,35)" rx="2" ry="2" />
<text  x="123.66" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="32.1" y="1813" width="0.2" height="15.0" fill="rgb(229,97,52)" rx="2" ry="2" />
<text  x="35.13" y="1823.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="122.7" y="1685" width="0.2" height="15.0" fill="rgb(214,152,21)" rx="2" ry="2" />
<text  x="125.66" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="547.2" y="1909" width="0.2" height="15.0" fill="rgb(232,160,53)" rx="2" ry="2" />
<text  x="550.16" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (5 samples, 0.08%)</title><rect x="170.3" y="2005" width="1.0" height="15.0" fill="rgb(251,9,29)" rx="2" ry="2" />
<text  x="173.31" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="996.4" y="1653" width="0.2" height="15.0" fill="rgb(209,89,28)" rx="2" ry="2" />
<text  x="999.39" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="76.2" y="1909" width="0.2" height="15.0" fill="rgb(217,106,41)" rx="2" ry="2" />
<text  x="79.20" y="1919.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1012.7" y="1621" width="0.2" height="15.0" fill="rgb(245,221,50)" rx="2" ry="2" />
<text  x="1015.74" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="338.2" y="1957" width="0.8" height="15.0" fill="rgb(250,137,16)" rx="2" ry="2" />
<text  x="341.20" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="158.5" y="1925" width="0.2" height="15.0" fill="rgb(209,120,38)" rx="2" ry="2" />
<text  x="161.55" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="38.5" y="1893" width="0.2" height="15.0" fill="rgb(249,80,5)" rx="2" ry="2" />
<text  x="41.51" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="979.8" y="1973" width="0.2" height="15.0" fill="rgb(221,227,49)" rx="2" ry="2" />
<text  x="982.84" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="1161.3" y="2053" width="0.6" height="15.0" fill="rgb(241,41,29)" rx="2" ry="2" />
<text  x="1164.29" y="2063.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (2 samples, 0.03%)</title><rect x="1168.3" y="1957" width="0.4" height="15.0" fill="rgb(251,59,45)" rx="2" ry="2" />
<text  x="1171.27" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="74.6" y="1909" width="0.8" height="15.0" fill="rgb(223,121,31)" rx="2" ry="2" />
<text  x="77.60" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1178.0" y="1669" width="0.2" height="15.0" fill="rgb(236,99,21)" rx="2" ry="2" />
<text  x="1181.04" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="817.5" y="1621" width="0.2" height="15.0" fill="rgb(248,183,14)" rx="2" ry="2" />
<text  x="820.54" y="1631.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (3 samples, 0.05%)</title><rect x="967.1" y="2021" width="0.6" height="15.0" fill="rgb(237,177,20)" rx="2" ry="2" />
<text  x="970.08" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="779.1" y="1557" width="0.2" height="15.0" fill="rgb(223,57,19)" rx="2" ry="2" />
<text  x="782.05" y="1567.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="336.0" y="1589" width="0.2" height="15.0" fill="rgb(239,106,27)" rx="2" ry="2" />
<text  x="339.01" y="1599.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (4 samples, 0.07%)</title><rect x="521.8" y="1973" width="0.8" height="15.0" fill="rgb(221,122,23)" rx="2" ry="2" />
<text  x="524.84" y="1983.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="291.1" y="1365" width="0.2" height="15.0" fill="rgb(226,116,9)" rx="2" ry="2" />
<text  x="294.14" y="1375.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="32.1" y="1877" width="0.2" height="15.0" fill="rgb(217,177,15)" rx="2" ry="2" />
<text  x="35.13" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="571.5" y="1909" width="0.2" height="15.0" fill="rgb(245,124,15)" rx="2" ry="2" />
<text  x="574.49" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="224.1" y="1717" width="0.2" height="15.0" fill="rgb(239,39,9)" rx="2" ry="2" />
<text  x="227.15" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="402.4" y="1893" width="0.2" height="15.0" fill="rgb(208,125,38)" rx="2" ry="2" />
<text  x="405.40" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="139.2" y="1957" width="0.6" height="15.0" fill="rgb(242,101,30)" rx="2" ry="2" />
<text  x="142.21" y="1967.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1157.5" y="1653" width="0.2" height="15.0" fill="rgb(239,50,13)" rx="2" ry="2" />
<text  x="1160.50" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="599.8" y="1477" width="0.2" height="15.0" fill="rgb(212,207,5)" rx="2" ry="2" />
<text  x="602.80" y="1487.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1034.3" y="1957" width="0.2" height="15.0" fill="rgb(226,121,34)" rx="2" ry="2" />
<text  x="1037.28" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="534.2" y="1925" width="0.2" height="15.0" fill="rgb(246,132,2)" rx="2" ry="2" />
<text  x="537.20" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="866.6" y="1813" width="0.2" height="15.0" fill="rgb(248,37,46)" rx="2" ry="2" />
<text  x="869.59" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="980.2" y="1957" width="0.2" height="15.0" fill="rgb(224,110,15)" rx="2" ry="2" />
<text  x="983.24" y="1967.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="102.7" y="1685" width="0.2" height="15.0" fill="rgb(213,142,15)" rx="2" ry="2" />
<text  x="105.72" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="846.4" y="1925" width="1.8" height="15.0" fill="rgb(205,100,1)" rx="2" ry="2" />
<text  x="849.45" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1008.8" y="1989" width="0.2" height="15.0" fill="rgb(222,91,19)" rx="2" ry="2" />
<text  x="1011.75" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="697.9" y="1701" width="0.2" height="15.0" fill="rgb(239,78,32)" rx="2" ry="2" />
<text  x="700.90" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="856.2" y="1925" width="0.2" height="15.0" fill="rgb(244,199,39)" rx="2" ry="2" />
<text  x="859.22" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="704.5" y="1941" width="0.2" height="15.0" fill="rgb(231,14,33)" rx="2" ry="2" />
<text  x="707.48" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="505.5" y="1733" width="0.2" height="15.0" fill="rgb(251,188,1)" rx="2" ry="2" />
<text  x="508.49" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="125.0" y="1925" width="0.2" height="15.0" fill="rgb(216,34,32)" rx="2" ry="2" />
<text  x="128.05" y="1935.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="528.4" y="1861" width="0.8" height="15.0" fill="rgb(253,165,54)" rx="2" ry="2" />
<text  x="531.42" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="982.0" y="1845" width="0.2" height="15.0" fill="rgb(216,120,52)" rx="2" ry="2" />
<text  x="985.03" y="1855.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="831.1" y="1813" width="0.2" height="15.0" fill="rgb(242,39,28)" rx="2" ry="2" />
<text  x="834.09" y="1823.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="714.8" y="1941" width="0.2" height="15.0" fill="rgb(213,112,15)" rx="2" ry="2" />
<text  x="717.85" y="1951.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1127.0" y="2053" width="0.2" height="15.0" fill="rgb(248,101,49)" rx="2" ry="2" />
<text  x="1129.99" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="435.9" y="1829" width="0.2" height="15.0" fill="rgb(224,38,14)" rx="2" ry="2" />
<text  x="438.90" y="1839.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="453.8" y="1541" width="0.2" height="15.0" fill="rgb(205,113,21)" rx="2" ry="2" />
<text  x="456.85" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="412.0" y="1797" width="0.4" height="15.0" fill="rgb(222,122,19)" rx="2" ry="2" />
<text  x="414.97" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (5 samples, 0.08%)</title><rect x="482.2" y="1941" width="1.0" height="15.0" fill="rgb(232,17,19)" rx="2" ry="2" />
<text  x="485.16" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="89.2" y="1973" width="0.2" height="15.0" fill="rgb(240,162,43)" rx="2" ry="2" />
<text  x="92.16" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (86 samples, 1.45%)</title><rect x="213.4" y="1957" width="17.1" height="15.0" fill="rgb(242,8,22)" rx="2" ry="2" />
<text  x="216.38" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (48 samples, 0.81%)</title><rect x="1101.7" y="1749" width="9.5" height="15.0" fill="rgb(213,223,42)" rx="2" ry="2" />
<text  x="1104.67" y="1759.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="936.6" y="1893" width="0.2" height="15.0" fill="rgb(211,162,6)" rx="2" ry="2" />
<text  x="939.57" y="1903.5" ></text>
</g>
<g >
<title>rb_erase (7 samples, 0.12%)</title><rect x="1109.6" y="1509" width="1.4" height="15.0" fill="rgb(223,87,47)" rx="2" ry="2" />
<text  x="1112.65" y="1519.5" ></text>
</g>
<g >
<title>__check_object_size (15 samples, 0.25%)</title><rect x="263.0" y="1877" width="3.0" height="15.0" fill="rgb(214,199,36)" rx="2" ry="2" />
<text  x="266.03" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="599.8" y="1861" width="0.4" height="15.0" fill="rgb(214,73,16)" rx="2" ry="2" />
<text  x="602.80" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="541.2" y="1829" width="0.2" height="15.0" fill="rgb(230,199,20)" rx="2" ry="2" />
<text  x="544.18" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="998.6" y="1957" width="0.4" height="15.0" fill="rgb(239,67,24)" rx="2" ry="2" />
<text  x="1001.58" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="435.9" y="1845" width="0.2" height="15.0" fill="rgb(236,150,4)" rx="2" ry="2" />
<text  x="438.90" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="756.1" y="1637" width="0.2" height="15.0" fill="rgb(239,220,29)" rx="2" ry="2" />
<text  x="759.12" y="1647.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (4 samples, 0.07%)</title><rect x="522.8" y="1925" width="0.8" height="15.0" fill="rgb(207,168,24)" rx="2" ry="2" />
<text  x="525.84" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1169.1" y="1957" width="0.2" height="15.0" fill="rgb(249,185,45)" rx="2" ry="2" />
<text  x="1172.06" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="97.9" y="1893" width="0.2" height="15.0" fill="rgb(224,53,35)" rx="2" ry="2" />
<text  x="100.93" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="102.9" y="2021" width="0.2" height="15.0" fill="rgb(237,72,7)" rx="2" ry="2" />
<text  x="105.92" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (18 samples, 0.30%)</title><rect x="205.2" y="2021" width="3.6" height="15.0" fill="rgb(244,101,26)" rx="2" ry="2" />
<text  x="208.20" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="292.5" y="1477" width="0.6" height="15.0" fill="rgb(253,39,24)" rx="2" ry="2" />
<text  x="295.54" y="1487.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="228.7" y="1829" width="0.2" height="15.0" fill="rgb(251,203,37)" rx="2" ry="2" />
<text  x="231.73" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="618.9" y="1829" width="1.0" height="15.0" fill="rgb(223,77,2)" rx="2" ry="2" />
<text  x="621.94" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (21 samples, 0.35%)</title><rect x="165.5" y="2021" width="4.2" height="15.0" fill="rgb(218,168,11)" rx="2" ry="2" />
<text  x="168.53" y="2031.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="611.2" y="1781" width="0.2" height="15.0" fill="rgb(242,120,35)" rx="2" ry="2" />
<text  x="614.17" y="1791.5" ></text>
</g>
<g >
<title>destroy_inode (26 samples, 0.44%)</title><rect x="737.2" y="1701" width="5.2" height="15.0" fill="rgb(213,180,2)" rx="2" ry="2" />
<text  x="740.18" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="901.9" y="1973" width="0.4" height="15.0" fill="rgb(215,180,40)" rx="2" ry="2" />
<text  x="904.88" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="336.0" y="1829" width="0.2" height="15.0" fill="rgb(232,130,16)" rx="2" ry="2" />
<text  x="339.01" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="124.7" y="1749" width="0.1" height="15.0" fill="rgb(234,4,32)" rx="2" ry="2" />
<text  x="127.65" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="936.8" y="1893" width="0.2" height="15.0" fill="rgb(228,196,31)" rx="2" ry="2" />
<text  x="939.77" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="57.5" y="1669" width="0.2" height="15.0" fill="rgb(233,177,37)" rx="2" ry="2" />
<text  x="60.46" y="1679.5" ></text>
</g>
<g >
<title>d_instantiate (4 samples, 0.07%)</title><rect x="408.6" y="1941" width="0.8" height="15.0" fill="rgb(230,27,42)" rx="2" ry="2" />
<text  x="411.58" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="462.4" y="1637" width="0.2" height="15.0" fill="rgb(252,137,1)" rx="2" ry="2" />
<text  x="465.42" y="1647.5" ></text>
</g>
<g >
<title>sys_epoll_wait (102 samples, 1.72%)</title><rect x="488.1" y="1989" width="20.4" height="15.0" fill="rgb(239,39,1)" rx="2" ry="2" />
<text  x="491.14" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="802.2" y="1589" width="0.2" height="15.0" fill="rgb(238,171,39)" rx="2" ry="2" />
<text  x="805.18" y="1599.5" ></text>
</g>
<g >
<title>folly::operator!= (7 samples, 0.12%)</title><rect x="34.7" y="1989" width="1.4" height="15.0" fill="rgb(240,204,38)" rx="2" ry="2" />
<text  x="37.72" y="1999.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="832.3" y="1589" width="0.2" height="15.0" fill="rgb(209,106,16)" rx="2" ry="2" />
<text  x="835.29" y="1599.5" ></text>
</g>
<g >
<title>tcp_poll (36 samples, 0.61%)</title><rect x="498.7" y="1893" width="7.2" height="15.0" fill="rgb(236,210,41)" rx="2" ry="2" />
<text  x="501.71" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1157.5" y="1717" width="0.2" height="15.0" fill="rgb(235,150,34)" rx="2" ry="2" />
<text  x="1160.50" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="957.5" y="2005" width="3.4" height="15.0" fill="rgb(206,199,8)" rx="2" ry="2" />
<text  x="960.51" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="498.5" y="1829" width="0.2" height="15.0" fill="rgb(232,134,34)" rx="2" ry="2" />
<text  x="501.51" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="992.0" y="1925" width="0.2" height="15.0" fill="rgb(207,107,23)" rx="2" ry="2" />
<text  x="995.00" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="534.2" y="1829" width="0.2" height="15.0" fill="rgb(217,1,40)" rx="2" ry="2" />
<text  x="537.20" y="1839.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="611.2" y="1749" width="0.2" height="15.0" fill="rgb(217,92,2)" rx="2" ry="2" />
<text  x="614.17" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="78.4" y="1797" width="0.2" height="15.0" fill="rgb(234,105,21)" rx="2" ry="2" />
<text  x="81.39" y="1807.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="522.8" y="1941" width="0.8" height="15.0" fill="rgb(228,69,34)" rx="2" ry="2" />
<text  x="525.84" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1139.0" y="1941" width="0.2" height="15.0" fill="rgb(245,75,42)" rx="2" ry="2" />
<text  x="1141.96" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="856.2" y="1909" width="0.2" height="15.0" fill="rgb(221,157,48)" rx="2" ry="2" />
<text  x="859.22" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="90.6" y="1989" width="0.6" height="15.0" fill="rgb(230,136,14)" rx="2" ry="2" />
<text  x="93.55" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="579.9" y="1941" width="0.2" height="15.0" fill="rgb(210,79,2)" rx="2" ry="2" />
<text  x="582.86" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="76.0" y="1845" width="0.2" height="15.0" fill="rgb(206,68,53)" rx="2" ry="2" />
<text  x="79.00" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1158.3" y="1717" width="0.2" height="15.0" fill="rgb(212,228,49)" rx="2" ry="2" />
<text  x="1161.30" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="856.2" y="1861" width="0.2" height="15.0" fill="rgb(207,195,20)" rx="2" ry="2" />
<text  x="859.22" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="264.2" y="1589" width="0.2" height="15.0" fill="rgb(219,221,34)" rx="2" ry="2" />
<text  x="267.22" y="1599.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1106.3" y="1461" width="0.2" height="15.0" fill="rgb(215,12,52)" rx="2" ry="2" />
<text  x="1109.26" y="1471.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="508.3" y="1909" width="0.2" height="15.0" fill="rgb(220,72,41)" rx="2" ry="2" />
<text  x="511.28" y="1919.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1178.2" y="1941" width="0.2" height="15.0" fill="rgb(213,79,27)" rx="2" ry="2" />
<text  x="1181.24" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="297.3" y="1685" width="0.6" height="15.0" fill="rgb(227,107,51)" rx="2" ry="2" />
<text  x="300.32" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="141.8" y="1925" width="0.2" height="15.0" fill="rgb(232,175,2)" rx="2" ry="2" />
<text  x="144.80" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="173.1" y="1989" width="0.2" height="15.0" fill="rgb(229,167,53)" rx="2" ry="2" />
<text  x="176.10" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (52 samples, 0.88%)</title><rect x="173.1" y="2005" width="10.4" height="15.0" fill="rgb(239,57,34)" rx="2" ry="2" />
<text  x="176.10" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="397.0" y="1861" width="0.2" height="15.0" fill="rgb(245,164,18)" rx="2" ry="2" />
<text  x="400.02" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="479.0" y="1957" width="0.2" height="15.0" fill="rgb(240,216,17)" rx="2" ry="2" />
<text  x="481.97" y="1967.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="279.8" y="1845" width="0.2" height="15.0" fill="rgb(232,90,14)" rx="2" ry="2" />
<text  x="282.78" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (99 samples, 1.67%)</title><rect x="141.6" y="2005" width="19.7" height="15.0" fill="rgb(205,221,32)" rx="2" ry="2" />
<text  x="144.60" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (13 samples, 0.22%)</title><rect x="1117.4" y="1941" width="2.6" height="15.0" fill="rgb(220,46,0)" rx="2" ry="2" />
<text  x="1120.42" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="33.1" y="1973" width="0.4" height="15.0" fill="rgb(251,13,10)" rx="2" ry="2" />
<text  x="36.13" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="599.8" y="1925" width="0.4" height="15.0" fill="rgb(224,14,17)" rx="2" ry="2" />
<text  x="602.80" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="386.7" y="1813" width="0.2" height="15.0" fill="rgb(250,223,6)" rx="2" ry="2" />
<text  x="389.65" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="852.8" y="1893" width="1.0" height="15.0" fill="rgb(216,31,6)" rx="2" ry="2" />
<text  x="855.83" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="665.2" y="1797" width="0.2" height="15.0" fill="rgb(230,174,34)" rx="2" ry="2" />
<text  x="668.20" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="743.8" y="1717" width="0.8" height="15.0" fill="rgb(214,9,37)" rx="2" ry="2" />
<text  x="746.76" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="951.3" y="2005" width="0.2" height="15.0" fill="rgb(222,80,44)" rx="2" ry="2" />
<text  x="954.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (4 samples, 0.07%)</title><rect x="896.7" y="2005" width="0.8" height="15.0" fill="rgb(236,169,40)" rx="2" ry="2" />
<text  x="899.69" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="846.8" y="1797" width="0.2" height="15.0" fill="rgb(248,140,50)" rx="2" ry="2" />
<text  x="849.85" y="1807.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="940.2" y="1941" width="0.2" height="15.0" fill="rgb(213,23,24)" rx="2" ry="2" />
<text  x="943.16" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="67.0" y="1861" width="0.2" height="15.0" fill="rgb(216,216,36)" rx="2" ry="2" />
<text  x="70.03" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1012.7" y="1973" width="0.2" height="15.0" fill="rgb(252,19,27)" rx="2" ry="2" />
<text  x="1015.74" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="817.5" y="1397" width="0.2" height="15.0" fill="rgb(246,143,35)" rx="2" ry="2" />
<text  x="820.54" y="1407.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="858.6" y="1877" width="0.2" height="15.0" fill="rgb(235,200,19)" rx="2" ry="2" />
<text  x="861.61" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1012.7" y="1941" width="0.2" height="15.0" fill="rgb(231,106,35)" rx="2" ry="2" />
<text  x="1015.74" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="291.9" y="1621" width="1.2" height="15.0" fill="rgb(242,145,23)" rx="2" ry="2" />
<text  x="294.94" y="1631.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="224.1" y="1493" width="0.2" height="15.0" fill="rgb(213,14,12)" rx="2" ry="2" />
<text  x="227.15" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (3 samples, 0.05%)</title><rect x="862.0" y="1973" width="0.6" height="15.0" fill="rgb(240,109,40)" rx="2" ry="2" />
<text  x="865.00" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="527.2" y="1957" width="0.2" height="15.0" fill="rgb(218,225,25)" rx="2" ry="2" />
<text  x="530.22" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="575.9" y="1941" width="0.4" height="15.0" fill="rgb(251,149,42)" rx="2" ry="2" />
<text  x="578.87" y="1951.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="35.9" y="1973" width="0.2" height="15.0" fill="rgb(234,152,19)" rx="2" ry="2" />
<text  x="38.92" y="1983.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="119.5" y="1189" width="0.2" height="15.0" fill="rgb(211,215,54)" rx="2" ry="2" />
<text  x="122.47" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (302 samples, 5.10%)</title><rect x="421.5" y="2005" width="60.3" height="15.0" fill="rgb(250,153,40)" rx="2" ry="2" />
<text  x="424.54" y="2015.5" >do_sys..</text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="1188.4" y="1973" width="0.8" height="15.0" fill="rgb(239,39,13)" rx="2" ry="2" />
<text  x="1191.40" y="1983.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="149.8" y="1669" width="0.2" height="15.0" fill="rgb(245,154,31)" rx="2" ry="2" />
<text  x="152.77" y="1679.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="397.8" y="1893" width="0.2" height="15.0" fill="rgb(217,159,49)" rx="2" ry="2" />
<text  x="400.82" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1178.0" y="1925" width="0.2" height="15.0" fill="rgb(252,226,15)" rx="2" ry="2" />
<text  x="1181.04" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="32.1" y="1797" width="0.2" height="15.0" fill="rgb(254,99,54)" rx="2" ry="2" />
<text  x="35.13" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1126.8" y="2037" width="0.2" height="15.0" fill="rgb(212,82,34)" rx="2" ry="2" />
<text  x="1129.79" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="462.4" y="1701" width="0.2" height="15.0" fill="rgb(239,191,1)" rx="2" ry="2" />
<text  x="465.42" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="679.8" y="1957" width="0.2" height="15.0" fill="rgb(215,189,33)" rx="2" ry="2" />
<text  x="682.76" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="386.7" y="1621" width="0.2" height="15.0" fill="rgb(210,195,43)" rx="2" ry="2" />
<text  x="389.65" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="246.9" y="1909" width="0.2" height="15.0" fill="rgb(227,64,17)" rx="2" ry="2" />
<text  x="249.88" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="847.8" y="1909" width="0.2" height="15.0" fill="rgb(237,121,45)" rx="2" ry="2" />
<text  x="850.84" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (5 samples, 0.08%)</title><rect x="140.6" y="2005" width="1.0" height="15.0" fill="rgb(236,2,42)" rx="2" ry="2" />
<text  x="143.60" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1180.8" y="1813" width="0.2" height="15.0" fill="rgb(210,171,40)" rx="2" ry="2" />
<text  x="1183.83" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="225.1" y="1813" width="0.2" height="15.0" fill="rgb(228,168,12)" rx="2" ry="2" />
<text  x="228.14" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="324.4" y="1653" width="0.4" height="15.0" fill="rgb(253,49,0)" rx="2" ry="2" />
<text  x="327.44" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="955.9" y="1941" width="0.2" height="15.0" fill="rgb(240,141,6)" rx="2" ry="2" />
<text  x="958.91" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="338.2" y="2021" width="0.8" height="15.0" fill="rgb(231,35,14)" rx="2" ry="2" />
<text  x="341.20" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="948.7" y="1989" width="0.4" height="15.0" fill="rgb(219,174,17)" rx="2" ry="2" />
<text  x="951.74" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="976.1" y="2005" width="0.2" height="15.0" fill="rgb(224,57,26)" rx="2" ry="2" />
<text  x="979.05" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1008.8" y="1845" width="0.2" height="15.0" fill="rgb(220,54,16)" rx="2" ry="2" />
<text  x="1011.75" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="858.6" y="1861" width="0.2" height="15.0" fill="rgb(213,16,48)" rx="2" ry="2" />
<text  x="861.61" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="845.8" y="1909" width="0.6" height="15.0" fill="rgb(242,158,10)" rx="2" ry="2" />
<text  x="848.85" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (2 samples, 0.03%)</title><rect x="11.4" y="1829" width="0.4" height="15.0" fill="rgb(205,201,9)" rx="2" ry="2" />
<text  x="14.40" y="1839.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (6 samples, 0.10%)</title><rect x="327.6" y="1877" width="1.2" height="15.0" fill="rgb(254,212,2)" rx="2" ry="2" />
<text  x="330.63" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="674.8" y="1765" width="0.2" height="15.0" fill="rgb(253,105,26)" rx="2" ry="2" />
<text  x="677.77" y="1775.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="125.0" y="1941" width="0.2" height="15.0" fill="rgb(249,225,13)" rx="2" ry="2" />
<text  x="128.05" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="892.1" y="1813" width="0.2" height="15.0" fill="rgb(240,129,21)" rx="2" ry="2" />
<text  x="895.11" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (98 samples, 1.66%)</title><rect x="921.2" y="1989" width="19.6" height="15.0" fill="rgb(232,51,35)" rx="2" ry="2" />
<text  x="924.22" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="233.7" y="2021" width="0.2" height="15.0" fill="rgb(232,116,15)" rx="2" ry="2" />
<text  x="236.72" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="189.9" y="2005" width="0.2" height="15.0" fill="rgb(237,132,44)" rx="2" ry="2" />
<text  x="192.85" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="851.0" y="1861" width="0.2" height="15.0" fill="rgb(219,187,48)" rx="2" ry="2" />
<text  x="854.03" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="264.2" y="1845" width="0.4" height="15.0" fill="rgb(205,221,1)" rx="2" ry="2" />
<text  x="267.22" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="228.3" y="1893" width="0.2" height="15.0" fill="rgb(251,125,44)" rx="2" ry="2" />
<text  x="231.33" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (34 samples, 0.57%)</title><rect x="542.2" y="2005" width="6.8" height="15.0" fill="rgb(247,50,28)" rx="2" ry="2" />
<text  x="545.18" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="902.7" y="2005" width="0.2" height="15.0" fill="rgb(247,133,52)" rx="2" ry="2" />
<text  x="905.68" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="546.4" y="1909" width="0.8" height="15.0" fill="rgb(224,203,9)" rx="2" ry="2" />
<text  x="549.36" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="336.0" y="1781" width="0.2" height="15.0" fill="rgb(232,70,43)" rx="2" ry="2" />
<text  x="339.01" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="824.9" y="1573" width="0.2" height="15.0" fill="rgb(240,170,27)" rx="2" ry="2" />
<text  x="827.91" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="53.5" y="1877" width="0.2" height="15.0" fill="rgb(245,129,53)" rx="2" ry="2" />
<text  x="56.47" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="104.3" y="1861" width="20.4" height="15.0" fill="rgb(226,228,43)" rx="2" ry="2" />
<text  x="107.31" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="709" width="14.0" height="15.0" fill="rgb(249,70,51)" rx="2" ry="2" />
<text  x="108.11" y="719.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="481.2" y="1685" width="0.2" height="15.0" fill="rgb(228,95,13)" rx="2" ry="2" />
<text  x="484.16" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="972.7" y="1829" width="0.2" height="15.0" fill="rgb(219,59,5)" rx="2" ry="2" />
<text  x="975.66" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="225.9" y="1669" width="0.2" height="15.0" fill="rgb(209,193,29)" rx="2" ry="2" />
<text  x="228.94" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="545.2" y="1765" width="0.2" height="15.0" fill="rgb(228,181,46)" rx="2" ry="2" />
<text  x="548.17" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="999.0" y="1957" width="0.4" height="15.0" fill="rgb(242,3,3)" rx="2" ry="2" />
<text  x="1001.98" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="563.3" y="1765" width="0.6" height="15.0" fill="rgb(225,209,30)" rx="2" ry="2" />
<text  x="566.31" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="864.2" y="1989" width="0.4" height="15.0" fill="rgb(205,101,42)" rx="2" ry="2" />
<text  x="867.19" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="571.5" y="1797" width="0.2" height="15.0" fill="rgb(209,198,53)" rx="2" ry="2" />
<text  x="574.49" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="975.7" y="2005" width="0.2" height="15.0" fill="rgb(218,225,38)" rx="2" ry="2" />
<text  x="978.65" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="1111.6" y="1749" width="0.2" height="15.0" fill="rgb(251,118,52)" rx="2" ry="2" />
<text  x="1114.64" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="482.6" y="1877" width="0.6" height="15.0" fill="rgb(222,185,35)" rx="2" ry="2" />
<text  x="485.56" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="824.9" y="1509" width="0.2" height="15.0" fill="rgb(241,208,50)" rx="2" ry="2" />
<text  x="827.91" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="892.5" y="1973" width="0.2" height="15.0" fill="rgb(227,24,18)" rx="2" ry="2" />
<text  x="895.51" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="571.5" y="1781" width="0.2" height="15.0" fill="rgb(214,198,33)" rx="2" ry="2" />
<text  x="574.49" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="563.3" y="1877" width="0.6" height="15.0" fill="rgb(244,34,53)" rx="2" ry="2" />
<text  x="566.31" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="844.9" y="1909" width="0.9" height="15.0" fill="rgb(229,213,14)" rx="2" ry="2" />
<text  x="847.85" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1180.8" y="1893" width="0.2" height="15.0" fill="rgb(246,217,9)" rx="2" ry="2" />
<text  x="1183.83" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="330.2" y="1813" width="0.2" height="15.0" fill="rgb(218,95,9)" rx="2" ry="2" />
<text  x="333.22" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="528.4" y="1909" width="0.8" height="15.0" fill="rgb(207,214,7)" rx="2" ry="2" />
<text  x="531.42" y="1919.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="764.7" y="1669" width="0.4" height="15.0" fill="rgb(231,139,37)" rx="2" ry="2" />
<text  x="767.70" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="32.1" y="1957" width="0.2" height="15.0" fill="rgb(224,152,53)" rx="2" ry="2" />
<text  x="35.13" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="675.2" y="1637" width="0.2" height="15.0" fill="rgb(206,173,13)" rx="2" ry="2" />
<text  x="678.17" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="679.8" y="1973" width="0.2" height="15.0" fill="rgb(222,115,14)" rx="2" ry="2" />
<text  x="682.76" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="481.0" y="1797" width="0.4" height="15.0" fill="rgb(218,119,19)" rx="2" ry="2" />
<text  x="483.96" y="1807.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.17%)</title><rect x="1023.9" y="2037" width="2.0" height="15.0" fill="rgb(222,152,35)" rx="2" ry="2" />
<text  x="1026.91" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="294.1" y="1701" width="1.2" height="15.0" fill="rgb(251,198,45)" rx="2" ry="2" />
<text  x="297.13" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.4" y="1813" width="0.2" height="15.0" fill="rgb(239,175,9)" rx="2" ry="2" />
<text  x="281.38" y="1823.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="482.6" y="1781" width="0.2" height="15.0" fill="rgb(245,192,26)" rx="2" ry="2" />
<text  x="485.56" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1119.8" y="1781" width="0.2" height="15.0" fill="rgb(216,27,26)" rx="2" ry="2" />
<text  x="1122.81" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="953.5" y="2005" width="2.4" height="15.0" fill="rgb(209,125,41)" rx="2" ry="2" />
<text  x="956.52" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="534.2" y="1653" width="0.2" height="15.0" fill="rgb(215,226,17)" rx="2" ry="2" />
<text  x="537.20" y="1663.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="481.2" y="1637" width="0.2" height="15.0" fill="rgb(224,152,19)" rx="2" ry="2" />
<text  x="484.16" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="982.0" y="1909" width="0.2" height="15.0" fill="rgb(216,33,41)" rx="2" ry="2" />
<text  x="985.03" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="858.6" y="1717" width="0.2" height="15.0" fill="rgb(232,150,6)" rx="2" ry="2" />
<text  x="861.61" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="644.9" y="1957" width="0.2" height="15.0" fill="rgb(239,208,21)" rx="2" ry="2" />
<text  x="647.86" y="1967.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="40.3" y="2005" width="0.2" height="15.0" fill="rgb(236,142,39)" rx="2" ry="2" />
<text  x="43.31" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="996.4" y="1957" width="0.2" height="15.0" fill="rgb(228,152,13)" rx="2" ry="2" />
<text  x="999.39" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="412.0" y="1877" width="0.4" height="15.0" fill="rgb(214,93,24)" rx="2" ry="2" />
<text  x="414.97" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="547.2" y="1733" width="0.2" height="15.0" fill="rgb(240,159,53)" rx="2" ry="2" />
<text  x="550.16" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="151.6" y="1893" width="0.2" height="15.0" fill="rgb(227,88,31)" rx="2" ry="2" />
<text  x="154.57" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="697.9" y="1813" width="0.2" height="15.0" fill="rgb(206,178,54)" rx="2" ry="2" />
<text  x="700.90" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="40.1" y="1877" width="0.2" height="15.0" fill="rgb(238,182,22)" rx="2" ry="2" />
<text  x="43.11" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="324.4" y="1749" width="0.4" height="15.0" fill="rgb(241,226,43)" rx="2" ry="2" />
<text  x="327.44" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (26 samples, 0.44%)</title><rect x="606.4" y="1909" width="5.2" height="15.0" fill="rgb(207,220,45)" rx="2" ry="2" />
<text  x="609.38" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="386.9" y="1781" width="0.1" height="15.0" fill="rgb(251,113,48)" rx="2" ry="2" />
<text  x="389.85" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="852.8" y="1909" width="1.0" height="15.0" fill="rgb(218,228,31)" rx="2" ry="2" />
<text  x="855.83" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="69.8" y="1973" width="0.2" height="15.0" fill="rgb(226,18,48)" rx="2" ry="2" />
<text  x="72.82" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="462.2" y="1893" width="0.2" height="15.0" fill="rgb(254,176,31)" rx="2" ry="2" />
<text  x="465.22" y="1903.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="180.5" y="1973" width="0.2" height="15.0" fill="rgb(245,101,34)" rx="2" ry="2" />
<text  x="183.48" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="157.9" y="1717" width="0.2" height="15.0" fill="rgb(212,179,11)" rx="2" ry="2" />
<text  x="160.95" y="1727.5" ></text>
</g>
<g >
<title>__libc_fcntl (2 samples, 0.03%)</title><rect x="233.7" y="2037" width="0.4" height="15.0" fill="rgb(218,211,44)" rx="2" ry="2" />
<text  x="236.72" y="2047.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (5 samples, 0.08%)</title><rect x="618.9" y="1925" width="1.0" height="15.0" fill="rgb(239,140,5)" rx="2" ry="2" />
<text  x="621.94" y="1935.5" ></text>
</g>
<g >
<title>security_file_free (15 samples, 0.25%)</title><rect x="746.6" y="1797" width="2.9" height="15.0" fill="rgb(244,47,48)" rx="2" ry="2" />
<text  x="749.55" y="1807.5" ></text>
</g>
<g >
<title>sys_close (2 samples, 0.03%)</title><rect x="836.3" y="1877" width="0.4" height="15.0" fill="rgb(212,46,43)" rx="2" ry="2" />
<text  x="839.28" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="338.6" y="1909" width="0.4" height="15.0" fill="rgb(250,22,53)" rx="2" ry="2" />
<text  x="341.60" y="1919.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="160.7" y="1925" width="0.2" height="15.0" fill="rgb(218,18,49)" rx="2" ry="2" />
<text  x="163.74" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="231.3" y="1669" width="0.2" height="15.0" fill="rgb(227,78,54)" rx="2" ry="2" />
<text  x="234.32" y="1679.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="988.0" y="1909" width="0.4" height="15.0" fill="rgb(247,153,42)" rx="2" ry="2" />
<text  x="991.02" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (40 samples, 0.68%)</title><rect x="791.6" y="1525" width="8.0" height="15.0" fill="rgb(251,2,38)" rx="2" ry="2" />
<text  x="794.62" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (11 samples, 0.19%)</title><rect x="531.2" y="1973" width="2.2" height="15.0" fill="rgb(212,188,6)" rx="2" ry="2" />
<text  x="534.21" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="189.9" y="1845" width="0.2" height="15.0" fill="rgb(212,82,50)" rx="2" ry="2" />
<text  x="192.85" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="725.6" y="1669" width="0.2" height="15.0" fill="rgb(244,124,31)" rx="2" ry="2" />
<text  x="728.62" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="539.0" y="1957" width="0.2" height="15.0" fill="rgb(211,138,1)" rx="2" ry="2" />
<text  x="541.99" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="626.9" y="1957" width="0.4" height="15.0" fill="rgb(223,21,1)" rx="2" ry="2" />
<text  x="629.92" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="134.4" y="1829" width="0.2" height="15.0" fill="rgb(247,77,2)" rx="2" ry="2" />
<text  x="137.42" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="643.3" y="1957" width="0.2" height="15.0" fill="rgb(213,182,37)" rx="2" ry="2" />
<text  x="646.27" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="891.7" y="1893" width="0.6" height="15.0" fill="rgb(222,147,48)" rx="2" ry="2" />
<text  x="894.71" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="124.7" y="1829" width="0.1" height="15.0" fill="rgb(223,19,14)" rx="2" ry="2" />
<text  x="127.65" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="542.0" y="1637" width="0.2" height="15.0" fill="rgb(224,103,54)" rx="2" ry="2" />
<text  x="544.98" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1120.4" y="1973" width="0.2" height="15.0" fill="rgb(229,215,41)" rx="2" ry="2" />
<text  x="1123.41" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="283.2" y="1733" width="0.2" height="15.0" fill="rgb(208,160,40)" rx="2" ry="2" />
<text  x="286.17" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="912.6" y="1957" width="0.2" height="15.0" fill="rgb(236,175,24)" rx="2" ry="2" />
<text  x="915.65" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="863.2" y="1941" width="0.2" height="15.0" fill="rgb(221,111,11)" rx="2" ry="2" />
<text  x="866.20" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="102.7" y="1749" width="0.2" height="15.0" fill="rgb(249,66,34)" rx="2" ry="2" />
<text  x="105.72" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="618.9" y="1909" width="1.0" height="15.0" fill="rgb(212,193,18)" rx="2" ry="2" />
<text  x="621.94" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="336.0" y="1749" width="0.2" height="15.0" fill="rgb(244,155,21)" rx="2" ry="2" />
<text  x="339.01" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="858.4" y="1925" width="0.2" height="15.0" fill="rgb(211,26,13)" rx="2" ry="2" />
<text  x="861.41" y="1935.5" ></text>
</g>
<g >
<title>__memchr_avx2 (7 samples, 0.12%)</title><rect x="342.8" y="2037" width="1.4" height="15.0" fill="rgb(244,75,17)" rx="2" ry="2" />
<text  x="345.78" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.1" y="1845" width="0.2" height="15.0" fill="rgb(210,90,19)" rx="2" ry="2" />
<text  x="887.13" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="912.6" y="1893" width="0.2" height="15.0" fill="rgb(246,36,43)" rx="2" ry="2" />
<text  x="915.65" y="1903.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="853.4" y="1845" width="0.2" height="15.0" fill="rgb(250,75,50)" rx="2" ry="2" />
<text  x="856.43" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="883.5" y="1861" width="0.2" height="15.0" fill="rgb(221,175,37)" rx="2" ry="2" />
<text  x="886.53" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="624.9" y="2005" width="0.8" height="15.0" fill="rgb(238,35,53)" rx="2" ry="2" />
<text  x="627.92" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="124.7" y="1861" width="0.1" height="15.0" fill="rgb(246,91,52)" rx="2" ry="2" />
<text  x="127.65" y="1871.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="1121.6" y="1669" width="0.2" height="15.0" fill="rgb(217,223,25)" rx="2" ry="2" />
<text  x="1124.61" y="1679.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="674.0" y="1813" width="0.2" height="15.0" fill="rgb(221,18,53)" rx="2" ry="2" />
<text  x="676.97" y="1823.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="896.5" y="1925" width="0.2" height="15.0" fill="rgb(244,137,41)" rx="2" ry="2" />
<text  x="899.50" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="744.6" y="1765" width="0.4" height="15.0" fill="rgb(223,59,53)" rx="2" ry="2" />
<text  x="747.56" y="1775.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="63.6" y="1909" width="0.6" height="15.0" fill="rgb(239,185,24)" rx="2" ry="2" />
<text  x="66.64" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="324.4" y="1733" width="0.4" height="15.0" fill="rgb(209,4,46)" rx="2" ry="2" />
<text  x="327.44" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.8" y="1861" width="0.2" height="15.0" fill="rgb(240,179,16)" rx="2" ry="2" />
<text  x="146.79" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="268.4" y="1829" width="0.2" height="15.0" fill="rgb(214,83,47)" rx="2" ry="2" />
<text  x="271.41" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="518.8" y="1989" width="0.8" height="15.0" fill="rgb(227,164,38)" rx="2" ry="2" />
<text  x="521.85" y="1999.5" ></text>
</g>
<g >
<title>inet_getname (2 samples, 0.03%)</title><rect x="384.7" y="1957" width="0.4" height="15.0" fill="rgb(207,60,41)" rx="2" ry="2" />
<text  x="387.66" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (2 samples, 0.03%)</title><rect x="679.4" y="2021" width="0.4" height="15.0" fill="rgb(205,43,43)" rx="2" ry="2" />
<text  x="682.36" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="547.2" y="1749" width="0.2" height="15.0" fill="rgb(209,158,36)" rx="2" ry="2" />
<text  x="550.16" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="176.3" y="1957" width="0.2" height="15.0" fill="rgb(224,227,44)" rx="2" ry="2" />
<text  x="179.29" y="1967.5" ></text>
</g>
<g >
<title>__fdget (14 samples, 0.24%)</title><rect x="1117.2" y="1957" width="2.8" height="15.0" fill="rgb(209,14,17)" rx="2" ry="2" />
<text  x="1120.22" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="224.1" y="1813" width="0.2" height="15.0" fill="rgb(228,200,28)" rx="2" ry="2" />
<text  x="227.15" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (6 samples, 0.10%)</title><rect x="1169.7" y="1973" width="1.2" height="15.0" fill="rgb(251,4,19)" rx="2" ry="2" />
<text  x="1172.66" y="1983.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.02%)</title><rect x="295.5" y="1669" width="0.2" height="15.0" fill="rgb(206,194,14)" rx="2" ry="2" />
<text  x="298.53" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.10%)</title><rect x="915.2" y="1989" width="1.2" height="15.0" fill="rgb(225,128,10)" rx="2" ry="2" />
<text  x="918.24" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="149.8" y="1733" width="0.2" height="15.0" fill="rgb(223,107,7)" rx="2" ry="2" />
<text  x="152.77" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="1126.8" y="1733" width="0.2" height="15.0" fill="rgb(230,190,20)" rx="2" ry="2" />
<text  x="1129.79" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (10 samples, 0.17%)</title><rect x="632.5" y="2005" width="2.0" height="15.0" fill="rgb(209,132,3)" rx="2" ry="2" />
<text  x="635.50" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="972.7" y="1973" width="0.2" height="15.0" fill="rgb(253,76,23)" rx="2" ry="2" />
<text  x="975.66" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="508.1" y="1701" width="0.2" height="15.0" fill="rgb(211,119,51)" rx="2" ry="2" />
<text  x="511.08" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (3 samples, 0.05%)</title><rect x="44.1" y="1989" width="0.6" height="15.0" fill="rgb(223,156,2)" rx="2" ry="2" />
<text  x="47.10" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="611.4" y="1749" width="0.2" height="15.0" fill="rgb(249,57,29)" rx="2" ry="2" />
<text  x="614.37" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="887.1" y="1685" width="0.2" height="15.0" fill="rgb(247,142,49)" rx="2" ry="2" />
<text  x="890.12" y="1695.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="1180.8" y="1717" width="0.2" height="15.0" fill="rgb(249,206,8)" rx="2" ry="2" />
<text  x="1183.83" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="246.9" y="1829" width="0.2" height="15.0" fill="rgb(239,217,18)" rx="2" ry="2" />
<text  x="249.88" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="462.4" y="1557" width="0.2" height="15.0" fill="rgb(232,201,11)" rx="2" ry="2" />
<text  x="465.42" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (9 samples, 0.15%)</title><rect x="181.3" y="1973" width="1.8" height="15.0" fill="rgb(223,160,23)" rx="2" ry="2" />
<text  x="184.28" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="377.5" y="1877" width="0.2" height="15.0" fill="rgb(253,172,29)" rx="2" ry="2" />
<text  x="380.48" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (7 samples, 0.12%)</title><rect x="626.5" y="2037" width="1.4" height="15.0" fill="rgb(225,193,2)" rx="2" ry="2" />
<text  x="629.52" y="2047.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="279.4" y="1845" width="0.2" height="15.0" fill="rgb(212,229,30)" rx="2" ry="2" />
<text  x="282.38" y="1855.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="836.7" y="1621" width="0.2" height="15.0" fill="rgb(246,215,33)" rx="2" ry="2" />
<text  x="839.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="88.0" y="1925" width="0.4" height="15.0" fill="rgb(232,155,45)" rx="2" ry="2" />
<text  x="90.96" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="782.2" y="1317" width="0.2" height="15.0" fill="rgb(233,222,35)" rx="2" ry="2" />
<text  x="785.24" y="1327.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1019.3" y="1941" width="0.2" height="15.0" fill="rgb(244,24,34)" rx="2" ry="2" />
<text  x="1022.32" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="640.5" y="1733" width="0.2" height="15.0" fill="rgb(235,145,51)" rx="2" ry="2" />
<text  x="643.48" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="851.0" y="1813" width="0.2" height="15.0" fill="rgb(245,79,33)" rx="2" ry="2" />
<text  x="854.03" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="542.0" y="1685" width="0.2" height="15.0" fill="rgb(246,93,26)" rx="2" ry="2" />
<text  x="544.98" y="1695.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="547.2" y="1637" width="0.2" height="15.0" fill="rgb(227,217,52)" rx="2" ry="2" />
<text  x="550.16" y="1647.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1132.4" y="1973" width="0.2" height="15.0" fill="rgb(224,56,45)" rx="2" ry="2" />
<text  x="1135.38" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="482.8" y="1589" width="0.2" height="15.0" fill="rgb(216,8,40)" rx="2" ry="2" />
<text  x="485.76" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="843.3" y="1893" width="1.0" height="15.0" fill="rgb(233,99,48)" rx="2" ry="2" />
<text  x="846.26" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="648.9" y="1925" width="0.2" height="15.0" fill="rgb(239,48,49)" rx="2" ry="2" />
<text  x="651.85" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="802.0" y="1573" width="0.2" height="15.0" fill="rgb(233,155,5)" rx="2" ry="2" />
<text  x="804.98" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1012.7" y="1701" width="0.2" height="15.0" fill="rgb(238,57,3)" rx="2" ry="2" />
<text  x="1015.74" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(251,147,40)" rx="2" ry="2" />
<text  x="1192.20" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (3 samples, 0.05%)</title><rect x="518.2" y="1973" width="0.6" height="15.0" fill="rgb(225,102,39)" rx="2" ry="2" />
<text  x="521.25" y="1983.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="453.8" y="1605" width="0.2" height="15.0" fill="rgb(217,225,4)" rx="2" ry="2" />
<text  x="456.85" y="1615.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="884.7" y="1669" width="0.2" height="15.0" fill="rgb(217,210,45)" rx="2" ry="2" />
<text  x="887.73" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="488.7" y="1845" width="0.2" height="15.0" fill="rgb(248,217,29)" rx="2" ry="2" />
<text  x="491.74" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.7" y="1861" width="0.2" height="15.0" fill="rgb(224,178,29)" rx="2" ry="2" />
<text  x="887.73" y="1871.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="611.4" y="1525" width="0.2" height="15.0" fill="rgb(245,115,53)" rx="2" ry="2" />
<text  x="614.37" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="871.4" y="1957" width="0.2" height="15.0" fill="rgb(250,118,5)" rx="2" ry="2" />
<text  x="874.37" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="548.2" y="1973" width="0.2" height="15.0" fill="rgb(239,18,19)" rx="2" ry="2" />
<text  x="551.16" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="903.1" y="2037" width="0.2" height="15.0" fill="rgb(220,216,21)" rx="2" ry="2" />
<text  x="906.08" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="482.8" y="1605" width="0.2" height="15.0" fill="rgb(218,134,33)" rx="2" ry="2" />
<text  x="485.76" y="1615.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1140.2" y="1989" width="0.2" height="15.0" fill="rgb(253,186,48)" rx="2" ry="2" />
<text  x="1143.15" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="880.5" y="1845" width="0.2" height="15.0" fill="rgb(242,178,17)" rx="2" ry="2" />
<text  x="883.54" y="1855.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="292.5" y="1493" width="0.6" height="15.0" fill="rgb(254,119,15)" rx="2" ry="2" />
<text  x="295.54" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.1" y="1141" width="14.4" height="15.0" fill="rgb(232,157,44)" rx="2" ry="2" />
<text  x="108.11" y="1151.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (2 samples, 0.03%)</title><rect x="214.4" y="1941" width="0.4" height="15.0" fill="rgb(251,171,47)" rx="2" ry="2" />
<text  x="217.38" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="482.6" y="1909" width="0.6" height="15.0" fill="rgb(209,32,48)" rx="2" ry="2" />
<text  x="485.56" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="550.4" y="1957" width="0.5" height="15.0" fill="rgb(242,122,10)" rx="2" ry="2" />
<text  x="553.35" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (5 samples, 0.08%)</title><rect x="1165.3" y="2021" width="1.0" height="15.0" fill="rgb(251,216,10)" rx="2" ry="2" />
<text  x="1168.28" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="157.0" y="1605" width="0.2" height="15.0" fill="rgb(222,82,43)" rx="2" ry="2" />
<text  x="159.95" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="104.5" y="1717" width="18.4" height="15.0" fill="rgb(218,15,27)" rx="2" ry="2" />
<text  x="107.51" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="885.9" y="1941" width="0.2" height="15.0" fill="rgb(254,148,41)" rx="2" ry="2" />
<text  x="888.93" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="836.7" y="1749" width="0.2" height="15.0" fill="rgb(240,157,21)" rx="2" ry="2" />
<text  x="839.68" y="1759.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="120.1" y="1237" width="0.2" height="15.0" fill="rgb(220,40,23)" rx="2" ry="2" />
<text  x="123.06" y="1247.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (2 samples, 0.03%)</title><rect x="580.3" y="2005" width="0.4" height="15.0" fill="rgb(216,47,36)" rx="2" ry="2" />
<text  x="583.26" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="118.7" y="117" width="0.2" height="15.0" fill="rgb(247,113,23)" rx="2" ry="2" />
<text  x="121.67" y="127.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="138.8" y="1973" width="0.2" height="15.0" fill="rgb(217,196,17)" rx="2" ry="2" />
<text  x="141.81" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="377.7" y="1781" width="0.2" height="15.0" fill="rgb(241,90,33)" rx="2" ry="2" />
<text  x="380.68" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="832.3" y="1781" width="0.2" height="15.0" fill="rgb(214,200,12)" rx="2" ry="2" />
<text  x="835.29" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (1 samples, 0.02%)</title><rect x="971.1" y="2037" width="0.2" height="15.0" fill="rgb(230,151,17)" rx="2" ry="2" />
<text  x="974.07" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="149.8" y="1685" width="0.2" height="15.0" fill="rgb(209,126,39)" rx="2" ry="2" />
<text  x="152.77" y="1695.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="991.4" y="1909" width="0.2" height="15.0" fill="rgb(226,76,7)" rx="2" ry="2" />
<text  x="994.41" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="615.8" y="1781" width="0.2" height="15.0" fill="rgb(246,52,34)" rx="2" ry="2" />
<text  x="618.75" y="1791.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1137.2" y="1989" width="0.2" height="15.0" fill="rgb(208,73,32)" rx="2" ry="2" />
<text  x="1140.16" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="95.3" y="2005" width="0.4" height="15.0" fill="rgb(220,13,13)" rx="2" ry="2" />
<text  x="98.34" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="483.0" y="1749" width="0.2" height="15.0" fill="rgb(229,136,4)" rx="2" ry="2" />
<text  x="485.96" y="1759.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="17.8" y="1829" width="0.2" height="15.0" fill="rgb(215,184,22)" rx="2" ry="2" />
<text  x="20.78" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="144.6" y="1925" width="0.2" height="15.0" fill="rgb(246,126,14)" rx="2" ry="2" />
<text  x="147.59" y="1935.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="166.9" y="1989" width="0.2" height="15.0" fill="rgb(219,100,20)" rx="2" ry="2" />
<text  x="169.92" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="104.5" y="1669" width="0.2" height="15.0" fill="rgb(228,94,2)" rx="2" ry="2" />
<text  x="107.51" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="421" width="14.0" height="15.0" fill="rgb(248,115,17)" rx="2" ry="2" />
<text  x="108.11" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="622.1" y="2005" width="0.2" height="15.0" fill="rgb(229,104,3)" rx="2" ry="2" />
<text  x="625.13" y="2015.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (6 samples, 0.10%)</title><rect x="1007.6" y="2005" width="1.2" height="15.0" fill="rgb(249,23,11)" rx="2" ry="2" />
<text  x="1010.56" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="89.4" y="1973" width="0.2" height="15.0" fill="rgb(223,92,30)" rx="2" ry="2" />
<text  x="92.36" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="462.4" y="1717" width="0.2" height="15.0" fill="rgb(207,146,51)" rx="2" ry="2" />
<text  x="465.42" y="1727.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="77.6" y="1957" width="0.2" height="15.0" fill="rgb(252,203,2)" rx="2" ry="2" />
<text  x="80.59" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="1138.6" y="1989" width="0.4" height="15.0" fill="rgb(247,45,42)" rx="2" ry="2" />
<text  x="1141.56" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="547.2" y="1925" width="0.2" height="15.0" fill="rgb(253,69,42)" rx="2" ry="2" />
<text  x="550.16" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="122.5" y="1669" width="0.2" height="15.0" fill="rgb(233,65,35)" rx="2" ry="2" />
<text  x="125.46" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="40.1" y="1813" width="0.2" height="15.0" fill="rgb(209,154,29)" rx="2" ry="2" />
<text  x="43.11" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (3 samples, 0.05%)</title><rect x="906.7" y="1973" width="0.6" height="15.0" fill="rgb(226,37,50)" rx="2" ry="2" />
<text  x="909.66" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="225.9" y="1813" width="0.2" height="15.0" fill="rgb(223,199,29)" rx="2" ry="2" />
<text  x="228.94" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="643.1" y="1925" width="0.2" height="15.0" fill="rgb(226,63,15)" rx="2" ry="2" />
<text  x="646.07" y="1935.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="78.4" y="1669" width="0.2" height="15.0" fill="rgb(210,39,34)" rx="2" ry="2" />
<text  x="81.39" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.2" y="1909" width="0.2" height="15.0" fill="rgb(232,22,23)" rx="2" ry="2" />
<text  x="145.20" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="372.1" y="1765" width="0.2" height="15.0" fill="rgb(220,51,24)" rx="2" ry="2" />
<text  x="375.10" y="1775.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="345.4" y="2037" width="1.0" height="15.0" fill="rgb(231,69,54)" rx="2" ry="2" />
<text  x="348.38" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="157.9" y="1829" width="0.2" height="15.0" fill="rgb(241,39,38)" rx="2" ry="2" />
<text  x="160.95" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="756.1" y="1605" width="0.2" height="15.0" fill="rgb(211,9,3)" rx="2" ry="2" />
<text  x="759.12" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="802.2" y="1621" width="0.2" height="15.0" fill="rgb(217,148,0)" rx="2" ry="2" />
<text  x="805.18" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1119.8" y="1845" width="0.2" height="15.0" fill="rgb(208,207,41)" rx="2" ry="2" />
<text  x="1122.81" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="954.9" y="1973" width="0.6" height="15.0" fill="rgb(230,224,50)" rx="2" ry="2" />
<text  x="957.92" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="665.2" y="1733" width="0.2" height="15.0" fill="rgb(223,19,15)" rx="2" ry="2" />
<text  x="668.20" y="1743.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="615.2" y="1845" width="0.6" height="15.0" fill="rgb(229,159,0)" rx="2" ry="2" />
<text  x="618.15" y="1855.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="920.8" y="1989" width="0.4" height="15.0" fill="rgb(224,164,50)" rx="2" ry="2" />
<text  x="923.82" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.7" y="1893" width="0.2" height="15.0" fill="rgb(239,181,6)" rx="2" ry="2" />
<text  x="887.73" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1116.2" y="1893" width="0.2" height="15.0" fill="rgb(241,65,48)" rx="2" ry="2" />
<text  x="1119.23" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="627.1" y="1925" width="0.2" height="15.0" fill="rgb(205,106,7)" rx="2" ry="2" />
<text  x="630.12" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="550.9" y="1957" width="1.0" height="15.0" fill="rgb(236,179,53)" rx="2" ry="2" />
<text  x="553.95" y="1967.5" ></text>
</g>
<g >
<title>vfprintf (22 samples, 0.37%)</title><rect x="194.6" y="2021" width="4.4" height="15.0" fill="rgb(219,106,39)" rx="2" ry="2" />
<text  x="197.64" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (431 samples, 7.28%)</title><rect x="1034.7" y="2037" width="85.9" height="15.0" fill="rgb(231,219,52)" rx="2" ry="2" />
<text  x="1037.67" y="2047.5" >entry_SYSC..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="542.0" y="1941" width="0.2" height="15.0" fill="rgb(248,135,27)" rx="2" ry="2" />
<text  x="544.98" y="1951.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="595.2" y="1749" width="0.2" height="15.0" fill="rgb(218,79,41)" rx="2" ry="2" />
<text  x="598.21" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="137.6" y="1973" width="0.4" height="15.0" fill="rgb(235,26,16)" rx="2" ry="2" />
<text  x="140.61" y="1983.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="675.0" y="1669" width="0.2" height="15.0" fill="rgb(250,194,54)" rx="2" ry="2" />
<text  x="677.97" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="547.2" y="1861" width="0.2" height="15.0" fill="rgb(227,135,41)" rx="2" ry="2" />
<text  x="550.16" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="372.1" y="1749" width="0.2" height="15.0" fill="rgb(222,70,4)" rx="2" ry="2" />
<text  x="375.10" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="78.4" y="1765" width="0.2" height="15.0" fill="rgb(241,116,38)" rx="2" ry="2" />
<text  x="81.39" y="1775.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="317.7" y="1813" width="0.4" height="15.0" fill="rgb(236,85,22)" rx="2" ry="2" />
<text  x="320.66" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="568.3" y="2005" width="0.2" height="15.0" fill="rgb(212,152,7)" rx="2" ry="2" />
<text  x="571.30" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="224.1" y="1733" width="0.2" height="15.0" fill="rgb(251,22,19)" rx="2" ry="2" />
<text  x="227.15" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="310.3" y="1557" width="0.2" height="15.0" fill="rgb(219,33,54)" rx="2" ry="2" />
<text  x="313.28" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 1.06%)</title><rect x="634.5" y="2021" width="12.6" height="15.0" fill="rgb(208,161,33)" rx="2" ry="2" />
<text  x="637.49" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="247.1" y="1765" width="0.2" height="15.0" fill="rgb(209,38,4)" rx="2" ry="2" />
<text  x="250.08" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="157.0" y="1701" width="0.2" height="15.0" fill="rgb(238,71,29)" rx="2" ry="2" />
<text  x="159.95" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="969.3" y="2005" width="0.2" height="15.0" fill="rgb(209,87,34)" rx="2" ry="2" />
<text  x="972.27" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="756.1" y="1621" width="0.2" height="15.0" fill="rgb(223,189,2)" rx="2" ry="2" />
<text  x="759.12" y="1631.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="161.7" y="2005" width="0.2" height="15.0" fill="rgb(249,207,49)" rx="2" ry="2" />
<text  x="164.74" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="884.7" y="1765" width="0.2" height="15.0" fill="rgb(234,99,44)" rx="2" ry="2" />
<text  x="887.73" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="903.7" y="1989" width="2.0" height="15.0" fill="rgb(240,220,7)" rx="2" ry="2" />
<text  x="906.67" y="1999.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (1 samples, 0.02%)</title><rect x="38.5" y="2005" width="0.2" height="15.0" fill="rgb(249,63,12)" rx="2" ry="2" />
<text  x="41.51" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (7 samples, 0.12%)</title><rect x="860.0" y="1989" width="1.4" height="15.0" fill="rgb(209,38,44)" rx="2" ry="2" />
<text  x="863.01" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="53.5" y="1765" width="0.2" height="15.0" fill="rgb(242,58,30)" rx="2" ry="2" />
<text  x="56.47" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1134.4" y="2005" width="0.4" height="15.0" fill="rgb(219,168,15)" rx="2" ry="2" />
<text  x="1137.37" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (28 samples, 0.47%)</title><rect x="11.2" y="1861" width="5.6" height="15.0" fill="rgb(225,67,31)" rx="2" ry="2" />
<text  x="14.20" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (2 samples, 0.03%)</title><rect x="962.9" y="2037" width="0.4" height="15.0" fill="rgb(219,148,33)" rx="2" ry="2" />
<text  x="965.89" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (13 samples, 0.22%)</title><rect x="177.3" y="1989" width="2.6" height="15.0" fill="rgb(234,132,3)" rx="2" ry="2" />
<text  x="180.29" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="462.4" y="1509" width="0.2" height="15.0" fill="rgb(207,28,35)" rx="2" ry="2" />
<text  x="465.42" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="141.8" y="1909" width="0.2" height="15.0" fill="rgb(241,200,21)" rx="2" ry="2" />
<text  x="144.80" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (71 samples, 1.20%)</title><rect x="663.0" y="1973" width="14.2" height="15.0" fill="rgb(216,37,49)" rx="2" ry="2" />
<text  x="666.01" y="1983.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2005" width="0.4" height="15.0" fill="rgb(231,63,41)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="690.7" y="1893" width="0.4" height="15.0" fill="rgb(208,205,14)" rx="2" ry="2" />
<text  x="693.72" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="157.4" y="1813" width="0.1" height="15.0" fill="rgb(216,202,33)" rx="2" ry="2" />
<text  x="160.35" y="1823.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (22 samples, 0.37%)</title><rect x="154.0" y="1925" width="4.3" height="15.0" fill="rgb(243,85,39)" rx="2" ry="2" />
<text  x="156.96" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="858.4" y="1781" width="0.2" height="15.0" fill="rgb(229,177,36)" rx="2" ry="2" />
<text  x="861.41" y="1791.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="914.0" y="1989" width="0.2" height="15.0" fill="rgb(210,203,33)" rx="2" ry="2" />
<text  x="917.04" y="1999.5" ></text>
</g>
<g >
<title>process_backlog (7 samples, 0.12%)</title><rect x="291.7" y="1653" width="1.4" height="15.0" fill="rgb(227,202,42)" rx="2" ry="2" />
<text  x="294.74" y="1663.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="542.0" y="1589" width="0.2" height="15.0" fill="rgb(254,201,37)" rx="2" ry="2" />
<text  x="544.98" y="1599.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (1 samples, 0.02%)</title><rect x="25.4" y="2037" width="0.2" height="15.0" fill="rgb(209,53,31)" rx="2" ry="2" />
<text  x="28.35" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1130.0" y="2037" width="0.6" height="15.0" fill="rgb(216,189,46)" rx="2" ry="2" />
<text  x="1132.98" y="2047.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="386.5" y="1909" width="0.2" height="15.0" fill="rgb(212,94,37)" rx="2" ry="2" />
<text  x="389.45" y="1919.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="1034.3" y="1877" width="0.2" height="15.0" fill="rgb(205,109,47)" rx="2" ry="2" />
<text  x="1037.28" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1019.3" y="1829" width="0.2" height="15.0" fill="rgb(232,86,27)" rx="2" ry="2" />
<text  x="1022.32" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="283.2" y="1797" width="0.2" height="15.0" fill="rgb(253,185,50)" rx="2" ry="2" />
<text  x="286.17" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="544.8" y="1893" width="0.4" height="15.0" fill="rgb(207,21,4)" rx="2" ry="2" />
<text  x="547.77" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="908.9" y="1989" width="1.2" height="15.0" fill="rgb(243,193,44)" rx="2" ry="2" />
<text  x="911.86" y="1999.5" ></text>
</g>
<g >
<title>SYSC_accept4 (266 samples, 4.49%)</title><rect x="357.9" y="1973" width="53.1" height="15.0" fill="rgb(245,194,51)" rx="2" ry="2" />
<text  x="360.94" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="80.2" y="1925" width="0.4" height="15.0" fill="rgb(227,143,4)" rx="2" ry="2" />
<text  x="83.19" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="225.9" y="1829" width="0.2" height="15.0" fill="rgb(228,148,47)" rx="2" ry="2" />
<text  x="228.94" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="542.0" y="1877" width="0.2" height="15.0" fill="rgb(247,65,50)" rx="2" ry="2" />
<text  x="544.98" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="157.0" y="1669" width="0.2" height="15.0" fill="rgb(234,218,44)" rx="2" ry="2" />
<text  x="159.95" y="1679.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (10 samples, 0.17%)</title><rect x="334.2" y="1893" width="2.0" height="15.0" fill="rgb(212,69,39)" rx="2" ry="2" />
<text  x="337.21" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="817.5" y="1525" width="0.2" height="15.0" fill="rgb(228,30,48)" rx="2" ry="2" />
<text  x="820.54" y="1535.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="732.8" y="1701" width="0.4" height="15.0" fill="rgb(216,59,16)" rx="2" ry="2" />
<text  x="735.79" y="1711.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (187 samples, 3.16%)</title><rect x="771.3" y="1685" width="37.3" height="15.0" fill="rgb(244,28,36)" rx="2" ry="2" />
<text  x="774.28" y="1695.5" >__t..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="545.2" y="1861" width="0.2" height="15.0" fill="rgb(230,70,18)" rx="2" ry="2" />
<text  x="548.17" y="1871.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="982.0" y="1685" width="0.2" height="15.0" fill="rgb(235,195,53)" rx="2" ry="2" />
<text  x="985.03" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="866.6" y="1845" width="0.2" height="15.0" fill="rgb(211,4,34)" rx="2" ry="2" />
<text  x="869.59" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (33 samples, 0.56%)</title><rect x="131.4" y="1989" width="6.6" height="15.0" fill="rgb(235,136,31)" rx="2" ry="2" />
<text  x="134.43" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.0" y="1845" width="0.2" height="15.0" fill="rgb(231,155,17)" rx="2" ry="2" />
<text  x="854.03" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="855.0" y="1941" width="0.2" height="15.0" fill="rgb(245,207,13)" rx="2" ry="2" />
<text  x="858.02" y="1951.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.02%)</title><rect x="1071.0" y="1861" width="0.2" height="15.0" fill="rgb(234,74,3)" rx="2" ry="2" />
<text  x="1073.96" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (2 samples, 0.03%)</title><rect x="86.0" y="1893" width="0.4" height="15.0" fill="rgb(229,149,9)" rx="2" ry="2" />
<text  x="88.97" y="1903.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="398.2" y="1925" width="0.2" height="15.0" fill="rgb(232,145,8)" rx="2" ry="2" />
<text  x="401.22" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="697.9" y="1845" width="0.2" height="15.0" fill="rgb(240,42,53)" rx="2" ry="2" />
<text  x="700.90" y="1855.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="974.9" y="1893" width="0.2" height="15.0" fill="rgb(219,31,24)" rx="2" ry="2" />
<text  x="977.86" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="256.4" y="1781" width="0.2" height="15.0" fill="rgb(236,204,36)" rx="2" ry="2" />
<text  x="259.45" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="531.2" y="1989" width="2.2" height="15.0" fill="rgb(238,67,10)" rx="2" ry="2" />
<text  x="534.21" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (111 samples, 1.88%)</title><rect x="209.8" y="1989" width="22.1" height="15.0" fill="rgb(209,154,43)" rx="2" ry="2" />
<text  x="212.79" y="1999.5" >f..</text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="309.5" y="1637" width="0.2" height="15.0" fill="rgb(210,47,49)" rx="2" ry="2" />
<text  x="312.49" y="1647.5" ></text>
</g>
<g >
<title>kmem_cache_free (12 samples, 0.20%)</title><rect x="740.0" y="1669" width="2.4" height="15.0" fill="rgb(246,63,38)" rx="2" ry="2" />
<text  x="742.97" y="1679.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (2 samples, 0.03%)</title><rect x="184.5" y="2021" width="0.4" height="15.0" fill="rgb(241,209,52)" rx="2" ry="2" />
<text  x="187.47" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="112.9" y="37" width="0.8" height="15.0" fill="rgb(249,138,27)" rx="2" ry="2" />
<text  x="115.89" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1002.0" y="1989" width="0.4" height="15.0" fill="rgb(241,214,25)" rx="2" ry="2" />
<text  x="1004.97" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="863.2" y="1797" width="0.2" height="15.0" fill="rgb(235,145,2)" rx="2" ry="2" />
<text  x="866.20" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="236.5" y="1941" width="0.2" height="15.0" fill="rgb(249,61,25)" rx="2" ry="2" />
<text  x="239.51" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="97.9" y="1925" width="0.2" height="15.0" fill="rgb(221,127,31)" rx="2" ry="2" />
<text  x="100.93" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="53.5" y="1701" width="0.2" height="15.0" fill="rgb(246,165,33)" rx="2" ry="2" />
<text  x="56.47" y="1711.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="120.5" y="1461" width="0.2" height="15.0" fill="rgb(227,172,28)" rx="2" ry="2" />
<text  x="123.46" y="1471.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="645.9" y="1989" width="1.2" height="15.0" fill="rgb(207,54,19)" rx="2" ry="2" />
<text  x="648.86" y="1999.5" ></text>
</g>
<g >
<title>__check_object_size (9 samples, 0.15%)</title><rect x="1089.3" y="1909" width="1.8" height="15.0" fill="rgb(232,220,17)" rx="2" ry="2" />
<text  x="1092.31" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="972.7" y="1877" width="0.2" height="15.0" fill="rgb(239,5,47)" rx="2" ry="2" />
<text  x="975.66" y="1887.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="318.7" y="1797" width="0.2" height="15.0" fill="rgb(225,42,18)" rx="2" ry="2" />
<text  x="321.66" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="138.0" y="1989" width="1.0" height="15.0" fill="rgb(230,110,28)" rx="2" ry="2" />
<text  x="141.01" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (92 samples, 1.55%)</title><rect x="1142.5" y="2021" width="18.4" height="15.0" fill="rgb(252,27,9)" rx="2" ry="2" />
<text  x="1145.54" y="2031.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (251 samples, 4.24%)</title><rect x="767.7" y="1717" width="50.0" height="15.0" fill="rgb(253,175,38)" rx="2" ry="2" />
<text  x="770.69" y="1727.5" >__tcp..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="508.3" y="1861" width="0.2" height="15.0" fill="rgb(233,103,54)" rx="2" ry="2" />
<text  x="511.28" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="118.7" y="53" width="0.2" height="15.0" fill="rgb(249,72,13)" rx="2" ry="2" />
<text  x="121.67" y="63.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="144.4" y="1925" width="0.2" height="15.0" fill="rgb(249,112,40)" rx="2" ry="2" />
<text  x="147.39" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (9 samples, 0.15%)</title><rect x="618.1" y="1973" width="1.8" height="15.0" fill="rgb(219,130,53)" rx="2" ry="2" />
<text  x="621.14" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="184.1" y="2021" width="0.2" height="15.0" fill="rgb(220,217,12)" rx="2" ry="2" />
<text  x="187.07" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="621.7" y="2005" width="0.4" height="15.0" fill="rgb(207,211,34)" rx="2" ry="2" />
<text  x="624.73" y="2015.5" ></text>
</g>
<g >
<title>release_sock (14 samples, 0.24%)</title><rect x="381.9" y="1941" width="2.8" height="15.0" fill="rgb(226,10,45)" rx="2" ry="2" />
<text  x="384.87" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="905.9" y="1973" width="0.6" height="15.0" fill="rgb(236,89,35)" rx="2" ry="2" />
<text  x="908.87" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="123.3" y="1749" width="0.2" height="15.0" fill="rgb(242,30,41)" rx="2" ry="2" />
<text  x="126.25" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="386.9" y="1829" width="0.1" height="15.0" fill="rgb(253,186,12)" rx="2" ry="2" />
<text  x="389.85" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="616.0" y="1861" width="0.2" height="15.0" fill="rgb(205,186,33)" rx="2" ry="2" />
<text  x="618.95" y="1871.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="463.0" y="1957" width="0.2" height="15.0" fill="rgb(248,204,0)" rx="2" ry="2" />
<text  x="466.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1012.7" y="1717" width="0.2" height="15.0" fill="rgb(230,159,20)" rx="2" ry="2" />
<text  x="1015.74" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="932.8" y="1877" width="0.4" height="15.0" fill="rgb(253,26,10)" rx="2" ry="2" />
<text  x="935.78" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1121.4" y="1733" width="0.2" height="15.0" fill="rgb(230,12,12)" rx="2" ry="2" />
<text  x="1124.41" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="549.4" y="1989" width="2.9" height="15.0" fill="rgb(233,51,47)" rx="2" ry="2" />
<text  x="552.35" y="1999.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (22 samples, 0.37%)</title><rect x="691.7" y="1893" width="4.4" height="15.0" fill="rgb(248,211,25)" rx="2" ry="2" />
<text  x="694.72" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1134.0" y="1957" width="0.2" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="1136.97" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="87.4" y="1909" width="0.2" height="15.0" fill="rgb(232,107,52)" rx="2" ry="2" />
<text  x="90.36" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="919.2" y="1989" width="0.6" height="15.0" fill="rgb(219,60,42)" rx="2" ry="2" />
<text  x="922.23" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="532.4" y="1861" width="0.2" height="15.0" fill="rgb(244,215,53)" rx="2" ry="2" />
<text  x="535.41" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="817.5" y="1637" width="0.2" height="15.0" fill="rgb(242,56,16)" rx="2" ry="2" />
<text  x="820.54" y="1647.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (34 samples, 0.57%)</title><rect x="10.6" y="2053" width="6.8" height="15.0" fill="rgb(209,129,37)" rx="2" ry="2" />
<text  x="13.60" y="2063.5" ></text>
</g>
<g >
<title>tcp_recvmsg (303 samples, 5.12%)</title><rect x="1052.6" y="1941" width="60.4" height="15.0" fill="rgb(226,173,18)" rx="2" ry="2" />
<text  x="1055.62" y="1951.5" >tcp_re..</text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="492.1" y="1909" width="0.4" height="15.0" fill="rgb(246,23,41)" rx="2" ry="2" />
<text  x="495.13" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (33 samples, 0.56%)</title><rect x="221.6" y="1893" width="6.5" height="15.0" fill="rgb(248,226,18)" rx="2" ry="2" />
<text  x="224.55" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (104 samples, 1.76%)</title><rect x="582.7" y="2005" width="20.7" height="15.0" fill="rgb(210,17,48)" rx="2" ry="2" />
<text  x="585.65" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="885.7" y="1797" width="0.2" height="15.0" fill="rgb(221,98,11)" rx="2" ry="2" />
<text  x="888.73" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1120.4" y="1893" width="0.2" height="15.0" fill="rgb(252,71,33)" rx="2" ry="2" />
<text  x="1123.41" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="480.6" y="1925" width="0.2" height="15.0" fill="rgb(236,124,6)" rx="2" ry="2" />
<text  x="483.56" y="1935.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1003.8" y="1957" width="0.8" height="15.0" fill="rgb(209,37,9)" rx="2" ry="2" />
<text  x="1006.77" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (24 samples, 0.41%)</title><rect x="922.8" y="1957" width="4.8" height="15.0" fill="rgb(251,192,15)" rx="2" ry="2" />
<text  x="925.82" y="1967.5" ></text>
</g>
<g >
<title>schedule (33 samples, 0.56%)</title><rect x="10.8" y="1941" width="6.6" height="15.0" fill="rgb(206,86,40)" rx="2" ry="2" />
<text  x="13.80" y="1951.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="319.1" y="1813" width="0.6" height="15.0" fill="rgb(224,229,53)" rx="2" ry="2" />
<text  x="322.06" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="480.8" y="1941" width="0.6" height="15.0" fill="rgb(246,61,4)" rx="2" ry="2" />
<text  x="483.76" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="846.8" y="1861" width="0.2" height="15.0" fill="rgb(248,91,11)" rx="2" ry="2" />
<text  x="849.85" y="1871.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="86.4" y="1909" width="0.2" height="15.0" fill="rgb(238,41,41)" rx="2" ry="2" />
<text  x="89.37" y="1919.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="562.1" y="1733" width="0.2" height="15.0" fill="rgb(229,216,20)" rx="2" ry="2" />
<text  x="565.12" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="572.7" y="1973" width="0.2" height="15.0" fill="rgb(243,77,15)" rx="2" ry="2" />
<text  x="575.68" y="1983.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="122.5" y="1685" width="0.2" height="15.0" fill="rgb(209,99,40)" rx="2" ry="2" />
<text  x="125.46" y="1695.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="599.8" y="1541" width="0.4" height="15.0" fill="rgb(253,74,38)" rx="2" ry="2" />
<text  x="602.80" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="1001.2" y="1989" width="0.6" height="15.0" fill="rgb(254,164,31)" rx="2" ry="2" />
<text  x="1004.18" y="1999.5" ></text>
</g>
<g >
<title>note_interrupt (1 samples, 0.02%)</title><rect x="880.5" y="1797" width="0.2" height="15.0" fill="rgb(247,184,1)" rx="2" ry="2" />
<text  x="883.54" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="657.4" y="2005" width="0.4" height="15.0" fill="rgb(241,180,28)" rx="2" ry="2" />
<text  x="660.42" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="453.8" y="1493" width="0.2" height="15.0" fill="rgb(217,49,51)" rx="2" ry="2" />
<text  x="456.85" y="1503.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="250.3" y="1925" width="0.4" height="15.0" fill="rgb(214,94,40)" rx="2" ry="2" />
<text  x="253.27" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="518.8" y="1957" width="0.8" height="15.0" fill="rgb(221,147,52)" rx="2" ry="2" />
<text  x="521.85" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="563.9" y="1973" width="2.4" height="15.0" fill="rgb(212,88,5)" rx="2" ry="2" />
<text  x="566.91" y="1983.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="16.8" y="1829" width="0.2" height="15.0" fill="rgb(222,81,48)" rx="2" ry="2" />
<text  x="19.78" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="157.0" y="1861" width="0.2" height="15.0" fill="rgb(245,53,18)" rx="2" ry="2" />
<text  x="159.95" y="1871.5" ></text>
</g>
<g >
<title>sys_recvfrom (364 samples, 6.15%)</title><rect x="1048.0" y="2005" width="72.6" height="15.0" fill="rgb(253,130,13)" rx="2" ry="2" />
<text  x="1051.03" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="665.2" y="1749" width="0.2" height="15.0" fill="rgb(243,8,24)" rx="2" ry="2" />
<text  x="668.20" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="972.9" y="2037" width="0.4" height="15.0" fill="rgb(248,82,48)" rx="2" ry="2" />
<text  x="975.86" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="404.6" y="1749" width="0.2" height="15.0" fill="rgb(222,12,9)" rx="2" ry="2" />
<text  x="407.60" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="937.4" y="1909" width="0.2" height="15.0" fill="rgb(252,49,10)" rx="2" ry="2" />
<text  x="940.37" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="102.7" y="1861" width="0.2" height="15.0" fill="rgb(206,159,13)" rx="2" ry="2" />
<text  x="105.72" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="115.3" y="37" width="0.2" height="15.0" fill="rgb(243,111,27)" rx="2" ry="2" />
<text  x="118.28" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="102.7" y="1845" width="0.2" height="15.0" fill="rgb(208,23,49)" rx="2" ry="2" />
<text  x="105.72" y="1855.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="757.7" y="1733" width="0.6" height="15.0" fill="rgb(209,122,32)" rx="2" ry="2" />
<text  x="760.72" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="725.2" y="1845" width="0.2" height="15.0" fill="rgb(205,73,33)" rx="2" ry="2" />
<text  x="728.22" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="63.6" y="1845" width="0.2" height="15.0" fill="rgb(228,33,27)" rx="2" ry="2" />
<text  x="66.64" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (8 samples, 0.14%)</title><rect x="79.6" y="1957" width="1.6" height="15.0" fill="rgb(221,57,34)" rx="2" ry="2" />
<text  x="82.59" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (69 samples, 1.17%)</title><rect x="26.9" y="2021" width="13.8" height="15.0" fill="rgb(245,73,14)" rx="2" ry="2" />
<text  x="29.95" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="246.3" y="1861" width="0.6" height="15.0" fill="rgb(227,79,49)" rx="2" ry="2" />
<text  x="249.28" y="1871.5" ></text>
</g>
<g >
<title>ip_send_check (12 samples, 0.20%)</title><rect x="776.9" y="1621" width="2.4" height="15.0" fill="rgb(232,84,38)" rx="2" ry="2" />
<text  x="779.86" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="231.3" y="1781" width="0.2" height="15.0" fill="rgb(222,17,2)" rx="2" ry="2" />
<text  x="234.32" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="892.1" y="1781" width="0.2" height="15.0" fill="rgb(247,58,29)" rx="2" ry="2" />
<text  x="895.11" y="1791.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1012.7" y="1525" width="0.2" height="15.0" fill="rgb(239,4,20)" rx="2" ry="2" />
<text  x="1015.74" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="104.5" y="1813" width="19.8" height="15.0" fill="rgb(242,115,23)" rx="2" ry="2" />
<text  x="107.51" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="53.5" y="1717" width="0.2" height="15.0" fill="rgb(224,193,26)" rx="2" ry="2" />
<text  x="56.47" y="1727.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="94.7" y="2005" width="0.6" height="15.0" fill="rgb(244,119,13)" rx="2" ry="2" />
<text  x="97.74" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1102.1" y="1541" width="0.2" height="15.0" fill="rgb(230,126,49)" rx="2" ry="2" />
<text  x="1105.07" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (5 samples, 0.08%)</title><rect x="784.4" y="1541" width="1.0" height="15.0" fill="rgb(235,158,11)" rx="2" ry="2" />
<text  x="787.44" y="1551.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="652.2" y="2005" width="0.2" height="15.0" fill="rgb(214,220,48)" rx="2" ry="2" />
<text  x="655.24" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1003.8" y="1909" width="0.8" height="15.0" fill="rgb(228,39,40)" rx="2" ry="2" />
<text  x="1006.77" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.7" y="1941" width="0.2" height="15.0" fill="rgb(214,27,52)" rx="2" ry="2" />
<text  x="95.75" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (85 samples, 1.44%)</title><rect x="875.4" y="1973" width="16.9" height="15.0" fill="rgb(240,85,22)" rx="2" ry="2" />
<text  x="878.36" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="256.4" y="1829" width="0.2" height="15.0" fill="rgb(238,67,15)" rx="2" ry="2" />
<text  x="259.45" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::~AsyncSocketBase (1 samples, 0.02%)</title><rect x="77.4" y="1941" width="0.2" height="15.0" fill="rgb(252,39,45)" rx="2" ry="2" />
<text  x="80.39" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="850.6" y="1893" width="0.2" height="15.0" fill="rgb(218,124,17)" rx="2" ry="2" />
<text  x="853.64" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="404.6" y="1573" width="0.2" height="15.0" fill="rgb(231,225,13)" rx="2" ry="2" />
<text  x="407.60" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="887.1" y="1717" width="0.2" height="15.0" fill="rgb(229,122,42)" rx="2" ry="2" />
<text  x="890.12" y="1727.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="144.8" y="1909" width="0.2" height="15.0" fill="rgb(244,94,17)" rx="2" ry="2" />
<text  x="147.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="57.5" y="1653" width="0.2" height="15.0" fill="rgb(243,186,30)" rx="2" ry="2" />
<text  x="60.46" y="1663.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1158.1" y="1717" width="0.2" height="15.0" fill="rgb(230,113,20)" rx="2" ry="2" />
<text  x="1161.10" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="848.2" y="1861" width="0.2" height="15.0" fill="rgb(239,183,21)" rx="2" ry="2" />
<text  x="851.24" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="839.1" y="1909" width="0.2" height="15.0" fill="rgb(228,211,24)" rx="2" ry="2" />
<text  x="842.07" y="1919.5" ></text>
</g>
<g >
<title>_copy_from_user (4 samples, 0.07%)</title><rect x="249.5" y="1925" width="0.8" height="15.0" fill="rgb(205,1,34)" rx="2" ry="2" />
<text  x="252.47" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1034.3" y="1973" width="0.2" height="15.0" fill="rgb(205,25,28)" rx="2" ry="2" />
<text  x="1037.28" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="982.0" y="1717" width="0.2" height="15.0" fill="rgb(252,108,25)" rx="2" ry="2" />
<text  x="985.03" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="910.9" y="2005" width="0.2" height="15.0" fill="rgb(236,202,36)" rx="2" ry="2" />
<text  x="913.85" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1102.1" y="1509" width="0.2" height="15.0" fill="rgb(253,4,22)" rx="2" ry="2" />
<text  x="1105.07" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="307.9" y="1637" width="0.2" height="15.0" fill="rgb(228,107,15)" rx="2" ry="2" />
<text  x="310.89" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="372.1" y="1685" width="0.2" height="15.0" fill="rgb(244,142,39)" rx="2" ry="2" />
<text  x="375.10" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="840.9" y="1925" width="0.4" height="15.0" fill="rgb(238,28,10)" rx="2" ry="2" />
<text  x="843.87" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="144.2" y="1941" width="0.4" height="15.0" fill="rgb(228,93,6)" rx="2" ry="2" />
<text  x="147.19" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="528.2" y="1957" width="0.2" height="15.0" fill="rgb(243,105,54)" rx="2" ry="2" />
<text  x="531.22" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="782.2" y="1477" width="0.2" height="15.0" fill="rgb(229,148,4)" rx="2" ry="2" />
<text  x="785.24" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="32.1" y="1765" width="0.2" height="15.0" fill="rgb(227,15,7)" rx="2" ry="2" />
<text  x="35.13" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="792.0" y="1509" width="0.2" height="15.0" fill="rgb(249,109,49)" rx="2" ry="2" />
<text  x="795.01" y="1519.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="273.4" y="1797" width="0.8" height="15.0" fill="rgb(239,209,0)" rx="2" ry="2" />
<text  x="276.40" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="283.2" y="1765" width="0.2" height="15.0" fill="rgb(228,129,20)" rx="2" ry="2" />
<text  x="286.17" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (9 samples, 0.15%)</title><rect x="1174.0" y="2053" width="1.8" height="15.0" fill="rgb(224,106,41)" rx="2" ry="2" />
<text  x="1177.05" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="611.4" y="1653" width="0.2" height="15.0" fill="rgb(254,48,35)" rx="2" ry="2" />
<text  x="614.37" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (7 samples, 0.12%)</title><rect x="879.3" y="1925" width="1.4" height="15.0" fill="rgb(237,138,10)" rx="2" ry="2" />
<text  x="882.35" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="256.2" y="1861" width="0.2" height="15.0" fill="rgb(227,119,52)" rx="2" ry="2" />
<text  x="259.25" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="858.6" y="1893" width="0.2" height="15.0" fill="rgb(227,3,5)" rx="2" ry="2" />
<text  x="861.61" y="1903.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="453.0" y="1653" width="0.2" height="15.0" fill="rgb(233,59,31)" rx="2" ry="2" />
<text  x="456.05" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="881.3" y="1909" width="0.2" height="15.0" fill="rgb(222,18,15)" rx="2" ry="2" />
<text  x="884.34" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="127.8" y="1989" width="0.6" height="15.0" fill="rgb(253,17,40)" rx="2" ry="2" />
<text  x="130.84" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="546.4" y="1845" width="0.8" height="15.0" fill="rgb(230,69,2)" rx="2" ry="2" />
<text  x="549.36" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="87.0" y="1941" width="0.2" height="15.0" fill="rgb(241,73,5)" rx="2" ry="2" />
<text  x="89.97" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (92 samples, 1.55%)</title><rect x="1142.5" y="2005" width="18.4" height="15.0" fill="rgb(227,185,19)" rx="2" ry="2" />
<text  x="1145.54" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="412.0" y="1909" width="0.4" height="15.0" fill="rgb(221,73,50)" rx="2" ry="2" />
<text  x="414.97" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="462.4" y="1813" width="0.2" height="15.0" fill="rgb(248,224,22)" rx="2" ry="2" />
<text  x="465.42" y="1823.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="308.1" y="1653" width="0.2" height="15.0" fill="rgb(254,139,2)" rx="2" ry="2" />
<text  x="311.09" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="643.7" y="1989" width="0.4" height="15.0" fill="rgb(242,138,30)" rx="2" ry="2" />
<text  x="646.67" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="221.0" y="1893" width="0.2" height="15.0" fill="rgb(237,161,17)" rx="2" ry="2" />
<text  x="223.96" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="534.2" y="1909" width="0.2" height="15.0" fill="rgb(218,211,40)" rx="2" ry="2" />
<text  x="537.20" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (12 samples, 0.20%)</title><rect x="218.6" y="1893" width="2.4" height="15.0" fill="rgb(217,134,29)" rx="2" ry="2" />
<text  x="221.56" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="630.1" y="1989" width="0.2" height="15.0" fill="rgb(226,35,16)" rx="2" ry="2" />
<text  x="633.11" y="1999.5" ></text>
</g>
<g >
<title>minmax_subwin_update (1 samples, 0.02%)</title><rect x="746.2" y="1461" width="0.2" height="15.0" fill="rgb(227,92,32)" rx="2" ry="2" />
<text  x="749.15" y="1471.5" ></text>
</g>
<g >
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="1103.7" y="1493" width="1.0" height="15.0" fill="rgb(206,119,20)" rx="2" ry="2" />
<text  x="1106.66" y="1503.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="256.6" y="1877" width="0.2" height="15.0" fill="rgb(227,23,15)" rx="2" ry="2" />
<text  x="259.65" y="1887.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (43 samples, 0.73%)</title><rect x="1102.5" y="1525" width="8.5" height="15.0" fill="rgb(244,59,3)" rx="2" ry="2" />
<text  x="1105.47" y="1535.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="966.9" y="2021" width="0.2" height="15.0" fill="rgb(221,112,11)" rx="2" ry="2" />
<text  x="969.88" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="545.2" y="1749" width="0.2" height="15.0" fill="rgb(252,43,44)" rx="2" ry="2" />
<text  x="548.17" y="1759.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="989.4" y="1877" width="0.4" height="15.0" fill="rgb(248,132,37)" rx="2" ry="2" />
<text  x="992.41" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="408.2" y="1909" width="0.4" height="15.0" fill="rgb(243,48,50)" rx="2" ry="2" />
<text  x="411.19" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="157.9" y="1813" width="0.2" height="15.0" fill="rgb(221,119,31)" rx="2" ry="2" />
<text  x="160.95" y="1823.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="182.9" y="1957" width="0.2" height="15.0" fill="rgb(228,179,51)" rx="2" ry="2" />
<text  x="185.87" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="887.1" y="1733" width="0.2" height="15.0" fill="rgb(231,9,40)" rx="2" ry="2" />
<text  x="890.12" y="1743.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="853.6" y="1861" width="0.2" height="15.0" fill="rgb(215,161,35)" rx="2" ry="2" />
<text  x="856.63" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1119.8" y="1653" width="0.2" height="15.0" fill="rgb(212,146,2)" rx="2" ry="2" />
<text  x="1122.81" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="85.6" y="1925" width="0.2" height="15.0" fill="rgb(253,32,53)" rx="2" ry="2" />
<text  x="88.57" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="563.3" y="1957" width="0.6" height="15.0" fill="rgb(227,39,32)" rx="2" ry="2" />
<text  x="566.31" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="330.2" y="1669" width="0.2" height="15.0" fill="rgb(241,101,42)" rx="2" ry="2" />
<text  x="333.22" y="1679.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2021" width="0.4" height="15.0" fill="rgb(218,30,33)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2 samples, 0.03%)</title><rect x="1171.9" y="1941" width="0.4" height="15.0" fill="rgb(226,88,15)" rx="2" ry="2" />
<text  x="1174.86" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="731.8" y="1733" width="1.4" height="15.0" fill="rgb(205,8,10)" rx="2" ry="2" />
<text  x="734.80" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="330.2" y="1845" width="0.2" height="15.0" fill="rgb(250,12,0)" rx="2" ry="2" />
<text  x="333.22" y="1855.5" ></text>
</g>
<g >
<title>isspace@plt (1 samples, 0.02%)</title><rect x="1013.9" y="2021" width="0.2" height="15.0" fill="rgb(213,34,44)" rx="2" ry="2" />
<text  x="1016.94" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1157.5" y="1845" width="0.2" height="15.0" fill="rgb(205,75,13)" rx="2" ry="2" />
<text  x="1160.50" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="224.1" y="1845" width="0.2" height="15.0" fill="rgb(237,226,27)" rx="2" ry="2" />
<text  x="227.15" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12 samples, 0.20%)</title><rect x="1176.2" y="2021" width="2.4" height="15.0" fill="rgb(247,70,30)" rx="2" ry="2" />
<text  x="1179.24" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="505.5" y="1749" width="0.2" height="15.0" fill="rgb(252,96,38)" rx="2" ry="2" />
<text  x="508.49" y="1759.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="326.8" y="1829" width="0.2" height="15.0" fill="rgb(225,98,22)" rx="2" ry="2" />
<text  x="329.83" y="1839.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="192.2" y="2021" width="0.2" height="15.0" fill="rgb(244,163,8)" rx="2" ry="2" />
<text  x="195.24" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="412.0" y="1973" width="0.4" height="15.0" fill="rgb(248,192,6)" rx="2" ry="2" />
<text  x="414.97" y="1983.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="279.4" y="1829" width="0.2" height="15.0" fill="rgb(226,38,34)" rx="2" ry="2" />
<text  x="282.38" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="174.9" y="1957" width="0.4" height="15.0" fill="rgb(226,21,7)" rx="2" ry="2" />
<text  x="177.90" y="1967.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="116.9" y="69" width="0.4" height="15.0" fill="rgb(254,168,39)" rx="2" ry="2" />
<text  x="119.87" y="79.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="292.7" y="1333" width="0.2" height="15.0" fill="rgb(243,215,11)" rx="2" ry="2" />
<text  x="295.74" y="1343.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="90.2" y="1957" width="0.2" height="15.0" fill="rgb(223,116,50)" rx="2" ry="2" />
<text  x="93.16" y="1967.5" ></text>
</g>
<g >
<title>page_frag_free (23 samples, 0.39%)</title><rect x="1071.2" y="1861" width="4.5" height="15.0" fill="rgb(240,225,51)" rx="2" ry="2" />
<text  x="1074.16" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="508.1" y="1877" width="0.2" height="15.0" fill="rgb(216,75,22)" rx="2" ry="2" />
<text  x="511.08" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="377.7" y="1845" width="0.2" height="15.0" fill="rgb(225,105,49)" rx="2" ry="2" />
<text  x="380.68" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="359.1" y="1957" width="0.2" height="15.0" fill="rgb(206,142,35)" rx="2" ry="2" />
<text  x="362.13" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="811.4" y="1621" width="0.2" height="15.0" fill="rgb(244,106,8)" rx="2" ry="2" />
<text  x="814.36" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="840.3" y="1893" width="0.2" height="15.0" fill="rgb(209,43,42)" rx="2" ry="2" />
<text  x="843.27" y="1903.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="118.7" y="85" width="0.2" height="15.0" fill="rgb(253,179,3)" rx="2" ry="2" />
<text  x="121.67" y="95.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (2 samples, 0.03%)</title><rect x="386.5" y="1925" width="0.4" height="15.0" fill="rgb(210,129,15)" rx="2" ry="2" />
<text  x="389.45" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="32.1" y="1781" width="0.2" height="15.0" fill="rgb(226,168,10)" rx="2" ry="2" />
<text  x="35.13" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="226.9" y="1877" width="1.2" height="15.0" fill="rgb(247,229,33)" rx="2" ry="2" />
<text  x="229.94" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="832.3" y="1621" width="0.2" height="15.0" fill="rgb(205,188,5)" rx="2" ry="2" />
<text  x="835.29" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="920.0" y="1989" width="0.4" height="15.0" fill="rgb(206,88,40)" rx="2" ry="2" />
<text  x="923.02" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1121.6" y="1765" width="0.2" height="15.0" fill="rgb(207,155,53)" rx="2" ry="2" />
<text  x="1124.61" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="620.9" y="2005" width="0.2" height="15.0" fill="rgb(248,90,37)" rx="2" ry="2" />
<text  x="623.94" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="675.0" y="1797" width="0.6" height="15.0" fill="rgb(243,44,13)" rx="2" ry="2" />
<text  x="677.97" y="1807.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="402.0" y="1909" width="0.4" height="15.0" fill="rgb(248,129,50)" rx="2" ry="2" />
<text  x="405.00" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="982.0" y="1861" width="0.2" height="15.0" fill="rgb(234,98,49)" rx="2" ry="2" />
<text  x="985.03" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="256.4" y="1669" width="0.2" height="15.0" fill="rgb(246,27,32)" rx="2" ry="2" />
<text  x="259.45" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (11 samples, 0.19%)</title><rect x="84.6" y="1957" width="2.2" height="15.0" fill="rgb(232,200,27)" rx="2" ry="2" />
<text  x="87.57" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1139.0" y="1989" width="0.2" height="15.0" fill="rgb(235,50,13)" rx="2" ry="2" />
<text  x="1141.96" y="1999.5" ></text>
</g>
<g >
<title>skb_release_head_state (20 samples, 0.34%)</title><rect x="1075.7" y="1893" width="4.0" height="15.0" fill="rgb(225,83,28)" rx="2" ry="2" />
<text  x="1078.75" y="1903.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="246.1" y="1925" width="0.8" height="15.0" fill="rgb(235,31,11)" rx="2" ry="2" />
<text  x="249.08" y="1935.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="816.1" y="1669" width="0.4" height="15.0" fill="rgb(229,28,3)" rx="2" ry="2" />
<text  x="819.14" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (5 samples, 0.08%)</title><rect x="46.3" y="1973" width="1.0" height="15.0" fill="rgb(206,20,10)" rx="2" ry="2" />
<text  x="49.29" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="324.0" y="1749" width="0.4" height="15.0" fill="rgb(213,84,48)" rx="2" ry="2" />
<text  x="327.04" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="247.1" y="1749" width="0.2" height="15.0" fill="rgb(207,76,36)" rx="2" ry="2" />
<text  x="250.08" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="704.5" y="1861" width="0.2" height="15.0" fill="rgb(245,16,32)" rx="2" ry="2" />
<text  x="707.48" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="983.4" y="1973" width="0.2" height="15.0" fill="rgb(235,220,33)" rx="2" ry="2" />
<text  x="986.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="705.1" y="2037" width="0.2" height="15.0" fill="rgb(234,143,19)" rx="2" ry="2" />
<text  x="708.08" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (23 samples, 0.39%)</title><rect x="957.5" y="2037" width="4.6" height="15.0" fill="rgb(228,198,33)" rx="2" ry="2" />
<text  x="960.51" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1180.8" y="2005" width="0.2" height="15.0" fill="rgb(221,85,49)" rx="2" ry="2" />
<text  x="1183.83" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="483.0" y="1653" width="0.2" height="15.0" fill="rgb(209,53,46)" rx="2" ry="2" />
<text  x="485.96" y="1663.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9 samples, 0.15%)</title><rect x="763.3" y="1685" width="1.8" height="15.0" fill="rgb(237,65,44)" rx="2" ry="2" />
<text  x="766.30" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="453.8" y="1957" width="0.2" height="15.0" fill="rgb(235,66,41)" rx="2" ry="2" />
<text  x="456.85" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="927.0" y="1941" width="0.6" height="15.0" fill="rgb(215,156,48)" rx="2" ry="2" />
<text  x="930.00" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="914.6" y="2021" width="2.0" height="15.0" fill="rgb(234,208,24)" rx="2" ry="2" />
<text  x="917.64" y="2031.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (8 samples, 0.14%)</title><rect x="852.2" y="1925" width="1.6" height="15.0" fill="rgb(209,153,27)" rx="2" ry="2" />
<text  x="855.23" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="962.3" y="1989" width="0.6" height="15.0" fill="rgb(224,78,24)" rx="2" ry="2" />
<text  x="965.29" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (31 samples, 0.52%)</title><rect x="1028.1" y="2037" width="6.2" height="15.0" fill="rgb(220,157,27)" rx="2" ry="2" />
<text  x="1031.09" y="2047.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="482.8" y="1685" width="0.2" height="15.0" fill="rgb(216,125,1)" rx="2" ry="2" />
<text  x="485.76" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (7 samples, 0.12%)</title><rect x="1021.5" y="2037" width="1.4" height="15.0" fill="rgb(242,161,54)" rx="2" ry="2" />
<text  x="1024.51" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="917.0" y="2037" width="1.2" height="15.0" fill="rgb(237,7,36)" rx="2" ry="2" />
<text  x="920.03" y="2047.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1172.3" y="1973" width="0.2" height="15.0" fill="rgb(248,121,46)" rx="2" ry="2" />
<text  x="1175.25" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="105.1" y="885" width="14.2" height="15.0" fill="rgb(218,1,22)" rx="2" ry="2" />
<text  x="108.11" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="863.2" y="1829" width="0.2" height="15.0" fill="rgb(216,221,28)" rx="2" ry="2" />
<text  x="866.20" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (299 samples, 5.05%)</title><rect x="103.9" y="2021" width="59.6" height="15.0" fill="rgb(217,107,6)" rx="2" ry="2" />
<text  x="106.91" y="2031.5" >[unkno..</text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="104.7" y="1589" width="16.8" height="15.0" fill="rgb(210,22,35)" rx="2" ry="2" />
<text  x="107.71" y="1599.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="672.6" y="1861" width="0.2" height="15.0" fill="rgb(221,51,47)" rx="2" ry="2" />
<text  x="675.58" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="224.1" y="1525" width="0.2" height="15.0" fill="rgb(221,59,46)" rx="2" ry="2" />
<text  x="227.15" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.74%)</title><rect x="104.3" y="1909" width="20.5" height="15.0" fill="rgb(247,185,1)" rx="2" ry="2" />
<text  x="107.31" y="1919.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="966.5" y="2021" width="0.4" height="15.0" fill="rgb(243,158,33)" rx="2" ry="2" />
<text  x="969.48" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="180.7" y="1989" width="0.4" height="15.0" fill="rgb(247,67,15)" rx="2" ry="2" />
<text  x="183.68" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="902.3" y="2021" width="0.6" height="15.0" fill="rgb(250,104,16)" rx="2" ry="2" />
<text  x="905.28" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="642.1" y="1925" width="0.2" height="15.0" fill="rgb(249,193,39)" rx="2" ry="2" />
<text  x="645.07" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (22 samples, 0.37%)</title><rect x="811.4" y="1637" width="4.3" height="15.0" fill="rgb(242,52,44)" rx="2" ry="2" />
<text  x="814.36" y="1647.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (17 samples, 0.29%)</title><rect x="957.5" y="1989" width="3.4" height="15.0" fill="rgb(233,214,24)" rx="2" ry="2" />
<text  x="960.51" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="538.8" y="1941" width="0.2" height="15.0" fill="rgb(254,69,3)" rx="2" ry="2" />
<text  x="541.79" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1008.8" y="1909" width="0.2" height="15.0" fill="rgb(248,127,20)" rx="2" ry="2" />
<text  x="1011.75" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1177.2" y="2005" width="0.2" height="15.0" fill="rgb(213,189,15)" rx="2" ry="2" />
<text  x="1180.24" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="508.1" y="1861" width="0.2" height="15.0" fill="rgb(212,23,11)" rx="2" ry="2" />
<text  x="511.08" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="949.1" y="1989" width="0.4" height="15.0" fill="rgb(221,215,54)" rx="2" ry="2" />
<text  x="952.13" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="563.3" y="1781" width="0.6" height="15.0" fill="rgb(248,129,24)" rx="2" ry="2" />
<text  x="566.31" y="1791.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1171.9" y="1957" width="0.4" height="15.0" fill="rgb(254,42,8)" rx="2" ry="2" />
<text  x="1174.86" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="1157.9" y="1861" width="0.6" height="15.0" fill="rgb(209,106,35)" rx="2" ry="2" />
<text  x="1160.90" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="225.1" y="1829" width="0.2" height="15.0" fill="rgb(234,165,51)" rx="2" ry="2" />
<text  x="228.14" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="801.2" y="1493" width="0.2" height="15.0" fill="rgb(206,59,49)" rx="2" ry="2" />
<text  x="804.19" y="1503.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (15 samples, 0.25%)</title><rect x="583.3" y="1957" width="2.9" height="15.0" fill="rgb(226,86,44)" rx="2" ry="2" />
<text  x="586.25" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1019.3" y="1733" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1022.32" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="145.4" y="1861" width="0.2" height="15.0" fill="rgb(212,107,41)" rx="2" ry="2" />
<text  x="148.39" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="402.4" y="1861" width="0.2" height="15.0" fill="rgb(217,1,45)" rx="2" ry="2" />
<text  x="405.40" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="779.1" y="1605" width="0.2" height="15.0" fill="rgb(226,163,23)" rx="2" ry="2" />
<text  x="782.05" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="170.7" y="1909" width="0.2" height="15.0" fill="rgb(215,215,52)" rx="2" ry="2" />
<text  x="173.71" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (8 samples, 0.14%)</title><rect x="65.6" y="1909" width="1.6" height="15.0" fill="rgb(219,224,35)" rx="2" ry="2" />
<text  x="68.63" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="926.0" y="1893" width="0.6" height="15.0" fill="rgb(221,150,0)" rx="2" ry="2" />
<text  x="929.01" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="462.4" y="1877" width="0.2" height="15.0" fill="rgb(231,220,41)" rx="2" ry="2" />
<text  x="465.42" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="118.3" y="37" width="0.2" height="15.0" fill="rgb(254,28,38)" rx="2" ry="2" />
<text  x="121.27" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (4 samples, 0.07%)</title><rect x="76.8" y="1957" width="0.8" height="15.0" fill="rgb(218,74,45)" rx="2" ry="2" />
<text  x="79.80" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (9 samples, 0.15%)</title><rect x="1011.5" y="1989" width="1.8" height="15.0" fill="rgb(224,20,18)" rx="2" ry="2" />
<text  x="1014.54" y="1999.5" ></text>
</g>
<g >
<title>import_iovec (7 samples, 0.12%)</title><rect x="250.7" y="1925" width="1.4" height="15.0" fill="rgb(250,195,47)" rx="2" ry="2" />
<text  x="253.67" y="1935.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="1067.4" y="1861" width="0.4" height="15.0" fill="rgb(229,150,12)" rx="2" ry="2" />
<text  x="1070.37" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (3 samples, 0.05%)</title><rect x="992.6" y="1989" width="0.6" height="15.0" fill="rgb(231,25,41)" rx="2" ry="2" />
<text  x="995.60" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="435.9" y="1909" width="0.2" height="15.0" fill="rgb(215,183,42)" rx="2" ry="2" />
<text  x="438.90" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="338.8" y="1797" width="0.2" height="15.0" fill="rgb(245,64,49)" rx="2" ry="2" />
<text  x="341.80" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="76.4" y="1781" width="0.2" height="15.0" fill="rgb(210,0,50)" rx="2" ry="2" />
<text  x="79.40" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1019.3" y="1957" width="0.2" height="15.0" fill="rgb(222,29,8)" rx="2" ry="2" />
<text  x="1022.32" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="968.3" y="1925" width="0.2" height="15.0" fill="rgb(205,143,52)" rx="2" ry="2" />
<text  x="971.28" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (11 samples, 0.19%)</title><rect x="1133.0" y="2021" width="2.2" height="15.0" fill="rgb(229,223,36)" rx="2" ry="2" />
<text  x="1135.97" y="2031.5" ></text>
</g>
<g >
<title>netdev_pick_tx (7 samples, 0.12%)</title><rect x="784.0" y="1557" width="1.4" height="15.0" fill="rgb(243,117,49)" rx="2" ry="2" />
<text  x="787.04" y="1567.5" ></text>
</g>
<g >
<title>lock_timer_base (7 samples, 0.12%)</title><rect x="814.3" y="1605" width="1.4" height="15.0" fill="rgb(235,158,28)" rx="2" ry="2" />
<text  x="817.35" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="648.9" y="1765" width="0.2" height="15.0" fill="rgb(245,33,6)" rx="2" ry="2" />
<text  x="651.85" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="338.2" y="1973" width="0.8" height="15.0" fill="rgb(231,181,19)" rx="2" ry="2" />
<text  x="341.20" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="596.4" y="1845" width="0.8" height="15.0" fill="rgb(242,217,16)" rx="2" ry="2" />
<text  x="599.41" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="648.9" y="1749" width="0.2" height="15.0" fill="rgb(213,113,52)" rx="2" ry="2" />
<text  x="651.85" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="336.0" y="1717" width="0.2" height="15.0" fill="rgb(208,73,30)" rx="2" ry="2" />
<text  x="339.01" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="640.7" y="1925" width="0.6" height="15.0" fill="rgb(222,101,53)" rx="2" ry="2" />
<text  x="643.68" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="17.2" y="1845" width="0.2" height="15.0" fill="rgb(253,172,22)" rx="2" ry="2" />
<text  x="20.18" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="571.9" y="2005" width="0.4" height="15.0" fill="rgb(244,161,21)" rx="2" ry="2" />
<text  x="574.89" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="930.4" y="1893" width="0.2" height="15.0" fill="rgb(249,170,47)" rx="2" ry="2" />
<text  x="933.39" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="91.9" y="1957" width="0.4" height="15.0" fill="rgb(223,3,39)" rx="2" ry="2" />
<text  x="94.95" y="1967.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="386.7" y="1493" width="0.2" height="15.0" fill="rgb(207,96,40)" rx="2" ry="2" />
<text  x="389.65" y="1503.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="53.5" y="1893" width="0.2" height="15.0" fill="rgb(228,183,34)" rx="2" ry="2" />
<text  x="56.47" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="224.1" y="1557" width="0.2" height="15.0" fill="rgb(233,188,34)" rx="2" ry="2" />
<text  x="227.15" y="1567.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="518.8" y="1861" width="0.8" height="15.0" fill="rgb(252,112,38)" rx="2" ry="2" />
<text  x="521.85" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="435.9" y="1877" width="0.2" height="15.0" fill="rgb(218,53,15)" rx="2" ry="2" />
<text  x="438.90" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="160.3" y="1909" width="0.2" height="15.0" fill="rgb(233,175,19)" rx="2" ry="2" />
<text  x="163.34" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="545.0" y="1861" width="0.2" height="15.0" fill="rgb(251,57,39)" rx="2" ry="2" />
<text  x="547.97" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (15 samples, 0.25%)</title><rect x="154.2" y="1909" width="3.0" height="15.0" fill="rgb(218,228,19)" rx="2" ry="2" />
<text  x="157.16" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="386.7" y="1557" width="0.2" height="15.0" fill="rgb(237,55,37)" rx="2" ry="2" />
<text  x="389.65" y="1567.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (10 samples, 0.17%)</title><rect x="511.7" y="1957" width="2.0" height="15.0" fill="rgb(230,178,13)" rx="2" ry="2" />
<text  x="514.67" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="123.7" y="1765" width="0.2" height="15.0" fill="rgb(227,4,35)" rx="2" ry="2" />
<text  x="126.65" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="917.0" y="1989" width="0.2" height="15.0" fill="rgb(214,186,26)" rx="2" ry="2" />
<text  x="920.03" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="695.3" y="1861" width="0.2" height="15.0" fill="rgb(251,91,51)" rx="2" ry="2" />
<text  x="698.31" y="1871.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1003.8" y="1861" width="0.8" height="15.0" fill="rgb(206,44,42)" rx="2" ry="2" />
<text  x="1006.77" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="479.0" y="1877" width="0.2" height="15.0" fill="rgb(212,99,36)" rx="2" ry="2" />
<text  x="481.97" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (8 samples, 0.14%)</title><rect x="540.6" y="1957" width="1.6" height="15.0" fill="rgb(245,157,51)" rx="2" ry="2" />
<text  x="543.58" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (11 samples, 0.19%)</title><rect x="655.6" y="2021" width="2.2" height="15.0" fill="rgb(246,163,20)" rx="2" ry="2" />
<text  x="658.63" y="2031.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1158.3" y="1509" width="0.2" height="15.0" fill="rgb(237,207,12)" rx="2" ry="2" />
<text  x="1161.30" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.19%)</title><rect x="923.4" y="1941" width="2.2" height="15.0" fill="rgb(219,202,53)" rx="2" ry="2" />
<text  x="926.41" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="158.3" y="1861" width="0.2" height="15.0" fill="rgb(220,123,16)" rx="2" ry="2" />
<text  x="161.35" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (4 samples, 0.07%)</title><rect x="1133.4" y="1973" width="0.8" height="15.0" fill="rgb(241,45,33)" rx="2" ry="2" />
<text  x="1136.37" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1178.0" y="1941" width="0.2" height="15.0" fill="rgb(246,27,39)" rx="2" ry="2" />
<text  x="1181.04" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="505.5" y="1605" width="0.2" height="15.0" fill="rgb(242,163,7)" rx="2" ry="2" />
<text  x="508.49" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="91.2" y="1989" width="2.9" height="15.0" fill="rgb(229,100,25)" rx="2" ry="2" />
<text  x="94.15" y="1999.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1102.1" y="1477" width="0.2" height="15.0" fill="rgb(216,199,20)" rx="2" ry="2" />
<text  x="1105.07" y="1487.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="576.9" y="1733" width="0.2" height="15.0" fill="rgb(249,197,8)" rx="2" ry="2" />
<text  x="579.87" y="1743.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="576.9" y="1717" width="0.2" height="15.0" fill="rgb(234,141,43)" rx="2" ry="2" />
<text  x="579.87" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="858.6" y="1845" width="0.2" height="15.0" fill="rgb(210,192,8)" rx="2" ry="2" />
<text  x="861.61" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="578.1" y="1973" width="0.2" height="15.0" fill="rgb(222,155,15)" rx="2" ry="2" />
<text  x="581.07" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="453.8" y="1733" width="0.2" height="15.0" fill="rgb(233,19,50)" rx="2" ry="2" />
<text  x="456.85" y="1743.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="128.4" y="2005" width="0.2" height="15.0" fill="rgb(217,60,35)" rx="2" ry="2" />
<text  x="131.44" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="917.0" y="2005" width="1.0" height="15.0" fill="rgb(230,158,7)" rx="2" ry="2" />
<text  x="920.03" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (5 samples, 0.08%)</title><rect x="575.3" y="1989" width="1.0" height="15.0" fill="rgb(229,56,10)" rx="2" ry="2" />
<text  x="578.28" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="615.8" y="1797" width="0.2" height="15.0" fill="rgb(251,205,15)" rx="2" ry="2" />
<text  x="618.75" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="117.5" y="53" width="0.2" height="15.0" fill="rgb(249,221,15)" rx="2" ry="2" />
<text  x="120.47" y="63.5" ></text>
</g>
<g >
<title>vfprintf (2 samples, 0.03%)</title><rect x="1025.9" y="2037" width="0.4" height="15.0" fill="rgb(240,49,45)" rx="2" ry="2" />
<text  x="1028.90" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="53.5" y="1941" width="0.4" height="15.0" fill="rgb(217,55,34)" rx="2" ry="2" />
<text  x="56.47" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1008.8" y="1925" width="0.2" height="15.0" fill="rgb(221,122,38)" rx="2" ry="2" />
<text  x="1011.75" y="1935.5" ></text>
</g>
<g >
<title>accept4 (2 samples, 0.03%)</title><rect x="27.1" y="2005" width="0.4" height="15.0" fill="rgb(248,43,47)" rx="2" ry="2" />
<text  x="30.15" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="912.6" y="1973" width="0.2" height="15.0" fill="rgb(220,228,45)" rx="2" ry="2" />
<text  x="915.65" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (26 samples, 0.44%)</title><rect x="549.0" y="2005" width="5.1" height="15.0" fill="rgb(216,140,8)" rx="2" ry="2" />
<text  x="551.96" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="175.7" y="1973" width="0.8" height="15.0" fill="rgb(224,76,6)" rx="2" ry="2" />
<text  x="178.69" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (9 samples, 0.15%)</title><rect x="396.0" y="1893" width="1.8" height="15.0" fill="rgb(225,20,4)" rx="2" ry="2" />
<text  x="399.02" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="115.5" y="37" width="0.2" height="15.0" fill="rgb(208,175,50)" rx="2" ry="2" />
<text  x="118.48" y="47.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="577.3" y="1685" width="0.2" height="15.0" fill="rgb(230,158,36)" rx="2" ry="2" />
<text  x="580.27" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="962.3" y="2021" width="0.6" height="15.0" fill="rgb(243,202,42)" rx="2" ry="2" />
<text  x="965.29" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1119.8" y="1685" width="0.2" height="15.0" fill="rgb(220,196,48)" rx="2" ry="2" />
<text  x="1122.81" y="1695.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.02%)</title><rect x="192.8" y="2037" width="0.2" height="15.0" fill="rgb(230,43,8)" rx="2" ry="2" />
<text  x="195.84" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="517.3" y="1909" width="0.2" height="15.0" fill="rgb(248,215,29)" rx="2" ry="2" />
<text  x="520.25" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1161.1" y="2053" width="0.2" height="15.0" fill="rgb(222,45,49)" rx="2" ry="2" />
<text  x="1164.09" y="2063.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="39.5" y="2005" width="0.2" height="15.0" fill="rgb(241,42,4)" rx="2" ry="2" />
<text  x="42.51" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (1 samples, 0.02%)</title><rect x="895.5" y="1941" width="0.2" height="15.0" fill="rgb(211,76,10)" rx="2" ry="2" />
<text  x="898.50" y="1951.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (29 samples, 0.49%)</title><rect x="11.0" y="1893" width="5.8" height="15.0" fill="rgb(249,187,4)" rx="2" ry="2" />
<text  x="14.00" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="835.9" y="1845" width="0.2" height="15.0" fill="rgb(245,33,13)" rx="2" ry="2" />
<text  x="838.88" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7 samples, 0.12%)</title><rect x="618.5" y="1957" width="1.4" height="15.0" fill="rgb(217,144,1)" rx="2" ry="2" />
<text  x="621.54" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (31 samples, 0.52%)</title><rect x="647.1" y="2037" width="6.1" height="15.0" fill="rgb(205,61,33)" rx="2" ry="2" />
<text  x="650.06" y="2047.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="390.8" y="1893" width="0.2" height="15.0" fill="rgb(226,50,35)" rx="2" ry="2" />
<text  x="393.84" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.47%)</title><rect x="104.7" y="1621" width="17.4" height="15.0" fill="rgb(229,143,19)" rx="2" ry="2" />
<text  x="107.71" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="817.5" y="1653" width="0.2" height="15.0" fill="rgb(237,162,50)" rx="2" ry="2" />
<text  x="820.54" y="1663.5" ></text>
</g>
<g >
<title>inet_csk_accept (67 samples, 1.13%)</title><rect x="366.3" y="1941" width="13.4" height="15.0" fill="rgb(228,68,46)" rx="2" ry="2" />
<text  x="369.31" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="892.1" y="1797" width="0.2" height="15.0" fill="rgb(207,182,36)" rx="2" ry="2" />
<text  x="895.11" y="1807.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="404.6" y="1557" width="0.2" height="15.0" fill="rgb(222,117,54)" rx="2" ry="2" />
<text  x="407.60" y="1567.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (3 samples, 0.05%)</title><rect x="33.7" y="1973" width="0.6" height="15.0" fill="rgb(233,188,37)" rx="2" ry="2" />
<text  x="36.73" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1008.8" y="1861" width="0.2" height="15.0" fill="rgb(251,172,13)" rx="2" ry="2" />
<text  x="1011.75" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="481.0" y="1765" width="0.4" height="15.0" fill="rgb(254,25,49)" rx="2" ry="2" />
<text  x="483.96" y="1775.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="236.5" y="1909" width="0.2" height="15.0" fill="rgb(224,118,38)" rx="2" ry="2" />
<text  x="239.51" y="1919.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="336.8" y="1909" width="0.6" height="15.0" fill="rgb(223,172,32)" rx="2" ry="2" />
<text  x="339.80" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.9" y="1909" width="0.2" height="15.0" fill="rgb(220,11,3)" rx="2" ry="2" />
<text  x="892.92" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="648.9" y="1941" width="0.2" height="15.0" fill="rgb(211,199,30)" rx="2" ry="2" />
<text  x="651.85" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.8" y="1893" width="0.2" height="15.0" fill="rgb(251,159,19)" rx="2" ry="2" />
<text  x="544.78" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (21 samples, 0.35%)</title><rect x="303.9" y="1653" width="4.2" height="15.0" fill="rgb(244,120,45)" rx="2" ry="2" />
<text  x="306.90" y="1663.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="737.0" y="1685" width="0.2" height="15.0" fill="rgb(251,201,33)" rx="2" ry="2" />
<text  x="739.98" y="1695.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="401.6" y="1893" width="0.2" height="15.0" fill="rgb(237,16,43)" rx="2" ry="2" />
<text  x="404.61" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="104.7" y="1381" width="15.8" height="15.0" fill="rgb(219,203,19)" rx="2" ry="2" />
<text  x="107.71" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1019.7" y="2037" width="0.2" height="15.0" fill="rgb(212,165,38)" rx="2" ry="2" />
<text  x="1022.72" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="830.9" y="1685" width="0.2" height="15.0" fill="rgb(245,163,30)" rx="2" ry="2" />
<text  x="833.90" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (2 samples, 0.03%)</title><rect x="599.8" y="1653" width="0.4" height="15.0" fill="rgb(218,127,46)" rx="2" ry="2" />
<text  x="602.80" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="377.5" y="1765" width="0.2" height="15.0" fill="rgb(206,131,2)" rx="2" ry="2" />
<text  x="380.48" y="1775.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="1188.4" y="1989" width="0.8" height="15.0" fill="rgb(209,150,31)" rx="2" ry="2" />
<text  x="1191.40" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1137.2" y="2021" width="0.2" height="15.0" fill="rgb(236,216,18)" rx="2" ry="2" />
<text  x="1140.16" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="642.9" y="1909" width="0.2" height="15.0" fill="rgb(236,126,26)" rx="2" ry="2" />
<text  x="645.87" y="1919.5" ></text>
</g>
<g >
<title>secure_tcp_seq (1 samples, 0.02%)</title><rect x="697.9" y="1653" width="0.2" height="15.0" fill="rgb(216,56,51)" rx="2" ry="2" />
<text  x="700.90" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="866.6" y="1925" width="0.2" height="15.0" fill="rgb(254,220,5)" rx="2" ry="2" />
<text  x="869.59" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="411.0" y="1973" width="0.2" height="15.0" fill="rgb(250,175,28)" rx="2" ry="2" />
<text  x="413.98" y="1983.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="274.4" y="1717" width="0.2" height="15.0" fill="rgb(220,100,0)" rx="2" ry="2" />
<text  x="277.39" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1157.5" y="1669" width="0.2" height="15.0" fill="rgb(247,49,4)" rx="2" ry="2" />
<text  x="1160.50" y="1679.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="887.9" y="1909" width="0.4" height="15.0" fill="rgb(242,87,54)" rx="2" ry="2" />
<text  x="890.92" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (2 samples, 0.03%)</title><rect x="308.3" y="1669" width="0.4" height="15.0" fill="rgb(225,21,36)" rx="2" ry="2" />
<text  x="311.29" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="64.4" y="1925" width="0.2" height="15.0" fill="rgb(250,204,39)" rx="2" ry="2" />
<text  x="67.43" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="310.3" y="1573" width="0.2" height="15.0" fill="rgb(228,143,25)" rx="2" ry="2" />
<text  x="313.28" y="1583.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="830.9" y="1701" width="0.2" height="15.0" fill="rgb(210,170,27)" rx="2" ry="2" />
<text  x="833.90" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="17.2" y="1861" width="0.2" height="15.0" fill="rgb(211,77,54)" rx="2" ry="2" />
<text  x="20.18" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="665.2" y="1685" width="0.2" height="15.0" fill="rgb(220,163,35)" rx="2" ry="2" />
<text  x="668.20" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="927.2" y="1909" width="0.2" height="15.0" fill="rgb(234,51,37)" rx="2" ry="2" />
<text  x="930.20" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="976.3" y="2005" width="0.2" height="15.0" fill="rgb(225,132,0)" rx="2" ry="2" />
<text  x="979.25" y="2015.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1082.5" y="1893" width="0.2" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2" />
<text  x="1085.53" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="338.8" y="1829" width="0.2" height="15.0" fill="rgb(245,190,27)" rx="2" ry="2" />
<text  x="341.80" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.07%)</title><rect x="1170.1" y="1957" width="0.8" height="15.0" fill="rgb(232,195,36)" rx="2" ry="2" />
<text  x="1173.06" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="542.0" y="1797" width="0.2" height="15.0" fill="rgb(253,72,43)" rx="2" ry="2" />
<text  x="544.98" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(224,154,43)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (92 samples, 1.55%)</title><rect x="510.1" y="2005" width="18.3" height="15.0" fill="rgb(217,205,49)" rx="2" ry="2" />
<text  x="513.07" y="2015.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="1104.5" y="1413" width="0.2" height="15.0" fill="rgb(253,39,43)" rx="2" ry="2" />
<text  x="1107.46" y="1423.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="968.3" y="2021" width="0.2" height="15.0" fill="rgb(254,176,35)" rx="2" ry="2" />
<text  x="971.28" y="2031.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (11 samples, 0.19%)</title><rect x="18.6" y="2069" width="2.2" height="15.0" fill="rgb(224,14,32)" rx="2" ry="2" />
<text  x="21.57" y="2079.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="914.6" y="1989" width="0.6" height="15.0" fill="rgb(245,61,38)" rx="2" ry="2" />
<text  x="917.64" y="1999.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="344.4" y="2037" width="0.2" height="15.0" fill="rgb(230,32,14)" rx="2" ry="2" />
<text  x="347.38" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="871.6" y="1973" width="0.2" height="15.0" fill="rgb(232,99,10)" rx="2" ry="2" />
<text  x="874.57" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="434.7" y="1893" width="0.8" height="15.0" fill="rgb(246,45,52)" rx="2" ry="2" />
<text  x="437.70" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="949.1" y="1973" width="0.4" height="15.0" fill="rgb(241,169,0)" rx="2" ry="2" />
<text  x="952.13" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="824.9" y="1701" width="0.2" height="15.0" fill="rgb(221,199,18)" rx="2" ry="2" />
<text  x="827.91" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (11 samples, 0.19%)</title><rect x="73.2" y="1957" width="2.2" height="15.0" fill="rgb(218,110,45)" rx="2" ry="2" />
<text  x="76.21" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="519.0" y="1781" width="0.6" height="15.0" fill="rgb(248,192,15)" rx="2" ry="2" />
<text  x="522.05" y="1791.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="103.7" y="2021" width="0.2" height="15.0" fill="rgb(253,70,48)" rx="2" ry="2" />
<text  x="106.71" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="39.9" y="2005" width="0.2" height="15.0" fill="rgb(214,89,45)" rx="2" ry="2" />
<text  x="42.91" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="632.3" y="2005" width="0.2" height="15.0" fill="rgb(230,17,48)" rx="2" ry="2" />
<text  x="635.30" y="2015.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="1104.3" y="1445" width="0.4" height="15.0" fill="rgb(206,215,0)" rx="2" ry="2" />
<text  x="1107.26" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="386.7" y="1861" width="0.2" height="15.0" fill="rgb(233,229,27)" rx="2" ry="2" />
<text  x="389.65" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="57.5" y="1845" width="0.2" height="15.0" fill="rgb(218,59,18)" rx="2" ry="2" />
<text  x="60.46" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="105.1" y="677" width="14.0" height="15.0" fill="rgb(212,156,31)" rx="2" ry="2" />
<text  x="108.11" y="687.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="884.7" y="1813" width="0.2" height="15.0" fill="rgb(247,222,54)" rx="2" ry="2" />
<text  x="887.73" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="960.3" y="1957" width="0.2" height="15.0" fill="rgb(217,14,21)" rx="2" ry="2" />
<text  x="963.30" y="1967.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="899.1" y="2005" width="0.4" height="15.0" fill="rgb(243,228,40)" rx="2" ry="2" />
<text  x="902.09" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="617.9" y="2005" width="0.2" height="15.0" fill="rgb(229,138,22)" rx="2" ry="2" />
<text  x="620.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="118.9" y="277" width="0.2" height="15.0" fill="rgb(253,163,26)" rx="2" ry="2" />
<text  x="121.87" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="642.1" y="1909" width="0.2" height="15.0" fill="rgb(221,177,17)" rx="2" ry="2" />
<text  x="645.07" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="883.3" y="1861" width="0.2" height="15.0" fill="rgb(209,215,3)" rx="2" ry="2" />
<text  x="886.34" y="1871.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="768.1" y="1701" width="0.2" height="15.0" fill="rgb(214,55,18)" rx="2" ry="2" />
<text  x="771.09" y="1711.5" ></text>
</g>
<g >
<title>__skb_clone (21 samples, 0.35%)</title><rect x="802.8" y="1653" width="4.2" height="15.0" fill="rgb(209,229,24)" rx="2" ry="2" />
<text  x="805.78" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="599.8" y="1845" width="0.4" height="15.0" fill="rgb(224,98,29)" rx="2" ry="2" />
<text  x="602.80" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="576.9" y="1813" width="0.2" height="15.0" fill="rgb(209,144,13)" rx="2" ry="2" />
<text  x="579.87" y="1823.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (43 samples, 0.73%)</title><rect x="269.0" y="1877" width="8.6" height="15.0" fill="rgb(216,220,6)" rx="2" ry="2" />
<text  x="272.01" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="310.3" y="1509" width="0.2" height="15.0" fill="rgb(217,111,48)" rx="2" ry="2" />
<text  x="313.28" y="1519.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="462.4" y="1605" width="0.2" height="15.0" fill="rgb(237,54,14)" rx="2" ry="2" />
<text  x="465.42" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (4 samples, 0.07%)</title><rect x="621.5" y="2037" width="0.8" height="15.0" fill="rgb(236,83,0)" rx="2" ry="2" />
<text  x="624.53" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.07%)</title><rect x="614.4" y="1829" width="0.8" height="15.0" fill="rgb(253,57,49)" rx="2" ry="2" />
<text  x="617.36" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="224.1" y="1701" width="0.2" height="15.0" fill="rgb(229,167,6)" rx="2" ry="2" />
<text  x="227.15" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="782.2" y="1349" width="0.2" height="15.0" fill="rgb(246,185,44)" rx="2" ry="2" />
<text  x="785.24" y="1359.5" ></text>
</g>
</g>
</svg>
