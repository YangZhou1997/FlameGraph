<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="258.6" y="1813" width="0.2" height="15.0" fill="rgb(225,58,38)" rx="2" ry="2" />
<text  x="261.62" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (8 samples, 0.13%)</title><rect x="97.6" y="37" width="1.6" height="15.0" fill="rgb(244,43,47)" rx="2" ry="2" />
<text  x="100.62" y="47.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="980.3" y="1989" width="0.4" height="15.0" fill="rgb(251,37,44)" rx="2" ry="2" />
<text  x="983.35" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (65 samples, 1.09%)</title><rect x="1147.3" y="2053" width="12.8" height="15.0" fill="rgb(215,103,7)" rx="2" ry="2" />
<text  x="1150.28" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.47%)</title><rect x="310.0" y="2021" width="5.6" height="15.0" fill="rgb(244,182,30)" rx="2" ry="2" />
<text  x="313.04" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="634.0" y="1957" width="0.2" height="15.0" fill="rgb(212,17,13)" rx="2" ry="2" />
<text  x="637.02" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="376.1" y="1909" width="0.2" height="15.0" fill="rgb(237,108,43)" rx="2" ry="2" />
<text  x="379.10" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="201.7" y="1989" width="0.2" height="15.0" fill="rgb(238,146,39)" rx="2" ry="2" />
<text  x="204.66" y="1999.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="693.8" y="1797" width="0.1" height="15.0" fill="rgb(231,181,19)" rx="2" ry="2" />
<text  x="696.75" y="1807.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="1086.2" y="1893" width="0.4" height="15.0" fill="rgb(227,197,15)" rx="2" ry="2" />
<text  x="1089.16" y="1903.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="224.4" y="2037" width="0.4" height="15.0" fill="rgb(218,26,42)" rx="2" ry="2" />
<text  x="227.40" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (109 samples, 1.83%)</title><rect x="264.6" y="1637" width="21.5" height="15.0" fill="rgb(215,50,19)" rx="2" ry="2" />
<text  x="267.55" y="1647.5" >_..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1080.8" y="1797" width="0.2" height="15.0" fill="rgb(228,140,4)" rx="2" ry="2" />
<text  x="1083.82" y="1807.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (8 samples, 0.13%)</title><rect x="103.8" y="69" width="1.5" height="15.0" fill="rgb(246,120,28)" rx="2" ry="2" />
<text  x="106.75" y="79.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="984.3" y="1989" width="0.2" height="15.0" fill="rgb(231,200,24)" rx="2" ry="2" />
<text  x="987.30" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="187.4" y="2005" width="0.4" height="15.0" fill="rgb(253,19,36)" rx="2" ry="2" />
<text  x="190.42" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="109.3" y="37" width="0.8" height="15.0" fill="rgb(210,30,19)" rx="2" ry="2" />
<text  x="112.29" y="47.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="986.7" y="2005" width="0.2" height="15.0" fill="rgb(247,143,36)" rx="2" ry="2" />
<text  x="989.67" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (109 samples, 1.83%)</title><rect x="264.6" y="1541" width="21.5" height="15.0" fill="rgb(247,132,30)" rx="2" ry="2" />
<text  x="267.55" y="1551.5" >t..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="643.7" y="2005" width="0.2" height="15.0" fill="rgb(221,147,18)" rx="2" ry="2" />
<text  x="646.71" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="240.4" y="1877" width="0.2" height="15.0" fill="rgb(248,179,37)" rx="2" ry="2" />
<text  x="243.42" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="22.7" y="1909" width="0.6" height="15.0" fill="rgb(210,162,34)" rx="2" ry="2" />
<text  x="25.66" y="1919.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="206.8" y="1845" width="0.2" height="15.0" fill="rgb(241,137,13)" rx="2" ry="2" />
<text  x="209.80" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="185.6" y="1973" width="0.2" height="15.0" fill="rgb(235,47,3)" rx="2" ry="2" />
<text  x="188.64" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1925" width="50.5" height="15.0" fill="rgb(230,32,37)" rx="2" ry="2" />
<text  x="65.02" y="1935.5" >[unkn..</text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="952.1" y="1989" width="0.6" height="15.0" fill="rgb(231,161,38)" rx="2" ry="2" />
<text  x="955.06" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (2 samples, 0.03%)</title><rect x="829.6" y="2005" width="0.4" height="15.0" fill="rgb(252,113,1)" rx="2" ry="2" />
<text  x="832.63" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="13.4" y="2037" width="0.2" height="15.0" fill="rgb(216,164,47)" rx="2" ry="2" />
<text  x="16.36" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="521.9" y="2005" width="0.4" height="15.0" fill="rgb(216,70,25)" rx="2" ry="2" />
<text  x="524.87" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="648.1" y="1989" width="0.2" height="15.0" fill="rgb(227,163,51)" rx="2" ry="2" />
<text  x="651.06" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="180.3" y="1973" width="0.8" height="15.0" fill="rgb(241,92,43)" rx="2" ry="2" />
<text  x="183.30" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="595.3" y="1957" width="0.7" height="15.0" fill="rgb(210,218,19)" rx="2" ry="2" />
<text  x="598.25" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="378.5" y="1861" width="0.2" height="15.0" fill="rgb(231,57,34)" rx="2" ry="2" />
<text  x="381.48" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="645" width="50.3" height="15.0" fill="rgb(234,166,19)" rx="2" ry="2" />
<text  x="65.02" y="655.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="365.6" y="1989" width="0.2" height="15.0" fill="rgb(217,74,3)" rx="2" ry="2" />
<text  x="368.62" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="185.0" y="1973" width="0.2" height="15.0" fill="rgb(230,172,12)" rx="2" ry="2" />
<text  x="188.04" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1893" width="50.5" height="15.0" fill="rgb(246,100,15)" rx="2" ry="2" />
<text  x="65.02" y="1903.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (110 samples, 1.84%)</title><rect x="475.0" y="1989" width="21.8" height="15.0" fill="rgb(254,226,53)" rx="2" ry="2" />
<text  x="478.00" y="1999.5" >f..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="229" width="50.3" height="15.0" fill="rgb(208,126,24)" rx="2" ry="2" />
<text  x="65.02" y="239.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (304 samples, 5.10%)</title><rect x="754.3" y="1989" width="60.1" height="15.0" fill="rgb(218,170,30)" rx="2" ry="2" />
<text  x="757.27" y="1999.5" >folly:..</text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="23.6" y="1893" width="0.8" height="15.0" fill="rgb(253,169,24)" rx="2" ry="2" />
<text  x="26.65" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="660.1" y="2005" width="0.2" height="15.0" fill="rgb(240,149,14)" rx="2" ry="2" />
<text  x="663.13" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="358.3" y="1973" width="0.6" height="15.0" fill="rgb(210,175,41)" rx="2" ry="2" />
<text  x="361.30" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="325" width="50.3" height="15.0" fill="rgb(211,160,47)" rx="2" ry="2" />
<text  x="65.02" y="335.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (32 samples, 0.54%)</title><rect x="586.0" y="1973" width="6.3" height="15.0" fill="rgb(221,96,38)" rx="2" ry="2" />
<text  x="588.96" y="1983.5" ></text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="255.1" y="1861" width="0.7" height="15.0" fill="rgb(214,195,20)" rx="2" ry="2" />
<text  x="258.06" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (3 samples, 0.05%)</title><rect x="210.8" y="2021" width="0.5" height="15.0" fill="rgb(250,6,31)" rx="2" ry="2" />
<text  x="213.75" y="2031.5" ></text>
</g>
<g >
<title>schedule (15 samples, 0.25%)</title><rect x="13.6" y="1941" width="2.9" height="15.0" fill="rgb(236,7,20)" rx="2" ry="2" />
<text  x="16.56" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="613.4" y="1941" width="0.6" height="15.0" fill="rgb(216,103,27)" rx="2" ry="2" />
<text  x="616.45" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="370.6" y="1925" width="0.2" height="15.0" fill="rgb(219,7,54)" rx="2" ry="2" />
<text  x="373.57" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="495.2" y="1941" width="0.6" height="15.0" fill="rgb(222,220,36)" rx="2" ry="2" />
<text  x="498.17" y="1951.5" ></text>
</g>
<g >
<title>skb_release_data (6 samples, 0.10%)</title><rect x="1046.0" y="1893" width="1.2" height="15.0" fill="rgb(210,73,38)" rx="2" ry="2" />
<text  x="1049.01" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="351.0" y="1957" width="0.2" height="15.0" fill="rgb(250,58,38)" rx="2" ry="2" />
<text  x="353.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1733" width="50.5" height="15.0" fill="rgb(210,65,4)" rx="2" ry="2" />
<text  x="65.02" y="1743.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlagsImpl (1 samples, 0.02%)</title><rect x="590.3" y="1941" width="0.2" height="15.0" fill="rgb(252,43,2)" rx="2" ry="2" />
<text  x="593.31" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="407.2" y="2037" width="0.2" height="15.0" fill="rgb(235,94,23)" rx="2" ry="2" />
<text  x="410.16" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (72 samples, 1.21%)</title><rect x="794.6" y="1973" width="14.3" height="15.0" fill="rgb(206,120,46)" rx="2" ry="2" />
<text  x="797.62" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="862.1" y="1909" width="0.2" height="15.0" fill="rgb(242,49,1)" rx="2" ry="2" />
<text  x="865.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1413" width="50.5" height="15.0" fill="rgb(215,100,12)" rx="2" ry="2" />
<text  x="65.02" y="1423.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (13 samples, 0.22%)</title><rect x="106.7" y="37" width="2.6" height="15.0" fill="rgb(220,150,41)" rx="2" ry="2" />
<text  x="109.72" y="47.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="1087.5" y="1973" width="1.6" height="15.0" fill="rgb(253,14,19)" rx="2" ry="2" />
<text  x="1090.55" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="293.0" y="1733" width="0.2" height="15.0" fill="rgb(243,157,9)" rx="2" ry="2" />
<text  x="296.03" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="591.9" y="1941" width="0.2" height="15.0" fill="rgb(218,94,16)" rx="2" ry="2" />
<text  x="594.89" y="1951.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (11 samples, 0.18%)</title><rect x="11.2" y="2069" width="2.2" height="15.0" fill="rgb(215,88,53)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (3 samples, 0.05%)</title><rect x="710.6" y="1861" width="0.6" height="15.0" fill="rgb(225,156,27)" rx="2" ry="2" />
<text  x="713.56" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="587.1" y="1877" width="0.2" height="15.0" fill="rgb(218,97,5)" rx="2" ry="2" />
<text  x="590.14" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (2 samples, 0.03%)</title><rect x="497.0" y="1989" width="0.3" height="15.0" fill="rgb(217,93,19)" rx="2" ry="2" />
<text  x="499.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="406.2" y="2037" width="0.2" height="15.0" fill="rgb(228,84,8)" rx="2" ry="2" />
<text  x="409.17" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="933" width="50.3" height="15.0" fill="rgb(237,212,30)" rx="2" ry="2" />
<text  x="65.02" y="943.5" >[unkn..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="590.7" y="1909" width="0.2" height="15.0" fill="rgb(235,225,4)" rx="2" ry="2" />
<text  x="593.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="566.4" y="1989" width="0.2" height="15.0" fill="rgb(248,130,17)" rx="2" ry="2" />
<text  x="569.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1237" width="50.5" height="15.0" fill="rgb(244,52,34)" rx="2" ry="2" />
<text  x="65.02" y="1247.5" >[unkn..</text>
</g>
<g >
<title>tcp_sendmsg (290 samples, 4.86%)</title><rect x="243.4" y="1909" width="57.3" height="15.0" fill="rgb(226,104,1)" rx="2" ry="2" />
<text  x="246.39" y="1919.5" >tcp_se..</text>
</g>
<g >
<title>malloc (31 samples, 0.52%)</title><rect x="1182.3" y="2053" width="6.1" height="15.0" fill="rgb(230,37,11)" rx="2" ry="2" />
<text  x="1185.29" y="2063.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="640.2" y="2005" width="0.1" height="15.0" fill="rgb(206,193,48)" rx="2" ry="2" />
<text  x="643.15" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16 samples, 0.27%)</title><rect x="286.9" y="1685" width="3.2" height="15.0" fill="rgb(241,177,22)" rx="2" ry="2" />
<text  x="289.90" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="657.2" y="2021" width="0.2" height="15.0" fill="rgb(239,1,8)" rx="2" ry="2" />
<text  x="660.16" y="2031.5" ></text>
</g>
<g >
<title>__skb_clone (7 samples, 0.12%)</title><rect x="291.8" y="1797" width="1.4" height="15.0" fill="rgb(253,97,20)" rx="2" ry="2" />
<text  x="294.85" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1178.1" y="2037" width="0.2" height="15.0" fill="rgb(236,192,44)" rx="2" ry="2" />
<text  x="1181.13" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="552.1" y="1989" width="0.4" height="15.0" fill="rgb(248,62,20)" rx="2" ry="2" />
<text  x="555.14" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="634.0" y="1973" width="1.2" height="15.0" fill="rgb(251,15,27)" rx="2" ry="2" />
<text  x="637.02" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1269" width="50.5" height="15.0" fill="rgb(225,200,4)" rx="2" ry="2" />
<text  x="65.02" y="1279.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="390.5" y="1973" width="0.2" height="15.0" fill="rgb(205,49,48)" rx="2" ry="2" />
<text  x="393.54" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (7 samples, 0.12%)</title><rect x="385.4" y="2005" width="1.4" height="15.0" fill="rgb(226,204,7)" rx="2" ry="2" />
<text  x="388.40" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (53 samples, 0.89%)</title><rect x="484.3" y="1941" width="10.5" height="15.0" fill="rgb(217,148,36)" rx="2" ry="2" />
<text  x="487.29" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (10 samples, 0.17%)</title><rect x="577.5" y="1989" width="1.9" height="15.0" fill="rgb(222,79,32)" rx="2" ry="2" />
<text  x="580.45" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="466.9" y="1973" width="0.6" height="15.0" fill="rgb(237,113,15)" rx="2" ry="2" />
<text  x="469.89" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (29 samples, 0.49%)</title><rect x="286.1" y="1717" width="5.7" height="15.0" fill="rgb(217,4,15)" rx="2" ry="2" />
<text  x="289.11" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.27%)</title><rect x="1033.0" y="2021" width="3.1" height="15.0" fill="rgb(207,37,6)" rx="2" ry="2" />
<text  x="1035.96" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="630.3" y="1973" width="0.8" height="15.0" fill="rgb(207,117,29)" rx="2" ry="2" />
<text  x="633.26" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="133.4" y="1941" width="0.2" height="15.0" fill="rgb(217,95,29)" rx="2" ry="2" />
<text  x="136.42" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (10 samples, 0.17%)</title><rect x="628.1" y="1973" width="2.0" height="15.0" fill="rgb(225,210,12)" rx="2" ry="2" />
<text  x="631.09" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (48 samples, 0.80%)</title><rect x="1161.9" y="2053" width="9.5" height="15.0" fill="rgb(250,78,45)" rx="2" ry="2" />
<text  x="1164.91" y="2063.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="206.8" y="1957" width="0.2" height="15.0" fill="rgb(215,51,27)" rx="2" ry="2" />
<text  x="209.80" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1102.4" y="1989" width="0.2" height="15.0" fill="rgb(250,41,18)" rx="2" ry="2" />
<text  x="1105.38" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="103.0" y="37" width="0.2" height="15.0" fill="rgb(225,25,33)" rx="2" ry="2" />
<text  x="105.96" y="47.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1146.1" y="1973" width="0.2" height="15.0" fill="rgb(215,36,50)" rx="2" ry="2" />
<text  x="1149.09" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="733.7" y="1909" width="0.2" height="15.0" fill="rgb(248,82,11)" rx="2" ry="2" />
<text  x="736.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (10 samples, 0.17%)</title><rect x="523.7" y="2037" width="1.9" height="15.0" fill="rgb(227,174,31)" rx="2" ry="2" />
<text  x="526.65" y="2047.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (32 samples, 0.54%)</title><rect x="506.1" y="1989" width="6.3" height="15.0" fill="rgb(244,172,16)" rx="2" ry="2" />
<text  x="509.05" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="131.2" y="1813" width="0.2" height="15.0" fill="rgb(223,204,23)" rx="2" ry="2" />
<text  x="134.24" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (4 samples, 0.07%)</title><rect x="204.6" y="1989" width="0.8" height="15.0" fill="rgb(250,132,28)" rx="2" ry="2" />
<text  x="207.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (56 samples, 0.94%)</title><rect x="392.1" y="2037" width="11.1" height="15.0" fill="rgb(247,208,33)" rx="2" ry="2" />
<text  x="395.13" y="2047.5" ></text>
</g>
<g >
<title>jump_fcontext (3 samples, 0.05%)</title><rect x="975.8" y="1893" width="0.6" height="15.0" fill="rgb(206,208,42)" rx="2" ry="2" />
<text  x="978.80" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (7 samples, 0.12%)</title><rect x="735.7" y="1941" width="1.4" height="15.0" fill="rgb(248,224,53)" rx="2" ry="2" />
<text  x="738.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="106.5" y="69" width="4.0" height="15.0" fill="rgb(222,73,43)" rx="2" ry="2" />
<text  x="109.52" y="79.5" ></text>
</g>
<g >
<title>sk_reset_timer (8 samples, 0.13%)</title><rect x="294.8" y="1781" width="1.6" height="15.0" fill="rgb(239,145,17)" rx="2" ry="2" />
<text  x="297.81" y="1791.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="981.1" y="1989" width="0.4" height="15.0" fill="rgb(242,197,48)" rx="2" ry="2" />
<text  x="984.14" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="360.9" y="1957" width="0.8" height="15.0" fill="rgb(246,166,48)" rx="2" ry="2" />
<text  x="363.87" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="1026.2" y="2037" width="0.6" height="15.0" fill="rgb(227,109,8)" rx="2" ry="2" />
<text  x="1029.23" y="2047.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="258.6" y="1797" width="0.2" height="15.0" fill="rgb(213,22,20)" rx="2" ry="2" />
<text  x="261.62" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (30 samples, 0.50%)</title><rect x="322.9" y="1989" width="5.9" height="15.0" fill="rgb(249,150,21)" rx="2" ry="2" />
<text  x="325.90" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="23.3" y="1957" width="0.1" height="15.0" fill="rgb(219,6,9)" rx="2" ry="2" />
<text  x="26.25" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1781" width="50.5" height="15.0" fill="rgb(241,171,22)" rx="2" ry="2" />
<text  x="65.02" y="1791.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="1161.3" y="2053" width="0.2" height="15.0" fill="rgb(251,138,2)" rx="2" ry="2" />
<text  x="1164.32" y="2063.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="591.5" y="1893" width="0.2" height="15.0" fill="rgb(238,179,16)" rx="2" ry="2" />
<text  x="594.50" y="1903.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="353.6" y="1941" width="0.7" height="15.0" fill="rgb(236,28,4)" rx="2" ry="2" />
<text  x="356.56" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (12 samples, 0.20%)</title><rect x="708.8" y="1877" width="2.4" height="15.0" fill="rgb(219,182,18)" rx="2" ry="2" />
<text  x="711.78" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (8 samples, 0.13%)</title><rect x="821.5" y="2005" width="1.6" height="15.0" fill="rgb(206,140,50)" rx="2" ry="2" />
<text  x="824.52" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5 samples, 0.08%)</title><rect x="402.2" y="1989" width="1.0" height="15.0" fill="rgb(237,190,7)" rx="2" ry="2" />
<text  x="405.21" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="973.6" y="1877" width="0.2" height="15.0" fill="rgb(216,131,14)" rx="2" ry="2" />
<text  x="976.62" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (12 samples, 0.20%)</title><rect x="834.8" y="2005" width="2.3" height="15.0" fill="rgb(225,20,32)" rx="2" ry="2" />
<text  x="837.77" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="891.7" y="2037" width="0.2" height="15.0" fill="rgb(228,95,25)" rx="2" ry="2" />
<text  x="894.74" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (5 samples, 0.08%)</title><rect x="468.5" y="1989" width="1.0" height="15.0" fill="rgb(252,187,8)" rx="2" ry="2" />
<text  x="471.47" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="207.2" y="1957" width="0.6" height="15.0" fill="rgb(210,67,51)" rx="2" ry="2" />
<text  x="210.19" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="401.8" y="2005" width="0.4" height="15.0" fill="rgb(250,177,33)" rx="2" ry="2" />
<text  x="404.82" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1032.8" y="2021" width="0.2" height="15.0" fill="rgb(245,118,3)" rx="2" ry="2" />
<text  x="1035.76" y="2031.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="297.2" y="1877" width="0.4" height="15.0" fill="rgb(240,226,34)" rx="2" ry="2" />
<text  x="300.19" y="1887.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (4 samples, 0.07%)</title><rect x="893.7" y="2037" width="0.8" height="15.0" fill="rgb(244,44,41)" rx="2" ry="2" />
<text  x="896.71" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="805" width="50.3" height="15.0" fill="rgb(230,112,4)" rx="2" ry="2" />
<text  x="65.02" y="815.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="382.6" y="1941" width="0.2" height="15.0" fill="rgb(218,114,39)" rx="2" ry="2" />
<text  x="385.63" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="353.4" y="1941" width="0.2" height="15.0" fill="rgb(239,65,31)" rx="2" ry="2" />
<text  x="356.36" y="1951.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(253,65,37)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (10 samples, 0.17%)</title><rect x="487.3" y="1909" width="1.9" height="15.0" fill="rgb(221,4,5)" rx="2" ry="2" />
<text  x="490.26" y="1919.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="734.1" y="1909" width="0.2" height="15.0" fill="rgb(221,37,3)" rx="2" ry="2" />
<text  x="737.10" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (39 samples, 0.65%)</title><rect x="544.4" y="1989" width="7.7" height="15.0" fill="rgb(244,173,4)" rx="2" ry="2" />
<text  x="547.42" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="338.5" y="1957" width="0.4" height="15.0" fill="rgb(230,209,45)" rx="2" ry="2" />
<text  x="341.52" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="242.0" y="1877" width="0.2" height="15.0" fill="rgb(243,208,48)" rx="2" ry="2" />
<text  x="245.00" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1989" width="50.5" height="15.0" fill="rgb(229,34,2)" rx="2" ry="2" />
<text  x="65.02" y="1999.5" >[unkn..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="345.8" y="1941" width="0.2" height="15.0" fill="rgb(234,115,13)" rx="2" ry="2" />
<text  x="348.84" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="743.2" y="1941" width="0.2" height="15.0" fill="rgb(225,147,34)" rx="2" ry="2" />
<text  x="746.20" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="837.3" y="2005" width="0.4" height="15.0" fill="rgb(205,164,36)" rx="2" ry="2" />
<text  x="840.34" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="839.3" y="1989" width="0.8" height="15.0" fill="rgb(244,195,37)" rx="2" ry="2" />
<text  x="842.32" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="599.2" y="1973" width="0.2" height="15.0" fill="rgb(224,43,23)" rx="2" ry="2" />
<text  x="602.21" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1130.3" y="1957" width="0.2" height="15.0" fill="rgb(205,98,7)" rx="2" ry="2" />
<text  x="1133.27" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1080.8" y="1845" width="0.2" height="15.0" fill="rgb(246,118,51)" rx="2" ry="2" />
<text  x="1083.82" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (9 samples, 0.15%)</title><rect x="638.0" y="2005" width="1.8" height="15.0" fill="rgb(227,168,36)" rx="2" ry="2" />
<text  x="640.98" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 5.43%)</title><rect x="528.8" y="2021" width="64.1" height="15.0" fill="rgb(243,66,16)" rx="2" ry="2" />
<text  x="531.80" y="2031.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (12 samples, 0.20%)</title><rect x="197.3" y="1957" width="2.4" height="15.0" fill="rgb(244,207,4)" rx="2" ry="2" />
<text  x="200.30" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="743.6" y="1941" width="0.2" height="15.0" fill="rgb(227,102,20)" rx="2" ry="2" />
<text  x="746.59" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="901" width="50.3" height="15.0" fill="rgb(212,200,24)" rx="2" ry="2" />
<text  x="65.02" y="911.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="204.2" y="1973" width="0.2" height="15.0" fill="rgb(230,119,6)" rx="2" ry="2" />
<text  x="207.23" y="1983.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="247.9" y="1861" width="0.2" height="15.0" fill="rgb(237,31,29)" rx="2" ry="2" />
<text  x="250.94" y="1871.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="440.4" y="1893" width="0.2" height="15.0" fill="rgb(246,143,8)" rx="2" ry="2" />
<text  x="443.39" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.22%)</title><rect x="62.0" y="101" width="49.9" height="15.0" fill="rgb(252,139,31)" rx="2" ry="2" />
<text  x="65.02" y="111.5" >[unkn..</text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="746.8" y="1989" width="0.2" height="15.0" fill="rgb(242,53,28)" rx="2" ry="2" />
<text  x="749.76" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (13 samples, 0.22%)</title><rect x="958.6" y="1909" width="2.6" height="15.0" fill="rgb(207,110,5)" rx="2" ry="2" />
<text  x="961.59" y="1919.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::bitsPerBlock (1 samples, 0.02%)</title><rect x="355.5" y="1941" width="0.2" height="15.0" fill="rgb(243,6,14)" rx="2" ry="2" />
<text  x="358.53" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="563.0" y="1973" width="0.4" height="15.0" fill="rgb(229,155,31)" rx="2" ry="2" />
<text  x="566.01" y="1983.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (17 samples, 0.28%)</title><rect x="256.4" y="1877" width="3.4" height="15.0" fill="rgb(215,157,23)" rx="2" ry="2" />
<text  x="259.44" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (48 samples, 0.80%)</title><rect x="567.8" y="1989" width="9.5" height="15.0" fill="rgb(248,16,39)" rx="2" ry="2" />
<text  x="570.76" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (38 samples, 0.64%)</title><rect x="869.0" y="2005" width="7.5" height="15.0" fill="rgb(228,156,8)" rx="2" ry="2" />
<text  x="871.99" y="2015.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="246.0" y="1893" width="0.2" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" />
<text  x="248.96" y="1903.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="739.4" y="1941" width="0.2" height="15.0" fill="rgb(215,46,30)" rx="2" ry="2" />
<text  x="742.44" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="403.0" y="1973" width="0.2" height="15.0" fill="rgb(214,56,44)" rx="2" ry="2" />
<text  x="406.00" y="1983.5" ></text>
</g>
<g >
<title>tcp_push (186 samples, 3.12%)</title><rect x="260.4" y="1877" width="36.8" height="15.0" fill="rgb(232,116,14)" rx="2" ry="2" />
<text  x="263.40" y="1887.5" >tcp..</text>
</g>
<g >
<title>evmap_io_active_ (10 samples, 0.17%)</title><rect x="1094.5" y="2053" width="1.9" height="15.0" fill="rgb(222,59,36)" rx="2" ry="2" />
<text  x="1097.47" y="2063.5" ></text>
</g>
<g >
<title>ep_send_events_proc (28 samples, 0.47%)</title><rect x="310.0" y="1941" width="5.6" height="15.0" fill="rgb(209,124,26)" rx="2" ry="2" />
<text  x="313.04" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="359.5" y="1973" width="0.2" height="15.0" fill="rgb(215,136,37)" rx="2" ry="2" />
<text  x="362.49" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="612.9" y="1941" width="0.2" height="15.0" fill="rgb(229,182,4)" rx="2" ry="2" />
<text  x="615.86" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1102.8" y="1973" width="0.2" height="15.0" fill="rgb(244,81,42)" rx="2" ry="2" />
<text  x="1105.78" y="1983.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="23.6" y="1957" width="0.8" height="15.0" fill="rgb(207,196,30)" rx="2" ry="2" />
<text  x="26.65" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1140.0" y="1989" width="0.2" height="15.0" fill="rgb(213,188,48)" rx="2" ry="2" />
<text  x="1142.96" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="521.1" y="2005" width="0.8" height="15.0" fill="rgb(228,127,34)" rx="2" ry="2" />
<text  x="524.08" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (6 samples, 0.10%)</title><rect x="825.5" y="2005" width="1.2" height="15.0" fill="rgb(247,137,46)" rx="2" ry="2" />
<text  x="828.48" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="644.1" y="2021" width="2.0" height="15.0" fill="rgb(235,151,13)" rx="2" ry="2" />
<text  x="647.11" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="91.5" y="37" width="0.4" height="15.0" fill="rgb(223,76,21)" rx="2" ry="2" />
<text  x="94.49" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (97 samples, 1.63%)</title><rect x="477.6" y="1973" width="19.2" height="15.0" fill="rgb(250,130,28)" rx="2" ry="2" />
<text  x="480.57" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="132.4" y="1973" width="0.2" height="15.0" fill="rgb(228,97,21)" rx="2" ry="2" />
<text  x="135.43" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="395.3" y="1973" width="0.2" height="15.0" fill="rgb(229,169,45)" rx="2" ry="2" />
<text  x="398.29" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1637" width="50.5" height="15.0" fill="rgb(253,200,51)" rx="2" ry="2" />
<text  x="65.02" y="1647.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="477.4" y="1973" width="0.2" height="15.0" fill="rgb(234,137,47)" rx="2" ry="2" />
<text  x="480.37" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="25.4" y="2005" width="0.2" height="15.0" fill="rgb(207,111,46)" rx="2" ry="2" />
<text  x="28.43" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="684.1" y="1941" width="0.4" height="15.0" fill="rgb(217,189,41)" rx="2" ry="2" />
<text  x="687.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="741" width="50.3" height="15.0" fill="rgb(237,57,4)" rx="2" ry="2" />
<text  x="65.02" y="751.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="316.0" y="2037" width="0.4" height="15.0" fill="rgb(205,20,48)" rx="2" ry="2" />
<text  x="318.98" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1205" width="50.5" height="15.0" fill="rgb(217,132,54)" rx="2" ry="2" />
<text  x="65.02" y="1215.5" >[unkn..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="21.7" y="1909" width="0.2" height="15.0" fill="rgb(217,112,42)" rx="2" ry="2" />
<text  x="24.67" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="540.3" y="1845" width="0.2" height="15.0" fill="rgb(213,197,17)" rx="2" ry="2" />
<text  x="543.27" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (68 samples, 1.14%)</title><rect x="932.7" y="1957" width="13.4" height="15.0" fill="rgb(214,41,14)" rx="2" ry="2" />
<text  x="935.68" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="130.7" y="1925" width="0.7" height="15.0" fill="rgb(207,148,17)" rx="2" ry="2" />
<text  x="133.65" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (14 samples, 0.23%)</title><rect x="325.3" y="1925" width="2.7" height="15.0" fill="rgb(237,16,17)" rx="2" ry="2" />
<text  x="328.27" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="185.6" y="1989" width="0.2" height="15.0" fill="rgb(235,157,20)" rx="2" ry="2" />
<text  x="188.64" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="467.5" y="1989" width="0.8" height="15.0" fill="rgb(239,136,32)" rx="2" ry="2" />
<text  x="470.48" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="131.6" y="1925" width="0.6" height="15.0" fill="rgb(254,14,20)" rx="2" ry="2" />
<text  x="134.64" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (426 samples, 7.14%)</title><rect x="662.7" y="2005" width="84.3" height="15.0" fill="rgb(232,70,15)" rx="2" ry="2" />
<text  x="665.70" y="2015.5" >facebook:..</text>
</g>
<g >
<title>folly::EventBase::loopBody (15 samples, 0.25%)</title><rect x="207.8" y="1973" width="3.0" height="15.0" fill="rgb(216,90,17)" rx="2" ry="2" />
<text  x="210.79" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1049.2" y="1797" width="0.2" height="15.0" fill="rgb(215,97,50)" rx="2" ry="2" />
<text  x="1052.18" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="222.6" y="1941" width="0.2" height="15.0" fill="rgb(243,116,27)" rx="2" ry="2" />
<text  x="225.62" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="245.2" y="1573" width="0.2" height="15.0" fill="rgb(239,218,34)" rx="2" ry="2" />
<text  x="248.17" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1349" width="50.5" height="15.0" fill="rgb(227,12,11)" rx="2" ry="2" />
<text  x="65.02" y="1359.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="659.9" y="1989" width="0.2" height="15.0" fill="rgb(209,91,5)" rx="2" ry="2" />
<text  x="662.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="201.5" y="2005" width="0.4" height="15.0" fill="rgb(251,64,12)" rx="2" ry="2" />
<text  x="204.46" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (3 samples, 0.05%)</title><rect x="403.2" y="2037" width="0.6" height="15.0" fill="rgb(234,83,20)" rx="2" ry="2" />
<text  x="406.20" y="2047.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (5 samples, 0.08%)</title><rect x="257.6" y="1845" width="1.0" height="15.0" fill="rgb(222,202,6)" rx="2" ry="2" />
<text  x="260.63" y="1855.5" ></text>
</g>
<g >
<title>all (5,966 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(242,165,42)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="341" width="50.3" height="15.0" fill="rgb(241,107,37)" rx="2" ry="2" />
<text  x="65.02" y="351.5" >[unkn..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (5 samples, 0.08%)</title><rect x="351.2" y="1957" width="1.0" height="15.0" fill="rgb(206,29,49)" rx="2" ry="2" />
<text  x="354.18" y="1967.5" ></text>
</g>
<g >
<title>mcrouter (5,933 samples, 99.45%)</title><rect x="16.5" y="2069" width="1173.5" height="15.0" fill="rgb(235,94,19)" rx="2" ry="2" />
<text  x="19.53" y="2079.5" >mcrouter</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1035.1" y="2005" width="0.2" height="15.0" fill="rgb(230,157,36)" rx="2" ry="2" />
<text  x="1038.13" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (5 samples, 0.08%)</title><rect x="1101.8" y="2005" width="1.0" height="15.0" fill="rgb(252,96,13)" rx="2" ry="2" />
<text  x="1104.79" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (48 samples, 0.80%)</title><rect x="531.0" y="1973" width="9.5" height="15.0" fill="rgb(213,40,18)" rx="2" ry="2" />
<text  x="533.97" y="1983.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="530.6" y="1829" width="0.2" height="15.0" fill="rgb(236,99,33)" rx="2" ry="2" />
<text  x="533.58" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="735.1" y="1941" width="0.4" height="15.0" fill="rgb(217,80,27)" rx="2" ry="2" />
<text  x="738.09" y="1951.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (6 samples, 0.10%)</title><rect x="354.5" y="1973" width="1.2" height="15.0" fill="rgb(246,225,38)" rx="2" ry="2" />
<text  x="357.55" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (30 samples, 0.50%)</title><rect x="571.3" y="1941" width="6.0" height="15.0" fill="rgb(212,5,47)" rx="2" ry="2" />
<text  x="574.32" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="594.9" y="1989" width="0.4" height="15.0" fill="rgb(247,17,1)" rx="2" ry="2" />
<text  x="597.86" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (3 samples, 0.05%)</title><rect x="19.9" y="1973" width="0.6" height="15.0" fill="rgb(231,213,19)" rx="2" ry="2" />
<text  x="22.89" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (72 samples, 1.21%)</title><rect x="867.8" y="2037" width="14.2" height="15.0" fill="rgb(216,68,39)" rx="2" ry="2" />
<text  x="870.80" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1102.4" y="1973" width="0.2" height="15.0" fill="rgb(251,52,3)" rx="2" ry="2" />
<text  x="1105.38" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="206.8" y="1877" width="0.2" height="15.0" fill="rgb(252,188,39)" rx="2" ry="2" />
<text  x="209.80" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="604.0" y="2005" width="0.2" height="15.0" fill="rgb(253,69,10)" rx="2" ry="2" />
<text  x="606.96" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.79%)</title><rect x="374.1" y="2021" width="9.3" height="15.0" fill="rgb(212,8,54)" rx="2" ry="2" />
<text  x="377.13" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="258.6" y="1845" width="0.4" height="15.0" fill="rgb(231,54,35)" rx="2" ry="2" />
<text  x="261.62" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1397" width="50.5" height="15.0" fill="rgb(237,192,24)" rx="2" ry="2" />
<text  x="65.02" y="1407.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="521.3" y="1989" width="0.6" height="15.0" fill="rgb(250,215,13)" rx="2" ry="2" />
<text  x="524.28" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (3 samples, 0.05%)</title><rect x="834.2" y="2005" width="0.6" height="15.0" fill="rgb(249,41,49)" rx="2" ry="2" />
<text  x="837.18" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="204.4" y="1941" width="0.2" height="15.0" fill="rgb(247,18,41)" rx="2" ry="2" />
<text  x="207.43" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="610.1" y="1973" width="1.2" height="15.0" fill="rgb(235,9,5)" rx="2" ry="2" />
<text  x="613.09" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1042.1" y="1957" width="0.2" height="15.0" fill="rgb(208,41,4)" rx="2" ry="2" />
<text  x="1045.05" y="1967.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="696.5" y="1909" width="0.2" height="15.0" fill="rgb(205,57,11)" rx="2" ry="2" />
<text  x="699.52" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="300.4" y="1845" width="0.1" height="15.0" fill="rgb(215,176,38)" rx="2" ry="2" />
<text  x="303.35" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="983.7" y="1957" width="0.4" height="15.0" fill="rgb(228,99,18)" rx="2" ry="2" />
<text  x="986.71" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (29 samples, 0.49%)</title><rect x="323.1" y="1973" width="5.7" height="15.0" fill="rgb(205,205,5)" rx="2" ry="2" />
<text  x="326.10" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="180.9" y="1941" width="0.2" height="15.0" fill="rgb(247,155,10)" rx="2" ry="2" />
<text  x="183.89" y="1951.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (6 samples, 0.10%)</title><rect x="892.5" y="2037" width="1.2" height="15.0" fill="rgb(219,38,47)" rx="2" ry="2" />
<text  x="895.53" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="593.5" y="2021" width="4.5" height="15.0" fill="rgb(213,87,13)" rx="2" ry="2" />
<text  x="596.47" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="685.0" y="1925" width="0.2" height="15.0" fill="rgb(227,191,47)" rx="2" ry="2" />
<text  x="688.05" y="1935.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="291.6" y="1669" width="0.2" height="15.0" fill="rgb(231,175,38)" rx="2" ry="2" />
<text  x="294.65" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="350.6" y="1941" width="0.2" height="15.0" fill="rgb(252,195,47)" rx="2" ry="2" />
<text  x="353.59" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="894.7" y="2037" width="0.2" height="15.0" fill="rgb(228,189,48)" rx="2" ry="2" />
<text  x="897.70" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (324 samples, 5.43%)</title><rect x="528.8" y="2037" width="64.1" height="15.0" fill="rgb(237,17,26)" rx="2" ry="2" />
<text  x="531.80" y="2047.5" >faceboo..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="465.1" y="1845" width="0.2" height="15.0" fill="rgb(230,88,50)" rx="2" ry="2" />
<text  x="468.11" y="1855.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="112.1" y="85" width="0.2" height="15.0" fill="rgb(254,47,47)" rx="2" ry="2" />
<text  x="115.06" y="95.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (16 samples, 0.27%)</title><rect x="13.4" y="2069" width="3.1" height="15.0" fill="rgb(217,0,9)" rx="2" ry="2" />
<text  x="16.36" y="2079.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (2 samples, 0.03%)</title><rect x="528.0" y="2037" width="0.4" height="15.0" fill="rgb(252,68,13)" rx="2" ry="2" />
<text  x="531.01" y="2047.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="256.2" y="1813" width="0.2" height="15.0" fill="rgb(253,199,24)" rx="2" ry="2" />
<text  x="259.25" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="21.7" y="1925" width="0.2" height="15.0" fill="rgb(249,42,3)" rx="2" ry="2" />
<text  x="24.67" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="196.1" y="1989" width="0.2" height="15.0" fill="rgb(215,92,52)" rx="2" ry="2" />
<text  x="199.12" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (3 samples, 0.05%)</title><rect x="22.7" y="1957" width="0.6" height="15.0" fill="rgb(249,161,34)" rx="2" ry="2" />
<text  x="25.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="830.0" y="2005" width="0.2" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="833.03" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="395.3" y="1957" width="0.2" height="15.0" fill="rgb(225,167,2)" rx="2" ry="2" />
<text  x="398.29" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.6" y="2005" width="0.2" height="15.0" fill="rgb(237,178,22)" rx="2" ry="2" />
<text  x="225.62" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="740.4" y="1941" width="0.2" height="15.0" fill="rgb(253,111,24)" rx="2" ry="2" />
<text  x="743.43" y="1951.5" ></text>
</g>
<g >
<title>__fdget (8 samples, 0.13%)</title><rect x="1087.5" y="1957" width="1.6" height="15.0" fill="rgb(251,32,2)" rx="2" ry="2" />
<text  x="1090.55" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="979.9" y="1925" width="0.2" height="15.0" fill="rgb(241,153,3)" rx="2" ry="2" />
<text  x="982.95" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1109" width="50.5" height="15.0" fill="rgb(252,131,53)" rx="2" ry="2" />
<text  x="65.02" y="1119.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1909" width="50.5" height="15.0" fill="rgb(222,142,21)" rx="2" ry="2" />
<text  x="65.02" y="1919.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (21 samples, 0.35%)</title><rect x="20.5" y="1989" width="4.1" height="15.0" fill="rgb(217,46,28)" rx="2" ry="2" />
<text  x="23.48" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="245.2" y="1749" width="0.2" height="15.0" fill="rgb(207,136,53)" rx="2" ry="2" />
<text  x="248.17" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="180.5" y="1925" width="0.4" height="15.0" fill="rgb(236,200,3)" rx="2" ry="2" />
<text  x="183.49" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="952.7" y="1989" width="0.2" height="15.0" fill="rgb(217,19,42)" rx="2" ry="2" />
<text  x="955.66" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (9 samples, 0.15%)</title><rect x="693.9" y="1909" width="1.8" height="15.0" fill="rgb(248,111,34)" rx="2" ry="2" />
<text  x="696.95" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="607.3" y="2021" width="1.0" height="15.0" fill="rgb(226,130,24)" rx="2" ry="2" />
<text  x="610.32" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="591.5" y="1909" width="0.4" height="15.0" fill="rgb(254,38,49)" rx="2" ry="2" />
<text  x="594.50" y="1919.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="262.6" y="1797" width="0.2" height="15.0" fill="rgb(207,156,48)" rx="2" ry="2" />
<text  x="265.57" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (28 samples, 0.47%)</title><rect x="359.9" y="1989" width="5.5" height="15.0" fill="rgb(232,131,48)" rx="2" ry="2" />
<text  x="362.89" y="1999.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.02%)</title><rect x="11.2" y="1989" width="0.2" height="15.0" fill="rgb(224,170,2)" rx="2" ry="2" />
<text  x="14.19" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (23 samples, 0.39%)</title><rect x="1142.3" y="2053" width="4.6" height="15.0" fill="rgb(244,117,49)" rx="2" ry="2" />
<text  x="1145.33" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="493.6" y="1893" width="0.2" height="15.0" fill="rgb(240,97,46)" rx="2" ry="2" />
<text  x="496.59" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="368.6" y="1957" width="0.2" height="15.0" fill="rgb(227,88,29)" rx="2" ry="2" />
<text  x="371.59" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (283 samples, 4.74%)</title><rect x="317.4" y="2021" width="55.9" height="15.0" fill="rgb(245,24,35)" rx="2" ry="2" />
<text  x="320.36" y="2031.5" >folly..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (32 samples, 0.54%)</title><rect x="1096.8" y="2053" width="6.4" height="15.0" fill="rgb(208,190,37)" rx="2" ry="2" />
<text  x="1099.84" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (40 samples, 0.67%)</title><rect x="384.2" y="2037" width="7.9" height="15.0" fill="rgb(208,5,9)" rx="2" ry="2" />
<text  x="387.21" y="2047.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (106 samples, 1.78%)</title><rect x="264.9" y="1477" width="21.0" height="15.0" fill="rgb(216,180,53)" rx="2" ry="2" />
<text  x="267.95" y="1487.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="318.9" y="2005" width="0.2" height="15.0" fill="rgb(244,98,0)" rx="2" ry="2" />
<text  x="321.94" y="2015.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (12 samples, 0.20%)</title><rect x="300.7" y="1925" width="2.4" height="15.0" fill="rgb(231,153,7)" rx="2" ry="2" />
<text  x="303.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="597" width="50.3" height="15.0" fill="rgb(243,1,8)" rx="2" ry="2" />
<text  x="65.02" y="607.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (4 samples, 0.07%)</title><rect x="373.3" y="2021" width="0.8" height="15.0" fill="rgb(224,26,33)" rx="2" ry="2" />
<text  x="376.34" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="621.6" y="1973" width="0.9" height="15.0" fill="rgb(208,160,16)" rx="2" ry="2" />
<text  x="624.56" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.35%)</title><rect x="593.5" y="2005" width="4.1" height="15.0" fill="rgb(224,24,15)" rx="2" ry="2" />
<text  x="596.47" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="383.6" y="2005" width="0.2" height="15.0" fill="rgb(254,174,44)" rx="2" ry="2" />
<text  x="386.62" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="659.1" y="2037" width="0.6" height="15.0" fill="rgb(218,81,19)" rx="2" ry="2" />
<text  x="662.14" y="2047.5" ></text>
</g>
<g >
<title>___sys_sendmsg (323 samples, 5.41%)</title><rect x="239.2" y="1957" width="63.9" height="15.0" fill="rgb(235,51,37)" rx="2" ry="2" />
<text  x="242.24" y="1967.5" >___sys_..</text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="24.4" y="1973" width="0.2" height="15.0" fill="rgb(228,186,32)" rx="2" ry="2" />
<text  x="27.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (337 samples, 5.65%)</title><rect x="112.8" y="2005" width="66.7" height="15.0" fill="rgb(231,24,15)" rx="2" ry="2" />
<text  x="115.85" y="2015.5" >faceboo..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="467.1" y="1957" width="0.4" height="15.0" fill="rgb(247,144,29)" rx="2" ry="2" />
<text  x="470.09" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="372.5" y="1957" width="0.2" height="15.0" fill="rgb(239,20,54)" rx="2" ry="2" />
<text  x="375.54" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="112.1" y="101" width="0.2" height="15.0" fill="rgb(246,223,28)" rx="2" ry="2" />
<text  x="115.06" y="111.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="498.5" y="1973" width="0.2" height="15.0" fill="rgb(245,62,41)" rx="2" ry="2" />
<text  x="501.54" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="662.1" y="2005" width="0.6" height="15.0" fill="rgb(214,22,35)" rx="2" ry="2" />
<text  x="665.11" y="2015.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1089.5" y="2037" width="0.2" height="15.0" fill="rgb(213,186,42)" rx="2" ry="2" />
<text  x="1092.52" y="2047.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.02%)</title><rect x="1037.1" y="2053" width="0.2" height="15.0" fill="rgb(218,113,41)" rx="2" ry="2" />
<text  x="1040.11" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="876.5" y="2005" width="0.4" height="15.0" fill="rgb(242,189,31)" rx="2" ry="2" />
<text  x="879.51" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (135 samples, 2.26%)</title><rect x="62.0" y="53" width="26.7" height="15.0" fill="rgb(244,7,53)" rx="2" ry="2" />
<text  x="65.02" y="63.5" >[..</text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="607.1" y="2037" width="0.2" height="15.0" fill="rgb(225,114,7)" rx="2" ry="2" />
<text  x="610.12" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="306.3" y="2021" width="0.2" height="15.0" fill="rgb(213,140,0)" rx="2" ry="2" />
<text  x="309.29" y="2031.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="286.5" y="1669" width="0.2" height="15.0" fill="rgb(210,146,6)" rx="2" ry="2" />
<text  x="289.51" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (10 samples, 0.17%)</title><rect x="374.3" y="1941" width="2.0" height="15.0" fill="rgb(221,70,9)" rx="2" ry="2" />
<text  x="377.32" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (1 samples, 0.02%)</title><rect x="208.4" y="1957" width="0.2" height="15.0" fill="rgb(230,56,5)" rx="2" ry="2" />
<text  x="211.38" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="245.4" y="1877" width="0.4" height="15.0" fill="rgb(229,126,54)" rx="2" ry="2" />
<text  x="248.37" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="397.9" y="1925" width="0.8" height="15.0" fill="rgb(252,205,28)" rx="2" ry="2" />
<text  x="400.86" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="111.7" y="37" width="0.2" height="15.0" fill="rgb(238,155,30)" rx="2" ry="2" />
<text  x="114.66" y="47.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="372.7" y="1957" width="0.4" height="15.0" fill="rgb(227,99,49)" rx="2" ry="2" />
<text  x="375.74" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="744.2" y="1925" width="0.2" height="15.0" fill="rgb(205,151,49)" rx="2" ry="2" />
<text  x="747.19" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="866.2" y="1957" width="0.2" height="15.0" fill="rgb(253,147,25)" rx="2" ry="2" />
<text  x="869.22" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="263.8" y="1749" width="0.2" height="15.0" fill="rgb(225,15,53)" rx="2" ry="2" />
<text  x="266.76" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="853" width="50.3" height="15.0" fill="rgb(213,212,32)" rx="2" ry="2" />
<text  x="65.02" y="863.5" >[unkn..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="112.1" y="149" width="0.2" height="15.0" fill="rgb(237,130,37)" rx="2" ry="2" />
<text  x="115.06" y="159.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="395.5" y="1957" width="0.2" height="15.0" fill="rgb(219,187,39)" rx="2" ry="2" />
<text  x="398.49" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="917" width="50.3" height="15.0" fill="rgb(250,201,27)" rx="2" ry="2" />
<text  x="65.02" y="927.5" >[unkn..</text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="23.6" y="1861" width="0.8" height="15.0" fill="rgb(210,139,1)" rx="2" ry="2" />
<text  x="26.65" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="286.3" y="1701" width="0.2" height="15.0" fill="rgb(212,175,49)" rx="2" ry="2" />
<text  x="289.31" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="656.0" y="2005" width="1.2" height="15.0" fill="rgb(228,90,48)" rx="2" ry="2" />
<text  x="658.97" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1173" width="50.5" height="15.0" fill="rgb(205,214,15)" rx="2" ry="2" />
<text  x="65.02" y="1183.5" >[unkn..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1041.1" y="1957" width="0.2" height="15.0" fill="rgb(235,154,31)" rx="2" ry="2" />
<text  x="1044.07" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="591.3" y="1941" width="0.6" height="15.0" fill="rgb(230,196,45)" rx="2" ry="2" />
<text  x="594.30" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="400.6" y="1941" width="0.2" height="15.0" fill="rgb(248,195,7)" rx="2" ry="2" />
<text  x="403.63" y="1951.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="222.6" y="1893" width="0.2" height="15.0" fill="rgb(232,89,34)" rx="2" ry="2" />
<text  x="225.62" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="192.6" y="2021" width="0.6" height="15.0" fill="rgb(219,111,25)" rx="2" ry="2" />
<text  x="195.56" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="504.3" y="1957" width="1.6" height="15.0" fill="rgb(239,217,10)" rx="2" ry="2" />
<text  x="507.27" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="495.0" y="1893" width="0.2" height="15.0" fill="rgb(227,146,20)" rx="2" ry="2" />
<text  x="497.97" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="868.0" y="1909" width="0.2" height="15.0" fill="rgb(219,86,9)" rx="2" ry="2" />
<text  x="871.00" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (22 samples, 0.37%)</title><rect x="346.4" y="1973" width="4.4" height="15.0" fill="rgb(240,161,5)" rx="2" ry="2" />
<text  x="349.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="112.1" y="165" width="0.2" height="15.0" fill="rgb(233,104,21)" rx="2" ry="2" />
<text  x="115.06" y="175.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(212,221,28)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (1 samples, 0.02%)</title><rect x="322.7" y="1989" width="0.2" height="15.0" fill="rgb(217,159,12)" rx="2" ry="2" />
<text  x="325.70" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="23.6" y="1829" width="0.8" height="15.0" fill="rgb(234,116,42)" rx="2" ry="2" />
<text  x="26.65" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (44 samples, 0.74%)</title><rect x="647.3" y="2037" width="8.7" height="15.0" fill="rgb(213,110,23)" rx="2" ry="2" />
<text  x="650.27" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1973" width="50.5" height="15.0" fill="rgb(237,129,19)" rx="2" ry="2" />
<text  x="65.02" y="1983.5" >[unkn..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="440.4" y="1877" width="0.2" height="15.0" fill="rgb(232,117,3)" rx="2" ry="2" />
<text  x="443.39" y="1887.5" ></text>
</g>
<g >
<title>__fdget (15 samples, 0.25%)</title><rect x="303.3" y="1941" width="3.0" height="15.0" fill="rgb(224,24,34)" rx="2" ry="2" />
<text  x="306.32" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="395.7" y="1973" width="0.2" height="15.0" fill="rgb(221,152,6)" rx="2" ry="2" />
<text  x="398.69" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="200.3" y="2005" width="0.4" height="15.0" fill="rgb(253,209,20)" rx="2" ry="2" />
<text  x="203.27" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="131.2" y="1909" width="0.2" height="15.0" fill="rgb(215,34,40)" rx="2" ry="2" />
<text  x="134.24" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="347.2" y="1941" width="0.2" height="15.0" fill="rgb(205,177,42)" rx="2" ry="2" />
<text  x="350.23" y="1951.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="581.6" y="1989" width="0.2" height="15.0" fill="rgb(245,22,50)" rx="2" ry="2" />
<text  x="584.61" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="103.8" y="37" width="0.7" height="15.0" fill="rgb(247,67,41)" rx="2" ry="2" />
<text  x="106.75" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="440.4" y="1941" width="0.2" height="15.0" fill="rgb(234,161,27)" rx="2" ry="2" />
<text  x="443.39" y="1951.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(230,93,23)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="189.4" y="1877" width="0.2" height="15.0" fill="rgb(242,91,47)" rx="2" ry="2" />
<text  x="192.39" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="733.5" y="1909" width="0.2" height="15.0" fill="rgb(220,104,4)" rx="2" ry="2" />
<text  x="736.51" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="457.6" y="2005" width="0.4" height="15.0" fill="rgb(226,225,32)" rx="2" ry="2" />
<text  x="460.59" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1041.1" y="1989" width="0.2" height="15.0" fill="rgb(212,50,19)" rx="2" ry="2" />
<text  x="1044.07" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (2 samples, 0.03%)</title><rect x="391.1" y="2005" width="0.4" height="15.0" fill="rgb(249,190,39)" rx="2" ry="2" />
<text  x="394.14" y="2015.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (5 samples, 0.08%)</title><rect x="91.9" y="37" width="1.0" height="15.0" fill="rgb(232,6,41)" rx="2" ry="2" />
<text  x="94.88" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (205 samples, 3.44%)</title><rect x="134.6" y="1989" width="40.6" height="15.0" fill="rgb(213,136,52)" rx="2" ry="2" />
<text  x="137.61" y="1999.5" >fol..</text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="189.4" y="1845" width="0.2" height="15.0" fill="rgb(230,117,20)" rx="2" ry="2" />
<text  x="192.39" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="840.1" y="1989" width="0.6" height="15.0" fill="rgb(207,220,51)" rx="2" ry="2" />
<text  x="843.11" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="19.3" y="1989" width="0.4" height="15.0" fill="rgb(221,199,44)" rx="2" ry="2" />
<text  x="22.30" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="208.6" y="1941" width="0.2" height="15.0" fill="rgb(227,7,24)" rx="2" ry="2" />
<text  x="211.58" y="1951.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.07%)</title><rect x="1188.8" y="2005" width="0.8" height="15.0" fill="rgb(210,174,46)" rx="2" ry="2" />
<text  x="1191.81" y="2015.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.17%)</title><rect x="11.4" y="1941" width="2.0" height="15.0" fill="rgb(217,113,47)" rx="2" ry="2" />
<text  x="14.38" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.17%)</title><rect x="11.4" y="1925" width="2.0" height="15.0" fill="rgb(205,84,40)" rx="2" ry="2" />
<text  x="14.38" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="977.6" y="1909" width="0.2" height="15.0" fill="rgb(239,81,17)" rx="2" ry="2" />
<text  x="980.58" y="1919.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="11.6" y="1893" width="0.2" height="15.0" fill="rgb(229,171,8)" rx="2" ry="2" />
<text  x="14.58" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (3 samples, 0.05%)</title><rect x="186.6" y="1925" width="0.6" height="15.0" fill="rgb(222,35,38)" rx="2" ry="2" />
<text  x="189.62" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (12 samples, 0.20%)</title><rect x="168.4" y="1957" width="2.4" height="15.0" fill="rgb(235,9,38)" rx="2" ry="2" />
<text  x="171.43" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="295.4" y="1749" width="0.2" height="15.0" fill="rgb(242,222,8)" rx="2" ry="2" />
<text  x="298.41" y="1759.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="881.3" y="1973" width="0.5" height="15.0" fill="rgb(245,162,8)" rx="2" ry="2" />
<text  x="884.25" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (98 samples, 1.64%)</title><rect x="711.2" y="1893" width="19.3" height="15.0" fill="rgb(243,157,36)" rx="2" ry="2" />
<text  x="714.16" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="187.2" y="1941" width="0.2" height="15.0" fill="rgb(212,101,8)" rx="2" ry="2" />
<text  x="190.22" y="1951.5" ></text>
</g>
<g >
<title>__fget (13 samples, 0.22%)</title><rect x="303.7" y="1909" width="2.6" height="15.0" fill="rgb(227,130,2)" rx="2" ry="2" />
<text  x="306.71" y="1919.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1049.2" y="1845" width="0.2" height="15.0" fill="rgb(229,68,51)" rx="2" ry="2" />
<text  x="1052.18" y="1855.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="1014.4" y="2037" width="0.2" height="15.0" fill="rgb(252,109,6)" rx="2" ry="2" />
<text  x="1017.36" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="609.5" y="1973" width="0.6" height="15.0" fill="rgb(245,172,2)" rx="2" ry="2" />
<text  x="612.49" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="590.5" y="1941" width="0.2" height="15.0" fill="rgb(208,139,44)" rx="2" ry="2" />
<text  x="593.51" y="1951.5" ></text>
</g>
<g >
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1048.2" y="1893" width="0.4" height="15.0" fill="rgb(248,8,54)" rx="2" ry="2" />
<text  x="1051.19" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="367.6" y="1989" width="0.2" height="15.0" fill="rgb(227,72,16)" rx="2" ry="2" />
<text  x="370.60" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="495.0" y="1861" width="0.2" height="15.0" fill="rgb(242,27,6)" rx="2" ry="2" />
<text  x="497.97" y="1871.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (4 samples, 0.07%)</title><rect x="366.8" y="1989" width="0.8" height="15.0" fill="rgb(230,116,15)" rx="2" ry="2" />
<text  x="369.81" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="664.5" y="1989" width="0.6" height="15.0" fill="rgb(206,95,37)" rx="2" ry="2" />
<text  x="667.48" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="112.1" y="37" width="0.2" height="15.0" fill="rgb(241,142,30)" rx="2" ry="2" />
<text  x="115.06" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="213.7" y="2021" width="0.2" height="15.0" fill="rgb(235,225,45)" rx="2" ry="2" />
<text  x="216.72" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="949" width="50.5" height="15.0" fill="rgb(229,164,23)" rx="2" ry="2" />
<text  x="65.02" y="959.5" >[unkn..</text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="23.6" y="1909" width="0.8" height="15.0" fill="rgb(225,115,53)" rx="2" ry="2" />
<text  x="26.65" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="130.3" y="1925" width="0.4" height="15.0" fill="rgb(222,221,29)" rx="2" ry="2" />
<text  x="133.25" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="647.3" y="1989" width="0.4" height="15.0" fill="rgb(238,199,20)" rx="2" ry="2" />
<text  x="650.27" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="189.4" y="1925" width="0.2" height="15.0" fill="rgb(248,36,30)" rx="2" ry="2" />
<text  x="192.39" y="1935.5" ></text>
</g>
<g >
<title>import_iovec (7 samples, 0.12%)</title><rect x="240.8" y="1925" width="1.4" height="15.0" fill="rgb(210,201,30)" rx="2" ry="2" />
<text  x="243.82" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="492.8" y="1909" width="0.2" height="15.0" fill="rgb(241,11,41)" rx="2" ry="2" />
<text  x="495.80" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="1081.0" y="1877" width="0.4" height="15.0" fill="rgb(216,151,2)" rx="2" ry="2" />
<text  x="1084.02" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="373" width="50.3" height="15.0" fill="rgb(230,115,36)" rx="2" ry="2" />
<text  x="65.02" y="383.5" >[unkn..</text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="296.6" y="1829" width="0.2" height="15.0" fill="rgb(224,125,8)" rx="2" ry="2" />
<text  x="299.59" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="333.6" y="1973" width="0.6" height="15.0" fill="rgb(216,226,7)" rx="2" ry="2" />
<text  x="336.58" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (6 samples, 0.10%)</title><rect x="353.2" y="1957" width="1.1" height="15.0" fill="rgb(232,154,40)" rx="2" ry="2" />
<text  x="356.16" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="65.8" y="37" width="0.4" height="15.0" fill="rgb(240,110,24)" rx="2" ry="2" />
<text  x="68.78" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="602.8" y="2005" width="1.2" height="15.0" fill="rgb(223,50,50)" rx="2" ry="2" />
<text  x="605.77" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="86.0" y="37" width="0.1" height="15.0" fill="rgb(234,49,19)" rx="2" ry="2" />
<text  x="88.95" y="47.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (16 samples, 0.27%)</title><rect x="303.1" y="1957" width="3.2" height="15.0" fill="rgb(254,168,1)" rx="2" ry="2" />
<text  x="306.12" y="1967.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1080.8" y="1733" width="0.2" height="15.0" fill="rgb(237,172,18)" rx="2" ry="2" />
<text  x="1083.82" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="359.7" y="1973" width="0.2" height="15.0" fill="rgb(221,43,17)" rx="2" ry="2" />
<text  x="362.69" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="243.8" y="1893" width="0.2" height="15.0" fill="rgb(247,1,0)" rx="2" ry="2" />
<text  x="246.78" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="693.8" y="1893" width="0.1" height="15.0" fill="rgb(224,210,49)" rx="2" ry="2" />
<text  x="696.75" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="23.4" y="1973" width="0.2" height="15.0" fill="rgb(222,225,40)" rx="2" ry="2" />
<text  x="26.45" y="1983.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1085.4" y="1925" width="0.2" height="15.0" fill="rgb(249,206,22)" rx="2" ry="2" />
<text  x="1088.37" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="328.0" y="1925" width="0.2" height="15.0" fill="rgb(251,217,26)" rx="2" ry="2" />
<text  x="331.04" y="1935.5" ></text>
</g>
<g >
<title>vfprintf (7 samples, 0.12%)</title><rect x="1092.9" y="2037" width="1.4" height="15.0" fill="rgb(210,16,48)" rx="2" ry="2" />
<text  x="1095.89" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="540.3" y="1925" width="0.2" height="15.0" fill="rgb(231,35,35)" rx="2" ry="2" />
<text  x="543.27" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (5 samples, 0.08%)</title><rect x="656.2" y="1989" width="1.0" height="15.0" fill="rgb(214,131,11)" rx="2" ry="2" />
<text  x="659.17" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="894.3" y="2005" width="0.2" height="15.0" fill="rgb(227,104,10)" rx="2" ry="2" />
<text  x="897.31" y="2015.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (17 samples, 0.28%)</title><rect x="1081.8" y="1925" width="3.4" height="15.0" fill="rgb(239,44,3)" rx="2" ry="2" />
<text  x="1084.81" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="327.8" y="1893" width="0.2" height="15.0" fill="rgb(226,196,1)" rx="2" ry="2" />
<text  x="330.84" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="643.9" y="2005" width="0.2" height="15.0" fill="rgb(239,29,26)" rx="2" ry="2" />
<text  x="646.91" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="577.3" y="1989" width="0.2" height="15.0" fill="rgb(212,193,34)" rx="2" ry="2" />
<text  x="580.25" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="641.7" y="2037" width="0.4" height="15.0" fill="rgb(237,122,40)" rx="2" ry="2" />
<text  x="644.73" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="596.4" y="1957" width="0.8" height="15.0" fill="rgb(231,76,22)" rx="2" ry="2" />
<text  x="599.44" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="893.9" y="2021" width="0.2" height="15.0" fill="rgb(222,173,51)" rx="2" ry="2" />
<text  x="896.91" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="25.6" y="2005" width="0.6" height="15.0" fill="rgb(234,220,42)" rx="2" ry="2" />
<text  x="28.63" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (82 samples, 1.37%)</title><rect x="424.4" y="2005" width="16.2" height="15.0" fill="rgb(235,135,4)" rx="2" ry="2" />
<text  x="427.36" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="189.4" y="1957" width="0.2" height="15.0" fill="rgb(249,85,23)" rx="2" ry="2" />
<text  x="192.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (3 samples, 0.05%)</title><rect x="540.5" y="1973" width="0.6" height="15.0" fill="rgb(232,184,22)" rx="2" ry="2" />
<text  x="543.47" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.74%)</title><rect x="647.3" y="2021" width="8.7" height="15.0" fill="rgb(253,185,28)" rx="2" ry="2" />
<text  x="650.27" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="458.0" y="2005" width="0.2" height="15.0" fill="rgb(254,33,53)" rx="2" ry="2" />
<text  x="460.99" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="134.4" y="1989" width="0.2" height="15.0" fill="rgb(237,83,17)" rx="2" ry="2" />
<text  x="137.41" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (109 samples, 1.83%)</title><rect x="264.6" y="1589" width="21.5" height="15.0" fill="rgb(227,164,11)" rx="2" ry="2" />
<text  x="267.55" y="1599.5" >i..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (17 samples, 0.28%)</title><rect x="441.2" y="2005" width="3.3" height="15.0" fill="rgb(239,208,28)" rx="2" ry="2" />
<text  x="444.18" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (9 samples, 0.15%)</title><rect x="1083.4" y="1893" width="1.8" height="15.0" fill="rgb(248,80,50)" rx="2" ry="2" />
<text  x="1086.39" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="371.2" y="1989" width="0.2" height="15.0" fill="rgb(240,59,14)" rx="2" ry="2" />
<text  x="374.16" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (13 samples, 0.22%)</title><rect x="862.3" y="1973" width="2.5" height="15.0" fill="rgb(244,211,37)" rx="2" ry="2" />
<text  x="865.27" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (10 samples, 0.17%)</title><rect x="197.7" y="1941" width="2.0" height="15.0" fill="rgb(206,173,7)" rx="2" ry="2" />
<text  x="200.70" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="382.2" y="1909" width="0.2" height="15.0" fill="rgb(217,129,48)" rx="2" ry="2" />
<text  x="385.24" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="658.7" y="2037" width="0.4" height="15.0" fill="rgb(248,129,0)" rx="2" ry="2" />
<text  x="661.74" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="492.8" y="1893" width="0.2" height="15.0" fill="rgb(240,215,44)" rx="2" ry="2" />
<text  x="495.80" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="181.5" y="1973" width="0.2" height="15.0" fill="rgb(243,31,12)" rx="2" ry="2" />
<text  x="184.48" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="643.7" y="1973" width="0.2" height="15.0" fill="rgb(245,123,46)" rx="2" ry="2" />
<text  x="646.71" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8 samples, 0.13%)</title><rect x="1128.9" y="1973" width="1.6" height="15.0" fill="rgb(254,61,19)" rx="2" ry="2" />
<text  x="1131.88" y="1983.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="228.2" y="2021" width="0.4" height="15.0" fill="rgb(212,69,41)" rx="2" ry="2" />
<text  x="231.16" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="11.4" y="2021" width="2.0" height="15.0" fill="rgb(213,16,9)" rx="2" ry="2" />
<text  x="14.38" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1125" width="50.5" height="15.0" fill="rgb(214,148,4)" rx="2" ry="2" />
<text  x="65.02" y="1135.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (2 samples, 0.03%)</title><rect x="647.7" y="1989" width="0.4" height="15.0" fill="rgb(236,140,43)" rx="2" ry="2" />
<text  x="650.67" y="1999.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="308.7" y="2037" width="0.2" height="15.0" fill="rgb(226,7,51)" rx="2" ry="2" />
<text  x="311.66" y="2047.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="245.2" y="1701" width="0.2" height="15.0" fill="rgb(254,96,35)" rx="2" ry="2" />
<text  x="248.17" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.13%)</title><rect x="518.7" y="2005" width="1.6" height="15.0" fill="rgb(230,187,12)" rx="2" ry="2" />
<text  x="521.71" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (20 samples, 0.34%)</title><rect x="814.4" y="1989" width="4.0" height="15.0" fill="rgb(220,44,24)" rx="2" ry="2" />
<text  x="817.40" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (59 samples, 0.99%)</title><rect x="150.6" y="1957" width="11.7" height="15.0" fill="rgb(226,67,8)" rx="2" ry="2" />
<text  x="153.63" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1317" width="50.5" height="15.0" fill="rgb(218,197,31)" rx="2" ry="2" />
<text  x="65.02" y="1327.5" >[unkn..</text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="205.4" y="1973" width="1.2" height="15.0" fill="rgb(223,87,3)" rx="2" ry="2" />
<text  x="208.41" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.10%)</title><rect x="644.3" y="1989" width="1.2" height="15.0" fill="rgb(231,205,47)" rx="2" ry="2" />
<text  x="647.30" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="465.1" y="1861" width="0.2" height="15.0" fill="rgb(229,19,9)" rx="2" ry="2" />
<text  x="468.11" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="895.3" y="1989" width="1.0" height="15.0" fill="rgb(242,177,30)" rx="2" ry="2" />
<text  x="898.30" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="743.0" y="1941" width="0.2" height="15.0" fill="rgb(231,120,7)" rx="2" ry="2" />
<text  x="746.00" y="1951.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="245.2" y="1397" width="0.2" height="15.0" fill="rgb(215,182,54)" rx="2" ry="2" />
<text  x="248.17" y="1407.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="730.1" y="1877" width="0.4" height="15.0" fill="rgb(235,207,24)" rx="2" ry="2" />
<text  x="733.14" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1189" width="50.5" height="15.0" fill="rgb(220,8,17)" rx="2" ry="2" />
<text  x="65.02" y="1199.5" >[unkn..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="293.4" y="1829" width="0.2" height="15.0" fill="rgb(238,93,43)" rx="2" ry="2" />
<text  x="296.43" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="357" width="50.3" height="15.0" fill="rgb(226,51,16)" rx="2" ry="2" />
<text  x="65.02" y="367.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="65.4" y="37" width="0.4" height="15.0" fill="rgb(248,2,19)" rx="2" ry="2" />
<text  x="68.38" y="47.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1045.6" y="1893" width="0.2" height="15.0" fill="rgb(239,141,13)" rx="2" ry="2" />
<text  x="1048.62" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1094.3" y="2053" width="0.2" height="15.0" fill="rgb(215,166,29)" rx="2" ry="2" />
<text  x="1097.27" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (110 samples, 1.84%)</title><rect x="264.4" y="1685" width="21.7" height="15.0" fill="rgb(230,52,4)" rx="2" ry="2" />
<text  x="267.35" y="1695.5" >_..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="565" width="50.3" height="15.0" fill="rgb(250,145,44)" rx="2" ry="2" />
<text  x="65.02" y="575.5" >[unkn..</text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="10.2" y="1893" width="1.0" height="15.0" fill="rgb(225,18,37)" rx="2" ry="2" />
<text  x="13.20" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(210,162,43)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (27 samples, 0.45%)</title><rect x="376.9" y="1877" width="5.3" height="15.0" fill="rgb(223,191,48)" rx="2" ry="2" />
<text  x="379.90" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="128.7" y="1957" width="0.2" height="15.0" fill="rgb(241,49,8)" rx="2" ry="2" />
<text  x="131.67" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="245.2" y="1685" width="0.2" height="15.0" fill="rgb(232,138,26)" rx="2" ry="2" />
<text  x="248.17" y="1695.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1102.8" y="1989" width="0.2" height="15.0" fill="rgb(228,56,37)" rx="2" ry="2" />
<text  x="1105.78" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="245.2" y="1493" width="0.2" height="15.0" fill="rgb(213,175,24)" rx="2" ry="2" />
<text  x="248.17" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (258 samples, 4.32%)</title><rect x="1038.3" y="2021" width="51.0" height="15.0" fill="rgb(229,161,29)" rx="2" ry="2" />
<text  x="1041.30" y="2031.5" >do_sy..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="357.9" y="1973" width="0.4" height="15.0" fill="rgb(206,194,53)" rx="2" ry="2" />
<text  x="360.91" y="1983.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="264.8" y="1477" width="0.1" height="15.0" fill="rgb(230,119,53)" rx="2" ry="2" />
<text  x="267.75" y="1487.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.17%)</title><rect x="11.4" y="1989" width="2.0" height="15.0" fill="rgb(238,190,31)" rx="2" ry="2" />
<text  x="14.38" y="1999.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="259.0" y="1845" width="0.2" height="15.0" fill="rgb(232,39,43)" rx="2" ry="2" />
<text  x="262.01" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (2 samples, 0.03%)</title><rect x="1096.4" y="2053" width="0.4" height="15.0" fill="rgb(223,101,21)" rx="2" ry="2" />
<text  x="1099.45" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (1 samples, 0.02%)</title><rect x="908.2" y="2005" width="0.2" height="15.0" fill="rgb(248,99,31)" rx="2" ry="2" />
<text  x="911.15" y="2015.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1080.8" y="1765" width="0.2" height="15.0" fill="rgb(220,88,54)" rx="2" ry="2" />
<text  x="1083.82" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="383.8" y="2005" width="0.2" height="15.0" fill="rgb(205,161,27)" rx="2" ry="2" />
<text  x="386.82" y="2015.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1086.2" y="1877" width="0.4" height="15.0" fill="rgb(233,210,31)" rx="2" ry="2" />
<text  x="1089.16" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (29 samples, 0.49%)</title><rect x="179.5" y="2005" width="5.7" height="15.0" fill="rgb(238,194,40)" rx="2" ry="2" />
<text  x="182.50" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="587.3" y="1925" width="0.2" height="15.0" fill="rgb(225,189,2)" rx="2" ry="2" />
<text  x="590.34" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="402.8" y="1973" width="0.2" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="405.81" y="1983.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="695.5" y="1893" width="0.2" height="15.0" fill="rgb(229,45,32)" rx="2" ry="2" />
<text  x="698.53" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (20 samples, 0.34%)</title><rect x="396.1" y="1941" width="3.9" height="15.0" fill="rgb(224,191,25)" rx="2" ry="2" />
<text  x="399.08" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="342.5" y="1973" width="1.2" height="15.0" fill="rgb(243,92,42)" rx="2" ry="2" />
<text  x="345.48" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="789" width="50.3" height="15.0" fill="rgb(218,224,39)" rx="2" ry="2" />
<text  x="65.02" y="799.5" >[unkn..</text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="697.1" y="1909" width="0.4" height="15.0" fill="rgb(254,29,53)" rx="2" ry="2" />
<text  x="700.11" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="868.2" y="1909" width="0.2" height="15.0" fill="rgb(240,147,33)" rx="2" ry="2" />
<text  x="871.20" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.13%)</title><rect x="280.2" y="1381" width="1.6" height="15.0" fill="rgb(215,179,18)" rx="2" ry="2" />
<text  x="283.18" y="1391.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="1041.9" y="1973" width="0.2" height="15.0" fill="rgb(252,81,0)" rx="2" ry="2" />
<text  x="1044.86" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="974.4" y="1877" width="0.2" height="15.0" fill="rgb(239,124,28)" rx="2" ry="2" />
<text  x="977.41" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="540.3" y="1909" width="0.2" height="15.0" fill="rgb(246,211,49)" rx="2" ry="2" />
<text  x="543.27" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="586.9" y="1909" width="0.4" height="15.0" fill="rgb(247,132,21)" rx="2" ry="2" />
<text  x="589.95" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="23.6" y="1797" width="0.8" height="15.0" fill="rgb(237,9,27)" rx="2" ry="2" />
<text  x="26.65" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="973.8" y="1877" width="0.6" height="15.0" fill="rgb(209,77,48)" rx="2" ry="2" />
<text  x="976.82" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="587.1" y="1861" width="0.2" height="15.0" fill="rgb(249,74,7)" rx="2" ry="2" />
<text  x="590.14" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="197" width="50.3" height="15.0" fill="rgb(216,146,36)" rx="2" ry="2" />
<text  x="65.02" y="207.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="62.0" y="133" width="50.1" height="15.0" fill="rgb(208,12,22)" rx="2" ry="2" />
<text  x="65.02" y="143.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="389.9" y="1989" width="0.2" height="15.0" fill="rgb(212,6,35)" rx="2" ry="2" />
<text  x="392.95" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="549" width="50.3" height="15.0" fill="rgb(223,147,26)" rx="2" ry="2" />
<text  x="65.02" y="559.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (10 samples, 0.17%)</title><rect x="129.5" y="1941" width="1.9" height="15.0" fill="rgb(231,200,31)" rx="2" ry="2" />
<text  x="132.46" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="402.0" y="1973" width="0.2" height="15.0" fill="rgb(249,65,18)" rx="2" ry="2" />
<text  x="405.01" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="437" width="50.3" height="15.0" fill="rgb(223,13,19)" rx="2" ry="2" />
<text  x="65.02" y="447.5" >[unkn..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="371.4" y="2005" width="0.2" height="15.0" fill="rgb(254,26,0)" rx="2" ry="2" />
<text  x="374.36" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (34 samples, 0.57%)</title><rect x="869.6" y="1989" width="6.7" height="15.0" fill="rgb(219,85,1)" rx="2" ry="2" />
<text  x="872.58" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="372.0" y="1973" width="1.1" height="15.0" fill="rgb(212,10,21)" rx="2" ry="2" />
<text  x="374.95" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="544.0" y="1989" width="0.4" height="15.0" fill="rgb(243,196,39)" rx="2" ry="2" />
<text  x="547.03" y="1999.5" ></text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.08%)</title><rect x="262.8" y="1781" width="1.0" height="15.0" fill="rgb(238,157,42)" rx="2" ry="2" />
<text  x="265.77" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="879.9" y="1973" width="1.4" height="15.0" fill="rgb(213,93,38)" rx="2" ry="2" />
<text  x="882.87" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.8" y="1957" width="0.2" height="15.0" fill="rgb(213,190,45)" rx="2" ry="2" />
<text  x="348.84" y="1967.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="862.1" y="1893" width="0.2" height="15.0" fill="rgb(211,132,51)" rx="2" ry="2" />
<text  x="865.07" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (23 samples, 0.39%)</title><rect x="360.1" y="1973" width="4.5" height="15.0" fill="rgb(216,105,2)" rx="2" ry="2" />
<text  x="363.08" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (64 samples, 1.07%)</title><rect x="269.7" y="1461" width="12.7" height="15.0" fill="rgb(246,173,30)" rx="2" ry="2" />
<text  x="272.69" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (3 samples, 0.05%)</title><rect x="226.2" y="2021" width="0.6" height="15.0" fill="rgb(236,160,26)" rx="2" ry="2" />
<text  x="229.18" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (15 samples, 0.25%)</title><rect x="207.8" y="1989" width="3.0" height="15.0" fill="rgb(205,141,27)" rx="2" ry="2" />
<text  x="210.79" y="1999.5" ></text>
</g>
<g >
<title>tcp_current_mss (13 samples, 0.22%)</title><rect x="298.0" y="1861" width="2.5" height="15.0" fill="rgb(216,48,22)" rx="2" ry="2" />
<text  x="300.98" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="128.7" y="1909" width="0.2" height="15.0" fill="rgb(210,97,52)" rx="2" ry="2" />
<text  x="131.67" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (5 samples, 0.08%)</title><rect x="744.8" y="1941" width="1.0" height="15.0" fill="rgb(241,37,52)" rx="2" ry="2" />
<text  x="747.78" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="204.8" y="1957" width="0.2" height="15.0" fill="rgb(226,10,3)" rx="2" ry="2" />
<text  x="207.82" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1093" width="50.5" height="15.0" fill="rgb(215,184,15)" rx="2" ry="2" />
<text  x="65.02" y="1103.5" >[unkn..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (6 samples, 0.10%)</title><rect x="356.5" y="1989" width="1.2" height="15.0" fill="rgb(243,15,26)" rx="2" ry="2" />
<text  x="359.52" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1102.8" y="2005" width="0.2" height="15.0" fill="rgb(254,71,45)" rx="2" ry="2" />
<text  x="1105.78" y="2015.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="282.2" y="1445" width="0.2" height="15.0" fill="rgb(218,100,11)" rx="2" ry="2" />
<text  x="285.16" y="1455.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="635.4" y="1989" width="0.4" height="15.0" fill="rgb(241,10,27)" rx="2" ry="2" />
<text  x="638.40" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="205.0" y="1957" width="0.4" height="15.0" fill="rgb(234,173,21)" rx="2" ry="2" />
<text  x="208.02" y="1967.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="206.8" y="1829" width="0.2" height="15.0" fill="rgb(226,99,50)" rx="2" ry="2" />
<text  x="209.80" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="440.4" y="1957" width="0.2" height="15.0" fill="rgb(214,125,2)" rx="2" ry="2" />
<text  x="443.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (15 samples, 0.25%)</title><rect x="207.8" y="2021" width="3.0" height="15.0" fill="rgb(227,228,41)" rx="2" ry="2" />
<text  x="210.79" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (53 samples, 0.89%)</title><rect x="407.4" y="2037" width="10.4" height="15.0" fill="rgb(254,119,38)" rx="2" ry="2" />
<text  x="410.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="277" width="50.3" height="15.0" fill="rgb(216,52,39)" rx="2" ry="2" />
<text  x="65.02" y="287.5" >[unkn..</text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="210.0" y="1909" width="0.2" height="15.0" fill="rgb(225,65,42)" rx="2" ry="2" />
<text  x="212.96" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="25.2" y="1957" width="0.2" height="15.0" fill="rgb(214,107,10)" rx="2" ry="2" />
<text  x="28.23" y="1967.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="512.4" y="2005" width="0.4" height="15.0" fill="rgb(243,74,6)" rx="2" ry="2" />
<text  x="515.38" y="2015.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(236,144,19)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="207.0" y="1973" width="0.8" height="15.0" fill="rgb(213,85,54)" rx="2" ry="2" />
<text  x="210.00" y="1983.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="400.2" y="1941" width="0.2" height="15.0" fill="rgb(241,181,32)" rx="2" ry="2" />
<text  x="403.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_mss (15 samples, 0.25%)</title><rect x="297.6" y="1877" width="2.9" height="15.0" fill="rgb(212,28,24)" rx="2" ry="2" />
<text  x="300.58" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="222.6" y="1957" width="0.2" height="15.0" fill="rgb(221,27,23)" rx="2" ry="2" />
<text  x="225.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (5 samples, 0.08%)</title><rect x="110.5" y="53" width="1.0" height="15.0" fill="rgb(218,143,37)" rx="2" ry="2" />
<text  x="113.48" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="395.3" y="1941" width="0.2" height="15.0" fill="rgb(229,18,1)" rx="2" ry="2" />
<text  x="398.29" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="1161.7" y="2053" width="0.2" height="15.0" fill="rgb(208,193,50)" rx="2" ry="2" />
<text  x="1164.72" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1102.4" y="1925" width="0.2" height="15.0" fill="rgb(236,1,6)" rx="2" ry="2" />
<text  x="1105.38" y="1935.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="296.8" y="1829" width="0.4" height="15.0" fill="rgb(231,190,51)" rx="2" ry="2" />
<text  x="299.79" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1171.6" y="2053" width="0.2" height="15.0" fill="rgb(254,2,25)" rx="2" ry="2" />
<text  x="1174.61" y="2063.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="581.0" y="1989" width="0.2" height="15.0" fill="rgb(234,34,32)" rx="2" ry="2" />
<text  x="584.01" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="862.1" y="1925" width="0.2" height="15.0" fill="rgb(213,86,9)" rx="2" ry="2" />
<text  x="865.07" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="908.7" y="2005" width="0.8" height="15.0" fill="rgb(241,88,48)" rx="2" ry="2" />
<text  x="911.75" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="191.2" y="2005" width="0.8" height="15.0" fill="rgb(205,129,51)" rx="2" ry="2" />
<text  x="194.17" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="981" width="50.5" height="15.0" fill="rgb(206,191,54)" rx="2" ry="2" />
<text  x="65.02" y="991.5" >[unkn..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="983.1" y="1957" width="0.6" height="15.0" fill="rgb(237,1,18)" rx="2" ry="2" />
<text  x="986.11" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="592.9" y="1957" width="0.2" height="15.0" fill="rgb(207,89,23)" rx="2" ry="2" />
<text  x="595.88" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="736.5" y="1909" width="0.6" height="15.0" fill="rgb(219,98,21)" rx="2" ry="2" />
<text  x="739.47" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="984.3" y="1957" width="0.2" height="15.0" fill="rgb(220,61,51)" rx="2" ry="2" />
<text  x="987.30" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.6" y="1989" width="0.2" height="15.0" fill="rgb(254,49,34)" rx="2" ry="2" />
<text  x="225.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="403.6" y="2005" width="0.2" height="15.0" fill="rgb(231,12,3)" rx="2" ry="2" />
<text  x="406.60" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="591.9" y="1893" width="0.2" height="15.0" fill="rgb(218,171,28)" rx="2" ry="2" />
<text  x="594.89" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (5 samples, 0.08%)</title><rect x="591.3" y="1957" width="1.0" height="15.0" fill="rgb(250,176,4)" rx="2" ry="2" />
<text  x="594.30" y="1967.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.05%)</title><rect x="259.8" y="1877" width="0.6" height="15.0" fill="rgb(232,172,11)" rx="2" ry="2" />
<text  x="262.81" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="23.6" y="1813" width="0.8" height="15.0" fill="rgb(205,137,34)" rx="2" ry="2" />
<text  x="26.65" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (166 samples, 2.78%)</title><rect x="608.9" y="2021" width="32.8" height="15.0" fill="rgb(241,162,31)" rx="2" ry="2" />
<text  x="611.90" y="2031.5" >[u..</text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="223.4" y="2021" width="0.8" height="15.0" fill="rgb(216,180,11)" rx="2" ry="2" />
<text  x="226.41" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (6 samples, 0.10%)</title><rect x="642.5" y="2037" width="1.2" height="15.0" fill="rgb(206,62,4)" rx="2" ry="2" />
<text  x="645.52" y="2047.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="285.5" y="1461" width="0.4" height="15.0" fill="rgb(208,223,19)" rx="2" ry="2" />
<text  x="288.52" y="1471.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="307.5" y="2037" width="0.2" height="15.0" fill="rgb(223,204,17)" rx="2" ry="2" />
<text  x="310.47" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="984.5" y="1989" width="0.4" height="15.0" fill="rgb(246,196,4)" rx="2" ry="2" />
<text  x="987.50" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="182.9" y="1957" width="0.8" height="15.0" fill="rgb(231,197,36)" rx="2" ry="2" />
<text  x="185.87" y="1967.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="382.8" y="1941" width="0.6" height="15.0" fill="rgb(229,49,32)" rx="2" ry="2" />
<text  x="385.83" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="659.9" y="1973" width="0.2" height="15.0" fill="rgb(227,71,49)" rx="2" ry="2" />
<text  x="662.93" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1102.6" y="1989" width="0.2" height="15.0" fill="rgb(223,64,50)" rx="2" ry="2" />
<text  x="1105.58" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (53 samples, 0.89%)</title><rect x="392.7" y="2021" width="10.5" height="15.0" fill="rgb(230,178,31)" rx="2" ry="2" />
<text  x="395.72" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (233 samples, 3.91%)</title><rect x="689.0" y="1941" width="46.1" height="15.0" fill="rgb(208,25,15)" rx="2" ry="2" />
<text  x="692.00" y="1951.5" >foll..</text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1285" width="50.5" height="15.0" fill="rgb(245,184,1)" rx="2" ry="2" />
<text  x="65.02" y="1295.5" >[unkn..</text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="946.7" y="1957" width="0.4" height="15.0" fill="rgb(209,170,51)" rx="2" ry="2" />
<text  x="949.72" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (10 samples, 0.17%)</title><rect x="461.9" y="1973" width="2.0" height="15.0" fill="rgb(215,172,40)" rx="2" ry="2" />
<text  x="464.94" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="930.1" y="1957" width="0.4" height="15.0" fill="rgb(238,191,11)" rx="2" ry="2" />
<text  x="933.11" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="868.0" y="1941" width="0.2" height="15.0" fill="rgb(248,197,39)" rx="2" ry="2" />
<text  x="871.00" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (8 samples, 0.13%)</title><rect x="290.1" y="1669" width="1.5" height="15.0" fill="rgb(229,43,29)" rx="2" ry="2" />
<text  x="293.07" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (360 samples, 6.03%)</title><rect x="235.1" y="2005" width="71.2" height="15.0" fill="rgb(227,81,20)" rx="2" ry="2" />
<text  x="238.08" y="2015.5" >do_sysca..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (4 samples, 0.07%)</title><rect x="406.4" y="2037" width="0.8" height="15.0" fill="rgb(235,75,42)" rx="2" ry="2" />
<text  x="409.37" y="2047.5" ></text>
</g>
<g >
<title>kfree (9 samples, 0.15%)</title><rect x="280.0" y="1397" width="1.8" height="15.0" fill="rgb(213,49,38)" rx="2" ry="2" />
<text  x="282.98" y="1407.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="245.2" y="1445" width="0.2" height="15.0" fill="rgb(212,21,48)" rx="2" ry="2" />
<text  x="248.17" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1029" width="50.5" height="15.0" fill="rgb(254,3,9)" rx="2" ry="2" />
<text  x="65.02" y="1039.5" >[unkn..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="112.1" y="117" width="0.2" height="15.0" fill="rgb(247,222,38)" rx="2" ry="2" />
<text  x="115.06" y="127.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="403.0" y="1957" width="0.2" height="15.0" fill="rgb(216,37,25)" rx="2" ry="2" />
<text  x="406.00" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="133.6" y="1957" width="0.2" height="15.0" fill="rgb(249,170,40)" rx="2" ry="2" />
<text  x="136.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="865.6" y="1989" width="0.8" height="15.0" fill="rgb(205,108,53)" rx="2" ry="2" />
<text  x="868.63" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="358.9" y="1989" width="0.2" height="15.0" fill="rgb(248,198,20)" rx="2" ry="2" />
<text  x="361.90" y="1999.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="418.2" y="2005" width="0.2" height="15.0" fill="rgb(207,147,54)" rx="2" ry="2" />
<text  x="421.23" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="486.7" y="1909" width="0.4" height="15.0" fill="rgb(216,106,8)" rx="2" ry="2" />
<text  x="489.67" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="523.1" y="2021" width="0.2" height="15.0" fill="rgb(234,118,51)" rx="2" ry="2" />
<text  x="526.06" y="2031.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.13%)</title><rect x="11.8" y="1893" width="1.6" height="15.0" fill="rgb(214,154,34)" rx="2" ry="2" />
<text  x="14.78" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (31 samples, 0.52%)</title><rect x="227.0" y="2037" width="6.1" height="15.0" fill="rgb(252,208,20)" rx="2" ry="2" />
<text  x="229.97" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.23%)</title><rect x="604.2" y="2005" width="2.7" height="15.0" fill="rgb(224,192,39)" rx="2" ry="2" />
<text  x="607.15" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="604.5" y="1989" width="2.4" height="15.0" fill="rgb(225,13,6)" rx="2" ry="2" />
<text  x="607.55" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="710.8" y="1845" width="0.4" height="15.0" fill="rgb(230,184,18)" rx="2" ry="2" />
<text  x="713.76" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1177.5" y="2053" width="0.2" height="15.0" fill="rgb(243,224,17)" rx="2" ry="2" />
<text  x="1180.54" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (94 samples, 1.58%)</title><rect x="667.8" y="1973" width="18.6" height="15.0" fill="rgb(234,189,6)" rx="2" ry="2" />
<text  x="670.84" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (4 samples, 0.07%)</title><rect x="207.0" y="1989" width="0.8" height="15.0" fill="rgb(239,225,45)" rx="2" ry="2" />
<text  x="210.00" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="206.8" y="1925" width="0.2" height="15.0" fill="rgb(236,220,33)" rx="2" ry="2" />
<text  x="209.80" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="226.8" y="2021" width="0.2" height="15.0" fill="rgb(225,181,26)" rx="2" ry="2" />
<text  x="229.78" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (11 samples, 0.18%)</title><rect x="910.7" y="2005" width="2.2" height="15.0" fill="rgb(237,51,21)" rx="2" ry="2" />
<text  x="913.72" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="242.8" y="1925" width="0.2" height="15.0" fill="rgb(242,175,26)" rx="2" ry="2" />
<text  x="245.80" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="984.3" y="1973" width="0.2" height="15.0" fill="rgb(211,130,18)" rx="2" ry="2" />
<text  x="987.30" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="111.9" y="53" width="0.2" height="15.0" fill="rgb(248,31,21)" rx="2" ry="2" />
<text  x="114.86" y="63.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="929.1" y="1973" width="0.4" height="15.0" fill="rgb(220,72,32)" rx="2" ry="2" />
<text  x="932.12" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="131.2" y="1829" width="0.2" height="15.0" fill="rgb(241,145,25)" rx="2" ry="2" />
<text  x="134.24" y="1839.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.17%)</title><rect x="11.4" y="1973" width="2.0" height="15.0" fill="rgb(209,197,12)" rx="2" ry="2" />
<text  x="14.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="643.7" y="2037" width="0.4" height="15.0" fill="rgb(212,22,3)" rx="2" ry="2" />
<text  x="646.71" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (28 samples, 0.47%)</title><rect x="970.9" y="1909" width="5.5" height="15.0" fill="rgb(205,96,31)" rx="2" ry="2" />
<text  x="973.85" y="1919.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (8 samples, 0.13%)</title><rect x="240.6" y="1941" width="1.6" height="15.0" fill="rgb(253,49,44)" rx="2" ry="2" />
<text  x="243.62" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="661.7" y="1973" width="0.4" height="15.0" fill="rgb(210,197,0)" rx="2" ry="2" />
<text  x="664.71" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="233.3" y="2021" width="1.2" height="15.0" fill="rgb(242,23,31)" rx="2" ry="2" />
<text  x="236.30" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="103.2" y="37" width="0.2" height="15.0" fill="rgb(237,133,16)" rx="2" ry="2" />
<text  x="106.16" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="975.0" y="1893" width="0.8" height="15.0" fill="rgb(254,45,16)" rx="2" ry="2" />
<text  x="978.01" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (234 samples, 3.92%)</title><rect x="467.5" y="2037" width="46.3" height="15.0" fill="rgb(224,107,22)" rx="2" ry="2" />
<text  x="470.48" y="2047.5" >face..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (21 samples, 0.35%)</title><rect x="1177.7" y="2053" width="4.2" height="15.0" fill="rgb(226,109,3)" rx="2" ry="2" />
<text  x="1180.74" y="2063.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (28 samples, 0.47%)</title><rect x="310.0" y="1957" width="5.6" height="15.0" fill="rgb(220,152,27)" rx="2" ry="2" />
<text  x="313.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (29 samples, 0.49%)</title><rect x="554.9" y="1989" width="5.7" height="15.0" fill="rgb(254,109,32)" rx="2" ry="2" />
<text  x="557.90" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (4 samples, 0.07%)</title><rect x="1103.2" y="2053" width="0.8" height="15.0" fill="rgb(226,52,53)" rx="2" ry="2" />
<text  x="1106.17" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="465.1" y="1941" width="0.2" height="15.0" fill="rgb(232,27,25)" rx="2" ry="2" />
<text  x="468.11" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="522.7" y="1989" width="0.4" height="15.0" fill="rgb(213,106,22)" rx="2" ry="2" />
<text  x="525.67" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (10 samples, 0.17%)</title><rect x="1171.8" y="2053" width="2.0" height="15.0" fill="rgb(217,21,21)" rx="2" ry="2" />
<text  x="1174.80" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="382.4" y="1941" width="0.2" height="15.0" fill="rgb(208,123,38)" rx="2" ry="2" />
<text  x="385.43" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (6 samples, 0.10%)</title><rect x="403.8" y="2037" width="1.2" height="15.0" fill="rgb(234,25,9)" rx="2" ry="2" />
<text  x="406.79" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (4 samples, 0.07%)</title><rect x="226.2" y="2037" width="0.8" height="15.0" fill="rgb(214,9,2)" rx="2" ry="2" />
<text  x="229.18" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (259 samples, 4.34%)</title><rect x="1038.3" y="2037" width="51.2" height="15.0" fill="rgb(247,90,44)" rx="2" ry="2" />
<text  x="1041.30" y="2047.5" >entry..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="382.2" y="1893" width="0.2" height="15.0" fill="rgb(237,72,0)" rx="2" ry="2" />
<text  x="385.24" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="341.7" y="1925" width="0.4" height="15.0" fill="rgb(228,229,6)" rx="2" ry="2" />
<text  x="344.69" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (4 samples, 0.07%)</title><rect x="309.3" y="2037" width="0.7" height="15.0" fill="rgb(231,83,20)" rx="2" ry="2" />
<text  x="312.25" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;void  (2 samples, 0.03%)</title><rect x="745.4" y="1925" width="0.4" height="15.0" fill="rgb(213,226,8)" rx="2" ry="2" />
<text  x="748.37" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="395.5" y="1941" width="0.2" height="15.0" fill="rgb(237,211,3)" rx="2" ry="2" />
<text  x="398.49" y="1951.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (7 samples, 0.12%)</title><rect x="62.4" y="37" width="1.4" height="15.0" fill="rgb(207,128,35)" rx="2" ry="2" />
<text  x="65.41" y="47.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 4.21%)</title><rect x="417.8" y="2021" width="49.7" height="15.0" fill="rgb(253,184,33)" rx="2" ry="2" />
<text  x="420.84" y="2031.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (10 samples, 0.17%)</title><rect x="644.1" y="2037" width="2.0" height="15.0" fill="rgb(225,3,26)" rx="2" ry="2" />
<text  x="647.11" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="110.1" y="37" width="0.4" height="15.0" fill="rgb(249,203,52)" rx="2" ry="2" />
<text  x="113.08" y="47.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="300.0" y="1845" width="0.2" height="15.0" fill="rgb(227,11,8)" rx="2" ry="2" />
<text  x="302.96" y="1855.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="206.8" y="1909" width="0.2" height="15.0" fill="rgb(239,210,49)" rx="2" ry="2" />
<text  x="209.80" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (13 samples, 0.22%)</title><rect x="614.8" y="1973" width="2.6" height="15.0" fill="rgb(218,68,53)" rx="2" ry="2" />
<text  x="617.83" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (29 samples, 0.49%)</title><rect x="286.1" y="1733" width="5.7" height="15.0" fill="rgb(213,204,34)" rx="2" ry="2" />
<text  x="289.11" y="1743.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="281.8" y="1429" width="0.4" height="15.0" fill="rgb(214,3,50)" rx="2" ry="2" />
<text  x="284.76" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="127.7" y="1989" width="0.4" height="15.0" fill="rgb(211,155,27)" rx="2" ry="2" />
<text  x="130.68" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="403.2" y="2005" width="0.2" height="15.0" fill="rgb(243,140,6)" rx="2" ry="2" />
<text  x="406.20" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="483.7" y="1941" width="0.2" height="15.0" fill="rgb(250,39,45)" rx="2" ry="2" />
<text  x="486.70" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="193.9" y="2021" width="0.2" height="15.0" fill="rgb(224,113,8)" rx="2" ry="2" />
<text  x="196.94" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.07%)</title><rect x="947.3" y="1941" width="0.8" height="15.0" fill="rgb(242,54,31)" rx="2" ry="2" />
<text  x="950.31" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="503.9" y="1957" width="0.4" height="15.0" fill="rgb(243,18,5)" rx="2" ry="2" />
<text  x="506.88" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="110.5" y="85" width="1.4" height="15.0" fill="rgb(233,150,6)" rx="2" ry="2" />
<text  x="113.48" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="493.8" y="1909" width="0.6" height="15.0" fill="rgb(211,11,13)" rx="2" ry="2" />
<text  x="496.79" y="1919.5" ></text>
</g>
<g >
<title>intel_pstate_update_pstate (1 samples, 0.02%)</title><rect x="440.4" y="1829" width="0.2" height="15.0" fill="rgb(223,184,5)" rx="2" ry="2" />
<text  x="443.39" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (48 samples, 0.80%)</title><rect x="152.6" y="1941" width="9.5" height="15.0" fill="rgb(218,171,14)" rx="2" ry="2" />
<text  x="155.60" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="598.0" y="2005" width="1.4" height="15.0" fill="rgb(253,130,6)" rx="2" ry="2" />
<text  x="601.02" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="75.1" y="37" width="0.4" height="15.0" fill="rgb(207,11,16)" rx="2" ry="2" />
<text  x="78.07" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="487.1" y="1909" width="0.2" height="15.0" fill="rgb(211,32,3)" rx="2" ry="2" />
<text  x="490.06" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="868.0" y="1973" width="0.2" height="15.0" fill="rgb(216,178,14)" rx="2" ry="2" />
<text  x="871.00" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (17 samples, 0.28%)</title><rect x="599.4" y="2005" width="3.4" height="15.0" fill="rgb(235,79,47)" rx="2" ry="2" />
<text  x="602.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="399.2" y="1893" width="0.2" height="15.0" fill="rgb(216,139,4)" rx="2" ry="2" />
<text  x="402.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="391.7" y="2005" width="0.4" height="15.0" fill="rgb(249,132,23)" rx="2" ry="2" />
<text  x="394.73" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="333.8" y="1957" width="0.2" height="15.0" fill="rgb(205,29,34)" rx="2" ry="2" />
<text  x="336.78" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="611.7" y="1973" width="2.3" height="15.0" fill="rgb(224,107,52)" rx="2" ry="2" />
<text  x="614.67" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1041.1" y="1925" width="0.2" height="15.0" fill="rgb(220,212,22)" rx="2" ry="2" />
<text  x="1044.07" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="680.7" y="1925" width="1.0" height="15.0" fill="rgb(251,86,38)" rx="2" ry="2" />
<text  x="683.70" y="1935.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(249,32,20)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (15 samples, 0.25%)</title><rect x="13.6" y="1925" width="2.9" height="15.0" fill="rgb(224,142,15)" rx="2" ry="2" />
<text  x="16.56" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1049.2" y="1877" width="0.2" height="15.0" fill="rgb(211,110,52)" rx="2" ry="2" />
<text  x="1052.18" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="734.5" y="1909" width="0.6" height="15.0" fill="rgb(211,116,44)" rx="2" ry="2" />
<text  x="737.50" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="382.8" y="1925" width="0.2" height="15.0" fill="rgb(252,96,32)" rx="2" ry="2" />
<text  x="385.83" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="522.5" y="2005" width="0.6" height="15.0" fill="rgb(228,14,48)" rx="2" ry="2" />
<text  x="525.47" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (17 samples, 0.28%)</title><rect x="548.8" y="1957" width="3.3" height="15.0" fill="rgb(223,83,47)" rx="2" ry="2" />
<text  x="551.77" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="187.0" y="1893" width="0.2" height="15.0" fill="rgb(210,206,22)" rx="2" ry="2" />
<text  x="190.02" y="1903.5" ></text>
</g>
<g >
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="261.6" y="1813" width="0.4" height="15.0" fill="rgb(207,12,31)" rx="2" ry="2" />
<text  x="264.59" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="974.6" y="1893" width="0.2" height="15.0" fill="rgb(252,94,27)" rx="2" ry="2" />
<text  x="977.61" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="64.0" y="37" width="0.4" height="15.0" fill="rgb(243,86,29)" rx="2" ry="2" />
<text  x="67.00" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (44 samples, 0.74%)</title><rect x="568.6" y="1973" width="8.7" height="15.0" fill="rgb(214,178,28)" rx="2" ry="2" />
<text  x="571.55" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="661" width="50.3" height="15.0" fill="rgb(210,55,21)" rx="2" ry="2" />
<text  x="65.02" y="671.5" >[unkn..</text>
</g>
<g >
<title>tcp_rearm_rto (9 samples, 0.15%)</title><rect x="294.6" y="1813" width="1.8" height="15.0" fill="rgb(205,23,22)" rx="2" ry="2" />
<text  x="297.62" y="1823.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="258.8" y="1829" width="0.2" height="15.0" fill="rgb(236,153,30)" rx="2" ry="2" />
<text  x="261.82" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb (16 samples, 0.27%)</title><rect x="1045.4" y="1925" width="3.2" height="15.0" fill="rgb(227,207,25)" rx="2" ry="2" />
<text  x="1048.42" y="1935.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (10 samples, 0.17%)</title><rect x="11.4" y="2053" width="2.0" height="15.0" fill="rgb(208,149,34)" rx="2" ry="2" />
<text  x="14.38" y="2063.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="1141.9" y="2021" width="0.4" height="15.0" fill="rgb(243,138,0)" rx="2" ry="2" />
<text  x="1144.94" y="2031.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="418.4" y="2005" width="0.2" height="15.0" fill="rgb(219,91,53)" rx="2" ry="2" />
<text  x="421.43" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (5 samples, 0.08%)</title><rect x="640.3" y="2005" width="1.0" height="15.0" fill="rgb(235,219,25)" rx="2" ry="2" />
<text  x="643.35" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="592.9" y="1973" width="0.2" height="15.0" fill="rgb(229,155,37)" rx="2" ry="2" />
<text  x="595.88" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="657.4" y="2021" width="1.3" height="15.0" fill="rgb(213,4,13)" rx="2" ry="2" />
<text  x="660.36" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="181.7" y="1989" width="0.2" height="15.0" fill="rgb(222,191,15)" rx="2" ry="2" />
<text  x="184.68" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (3 samples, 0.05%)</title><rect x="19.9" y="1941" width="0.6" height="15.0" fill="rgb(254,47,30)" rx="2" ry="2" />
<text  x="22.89" y="1951.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1181.9" y="2053" width="0.4" height="15.0" fill="rgb(236,63,16)" rx="2" ry="2" />
<text  x="1184.89" y="2063.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (1 samples, 0.02%)</title><rect x="1081.2" y="1845" width="0.2" height="15.0" fill="rgb(245,67,52)" rx="2" ry="2" />
<text  x="1084.22" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (2 samples, 0.03%)</title><rect x="315.6" y="2037" width="0.4" height="15.0" fill="rgb(240,161,36)" rx="2" ry="2" />
<text  x="318.58" y="2047.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="11.6" y="1829" width="0.2" height="15.0" fill="rgb(220,192,21)" rx="2" ry="2" />
<text  x="14.58" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.0" y="1781" width="0.2" height="15.0" fill="rgb(208,78,24)" rx="2" ry="2" />
<text  x="296.03" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="291.3" y="1637" width="0.2" height="15.0" fill="rgb(220,134,21)" rx="2" ry="2" />
<text  x="294.25" y="1647.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="592.9" y="1861" width="0.2" height="15.0" fill="rgb(229,162,52)" rx="2" ry="2" />
<text  x="595.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (9 samples, 0.15%)</title><rect x="294.6" y="1797" width="1.8" height="15.0" fill="rgb(205,23,31)" rx="2" ry="2" />
<text  x="297.62" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="837.1" y="2005" width="0.2" height="15.0" fill="rgb(234,3,51)" rx="2" ry="2" />
<text  x="840.15" y="2015.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="23.6" y="1941" width="0.8" height="15.0" fill="rgb(234,207,46)" rx="2" ry="2" />
<text  x="26.65" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="592.9" y="1941" width="0.2" height="15.0" fill="rgb(234,43,15)" rx="2" ry="2" />
<text  x="595.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="709" width="50.3" height="15.0" fill="rgb(243,9,4)" rx="2" ry="2" />
<text  x="65.02" y="719.5" >[unkn..</text>
</g>
<g >
<title>aa_sock_msg_perm (11 samples, 0.18%)</title><rect x="300.9" y="1893" width="2.2" height="15.0" fill="rgb(219,221,5)" rx="2" ry="2" />
<text  x="303.95" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="380.9" y="1845" width="0.9" height="15.0" fill="rgb(247,215,26)" rx="2" ry="2" />
<text  x="383.85" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="13.4" y="2021" width="0.2" height="15.0" fill="rgb(244,18,40)" rx="2" ry="2" />
<text  x="16.36" y="2031.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="949.3" y="1925" width="0.2" height="15.0" fill="rgb(238,182,41)" rx="2" ry="2" />
<text  x="952.29" y="1935.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="307.7" y="2037" width="0.6" height="15.0" fill="rgb(237,125,35)" rx="2" ry="2" />
<text  x="310.67" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1,038 samples, 17.40%)</title><rect x="659.9" y="2021" width="205.3" height="15.0" fill="rgb(238,200,27)" rx="2" ry="2" />
<text  x="662.93" y="2031.5" >[unknown]</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1146.5" y="1989" width="0.4" height="15.0" fill="rgb(240,4,8)" rx="2" ry="2" />
<text  x="1149.49" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (10 samples, 0.17%)</title><rect x="81.4" y="37" width="2.0" height="15.0" fill="rgb(240,112,23)" rx="2" ry="2" />
<text  x="84.40" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="1035.9" y="1989" width="0.2" height="15.0" fill="rgb(246,137,18)" rx="2" ry="2" />
<text  x="1038.92" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.1" y="1941" width="0.2" height="15.0" fill="rgb(243,15,38)" rx="2" ry="2" />
<text  x="865.07" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="540.3" y="1893" width="0.2" height="15.0" fill="rgb(219,36,12)" rx="2" ry="2" />
<text  x="543.27" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="22.9" y="1893" width="0.2" height="15.0" fill="rgb(254,204,38)" rx="2" ry="2" />
<text  x="25.86" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1221" width="50.5" height="15.0" fill="rgb(238,195,9)" rx="2" ry="2" />
<text  x="65.02" y="1231.5" >[unkn..</text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1045.4" y="1909" width="0.4" height="15.0" fill="rgb(244,121,36)" rx="2" ry="2" />
<text  x="1048.42" y="1919.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.25%)</title><rect x="219.9" y="2021" width="2.9" height="15.0" fill="rgb(247,28,39)" rx="2" ry="2" />
<text  x="222.85" y="2031.5" ></text>
</g>
<g >
<title>tcp_recvmsg (225 samples, 3.77%)</title><rect x="1042.6" y="1941" width="44.6" height="15.0" fill="rgb(228,122,11)" rx="2" ry="2" />
<text  x="1045.65" y="1951.5" >tcp_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="11.4" y="2037" width="2.0" height="15.0" fill="rgb(221,105,45)" rx="2" ry="2" />
<text  x="14.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="837" width="50.3" height="15.0" fill="rgb(241,24,42)" rx="2" ry="2" />
<text  x="65.02" y="847.5" >[unkn..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (3 samples, 0.05%)</title><rect x="923.2" y="1973" width="0.6" height="15.0" fill="rgb(247,83,9)" rx="2" ry="2" />
<text  x="926.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="527.8" y="2037" width="0.2" height="15.0" fill="rgb(226,77,12)" rx="2" ry="2" />
<text  x="530.81" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="660.5" y="1989" width="1.6" height="15.0" fill="rgb(218,227,16)" rx="2" ry="2" />
<text  x="663.52" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (138 samples, 2.31%)</title><rect x="952.9" y="1957" width="27.2" height="15.0" fill="rgb(232,171,30)" rx="2" ry="2" />
<text  x="955.85" y="1967.5" >f..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.0" y="1765" width="0.2" height="15.0" fill="rgb(235,8,42)" rx="2" ry="2" />
<text  x="296.03" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (4 samples, 0.07%)</title><rect x="567.0" y="1989" width="0.8" height="15.0" fill="rgb(241,194,29)" rx="2" ry="2" />
<text  x="569.97" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="376.3" y="1909" width="5.9" height="15.0" fill="rgb(213,10,34)" rx="2" ry="2" />
<text  x="379.30" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="530.6" y="1941" width="0.2" height="15.0" fill="rgb(247,44,48)" rx="2" ry="2" />
<text  x="533.58" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="634.2" y="1957" width="1.0" height="15.0" fill="rgb(253,183,42)" rx="2" ry="2" />
<text  x="637.22" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="401.6" y="2005" width="0.2" height="15.0" fill="rgb(232,128,27)" rx="2" ry="2" />
<text  x="404.62" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="374.5" y="1925" width="0.4" height="15.0" fill="rgb(250,169,40)" rx="2" ry="2" />
<text  x="377.52" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="196.3" y="2005" width="0.2" height="15.0" fill="rgb(228,73,25)" rx="2" ry="2" />
<text  x="199.32" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.23%)</title><rect x="94.3" y="37" width="2.7" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" />
<text  x="97.26" y="47.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="707.6" y="1893" width="0.2" height="15.0" fill="rgb(216,178,32)" rx="2" ry="2" />
<text  x="710.60" y="1903.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="580.6" y="1989" width="0.4" height="15.0" fill="rgb(218,183,28)" rx="2" ry="2" />
<text  x="583.62" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (22 samples, 0.37%)</title><rect x="396.1" y="1957" width="4.3" height="15.0" fill="rgb(239,140,22)" rx="2" ry="2" />
<text  x="399.08" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (32 samples, 0.54%)</title><rect x="128.1" y="1989" width="6.3" height="15.0" fill="rgb(223,81,13)" rx="2" ry="2" />
<text  x="131.08" y="1999.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::unlock (2 samples, 0.03%)</title><rect x="611.3" y="1973" width="0.4" height="15.0" fill="rgb(250,73,53)" rx="2" ry="2" />
<text  x="614.27" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="591.9" y="1925" width="0.2" height="15.0" fill="rgb(251,16,2)" rx="2" ry="2" />
<text  x="594.89" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (14 samples, 0.23%)</title><rect x="560.6" y="1989" width="2.8" height="15.0" fill="rgb(252,74,0)" rx="2" ry="2" />
<text  x="563.64" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="204.8" y="1941" width="0.2" height="15.0" fill="rgb(212,63,8)" rx="2" ry="2" />
<text  x="207.82" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (22 samples, 0.37%)</title><rect x="677.3" y="1941" width="4.4" height="15.0" fill="rgb(225,61,34)" rx="2" ry="2" />
<text  x="680.33" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="618.2" y="1973" width="3.2" height="15.0" fill="rgb(228,227,23)" rx="2" ry="2" />
<text  x="621.20" y="1983.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="209.6" y="1909" width="0.2" height="15.0" fill="rgb(224,142,8)" rx="2" ry="2" />
<text  x="212.57" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="21.7" y="1957" width="0.2" height="15.0" fill="rgb(212,220,15)" rx="2" ry="2" />
<text  x="24.67" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (7 samples, 0.12%)</title><rect x="374.9" y="1925" width="1.4" height="15.0" fill="rgb(230,51,26)" rx="2" ry="2" />
<text  x="377.92" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.8" y="1973" width="0.2" height="15.0" fill="rgb(242,220,41)" rx="2" ry="2" />
<text  x="348.84" y="1983.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="189.4" y="1861" width="0.2" height="15.0" fill="rgb(210,140,12)" rx="2" ry="2" />
<text  x="192.39" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1013" width="50.5" height="15.0" fill="rgb(222,101,1)" rx="2" ry="2" />
<text  x="65.02" y="1023.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (540 samples, 9.05%)</title><rect x="907.6" y="2021" width="106.8" height="15.0" fill="rgb(247,179,30)" rx="2" ry="2" />
<text  x="910.56" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="950.9" y="1893" width="0.4" height="15.0" fill="rgb(228,158,7)" rx="2" ry="2" />
<text  x="953.87" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (14 samples, 0.23%)</title><rect x="1045.8" y="1909" width="2.8" height="15.0" fill="rgb(238,192,53)" rx="2" ry="2" />
<text  x="1048.81" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (14 samples, 0.23%)</title><rect x="486.5" y="1925" width="2.7" height="15.0" fill="rgb(217,78,21)" rx="2" ry="2" />
<text  x="489.47" y="1935.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="192.0" y="2005" width="0.6" height="15.0" fill="rgb(225,99,28)" rx="2" ry="2" />
<text  x="194.96" y="2015.5" ></text>
</g>
<g >
<title>__libc_sendmsg (376 samples, 6.30%)</title><rect x="233.1" y="2037" width="74.4" height="15.0" fill="rgb(236,154,50)" rx="2" ry="2" />
<text  x="236.10" y="2047.5" >__libc_s..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="591.3" y="1925" width="0.2" height="15.0" fill="rgb(245,62,49)" rx="2" ry="2" />
<text  x="594.30" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="877.7" y="2005" width="0.4" height="15.0" fill="rgb(244,110,46)" rx="2" ry="2" />
<text  x="880.69" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (7 samples, 0.12%)</title><rect x="350.8" y="1973" width="1.4" height="15.0" fill="rgb(232,38,11)" rx="2" ry="2" />
<text  x="353.79" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="1141.9" y="2037" width="0.4" height="15.0" fill="rgb(243,208,14)" rx="2" ry="2" />
<text  x="1144.94" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="195.9" y="1989" width="0.2" height="15.0" fill="rgb(252,42,28)" rx="2" ry="2" />
<text  x="198.92" y="1999.5" ></text>
</g>
<g >
<title>sys_access (1 samples, 0.02%)</title><rect x="11.2" y="2005" width="0.2" height="15.0" fill="rgb(247,100,14)" rx="2" ry="2" />
<text  x="14.19" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="204.6" y="1973" width="0.4" height="15.0" fill="rgb(233,109,4)" rx="2" ry="2" />
<text  x="207.62" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (5 samples, 0.08%)</title><rect x="1174.4" y="2053" width="1.0" height="15.0" fill="rgb(240,218,25)" rx="2" ry="2" />
<text  x="1177.37" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="1178.7" y="2037" width="3.2" height="15.0" fill="rgb(237,68,49)" rx="2" ry="2" />
<text  x="1181.73" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="347.2" y="1957" width="0.2" height="15.0" fill="rgb(232,132,38)" rx="2" ry="2" />
<text  x="350.23" y="1967.5" ></text>
</g>
<g >
<title>epoll_wait (28 samples, 0.47%)</title><rect x="310.0" y="2037" width="5.6" height="15.0" fill="rgb(252,139,27)" rx="2" ry="2" />
<text  x="313.04" y="2047.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="355.9" y="1957" width="0.2" height="15.0" fill="rgb(233,170,2)" rx="2" ry="2" />
<text  x="358.93" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="1033.0" y="2005" width="0.9" height="15.0" fill="rgb(210,40,8)" rx="2" ry="2" />
<text  x="1035.96" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (271 samples, 4.54%)</title><rect x="528.8" y="2005" width="53.6" height="15.0" fill="rgb(253,122,49)" rx="2" ry="2" />
<text  x="531.80" y="2015.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (4 samples, 0.07%)</title><rect x="195.1" y="2021" width="0.8" height="15.0" fill="rgb(220,163,44)" rx="2" ry="2" />
<text  x="198.13" y="2031.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="530.6" y="1797" width="0.2" height="15.0" fill="rgb(217,216,16)" rx="2" ry="2" />
<text  x="533.58" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="103.0" y="53" width="0.4" height="15.0" fill="rgb(248,166,0)" rx="2" ry="2" />
<text  x="105.96" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (15 samples, 0.25%)</title><rect x="497.3" y="1989" width="3.0" height="15.0" fill="rgb(212,160,37)" rx="2" ry="2" />
<text  x="500.35" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (5 samples, 0.08%)</title><rect x="1033.9" y="2005" width="1.0" height="15.0" fill="rgb(217,53,29)" rx="2" ry="2" />
<text  x="1036.95" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="208.6" y="1957" width="0.2" height="15.0" fill="rgb(246,82,40)" rx="2" ry="2" />
<text  x="211.58" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (10 samples, 0.17%)</title><rect x="1101.0" y="2037" width="2.0" height="15.0" fill="rgb(213,29,41)" rx="2" ry="2" />
<text  x="1104.00" y="2047.5" ></text>
</g>
<g >
<title>ip_output (142 samples, 2.38%)</title><rect x="263.8" y="1781" width="28.0" height="15.0" fill="rgb(230,52,27)" rx="2" ry="2" />
<text  x="266.76" y="1791.5" >i..</text>
</g>
<g >
<title>folly::EventBase::loopBody (8 samples, 0.13%)</title><rect x="185.8" y="1957" width="1.6" height="15.0" fill="rgb(231,31,31)" rx="2" ry="2" />
<text  x="188.83" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="491.4" y="1909" width="0.2" height="15.0" fill="rgb(211,118,20)" rx="2" ry="2" />
<text  x="494.41" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="693.8" y="1909" width="0.1" height="15.0" fill="rgb(207,95,37)" rx="2" ry="2" />
<text  x="696.75" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.80%)</title><rect x="467.5" y="2005" width="44.9" height="15.0" fill="rgb(248,68,29)" rx="2" ry="2" />
<text  x="470.48" y="2015.5" >[unk..</text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="400.4" y="1957" width="0.2" height="15.0" fill="rgb(208,32,46)" rx="2" ry="2" />
<text  x="403.43" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="245.2" y="1605" width="0.2" height="15.0" fill="rgb(228,21,20)" rx="2" ry="2" />
<text  x="248.17" y="1615.5" ></text>
</g>
<g >
<title>rb_erase (16 samples, 0.27%)</title><rect x="282.4" y="1461" width="3.1" height="15.0" fill="rgb(226,199,31)" rx="2" ry="2" />
<text  x="285.35" y="1471.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="286.5" y="1701" width="0.2" height="15.0" fill="rgb(238,113,33)" rx="2" ry="2" />
<text  x="289.51" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="505.9" y="1957" width="0.2" height="15.0" fill="rgb(212,213,0)" rx="2" ry="2" />
<text  x="508.85" y="1967.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="895.5" y="1973" width="0.2" height="15.0" fill="rgb(241,213,3)" rx="2" ry="2" />
<text  x="898.49" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (1 samples, 0.02%)</title><rect x="26.2" y="2021" width="0.2" height="15.0" fill="rgb(228,23,4)" rx="2" ry="2" />
<text  x="29.22" y="2031.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="185.6" y="1861" width="0.2" height="15.0" fill="rgb(220,15,39)" rx="2" ry="2" />
<text  x="188.64" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="207.2" y="1941" width="0.2" height="15.0" fill="rgb(243,203,1)" rx="2" ry="2" />
<text  x="210.19" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="868.0" y="1989" width="1.0" height="15.0" fill="rgb(249,122,25)" rx="2" ry="2" />
<text  x="871.00" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="111.5" y="37" width="0.2" height="15.0" fill="rgb(252,196,6)" rx="2" ry="2" />
<text  x="114.46" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="66.2" y="37" width="0.4" height="15.0" fill="rgb(231,43,16)" rx="2" ry="2" />
<text  x="69.17" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="746.6" y="1989" width="0.2" height="15.0" fill="rgb(225,43,25)" rx="2" ry="2" />
<text  x="749.56" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="245.2" y="1861" width="0.2" height="15.0" fill="rgb(223,7,18)" rx="2" ry="2" />
<text  x="248.17" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="679.1" y="1909" width="0.4" height="15.0" fill="rgb(221,149,49)" rx="2" ry="2" />
<text  x="682.11" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="402.4" y="1973" width="0.2" height="15.0" fill="rgb(247,212,17)" rx="2" ry="2" />
<text  x="405.41" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="683.1" y="1909" width="0.2" height="15.0" fill="rgb(244,165,33)" rx="2" ry="2" />
<text  x="686.07" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (1 samples, 0.02%)</title><rect x="200.1" y="2021" width="0.2" height="15.0" fill="rgb(246,148,23)" rx="2" ry="2" />
<text  x="203.07" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="895.7" y="1973" width="0.6" height="15.0" fill="rgb(248,29,6)" rx="2" ry="2" />
<text  x="898.69" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="540.3" y="1957" width="0.2" height="15.0" fill="rgb(231,206,27)" rx="2" ry="2" />
<text  x="543.27" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="660.3" y="2005" width="1.8" height="15.0" fill="rgb(242,206,0)" rx="2" ry="2" />
<text  x="663.33" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (15 samples, 0.25%)</title><rect x="13.6" y="1893" width="2.9" height="15.0" fill="rgb(224,112,49)" rx="2" ry="2" />
<text  x="16.56" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="186.6" y="1909" width="0.4" height="15.0" fill="rgb(231,99,3)" rx="2" ry="2" />
<text  x="189.62" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="494.8" y="1941" width="0.4" height="15.0" fill="rgb(253,139,11)" rx="2" ry="2" />
<text  x="497.78" y="1951.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1082.8" y="1893" width="0.2" height="15.0" fill="rgb(220,224,48)" rx="2" ry="2" />
<text  x="1085.80" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="660.3" y="1989" width="0.2" height="15.0" fill="rgb(235,92,42)" rx="2" ry="2" />
<text  x="663.33" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="185.6" y="1925" width="0.2" height="15.0" fill="rgb(217,15,49)" rx="2" ry="2" />
<text  x="188.64" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (3 samples, 0.05%)</title><rect x="608.3" y="2037" width="0.6" height="15.0" fill="rgb(222,9,1)" rx="2" ry="2" />
<text  x="611.31" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="586.9" y="1941" width="0.6" height="15.0" fill="rgb(237,50,27)" rx="2" ry="2" />
<text  x="589.95" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="258.6" y="1829" width="0.2" height="15.0" fill="rgb(229,42,54)" rx="2" ry="2" />
<text  x="261.62" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="868.6" y="1877" width="0.2" height="15.0" fill="rgb(215,78,33)" rx="2" ry="2" />
<text  x="871.60" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="868.2" y="1957" width="0.8" height="15.0" fill="rgb(223,175,35)" rx="2" ry="2" />
<text  x="871.20" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="245.2" y="1781" width="0.2" height="15.0" fill="rgb(223,57,25)" rx="2" ry="2" />
<text  x="248.17" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (122 samples, 2.04%)</title><rect x="840.7" y="1989" width="24.1" height="15.0" fill="rgb(252,221,11)" rx="2" ry="2" />
<text  x="843.71" y="1999.5" >f..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="23.1" y="1877" width="0.2" height="15.0" fill="rgb(213,18,32)" rx="2" ry="2" />
<text  x="26.05" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="104.5" y="37" width="0.8" height="15.0" fill="rgb(230,32,31)" rx="2" ry="2" />
<text  x="107.54" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="493.4" y="1909" width="0.4" height="15.0" fill="rgb(220,159,1)" rx="2" ry="2" />
<text  x="496.39" y="1919.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="245.2" y="1877" width="0.2" height="15.0" fill="rgb(229,11,1)" rx="2" ry="2" />
<text  x="248.17" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (3 samples, 0.05%)</title><rect x="201.9" y="2021" width="0.5" height="15.0" fill="rgb(230,119,10)" rx="2" ry="2" />
<text  x="204.85" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="64.8" y="37" width="0.6" height="15.0" fill="rgb(225,123,53)" rx="2" ry="2" />
<text  x="67.79" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (2 samples, 0.03%)</title><rect x="75.5" y="37" width="0.4" height="15.0" fill="rgb(212,9,14)" rx="2" ry="2" />
<text  x="78.47" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (19 samples, 0.32%)</title><rect x="162.9" y="1941" width="3.7" height="15.0" fill="rgb(220,175,33)" rx="2" ry="2" />
<text  x="165.89" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (8 samples, 0.13%)</title><rect x="1026.8" y="2037" width="1.6" height="15.0" fill="rgb(247,76,11)" rx="2" ry="2" />
<text  x="1029.83" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="837.7" y="2005" width="0.2" height="15.0" fill="rgb(208,52,9)" rx="2" ry="2" />
<text  x="840.74" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (10 samples, 0.17%)</title><rect x="208.8" y="1957" width="2.0" height="15.0" fill="rgb(248,222,34)" rx="2" ry="2" />
<text  x="211.78" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (3 samples, 0.05%)</title><rect x="194.5" y="2021" width="0.6" height="15.0" fill="rgb(221,225,27)" rx="2" ry="2" />
<text  x="197.54" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="389" width="50.3" height="15.0" fill="rgb(248,201,14)" rx="2" ry="2" />
<text  x="65.02" y="399.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="739.6" y="1941" width="0.8" height="15.0" fill="rgb(244,111,25)" rx="2" ry="2" />
<text  x="742.64" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="868.4" y="1925" width="0.6" height="15.0" fill="rgb(232,161,46)" rx="2" ry="2" />
<text  x="871.40" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="677" width="50.3" height="15.0" fill="rgb(217,48,20)" rx="2" ry="2" />
<text  x="65.02" y="687.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="200.3" y="2021" width="0.4" height="15.0" fill="rgb(245,8,31)" rx="2" ry="2" />
<text  x="203.27" y="2031.5" ></text>
</g>
<g >
<title>tcp_ack (108 samples, 1.81%)</title><rect x="264.8" y="1493" width="21.3" height="15.0" fill="rgb(222,108,25)" rx="2" ry="2" />
<text  x="267.75" y="1503.5" >t..</text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (16 samples, 0.27%)</title><rect x="708.0" y="1893" width="3.2" height="15.0" fill="rgb(217,0,28)" rx="2" ry="2" />
<text  x="710.99" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="744.4" y="1941" width="0.4" height="15.0" fill="rgb(246,28,13)" rx="2" ry="2" />
<text  x="747.38" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="293.0" y="1701" width="0.2" height="15.0" fill="rgb(230,84,4)" rx="2" ry="2" />
<text  x="296.03" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="868.2" y="1973" width="0.8" height="15.0" fill="rgb(228,221,39)" rx="2" ry="2" />
<text  x="871.20" y="1983.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="614.0" y="1973" width="0.4" height="15.0" fill="rgb(211,130,20)" rx="2" ry="2" />
<text  x="617.04" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (2 samples, 0.03%)</title><rect x="317.0" y="2021" width="0.4" height="15.0" fill="rgb(225,99,53)" rx="2" ry="2" />
<text  x="319.97" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="245.2" y="1509" width="0.2" height="15.0" fill="rgb(214,93,37)" rx="2" ry="2" />
<text  x="248.17" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (35 samples, 0.59%)</title><rect x="585.6" y="1989" width="6.9" height="15.0" fill="rgb(210,136,44)" rx="2" ry="2" />
<text  x="588.56" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="683.5" y="1909" width="0.2" height="15.0" fill="rgb(249,188,13)" rx="2" ry="2" />
<text  x="686.47" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="867.6" y="2005" width="0.2" height="15.0" fill="rgb(216,16,15)" rx="2" ry="2" />
<text  x="870.61" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="245.2" y="1557" width="0.2" height="15.0" fill="rgb(239,142,7)" rx="2" ry="2" />
<text  x="248.17" y="1567.5" ></text>
</g>
<g >
<title>sys_recvfrom (1 samples, 0.02%)</title><rect x="1089.3" y="2021" width="0.2" height="15.0" fill="rgb(222,19,38)" rx="2" ry="2" />
<text  x="1092.33" y="2031.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1049.2" y="1813" width="0.2" height="15.0" fill="rgb(236,28,26)" rx="2" ry="2" />
<text  x="1052.18" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1081.0" y="1893" width="0.4" height="15.0" fill="rgb(228,157,20)" rx="2" ry="2" />
<text  x="1084.02" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="245.2" y="1653" width="0.2" height="15.0" fill="rgb(254,48,51)" rx="2" ry="2" />
<text  x="248.17" y="1663.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="707.8" y="1893" width="0.2" height="15.0" fill="rgb(236,156,45)" rx="2" ry="2" />
<text  x="710.79" y="1903.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="242.2" y="1941" width="0.6" height="15.0" fill="rgb(243,4,4)" rx="2" ry="2" />
<text  x="245.20" y="1951.5" ></text>
</g>
<g >
<title>sys_recvfrom (243 samples, 4.07%)</title><rect x="1041.3" y="2005" width="48.0" height="15.0" fill="rgb(213,166,1)" rx="2" ry="2" />
<text  x="1044.26" y="2015.5" >sys_..</text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.07%)</title><rect x="193.2" y="2021" width="0.7" height="15.0" fill="rgb(239,155,54)" rx="2" ry="2" />
<text  x="196.15" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="322.3" y="1989" width="0.4" height="15.0" fill="rgb(250,208,35)" rx="2" ry="2" />
<text  x="325.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="200.5" y="1989" width="0.2" height="15.0" fill="rgb(228,32,14)" rx="2" ry="2" />
<text  x="203.47" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="540.3" y="1861" width="0.2" height="15.0" fill="rgb(246,121,48)" rx="2" ry="2" />
<text  x="543.27" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="731.7" y="1893" width="0.4" height="15.0" fill="rgb(217,189,50)" rx="2" ry="2" />
<text  x="734.73" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="99.4" y="37" width="0.4" height="15.0" fill="rgb(207,200,25)" rx="2" ry="2" />
<text  x="102.40" y="47.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="641.3" y="2005" width="0.4" height="15.0" fill="rgb(243,75,48)" rx="2" ry="2" />
<text  x="644.34" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="189.4" y="1989" width="0.2" height="15.0" fill="rgb(243,134,42)" rx="2" ry="2" />
<text  x="192.39" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc (2 samples, 0.03%)</title><rect x="241.8" y="1893" width="0.4" height="15.0" fill="rgb(237,165,43)" rx="2" ry="2" />
<text  x="244.81" y="1903.5" ></text>
</g>
<g >
<title>[mcrouter] (138 samples, 2.31%)</title><rect x="952.9" y="1941" width="27.2" height="15.0" fill="rgb(228,133,6)" rx="2" ry="2" />
<text  x="955.85" y="1951.5" >[..</text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="245.2" y="1829" width="0.2" height="15.0" fill="rgb(246,143,23)" rx="2" ry="2" />
<text  x="248.17" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="244.2" y="1877" width="0.8" height="15.0" fill="rgb(219,159,15)" rx="2" ry="2" />
<text  x="247.18" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (7 samples, 0.12%)</title><rect x="212.1" y="2021" width="1.4" height="15.0" fill="rgb(233,218,12)" rx="2" ry="2" />
<text  x="215.14" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (42 samples, 0.70%)</title><rect x="446.5" y="2005" width="8.3" height="15.0" fill="rgb(224,119,34)" rx="2" ry="2" />
<text  x="449.52" y="2015.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (3 samples, 0.05%)</title><rect x="1086.6" y="1925" width="0.6" height="15.0" fill="rgb(239,157,29)" rx="2" ry="2" />
<text  x="1089.56" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (9 samples, 0.15%)</title><rect x="826.7" y="2005" width="1.7" height="15.0" fill="rgb(235,10,41)" rx="2" ry="2" />
<text  x="829.66" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="370.2" y="1941" width="0.6" height="15.0" fill="rgb(246,81,4)" rx="2" ry="2" />
<text  x="373.17" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="946.1" y="1957" width="0.4" height="15.0" fill="rgb(225,8,41)" rx="2" ry="2" />
<text  x="949.13" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (3 samples, 0.05%)</title><rect x="729.2" y="1877" width="0.5" height="15.0" fill="rgb(234,90,14)" rx="2" ry="2" />
<text  x="732.16" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="209.6" y="1893" width="0.2" height="15.0" fill="rgb(236,129,14)" rx="2" ry="2" />
<text  x="212.57" y="1903.5" ></text>
</g>
<g >
<title>skb_copy_bits (1 samples, 0.02%)</title><rect x="1081.2" y="1813" width="0.2" height="15.0" fill="rgb(208,146,50)" rx="2" ry="2" />
<text  x="1084.22" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (2 samples, 0.03%)</title><rect x="335.8" y="1973" width="0.4" height="15.0" fill="rgb(211,102,31)" rx="2" ry="2" />
<text  x="338.76" y="1983.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="590.1" y="1925" width="0.2" height="15.0" fill="rgb(225,29,0)" rx="2" ry="2" />
<text  x="593.11" y="1935.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="1080.8" y="1717" width="0.2" height="15.0" fill="rgb(229,16,17)" rx="2" ry="2" />
<text  x="1083.82" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1621" width="50.5" height="15.0" fill="rgb(244,89,9)" rx="2" ry="2" />
<text  x="65.02" y="1631.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="838.1" y="2005" width="0.4" height="15.0" fill="rgb(245,209,4)" rx="2" ry="2" />
<text  x="841.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.03%)</title><rect x="1036.1" y="2037" width="0.4" height="15.0" fill="rgb(246,214,28)" rx="2" ry="2" />
<text  x="1039.12" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.79%)</title><rect x="374.1" y="1989" width="9.3" height="15.0" fill="rgb(250,229,46)" rx="2" ry="2" />
<text  x="377.13" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (7 samples, 0.12%)</title><rect x="894.9" y="2037" width="1.4" height="15.0" fill="rgb(220,213,9)" rx="2" ry="2" />
<text  x="897.90" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (8 samples, 0.13%)</title><rect x="185.8" y="2005" width="1.6" height="15.0" fill="rgb(216,95,31)" rx="2" ry="2" />
<text  x="188.83" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (43 samples, 0.72%)</title><rect x="66.6" y="37" width="8.5" height="15.0" fill="rgb(231,37,44)" rx="2" ry="2" />
<text  x="69.57" y="47.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="581.4" y="1989" width="0.2" height="15.0" fill="rgb(216,16,42)" rx="2" ry="2" />
<text  x="584.41" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (123 samples, 2.06%)</title><rect x="923.8" y="1989" width="24.3" height="15.0" fill="rgb(234,75,14)" rx="2" ry="2" />
<text  x="926.78" y="1999.5" >f..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="980.7" y="1989" width="0.2" height="15.0" fill="rgb(234,141,31)" rx="2" ry="2" />
<text  x="983.74" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="868.6" y="1893" width="0.4" height="15.0" fill="rgb(211,36,22)" rx="2" ry="2" />
<text  x="871.60" y="1903.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="23.6" y="1781" width="0.8" height="15.0" fill="rgb(214,166,40)" rx="2" ry="2" />
<text  x="26.65" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="196.1" y="2005" width="0.2" height="15.0" fill="rgb(222,61,36)" rx="2" ry="2" />
<text  x="199.12" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="346.0" y="1973" width="0.2" height="15.0" fill="rgb(242,206,0)" rx="2" ry="2" />
<text  x="349.04" y="1983.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="530.6" y="1813" width="0.2" height="15.0" fill="rgb(233,180,22)" rx="2" ry="2" />
<text  x="533.58" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="947.1" y="1957" width="1.0" height="15.0" fill="rgb(217,58,7)" rx="2" ry="2" />
<text  x="950.12" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (3 samples, 0.05%)</title><rect x="743.8" y="1941" width="0.6" height="15.0" fill="rgb(218,138,25)" rx="2" ry="2" />
<text  x="746.79" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="589.9" y="1925" width="0.2" height="15.0" fill="rgb(222,139,53)" rx="2" ry="2" />
<text  x="592.91" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="590.7" y="1941" width="0.2" height="15.0" fill="rgb(247,103,43)" rx="2" ry="2" />
<text  x="593.70" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1605" width="50.5" height="15.0" fill="rgb(249,1,35)" rx="2" ry="2" />
<text  x="65.02" y="1615.5" >[unkn..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="23.1" y="1893" width="0.2" height="15.0" fill="rgb(231,10,33)" rx="2" ry="2" />
<text  x="26.05" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="362.5" y="1941" width="0.4" height="15.0" fill="rgb(215,24,18)" rx="2" ry="2" />
<text  x="365.46" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="381.8" y="1861" width="0.4" height="15.0" fill="rgb(238,183,39)" rx="2" ry="2" />
<text  x="384.84" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="347.4" y="1957" width="0.4" height="15.0" fill="rgb(237,226,29)" rx="2" ry="2" />
<text  x="350.43" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="106.3" y="37" width="0.2" height="15.0" fill="rgb(247,30,40)" rx="2" ry="2" />
<text  x="109.32" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="400.0" y="1941" width="0.2" height="15.0" fill="rgb(247,95,2)" rx="2" ry="2" />
<text  x="403.04" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="592.9" y="1989" width="0.2" height="15.0" fill="rgb(224,50,12)" rx="2" ry="2" />
<text  x="595.88" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="495.6" y="1925" width="0.2" height="15.0" fill="rgb(246,152,3)" rx="2" ry="2" />
<text  x="498.57" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (363 samples, 6.08%)</title><rect x="234.5" y="2021" width="71.8" height="15.0" fill="rgb(218,204,38)" rx="2" ry="2" />
<text  x="237.49" y="2031.5" >entry_SY..</text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="23.6" y="1877" width="0.8" height="15.0" fill="rgb(251,61,33)" rx="2" ry="2" />
<text  x="26.65" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="209.4" y="1925" width="0.4" height="15.0" fill="rgb(247,110,38)" rx="2" ry="2" />
<text  x="212.37" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="492.0" y="1925" width="1.0" height="15.0" fill="rgb(244,144,34)" rx="2" ry="2" />
<text  x="495.01" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (12 samples, 0.20%)</title><rect x="159.3" y="1925" width="2.4" height="15.0" fill="rgb(227,61,46)" rx="2" ry="2" />
<text  x="162.33" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (7 samples, 0.12%)</title><rect x="485.1" y="1925" width="1.4" height="15.0" fill="rgb(237,58,24)" rx="2" ry="2" />
<text  x="488.09" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="1188.6" y="2037" width="1.0" height="15.0" fill="rgb(230,219,17)" rx="2" ry="2" />
<text  x="1191.62" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (1 samples, 0.02%)</title><rect x="1106.5" y="2053" width="0.2" height="15.0" fill="rgb(229,86,18)" rx="2" ry="2" />
<text  x="1109.53" y="2063.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (63 samples, 1.06%)</title><rect x="528.8" y="1989" width="12.5" height="15.0" fill="rgb(253,206,0)" rx="2" ry="2" />
<text  x="531.80" y="1999.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (4 samples, 0.07%)</title><rect x="1176.7" y="2053" width="0.8" height="15.0" fill="rgb(208,63,30)" rx="2" ry="2" />
<text  x="1179.75" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="128.7" y="1941" width="0.2" height="15.0" fill="rgb(213,4,42)" rx="2" ry="2" />
<text  x="131.67" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="173.2" y="1957" width="0.6" height="15.0" fill="rgb(218,118,11)" rx="2" ry="2" />
<text  x="176.17" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="62.0" y="117" width="50.1" height="15.0" fill="rgb(217,1,44)" rx="2" ry="2" />
<text  x="65.02" y="127.5" >[unkn..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15 samples, 0.25%)</title><rect x="207.8" y="2005" width="3.0" height="15.0" fill="rgb(207,173,5)" rx="2" ry="2" />
<text  x="210.79" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="590.7" y="1925" width="0.2" height="15.0" fill="rgb(209,128,25)" rx="2" ry="2" />
<text  x="593.70" y="1935.5" ></text>
</g>
<g >
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(220,139,28)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="525.8" y="2021" width="0.4" height="15.0" fill="rgb(229,185,36)" rx="2" ry="2" />
<text  x="528.83" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="245.2" y="1733" width="0.2" height="15.0" fill="rgb(249,18,24)" rx="2" ry="2" />
<text  x="248.17" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (6 samples, 0.10%)</title><rect x="553.7" y="1973" width="1.2" height="15.0" fill="rgb(227,129,43)" rx="2" ry="2" />
<text  x="556.72" y="1983.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="224.2" y="2021" width="0.2" height="15.0" fill="rgb(240,32,27)" rx="2" ry="2" />
<text  x="227.20" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (12 samples, 0.20%)</title><rect x="966.7" y="1877" width="2.4" height="15.0" fill="rgb(216,65,23)" rx="2" ry="2" />
<text  x="969.70" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="400.4" y="1941" width="0.2" height="15.0" fill="rgb(213,200,35)" rx="2" ry="2" />
<text  x="403.43" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="485.5" y="1909" width="0.2" height="15.0" fill="rgb(234,83,17)" rx="2" ry="2" />
<text  x="488.48" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (10 samples, 0.17%)</title><rect x="352.4" y="1973" width="1.9" height="15.0" fill="rgb(248,182,31)" rx="2" ry="2" />
<text  x="355.37" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="206.6" y="1973" width="0.2" height="15.0" fill="rgb(211,5,3)" rx="2" ry="2" />
<text  x="209.60" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="613" width="50.3" height="15.0" fill="rgb(252,79,39)" rx="2" ry="2" />
<text  x="65.02" y="623.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="375.9" y="1877" width="0.2" height="15.0" fill="rgb(232,207,5)" rx="2" ry="2" />
<text  x="378.91" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (2 samples, 0.03%)</title><rect x="483.9" y="1941" width="0.4" height="15.0" fill="rgb(234,138,16)" rx="2" ry="2" />
<text  x="486.90" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="592.1" y="1941" width="0.2" height="15.0" fill="rgb(237,126,1)" rx="2" ry="2" />
<text  x="595.09" y="1951.5" ></text>
</g>
<g >
<title>__sys_sendmsg (339 samples, 5.68%)</title><rect x="239.2" y="1973" width="67.1" height="15.0" fill="rgb(221,186,54)" rx="2" ry="2" />
<text  x="242.24" y="1983.5" >__sys_s..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (182 samples, 3.05%)</title><rect x="697.5" y="1909" width="36.0" height="15.0" fill="rgb(207,9,12)" rx="2" ry="2" />
<text  x="700.51" y="1919.5" >fol..</text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="683.9" y="1941" width="0.2" height="15.0" fill="rgb(211,138,34)" rx="2" ry="2" />
<text  x="686.86" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="97.0" y="37" width="0.2" height="15.0" fill="rgb(246,157,30)" rx="2" ry="2" />
<text  x="100.03" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="590.5" y="1925" width="0.2" height="15.0" fill="rgb(244,126,10)" rx="2" ry="2" />
<text  x="593.51" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="345.8" y="1925" width="0.2" height="15.0" fill="rgb(206,81,10)" rx="2" ry="2" />
<text  x="348.84" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="891.5" y="2005" width="0.2" height="15.0" fill="rgb(243,117,30)" rx="2" ry="2" />
<text  x="894.54" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="867.8" y="2005" width="0.2" height="15.0" fill="rgb(249,12,25)" rx="2" ry="2" />
<text  x="870.80" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (59 samples, 0.99%)</title><rect x="270.5" y="1445" width="11.7" height="15.0" fill="rgb(220,136,3)" rx="2" ry="2" />
<text  x="273.49" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="395.7" y="2005" width="5.9" height="15.0" fill="rgb(213,38,42)" rx="2" ry="2" />
<text  x="398.69" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (10 samples, 0.17%)</title><rect x="921.8" y="1989" width="2.0" height="15.0" fill="rgb(217,16,45)" rx="2" ry="2" />
<text  x="924.80" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="500.7" y="1973" width="0.2" height="15.0" fill="rgb(242,86,5)" rx="2" ry="2" />
<text  x="503.71" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (138 samples, 2.31%)</title><rect x="952.9" y="1973" width="27.2" height="15.0" fill="rgb(231,214,1)" rx="2" ry="2" />
<text  x="955.85" y="1983.5" >f..</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="13.4" y="2053" width="0.2" height="15.0" fill="rgb(228,78,47)" rx="2" ry="2" />
<text  x="16.36" y="2063.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="186.8" y="1893" width="0.2" height="15.0" fill="rgb(226,9,20)" rx="2" ry="2" />
<text  x="189.82" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (9 samples, 0.15%)</title><rect x="371.6" y="2005" width="1.7" height="15.0" fill="rgb(215,25,10)" rx="2" ry="2" />
<text  x="374.56" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="240.4" y="1941" width="0.2" height="15.0" fill="rgb(235,197,20)" rx="2" ry="2" />
<text  x="243.42" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (5 samples, 0.08%)</title><rect x="909.7" y="2005" width="1.0" height="15.0" fill="rgb(210,196,11)" rx="2" ry="2" />
<text  x="912.74" y="2015.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (18 samples, 0.30%)</title><rect x="250.7" y="1861" width="3.6" height="15.0" fill="rgb(211,59,5)" rx="2" ry="2" />
<text  x="253.71" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="683.3" y="1925" width="0.4" height="15.0" fill="rgb(212,156,22)" rx="2" ry="2" />
<text  x="686.27" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="346.2" y="1973" width="0.2" height="15.0" fill="rgb(233,113,7)" rx="2" ry="2" />
<text  x="349.24" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="245.2" y="1813" width="0.2" height="15.0" fill="rgb(219,175,35)" rx="2" ry="2" />
<text  x="248.17" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="984.1" y="1957" width="0.2" height="15.0" fill="rgb(224,209,11)" rx="2" ry="2" />
<text  x="987.10" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="349.4" y="1941" width="0.2" height="15.0" fill="rgb(233,89,14)" rx="2" ry="2" />
<text  x="352.40" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (141 samples, 2.36%)</title><rect x="264.0" y="1749" width="27.8" height="15.0" fill="rgb(233,90,45)" rx="2" ry="2" />
<text  x="266.96" y="1759.5" >i..</text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="743.4" y="1941" width="0.2" height="15.0" fill="rgb(211,116,43)" rx="2" ry="2" />
<text  x="746.40" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (6 samples, 0.10%)</title><rect x="694.1" y="1893" width="1.2" height="15.0" fill="rgb(241,189,13)" rx="2" ry="2" />
<text  x="697.15" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="589.9" y="1941" width="0.4" height="15.0" fill="rgb(215,162,31)" rx="2" ry="2" />
<text  x="592.91" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (412 samples, 6.91%)</title><rect x="665.1" y="1989" width="81.5" height="15.0" fill="rgb(238,169,18)" rx="2" ry="2" />
<text  x="668.07" y="1999.5" >folly::fi..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="131.2" y="1861" width="0.2" height="15.0" fill="rgb(229,18,9)" rx="2" ry="2" />
<text  x="134.24" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="526.2" y="2021" width="0.2" height="15.0" fill="rgb(214,220,48)" rx="2" ry="2" />
<text  x="529.23" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="106.1" y="37" width="0.2" height="15.0" fill="rgb(223,101,29)" rx="2" ry="2" />
<text  x="109.12" y="47.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1333" width="50.5" height="15.0" fill="rgb(217,42,43)" rx="2" ry="2" />
<text  x="65.02" y="1343.5" >[unkn..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (10 samples, 0.17%)</title><rect x="368.8" y="1957" width="2.0" height="15.0" fill="rgb(227,50,39)" rx="2" ry="2" />
<text  x="371.79" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="195.9" y="2005" width="0.2" height="15.0" fill="rgb(252,63,40)" rx="2" ry="2" />
<text  x="198.92" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="189.4" y="2005" width="0.2" height="15.0" fill="rgb(236,178,7)" rx="2" ry="2" />
<text  x="192.39" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="206.4" y="1957" width="0.2" height="15.0" fill="rgb(224,201,33)" rx="2" ry="2" />
<text  x="209.40" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1957" width="50.5" height="15.0" fill="rgb(218,132,25)" rx="2" ry="2" />
<text  x="65.02" y="1967.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (9 samples, 0.15%)</title><rect x="630.1" y="1989" width="1.7" height="15.0" fill="rgb(237,6,47)" rx="2" ry="2" />
<text  x="633.06" y="1999.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="245.2" y="1669" width="0.2" height="15.0" fill="rgb(226,204,27)" rx="2" ry="2" />
<text  x="248.17" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="1174.0" y="2053" width="0.4" height="15.0" fill="rgb(250,162,22)" rx="2" ry="2" />
<text  x="1176.98" y="2063.5" ></text>
</g>
<g >
<title>skb_clone (7 samples, 0.12%)</title><rect x="291.8" y="1813" width="1.4" height="15.0" fill="rgb(233,223,21)" rx="2" ry="2" />
<text  x="294.85" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="876.3" y="1989" width="0.2" height="15.0" fill="rgb(220,73,30)" rx="2" ry="2" />
<text  x="879.31" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="595.5" y="1925" width="0.1" height="15.0" fill="rgb(233,170,23)" rx="2" ry="2" />
<text  x="598.45" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (2 samples, 0.03%)</title><rect x="688.6" y="1941" width="0.4" height="15.0" fill="rgb(249,174,33)" rx="2" ry="2" />
<text  x="691.61" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="206.2" y="1957" width="0.2" height="15.0" fill="rgb(240,7,29)" rx="2" ry="2" />
<text  x="209.21" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (1 samples, 0.02%)</title><rect x="891.5" y="2037" width="0.2" height="15.0" fill="rgb(241,63,27)" rx="2" ry="2" />
<text  x="894.54" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="737.1" y="1957" width="0.2" height="15.0" fill="rgb(252,93,0)" rx="2" ry="2" />
<text  x="740.07" y="1967.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="255.8" y="1877" width="0.2" height="15.0" fill="rgb(227,167,1)" rx="2" ry="2" />
<text  x="258.85" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="591.1" y="1957" width="0.2" height="15.0" fill="rgb(213,36,26)" rx="2" ry="2" />
<text  x="594.10" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (8 samples, 0.13%)</title><rect x="171.6" y="1957" width="1.6" height="15.0" fill="rgb(234,131,38)" rx="2" ry="2" />
<text  x="174.59" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="908.5" y="2005" width="0.2" height="15.0" fill="rgb(215,209,48)" rx="2" ry="2" />
<text  x="911.55" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1061" width="50.5" height="15.0" fill="rgb(250,16,30)" rx="2" ry="2" />
<text  x="65.02" y="1071.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="199.3" y="1909" width="0.4" height="15.0" fill="rgb(221,114,26)" rx="2" ry="2" />
<text  x="202.28" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1797" width="50.5" height="15.0" fill="rgb(212,182,47)" rx="2" ry="2" />
<text  x="65.02" y="1807.5" >[unkn..</text>
</g>
<g >
<title>intel_pmu_enable_all (15 samples, 0.25%)</title><rect x="13.6" y="1861" width="2.9" height="15.0" fill="rgb(222,38,1)" rx="2" ry="2" />
<text  x="16.56" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="693.8" y="1861" width="0.1" height="15.0" fill="rgb(214,29,14)" rx="2" ry="2" />
<text  x="696.75" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="91.1" y="37" width="0.4" height="15.0" fill="rgb(251,134,27)" rx="2" ry="2" />
<text  x="94.09" y="47.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (165 samples, 2.77%)</title><rect x="260.8" y="1829" width="32.6" height="15.0" fill="rgb(238,84,15)" rx="2" ry="2" />
<text  x="263.79" y="1839.5" >__..</text>
</g>
<g >
<title>std::function&lt;void  (5 samples, 0.08%)</title><rect x="402.2" y="2005" width="1.0" height="15.0" fill="rgb(206,95,15)" rx="2" ry="2" />
<text  x="405.21" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (14 samples, 0.23%)</title><rect x="256.4" y="1861" width="2.8" height="15.0" fill="rgb(249,36,13)" rx="2" ry="2" />
<text  x="259.44" y="1871.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="171.2" y="1957" width="0.4" height="15.0" fill="rgb(243,141,33)" rx="2" ry="2" />
<text  x="174.20" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="528.4" y="2037" width="0.4" height="15.0" fill="rgb(209,131,47)" rx="2" ry="2" />
<text  x="531.40" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1589" width="50.5" height="15.0" fill="rgb(252,147,52)" rx="2" ry="2" />
<text  x="65.02" y="1599.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="87.7" y="37" width="0.2" height="15.0" fill="rgb(250,164,26)" rx="2" ry="2" />
<text  x="90.73" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="491.6" y="1925" width="0.2" height="15.0" fill="rgb(250,79,34)" rx="2" ry="2" />
<text  x="494.61" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (110 samples, 1.84%)</title><rect x="264.4" y="1669" width="21.7" height="15.0" fill="rgb(237,211,30)" rx="2" ry="2" />
<text  x="267.35" y="1679.5" >n..</text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="908.4" y="2005" width="0.1" height="15.0" fill="rgb(253,143,40)" rx="2" ry="2" />
<text  x="911.35" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.1" y="1957" width="0.2" height="15.0" fill="rgb(243,36,52)" rx="2" ry="2" />
<text  x="865.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="566.6" y="1989" width="0.4" height="15.0" fill="rgb(252,60,32)" rx="2" ry="2" />
<text  x="569.57" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="131.2" y="1845" width="0.2" height="15.0" fill="rgb(238,56,32)" rx="2" ry="2" />
<text  x="134.24" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="25.0" y="1957" width="0.2" height="15.0" fill="rgb(219,127,2)" rx="2" ry="2" />
<text  x="28.03" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="195.9" y="2021" width="0.4" height="15.0" fill="rgb(231,154,32)" rx="2" ry="2" />
<text  x="198.92" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="590.7" y="1877" width="0.2" height="15.0" fill="rgb(247,132,18)" rx="2" ry="2" />
<text  x="593.70" y="1887.5" ></text>
</g>
<g >
<title>process_backlog (109 samples, 1.83%)</title><rect x="264.6" y="1653" width="21.5" height="15.0" fill="rgb(220,50,50)" rx="2" ry="2" />
<text  x="267.55" y="1663.5" >p..</text>
</g>
<g >
<title>sock_poll (20 samples, 0.34%)</title><rect x="311.6" y="1909" width="4.0" height="15.0" fill="rgb(249,123,0)" rx="2" ry="2" />
<text  x="314.63" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (540 samples, 9.05%)</title><rect x="907.6" y="2037" width="106.8" height="15.0" fill="rgb(221,45,30)" rx="2" ry="2" />
<text  x="910.56" y="2047.5" >folly::fibers..</text>
</g>
<g >
<title>std::function&lt;void  (22 samples, 0.37%)</title><rect x="741.4" y="1957" width="4.4" height="15.0" fill="rgb(248,14,21)" rx="2" ry="2" />
<text  x="744.42" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (56 samples, 0.94%)</title><rect x="896.5" y="2037" width="11.1" height="15.0" fill="rgb(212,209,4)" rx="2" ry="2" />
<text  x="899.48" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="604.2" y="1989" width="0.2" height="15.0" fill="rgb(249,115,53)" rx="2" ry="2" />
<text  x="607.15" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (13 samples, 0.22%)</title><rect x="972.0" y="1893" width="2.6" height="15.0" fill="rgb(210,202,27)" rx="2" ry="2" />
<text  x="975.04" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="128.7" y="1925" width="0.2" height="15.0" fill="rgb(227,65,39)" rx="2" ry="2" />
<text  x="131.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (29 samples, 0.49%)</title><rect x="500.3" y="1989" width="5.8" height="15.0" fill="rgb(227,58,36)" rx="2" ry="2" />
<text  x="503.32" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="978.4" y="1909" width="0.4" height="15.0" fill="rgb(239,95,31)" rx="2" ry="2" />
<text  x="981.37" y="1919.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="258.2" y="1781" width="0.2" height="15.0" fill="rgb(240,214,0)" rx="2" ry="2" />
<text  x="261.22" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (109 samples, 1.83%)</title><rect x="264.6" y="1573" width="21.5" height="15.0" fill="rgb(236,109,14)" rx="2" ry="2" />
<text  x="267.55" y="1583.5" >i..</text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="493.2" y="1925" width="1.2" height="15.0" fill="rgb(228,78,49)" rx="2" ry="2" />
<text  x="496.19" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="198.5" y="1925" width="0.4" height="15.0" fill="rgb(252,29,31)" rx="2" ry="2" />
<text  x="201.49" y="1935.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="256.2" y="1829" width="0.2" height="15.0" fill="rgb(230,28,27)" rx="2" ry="2" />
<text  x="259.25" y="1839.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.02%)</title><rect x="11.2" y="1973" width="0.2" height="15.0" fill="rgb(240,204,22)" rx="2" ry="2" />
<text  x="14.19" y="1983.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1130.1" y="1957" width="0.2" height="15.0" fill="rgb(209,218,1)" rx="2" ry="2" />
<text  x="1133.07" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="245.2" y="1765" width="0.2" height="15.0" fill="rgb(209,130,39)" rx="2" ry="2" />
<text  x="248.17" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="186.2" y="1893" width="0.2" height="15.0" fill="rgb(239,223,5)" rx="2" ry="2" />
<text  x="189.23" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="210.2" y="1909" width="0.6" height="15.0" fill="rgb(254,222,16)" rx="2" ry="2" />
<text  x="213.16" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="403.2" y="2021" width="0.6" height="15.0" fill="rgb(217,138,50)" rx="2" ry="2" />
<text  x="406.20" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="597.6" y="2005" width="0.4" height="15.0" fill="rgb(249,169,13)" rx="2" ry="2" />
<text  x="600.63" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.10%)</title><rect x="337.3" y="1957" width="1.2" height="15.0" fill="rgb(252,7,23)" rx="2" ry="2" />
<text  x="340.34" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (3 samples, 0.05%)</title><rect x="878.1" y="2005" width="0.6" height="15.0" fill="rgb(250,95,45)" rx="2" ry="2" />
<text  x="881.09" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="245.2" y="1637" width="0.2" height="15.0" fill="rgb(245,46,9)" rx="2" ry="2" />
<text  x="248.17" y="1647.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (3 samples, 0.05%)</title><rect x="353.8" y="1925" width="0.5" height="15.0" fill="rgb(206,223,3)" rx="2" ry="2" />
<text  x="356.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="194.1" y="2021" width="0.4" height="15.0" fill="rgb(217,90,31)" rx="2" ry="2" />
<text  x="197.14" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(253,211,20)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="862.1" y="1877" width="0.2" height="15.0" fill="rgb(220,152,10)" rx="2" ry="2" />
<text  x="865.07" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="112.1" y="133" width="0.2" height="15.0" fill="rgb(221,57,20)" rx="2" ry="2" />
<text  x="115.06" y="143.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="200.7" y="2021" width="0.2" height="15.0" fill="rgb(206,132,9)" rx="2" ry="2" />
<text  x="203.67" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="371.2" y="1973" width="0.2" height="15.0" fill="rgb(249,121,54)" rx="2" ry="2" />
<text  x="374.16" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="208.0" y="1957" width="0.4" height="15.0" fill="rgb(248,172,51)" rx="2" ry="2" />
<text  x="210.99" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="398.5" y="1909" width="0.2" height="15.0" fill="rgb(208,118,18)" rx="2" ry="2" />
<text  x="401.45" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="309" width="50.3" height="15.0" fill="rgb(222,228,33)" rx="2" ry="2" />
<text  x="65.02" y="319.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (158 samples, 2.65%)</title><rect x="142.5" y="1973" width="31.3" height="15.0" fill="rgb(239,99,49)" rx="2" ry="2" />
<text  x="145.52" y="1983.5" >fo..</text>
</g>
<g >
<title>ip_finish_output (142 samples, 2.38%)</title><rect x="263.8" y="1765" width="28.0" height="15.0" fill="rgb(221,225,16)" rx="2" ry="2" />
<text  x="266.76" y="1775.5" >i..</text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="590.9" y="1957" width="0.2" height="15.0" fill="rgb(241,158,23)" rx="2" ry="2" />
<text  x="593.90" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="185.8" y="1941" width="0.2" height="15.0" fill="rgb(205,1,35)" rx="2" ry="2" />
<text  x="188.83" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="477.2" y="1973" width="0.2" height="15.0" fill="rgb(215,193,36)" rx="2" ry="2" />
<text  x="480.17" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="440.4" y="1989" width="0.2" height="15.0" fill="rgb(217,89,26)" rx="2" ry="2" />
<text  x="443.39" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (5 samples, 0.08%)</title><rect x="728.0" y="1861" width="1.0" height="15.0" fill="rgb(247,218,30)" rx="2" ry="2" />
<text  x="730.97" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="86.1" y="37" width="0.2" height="15.0" fill="rgb(253,211,52)" rx="2" ry="2" />
<text  x="89.15" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="391.5" y="2005" width="0.2" height="15.0" fill="rgb(214,122,25)" rx="2" ry="2" />
<text  x="394.53" y="2015.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.13%)</title><rect x="1087.5" y="1925" width="1.6" height="15.0" fill="rgb(212,87,21)" rx="2" ry="2" />
<text  x="1090.55" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="593.7" y="1989" width="0.2" height="15.0" fill="rgb(212,206,41)" rx="2" ry="2" />
<text  x="596.67" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (110 samples, 1.84%)</title><rect x="264.4" y="1717" width="21.7" height="15.0" fill="rgb(206,32,39)" rx="2" ry="2" />
<text  x="267.35" y="1727.5" >d..</text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="592.9" y="1893" width="0.2" height="15.0" fill="rgb(252,45,34)" rx="2" ry="2" />
<text  x="595.88" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="597.2" y="1989" width="0.4" height="15.0" fill="rgb(214,9,1)" rx="2" ry="2" />
<text  x="600.23" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="21.5" y="1957" width="0.2" height="15.0" fill="rgb(236,3,35)" rx="2" ry="2" />
<text  x="24.47" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="495.0" y="1829" width="0.2" height="15.0" fill="rgb(238,173,43)" rx="2" ry="2" />
<text  x="497.97" y="1839.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1146.3" y="1973" width="0.2" height="15.0" fill="rgb(239,145,0)" rx="2" ry="2" />
<text  x="1149.29" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="737.3" y="1973" width="1.2" height="15.0" fill="rgb(244,138,17)" rx="2" ry="2" />
<text  x="740.26" y="1983.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="308.3" y="2037" width="0.4" height="15.0" fill="rgb(227,216,48)" rx="2" ry="2" />
<text  x="311.26" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (3 samples, 0.05%)</title><rect x="185.2" y="2005" width="0.6" height="15.0" fill="rgb(220,72,50)" rx="2" ry="2" />
<text  x="188.24" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (8 samples, 0.13%)</title><rect x="926.5" y="1973" width="1.6" height="15.0" fill="rgb(218,173,29)" rx="2" ry="2" />
<text  x="929.55" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="522.3" y="2005" width="0.2" height="15.0" fill="rgb(213,143,1)" rx="2" ry="2" />
<text  x="525.27" y="2015.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.25%)</title><rect x="13.6" y="1909" width="2.9" height="15.0" fill="rgb(242,9,52)" rx="2" ry="2" />
<text  x="16.56" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="881.8" y="2005" width="0.2" height="15.0" fill="rgb(241,92,9)" rx="2" ry="2" />
<text  x="884.85" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="908.0" y="2005" width="0.2" height="15.0" fill="rgb(216,66,3)" rx="2" ry="2" />
<text  x="910.96" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="384.2" y="2021" width="7.9" height="15.0" fill="rgb(232,196,52)" rx="2" ry="2" />
<text  x="387.21" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="375.9" y="1909" width="0.2" height="15.0" fill="rgb(221,110,2)" rx="2" ry="2" />
<text  x="378.91" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="208.8" y="1941" width="0.2" height="15.0" fill="rgb(212,94,51)" rx="2" ry="2" />
<text  x="211.78" y="1951.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="245.0" y="1893" width="0.8" height="15.0" fill="rgb(212,197,50)" rx="2" ry="2" />
<text  x="247.97" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (16 samples, 0.27%)</title><rect x="878.7" y="2005" width="3.1" height="15.0" fill="rgb(218,107,26)" rx="2" ry="2" />
<text  x="881.68" y="2015.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1087.2" y="1957" width="0.3" height="15.0" fill="rgb(246,34,50)" rx="2" ry="2" />
<text  x="1090.15" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (23 samples, 0.39%)</title><rect x="228.6" y="2021" width="4.5" height="15.0" fill="rgb(251,188,15)" rx="2" ry="2" />
<text  x="231.56" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (4 samples, 0.07%)</title><rect x="19.7" y="1989" width="0.8" height="15.0" fill="rgb(239,166,26)" rx="2" ry="2" />
<text  x="22.69" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (4 samples, 0.07%)</title><rect x="211.3" y="2021" width="0.8" height="15.0" fill="rgb(216,115,20)" rx="2" ry="2" />
<text  x="214.35" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (16 samples, 0.27%)</title><rect x="818.4" y="1989" width="3.1" height="15.0" fill="rgb(223,172,46)" rx="2" ry="2" />
<text  x="821.36" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (27 samples, 0.45%)</title><rect x="376.9" y="1893" width="5.3" height="15.0" fill="rgb(225,7,1)" rx="2" ry="2" />
<text  x="379.90" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (10 samples, 0.17%)</title><rect x="1144.9" y="2021" width="2.0" height="15.0" fill="rgb(230,197,36)" rx="2" ry="2" />
<text  x="1147.90" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="184.3" y="1957" width="0.1" height="15.0" fill="rgb(245,5,36)" rx="2" ry="2" />
<text  x="187.25" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.18%)</title><rect x="982.1" y="1973" width="2.2" height="15.0" fill="rgb(241,95,8)" rx="2" ry="2" />
<text  x="985.13" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (5 samples, 0.08%)</title><rect x="482.7" y="1941" width="1.0" height="15.0" fill="rgb(224,219,26)" rx="2" ry="2" />
<text  x="485.71" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (10 samples, 0.17%)</title><rect x="1144.9" y="2037" width="2.0" height="15.0" fill="rgb(245,148,45)" rx="2" ry="2" />
<text  x="1147.90" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="205.6" y="1957" width="0.6" height="15.0" fill="rgb(235,169,36)" rx="2" ry="2" />
<text  x="208.61" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (9 samples, 0.15%)</title><rect x="182.7" y="1973" width="1.7" height="15.0" fill="rgb(214,219,38)" rx="2" ry="2" />
<text  x="185.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1669" width="50.5" height="15.0" fill="rgb(229,47,8)" rx="2" ry="2" />
<text  x="65.02" y="1679.5" >[unkn..</text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="354.2" y="1909" width="0.1" height="15.0" fill="rgb(213,18,2)" rx="2" ry="2" />
<text  x="357.15" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (12 samples, 0.20%)</title><rect x="88.7" y="37" width="2.4" height="15.0" fill="rgb(208,21,3)" rx="2" ry="2" />
<text  x="91.72" y="47.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="162.1" y="1941" width="0.2" height="15.0" fill="rgb(210,139,50)" rx="2" ry="2" />
<text  x="165.10" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="605.1" y="1973" width="1.0" height="15.0" fill="rgb(235,40,14)" rx="2" ry="2" />
<text  x="608.14" y="1983.5" ></text>
</g>
<g >
<title>jump_fcontext (139 samples, 2.33%)</title><rect x="986.9" y="2005" width="27.5" height="15.0" fill="rgb(239,62,9)" rx="2" ry="2" />
<text  x="989.87" y="2015.5" >j..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="590.5" y="1909" width="0.2" height="15.0" fill="rgb(217,90,47)" rx="2" ry="2" />
<text  x="593.51" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (6 samples, 0.10%)</title><rect x="132.6" y="1973" width="1.2" height="15.0" fill="rgb(243,153,47)" rx="2" ry="2" />
<text  x="135.63" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (5 samples, 0.08%)</title><rect x="1082.0" y="1909" width="1.0" height="15.0" fill="rgb(231,157,5)" rx="2" ry="2" />
<text  x="1085.01" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="629" width="50.3" height="15.0" fill="rgb(246,49,49)" rx="2" ry="2" />
<text  x="65.02" y="639.5" >[unkn..</text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="745.8" y="1957" width="0.2" height="15.0" fill="rgb(219,151,4)" rx="2" ry="2" />
<text  x="748.77" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (9 samples, 0.15%)</title><rect x="489.6" y="1909" width="1.8" height="15.0" fill="rgb(238,193,21)" rx="2" ry="2" />
<text  x="492.63" y="1919.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.15%)</title><rect x="1089.7" y="2037" width="1.8" height="15.0" fill="rgb(249,25,31)" rx="2" ry="2" />
<text  x="1092.72" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (5 samples, 0.08%)</title><rect x="682.3" y="1925" width="1.0" height="15.0" fill="rgb(205,88,32)" rx="2" ry="2" />
<text  x="685.28" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="637.6" y="2005" width="0.4" height="15.0" fill="rgb(243,134,38)" rx="2" ry="2" />
<text  x="640.58" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="932.1" y="1957" width="0.6" height="15.0" fill="rgb(242,101,54)" rx="2" ry="2" />
<text  x="935.09" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (89 samples, 1.49%)</title><rect x="668.8" y="1957" width="17.6" height="15.0" fill="rgb(248,147,46)" rx="2" ry="2" />
<text  x="671.83" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (128 samples, 2.15%)</title><rect x="953.4" y="1925" width="25.4" height="15.0" fill="rgb(250,95,23)" rx="2" ry="2" />
<text  x="956.45" y="1935.5" >f..</text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="595.6" y="1925" width="0.4" height="15.0" fill="rgb(250,80,10)" rx="2" ry="2" />
<text  x="598.65" y="1935.5" ></text>
</g>
<g >
<title>malloc (11 samples, 0.18%)</title><rect x="1022.9" y="2037" width="2.1" height="15.0" fill="rgb(229,32,39)" rx="2" ry="2" />
<text  x="1025.87" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="186.8" y="1877" width="0.2" height="15.0" fill="rgb(251,174,53)" rx="2" ry="2" />
<text  x="189.82" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (261 samples, 4.37%)</title><rect x="319.1" y="2005" width="51.7" height="15.0" fill="rgb(247,171,24)" rx="2" ry="2" />
<text  x="322.14" y="2015.5" >folly..</text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="207.4" y="1941" width="0.4" height="15.0" fill="rgb(221,215,17)" rx="2" ry="2" />
<text  x="210.39" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="22.7" y="1925" width="0.6" height="15.0" fill="rgb(215,39,35)" rx="2" ry="2" />
<text  x="25.66" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (65 samples, 1.09%)</title><rect x="343.7" y="1989" width="12.8" height="15.0" fill="rgb(224,54,28)" rx="2" ry="2" />
<text  x="346.67" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="773" width="50.3" height="15.0" fill="rgb(236,101,6)" rx="2" ry="2" />
<text  x="65.02" y="783.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (5 samples, 0.08%)</title><rect x="593.9" y="1989" width="1.0" height="15.0" fill="rgb(211,65,54)" rx="2" ry="2" />
<text  x="596.87" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="680.7" y="1909" width="1.0" height="15.0" fill="rgb(206,9,38)" rx="2" ry="2" />
<text  x="683.70" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="643.7" y="2021" width="0.4" height="15.0" fill="rgb(238,131,30)" rx="2" ry="2" />
<text  x="646.71" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="821" width="50.3" height="15.0" fill="rgb(241,202,26)" rx="2" ry="2" />
<text  x="65.02" y="831.5" >[unkn..</text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.13%)</title><rect x="11.8" y="1861" width="1.6" height="15.0" fill="rgb(241,31,12)" rx="2" ry="2" />
<text  x="14.78" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (5 samples, 0.08%)</title><rect x="209.8" y="1941" width="1.0" height="15.0" fill="rgb(226,138,6)" rx="2" ry="2" />
<text  x="212.77" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="606.1" y="1973" width="0.8" height="15.0" fill="rgb(211,134,35)" rx="2" ry="2" />
<text  x="609.13" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="830.2" y="2005" width="4.0" height="15.0" fill="rgb(245,21,25)" rx="2" ry="2" />
<text  x="833.22" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1829" width="50.5" height="15.0" fill="rgb(209,135,32)" rx="2" ry="2" />
<text  x="65.02" y="1839.5" >[unkn..</text>
</g>
<g >
<title>[[vdso]] (7 samples, 0.12%)</title><rect x="231.7" y="2005" width="1.4" height="15.0" fill="rgb(210,120,37)" rx="2" ry="2" />
<text  x="234.72" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="596.2" y="1989" width="1.0" height="15.0" fill="rgb(209,113,39)" rx="2" ry="2" />
<text  x="599.24" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (3 samples, 0.05%)</title><rect x="369.6" y="1941" width="0.6" height="15.0" fill="rgb(252,163,28)" rx="2" ry="2" />
<text  x="372.58" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="293.0" y="1669" width="0.2" height="15.0" fill="rgb(238,117,17)" rx="2" ry="2" />
<text  x="296.03" y="1679.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="10.2" y="1925" width="1.0" height="15.0" fill="rgb(230,62,47)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (16 samples, 0.27%)</title><rect x="99.8" y="37" width="3.2" height="15.0" fill="rgb(242,95,1)" rx="2" ry="2" />
<text  x="102.80" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="240.4" y="1909" width="0.2" height="15.0" fill="rgb(250,30,37)" rx="2" ry="2" />
<text  x="243.42" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (11 samples, 0.18%)</title><rect x="681.7" y="1941" width="2.2" height="15.0" fill="rgb(250,53,53)" rx="2" ry="2" />
<text  x="684.69" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (13 samples, 0.22%)</title><rect x="563.8" y="1989" width="2.6" height="15.0" fill="rgb(251,20,19)" rx="2" ry="2" />
<text  x="566.80" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (16 samples, 0.27%)</title><rect x="378.7" y="1861" width="3.1" height="15.0" fill="rgb(248,186,9)" rx="2" ry="2" />
<text  x="381.68" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="563.6" y="1989" width="0.2" height="15.0" fill="rgb(231,54,50)" rx="2" ry="2" />
<text  x="566.61" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="1179.7" y="2021" width="0.6" height="15.0" fill="rgb(243,213,36)" rx="2" ry="2" />
<text  x="1182.72" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (2 samples, 0.03%)</title><rect x="607.9" y="2005" width="0.4" height="15.0" fill="rgb(208,116,6)" rx="2" ry="2" />
<text  x="610.91" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="293.0" y="1685" width="0.2" height="15.0" fill="rgb(219,228,2)" rx="2" ry="2" />
<text  x="296.03" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="245.4" y="1861" width="0.4" height="15.0" fill="rgb(252,184,31)" rx="2" ry="2" />
<text  x="248.37" y="1871.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="293.6" y="1813" width="0.2" height="15.0" fill="rgb(213,70,8)" rx="2" ry="2" />
<text  x="296.63" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1141" width="50.5" height="15.0" fill="rgb(237,93,34)" rx="2" ry="2" />
<text  x="65.02" y="1151.5" >[unkn..</text>
</g>
<g >
<title>dev_hard_start_xmit (8 samples, 0.13%)</title><rect x="290.1" y="1685" width="1.5" height="15.0" fill="rgb(220,43,16)" rx="2" ry="2" />
<text  x="293.07" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (46 samples, 0.77%)</title><rect x="1130.5" y="1989" width="9.1" height="15.0" fill="rgb(228,172,28)" rx="2" ry="2" />
<text  x="1133.47" y="1999.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="99.2" y="37" width="0.2" height="15.0" fill="rgb(241,4,26)" rx="2" ry="2" />
<text  x="102.20" y="47.5" ></text>
</g>
<g >
<title>__release_sock (2 samples, 0.03%)</title><rect x="1081.0" y="1909" width="0.4" height="15.0" fill="rgb(248,69,53)" rx="2" ry="2" />
<text  x="1084.02" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="822.5" y="1989" width="0.6" height="15.0" fill="rgb(215,214,33)" rx="2" ry="2" />
<text  x="825.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1717" width="50.5" height="15.0" fill="rgb(222,211,35)" rx="2" ry="2" />
<text  x="65.02" y="1727.5" >[unkn..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="205.0" y="1973" width="0.4" height="15.0" fill="rgb(249,127,26)" rx="2" ry="2" />
<text  x="208.02" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (14 samples, 0.23%)</title><rect x="656.0" y="2037" width="2.7" height="15.0" fill="rgb(224,210,48)" rx="2" ry="2" />
<text  x="658.97" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="608.9" y="1973" width="0.6" height="15.0" fill="rgb(246,64,18)" rx="2" ry="2" />
<text  x="611.90" y="1983.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (64 samples, 1.07%)</title><rect x="48.0" y="2037" width="12.6" height="15.0" fill="rgb(209,181,46)" rx="2" ry="2" />
<text  x="50.98" y="2047.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (3 samples, 0.05%)</title><rect x="259.2" y="1861" width="0.6" height="15.0" fill="rgb(230,197,16)" rx="2" ry="2" />
<text  x="262.21" y="1871.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="746.0" y="1957" width="0.4" height="15.0" fill="rgb(208,179,38)" rx="2" ry="2" />
<text  x="748.97" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (4 samples, 0.07%)</title><rect x="166.6" y="1941" width="0.8" height="15.0" fill="rgb(207,171,45)" rx="2" ry="2" />
<text  x="169.65" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="894.9" y="2005" width="1.4" height="15.0" fill="rgb(245,84,36)" rx="2" ry="2" />
<text  x="897.90" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="186.0" y="1925" width="0.4" height="15.0" fill="rgb(226,88,40)" rx="2" ry="2" />
<text  x="189.03" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (6 samples, 0.10%)</title><rect x="60.6" y="2021" width="1.2" height="15.0" fill="rgb(227,184,37)" rx="2" ry="2" />
<text  x="63.63" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1541" width="50.5" height="15.0" fill="rgb(239,39,53)" rx="2" ry="2" />
<text  x="65.02" y="1551.5" >[unkn..</text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1042.5" y="1941" width="0.1" height="15.0" fill="rgb(218,63,42)" rx="2" ry="2" />
<text  x="1045.45" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (16 samples, 0.27%)</title><rect x="1033.0" y="2037" width="3.1" height="15.0" fill="rgb(240,178,7)" rx="2" ry="2" />
<text  x="1035.96" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="611.7" y="1957" width="2.3" height="15.0" fill="rgb(226,112,49)" rx="2" ry="2" />
<text  x="614.67" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="213.5" y="2021" width="0.2" height="15.0" fill="rgb(251,103,7)" rx="2" ry="2" />
<text  x="216.52" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (3 samples, 0.05%)</title><rect x="527.2" y="2037" width="0.6" height="15.0" fill="rgb(205,133,5)" rx="2" ry="2" />
<text  x="530.21" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="341.7" y="1909" width="0.4" height="15.0" fill="rgb(253,219,46)" rx="2" ry="2" />
<text  x="344.69" y="1919.5" ></text>
</g>
<g >
<title>sys_futex (10 samples, 0.17%)</title><rect x="11.4" y="2005" width="2.0" height="15.0" fill="rgb(230,52,3)" rx="2" ry="2" />
<text  x="14.38" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="591.5" y="1925" width="0.4" height="15.0" fill="rgb(240,209,9)" rx="2" ry="2" />
<text  x="594.50" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (51 samples, 0.85%)</title><rect x="582.6" y="2005" width="10.1" height="15.0" fill="rgb(215,196,48)" rx="2" ry="2" />
<text  x="585.59" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (3 samples, 0.05%)</title><rect x="167.8" y="1941" width="0.6" height="15.0" fill="rgb(231,188,44)" rx="2" ry="2" />
<text  x="170.83" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="533" width="50.3" height="15.0" fill="rgb(251,49,5)" rx="2" ry="2" />
<text  x="65.02" y="543.5" >[unkn..</text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1086.2" y="1909" width="0.4" height="15.0" fill="rgb(238,212,4)" rx="2" ry="2" />
<text  x="1089.16" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="25.2" y="1941" width="0.2" height="15.0" fill="rgb(237,115,44)" rx="2" ry="2" />
<text  x="28.23" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="395.9" y="1973" width="4.7" height="15.0" fill="rgb(205,196,9)" rx="2" ry="2" />
<text  x="398.88" y="1983.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (1 samples, 0.02%)</title><rect x="260.2" y="1861" width="0.2" height="15.0" fill="rgb(223,17,45)" rx="2" ry="2" />
<text  x="263.20" y="1871.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="103.4" y="53" width="0.4" height="15.0" fill="rgb(236,118,14)" rx="2" ry="2" />
<text  x="106.36" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="440.6" y="2005" width="0.6" height="15.0" fill="rgb(225,170,8)" rx="2" ry="2" />
<text  x="443.58" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="693.8" y="1829" width="0.1" height="15.0" fill="rgb(206,98,36)" rx="2" ry="2" />
<text  x="696.75" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="173.8" y="1973" width="0.2" height="15.0" fill="rgb(231,210,49)" rx="2" ry="2" />
<text  x="176.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (276 samples, 4.63%)</title><rect x="246.2" y="1893" width="54.5" height="15.0" fill="rgb(239,49,51)" rx="2" ry="2" />
<text  x="249.16" y="1903.5" >tcp_s..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="187.0" y="1909" width="0.2" height="15.0" fill="rgb(206,12,9)" rx="2" ry="2" />
<text  x="190.02" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="695.3" y="1893" width="0.2" height="15.0" fill="rgb(213,34,48)" rx="2" ry="2" />
<text  x="698.33" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="606.9" y="2037" width="0.2" height="15.0" fill="rgb(209,91,9)" rx="2" ry="2" />
<text  x="609.92" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="581.8" y="1989" width="0.2" height="15.0" fill="rgb(220,30,12)" rx="2" ry="2" />
<text  x="584.80" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (6 samples, 0.10%)</title><rect x="105.3" y="69" width="1.2" height="15.0" fill="rgb(248,187,49)" rx="2" ry="2" />
<text  x="108.33" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(208,137,49)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="178.5" y="1973" width="1.0" height="15.0" fill="rgb(232,36,25)" rx="2" ry="2" />
<text  x="181.51" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="376.5" y="1893" width="0.4" height="15.0" fill="rgb(247,163,18)" rx="2" ry="2" />
<text  x="379.50" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="199.9" y="1989" width="0.2" height="15.0" fill="rgb(249,22,54)" rx="2" ry="2" />
<text  x="202.88" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(216,18,32)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (160 samples, 2.68%)</title><rect x="1049.4" y="1909" width="31.6" height="15.0" fill="rgb(234,152,49)" rx="2" ry="2" />
<text  x="1052.37" y="1919.5" >_r..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="112.1" y="69" width="0.2" height="15.0" fill="rgb(210,34,19)" rx="2" ry="2" />
<text  x="115.06" y="79.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="181.1" y="1957" width="0.2" height="15.0" fill="rgb(215,215,2)" rx="2" ry="2" />
<text  x="184.09" y="1967.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="264.6" y="1509" width="0.2" height="15.0" fill="rgb(244,104,33)" rx="2" ry="2" />
<text  x="267.55" y="1519.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="61.8" y="1989" width="0.2" height="15.0" fill="rgb(221,2,22)" rx="2" ry="2" />
<text  x="64.82" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (7 samples, 0.12%)</title><rect x="180.3" y="1989" width="1.4" height="15.0" fill="rgb(244,178,39)" rx="2" ry="2" />
<text  x="183.30" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.23%)</title><rect x="106.5" y="53" width="2.8" height="15.0" fill="rgb(221,83,45)" rx="2" ry="2" />
<text  x="109.52" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="189.4" y="1941" width="0.2" height="15.0" fill="rgb(226,145,6)" rx="2" ry="2" />
<text  x="192.39" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="822.7" y="1973" width="0.4" height="15.0" fill="rgb(230,24,2)" rx="2" ry="2" />
<text  x="825.71" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="498.7" y="1973" width="1.6" height="15.0" fill="rgb(224,165,13)" rx="2" ry="2" />
<text  x="501.73" y="1983.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="293.8" y="1813" width="0.2" height="15.0" fill="rgb(215,202,14)" rx="2" ry="2" />
<text  x="296.83" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="185.6" y="1957" width="0.2" height="15.0" fill="rgb(247,134,12)" rx="2" ry="2" />
<text  x="188.64" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="1180.3" y="2021" width="1.6" height="15.0" fill="rgb(227,81,26)" rx="2" ry="2" />
<text  x="1183.31" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="657.6" y="2005" width="1.1" height="15.0" fill="rgb(252,62,4)" rx="2" ry="2" />
<text  x="660.56" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (9 samples, 0.15%)</title><rect x="347.8" y="1957" width="1.8" height="15.0" fill="rgb(235,136,46)" rx="2" ry="2" />
<text  x="350.82" y="1967.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="263.4" y="1765" width="0.4" height="15.0" fill="rgb(251,99,50)" rx="2" ry="2" />
<text  x="266.37" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="111.9" y="69" width="0.2" height="15.0" fill="rgb(249,219,17)" rx="2" ry="2" />
<text  x="114.86" y="79.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (20 samples, 0.34%)</title><rect x="948.1" y="1989" width="4.0" height="15.0" fill="rgb(220,77,40)" rx="2" ry="2" />
<text  x="951.11" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (3 samples, 0.05%)</title><rect x="1036.5" y="2037" width="0.6" height="15.0" fill="rgb(245,81,25)" rx="2" ry="2" />
<text  x="1039.52" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="111.7" y="53" width="0.2" height="15.0" fill="rgb(241,181,0)" rx="2" ry="2" />
<text  x="114.66" y="63.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (16 samples, 0.27%)</title><rect x="948.9" y="1941" width="3.2" height="15.0" fill="rgb(228,161,23)" rx="2" ry="2" />
<text  x="951.90" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="598.6" y="1989" width="0.8" height="15.0" fill="rgb(215,62,30)" rx="2" ry="2" />
<text  x="601.62" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1041.1" y="1973" width="0.2" height="15.0" fill="rgb(226,162,46)" rx="2" ry="2" />
<text  x="1044.07" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="1140.4" y="2005" width="0.9" height="15.0" fill="rgb(241,10,42)" rx="2" ry="2" />
<text  x="1143.36" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="867.8" y="2021" width="14.2" height="15.0" fill="rgb(212,202,53)" rx="2" ry="2" />
<text  x="870.80" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (2 samples, 0.03%)</title><rect x="927.7" y="1957" width="0.4" height="15.0" fill="rgb(214,12,4)" rx="2" ry="2" />
<text  x="930.73" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1445" width="50.5" height="15.0" fill="rgb(249,20,9)" rx="2" ry="2" />
<text  x="65.02" y="1455.5" >[unkn..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1041.1" y="2005" width="0.2" height="15.0" fill="rgb(236,11,18)" rx="2" ry="2" />
<text  x="1044.07" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="952.9" y="1925" width="0.5" height="15.0" fill="rgb(251,11,10)" rx="2" ry="2" />
<text  x="955.85" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="591.9" y="1909" width="0.2" height="15.0" fill="rgb(206,86,43)" rx="2" ry="2" />
<text  x="594.89" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::post (1 samples, 0.02%)</title><rect x="1116.6" y="2021" width="0.2" height="15.0" fill="rgb(226,97,54)" rx="2" ry="2" />
<text  x="1119.62" y="2031.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (1 samples, 0.02%)</title><rect x="354.3" y="1973" width="0.2" height="15.0" fill="rgb(241,159,6)" rx="2" ry="2" />
<text  x="357.35" y="1983.5" ></text>
</g>
<g >
<title>do_futex (15 samples, 0.25%)</title><rect x="13.6" y="1989" width="2.9" height="15.0" fill="rgb(220,0,17)" rx="2" ry="2" />
<text  x="16.56" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (3 samples, 0.05%)</title><rect x="645.5" y="2005" width="0.6" height="15.0" fill="rgb(206,49,31)" rx="2" ry="2" />
<text  x="648.49" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="357.5" y="1973" width="0.2" height="15.0" fill="rgb(207,185,27)" rx="2" ry="2" />
<text  x="360.51" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (111 samples, 1.86%)</title><rect x="264.2" y="1733" width="21.9" height="15.0" fill="rgb(213,113,26)" rx="2" ry="2" />
<text  x="267.16" y="1743.5" >_..</text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="62.0" y="165" width="50.1" height="15.0" fill="rgb(210,178,41)" rx="2" ry="2" />
<text  x="65.02" y="175.5" >[unkn..</text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="245.2" y="1413" width="0.2" height="15.0" fill="rgb(253,12,47)" rx="2" ry="2" />
<text  x="248.17" y="1423.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="568.4" y="1973" width="0.2" height="15.0" fill="rgb(238,66,3)" rx="2" ry="2" />
<text  x="571.35" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="525.8" y="2037" width="0.6" height="15.0" fill="rgb(228,135,1)" rx="2" ry="2" />
<text  x="528.83" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (211 samples, 3.54%)</title><rect x="62.0" y="69" width="41.8" height="15.0" fill="rgb(237,162,30)" rx="2" ry="2" />
<text  x="65.02" y="79.5" >[un..</text>
</g>
<g >
<title>free_pages.part.91 (1 samples, 0.02%)</title><rect x="11.6" y="1845" width="0.2" height="15.0" fill="rgb(240,164,10)" rx="2" ry="2" />
<text  x="14.58" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (291 samples, 4.88%)</title><rect x="316.6" y="2037" width="57.5" height="15.0" fill="rgb(241,102,10)" rx="2" ry="2" />
<text  x="319.57" y="2047.5" >facebo..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="293" width="50.3" height="15.0" fill="rgb(253,224,54)" rx="2" ry="2" />
<text  x="65.02" y="303.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="418.6" y="2005" width="0.2" height="15.0" fill="rgb(236,129,1)" rx="2" ry="2" />
<text  x="421.63" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="131.2" y="1877" width="0.2" height="15.0" fill="rgb(238,137,14)" rx="2" ry="2" />
<text  x="134.24" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (2 samples, 0.03%)</title><rect x="352.8" y="1957" width="0.4" height="15.0" fill="rgb(224,150,19)" rx="2" ry="2" />
<text  x="355.77" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="928.1" y="1973" width="0.2" height="15.0" fill="rgb(242,207,29)" rx="2" ry="2" />
<text  x="931.13" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (17 samples, 0.28%)</title><rect x="587.5" y="1957" width="3.4" height="15.0" fill="rgb(252,227,4)" rx="2" ry="2" />
<text  x="590.54" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="308.9" y="2037" width="0.4" height="15.0" fill="rgb(218,96,37)" rx="2" ry="2" />
<text  x="311.86" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="468.3" y="1989" width="0.2" height="15.0" fill="rgb(208,187,50)" rx="2" ry="2" />
<text  x="471.27" y="1999.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (2 samples, 0.03%)</title><rect x="351.8" y="1925" width="0.4" height="15.0" fill="rgb(241,130,13)" rx="2" ry="2" />
<text  x="354.78" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="738.5" y="1957" width="0.1" height="15.0" fill="rgb(224,48,5)" rx="2" ry="2" />
<text  x="741.45" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="868.4" y="1861" width="0.2" height="15.0" fill="rgb(223,176,26)" rx="2" ry="2" />
<text  x="871.40" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="986.3" y="1989" width="0.4" height="15.0" fill="rgb(231,136,0)" rx="2" ry="2" />
<text  x="989.28" y="1999.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="581.2" y="1989" width="0.2" height="15.0" fill="rgb(241,37,12)" rx="2" ry="2" />
<text  x="584.21" y="1999.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (13 samples, 0.22%)</title><rect x="949.5" y="1925" width="2.6" height="15.0" fill="rgb(245,95,38)" rx="2" ry="2" />
<text  x="952.49" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (22 samples, 0.37%)</title><rect x="961.2" y="1909" width="4.3" height="15.0" fill="rgb(209,101,8)" rx="2" ry="2" />
<text  x="964.16" y="1919.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (242 samples, 4.06%)</title><rect x="1041.3" y="1989" width="47.8" height="15.0" fill="rgb(218,49,12)" rx="2" ry="2" />
<text  x="1044.26" y="1999.5" >SYSC..</text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="541.1" y="1973" width="0.2" height="15.0" fill="rgb(243,169,18)" rx="2" ry="2" />
<text  x="544.06" y="1983.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="296.6" y="1813" width="0.2" height="15.0" fill="rgb(245,137,47)" rx="2" ry="2" />
<text  x="299.59" y="1823.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="206.8" y="1861" width="0.2" height="15.0" fill="rgb(246,66,39)" rx="2" ry="2" />
<text  x="209.80" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (377 samples, 6.32%)</title><rect x="747.0" y="2005" width="74.5" height="15.0" fill="rgb(212,46,28)" rx="2" ry="2" />
<text  x="749.96" y="2015.5" >facebook..</text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="696.9" y="1909" width="0.2" height="15.0" fill="rgb(254,73,21)" rx="2" ry="2" />
<text  x="699.92" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="868.0" y="1957" width="0.2" height="15.0" fill="rgb(236,155,2)" rx="2" ry="2" />
<text  x="871.00" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="364.0" y="1925" width="0.6" height="15.0" fill="rgb(243,0,15)" rx="2" ry="2" />
<text  x="367.04" y="1935.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="465.1" y="1877" width="0.2" height="15.0" fill="rgb(207,100,37)" rx="2" ry="2" />
<text  x="468.11" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="183.9" y="1957" width="0.4" height="15.0" fill="rgb(210,88,43)" rx="2" ry="2" />
<text  x="186.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1365" width="50.5" height="15.0" fill="rgb(215,94,1)" rx="2" ry="2" />
<text  x="65.02" y="1375.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="757" width="50.3" height="15.0" fill="rgb(248,24,25)" rx="2" ry="2" />
<text  x="65.02" y="767.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="261" width="50.3" height="15.0" fill="rgb(254,52,37)" rx="2" ry="2" />
<text  x="65.02" y="271.5" >[unkn..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1080.8" y="1829" width="0.2" height="15.0" fill="rgb(250,58,4)" rx="2" ry="2" />
<text  x="1083.82" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (3 samples, 0.05%)</title><rect x="592.9" y="2037" width="0.6" height="15.0" fill="rgb(248,121,44)" rx="2" ry="2" />
<text  x="595.88" y="2047.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="185.6" y="1909" width="0.2" height="15.0" fill="rgb(225,192,51)" rx="2" ry="2" />
<text  x="188.64" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="465.1" y="1957" width="0.2" height="15.0" fill="rgb(233,176,43)" rx="2" ry="2" />
<text  x="468.11" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8 samples, 0.13%)</title><rect x="185.8" y="1989" width="1.6" height="15.0" fill="rgb(253,31,1)" rx="2" ry="2" />
<text  x="188.83" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="520.5" y="2021" width="0.2" height="15.0" fill="rgb(247,0,23)" rx="2" ry="2" />
<text  x="523.49" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="402.6" y="1973" width="0.2" height="15.0" fill="rgb(251,173,13)" rx="2" ry="2" />
<text  x="405.61" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.47%)</title><rect x="310.0" y="2005" width="5.6" height="15.0" fill="rgb(213,70,52)" rx="2" ry="2" />
<text  x="313.04" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="466.5" y="1989" width="1.0" height="15.0" fill="rgb(238,161,17)" rx="2" ry="2" />
<text  x="469.49" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="245.2" y="1477" width="0.2" height="15.0" fill="rgb(223,47,31)" rx="2" ry="2" />
<text  x="248.17" y="1487.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="729.0" y="1861" width="0.2" height="15.0" fill="rgb(215,25,44)" rx="2" ry="2" />
<text  x="731.96" y="1871.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="696.7" y="1909" width="0.2" height="15.0" fill="rgb(213,115,35)" rx="2" ry="2" />
<text  x="699.72" y="1919.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (39 samples, 0.65%)</title><rect x="248.1" y="1877" width="7.7" height="15.0" fill="rgb(216,58,0)" rx="2" ry="2" />
<text  x="251.14" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (27 samples, 0.45%)</title><rect x="460.0" y="1989" width="5.3" height="15.0" fill="rgb(248,155,15)" rx="2" ry="2" />
<text  x="462.97" y="1999.5" ></text>
</g>
<g >
<title>operator new@plt (3 samples, 0.05%)</title><rect x="1025.6" y="2037" width="0.6" height="15.0" fill="rgb(226,186,53)" rx="2" ry="2" />
<text  x="1028.64" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="400.8" y="1973" width="0.2" height="15.0" fill="rgb(245,116,42)" rx="2" ry="2" />
<text  x="403.83" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="440.4" y="1925" width="0.2" height="15.0" fill="rgb(251,148,1)" rx="2" ry="2" />
<text  x="443.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="183.7" y="1957" width="0.2" height="15.0" fill="rgb(223,162,27)" rx="2" ry="2" />
<text  x="186.66" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (18 samples, 0.30%)</title><rect x="128.9" y="1957" width="3.5" height="15.0" fill="rgb(211,113,3)" rx="2" ry="2" />
<text  x="131.87" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.34%)</title><rect x="128.5" y="1973" width="3.9" height="15.0" fill="rgb(246,122,41)" rx="2" ry="2" />
<text  x="131.47" y="1983.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="245.2" y="1621" width="0.2" height="15.0" fill="rgb(239,121,36)" rx="2" ry="2" />
<text  x="248.17" y="1631.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="23.6" y="1925" width="0.8" height="15.0" fill="rgb(230,181,12)" rx="2" ry="2" />
<text  x="26.65" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.47%)</title><rect x="608.9" y="1989" width="5.5" height="15.0" fill="rgb(250,71,11)" rx="2" ry="2" />
<text  x="611.90" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="245.2" y="1525" width="0.2" height="15.0" fill="rgb(220,39,45)" rx="2" ry="2" />
<text  x="248.17" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="93.7" y="37" width="0.2" height="15.0" fill="rgb(244,36,25)" rx="2" ry="2" />
<text  x="96.66" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (15 samples, 0.25%)</title><rect x="361.7" y="1957" width="2.9" height="15.0" fill="rgb(205,1,24)" rx="2" ry="2" />
<text  x="364.67" y="1967.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="355.7" y="1973" width="0.4" height="15.0" fill="rgb(239,39,30)" rx="2" ry="2" />
<text  x="358.73" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="111.7" y="69" width="0.2" height="15.0" fill="rgb(229,115,51)" rx="2" ry="2" />
<text  x="114.66" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (13 samples, 0.22%)</title><rect x="83.4" y="37" width="2.6" height="15.0" fill="rgb(209,27,14)" rx="2" ry="2" />
<text  x="86.38" y="47.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (15 samples, 0.25%)</title><rect x="13.6" y="1845" width="2.9" height="15.0" fill="rgb(251,78,27)" rx="2" ry="2" />
<text  x="16.56" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (28 samples, 0.47%)</title><rect x="418.8" y="2005" width="5.6" height="15.0" fill="rgb(248,166,34)" rx="2" ry="2" />
<text  x="421.83" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.25%)</title><rect x="13.6" y="2021" width="2.9" height="15.0" fill="rgb(224,94,40)" rx="2" ry="2" />
<text  x="16.56" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="245.2" y="1429" width="0.2" height="15.0" fill="rgb(242,125,8)" rx="2" ry="2" />
<text  x="248.17" y="1439.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(208,18,34)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (26 samples, 0.44%)</title><rect x="500.9" y="1973" width="5.2" height="15.0" fill="rgb(230,58,29)" rx="2" ry="2" />
<text  x="503.91" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="170.8" y="1957" width="0.4" height="15.0" fill="rgb(216,212,20)" rx="2" ry="2" />
<text  x="173.80" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="207.6" y="1925" width="0.2" height="15.0" fill="rgb(254,16,34)" rx="2" ry="2" />
<text  x="210.59" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (13 samples, 0.22%)</title><rect x="197.1" y="1973" width="2.6" height="15.0" fill="rgb(223,129,8)" rx="2" ry="2" />
<text  x="200.11" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (5 samples, 0.08%)</title><rect x="595.3" y="1973" width="0.9" height="15.0" fill="rgb(212,20,49)" rx="2" ry="2" />
<text  x="598.25" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="180.3" y="1941" width="0.6" height="15.0" fill="rgb(220,201,41)" rx="2" ry="2" />
<text  x="183.30" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="390.1" y="1989" width="0.6" height="15.0" fill="rgb(215,33,35)" rx="2" ry="2" />
<text  x="393.15" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="354.9" y="1957" width="0.2" height="15.0" fill="rgb(232,153,52)" rx="2" ry="2" />
<text  x="357.94" y="1967.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="244.0" y="1893" width="1.0" height="15.0" fill="rgb(221,136,45)" rx="2" ry="2" />
<text  x="246.98" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (180 samples, 3.02%)</title><rect x="1106.7" y="2053" width="35.6" height="15.0" fill="rgb(228,130,25)" rx="2" ry="2" />
<text  x="1109.73" y="2063.5" >fac..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (28 samples, 0.47%)</title><rect x="808.9" y="1973" width="5.5" height="15.0" fill="rgb(241,101,16)" rx="2" ry="2" />
<text  x="811.86" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (6 samples, 0.10%)</title><rect x="865.2" y="2005" width="1.2" height="15.0" fill="rgb(228,74,4)" rx="2" ry="2" />
<text  x="868.23" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (9 samples, 0.15%)</title><rect x="541.7" y="1989" width="1.7" height="15.0" fill="rgb(231,214,52)" rx="2" ry="2" />
<text  x="544.65" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="189.4" y="1893" width="0.2" height="15.0" fill="rgb(237,136,39)" rx="2" ry="2" />
<text  x="192.39" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="635.8" y="1989" width="0.2" height="15.0" fill="rgb(211,161,27)" rx="2" ry="2" />
<text  x="638.80" y="1999.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="895.9" y="1957" width="0.4" height="15.0" fill="rgb(230,225,11)" rx="2" ry="2" />
<text  x="898.89" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="206.8" y="1893" width="0.2" height="15.0" fill="rgb(238,192,33)" rx="2" ry="2" />
<text  x="209.80" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="647.3" y="2005" width="1.4" height="15.0" fill="rgb(210,67,5)" rx="2" ry="2" />
<text  x="650.27" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (257 samples, 4.31%)</title><rect x="686.4" y="1973" width="50.9" height="15.0" fill="rgb(237,90,7)" rx="2" ry="2" />
<text  x="689.43" y="1983.5" >folly..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1171.4" y="2053" width="0.2" height="15.0" fill="rgb(241,170,9)" rx="2" ry="2" />
<text  x="1174.41" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="64.4" y="37" width="0.4" height="15.0" fill="rgb(222,183,34)" rx="2" ry="2" />
<text  x="67.39" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="595.3" y="1989" width="0.9" height="15.0" fill="rgb(243,5,14)" rx="2" ry="2" />
<text  x="598.25" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="1188.8" y="2021" width="0.8" height="15.0" fill="rgb(245,110,22)" rx="2" ry="2" />
<text  x="1191.81" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="24.6" y="1989" width="0.8" height="15.0" fill="rgb(249,5,41)" rx="2" ry="2" />
<text  x="27.64" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.25%)</title><rect x="13.6" y="2037" width="2.9" height="15.0" fill="rgb(229,32,52)" rx="2" ry="2" />
<text  x="16.56" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="635.2" y="1973" width="0.2" height="15.0" fill="rgb(215,59,38)" rx="2" ry="2" />
<text  x="638.21" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="868.4" y="1909" width="0.6" height="15.0" fill="rgb(242,164,3)" rx="2" ry="2" />
<text  x="871.40" y="1919.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1141.3" y="2005" width="0.2" height="15.0" fill="rgb(222,29,8)" rx="2" ry="2" />
<text  x="1144.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="642.1" y="2037" width="0.4" height="15.0" fill="rgb(207,60,2)" rx="2" ry="2" />
<text  x="645.13" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (4 samples, 0.07%)</title><rect x="646.1" y="2037" width="0.8" height="15.0" fill="rgb(247,123,43)" rx="2" ry="2" />
<text  x="649.08" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="586.9" y="1925" width="0.4" height="15.0" fill="rgb(245,123,39)" rx="2" ry="2" />
<text  x="589.95" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="376.7" y="1877" width="0.2" height="15.0" fill="rgb(210,224,47)" rx="2" ry="2" />
<text  x="379.70" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (11 samples, 0.18%)</title><rect x="518.3" y="2021" width="2.2" height="15.0" fill="rgb(246,34,28)" rx="2" ry="2" />
<text  x="521.31" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (15 samples, 0.25%)</title><rect x="392.7" y="2005" width="3.0" height="15.0" fill="rgb(233,74,31)" rx="2" ry="2" />
<text  x="395.72" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="526.4" y="2037" width="0.2" height="15.0" fill="rgb(236,18,44)" rx="2" ry="2" />
<text  x="529.42" y="2047.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="734.3" y="1925" width="0.8" height="15.0" fill="rgb(205,32,45)" rx="2" ry="2" />
<text  x="737.30" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1102.8" y="2021" width="0.2" height="15.0" fill="rgb(243,202,44)" rx="2" ry="2" />
<text  x="1105.78" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1493" width="50.5" height="15.0" fill="rgb(243,166,23)" rx="2" ry="2" />
<text  x="65.02" y="1503.5" >[unkn..</text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="296.4" y="1829" width="0.2" height="15.0" fill="rgb(223,90,3)" rx="2" ry="2" />
<text  x="299.40" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="733.9" y="1909" width="0.2" height="15.0" fill="rgb(209,200,23)" rx="2" ry="2" />
<text  x="736.90" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="200.3" y="1989" width="0.2" height="15.0" fill="rgb(238,124,13)" rx="2" ry="2" />
<text  x="203.27" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="869" width="50.3" height="15.0" fill="rgb(242,34,35)" rx="2" ry="2" />
<text  x="65.02" y="879.5" >[unkn..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="461.7" y="1973" width="0.2" height="15.0" fill="rgb(226,50,6)" rx="2" ry="2" />
<text  x="464.75" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="894.9" y="2021" width="1.4" height="15.0" fill="rgb(219,121,1)" rx="2" ry="2" />
<text  x="897.90" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (4 samples, 0.07%)</title><rect x="210.0" y="1925" width="0.8" height="15.0" fill="rgb(226,161,17)" rx="2" ry="2" />
<text  x="212.96" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="541.3" y="1989" width="0.4" height="15.0" fill="rgb(224,27,18)" rx="2" ry="2" />
<text  x="544.26" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (251 samples, 4.21%)</title><rect x="417.8" y="2037" width="49.7" height="15.0" fill="rgb(224,108,2)" rx="2" ry="2" />
<text  x="420.84" y="2047.5" >faceb..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (5 samples, 0.08%)</title><rect x="132.6" y="1957" width="1.0" height="15.0" fill="rgb(250,39,36)" rx="2" ry="2" />
<text  x="135.63" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (4 samples, 0.07%)</title><rect x="1146.1" y="2005" width="0.8" height="15.0" fill="rgb(215,192,36)" rx="2" ry="2" />
<text  x="1149.09" y="2015.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="655.8" y="2005" width="0.2" height="15.0" fill="rgb(213,75,34)" rx="2" ry="2" />
<text  x="658.78" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1461" width="50.5" height="15.0" fill="rgb(230,206,22)" rx="2" ry="2" />
<text  x="65.02" y="1471.5" >[unkn..</text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="395.9" y="1957" width="0.2" height="15.0" fill="rgb(213,193,27)" rx="2" ry="2" />
<text  x="398.88" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="590.7" y="1861" width="0.2" height="15.0" fill="rgb(229,150,52)" rx="2" ry="2" />
<text  x="593.70" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="103.4" y="37" width="0.4" height="15.0" fill="rgb(227,197,40)" rx="2" ry="2" />
<text  x="106.36" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (31 samples, 0.52%)</title><rect x="376.3" y="1925" width="6.1" height="15.0" fill="rgb(220,225,7)" rx="2" ry="2" />
<text  x="379.30" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="907.6" y="2005" width="0.4" height="15.0" fill="rgb(220,217,36)" rx="2" ry="2" />
<text  x="910.56" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="868.2" y="1925" width="0.2" height="15.0" fill="rgb(210,1,42)" rx="2" ry="2" />
<text  x="871.20" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (10 samples, 0.17%)</title><rect x="684.5" y="1941" width="1.9" height="15.0" fill="rgb(252,87,44)" rx="2" ry="2" />
<text  x="687.46" y="1951.5" ></text>
</g>
<g >
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="1048.6" y="1925" width="0.4" height="15.0" fill="rgb(219,203,51)" rx="2" ry="2" />
<text  x="1051.58" y="1935.5" ></text>
</g>
<g >
<title>inet_recvmsg (227 samples, 3.80%)</title><rect x="1042.3" y="1957" width="44.9" height="15.0" fill="rgb(209,92,50)" rx="2" ry="2" />
<text  x="1045.25" y="1967.5" >inet..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="591.7" y="1893" width="0.2" height="15.0" fill="rgb(219,130,2)" rx="2" ry="2" />
<text  x="594.69" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (16 samples, 0.27%)</title><rect x="338.9" y="1973" width="3.2" height="15.0" fill="rgb(215,20,34)" rx="2" ry="2" />
<text  x="341.92" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="868.8" y="1877" width="0.2" height="15.0" fill="rgb(247,205,32)" rx="2" ry="2" />
<text  x="871.79" y="1887.5" ></text>
</g>
<g >
<title>sch_direct_xmit (25 samples, 0.42%)</title><rect x="286.9" y="1701" width="4.9" height="15.0" fill="rgb(237,33,16)" rx="2" ry="2" />
<text  x="289.90" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="384.0" y="2021" width="0.2" height="15.0" fill="rgb(229,5,13)" rx="2" ry="2" />
<text  x="387.02" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="595.3" y="1941" width="0.7" height="15.0" fill="rgb(251,99,14)" rx="2" ry="2" />
<text  x="598.25" y="1951.5" ></text>
</g>
<g >
<title>skb_release_data (57 samples, 0.96%)</title><rect x="270.5" y="1429" width="11.3" height="15.0" fill="rgb(242,147,16)" rx="2" ry="2" />
<text  x="273.49" y="1439.5" ></text>
</g>
<g >
<title>ip_queue_xmit (151 samples, 2.53%)</title><rect x="262.0" y="1813" width="29.8" height="15.0" fill="rgb(245,102,34)" rx="2" ry="2" />
<text  x="264.98" y="1823.5" >ip..</text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="192.6" y="2005" width="0.6" height="15.0" fill="rgb(232,105,20)" rx="2" ry="2" />
<text  x="195.56" y="2015.5" ></text>
</g>
<g >
<title>skb_release_head_state (5 samples, 0.08%)</title><rect x="1047.2" y="1893" width="1.0" height="15.0" fill="rgb(237,166,45)" rx="2" ry="2" />
<text  x="1050.20" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (5 samples, 0.08%)</title><rect x="868.0" y="2005" width="1.0" height="15.0" fill="rgb(240,137,37)" rx="2" ry="2" />
<text  x="871.00" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (3 samples, 0.05%)</title><rect x="495.8" y="1957" width="0.6" height="15.0" fill="rgb(214,42,21)" rx="2" ry="2" />
<text  x="498.77" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="258.0" y="1813" width="0.4" height="15.0" fill="rgb(248,148,40)" rx="2" ry="2" />
<text  x="261.03" y="1823.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="417.8" y="2005" width="0.4" height="15.0" fill="rgb(243,156,18)" rx="2" ry="2" />
<text  x="420.84" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (49 samples, 0.82%)</title><rect x="93.3" y="53" width="9.7" height="15.0" fill="rgb(243,103,14)" rx="2" ry="2" />
<text  x="96.27" y="63.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="581" width="50.3" height="15.0" fill="rgb(250,111,11)" rx="2" ry="2" />
<text  x="65.02" y="591.5" >[unkn..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="399.6" y="1925" width="0.4" height="15.0" fill="rgb(219,82,19)" rx="2" ry="2" />
<text  x="402.64" y="1935.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="293.2" y="1797" width="0.2" height="15.0" fill="rgb(212,63,24)" rx="2" ry="2" />
<text  x="296.23" y="1807.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="247.7" y="1861" width="0.2" height="15.0" fill="rgb(221,101,51)" rx="2" ry="2" />
<text  x="250.74" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="316.4" y="2037" width="0.2" height="15.0" fill="rgb(221,10,20)" rx="2" ry="2" />
<text  x="319.37" y="2047.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="695.1" y="1877" width="0.2" height="15.0" fill="rgb(246,55,44)" rx="2" ry="2" />
<text  x="698.14" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="1175.8" y="2053" width="0.9" height="15.0" fill="rgb(211,147,13)" rx="2" ry="2" />
<text  x="1178.76" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="974.8" y="1893" width="0.2" height="15.0" fill="rgb(230,206,53)" rx="2" ry="2" />
<text  x="977.81" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1091.5" y="2053" width="0.2" height="15.0" fill="rgb(253,24,17)" rx="2" ry="2" />
<text  x="1094.50" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="180.3" y="1957" width="0.8" height="15.0" fill="rgb(212,200,15)" rx="2" ry="2" />
<text  x="183.30" y="1967.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (186 samples, 3.12%)</title><rect x="260.4" y="1861" width="36.8" height="15.0" fill="rgb(250,122,2)" rx="2" ry="2" />
<text  x="263.40" y="1871.5" >__t..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="864.8" y="2005" width="0.4" height="15.0" fill="rgb(250,12,22)" rx="2" ry="2" />
<text  x="867.84" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="112.1" y="53" width="0.2" height="15.0" fill="rgb(208,90,19)" rx="2" ry="2" />
<text  x="115.06" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1080.8" y="1813" width="0.2" height="15.0" fill="rgb(236,13,29)" rx="2" ry="2" />
<text  x="1083.82" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="586.9" y="1893" width="0.4" height="15.0" fill="rgb(206,133,35)" rx="2" ry="2" />
<text  x="589.95" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="186.4" y="1909" width="0.2" height="15.0" fill="rgb(223,59,32)" rx="2" ry="2" />
<text  x="189.43" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="862.1" y="1845" width="0.2" height="15.0" fill="rgb(236,11,7)" rx="2" ry="2" />
<text  x="865.07" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (28 samples, 0.47%)</title><rect x="469.5" y="1989" width="5.5" height="15.0" fill="rgb(206,167,20)" rx="2" ry="2" />
<text  x="472.46" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.13%)</title><rect x="11.8" y="1829" width="1.6" height="15.0" fill="rgb(211,115,47)" rx="2" ry="2" />
<text  x="14.78" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="401.8" y="1989" width="0.4" height="15.0" fill="rgb(232,142,42)" rx="2" ry="2" />
<text  x="404.82" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="264.6" y="1525" width="0.2" height="15.0" fill="rgb(236,154,7)" rx="2" ry="2" />
<text  x="267.55" y="1535.5" ></text>
</g>
<g >
<title>free (42 samples, 0.70%)</title><rect x="1014.6" y="2037" width="8.3" height="15.0" fill="rgb(246,228,36)" rx="2" ry="2" />
<text  x="1017.56" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (15 samples, 0.25%)</title><rect x="367.8" y="1989" width="3.0" height="15.0" fill="rgb(236,35,15)" rx="2" ry="2" />
<text  x="370.80" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1141.7" y="2005" width="0.2" height="15.0" fill="rgb(237,69,29)" rx="2" ry="2" />
<text  x="1144.74" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (16 samples, 0.27%)</title><rect x="692.6" y="1925" width="3.1" height="15.0" fill="rgb(250,202,7)" rx="2" ry="2" />
<text  x="695.56" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="683.3" y="1909" width="0.2" height="15.0" fill="rgb(211,116,27)" rx="2" ry="2" />
<text  x="686.27" y="1919.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="189.4" y="1909" width="0.2" height="15.0" fill="rgb(222,79,49)" rx="2" ry="2" />
<text  x="192.39" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (162 samples, 2.72%)</title><rect x="1049.0" y="1925" width="32.0" height="15.0" fill="rgb(237,153,36)" rx="2" ry="2" />
<text  x="1051.98" y="1935.5" >lo..</text>
</g>
<g >
<title>folly::EventBase::loopOnce (8 samples, 0.13%)</title><rect x="185.8" y="1973" width="1.6" height="15.0" fill="rgb(229,170,44)" rx="2" ry="2" />
<text  x="188.83" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="465.1" y="1909" width="0.2" height="15.0" fill="rgb(237,117,52)" rx="2" ry="2" />
<text  x="468.11" y="1919.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="837.9" y="2005" width="0.2" height="15.0" fill="rgb(250,169,30)" rx="2" ry="2" />
<text  x="840.94" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1102.4" y="1941" width="0.2" height="15.0" fill="rgb(218,80,5)" rx="2" ry="2" />
<text  x="1105.38" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="22.7" y="1941" width="0.6" height="15.0" fill="rgb(243,167,17)" rx="2" ry="2" />
<text  x="25.66" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_uncharge (1 samples, 0.02%)</title><rect x="11.6" y="1813" width="0.2" height="15.0" fill="rgb(247,2,1)" rx="2" ry="2" />
<text  x="14.58" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="206.8" y="1941" width="0.2" height="15.0" fill="rgb(233,119,15)" rx="2" ry="2" />
<text  x="209.80" y="1951.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="732.3" y="1893" width="0.4" height="15.0" fill="rgb(212,200,3)" rx="2" ry="2" />
<text  x="735.32" y="1903.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(207,140,31)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="928.3" y="1973" width="0.8" height="15.0" fill="rgb(251,116,0)" rx="2" ry="2" />
<text  x="931.33" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="1146.1" y="1989" width="0.4" height="15.0" fill="rgb(228,117,2)" rx="2" ry="2" />
<text  x="1149.09" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (28 samples, 0.47%)</title><rect x="622.5" y="1973" width="5.6" height="15.0" fill="rgb(253,218,1)" rx="2" ry="2" />
<text  x="625.55" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (8 samples, 0.13%)</title><rect x="290.1" y="1653" width="1.5" height="15.0" fill="rgb(209,97,46)" rx="2" ry="2" />
<text  x="293.07" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="204.4" y="1973" width="0.2" height="15.0" fill="rgb(239,226,44)" rx="2" ry="2" />
<text  x="207.43" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (133 samples, 2.23%)</title><rect x="838.5" y="2005" width="26.3" height="15.0" fill="rgb(207,93,44)" rx="2" ry="2" />
<text  x="841.53" y="2015.5" >f..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="186.2" y="1861" width="0.2" height="15.0" fill="rgb(244,110,31)" rx="2" ry="2" />
<text  x="189.23" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(250,196,29)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1429" width="50.5" height="15.0" fill="rgb(240,105,50)" rx="2" ry="2" />
<text  x="65.02" y="1439.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="198.9" y="1925" width="0.8" height="15.0" fill="rgb(249,142,16)" rx="2" ry="2" />
<text  x="201.89" y="1935.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="530.6" y="1877" width="0.2" height="15.0" fill="rgb(227,168,45)" rx="2" ry="2" />
<text  x="533.58" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="496.4" y="1957" width="0.4" height="15.0" fill="rgb(227,3,32)" rx="2" ry="2" />
<text  x="499.36" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="485.7" y="1909" width="0.8" height="15.0" fill="rgb(221,30,35)" rx="2" ry="2" />
<text  x="488.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_collapse (1 samples, 0.02%)</title><rect x="1081.2" y="1829" width="0.2" height="15.0" fill="rgb(208,117,2)" rx="2" ry="2" />
<text  x="1084.22" y="1839.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (17 samples, 0.28%)</title><rect x="965.7" y="1893" width="3.4" height="15.0" fill="rgb(249,134,48)" rx="2" ry="2" />
<text  x="968.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1301" width="50.5" height="15.0" fill="rgb(220,162,7)" rx="2" ry="2" />
<text  x="65.02" y="1311.5" >[unkn..</text>
</g>
<g >
<title>x86_pmu_enable (15 samples, 0.25%)</title><rect x="13.6" y="1877" width="2.9" height="15.0" fill="rgb(214,128,52)" rx="2" ry="2" />
<text  x="16.56" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (7 samples, 0.12%)</title><rect x="91.9" y="53" width="1.4" height="15.0" fill="rgb(214,102,52)" rx="2" ry="2" />
<text  x="94.88" y="63.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="223.0" y="2021" width="0.4" height="15.0" fill="rgb(242,9,7)" rx="2" ry="2" />
<text  x="226.02" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (13 samples, 0.22%)</title><rect x="865.2" y="2037" width="2.6" height="15.0" fill="rgb(223,218,23)" rx="2" ry="2" />
<text  x="868.23" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="245.2" y="1461" width="0.2" height="15.0" fill="rgb(250,11,48)" rx="2" ry="2" />
<text  x="248.17" y="1471.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="401.0" y="1989" width="0.6" height="15.0" fill="rgb(206,219,26)" rx="2" ry="2" />
<text  x="404.03" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1025.0" y="2037" width="0.2" height="15.0" fill="rgb(241,56,2)" rx="2" ry="2" />
<text  x="1028.05" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (2 samples, 0.03%)</title><rect x="209.4" y="1941" width="0.4" height="15.0" fill="rgb(226,73,13)" rx="2" ry="2" />
<text  x="212.37" y="1951.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (17 samples, 0.28%)</title><rect x="324.7" y="1941" width="3.3" height="15.0" fill="rgb(236,101,6)" rx="2" ry="2" />
<text  x="327.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (48 samples, 0.80%)</title><rect x="513.8" y="2037" width="9.5" height="15.0" fill="rgb(234,5,10)" rx="2" ry="2" />
<text  x="516.76" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="210.4" y="1877" width="0.2" height="15.0" fill="rgb(235,219,46)" rx="2" ry="2" />
<text  x="213.36" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="375.9" y="1893" width="0.2" height="15.0" fill="rgb(214,30,6)" rx="2" ry="2" />
<text  x="378.91" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (64 samples, 1.07%)</title><rect x="1127.5" y="2005" width="12.7" height="15.0" fill="rgb(234,219,18)" rx="2" ry="2" />
<text  x="1130.50" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="595.3" y="1925" width="0.2" height="15.0" fill="rgb(217,200,45)" rx="2" ry="2" />
<text  x="598.25" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (8 samples, 0.13%)</title><rect x="332.0" y="1973" width="1.6" height="15.0" fill="rgb(252,177,54)" rx="2" ry="2" />
<text  x="335.00" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="210.2" y="1893" width="0.4" height="15.0" fill="rgb(240,103,25)" rx="2" ry="2" />
<text  x="213.16" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1861" width="50.5" height="15.0" fill="rgb(229,100,8)" rx="2" ry="2" />
<text  x="65.02" y="1871.5" >[unkn..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="245.2" y="1541" width="0.2" height="15.0" fill="rgb(253,109,49)" rx="2" ry="2" />
<text  x="248.17" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="658.1" y="1989" width="0.6" height="15.0" fill="rgb(223,227,25)" rx="2" ry="2" />
<text  x="661.15" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="823.1" y="2005" width="0.2" height="15.0" fill="rgb(216,9,50)" rx="2" ry="2" />
<text  x="826.10" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="381.4" y="1829" width="0.4" height="15.0" fill="rgb(225,224,6)" rx="2" ry="2" />
<text  x="384.44" y="1839.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1188.6" y="2021" width="0.2" height="15.0" fill="rgb(254,229,14)" rx="2" ry="2" />
<text  x="1191.62" y="2031.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="693.8" y="1813" width="0.1" height="15.0" fill="rgb(221,0,20)" rx="2" ry="2" />
<text  x="696.75" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="683.3" y="1893" width="0.2" height="15.0" fill="rgb(210,203,51)" rx="2" ry="2" />
<text  x="686.27" y="1903.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (4 samples, 0.07%)</title><rect x="87.9" y="37" width="0.8" height="15.0" fill="rgb(211,113,51)" rx="2" ry="2" />
<text  x="90.93" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="868.4" y="1893" width="0.2" height="15.0" fill="rgb(209,23,37)" rx="2" ry="2" />
<text  x="871.40" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="318.5" y="2005" width="0.4" height="15.0" fill="rgb(245,92,38)" rx="2" ry="2" />
<text  x="321.55" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="501" width="50.3" height="15.0" fill="rgb(243,76,38)" rx="2" ry="2" />
<text  x="65.02" y="511.5" >[unkn..</text>
</g>
<g >
<title>swake_up (1 samples, 0.02%)</title><rect x="530.6" y="1861" width="0.2" height="15.0" fill="rgb(230,78,39)" rx="2" ry="2" />
<text  x="533.58" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="167.6" y="1941" width="0.2" height="15.0" fill="rgb(223,81,17)" rx="2" ry="2" />
<text  x="170.64" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="732.7" y="1893" width="0.2" height="15.0" fill="rgb(236,69,38)" rx="2" ry="2" />
<text  x="735.72" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 0.05%)</title><rect x="1037.5" y="2037" width="0.6" height="15.0" fill="rgb(205,13,24)" rx="2" ry="2" />
<text  x="1040.51" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="530.6" y="1925" width="0.2" height="15.0" fill="rgb(216,102,32)" rx="2" ry="2" />
<text  x="533.58" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="293.0" y="1749" width="0.2" height="15.0" fill="rgb(241,145,30)" rx="2" ry="2" />
<text  x="296.03" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="646.9" y="2037" width="0.4" height="15.0" fill="rgb(224,126,24)" rx="2" ry="2" />
<text  x="649.88" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (8 samples, 0.13%)</title><rect x="1087.5" y="1941" width="1.6" height="15.0" fill="rgb(213,168,24)" rx="2" ry="2" />
<text  x="1090.55" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (138 samples, 2.31%)</title><rect x="952.9" y="1989" width="27.2" height="15.0" fill="rgb(222,153,0)" rx="2" ry="2" />
<text  x="955.85" y="1999.5" >f..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (8 samples, 0.13%)</title><rect x="636.0" y="2005" width="1.6" height="15.0" fill="rgb(232,153,7)" rx="2" ry="2" />
<text  x="639.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (8 samples, 0.13%)</title><rect x="187.8" y="2005" width="1.6" height="15.0" fill="rgb(252,68,31)" rx="2" ry="2" />
<text  x="190.81" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (3 samples, 0.05%)</title><rect x="543.4" y="1989" width="0.6" height="15.0" fill="rgb(207,168,9)" rx="2" ry="2" />
<text  x="546.43" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="21.5" y="1973" width="0.4" height="15.0" fill="rgb(246,141,46)" rx="2" ry="2" />
<text  x="24.47" y="1983.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="258.4" y="1829" width="0.2" height="15.0" fill="rgb(232,207,16)" rx="2" ry="2" />
<text  x="261.42" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="742.8" y="1925" width="0.2" height="15.0" fill="rgb(208,209,27)" rx="2" ry="2" />
<text  x="745.80" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="342.1" y="1973" width="0.2" height="15.0" fill="rgb(230,184,43)" rx="2" ry="2" />
<text  x="345.09" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="132.2" y="1941" width="0.2" height="15.0" fill="rgb(224,111,31)" rx="2" ry="2" />
<text  x="135.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (5 samples, 0.08%)</title><rect x="1085.6" y="1925" width="1.0" height="15.0" fill="rgb(207,188,34)" rx="2" ry="2" />
<text  x="1088.57" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (4 samples, 0.07%)</title><rect x="631.1" y="1973" width="0.7" height="15.0" fill="rgb(232,213,41)" rx="2" ry="2" />
<text  x="634.05" y="1983.5" ></text>
</g>
<g >
<title>strncpy_from_user (1 samples, 0.02%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(233,86,5)" rx="2" ry="2" />
<text  x="14.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="93.3" y="37" width="0.4" height="15.0" fill="rgb(238,122,33)" rx="2" ry="2" />
<text  x="96.27" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="180.9" y="1925" width="0.2" height="15.0" fill="rgb(232,196,6)" rx="2" ry="2" />
<text  x="183.89" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (166 samples, 2.78%)</title><rect x="608.9" y="2037" width="32.8" height="15.0" fill="rgb(220,152,42)" rx="2" ry="2" />
<text  x="611.90" y="2047.5" >fa..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="523.3" y="2037" width="0.4" height="15.0" fill="rgb(254,202,46)" rx="2" ry="2" />
<text  x="526.26" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="204.0" y="1989" width="0.6" height="15.0" fill="rgb(242,33,46)" rx="2" ry="2" />
<text  x="207.03" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="421" width="50.3" height="15.0" fill="rgb(218,1,45)" rx="2" ry="2" />
<text  x="65.02" y="431.5" >[unkn..</text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="892.3" y="2037" width="0.2" height="15.0" fill="rgb(240,83,38)" rx="2" ry="2" />
<text  x="895.33" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="93.9" y="37" width="0.4" height="15.0" fill="rgb(220,122,43)" rx="2" ry="2" />
<text  x="96.86" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (12 samples, 0.20%)</title><rect x="368.4" y="1973" width="2.4" height="15.0" fill="rgb(242,4,14)" rx="2" ry="2" />
<text  x="371.39" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (29 samples, 0.49%)</title><rect x="740.6" y="1973" width="5.8" height="15.0" fill="rgb(207,142,27)" rx="2" ry="2" />
<text  x="743.63" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (11 samples, 0.18%)</title><rect x="823.3" y="2005" width="2.2" height="15.0" fill="rgb(246,140,14)" rx="2" ry="2" />
<text  x="826.30" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="613.1" y="1941" width="0.3" height="15.0" fill="rgb(215,176,26)" rx="2" ry="2" />
<text  x="616.05" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (17 samples, 0.28%)</title><rect x="548.8" y="1973" width="3.3" height="15.0" fill="rgb(209,65,30)" rx="2" ry="2" />
<text  x="551.77" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (45 samples, 0.75%)</title><rect x="598.0" y="2037" width="8.9" height="15.0" fill="rgb(224,38,48)" rx="2" ry="2" />
<text  x="601.02" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="21.7" y="1941" width="0.2" height="15.0" fill="rgb(211,126,10)" rx="2" ry="2" />
<text  x="24.67" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="183.3" y="1941" width="0.4" height="15.0" fill="rgb(231,188,40)" rx="2" ry="2" />
<text  x="186.26" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="328.0" y="1941" width="0.2" height="15.0" fill="rgb(253,203,23)" rx="2" ry="2" />
<text  x="331.04" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="463.9" y="1973" width="1.4" height="15.0" fill="rgb(214,217,18)" rx="2" ry="2" />
<text  x="466.92" y="1983.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="243.6" y="1893" width="0.2" height="15.0" fill="rgb(218,16,31)" rx="2" ry="2" />
<text  x="246.59" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.13%)</title><rect x="11.8" y="1877" width="1.6" height="15.0" fill="rgb(217,205,34)" rx="2" ry="2" />
<text  x="14.78" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (2 samples, 0.03%)</title><rect x="894.9" y="1989" width="0.4" height="15.0" fill="rgb(232,80,33)" rx="2" ry="2" />
<text  x="897.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 4.11%)</title><rect x="62.0" y="85" width="48.5" height="15.0" fill="rgb(249,101,49)" rx="2" ry="2" />
<text  x="65.02" y="95.5" >[unk..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="333.0" y="1941" width="0.4" height="15.0" fill="rgb(214,206,0)" rx="2" ry="2" />
<text  x="335.99" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (373 samples, 6.25%)</title><rect x="912.9" y="2005" width="73.8" height="15.0" fill="rgb(231,45,1)" rx="2" ry="2" />
<text  x="915.90" y="2015.5" >folly::f..</text>
</g>
<g >
<title>ip_local_deliver_finish (109 samples, 1.83%)</title><rect x="264.6" y="1557" width="21.5" height="15.0" fill="rgb(235,26,50)" rx="2" ry="2" />
<text  x="267.55" y="1567.5" >i..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="349.6" y="1957" width="1.2" height="15.0" fill="rgb(208,3,24)" rx="2" ry="2" />
<text  x="352.60" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1845" width="50.5" height="15.0" fill="rgb(251,29,22)" rx="2" ry="2" />
<text  x="65.02" y="1855.5" >[unkn..</text>
</g>
<g >
<title>sock_recvmsg (230 samples, 3.86%)</title><rect x="1042.1" y="1973" width="45.4" height="15.0" fill="rgb(212,93,41)" rx="2" ry="2" />
<text  x="1045.05" y="1983.5" >sock..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="166.3" y="1925" width="0.3" height="15.0" fill="rgb(211,190,40)" rx="2" ry="2" />
<text  x="169.25" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="592.9" y="1925" width="0.2" height="15.0" fill="rgb(212,37,43)" rx="2" ry="2" />
<text  x="595.88" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="668.6" y="1957" width="0.2" height="15.0" fill="rgb(235,97,9)" rx="2" ry="2" />
<text  x="671.63" y="1967.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1080.8" y="1749" width="0.2" height="15.0" fill="rgb(213,225,16)" rx="2" ry="2" />
<text  x="1083.82" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (6 samples, 0.10%)</title><rect x="186.0" y="1941" width="1.2" height="15.0" fill="rgb(248,143,32)" rx="2" ry="2" />
<text  x="189.03" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="293.0" y="1717" width="0.2" height="15.0" fill="rgb(238,36,19)" rx="2" ry="2" />
<text  x="296.03" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="19.9" y="1957" width="0.6" height="15.0" fill="rgb(247,220,4)" rx="2" ry="2" />
<text  x="22.89" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (256 samples, 4.29%)</title><rect x="61.8" y="2005" width="50.7" height="15.0" fill="rgb(227,33,2)" rx="2" ry="2" />
<text  x="64.82" y="2015.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="496.8" y="1989" width="0.2" height="15.0" fill="rgb(253,84,38)" rx="2" ry="2" />
<text  x="499.75" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (20 samples, 0.34%)</title><rect x="330.2" y="1989" width="4.0" height="15.0" fill="rgb(251,56,11)" rx="2" ry="2" />
<text  x="333.22" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1032.8" y="2005" width="0.2" height="15.0" fill="rgb(219,40,18)" rx="2" ry="2" />
<text  x="1035.76" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (11 samples, 0.18%)</title><rect x="300.9" y="1909" width="2.2" height="15.0" fill="rgb(235,120,41)" rx="2" ry="2" />
<text  x="303.95" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="730.9" y="1893" width="0.8" height="15.0" fill="rgb(236,112,9)" rx="2" ry="2" />
<text  x="733.94" y="1903.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (16 samples, 0.27%)</title><rect x="88.7" y="53" width="3.2" height="15.0" fill="rgb(215,169,14)" rx="2" ry="2" />
<text  x="91.72" y="63.5" ></text>
</g>
<g >
<title>tcp_poll (11 samples, 0.18%)</title><rect x="313.0" y="1893" width="2.2" height="15.0" fill="rgb(208,127,36)" rx="2" ry="2" />
<text  x="316.01" y="1903.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="258.0" y="1797" width="0.4" height="15.0" fill="rgb(243,163,28)" rx="2" ry="2" />
<text  x="261.03" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="110.5" y="69" width="1.2" height="15.0" fill="rgb(233,60,4)" rx="2" ry="2" />
<text  x="113.48" y="79.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="980.9" y="1989" width="0.2" height="15.0" fill="rgb(237,50,54)" rx="2" ry="2" />
<text  x="983.94" y="1999.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="222.6" y="1877" width="0.2" height="15.0" fill="rgb(206,51,42)" rx="2" ry="2" />
<text  x="225.62" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="186.6" y="1877" width="0.2" height="15.0" fill="rgb(208,156,16)" rx="2" ry="2" />
<text  x="189.62" y="1887.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="592.9" y="1877" width="0.2" height="15.0" fill="rgb(225,214,7)" rx="2" ry="2" />
<text  x="595.88" y="1887.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="598.4" y="1989" width="0.2" height="15.0" fill="rgb(243,168,38)" rx="2" ry="2" />
<text  x="601.42" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="210.6" y="1893" width="0.2" height="15.0" fill="rgb(210,30,20)" rx="2" ry="2" />
<text  x="213.56" y="1903.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="285.9" y="1477" width="0.2" height="15.0" fill="rgb(235,179,49)" rx="2" ry="2" />
<text  x="288.91" y="1487.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="520.3" y="2005" width="0.2" height="15.0" fill="rgb(216,133,47)" rx="2" ry="2" />
<text  x="523.29" y="2015.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="286.5" y="1685" width="0.2" height="15.0" fill="rgb(249,166,15)" rx="2" ry="2" />
<text  x="289.51" y="1695.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (159 samples, 2.67%)</title><rect x="1049.6" y="1893" width="31.4" height="15.0" fill="rgb(244,149,20)" rx="2" ry="2" />
<text  x="1052.57" y="1903.5" >na..</text>
</g>
<g >
<title>ep_item_poll.isra.12 (23 samples, 0.39%)</title><rect x="311.0" y="1925" width="4.6" height="15.0" fill="rgb(251,40,22)" rx="2" ry="2" />
<text  x="314.03" y="1935.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="269.9" y="1445" width="0.6" height="15.0" fill="rgb(213,79,6)" rx="2" ry="2" />
<text  x="272.89" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (1 samples, 0.02%)</title><rect x="630.1" y="1973" width="0.2" height="15.0" fill="rgb(251,111,23)" rx="2" ry="2" />
<text  x="633.06" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="909.5" y="2005" width="0.2" height="15.0" fill="rgb(233,176,33)" rx="2" ry="2" />
<text  x="912.54" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (5 samples, 0.08%)</title><rect x="306.5" y="2021" width="1.0" height="15.0" fill="rgb(236,100,16)" rx="2" ry="2" />
<text  x="309.48" y="2031.5" ></text>
</g>
<g >
<title>sys_futex (15 samples, 0.25%)</title><rect x="13.6" y="2005" width="2.9" height="15.0" fill="rgb(244,140,37)" rx="2" ry="2" />
<text  x="16.56" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="250.3" y="1861" width="0.4" height="15.0" fill="rgb(250,99,34)" rx="2" ry="2" />
<text  x="253.31" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="161.7" y="1925" width="0.4" height="15.0" fill="rgb(230,53,41)" rx="2" ry="2" />
<text  x="164.70" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="363.4" y="1925" width="0.6" height="15.0" fill="rgb(218,121,9)" rx="2" ry="2" />
<text  x="366.45" y="1935.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1139.8" y="1989" width="0.2" height="15.0" fill="rgb(212,53,29)" rx="2" ry="2" />
<text  x="1142.76" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (234 samples, 3.92%)</title><rect x="467.5" y="2021" width="46.3" height="15.0" fill="rgb(234,1,19)" rx="2" ry="2" />
<text  x="470.48" y="2031.5" >[unk..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="97.4" y="37" width="0.2" height="15.0" fill="rgb(237,113,9)" rx="2" ry="2" />
<text  x="100.42" y="47.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="1129.7" y="1957" width="0.4" height="15.0" fill="rgb(252,165,48)" rx="2" ry="2" />
<text  x="1132.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (5 samples, 0.08%)</title><rect x="512.8" y="2005" width="1.0" height="15.0" fill="rgb(232,78,53)" rx="2" ry="2" />
<text  x="515.78" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="383.0" y="1925" width="0.4" height="15.0" fill="rgb(214,220,34)" rx="2" ry="2" />
<text  x="386.03" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.24%)</title><rect x="62.0" y="149" width="50.1" height="15.0" fill="rgb(249,65,28)" rx="2" ry="2" />
<text  x="65.02" y="159.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (36 samples, 0.60%)</title><rect x="458.2" y="2005" width="7.1" height="15.0" fill="rgb(249,151,46)" rx="2" ry="2" />
<text  x="461.19" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (7 samples, 0.12%)</title><rect x="328.8" y="1989" width="1.4" height="15.0" fill="rgb(233,29,26)" rx="2" ry="2" />
<text  x="331.83" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="530.6" y="1957" width="0.2" height="15.0" fill="rgb(210,64,10)" rx="2" ry="2" />
<text  x="533.58" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (18 samples, 0.30%)</title><rect x="965.5" y="1909" width="3.6" height="15.0" fill="rgb(228,10,39)" rx="2" ry="2" />
<text  x="968.51" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (110 samples, 1.84%)</title><rect x="264.4" y="1701" width="21.7" height="15.0" fill="rgb(206,157,38)" rx="2" ry="2" />
<text  x="267.35" y="1711.5" >d..</text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="644.1" y="2005" width="1.4" height="15.0" fill="rgb(214,65,30)" rx="2" ry="2" />
<text  x="647.11" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="352.2" y="1973" width="0.2" height="15.0" fill="rgb(207,81,25)" rx="2" ry="2" />
<text  x="355.17" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="725" width="50.3" height="15.0" fill="rgb(233,2,54)" rx="2" ry="2" />
<text  x="65.02" y="735.5" >[unkn..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="495.0" y="1813" width="0.2" height="15.0" fill="rgb(205,68,22)" rx="2" ry="2" />
<text  x="497.97" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (7 samples, 0.12%)</title><rect x="342.3" y="1989" width="1.4" height="15.0" fill="rgb(252,63,28)" rx="2" ry="2" />
<text  x="345.28" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="10.2" y="1877" width="0.2" height="15.0" fill="rgb(253,209,47)" rx="2" ry="2" />
<text  x="13.20" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (6 samples, 0.10%)</title><rect x="828.4" y="2005" width="1.2" height="15.0" fill="rgb(245,185,10)" rx="2" ry="2" />
<text  x="831.44" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="204.4" y="1957" width="0.2" height="15.0" fill="rgb(231,3,46)" rx="2" ry="2" />
<text  x="207.43" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (6 samples, 0.10%)</title><rect x="579.4" y="1989" width="1.2" height="15.0" fill="rgb(206,25,7)" rx="2" ry="2" />
<text  x="582.43" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.2" y="2021" width="0.2" height="15.0" fill="rgb(227,73,49)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="742.0" y="1941" width="1.0" height="15.0" fill="rgb(250,65,33)" rx="2" ry="2" />
<text  x="745.01" y="1951.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="10.2" y="1941" width="1.0" height="15.0" fill="rgb(245,52,3)" rx="2" ry="2" />
<text  x="13.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1253" width="50.5" height="15.0" fill="rgb(237,78,5)" rx="2" ry="2" />
<text  x="65.02" y="1263.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (17 samples, 0.28%)</title><rect x="181.9" y="1989" width="3.3" height="15.0" fill="rgb(221,49,1)" rx="2" ry="2" />
<text  x="184.88" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="395.5" y="1973" width="0.2" height="15.0" fill="rgb(223,19,30)" rx="2" ry="2" />
<text  x="398.49" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="245.2" y="1717" width="0.2" height="15.0" fill="rgb(226,202,40)" rx="2" ry="2" />
<text  x="248.17" y="1727.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (15 samples, 0.25%)</title><rect x="13.6" y="1957" width="2.9" height="15.0" fill="rgb(231,95,27)" rx="2" ry="2" />
<text  x="16.56" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="997" width="50.5" height="15.0" fill="rgb(237,70,22)" rx="2" ry="2" />
<text  x="65.02" y="1007.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (47 samples, 0.79%)</title><rect x="374.1" y="1957" width="9.3" height="15.0" fill="rgb(218,78,8)" rx="2" ry="2" />
<text  x="377.13" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="563.4" y="1989" width="0.2" height="15.0" fill="rgb(225,162,38)" rx="2" ry="2" />
<text  x="566.41" y="1999.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="293.6" y="1829" width="0.4" height="15.0" fill="rgb(209,50,19)" rx="2" ry="2" />
<text  x="296.63" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (5 samples, 0.08%)</title><rect x="398.7" y="1925" width="0.9" height="15.0" fill="rgb(224,222,49)" rx="2" ry="2" />
<text  x="401.65" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (661 samples, 11.08%)</title><rect x="61.8" y="2021" width="130.8" height="15.0" fill="rgb(240,13,25)" rx="2" ry="2" />
<text  x="64.82" y="2031.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (5,001 samples, 83.83%)</title><rect x="48.0" y="2053" width="989.1" height="15.0" fill="rgb(224,206,20)" rx="2" ry="2" />
<text  x="50.98" y="2063.5" >[unknown]</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="621.4" y="1973" width="0.2" height="15.0" fill="rgb(250,59,4)" rx="2" ry="2" />
<text  x="624.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="405" width="50.3" height="15.0" fill="rgb(245,16,23)" rx="2" ry="2" />
<text  x="65.02" y="415.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="453" width="50.3" height="15.0" fill="rgb(239,224,35)" rx="2" ry="2" />
<text  x="65.02" y="463.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="644.1" y="1989" width="0.2" height="15.0" fill="rgb(231,222,42)" rx="2" ry="2" />
<text  x="647.11" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="198.5" y="1909" width="0.4" height="15.0" fill="rgb(241,170,54)" rx="2" ry="2" />
<text  x="201.49" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="693.8" y="1877" width="0.1" height="15.0" fill="rgb(238,117,0)" rx="2" ry="2" />
<text  x="696.75" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1041.1" y="1893" width="0.2" height="15.0" fill="rgb(230,187,33)" rx="2" ry="2" />
<text  x="1044.07" y="1903.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="1049.2" y="1893" width="0.2" height="15.0" fill="rgb(229,13,2)" rx="2" ry="2" />
<text  x="1052.18" y="1903.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="16.3" y="1829" width="0.2" height="15.0" fill="rgb(235,45,49)" rx="2" ry="2" />
<text  x="19.33" y="1839.5" ></text>
</g>
<g >
<title>sock_sendmsg (305 samples, 5.11%)</title><rect x="242.8" y="1941" width="60.3" height="15.0" fill="rgb(211,58,9)" rx="2" ry="2" />
<text  x="245.80" y="1951.5" >sock_s..</text>
</g>
<g >
<title>futex_wait_queue_me (10 samples, 0.17%)</title><rect x="11.4" y="1957" width="2.0" height="15.0" fill="rgb(236,75,25)" rx="2" ry="2" />
<text  x="14.38" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (14 samples, 0.23%)</title><rect x="336.2" y="1973" width="2.7" height="15.0" fill="rgb(213,73,34)" rx="2" ry="2" />
<text  x="339.15" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(219,16,19)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="105.3" y="37" width="0.6" height="15.0" fill="rgb(212,22,32)" rx="2" ry="2" />
<text  x="108.33" y="47.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="592.9" y="2021" width="0.6" height="15.0" fill="rgb(244,206,15)" rx="2" ry="2" />
<text  x="595.88" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="685.8" y="1909" width="0.4" height="15.0" fill="rgb(251,41,17)" rx="2" ry="2" />
<text  x="688.84" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="582.4" y="2005" width="0.2" height="15.0" fill="rgb(210,205,23)" rx="2" ry="2" />
<text  x="585.40" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="742.4" y="1925" width="0.4" height="15.0" fill="rgb(216,195,28)" rx="2" ry="2" />
<text  x="745.41" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="741.2" y="1957" width="0.2" height="15.0" fill="rgb(225,211,15)" rx="2" ry="2" />
<text  x="744.22" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="257.8" y="1829" width="0.6" height="15.0" fill="rgb(206,79,1)" rx="2" ry="2" />
<text  x="260.83" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="174.8" y="1973" width="0.4" height="15.0" fill="rgb(240,102,26)" rx="2" ry="2" />
<text  x="177.76" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="205.4" y="1989" width="1.4" height="15.0" fill="rgb(237,171,3)" rx="2" ry="2" />
<text  x="208.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="921.6" y="1989" width="0.2" height="15.0" fill="rgb(214,143,41)" rx="2" ry="2" />
<text  x="924.60" y="1999.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="245.8" y="1893" width="0.2" height="15.0" fill="rgb(210,192,17)" rx="2" ry="2" />
<text  x="248.76" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="530.6" y="1973" width="0.2" height="15.0" fill="rgb(215,202,41)" rx="2" ry="2" />
<text  x="533.58" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="209.0" y="1941" width="0.4" height="15.0" fill="rgb(254,122,40)" rx="2" ry="2" />
<text  x="211.97" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1139.6" y="1989" width="0.2" height="15.0" fill="rgb(218,203,15)" rx="2" ry="2" />
<text  x="1142.56" y="1999.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="694.9" y="1877" width="0.2" height="15.0" fill="rgb(232,178,4)" rx="2" ry="2" />
<text  x="697.94" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (9 samples, 0.15%)</title><rect x="362.9" y="1941" width="1.7" height="15.0" fill="rgb(205,32,35)" rx="2" ry="2" />
<text  x="365.85" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="247.5" y="1877" width="0.6" height="15.0" fill="rgb(234,201,40)" rx="2" ry="2" />
<text  x="250.54" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="339.9" y="1957" width="0.4" height="15.0" fill="rgb(240,205,2)" rx="2" ry="2" />
<text  x="342.91" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="165.3" y="1925" width="0.2" height="15.0" fill="rgb(233,199,12)" rx="2" ry="2" />
<text  x="168.26" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="976.4" y="1909" width="1.2" height="15.0" fill="rgb(214,96,50)" rx="2" ry="2" />
<text  x="979.39" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1038.1" y="2037" width="0.2" height="15.0" fill="rgb(209,176,40)" rx="2" ry="2" />
<text  x="1041.10" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="894.1" y="2021" width="0.4" height="15.0" fill="rgb(215,145,45)" rx="2" ry="2" />
<text  x="897.11" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="592.5" y="1989" width="0.2" height="15.0" fill="rgb(213,24,22)" rx="2" ry="2" />
<text  x="595.48" y="1999.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (3 samples, 0.05%)</title><rect x="295.6" y="1749" width="0.6" height="15.0" fill="rgb(248,145,2)" rx="2" ry="2" />
<text  x="298.61" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (15 samples, 0.25%)</title><rect x="75.9" y="37" width="2.9" height="15.0" fill="rgb(231,128,44)" rx="2" ry="2" />
<text  x="78.86" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1177.9" y="2037" width="0.2" height="15.0" fill="rgb(224,217,22)" rx="2" ry="2" />
<text  x="1180.93" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="206.8" y="1989" width="0.2" height="15.0" fill="rgb(214,98,17)" rx="2" ry="2" />
<text  x="209.80" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="183.7" y="1925" width="0.2" height="15.0" fill="rgb(241,33,25)" rx="2" ry="2" />
<text  x="186.66" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="245.2" y="1797" width="0.2" height="15.0" fill="rgb(228,212,36)" rx="2" ry="2" />
<text  x="248.17" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="296.2" y="1733" width="0.2" height="15.0" fill="rgb(228,11,9)" rx="2" ry="2" />
<text  x="299.20" y="1743.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (2 samples, 0.03%)</title><rect x="895.9" y="1941" width="0.4" height="15.0" fill="rgb(242,112,15)" rx="2" ry="2" />
<text  x="898.89" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="400.6" y="1957" width="0.2" height="15.0" fill="rgb(213,56,9)" rx="2" ry="2" />
<text  x="403.63" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (14 samples, 0.23%)</title><rect x="196.9" y="1989" width="2.8" height="15.0" fill="rgb(232,226,32)" rx="2" ry="2" />
<text  x="199.91" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="977.8" y="1909" width="0.6" height="15.0" fill="rgb(205,152,1)" rx="2" ry="2" />
<text  x="980.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1175.4" y="2053" width="0.2" height="15.0" fill="rgb(235,11,5)" rx="2" ry="2" />
<text  x="1178.36" y="2063.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1089.1" y="1989" width="0.2" height="15.0" fill="rgb(217,172,13)" rx="2" ry="2" />
<text  x="1092.13" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (9 samples, 0.15%)</title><rect x="678.9" y="1925" width="1.8" height="15.0" fill="rgb(236,90,38)" rx="2" ry="2" />
<text  x="681.92" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="245.2" y="1845" width="0.2" height="15.0" fill="rgb(220,100,40)" rx="2" ry="2" />
<text  x="248.17" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="110.5" y="37" width="1.0" height="15.0" fill="rgb(220,59,34)" rx="2" ry="2" />
<text  x="113.48" y="47.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (2 samples, 0.03%)</title><rect x="730.5" y="1893" width="0.4" height="15.0" fill="rgb(230,197,34)" rx="2" ry="2" />
<text  x="733.54" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="10.2" y="1909" width="1.0" height="15.0" fill="rgb(207,47,26)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="593.5" y="1989" width="0.2" height="15.0" fill="rgb(251,57,49)" rx="2" ry="2" />
<text  x="596.47" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="185.6" y="1941" width="0.2" height="15.0" fill="rgb(252,126,43)" rx="2" ry="2" />
<text  x="188.64" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="661.5" y="1973" width="0.2" height="15.0" fill="rgb(249,206,39)" rx="2" ry="2" />
<text  x="664.51" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1141.5" y="2005" width="0.2" height="15.0" fill="rgb(216,206,7)" rx="2" ry="2" />
<text  x="1144.54" y="2015.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="293.8" y="1797" width="0.2" height="15.0" fill="rgb(211,192,52)" rx="2" ry="2" />
<text  x="296.83" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (195 samples, 3.27%)</title><rect x="695.7" y="1925" width="38.6" height="15.0" fill="rgb(230,122,51)" rx="2" ry="2" />
<text  x="698.73" y="1935.5" >fol..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.13%)</title><rect x="103.8" y="53" width="1.5" height="15.0" fill="rgb(243,208,45)" rx="2" ry="2" />
<text  x="106.75" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="530.8" y="1973" width="0.2" height="15.0" fill="rgb(234,22,42)" rx="2" ry="2" />
<text  x="533.77" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="334.0" y="1957" width="0.2" height="15.0" fill="rgb(250,33,45)" rx="2" ry="2" />
<text  x="336.98" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="359.1" y="1989" width="0.8" height="15.0" fill="rgb(217,127,26)" rx="2" ry="2" />
<text  x="362.09" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="133.8" y="1973" width="0.6" height="15.0" fill="rgb(212,65,10)" rx="2" ry="2" />
<text  x="136.81" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="586.9" y="1877" width="0.2" height="15.0" fill="rgb(240,3,31)" rx="2" ry="2" />
<text  x="589.95" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="365.8" y="1989" width="1.0" height="15.0" fill="rgb(246,64,21)" rx="2" ry="2" />
<text  x="368.82" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="383.2" y="1909" width="0.2" height="15.0" fill="rgb(209,109,26)" rx="2" ry="2" />
<text  x="386.22" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (109 samples, 1.83%)</title><rect x="264.6" y="1621" width="21.5" height="15.0" fill="rgb(225,40,35)" rx="2" ry="2" />
<text  x="267.55" y="1631.5" >_..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (41 samples, 0.69%)</title><rect x="334.2" y="1989" width="8.1" height="15.0" fill="rgb(234,173,42)" rx="2" ry="2" />
<text  x="337.17" y="1999.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="23.6" y="1845" width="0.8" height="15.0" fill="rgb(213,208,30)" rx="2" ry="2" />
<text  x="26.65" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (3 samples, 0.05%)</title><rect x="607.3" y="2005" width="0.6" height="15.0" fill="rgb(232,40,35)" rx="2" ry="2" />
<text  x="610.32" y="2015.5" ></text>
</g>
<g >
<title>_copy_to_iter (11 samples, 0.18%)</title><rect x="1083.0" y="1909" width="2.2" height="15.0" fill="rgb(217,196,49)" rx="2" ry="2" />
<text  x="1086.00" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (2 samples, 0.03%)</title><rect x="372.7" y="1941" width="0.4" height="15.0" fill="rgb(248,229,49)" rx="2" ry="2" />
<text  x="375.74" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="495.0" y="1845" width="0.2" height="15.0" fill="rgb(211,125,3)" rx="2" ry="2" />
<text  x="497.97" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (1 samples, 0.02%)</title><rect x="592.7" y="2005" width="0.2" height="15.0" fill="rgb(250,87,54)" rx="2" ry="2" />
<text  x="595.68" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="495.0" y="1909" width="0.2" height="15.0" fill="rgb(235,188,13)" rx="2" ry="2" />
<text  x="497.97" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 0.20%)</title><rect x="14.0" y="1829" width="2.3" height="15.0" fill="rgb(238,85,44)" rx="2" ry="2" />
<text  x="16.96" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="186.4" y="1925" width="0.2" height="15.0" fill="rgb(206,100,4)" rx="2" ry="2" />
<text  x="189.43" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1034.9" y="2005" width="0.2" height="15.0" fill="rgb(248,195,6)" rx="2" ry="2" />
<text  x="1037.93" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="167.4" y="1941" width="0.2" height="15.0" fill="rgb(211,43,17)" rx="2" ry="2" />
<text  x="170.44" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1077" width="50.5" height="15.0" fill="rgb(224,170,45)" rx="2" ry="2" />
<text  x="65.02" y="1087.5" >[unkn..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="189.4" y="1973" width="0.2" height="15.0" fill="rgb(237,138,1)" rx="2" ry="2" />
<text  x="192.39" y="1983.5" ></text>
</g>
<g >
<title>inet_sendmsg (292 samples, 4.89%)</title><rect x="243.0" y="1925" width="57.7" height="15.0" fill="rgb(213,59,27)" rx="2" ry="2" />
<text  x="245.99" y="1935.5" >inet_s..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="593.1" y="2005" width="0.4" height="15.0" fill="rgb(236,133,51)" rx="2" ry="2" />
<text  x="596.08" y="2015.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(252,195,53)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="209.0" y="1925" width="0.2" height="15.0" fill="rgb(228,121,37)" rx="2" ry="2" />
<text  x="211.97" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="383.4" y="2021" width="0.6" height="15.0" fill="rgb(254,83,31)" rx="2" ry="2" />
<text  x="386.42" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="401.8" y="1973" width="0.2" height="15.0" fill="rgb(245,77,35)" rx="2" ry="2" />
<text  x="404.82" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="183.7" y="1941" width="0.2" height="15.0" fill="rgb(224,162,3)" rx="2" ry="2" />
<text  x="186.66" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="491.8" y="1925" width="0.2" height="15.0" fill="rgb(217,172,4)" rx="2" ry="2" />
<text  x="494.81" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (74 samples, 1.24%)</title><rect x="481.1" y="1957" width="14.7" height="15.0" fill="rgb(221,155,14)" rx="2" ry="2" />
<text  x="484.13" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1701" width="50.5" height="15.0" fill="rgb(238,38,10)" rx="2" ry="2" />
<text  x="65.02" y="1711.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (4 samples, 0.07%)</title><rect x="444.5" y="2005" width="0.8" height="15.0" fill="rgb(253,60,52)" rx="2" ry="2" />
<text  x="447.54" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="693" width="50.3" height="15.0" fill="rgb(249,21,29)" rx="2" ry="2" />
<text  x="65.02" y="703.5" >[unkn..</text>
</g>
<g >
<title>ip_local_out (147 samples, 2.46%)</title><rect x="262.8" y="1797" width="29.0" height="15.0" fill="rgb(215,46,34)" rx="2" ry="2" />
<text  x="265.77" y="1807.5" >ip..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="592.3" y="1973" width="0.2" height="15.0" fill="rgb(254,108,18)" rx="2" ry="2" />
<text  x="595.29" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1032.8" y="2037" width="0.2" height="15.0" fill="rgb(251,108,7)" rx="2" ry="2" />
<text  x="1035.76" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="209.2" y="1925" width="0.2" height="15.0" fill="rgb(227,130,21)" rx="2" ry="2" />
<text  x="212.17" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="131.4" y="1941" width="0.8" height="15.0" fill="rgb(224,134,29)" rx="2" ry="2" />
<text  x="134.44" y="1951.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="186.6" y="1893" width="0.2" height="15.0" fill="rgb(222,112,30)" rx="2" ry="2" />
<text  x="189.62" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (39 samples, 0.65%)</title><rect x="18.5" y="2021" width="7.7" height="15.0" fill="rgb(230,59,43)" rx="2" ry="2" />
<text  x="21.50" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="181" width="50.3" height="15.0" fill="rgb(210,151,5)" rx="2" ry="2" />
<text  x="65.02" y="191.5" >[unkn..</text>
</g>
<g >
<title>skb_free_head (6 samples, 0.10%)</title><rect x="1046.0" y="1877" width="1.2" height="15.0" fill="rgb(215,162,44)" rx="2" ry="2" />
<text  x="1049.01" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (109 samples, 1.83%)</title><rect x="264.6" y="1605" width="21.5" height="15.0" fill="rgb(228,49,27)" rx="2" ry="2" />
<text  x="267.55" y="1615.5" >i..</text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.17%)</title><rect x="11.4" y="1909" width="2.0" height="15.0" fill="rgb(206,61,15)" rx="2" ry="2" />
<text  x="14.38" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="495.0" y="1925" width="0.2" height="15.0" fill="rgb(228,102,6)" rx="2" ry="2" />
<text  x="497.97" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (35 samples, 0.59%)</title><rect x="18.5" y="2005" width="6.9" height="15.0" fill="rgb(210,58,24)" rx="2" ry="2" />
<text  x="21.50" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="445.9" y="2005" width="0.6" height="15.0" fill="rgb(254,174,47)" rx="2" ry="2" />
<text  x="448.92" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="686.2" y="1925" width="0.2" height="15.0" fill="rgb(228,102,25)" rx="2" ry="2" />
<text  x="689.24" y="1935.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.02%)</title><rect x="11.6" y="1861" width="0.2" height="15.0" fill="rgb(241,178,50)" rx="2" ry="2" />
<text  x="14.58" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (7 samples, 0.12%)</title><rect x="189.8" y="2005" width="1.4" height="15.0" fill="rgb(250,19,40)" rx="2" ry="2" />
<text  x="192.79" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="499.9" y="1957" width="0.4" height="15.0" fill="rgb(207,219,41)" rx="2" ry="2" />
<text  x="502.92" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="181.1" y="1973" width="0.4" height="15.0" fill="rgb(224,184,42)" rx="2" ry="2" />
<text  x="184.09" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="678.1" y="1925" width="0.8" height="15.0" fill="rgb(221,58,33)" rx="2" ry="2" />
<text  x="681.13" y="1935.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="112.5" y="2005" width="0.3" height="15.0" fill="rgb(232,225,29)" rx="2" ry="2" />
<text  x="115.45" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (19 samples, 0.32%)</title><rect x="204.0" y="2005" width="3.8" height="15.0" fill="rgb(252,52,41)" rx="2" ry="2" />
<text  x="207.03" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1653" width="50.5" height="15.0" fill="rgb(223,156,14)" rx="2" ry="2" />
<text  x="65.02" y="1663.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="735.5" y="1941" width="0.2" height="15.0" fill="rgb(237,223,13)" rx="2" ry="2" />
<text  x="738.48" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (76 samples, 1.27%)</title><rect x="847.2" y="1973" width="15.1" height="15.0" fill="rgb(240,23,34)" rx="2" ry="2" />
<text  x="850.23" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="209.0" y="1909" width="0.2" height="15.0" fill="rgb(224,201,0)" rx="2" ry="2" />
<text  x="211.97" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (5 samples, 0.08%)</title><rect x="685.2" y="1925" width="1.0" height="15.0" fill="rgb(211,62,16)" rx="2" ry="2" />
<text  x="688.25" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="733.1" y="1893" width="0.4" height="15.0" fill="rgb(233,223,30)" rx="2" ry="2" />
<text  x="736.11" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (127 samples, 2.13%)</title><rect x="1116.8" y="2021" width="25.1" height="15.0" fill="rgb(230,4,29)" rx="2" ry="2" />
<text  x="1119.82" y="2031.5" >f..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="633.0" y="1973" width="0.8" height="15.0" fill="rgb(211,217,44)" rx="2" ry="2" />
<text  x="636.03" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="199.7" y="1989" width="0.2" height="15.0" fill="rgb(216,216,36)" rx="2" ry="2" />
<text  x="202.68" y="1999.5" ></text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="222.6" y="1861" width="0.2" height="15.0" fill="rgb(237,133,46)" rx="2" ry="2" />
<text  x="225.62" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (47 samples, 0.79%)</title><rect x="374.1" y="2037" width="9.3" height="15.0" fill="rgb(243,70,20)" rx="2" ry="2" />
<text  x="377.13" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="592.9" y="2005" width="0.2" height="15.0" fill="rgb(234,42,37)" rx="2" ry="2" />
<text  x="595.88" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="349.8" y="1925" width="0.8" height="15.0" fill="rgb(249,65,17)" rx="2" ry="2" />
<text  x="352.80" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="738.6" y="1957" width="2.0" height="15.0" fill="rgb(232,140,4)" rx="2" ry="2" />
<text  x="741.65" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="693.8" y="1845" width="0.1" height="15.0" fill="rgb(205,35,3)" rx="2" ry="2" />
<text  x="696.75" y="1855.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (22 samples, 0.37%)</title><rect x="1028.4" y="2037" width="4.4" height="15.0" fill="rgb(248,178,0)" rx="2" ry="2" />
<text  x="1031.41" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="732.9" y="1893" width="0.2" height="15.0" fill="rgb(235,119,5)" rx="2" ry="2" />
<text  x="735.91" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (4 samples, 0.07%)</title><rect x="383.4" y="2037" width="0.8" height="15.0" fill="rgb(233,86,53)" rx="2" ry="2" />
<text  x="386.42" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (81 samples, 1.36%)</title><rect x="930.5" y="1973" width="16.0" height="15.0" fill="rgb(228,197,50)" rx="2" ry="2" />
<text  x="933.50" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (9 samples, 0.15%)</title><rect x="340.3" y="1957" width="1.8" height="15.0" fill="rgb(239,158,19)" rx="2" ry="2" />
<text  x="343.31" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="186.4" y="1893" width="0.2" height="15.0" fill="rgb(242,4,26)" rx="2" ry="2" />
<text  x="189.43" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (23 samples, 0.39%)</title><rect x="593.5" y="2037" width="4.5" height="15.0" fill="rgb(209,173,27)" rx="2" ry="2" />
<text  x="596.47" y="2047.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="256.2" y="1861" width="0.2" height="15.0" fill="rgb(249,115,51)" rx="2" ry="2" />
<text  x="259.25" y="1871.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="1081.0" y="1925" width="0.8" height="15.0" fill="rgb(231,182,38)" rx="2" ry="2" />
<text  x="1084.02" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (46 samples, 0.77%)</title><rect x="720.1" y="1877" width="9.1" height="15.0" fill="rgb(233,175,3)" rx="2" ry="2" />
<text  x="723.06" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="111.9" y="37" width="0.2" height="15.0" fill="rgb(216,127,37)" rx="2" ry="2" />
<text  x="114.86" y="47.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1041.1" y="1941" width="0.2" height="15.0" fill="rgb(230,97,23)" rx="2" ry="2" />
<text  x="1044.07" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (45 samples, 0.75%)</title><rect x="598.0" y="2021" width="8.9" height="15.0" fill="rgb(248,169,49)" rx="2" ry="2" />
<text  x="601.02" y="2031.5" ></text>
</g>
<g >
<title>end_repeat_nmi (2 samples, 0.03%)</title><rect x="13.6" y="1829" width="0.4" height="15.0" fill="rgb(212,159,52)" rx="2" ry="2" />
<text  x="16.56" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="1188.6" y="2053" width="1.0" height="15.0" fill="rgb(253,52,38)" rx="2" ry="2" />
<text  x="1191.62" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="78.8" y="37" width="2.6" height="15.0" fill="rgb(239,160,51)" rx="2" ry="2" />
<text  x="81.83" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="522.5" y="2021" width="0.6" height="15.0" fill="rgb(236,51,36)" rx="2" ry="2" />
<text  x="525.47" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (3 samples, 0.05%)</title><rect x="445.3" y="2005" width="0.6" height="15.0" fill="rgb(212,142,8)" rx="2" ry="2" />
<text  x="448.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="105.3" y="53" width="1.2" height="15.0" fill="rgb(246,140,18)" rx="2" ry="2" />
<text  x="108.33" y="63.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="131.2" y="1893" width="0.2" height="15.0" fill="rgb(247,89,54)" rx="2" ry="2" />
<text  x="134.24" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="400.4" y="1925" width="0.2" height="15.0" fill="rgb(234,82,34)" rx="2" ry="2" />
<text  x="403.43" y="1935.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (7 samples, 0.12%)</title><rect x="224.8" y="2037" width="1.4" height="15.0" fill="rgb(223,214,45)" rx="2" ry="2" />
<text  x="227.80" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (4 samples, 0.07%)</title><rect x="1160.5" y="2053" width="0.8" height="15.0" fill="rgb(209,225,32)" rx="2" ry="2" />
<text  x="1163.53" y="2063.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="222.6" y="1909" width="0.2" height="15.0" fill="rgb(216,17,10)" rx="2" ry="2" />
<text  x="225.62" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="822.1" y="1989" width="0.4" height="15.0" fill="rgb(225,9,30)" rx="2" ry="2" />
<text  x="825.12" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="291.5" y="1637" width="0.1" height="15.0" fill="rgb(234,177,43)" rx="2" ry="2" />
<text  x="294.45" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (5 samples, 0.08%)</title><rect x="607.3" y="2037" width="1.0" height="15.0" fill="rgb(231,31,28)" rx="2" ry="2" />
<text  x="610.32" y="2047.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1082.6" y="1893" width="0.2" height="15.0" fill="rgb(240,74,46)" rx="2" ry="2" />
<text  x="1085.60" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="590.7" y="1893" width="0.2" height="15.0" fill="rgb(229,140,7)" rx="2" ry="2" />
<text  x="593.70" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="493.0" y="1925" width="0.2" height="15.0" fill="rgb(209,60,27)" rx="2" ry="2" />
<text  x="496.00" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1749" width="50.5" height="15.0" fill="rgb(231,72,14)" rx="2" ry="2" />
<text  x="65.02" y="1759.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="876.9" y="2005" width="0.8" height="15.0" fill="rgb(222,106,45)" rx="2" ry="2" />
<text  x="879.90" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.9" y="101" width="0.2" height="15.0" fill="rgb(241,168,26)" rx="2" ry="2" />
<text  x="114.86" y="111.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="729.9" y="1877" width="0.2" height="15.0" fill="rgb(226,20,50)" rx="2" ry="2" />
<text  x="732.95" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="596.4" y="1973" width="0.8" height="15.0" fill="rgb(232,63,4)" rx="2" ry="2" />
<text  x="599.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="403.4" y="2005" width="0.2" height="15.0" fill="rgb(230,224,20)" rx="2" ry="2" />
<text  x="406.40" y="2015.5" ></text>
</g>
<g >
<title>ep_poll (28 samples, 0.47%)</title><rect x="310.0" y="1973" width="5.6" height="15.0" fill="rgb(211,9,13)" rx="2" ry="2" />
<text  x="313.04" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="868.4" y="1877" width="0.2" height="15.0" fill="rgb(241,136,43)" rx="2" ry="2" />
<text  x="871.40" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="617.4" y="1973" width="0.8" height="15.0" fill="rgb(236,166,16)" rx="2" ry="2" />
<text  x="620.41" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="366.4" y="1973" width="0.4" height="15.0" fill="rgb(227,55,26)" rx="2" ry="2" />
<text  x="369.41" y="1983.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="256.2" y="1877" width="0.2" height="15.0" fill="rgb(243,172,13)" rx="2" ry="2" />
<text  x="259.25" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1877" width="50.5" height="15.0" fill="rgb(230,94,49)" rx="2" ry="2" />
<text  x="65.02" y="1887.5" >[unkn..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="240.4" y="1893" width="0.2" height="15.0" fill="rgb(221,125,12)" rx="2" ry="2" />
<text  x="243.42" y="1903.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="440.4" y="1845" width="0.2" height="15.0" fill="rgb(240,26,39)" rx="2" ry="2" />
<text  x="443.39" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (4 samples, 0.07%)</title><rect x="165.5" y="1925" width="0.8" height="15.0" fill="rgb(237,133,40)" rx="2" ry="2" />
<text  x="168.46" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (79 samples, 1.32%)</title><rect x="614.4" y="1989" width="15.7" height="15.0" fill="rgb(223,209,0)" rx="2" ry="2" />
<text  x="617.44" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (40 samples, 0.67%)</title><rect x="569.3" y="1957" width="8.0" height="15.0" fill="rgb(245,89,17)" rx="2" ry="2" />
<text  x="572.34" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="181.3" y="1957" width="0.2" height="15.0" fill="rgb(246,137,53)" rx="2" ry="2" />
<text  x="184.28" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1557" width="50.5" height="15.0" fill="rgb(215,199,30)" rx="2" ry="2" />
<text  x="65.02" y="1567.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="62.0" y="37" width="0.4" height="15.0" fill="rgb(254,186,16)" rx="2" ry="2" />
<text  x="65.02" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="678.5" y="1909" width="0.2" height="15.0" fill="rgb(221,94,50)" rx="2" ry="2" />
<text  x="681.52" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="63.8" y="37" width="0.2" height="15.0" fill="rgb(205,85,52)" rx="2" ry="2" />
<text  x="66.80" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="370.8" y="2005" width="0.2" height="15.0" fill="rgb(222,59,3)" rx="2" ry="2" />
<text  x="373.76" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (137 samples, 2.30%)</title><rect x="608.9" y="2005" width="27.1" height="15.0" fill="rgb(249,18,43)" rx="2" ry="2" />
<text  x="611.90" y="2015.5" >[..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (3 samples, 0.05%)</title><rect x="1035.5" y="2005" width="0.6" height="15.0" fill="rgb(225,42,39)" rx="2" ry="2" />
<text  x="1038.53" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="185.6" y="1877" width="0.2" height="15.0" fill="rgb(215,109,23)" rx="2" ry="2" />
<text  x="188.64" y="1887.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="222.8" y="2021" width="0.2" height="15.0" fill="rgb(209,160,46)" rx="2" ry="2" />
<text  x="225.82" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1140.2" y="2005" width="0.2" height="15.0" fill="rgb(218,134,10)" rx="2" ry="2" />
<text  x="1143.16" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (12 samples, 0.20%)</title><rect x="552.5" y="1989" width="2.4" height="15.0" fill="rgb(241,89,29)" rx="2" ry="2" />
<text  x="555.53" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1509" width="50.5" height="15.0" fill="rgb(223,155,20)" rx="2" ry="2" />
<text  x="65.02" y="1519.5" >[unkn..</text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="398.5" y="1893" width="0.2" height="15.0" fill="rgb(218,166,51)" rx="2" ry="2" />
<text  x="401.45" y="1903.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="356.1" y="1973" width="0.4" height="15.0" fill="rgb(209,228,34)" rx="2" ry="2" />
<text  x="359.13" y="1983.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="639.8" y="2005" width="0.4" height="15.0" fill="rgb(226,124,37)" rx="2" ry="2" />
<text  x="642.76" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="364.6" y="1973" width="0.8" height="15.0" fill="rgb(250,96,34)" rx="2" ry="2" />
<text  x="367.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="300.5" y="1877" width="0.2" height="15.0" fill="rgb(231,152,50)" rx="2" ry="2" />
<text  x="303.55" y="1887.5" ></text>
</g>
<g >
<title>notifier_call_chain (1 samples, 0.02%)</title><rect x="592.9" y="1845" width="0.2" height="15.0" fill="rgb(250,54,44)" rx="2" ry="2" />
<text  x="595.88" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1087.3" y="1941" width="0.2" height="15.0" fill="rgb(232,1,18)" rx="2" ry="2" />
<text  x="1090.35" y="1951.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="112.3" y="933" width="0.2" height="15.0" fill="rgb(211,43,18)" rx="2" ry="2" />
<text  x="115.26" y="943.5" ></text>
</g>
<g >
<title>skb_free_head (9 samples, 0.15%)</title><rect x="280.0" y="1413" width="1.8" height="15.0" fill="rgb(214,199,19)" rx="2" ry="2" />
<text  x="282.98" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="891.5" y="2021" width="0.2" height="15.0" fill="rgb(248,177,11)" rx="2" ry="2" />
<text  x="894.54" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1049.0" y="1909" width="0.4" height="15.0" fill="rgb(214,227,24)" rx="2" ry="2" />
<text  x="1051.98" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (22 samples, 0.37%)</title><rect x="175.2" y="1989" width="4.3" height="15.0" fill="rgb(246,108,30)" rx="2" ry="2" />
<text  x="178.15" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="483.5" y="1925" width="0.2" height="15.0" fill="rgb(223,210,41)" rx="2" ry="2" />
<text  x="486.50" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="174.4" y="1973" width="0.4" height="15.0" fill="rgb(250,207,46)" rx="2" ry="2" />
<text  x="177.36" y="1983.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="530.6" y="1893" width="0.2" height="15.0" fill="rgb(212,224,21)" rx="2" ry="2" />
<text  x="533.58" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="978.8" y="1925" width="0.4" height="15.0" fill="rgb(239,109,23)" rx="2" ry="2" />
<text  x="981.76" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="735.7" y="1925" width="1.4" height="15.0" fill="rgb(210,115,4)" rx="2" ry="2" />
<text  x="738.68" y="1935.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="13.6" y="2053" width="2.9" height="15.0" fill="rgb(223,41,45)" rx="2" ry="2" />
<text  x="16.56" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.79%)</title><rect x="374.1" y="2005" width="9.3" height="15.0" fill="rgb(246,79,7)" rx="2" ry="2" />
<text  x="377.13" y="2015.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="184.4" y="1973" width="0.6" height="15.0" fill="rgb(211,120,2)" rx="2" ry="2" />
<text  x="187.45" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="829.0" y="1989" width="0.6" height="15.0" fill="rgb(228,182,3)" rx="2" ry="2" />
<text  x="832.04" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="659.9" y="1957" width="0.2" height="15.0" fill="rgb(226,110,24)" rx="2" ry="2" />
<text  x="662.93" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1146.3" y="1957" width="0.2" height="15.0" fill="rgb(231,16,42)" rx="2" ry="2" />
<text  x="1149.29" y="1967.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="746.4" y="1973" width="0.2" height="15.0" fill="rgb(227,91,48)" rx="2" ry="2" />
<text  x="749.36" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (6 samples, 0.10%)</title><rect x="1101.6" y="2021" width="1.2" height="15.0" fill="rgb(228,156,32)" rx="2" ry="2" />
<text  x="1104.59" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="186.2" y="1877" width="0.2" height="15.0" fill="rgb(227,168,14)" rx="2" ry="2" />
<text  x="189.23" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="595.3" y="1909" width="0.2" height="15.0" fill="rgb(211,179,19)" rx="2" ry="2" />
<text  x="598.25" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="185.6" y="1893" width="0.2" height="15.0" fill="rgb(250,184,28)" rx="2" ry="2" />
<text  x="188.64" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="384.0" y="2005" width="0.2" height="15.0" fill="rgb(240,224,22)" rx="2" ry="2" />
<text  x="387.02" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1102.4" y="1957" width="0.2" height="15.0" fill="rgb(243,214,50)" rx="2" ry="2" />
<text  x="1105.38" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="399.4" y="1909" width="0.2" height="15.0" fill="rgb(223,30,11)" rx="2" ry="2" />
<text  x="402.44" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="440.4" y="1973" width="0.2" height="15.0" fill="rgb(215,133,39)" rx="2" ry="2" />
<text  x="443.39" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (11 samples, 0.18%)</title><rect x="738.5" y="1973" width="2.1" height="15.0" fill="rgb(246,15,9)" rx="2" ry="2" />
<text  x="741.45" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (8 samples, 0.13%)</title><rect x="11.8" y="1845" width="1.6" height="15.0" fill="rgb(221,69,26)" rx="2" ry="2" />
<text  x="14.78" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (108 samples, 1.81%)</title><rect x="264.8" y="1509" width="21.3" height="15.0" fill="rgb(246,165,17)" rx="2" ry="2" />
<text  x="267.75" y="1519.5" >t..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="494.4" y="1925" width="0.4" height="15.0" fill="rgb(226,202,47)" rx="2" ry="2" />
<text  x="497.38" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="386.8" y="2005" width="3.9" height="15.0" fill="rgb(238,150,8)" rx="2" ry="2" />
<text  x="389.79" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_xmit (186 samples, 3.12%)</title><rect x="260.4" y="1845" width="36.8" height="15.0" fill="rgb(219,215,14)" rx="2" ry="2" />
<text  x="263.40" y="1855.5" >tcp..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="200.9" y="2021" width="1.0" height="15.0" fill="rgb(206,43,27)" rx="2" ry="2" />
<text  x="203.86" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="517" width="50.3" height="15.0" fill="rgb(230,79,37)" rx="2" ry="2" />
<text  x="65.02" y="527.5" >[unkn..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="979.2" y="1925" width="0.7" height="15.0" fill="rgb(214,106,31)" rx="2" ry="2" />
<text  x="982.16" y="1935.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="300.2" y="1845" width="0.2" height="15.0" fill="rgb(210,89,5)" rx="2" ry="2" />
<text  x="303.15" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="111.5" y="53" width="0.2" height="15.0" fill="rgb(251,118,54)" rx="2" ry="2" />
<text  x="114.46" y="63.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::fibers::LoopController*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="372.9" y="1909" width="0.2" height="15.0" fill="rgb(240,90,14)" rx="2" ry="2" />
<text  x="375.94" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="454.8" y="2005" width="2.2" height="15.0" fill="rgb(246,194,50)" rx="2" ry="2" />
<text  x="457.82" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="495.0" y="1877" width="0.2" height="15.0" fill="rgb(238,63,25)" rx="2" ry="2" />
<text  x="497.97" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="885" width="50.3" height="15.0" fill="rgb(220,118,41)" rx="2" ry="2" />
<text  x="65.02" y="895.5" >[unkn..</text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="384.2" y="2005" width="0.2" height="15.0" fill="rgb(227,208,8)" rx="2" ry="2" />
<text  x="387.21" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (9 samples, 0.15%)</title><rect x="1128.7" y="1989" width="1.8" height="15.0" fill="rgb(247,175,2)" rx="2" ry="2" />
<text  x="1131.69" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="866.2" y="1973" width="0.2" height="15.0" fill="rgb(231,106,13)" rx="2" ry="2" />
<text  x="869.22" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="400.6" y="1973" width="0.2" height="15.0" fill="rgb(244,75,44)" rx="2" ry="2" />
<text  x="403.63" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (6 samples, 0.10%)</title><rect x="679.5" y="1909" width="1.2" height="15.0" fill="rgb(227,172,21)" rx="2" ry="2" />
<text  x="682.51" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="469" width="50.3" height="15.0" fill="rgb(241,68,37)" rx="2" ry="2" />
<text  x="65.02" y="479.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (9 samples, 0.15%)</title><rect x="176.7" y="1973" width="1.8" height="15.0" fill="rgb(235,198,43)" rx="2" ry="2" />
<text  x="179.73" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (31 samples, 0.52%)</title><rect x="376.3" y="1941" width="6.1" height="15.0" fill="rgb(244,145,17)" rx="2" ry="2" />
<text  x="379.30" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1045" width="50.5" height="15.0" fill="rgb(235,22,41)" rx="2" ry="2" />
<text  x="65.02" y="1055.5" >[unkn..</text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::AsyncMcClientImpl::getReadBuffer (4 samples, 0.07%)</title><rect x="23.6" y="1973" width="0.8" height="15.0" fill="rgb(225,100,33)" rx="2" ry="2" />
<text  x="26.65" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1685" width="50.5" height="15.0" fill="rgb(208,20,53)" rx="2" ry="2" />
<text  x="65.02" y="1695.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="338.1" y="1941" width="0.4" height="15.0" fill="rgb(224,40,51)" rx="2" ry="2" />
<text  x="341.13" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="980.1" y="1989" width="0.2" height="15.0" fill="rgb(209,56,10)" rx="2" ry="2" />
<text  x="983.15" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1173.8" y="2053" width="0.2" height="15.0" fill="rgb(249,102,53)" rx="2" ry="2" />
<text  x="1176.78" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="240.4" y="1925" width="0.2" height="15.0" fill="rgb(232,138,44)" rx="2" ry="2" />
<text  x="243.42" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="206.8" y="1973" width="0.2" height="15.0" fill="rgb(219,152,28)" rx="2" ry="2" />
<text  x="209.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="245" width="50.3" height="15.0" fill="rgb(238,35,5)" rx="2" ry="2" />
<text  x="65.02" y="255.5" >[unkn..</text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="742.6" y="1909" width="0.2" height="15.0" fill="rgb(249,211,13)" rx="2" ry="2" />
<text  x="745.60" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (36 samples, 0.60%)</title><rect x="648.7" y="2005" width="7.1" height="15.0" fill="rgb(213,146,13)" rx="2" ry="2" />
<text  x="651.66" y="2015.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="540.3" y="1877" width="0.2" height="15.0" fill="rgb(221,84,39)" rx="2" ry="2" />
<text  x="543.27" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="341.5" y="1941" width="0.6" height="15.0" fill="rgb(206,164,48)" rx="2" ry="2" />
<text  x="344.49" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (6 samples, 0.10%)</title><rect x="109.3" y="53" width="1.2" height="15.0" fill="rgb(215,99,40)" rx="2" ry="2" />
<text  x="112.29" y="63.5" ></text>
</g>
<g >
<title>pgd_free (1 samples, 0.02%)</title><rect x="11.6" y="1877" width="0.2" height="15.0" fill="rgb(224,149,49)" rx="2" ry="2" />
<text  x="14.58" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1080.8" y="1877" width="0.2" height="15.0" fill="rgb(226,116,3)" rx="2" ry="2" />
<text  x="1083.82" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4 samples, 0.07%)</title><rect x="332.6" y="1957" width="0.8" height="15.0" fill="rgb(220,24,6)" rx="2" ry="2" />
<text  x="335.59" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="631.8" y="1989" width="2.0" height="15.0" fill="rgb(245,111,35)" rx="2" ry="2" />
<text  x="634.84" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="373.1" y="1973" width="0.2" height="15.0" fill="rgb(253,167,24)" rx="2" ry="2" />
<text  x="376.14" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="835.4" y="1989" width="1.7" height="15.0" fill="rgb(249,195,39)" rx="2" ry="2" />
<text  x="838.37" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (3 samples, 0.05%)</title><rect x="457.0" y="2005" width="0.6" height="15.0" fill="rgb(249,74,22)" rx="2" ry="2" />
<text  x="460.00" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="293.2" y="1813" width="0.2" height="15.0" fill="rgb(239,59,7)" rx="2" ry="2" />
<text  x="296.23" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="343.1" y="1941" width="0.6" height="15.0" fill="rgb(214,204,19)" rx="2" ry="2" />
<text  x="346.07" y="1951.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="128.7" y="1893" width="0.2" height="15.0" fill="rgb(227,72,18)" rx="2" ry="2" />
<text  x="131.67" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="245.2" y="1589" width="0.2" height="15.0" fill="rgb(252,225,4)" rx="2" ry="2" />
<text  x="248.17" y="1599.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="256.2" y="1845" width="0.2" height="15.0" fill="rgb(245,88,27)" rx="2" ry="2" />
<text  x="259.25" y="1855.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (109 samples, 1.83%)</title><rect x="26.4" y="2053" width="21.6" height="15.0" fill="rgb(228,134,3)" rx="2" ry="2" />
<text  x="29.42" y="2063.5" >[..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="678.7" y="1909" width="0.2" height="15.0" fill="rgb(222,168,21)" rx="2" ry="2" />
<text  x="681.72" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (129 samples, 2.16%)</title><rect x="1116.4" y="2037" width="25.5" height="15.0" fill="rgb(217,43,7)" rx="2" ry="2" />
<text  x="1119.42" y="2047.5" >f..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="465.1" y="1925" width="0.2" height="15.0" fill="rgb(243,11,15)" rx="2" ry="2" />
<text  x="468.11" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (6 samples, 0.10%)</title><rect x="342.5" y="1957" width="1.2" height="15.0" fill="rgb(250,170,26)" rx="2" ry="2" />
<text  x="345.48" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="398.9" y="1909" width="0.5" height="15.0" fill="rgb(254,103,24)" rx="2" ry="2" />
<text  x="401.85" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1087.3" y="1925" width="0.2" height="15.0" fill="rgb(242,89,18)" rx="2" ry="2" />
<text  x="1090.35" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="440.4" y="1909" width="0.2" height="15.0" fill="rgb(238,159,31)" rx="2" ry="2" />
<text  x="443.39" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1049.2" y="1861" width="0.2" height="15.0" fill="rgb(239,144,39)" rx="2" ry="2" />
<text  x="1052.18" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (18 samples, 0.30%)</title><rect x="948.5" y="1957" width="3.6" height="15.0" fill="rgb(205,90,38)" rx="2" ry="2" />
<text  x="951.50" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="590.5" y="1893" width="0.2" height="15.0" fill="rgb(245,142,33)" rx="2" ry="2" />
<text  x="593.51" y="1903.5" ></text>
</g>
<g >
<title>copyin (4 samples, 0.07%)</title><rect x="254.3" y="1861" width="0.8" height="15.0" fill="rgb(251,134,50)" rx="2" ry="2" />
<text  x="257.27" y="1871.5" ></text>
</g>
<g >
<title>free (30 samples, 0.50%)</title><rect x="213.9" y="2021" width="6.0" height="15.0" fill="rgb(247,135,46)" rx="2" ry="2" />
<text  x="216.92" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="966.5" y="1877" width="0.2" height="15.0" fill="rgb(225,185,4)" rx="2" ry="2" />
<text  x="969.50" y="1887.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="345.8" y="1909" width="0.2" height="15.0" fill="rgb(217,77,18)" rx="2" ry="2" />
<text  x="348.84" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (15 samples, 0.25%)</title><rect x="392.7" y="1989" width="3.0" height="15.0" fill="rgb(227,112,5)" rx="2" ry="2" />
<text  x="395.72" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (27 samples, 0.45%)</title><rect x="202.4" y="2021" width="5.4" height="15.0" fill="rgb(208,191,18)" rx="2" ry="2" />
<text  x="205.45" y="2031.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="465.3" y="2005" width="2.2" height="15.0" fill="rgb(252,2,7)" rx="2" ry="2" />
<text  x="468.31" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="896.3" y="2037" width="0.2" height="15.0" fill="rgb(251,21,51)" rx="2" ry="2" />
<text  x="899.29" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (15 samples, 0.25%)</title><rect x="303.3" y="1925" width="3.0" height="15.0" fill="rgb(222,68,51)" rx="2" ry="2" />
<text  x="306.32" y="1935.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="241.6" y="1877" width="0.2" height="15.0" fill="rgb(239,102,1)" rx="2" ry="2" />
<text  x="244.61" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="93.1" y="37" width="0.2" height="15.0" fill="rgb(231,209,45)" rx="2" ry="2" />
<text  x="96.07" y="47.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="965" width="50.5" height="15.0" fill="rgb(246,176,53)" rx="2" ry="2" />
<text  x="65.02" y="975.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (3 samples, 0.05%)</title><rect x="526.6" y="2037" width="0.6" height="15.0" fill="rgb(237,217,54)" rx="2" ry="2" />
<text  x="529.62" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (31 samples, 0.52%)</title><rect x="162.3" y="1957" width="6.1" height="15.0" fill="rgb(221,46,43)" rx="2" ry="2" />
<text  x="165.30" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1102.6" y="1973" width="0.2" height="15.0" fill="rgb(254,22,10)" rx="2" ry="2" />
<text  x="1105.58" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="846.8" y="1973" width="0.4" height="15.0" fill="rgb(226,161,46)" rx="2" ry="2" />
<text  x="849.84" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (14 samples, 0.23%)</title><rect x="981.5" y="1989" width="2.8" height="15.0" fill="rgb(231,79,33)" rx="2" ry="2" />
<text  x="984.53" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (12 samples, 0.20%)</title><rect x="489.2" y="1925" width="2.4" height="15.0" fill="rgb(225,98,54)" rx="2" ry="2" />
<text  x="492.24" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (19 samples, 0.32%)</title><rect x="196.3" y="2021" width="3.8" height="15.0" fill="rgb(209,100,51)" rx="2" ry="2" />
<text  x="199.32" y="2031.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="465.1" y="1893" width="0.2" height="15.0" fill="rgb(254,14,1)" rx="2" ry="2" />
<text  x="468.11" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (18 samples, 0.30%)</title><rect x="196.5" y="2005" width="3.6" height="15.0" fill="rgb(205,70,48)" rx="2" ry="2" />
<text  x="199.51" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (8 samples, 0.13%)</title><rect x="294.8" y="1765" width="1.6" height="15.0" fill="rgb(223,1,44)" rx="2" ry="2" />
<text  x="297.81" y="1775.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (12 samples, 0.20%)</title><rect x="1091.9" y="2053" width="2.4" height="15.0" fill="rgb(220,178,52)" rx="2" ry="2" />
<text  x="1094.90" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (108 samples, 1.81%)</title><rect x="264.8" y="1525" width="21.3" height="15.0" fill="rgb(225,150,49)" rx="2" ry="2" />
<text  x="267.75" y="1535.5" >t..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1,039 samples, 17.42%)</title><rect x="659.7" y="2037" width="205.5" height="15.0" fill="rgb(211,155,21)" rx="2" ry="2" />
<text  x="662.73" y="2047.5" >facebook::memcache::thrift:..</text>
</g>
<g >
<title>_itoa_word (3 samples, 0.05%)</title><rect x="1092.3" y="2037" width="0.6" height="15.0" fill="rgb(231,9,18)" rx="2" ry="2" />
<text  x="1095.29" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="678.9" y="1909" width="0.2" height="15.0" fill="rgb(209,1,42)" rx="2" ry="2" />
<text  x="681.92" y="1919.5" ></text>
</g>
<g >
<title>__libc_recv (274 samples, 4.59%)</title><rect x="1037.3" y="2053" width="54.2" height="15.0" fill="rgb(227,212,48)" rx="2" ry="2" />
<text  x="1040.31" y="2063.5" >__lib..</text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="485" width="50.3" height="15.0" fill="rgb(254,156,21)" rx="2" ry="2" />
<text  x="65.02" y="495.5" >[unkn..</text>
</g>
<g >
<title>tcp_event_new_data_sent (12 samples, 0.20%)</title><rect x="294.0" y="1829" width="2.4" height="15.0" fill="rgb(211,54,52)" rx="2" ry="2" />
<text  x="297.02" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="596.0" y="1957" width="0.2" height="15.0" fill="rgb(253,13,46)" rx="2" ry="2" />
<text  x="599.04" y="1967.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="291.6" y="1685" width="0.2" height="15.0" fill="rgb(242,67,31)" rx="2" ry="2" />
<text  x="294.65" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14 samples, 0.23%)</title><rect x="943.4" y="1941" width="2.7" height="15.0" fill="rgb(240,103,36)" rx="2" ry="2" />
<text  x="946.36" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="891.9" y="2037" width="0.4" height="15.0" fill="rgb(245,6,48)" rx="2" ry="2" />
<text  x="894.93" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1188.4" y="2053" width="0.2" height="15.0" fill="rgb(238,45,33)" rx="2" ry="2" />
<text  x="1191.42" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="592.1" y="1925" width="0.2" height="15.0" fill="rgb(215,24,52)" rx="2" ry="2" />
<text  x="595.09" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="604.4" y="1989" width="0.1" height="15.0" fill="rgb(231,103,22)" rx="2" ry="2" />
<text  x="607.35" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="189.6" y="2005" width="0.2" height="15.0" fill="rgb(254,181,23)" rx="2" ry="2" />
<text  x="192.59" y="2015.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="256.0" y="1877" width="0.2" height="15.0" fill="rgb(218,6,43)" rx="2" ry="2" />
<text  x="259.05" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="204.2" y="1957" width="0.2" height="15.0" fill="rgb(210,117,52)" rx="2" ry="2" />
<text  x="207.23" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1381" width="50.5" height="15.0" fill="rgb(245,168,11)" rx="2" ry="2" />
<text  x="65.02" y="1391.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (6 samples, 0.10%)</title><rect x="866.4" y="2005" width="1.2" height="15.0" fill="rgb(206,224,35)" rx="2" ry="2" />
<text  x="869.42" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="736.1" y="1909" width="0.4" height="15.0" fill="rgb(231,101,35)" rx="2" ry="2" />
<text  x="739.08" y="1919.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (2 samples, 0.03%)</title><rect x="1091.9" y="2037" width="0.4" height="15.0" fill="rgb(234,44,13)" rx="2" ry="2" />
<text  x="1094.90" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="222.6" y="1973" width="0.2" height="15.0" fill="rgb(233,6,20)" rx="2" ry="2" />
<text  x="225.62" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (2 samples, 0.03%)</title><rect x="648.3" y="1989" width="0.4" height="15.0" fill="rgb(215,175,45)" rx="2" ry="2" />
<text  x="651.26" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="106.5" y="37" width="0.2" height="15.0" fill="rgb(214,55,48)" rx="2" ry="2" />
<text  x="109.52" y="47.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(220,171,36)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="133.8" y="1957" width="0.6" height="15.0" fill="rgb(230,37,51)" rx="2" ry="2" />
<text  x="136.81" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (828 samples, 13.88%)</title><rect x="60.6" y="2037" width="163.8" height="15.0" fill="rgb(211,144,34)" rx="2" ry="2" />
<text  x="63.63" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (5 samples, 0.08%)</title><rect x="929.5" y="1973" width="1.0" height="15.0" fill="rgb(246,68,20)" rx="2" ry="2" />
<text  x="932.51" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (8 samples, 0.13%)</title><rect x="946.5" y="1973" width="1.6" height="15.0" fill="rgb(229,1,50)" rx="2" ry="2" />
<text  x="949.52" y="1983.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="440.4" y="1861" width="0.2" height="15.0" fill="rgb(235,172,40)" rx="2" ry="2" />
<text  x="443.39" y="1871.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (24 samples, 0.40%)</title><rect x="323.5" y="1957" width="4.7" height="15.0" fill="rgb(207,61,40)" rx="2" ry="2" />
<text  x="326.49" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="128.7" y="1877" width="0.2" height="15.0" fill="rgb(205,206,27)" rx="2" ry="2" />
<text  x="131.67" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="595.8" y="1909" width="0.2" height="15.0" fill="rgb(217,123,39)" rx="2" ry="2" />
<text  x="598.85" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 4.26%)</title><rect x="62.0" y="213" width="50.3" height="15.0" fill="rgb(212,170,42)" rx="2" ry="2" />
<text  x="65.02" y="223.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::performRead (8 samples, 0.13%)</title><rect x="21.9" y="1973" width="1.5" height="15.0" fill="rgb(245,8,46)" rx="2" ry="2" />
<text  x="24.87" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="390.7" y="2005" width="0.4" height="15.0" fill="rgb(212,20,34)" rx="2" ry="2" />
<text  x="393.74" y="2015.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="862.1" y="1861" width="0.2" height="15.0" fill="rgb(209,104,46)" rx="2" ry="2" />
<text  x="865.07" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1157" width="50.5" height="15.0" fill="rgb(215,222,21)" rx="2" ry="2" />
<text  x="65.02" y="1167.5" >[unkn..</text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="315.2" y="1893" width="0.4" height="15.0" fill="rgb(220,188,51)" rx="2" ry="2" />
<text  x="318.19" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="582.0" y="1989" width="0.4" height="15.0" fill="rgb(229,89,35)" rx="2" ry="2" />
<text  x="585.00" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1813" width="50.5" height="15.0" fill="rgb(254,93,7)" rx="2" ry="2" />
<text  x="65.02" y="1823.5" >[unkn..</text>
</g>
<g >
<title>page_frag_free (6 samples, 0.10%)</title><rect x="1046.0" y="1861" width="1.2" height="15.0" fill="rgb(209,19,18)" rx="2" ry="2" />
<text  x="1049.01" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="592.9" y="1909" width="0.2" height="15.0" fill="rgb(242,127,7)" rx="2" ry="2" />
<text  x="595.88" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="729.7" y="1877" width="0.2" height="15.0" fill="rgb(246,59,51)" rx="2" ry="2" />
<text  x="732.75" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="24.6" y="1973" width="0.8" height="15.0" fill="rgb(213,114,25)" rx="2" ry="2" />
<text  x="27.64" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="205.0" y="1941" width="0.4" height="15.0" fill="rgb(248,117,29)" rx="2" ry="2" />
<text  x="208.02" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (48 samples, 0.80%)</title><rect x="882.0" y="2037" width="9.5" height="15.0" fill="rgb(249,116,44)" rx="2" ry="2" />
<text  x="885.04" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (6 samples, 0.10%)</title><rect x="357.7" y="1989" width="1.2" height="15.0" fill="rgb(231,202,54)" rx="2" ry="2" />
<text  x="360.71" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1160.1" y="2053" width="0.4" height="15.0" fill="rgb(235,17,1)" rx="2" ry="2" />
<text  x="1163.13" y="2063.5" ></text>
</g>
<g >
<title>sock_rfree (3 samples, 0.05%)</title><rect x="1047.6" y="1877" width="0.6" height="15.0" fill="rgb(254,28,39)" rx="2" ry="2" />
<text  x="1050.59" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="92.9" y="37" width="0.2" height="15.0" fill="rgb(243,177,48)" rx="2" ry="2" />
<text  x="95.87" y="47.5" ></text>
</g>
<g >
<title>sys_sendmsg (340 samples, 5.70%)</title><rect x="239.0" y="1989" width="67.3" height="15.0" fill="rgb(222,26,39)" rx="2" ry="2" />
<text  x="242.04" y="1999.5" >sys_sen..</text>
</g>
<g >
<title>folly::IOBuf::operator= (9 samples, 0.15%)</title><rect x="520.7" y="2021" width="1.8" height="15.0" fill="rgb(247,109,7)" rx="2" ry="2" />
<text  x="523.69" y="2031.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (2 samples, 0.03%)</title><rect x="371.0" y="2005" width="0.4" height="15.0" fill="rgb(218,43,7)" rx="2" ry="2" />
<text  x="373.96" y="2015.5" ></text>
</g>
<g >
<title>futex_wait (15 samples, 0.25%)</title><rect x="13.6" y="1973" width="2.9" height="15.0" fill="rgb(235,144,26)" rx="2" ry="2" />
<text  x="16.56" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="1146.9" y="2053" width="0.4" height="15.0" fill="rgb(253,52,51)" rx="2" ry="2" />
<text  x="1149.88" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="87.3" y="37" width="0.4" height="15.0" fill="rgb(253,47,44)" rx="2" ry="2" />
<text  x="90.33" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (6 samples, 0.10%)</title><rect x="405.0" y="2037" width="1.2" height="15.0" fill="rgb(241,108,29)" rx="2" ry="2" />
<text  x="407.98" y="2047.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="530.6" y="1909" width="0.2" height="15.0" fill="rgb(206,44,46)" rx="2" ry="2" />
<text  x="533.58" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (4 samples, 0.07%)</title><rect x="951.3" y="1893" width="0.8" height="15.0" fill="rgb(210,138,17)" rx="2" ry="2" />
<text  x="954.27" y="1903.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="1025.2" y="2037" width="0.4" height="15.0" fill="rgb(227,84,13)" rx="2" ry="2" />
<text  x="1028.24" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (47 samples, 0.79%)</title><rect x="374.1" y="1973" width="9.3" height="15.0" fill="rgb(232,69,44)" rx="2" ry="2" />
<text  x="377.13" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (9 samples, 0.15%)</title><rect x="969.1" y="1909" width="1.8" height="15.0" fill="rgb(211,122,29)" rx="2" ry="2" />
<text  x="972.07" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1161.5" y="2053" width="0.2" height="15.0" fill="rgb(226,53,53)" rx="2" ry="2" />
<text  x="1164.52" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="866.6" y="1989" width="1.0" height="15.0" fill="rgb(218,123,39)" rx="2" ry="2" />
<text  x="869.62" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="347.6" y="1941" width="0.2" height="15.0" fill="rgb(221,131,45)" rx="2" ry="2" />
<text  x="350.62" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="865.2" y="2021" width="2.6" height="15.0" fill="rgb(230,139,9)" rx="2" ry="2" />
<text  x="868.23" y="2031.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1091.7" y="2053" width="0.2" height="15.0" fill="rgb(220,183,36)" rx="2" ry="2" />
<text  x="1094.70" y="2063.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (3 samples, 0.05%)</title><rect x="355.1" y="1957" width="0.6" height="15.0" fill="rgb(222,142,42)" rx="2" ry="2" />
<text  x="358.14" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="21.7" y="1893" width="0.2" height="15.0" fill="rgb(253,185,32)" rx="2" ry="2" />
<text  x="24.67" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="199.9" y="1973" width="0.2" height="15.0" fill="rgb(241,222,1)" rx="2" ry="2" />
<text  x="202.88" y="1983.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="185.6" y="1845" width="0.2" height="15.0" fill="rgb(221,168,37)" rx="2" ry="2" />
<text  x="188.64" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="369.0" y="1941" width="0.6" height="15.0" fill="rgb(218,6,22)" rx="2" ry="2" />
<text  x="371.98" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="868.0" y="1925" width="0.2" height="15.0" fill="rgb(239,49,50)" rx="2" ry="2" />
<text  x="871.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (8 samples, 0.13%)</title><rect x="633.8" y="1989" width="1.6" height="15.0" fill="rgb(249,152,2)" rx="2" ry="2" />
<text  x="636.82" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="643.7" y="1989" width="0.2" height="15.0" fill="rgb(230,94,25)" rx="2" ry="2" />
<text  x="646.71" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (5 samples, 0.08%)</title><rect x="351.2" y="1941" width="1.0" height="15.0" fill="rgb(229,211,28)" rx="2" ry="2" />
<text  x="354.18" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="683.7" y="1925" width="0.2" height="15.0" fill="rgb(242,82,23)" rx="2" ry="2" />
<text  x="686.66" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="525.6" y="2037" width="0.2" height="15.0" fill="rgb(230,17,50)" rx="2" ry="2" />
<text  x="528.63" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="540.3" y="1941" width="0.2" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="543.27" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="349.2" y="1941" width="0.2" height="15.0" fill="rgb(236,116,26)" rx="2" ry="2" />
<text  x="352.21" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1049.2" y="1829" width="0.2" height="15.0" fill="rgb(249,22,28)" rx="2" ry="2" />
<text  x="1052.18" y="1839.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1081.2" y="1861" width="0.2" height="15.0" fill="rgb(239,79,52)" rx="2" ry="2" />
<text  x="1084.22" y="1871.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="328.2" y="1957" width="0.6" height="15.0" fill="rgb(242,97,5)" rx="2" ry="2" />
<text  x="331.24" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1085.2" y="1925" width="0.2" height="15.0" fill="rgb(234,170,49)" rx="2" ry="2" />
<text  x="1088.17" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="372.7" y="1925" width="0.4" height="15.0" fill="rgb(232,27,20)" rx="2" ry="2" />
<text  x="375.74" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1103.0" y="2037" width="0.2" height="15.0" fill="rgb(219,172,46)" rx="2" ry="2" />
<text  x="1105.97" y="2047.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="382.2" y="1877" width="0.2" height="15.0" fill="rgb(240,70,2)" rx="2" ry="2" />
<text  x="385.24" y="1887.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (50 samples, 0.84%)</title><rect x="16.5" y="2053" width="9.9" height="15.0" fill="rgb(215,162,23)" rx="2" ry="2" />
<text  x="19.53" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (10 samples, 0.17%)</title><rect x="874.3" y="1973" width="2.0" height="15.0" fill="rgb(253,140,35)" rx="2" ry="2" />
<text  x="877.33" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1525" width="50.5" height="15.0" fill="rgb(249,96,0)" rx="2" ry="2" />
<text  x="65.02" y="1535.5" >[unkn..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (9 samples, 0.15%)</title><rect x="371.6" y="1989" width="1.7" height="15.0" fill="rgb(210,47,6)" rx="2" ry="2" />
<text  x="374.56" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="97.2" y="37" width="0.2" height="15.0" fill="rgb(229,159,13)" rx="2" ry="2" />
<text  x="100.22" y="47.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="333.4" y="1957" width="0.2" height="15.0" fill="rgb(214,32,49)" rx="2" ry="2" />
<text  x="336.38" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.9" y="85" width="0.2" height="15.0" fill="rgb(249,189,24)" rx="2" ry="2" />
<text  x="114.86" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="349.8" y="1941" width="0.8" height="15.0" fill="rgb(250,184,28)" rx="2" ry="2" />
<text  x="352.80" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1178.3" y="2037" width="0.4" height="15.0" fill="rgb(220,193,53)" rx="2" ry="2" />
<text  x="1181.33" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (248 samples, 4.16%)</title><rect x="688.0" y="1957" width="49.1" height="15.0" fill="rgb(227,115,14)" rx="2" ry="2" />
<text  x="691.02" y="1967.5" >foll..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (13 samples, 0.22%)</title><rect x="1104.0" y="2053" width="2.5" height="15.0" fill="rgb(252,19,32)" rx="2" ry="2" />
<text  x="1106.96" y="2063.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="296.2" y="1749" width="0.2" height="15.0" fill="rgb(221,207,6)" rx="2" ry="2" />
<text  x="299.20" y="1759.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (7 samples, 0.12%)</title><rect x="240.8" y="1909" width="1.4" height="15.0" fill="rgb(235,152,17)" rx="2" ry="2" />
<text  x="243.82" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="378.5" y="1845" width="0.2" height="15.0" fill="rgb(248,10,40)" rx="2" ry="2" />
<text  x="381.48" y="1855.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1035.3" y="2005" width="0.2" height="15.0" fill="rgb(228,27,34)" rx="2" ry="2" />
<text  x="1038.33" y="2015.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="894.5" y="2037" width="0.2" height="15.0" fill="rgb(239,34,6)" rx="2" ry="2" />
<text  x="897.51" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1080.8" y="1861" width="0.2" height="15.0" fill="rgb(223,141,1)" rx="2" ry="2" />
<text  x="1083.82" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="459.2" y="1989" width="0.8" height="15.0" fill="rgb(205,156,44)" rx="2" ry="2" />
<text  x="462.18" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (7 samples, 0.12%)</title><rect x="984.9" y="1989" width="1.4" height="15.0" fill="rgb(252,111,49)" rx="2" ry="2" />
<text  x="987.89" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="732.1" y="1893" width="0.2" height="15.0" fill="rgb(221,1,15)" rx="2" ry="2" />
<text  x="735.12" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (5 samples, 0.08%)</title><rect x="384.4" y="2005" width="1.0" height="15.0" fill="rgb(236,63,13)" rx="2" ry="2" />
<text  x="387.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (10 samples, 0.17%)</title><rect x="950.1" y="1909" width="2.0" height="15.0" fill="rgb(249,132,20)" rx="2" ry="2" />
<text  x="953.08" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1941" width="50.5" height="15.0" fill="rgb(216,227,11)" rx="2" ry="2" />
<text  x="65.02" y="1951.5" >[unkn..</text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="286.7" y="1701" width="0.2" height="15.0" fill="rgb(227,171,15)" rx="2" ry="2" />
<text  x="289.70" y="1711.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="286.7" y="1685" width="0.2" height="15.0" fill="rgb(230,88,53)" rx="2" ry="2" />
<text  x="289.70" y="1695.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1080.8" y="1781" width="0.2" height="15.0" fill="rgb(244,0,32)" rx="2" ry="2" />
<text  x="1083.82" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (9 samples, 0.15%)</title><rect x="326.3" y="1909" width="1.7" height="15.0" fill="rgb(232,153,24)" rx="2" ry="2" />
<text  x="329.26" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="186.0" y="1909" width="0.4" height="15.0" fill="rgb(242,218,51)" rx="2" ry="2" />
<text  x="189.03" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1081.4" y="1909" width="0.4" height="15.0" fill="rgb(228,147,14)" rx="2" ry="2" />
<text  x="1084.41" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1175.6" y="2053" width="0.2" height="15.0" fill="rgb(250,224,33)" rx="2" ry="2" />
<text  x="1178.56" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="174.0" y="1973" width="0.4" height="15.0" fill="rgb(248,127,25)" rx="2" ry="2" />
<text  x="176.97" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="868.2" y="1941" width="0.8" height="15.0" fill="rgb(241,51,41)" rx="2" ry="2" />
<text  x="871.20" y="1951.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="241.6" y="1893" width="0.2" height="15.0" fill="rgb(254,59,38)" rx="2" ry="2" />
<text  x="244.61" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1765" width="50.5" height="15.0" fill="rgb(229,196,1)" rx="2" ry="2" />
<text  x="65.02" y="1775.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (27 samples, 0.45%)</title><rect x="395.7" y="1989" width="5.3" height="15.0" fill="rgb(233,9,25)" rx="2" ry="2" />
<text  x="398.69" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="878.7" y="1989" width="3.1" height="15.0" fill="rgb(214,108,9)" rx="2" ry="2" />
<text  x="881.68" y="1999.5" ></text>
</g>
<g >
<title>swake_up_locked.part.2 (1 samples, 0.02%)</title><rect x="530.6" y="1845" width="0.2" height="15.0" fill="rgb(254,83,48)" rx="2" ry="2" />
<text  x="533.58" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="586.9" y="1957" width="0.6" height="15.0" fill="rgb(238,2,54)" rx="2" ry="2" />
<text  x="589.95" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="222.6" y="1925" width="0.2" height="15.0" fill="rgb(223,87,50)" rx="2" ry="2" />
<text  x="225.62" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1477" width="50.5" height="15.0" fill="rgb(222,196,2)" rx="2" ry="2" />
<text  x="65.02" y="1487.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="365.4" y="1989" width="0.2" height="15.0" fill="rgb(218,67,1)" rx="2" ry="2" />
<text  x="368.42" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="659.9" y="2005" width="0.2" height="15.0" fill="rgb(206,221,30)" rx="2" ry="2" />
<text  x="662.93" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="86.3" y="37" width="1.0" height="15.0" fill="rgb(251,50,45)" rx="2" ry="2" />
<text  x="89.35" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="105.9" y="37" width="0.2" height="15.0" fill="rgb(215,13,39)" rx="2" ry="2" />
<text  x="108.93" y="47.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="656.0" y="2021" width="1.2" height="15.0" fill="rgb(215,134,30)" rx="2" ry="2" />
<text  x="658.97" y="2031.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (44 samples, 0.74%)</title><rect x="17.7" y="2037" width="8.7" height="15.0" fill="rgb(241,21,24)" rx="2" ry="2" />
<text  x="20.71" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="829.2" y="1973" width="0.4" height="15.0" fill="rgb(212,176,16)" rx="2" ry="2" />
<text  x="832.24" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1041.1" y="1909" width="0.2" height="15.0" fill="rgb(231,119,7)" rx="2" ry="2" />
<text  x="1044.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.27%)</title><rect x="62.0" y="1573" width="50.5" height="15.0" fill="rgb(213,84,30)" rx="2" ry="2" />
<text  x="65.02" y="1583.5" >[unkn..</text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (19 samples, 0.32%)</title><rect x="948.3" y="1973" width="3.8" height="15.0" fill="rgb(211,20,43)" rx="2" ry="2" />
<text  x="951.30" y="1983.5" ></text>
</g>
<g >
<title>sys_epoll_wait (28 samples, 0.47%)</title><rect x="310.0" y="1989" width="5.6" height="15.0" fill="rgb(224,128,44)" rx="2" ry="2" />
<text  x="313.04" y="1999.5" ></text>
</g>
</g>
</svg>
