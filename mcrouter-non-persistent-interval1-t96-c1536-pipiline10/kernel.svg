<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="525.8" y="1973" width="0.2" height="15.0" fill="rgb(211,12,2)" rx="2" ry="2" />
<text  x="528.83" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="612.7" y="1845" width="0.4" height="15.0" fill="rgb(206,145,47)" rx="2" ry="2" />
<text  x="615.69" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (8 samples, 0.13%)</title><rect x="1136.1" y="2037" width="1.5" height="15.0" fill="rgb(216,121,18)" rx="2" ry="2" />
<text  x="1139.06" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="579.2" y="1973" width="0.2" height="15.0" fill="rgb(211,150,24)" rx="2" ry="2" />
<text  x="582.18" y="1983.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="870.3" y="1925" width="0.2" height="15.0" fill="rgb(210,59,16)" rx="2" ry="2" />
<text  x="873.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1146.6" y="2053" width="0.2" height="15.0" fill="rgb(247,109,34)" rx="2" ry="2" />
<text  x="1149.57" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="987.3" y="1973" width="0.2" height="15.0" fill="rgb(230,142,42)" rx="2" ry="2" />
<text  x="990.32" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="553.4" y="1877" width="0.2" height="15.0" fill="rgb(251,136,52)" rx="2" ry="2" />
<text  x="556.39" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="190.7" y="1909" width="0.2" height="15.0" fill="rgb(215,61,0)" rx="2" ry="2" />
<text  x="193.67" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="293.0" y="1317" width="0.2" height="15.0" fill="rgb(246,131,22)" rx="2" ry="2" />
<text  x="296.00" y="1327.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="14.0" y="1861" width="0.2" height="15.0" fill="rgb(208,142,51)" rx="2" ry="2" />
<text  x="16.97" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="250.8" y="1845" width="0.2" height="15.0" fill="rgb(205,223,36)" rx="2" ry="2" />
<text  x="253.76" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="321.0" y="1717" width="0.2" height="15.0" fill="rgb(248,182,28)" rx="2" ry="2" />
<text  x="323.96" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="873.1" y="1861" width="0.4" height="15.0" fill="rgb(252,189,1)" rx="2" ry="2" />
<text  x="876.09" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (56 samples, 0.94%)</title><rect x="29.6" y="2005" width="11.1" height="15.0" fill="rgb(250,44,2)" rx="2" ry="2" />
<text  x="32.63" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="252.5" y="1877" width="0.2" height="15.0" fill="rgb(243,181,43)" rx="2" ry="2" />
<text  x="255.54" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="55.6" y="1893" width="0.2" height="15.0" fill="rgb(214,47,17)" rx="2" ry="2" />
<text  x="58.61" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="321.8" y="1781" width="0.2" height="15.0" fill="rgb(253,212,28)" rx="2" ry="2" />
<text  x="324.76" y="1791.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="393.5" y="1893" width="0.2" height="15.0" fill="rgb(243,174,3)" rx="2" ry="2" />
<text  x="396.55" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1064.9" y="1813" width="0.2" height="15.0" fill="rgb(251,42,43)" rx="2" ry="2" />
<text  x="1067.86" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="896.3" y="1973" width="0.2" height="15.0" fill="rgb(243,51,23)" rx="2" ry="2" />
<text  x="899.29" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="702.1" y="1717" width="0.2" height="15.0" fill="rgb(232,224,53)" rx="2" ry="2" />
<text  x="705.13" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (22 samples, 0.37%)</title><rect x="144.5" y="1925" width="4.3" height="15.0" fill="rgb(216,34,35)" rx="2" ry="2" />
<text  x="147.46" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1064.9" y="1781" width="0.2" height="15.0" fill="rgb(247,149,18)" rx="2" ry="2" />
<text  x="1067.86" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="634.5" y="1909" width="0.2" height="15.0" fill="rgb(212,159,40)" rx="2" ry="2" />
<text  x="637.51" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="631.7" y="1909" width="0.2" height="15.0" fill="rgb(237,156,0)" rx="2" ry="2" />
<text  x="634.73" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="548.4" y="1989" width="0.2" height="15.0" fill="rgb(208,112,37)" rx="2" ry="2" />
<text  x="551.44" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="546.5" y="1973" width="0.2" height="15.0" fill="rgb(220,211,12)" rx="2" ry="2" />
<text  x="549.45" y="1983.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="262.5" y="1861" width="0.8" height="15.0" fill="rgb(209,201,24)" rx="2" ry="2" />
<text  x="265.46" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (14 samples, 0.24%)</title><rect x="951.8" y="2037" width="2.8" height="15.0" fill="rgb(241,74,29)" rx="2" ry="2" />
<text  x="954.82" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="551.6" y="1957" width="0.4" height="15.0" fill="rgb(244,125,22)" rx="2" ry="2" />
<text  x="554.61" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="271.8" y="1637" width="0.2" height="15.0" fill="rgb(229,39,33)" rx="2" ry="2" />
<text  x="274.78" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="32.8" y="1781" width="0.2" height="15.0" fill="rgb(226,160,0)" rx="2" ry="2" />
<text  x="35.81" y="1791.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="293.0" y="1445" width="0.2" height="15.0" fill="rgb(224,26,3)" rx="2" ry="2" />
<text  x="296.00" y="1455.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="145.1" y="1829" width="0.2" height="15.0" fill="rgb(221,80,42)" rx="2" ry="2" />
<text  x="148.06" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (2 samples, 0.03%)</title><rect x="645.6" y="2005" width="0.4" height="15.0" fill="rgb(238,111,14)" rx="2" ry="2" />
<text  x="648.61" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1158.9" y="1925" width="0.2" height="15.0" fill="rgb(221,87,47)" rx="2" ry="2" />
<text  x="1161.86" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="545.7" y="1893" width="0.2" height="15.0" fill="rgb(230,111,14)" rx="2" ry="2" />
<text  x="548.66" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="399.1" y="1861" width="0.2" height="15.0" fill="rgb(208,20,17)" rx="2" ry="2" />
<text  x="402.10" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="845.7" y="1861" width="0.4" height="15.0" fill="rgb(209,101,22)" rx="2" ry="2" />
<text  x="848.72" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="906.2" y="1989" width="0.2" height="15.0" fill="rgb(230,148,15)" rx="2" ry="2" />
<text  x="909.21" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="827.1" y="1685" width="0.2" height="15.0" fill="rgb(244,221,6)" rx="2" ry="2" />
<text  x="830.08" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="167.9" y="2005" width="0.2" height="15.0" fill="rgb(242,104,37)" rx="2" ry="2" />
<text  x="170.86" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.67%)</title><rect x="104.4" y="53" width="7.9" height="15.0" fill="rgb(248,119,42)" rx="2" ry="2" />
<text  x="107.40" y="63.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="879.6" y="1877" width="0.2" height="15.0" fill="rgb(210,129,4)" rx="2" ry="2" />
<text  x="882.63" y="1887.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="690.0" y="1973" width="2.6" height="15.0" fill="rgb(229,149,35)" rx="2" ry="2" />
<text  x="693.04" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="402.9" y="1813" width="0.2" height="15.0" fill="rgb(222,71,35)" rx="2" ry="2" />
<text  x="405.87" y="1823.5" ></text>
</g>
<g >
<title>security_file_fcntl (1 samples, 0.02%)</title><rect x="561.9" y="1941" width="0.2" height="15.0" fill="rgb(221,30,34)" rx="2" ry="2" />
<text  x="564.92" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (30 samples, 0.50%)</title><rect x="61.8" y="1957" width="5.9" height="15.0" fill="rgb(224,85,46)" rx="2" ry="2" />
<text  x="64.76" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1080.9" y="1909" width="0.2" height="15.0" fill="rgb(210,33,41)" rx="2" ry="2" />
<text  x="1083.92" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="335.6" y="1653" width="0.2" height="15.0" fill="rgb(213,177,46)" rx="2" ry="2" />
<text  x="338.64" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="618.0" y="2037" width="0.2" height="15.0" fill="rgb(212,164,9)" rx="2" ry="2" />
<text  x="621.05" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="154.0" y="1893" width="0.4" height="15.0" fill="rgb(217,141,34)" rx="2" ry="2" />
<text  x="156.98" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="509.2" y="1845" width="0.2" height="15.0" fill="rgb(227,113,8)" rx="2" ry="2" />
<text  x="512.17" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="121.7" y="165" width="0.2" height="15.0" fill="rgb(235,87,17)" rx="2" ry="2" />
<text  x="124.65" y="175.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="635.9" y="1989" width="1.6" height="15.0" fill="rgb(212,182,9)" rx="2" ry="2" />
<text  x="638.90" y="1999.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="326.7" y="1573" width="0.2" height="15.0" fill="rgb(219,97,53)" rx="2" ry="2" />
<text  x="329.72" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="733.7" y="1765" width="0.4" height="15.0" fill="rgb(236,170,33)" rx="2" ry="2" />
<text  x="736.67" y="1775.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="627.6" y="2005" width="0.6" height="15.0" fill="rgb(211,96,36)" rx="2" ry="2" />
<text  x="630.57" y="2015.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1101.9" y="1557" width="0.2" height="15.0" fill="rgb(219,16,35)" rx="2" ry="2" />
<text  x="1104.95" y="1567.5" ></text>
</g>
<g >
<title>folly::netops::close (625 samples, 10.50%)</title><rect x="708.3" y="1925" width="123.9" height="15.0" fill="rgb(225,18,28)" rx="2" ry="2" />
<text  x="711.28" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1006.2" y="1845" width="0.2" height="15.0" fill="rgb(221,65,2)" rx="2" ry="2" />
<text  x="1009.16" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1012.5" y="2021" width="0.2" height="15.0" fill="rgb(248,66,13)" rx="2" ry="2" />
<text  x="1015.50" y="2031.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="278.1" y="1877" width="0.2" height="15.0" fill="rgb(228,10,22)" rx="2" ry="2" />
<text  x="281.13" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1365" width="17.7" height="15.0" fill="rgb(246,18,19)" rx="2" ry="2" />
<text  x="107.40" y="1375.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="414.0" y="1749" width="0.2" height="15.0" fill="rgb(231,6,43)" rx="2" ry="2" />
<text  x="416.98" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="300.1" y="1685" width="0.2" height="15.0" fill="rgb(232,117,1)" rx="2" ry="2" />
<text  x="303.14" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="734.7" y="1717" width="0.2" height="15.0" fill="rgb(229,76,4)" rx="2" ry="2" />
<text  x="737.66" y="1727.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="572.4" y="1781" width="0.2" height="15.0" fill="rgb(207,142,3)" rx="2" ry="2" />
<text  x="575.43" y="1791.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="14.0" y="1765" width="0.2" height="15.0" fill="rgb(223,149,46)" rx="2" ry="2" />
<text  x="16.97" y="1775.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="886.0" y="2005" width="0.2" height="15.0" fill="rgb(222,222,44)" rx="2" ry="2" />
<text  x="888.98" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="789" width="17.5" height="15.0" fill="rgb(230,32,6)" rx="2" ry="2" />
<text  x="107.40" y="799.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="891.1" y="1989" width="0.2" height="15.0" fill="rgb(210,144,11)" rx="2" ry="2" />
<text  x="894.13" y="1999.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="322.0" y="1797" width="0.2" height="15.0" fill="rgb(206,40,21)" rx="2" ry="2" />
<text  x="324.96" y="1807.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="333.5" y="1541" width="0.2" height="15.0" fill="rgb(249,26,47)" rx="2" ry="2" />
<text  x="336.46" y="1551.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (2 samples, 0.03%)</title><rect x="960.1" y="2037" width="0.4" height="15.0" fill="rgb(248,63,38)" rx="2" ry="2" />
<text  x="963.15" y="2047.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="179.8" y="1909" width="0.2" height="15.0" fill="rgb(248,63,0)" rx="2" ry="2" />
<text  x="182.76" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="875.3" y="1925" width="0.2" height="15.0" fill="rgb(244,46,37)" rx="2" ry="2" />
<text  x="878.27" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (10 samples, 0.17%)</title><rect x="531.8" y="2037" width="2.0" height="15.0" fill="rgb(220,22,43)" rx="2" ry="2" />
<text  x="534.78" y="2047.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="729.1" y="1637" width="0.2" height="15.0" fill="rgb(208,32,40)" rx="2" ry="2" />
<text  x="732.11" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (3 samples, 0.05%)</title><rect x="46.1" y="1989" width="0.6" height="15.0" fill="rgb(224,116,13)" rx="2" ry="2" />
<text  x="49.09" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="841.8" y="1621" width="0.1" height="15.0" fill="rgb(249,80,27)" rx="2" ry="2" />
<text  x="844.75" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (13 samples, 0.22%)</title><rect x="292.8" y="1669" width="2.6" height="15.0" fill="rgb(224,10,51)" rx="2" ry="2" />
<text  x="295.80" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="561.7" y="1765" width="0.2" height="15.0" fill="rgb(227,83,3)" rx="2" ry="2" />
<text  x="564.72" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (51 samples, 0.86%)</title><rect x="169.3" y="2005" width="10.1" height="15.0" fill="rgb(227,216,39)" rx="2" ry="2" />
<text  x="172.25" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="901" width="17.5" height="15.0" fill="rgb(215,99,47)" rx="2" ry="2" />
<text  x="107.40" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="806.5" y="1525" width="0.1" height="15.0" fill="rgb(233,25,21)" rx="2" ry="2" />
<text  x="809.45" y="1535.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (11 samples, 0.18%)</title><rect x="52.0" y="1973" width="2.2" height="15.0" fill="rgb(231,58,35)" rx="2" ry="2" />
<text  x="55.04" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="278.7" y="1845" width="0.2" height="15.0" fill="rgb(223,129,8)" rx="2" ry="2" />
<text  x="281.72" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (1 samples, 0.02%)</title><rect x="903.0" y="2037" width="0.2" height="15.0" fill="rgb(214,15,28)" rx="2" ry="2" />
<text  x="906.03" y="2047.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (21 samples, 0.35%)</title><rect x="17.5" y="2069" width="4.2" height="15.0" fill="rgb(245,30,7)" rx="2" ry="2" />
<text  x="20.54" y="2079.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="668.2" y="1653" width="0.2" height="15.0" fill="rgb(254,222,7)" rx="2" ry="2" />
<text  x="671.22" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="85.6" y="1973" width="0.2" height="15.0" fill="rgb(216,7,27)" rx="2" ry="2" />
<text  x="88.56" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="946.7" y="1989" width="0.2" height="15.0" fill="rgb(210,29,13)" rx="2" ry="2" />
<text  x="949.66" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="702.1" y="1797" width="0.2" height="15.0" fill="rgb(233,204,48)" rx="2" ry="2" />
<text  x="705.13" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="394.1" y="1829" width="0.2" height="15.0" fill="rgb(228,44,11)" rx="2" ry="2" />
<text  x="397.14" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (26 samples, 0.44%)</title><rect x="1140.2" y="2037" width="5.2" height="15.0" fill="rgb(228,39,34)" rx="2" ry="2" />
<text  x="1143.22" y="2047.5" ></text>
</g>
<g >
<title>rb_erase (8 samples, 0.13%)</title><rect x="1110.3" y="1509" width="1.6" height="15.0" fill="rgb(241,221,0)" rx="2" ry="2" />
<text  x="1113.28" y="1519.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="365.4" y="1605" width="0.2" height="15.0" fill="rgb(207,186,53)" rx="2" ry="2" />
<text  x="368.39" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (3 samples, 0.05%)</title><rect x="962.9" y="2005" width="0.6" height="15.0" fill="rgb(232,3,29)" rx="2" ry="2" />
<text  x="965.92" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="73.1" y="1925" width="0.4" height="15.0" fill="rgb(244,113,15)" rx="2" ry="2" />
<text  x="76.07" y="1935.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (32 samples, 0.54%)</title><rect x="322.2" y="1829" width="6.3" height="15.0" fill="rgb(232,210,42)" rx="2" ry="2" />
<text  x="325.15" y="1839.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="579.2" y="1941" width="0.2" height="15.0" fill="rgb(232,119,49)" rx="2" ry="2" />
<text  x="582.18" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="413.6" y="1973" width="0.6" height="15.0" fill="rgb(226,107,39)" rx="2" ry="2" />
<text  x="416.58" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1123.2" y="2021" width="0.4" height="15.0" fill="rgb(207,2,15)" rx="2" ry="2" />
<text  x="1126.17" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="541.1" y="1941" width="1.2" height="15.0" fill="rgb(211,81,20)" rx="2" ry="2" />
<text  x="544.10" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="549.2" y="1813" width="0.2" height="15.0" fill="rgb(239,138,29)" rx="2" ry="2" />
<text  x="552.23" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="927.0" y="1925" width="0.2" height="15.0" fill="rgb(215,23,1)" rx="2" ry="2" />
<text  x="930.03" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="552.6" y="1669" width="0.2" height="15.0" fill="rgb(233,67,19)" rx="2" ry="2" />
<text  x="555.60" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (50 samples, 0.84%)</title><rect x="1101.9" y="1589" width="10.0" height="15.0" fill="rgb(252,135,32)" rx="2" ry="2" />
<text  x="1104.95" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1123.4" y="1957" width="0.2" height="15.0" fill="rgb(220,63,45)" rx="2" ry="2" />
<text  x="1126.36" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (4 samples, 0.07%)</title><rect x="873.9" y="1909" width="0.8" height="15.0" fill="rgb(230,105,47)" rx="2" ry="2" />
<text  x="876.88" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="516.5" y="1925" width="0.4" height="15.0" fill="rgb(246,67,54)" rx="2" ry="2" />
<text  x="519.51" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="214.1" y="1829" width="0.2" height="15.0" fill="rgb(218,130,46)" rx="2" ry="2" />
<text  x="217.07" y="1839.5" ></text>
</g>
<g >
<title>security_socket_accept (2 samples, 0.03%)</title><rect x="389.6" y="1957" width="0.4" height="15.0" fill="rgb(231,72,27)" rx="2" ry="2" />
<text  x="392.58" y="1967.5" ></text>
</g>
<g >
<title>__d_alloc (14 samples, 0.24%)</title><rect x="406.8" y="1925" width="2.8" height="15.0" fill="rgb(222,131,45)" rx="2" ry="2" />
<text  x="409.84" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="63.9" y="1861" width="0.4" height="15.0" fill="rgb(228,8,39)" rx="2" ry="2" />
<text  x="66.94" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="103.4" y="1477" width="0.2" height="15.0" fill="rgb(212,120,2)" rx="2" ry="2" />
<text  x="106.41" y="1487.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="32.8" y="1941" width="0.2" height="15.0" fill="rgb(231,195,13)" rx="2" ry="2" />
<text  x="35.81" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="167.3" y="1989" width="0.4" height="15.0" fill="rgb(253,219,6)" rx="2" ry="2" />
<text  x="170.27" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="425.7" y="2005" width="0.4" height="15.0" fill="rgb(236,150,12)" rx="2" ry="2" />
<text  x="428.68" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="386.8" y="1925" width="0.2" height="15.0" fill="rgb(232,67,18)" rx="2" ry="2" />
<text  x="389.81" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="689.4" y="1669" width="0.2" height="15.0" fill="rgb(220,83,50)" rx="2" ry="2" />
<text  x="692.44" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (31 samples, 0.52%)</title><rect x="1123.6" y="2037" width="6.1" height="15.0" fill="rgb(216,6,46)" rx="2" ry="2" />
<text  x="1126.56" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1123.4" y="1749" width="0.2" height="15.0" fill="rgb(245,156,13)" rx="2" ry="2" />
<text  x="1126.36" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (2 samples, 0.03%)</title><rect x="540.1" y="1957" width="0.4" height="15.0" fill="rgb(240,136,53)" rx="2" ry="2" />
<text  x="543.11" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="855.6" y="1957" width="0.2" height="15.0" fill="rgb(249,136,32)" rx="2" ry="2" />
<text  x="858.63" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="148.6" y="1909" width="0.2" height="15.0" fill="rgb(216,96,25)" rx="2" ry="2" />
<text  x="151.63" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="694.2" y="1973" width="0.2" height="15.0" fill="rgb(224,95,6)" rx="2" ry="2" />
<text  x="697.20" y="1983.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="335.6" y="1605" width="0.2" height="15.0" fill="rgb(239,47,26)" rx="2" ry="2" />
<text  x="338.64" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="58.2" y="1909" width="0.2" height="15.0" fill="rgb(229,201,18)" rx="2" ry="2" />
<text  x="61.19" y="1919.5" ></text>
</g>
<g >
<title>sys_sendmsg (497 samples, 8.35%)</title><rect x="244.0" y="1989" width="98.6" height="15.0" fill="rgb(212,139,44)" rx="2" ry="2" />
<text  x="247.02" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (2 samples, 0.03%)</title><rect x="73.5" y="1957" width="0.4" height="15.0" fill="rgb(251,88,53)" rx="2" ry="2" />
<text  x="76.46" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="120.3" y="37" width="0.2" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="123.27" y="47.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="275.2" y="1797" width="0.2" height="15.0" fill="rgb(205,70,34)" rx="2" ry="2" />
<text  x="278.15" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="474.7" y="1925" width="1.0" height="15.0" fill="rgb(247,156,8)" rx="2" ry="2" />
<text  x="477.66" y="1935.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="657.3" y="1925" width="0.2" height="15.0" fill="rgb(237,166,50)" rx="2" ry="2" />
<text  x="660.31" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="343.6" y="1973" width="0.2" height="15.0" fill="rgb(206,74,51)" rx="2" ry="2" />
<text  x="346.57" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="549.6" y="1941" width="0.2" height="15.0" fill="rgb(236,163,21)" rx="2" ry="2" />
<text  x="552.63" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="875.1" y="1621" width="0.2" height="15.0" fill="rgb(231,68,29)" rx="2" ry="2" />
<text  x="878.07" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="501.8" y="1813" width="0.2" height="15.0" fill="rgb(206,60,50)" rx="2" ry="2" />
<text  x="504.83" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.70%)</title><rect x="104.0" y="1733" width="20.0" height="15.0" fill="rgb(227,51,42)" rx="2" ry="2" />
<text  x="107.00" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="835.4" y="1893" width="0.2" height="15.0" fill="rgb(218,196,11)" rx="2" ry="2" />
<text  x="838.41" y="1903.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (2 samples, 0.03%)</title><rect x="571.8" y="1973" width="0.4" height="15.0" fill="rgb(231,46,8)" rx="2" ry="2" />
<text  x="574.84" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="584.1" y="1909" width="1.0" height="15.0" fill="rgb(207,8,38)" rx="2" ry="2" />
<text  x="587.13" y="1919.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.03%)</title><rect x="467.3" y="1957" width="0.4" height="15.0" fill="rgb(230,204,50)" rx="2" ry="2" />
<text  x="470.32" y="1967.5" ></text>
</g>
<g >
<title>__alloc_fd (5 samples, 0.08%)</title><rect x="362.8" y="1941" width="1.0" height="15.0" fill="rgb(226,167,11)" rx="2" ry="2" />
<text  x="365.81" y="1951.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (38 samples, 0.64%)</title><rect x="806.8" y="1717" width="7.6" height="15.0" fill="rgb(244,228,22)" rx="2" ry="2" />
<text  x="809.85" y="1727.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (5 samples, 0.08%)</title><rect x="75.6" y="1957" width="1.0" height="15.0" fill="rgb(233,72,34)" rx="2" ry="2" />
<text  x="78.64" y="1967.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="1068.8" y="1797" width="0.2" height="15.0" fill="rgb(206,57,1)" rx="2" ry="2" />
<text  x="1071.83" y="1807.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="1015.3" y="2037" width="0.8" height="15.0" fill="rgb(219,97,29)" rx="2" ry="2" />
<text  x="1018.28" y="2047.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="167.9" y="1669" width="0.2" height="15.0" fill="rgb(243,1,31)" rx="2" ry="2" />
<text  x="170.86" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="861.8" y="1973" width="0.2" height="15.0" fill="rgb(246,156,2)" rx="2" ry="2" />
<text  x="864.78" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="621.2" y="1989" width="0.2" height="15.0" fill="rgb(216,7,47)" rx="2" ry="2" />
<text  x="624.22" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="311.0" y="1637" width="0.4" height="15.0" fill="rgb(210,19,38)" rx="2" ry="2" />
<text  x="314.05" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="133.0" y="1957" width="0.2" height="15.0" fill="rgb(253,122,4)" rx="2" ry="2" />
<text  x="135.96" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="945.7" y="1973" width="0.2" height="15.0" fill="rgb(246,215,20)" rx="2" ry="2" />
<text  x="948.67" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="597" width="17.5" height="15.0" fill="rgb(244,110,38)" rx="2" ry="2" />
<text  x="107.40" y="607.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.76%)</title><rect x="104.0" y="1797" width="20.8" height="15.0" fill="rgb(241,36,19)" rx="2" ry="2" />
<text  x="107.00" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="927.0" y="1909" width="0.2" height="15.0" fill="rgb(228,152,37)" rx="2" ry="2" />
<text  x="930.03" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="650.2" y="1957" width="0.2" height="15.0" fill="rgb(226,136,5)" rx="2" ry="2" />
<text  x="653.17" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="67.1" y="1845" width="0.2" height="15.0" fill="rgb(231,178,31)" rx="2" ry="2" />
<text  x="70.12" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1146.2" y="2053" width="0.2" height="15.0" fill="rgb(249,95,28)" rx="2" ry="2" />
<text  x="1149.17" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.8" y="1733" width="0.1" height="15.0" fill="rgb(215,73,44)" rx="2" ry="2" />
<text  x="844.75" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="328.3" y="1717" width="0.2" height="15.0" fill="rgb(241,97,32)" rx="2" ry="2" />
<text  x="331.30" y="1727.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="689.4" y="1541" width="0.2" height="15.0" fill="rgb(222,110,14)" rx="2" ry="2" />
<text  x="692.44" y="1551.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="579.2" y="1845" width="0.2" height="15.0" fill="rgb(219,59,6)" rx="2" ry="2" />
<text  x="582.18" y="1855.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (3 samples, 0.05%)</title><rect x="571.6" y="2005" width="0.6" height="15.0" fill="rgb(247,33,12)" rx="2" ry="2" />
<text  x="574.64" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="741" width="17.5" height="15.0" fill="rgb(253,224,23)" rx="2" ry="2" />
<text  x="107.40" y="751.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1051.6" y="1941" width="0.2" height="15.0" fill="rgb(211,184,16)" rx="2" ry="2" />
<text  x="1054.57" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11 samples, 0.18%)</title><rect x="390.4" y="1925" width="2.2" height="15.0" fill="rgb(245,52,37)" rx="2" ry="2" />
<text  x="393.38" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="689.0" y="1909" width="0.2" height="15.0" fill="rgb(242,20,9)" rx="2" ry="2" />
<text  x="692.05" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="118.1" y="53" width="0.4" height="15.0" fill="rgb(218,88,27)" rx="2" ry="2" />
<text  x="121.08" y="63.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="695.4" y="1893" width="0.2" height="15.0" fill="rgb(232,7,48)" rx="2" ry="2" />
<text  x="698.39" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (5 samples, 0.08%)</title><rect x="870.5" y="1941" width="1.0" height="15.0" fill="rgb(239,82,46)" rx="2" ry="2" />
<text  x="873.51" y="1951.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="702.1" y="1589" width="0.2" height="15.0" fill="rgb(225,132,30)" rx="2" ry="2" />
<text  x="705.13" y="1599.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="550.0" y="1941" width="0.2" height="15.0" fill="rgb(206,132,34)" rx="2" ry="2" />
<text  x="553.02" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (98 samples, 1.65%)</title><rect x="48.7" y="1989" width="19.4" height="15.0" fill="rgb(249,173,15)" rx="2" ry="2" />
<text  x="51.67" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="668.4" y="1797" width="0.2" height="15.0" fill="rgb(205,165,39)" rx="2" ry="2" />
<text  x="671.42" y="1807.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="298.0" y="1621" width="0.2" height="15.0" fill="rgb(218,133,20)" rx="2" ry="2" />
<text  x="300.96" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="572.2" y="1941" width="0.2" height="15.0" fill="rgb(228,103,43)" rx="2" ry="2" />
<text  x="575.24" y="1951.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="72.5" y="1877" width="0.6" height="15.0" fill="rgb(207,83,48)" rx="2" ry="2" />
<text  x="75.47" y="1887.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="349.5" y="2037" width="0.6" height="15.0" fill="rgb(215,134,16)" rx="2" ry="2" />
<text  x="352.52" y="2047.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1159.1" y="1957" width="0.2" height="15.0" fill="rgb(245,208,26)" rx="2" ry="2" />
<text  x="1162.06" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="906.6" y="2037" width="0.4" height="15.0" fill="rgb(205,47,33)" rx="2" ry="2" />
<text  x="909.60" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.34%)</title><rect x="674.0" y="1973" width="15.8" height="15.0" fill="rgb(244,2,5)" rx="2" ry="2" />
<text  x="676.97" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (11 samples, 0.18%)</title><rect x="171.8" y="1973" width="2.2" height="15.0" fill="rgb(242,173,27)" rx="2" ry="2" />
<text  x="174.83" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="634.1" y="1909" width="0.2" height="15.0" fill="rgb(237,125,38)" rx="2" ry="2" />
<text  x="637.11" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="879.2" y="1893" width="0.2" height="15.0" fill="rgb(207,156,15)" rx="2" ry="2" />
<text  x="882.23" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="137.9" y="1989" width="0.6" height="15.0" fill="rgb(246,205,25)" rx="2" ry="2" />
<text  x="140.92" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(214,32,19)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="277.7" y="1845" width="0.2" height="15.0" fill="rgb(220,85,25)" rx="2" ry="2" />
<text  x="280.73" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="683.1" y="1909" width="0.2" height="15.0" fill="rgb(205,146,4)" rx="2" ry="2" />
<text  x="686.10" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="1146.0" y="2053" width="0.2" height="15.0" fill="rgb(224,65,0)" rx="2" ry="2" />
<text  x="1148.97" y="2063.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="838.0" y="1845" width="0.2" height="15.0" fill="rgb(212,131,6)" rx="2" ry="2" />
<text  x="840.98" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="442.3" y="1925" width="0.2" height="15.0" fill="rgb(235,63,53)" rx="2" ry="2" />
<text  x="445.34" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="101.4" y="2005" width="0.2" height="15.0" fill="rgb(251,181,54)" rx="2" ry="2" />
<text  x="104.43" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (12 samples, 0.20%)</title><rect x="64.9" y="1925" width="2.4" height="15.0" fill="rgb(219,67,49)" rx="2" ry="2" />
<text  x="67.93" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="360.2" y="1973" width="0.2" height="15.0" fill="rgb(222,178,19)" rx="2" ry="2" />
<text  x="363.23" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (25 samples, 0.42%)</title><rect x="542.5" y="1989" width="4.9" height="15.0" fill="rgb(208,103,33)" rx="2" ry="2" />
<text  x="545.49" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="897.7" y="1989" width="1.4" height="15.0" fill="rgb(243,57,54)" rx="2" ry="2" />
<text  x="900.68" y="1999.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="103.0" y="2021" width="0.2" height="15.0" fill="rgb(207,197,16)" rx="2" ry="2" />
<text  x="106.01" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="487.4" y="1829" width="0.4" height="15.0" fill="rgb(242,22,24)" rx="2" ry="2" />
<text  x="490.35" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1096.8" y="1877" width="0.2" height="15.0" fill="rgb(215,69,22)" rx="2" ry="2" />
<text  x="1099.79" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="167.7" y="1989" width="0.2" height="15.0" fill="rgb(247,223,9)" rx="2" ry="2" />
<text  x="170.66" y="1999.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="838.0" y="1861" width="0.2" height="15.0" fill="rgb(249,13,11)" rx="2" ry="2" />
<text  x="840.98" y="1871.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="223.8" y="1813" width="0.8" height="15.0" fill="rgb(241,4,12)" rx="2" ry="2" />
<text  x="226.79" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="631.5" y="1925" width="0.2" height="15.0" fill="rgb(225,86,17)" rx="2" ry="2" />
<text  x="634.53" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (410 samples, 6.89%)</title><rect x="255.7" y="1893" width="81.3" height="15.0" fill="rgb(244,209,43)" rx="2" ry="2" />
<text  x="258.72" y="1903.5" >tcp_sendm..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="646.2" y="1893" width="0.2" height="15.0" fill="rgb(217,187,42)" rx="2" ry="2" />
<text  x="649.21" y="1903.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="243.6" y="1893" width="0.2" height="15.0" fill="rgb(249,156,44)" rx="2" ry="2" />
<text  x="246.62" y="1903.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.02%)</title><rect x="18.1" y="1829" width="0.2" height="15.0" fill="rgb(243,79,6)" rx="2" ry="2" />
<text  x="21.13" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1064.9" y="1829" width="0.2" height="15.0" fill="rgb(217,44,37)" rx="2" ry="2" />
<text  x="1067.86" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="365.4" y="1717" width="0.2" height="15.0" fill="rgb(236,55,37)" rx="2" ry="2" />
<text  x="368.39" y="1727.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="336.8" y="1877" width="0.2" height="15.0" fill="rgb(220,109,50)" rx="2" ry="2" />
<text  x="339.83" y="1887.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.02%)</title><rect x="340.0" y="1957" width="0.2" height="15.0" fill="rgb(237,226,37)" rx="2" ry="2" />
<text  x="343.00" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (5 samples, 0.08%)</title><rect x="961.5" y="2037" width="1.0" height="15.0" fill="rgb(233,27,11)" rx="2" ry="2" />
<text  x="964.54" y="2047.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1181.9" y="2021" width="0.4" height="15.0" fill="rgb(254,53,33)" rx="2" ry="2" />
<text  x="1184.87" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="521.1" y="1941" width="0.2" height="15.0" fill="rgb(233,62,6)" rx="2" ry="2" />
<text  x="524.07" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="382.0" y="1909" width="1.0" height="15.0" fill="rgb(232,169,17)" rx="2" ry="2" />
<text  x="385.05" y="1919.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="264.6" y="1877" width="0.2" height="15.0" fill="rgb(218,179,53)" rx="2" ry="2" />
<text  x="267.64" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1072.4" y="1797" width="0.2" height="15.0" fill="rgb(207,146,35)" rx="2" ry="2" />
<text  x="1075.40" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="561.7" y="1845" width="0.2" height="15.0" fill="rgb(225,177,44)" rx="2" ry="2" />
<text  x="564.72" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="821" width="17.5" height="15.0" fill="rgb(228,120,20)" rx="2" ry="2" />
<text  x="107.40" y="831.5" ></text>
</g>
<g >
<title>__GI___setsockopt (19 samples, 0.32%)</title><rect x="204.6" y="1957" width="3.7" height="15.0" fill="rgb(208,223,4)" rx="2" ry="2" />
<text  x="207.55" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="881.4" y="1685" width="0.2" height="15.0" fill="rgb(232,48,39)" rx="2" ry="2" />
<text  x="884.42" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (77 samples, 1.29%)</title><rect x="1147.0" y="2021" width="15.2" height="15.0" fill="rgb(235,190,6)" rx="2" ry="2" />
<text  x="1149.96" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (7 samples, 0.12%)</title><rect x="72.1" y="1957" width="1.4" height="15.0" fill="rgb(253,128,44)" rx="2" ry="2" />
<text  x="75.07" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (145 samples, 2.44%)</title><rect x="286.1" y="1813" width="28.7" height="15.0" fill="rgb(238,212,34)" rx="2" ry="2" />
<text  x="289.06" y="1823.5" >ip..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="343.6" y="1813" width="0.2" height="15.0" fill="rgb(210,69,30)" rx="2" ry="2" />
<text  x="346.57" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="150.4" y="1877" width="0.2" height="15.0" fill="rgb(221,77,40)" rx="2" ry="2" />
<text  x="153.41" y="1887.5" ></text>
</g>
<g >
<title>netif_skb_features (4 samples, 0.07%)</title><rect x="313.2" y="1653" width="0.8" height="15.0" fill="rgb(242,136,29)" rx="2" ry="2" />
<text  x="316.23" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="870.5" y="1925" width="0.2" height="15.0" fill="rgb(232,156,21)" rx="2" ry="2" />
<text  x="873.51" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="635.1" y="1957" width="0.2" height="15.0" fill="rgb(230,32,47)" rx="2" ry="2" />
<text  x="638.10" y="1967.5" ></text>
</g>
<g >
<title>remove_wait_queue (18 samples, 0.30%)</title><rect x="475.7" y="1941" width="3.5" height="15.0" fill="rgb(216,5,34)" rx="2" ry="2" />
<text  x="478.65" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="192.9" y="1701" width="0.1" height="15.0" fill="rgb(240,176,19)" rx="2" ry="2" />
<text  x="195.85" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="48.5" y="1957" width="0.2" height="15.0" fill="rgb(223,197,42)" rx="2" ry="2" />
<text  x="51.47" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="165.5" y="1941" width="0.2" height="15.0" fill="rgb(213,14,34)" rx="2" ry="2" />
<text  x="168.48" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="619.0" y="1989" width="0.6" height="15.0" fill="rgb(244,68,12)" rx="2" ry="2" />
<text  x="622.04" y="1999.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="362.0" y="1957" width="0.2" height="15.0" fill="rgb(227,209,15)" rx="2" ry="2" />
<text  x="365.02" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="866.9" y="1893" width="0.4" height="15.0" fill="rgb(249,22,53)" rx="2" ry="2" />
<text  x="869.94" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="871.9" y="1893" width="0.2" height="15.0" fill="rgb(219,218,19)" rx="2" ry="2" />
<text  x="874.90" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="943.1" y="1973" width="1.2" height="15.0" fill="rgb(250,4,45)" rx="2" ry="2" />
<text  x="946.09" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (3 samples, 0.05%)</title><rect x="58.4" y="1941" width="0.6" height="15.0" fill="rgb(248,40,35)" rx="2" ry="2" />
<text  x="61.39" y="1951.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (20 samples, 0.34%)</title><rect x="17.7" y="1957" width="4.0" height="15.0" fill="rgb(205,195,6)" rx="2" ry="2" />
<text  x="20.73" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (54 samples, 0.91%)</title><rect x="603.6" y="1941" width="10.7" height="15.0" fill="rgb(225,131,21)" rx="2" ry="2" />
<text  x="606.57" y="1951.5" ></text>
</g>
<g >
<title>inet_accept (117 samples, 1.97%)</title><rect x="364.0" y="1957" width="23.2" height="15.0" fill="rgb(229,64,26)" rx="2" ry="2" />
<text  x="367.00" y="1967.5" >i..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="973.4" y="1925" width="0.2" height="15.0" fill="rgb(206,157,48)" rx="2" ry="2" />
<text  x="976.44" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="633.1" y="1909" width="0.8" height="15.0" fill="rgb(220,110,51)" rx="2" ry="2" />
<text  x="636.12" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="319.4" y="1813" width="1.2" height="15.0" fill="rgb(245,148,48)" rx="2" ry="2" />
<text  x="322.38" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="890.5" y="1909" width="0.2" height="15.0" fill="rgb(230,29,6)" rx="2" ry="2" />
<text  x="893.54" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="935.0" y="1941" width="0.2" height="15.0" fill="rgb(249,170,3)" rx="2" ry="2" />
<text  x="937.96" y="1951.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (12 samples, 0.20%)</title><rect x="261.5" y="1877" width="2.3" height="15.0" fill="rgb(213,160,31)" rx="2" ry="2" />
<text  x="264.47" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="849.7" y="1893" width="0.2" height="15.0" fill="rgb(254,79,3)" rx="2" ry="2" />
<text  x="852.68" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="326.7" y="1685" width="0.2" height="15.0" fill="rgb(238,7,29)" rx="2" ry="2" />
<text  x="329.72" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="994.9" y="1749" width="0.2" height="15.0" fill="rgb(248,184,22)" rx="2" ry="2" />
<text  x="997.85" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="987.3" y="1909" width="0.2" height="15.0" fill="rgb(252,188,38)" rx="2" ry="2" />
<text  x="990.32" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="579.2" y="1957" width="0.2" height="15.0" fill="rgb(253,9,31)" rx="2" ry="2" />
<text  x="582.18" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="881.4" y="1829" width="0.2" height="15.0" fill="rgb(223,6,49)" rx="2" ry="2" />
<text  x="884.42" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="962.3" y="1957" width="0.2" height="15.0" fill="rgb(233,40,46)" rx="2" ry="2" />
<text  x="965.33" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="693.4" y="1957" width="0.2" height="15.0" fill="rgb(251,44,19)" rx="2" ry="2" />
<text  x="696.41" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.83%)</title><rect x="104.0" y="1845" width="21.6" height="15.0" fill="rgb(240,73,25)" rx="2" ry="2" />
<text  x="107.00" y="1855.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.03%)</title><rect x="1017.3" y="2037" width="0.4" height="15.0" fill="rgb(214,33,34)" rx="2" ry="2" />
<text  x="1020.26" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="973.4" y="1941" width="0.2" height="15.0" fill="rgb(215,159,45)" rx="2" ry="2" />
<text  x="976.44" y="1951.5" ></text>
</g>
<g >
<title>__sys_sendmsg (1 samples, 0.02%)</title><rect x="240.8" y="1989" width="0.2" height="15.0" fill="rgb(227,63,32)" rx="2" ry="2" />
<text  x="243.84" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="564.9" y="1797" width="0.2" height="15.0" fill="rgb(254,78,0)" rx="2" ry="2" />
<text  x="567.90" y="1807.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="1171.6" y="1957" width="0.4" height="15.0" fill="rgb(234,14,23)" rx="2" ry="2" />
<text  x="1174.56" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="186.7" y="1957" width="0.2" height="15.0" fill="rgb(253,224,6)" rx="2" ry="2" />
<text  x="189.70" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="806.5" y="1509" width="0.1" height="15.0" fill="rgb(227,12,12)" rx="2" ry="2" />
<text  x="809.45" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="549.2" y="1909" width="0.2" height="15.0" fill="rgb(248,121,39)" rx="2" ry="2" />
<text  x="552.23" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="882.6" y="1973" width="0.8" height="15.0" fill="rgb(251,71,44)" rx="2" ry="2" />
<text  x="885.61" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="167.9" y="1717" width="0.2" height="15.0" fill="rgb(225,186,16)" rx="2" ry="2" />
<text  x="170.86" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="289.2" y="1589" width="0.2" height="15.0" fill="rgb(222,197,7)" rx="2" ry="2" />
<text  x="292.23" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="700.9" y="1877" width="1.0" height="15.0" fill="rgb(240,212,34)" rx="2" ry="2" />
<text  x="703.94" y="1887.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="701.7" y="1797" width="0.2" height="15.0" fill="rgb(249,225,38)" rx="2" ry="2" />
<text  x="704.74" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="333.5" y="1797" width="0.2" height="15.0" fill="rgb(235,55,36)" rx="2" ry="2" />
<text  x="336.46" y="1807.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="534.4" y="2021" width="0.4" height="15.0" fill="rgb(215,227,37)" rx="2" ry="2" />
<text  x="537.36" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="91.5" y="2005" width="0.4" height="15.0" fill="rgb(249,188,34)" rx="2" ry="2" />
<text  x="94.51" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="531.0" y="1973" width="0.2" height="15.0" fill="rgb(240,161,0)" rx="2" ry="2" />
<text  x="533.98" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (50 samples, 0.84%)</title><rect x="914.7" y="1941" width="9.9" height="15.0" fill="rgb(227,19,7)" rx="2" ry="2" />
<text  x="917.73" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (3 samples, 0.05%)</title><rect x="539.1" y="1973" width="0.6" height="15.0" fill="rgb(247,7,0)" rx="2" ry="2" />
<text  x="542.12" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="156.0" y="1685" width="0.2" height="15.0" fill="rgb(252,180,6)" rx="2" ry="2" />
<text  x="158.96" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="86.6" y="1989" width="0.1" height="15.0" fill="rgb(246,61,1)" rx="2" ry="2" />
<text  x="89.55" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="406.6" y="1893" width="0.2" height="15.0" fill="rgb(207,104,27)" rx="2" ry="2" />
<text  x="409.64" y="1903.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="561.7" y="1701" width="0.2" height="15.0" fill="rgb(227,27,38)" rx="2" ry="2" />
<text  x="564.72" y="1711.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="554.6" y="1973" width="0.2" height="15.0" fill="rgb(206,173,49)" rx="2" ry="2" />
<text  x="557.58" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.03%)</title><rect x="1172.0" y="1973" width="0.3" height="15.0" fill="rgb(207,78,39)" rx="2" ry="2" />
<text  x="1174.95" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="360.2" y="1829" width="0.2" height="15.0" fill="rgb(243,104,22)" rx="2" ry="2" />
<text  x="363.23" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="552.6" y="1829" width="0.2" height="15.0" fill="rgb(221,229,19)" rx="2" ry="2" />
<text  x="555.60" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="85.8" y="1989" width="0.8" height="15.0" fill="rgb(236,184,28)" rx="2" ry="2" />
<text  x="88.76" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="457.0" y="1797" width="0.4" height="15.0" fill="rgb(234,220,37)" rx="2" ry="2" />
<text  x="460.01" y="1807.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.8" y="1845" width="0.2" height="15.0" fill="rgb(233,75,27)" rx="2" ry="2" />
<text  x="106.81" y="1855.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="990.5" y="1781" width="0.8" height="15.0" fill="rgb(226,104,52)" rx="2" ry="2" />
<text  x="993.49" y="1791.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="721.2" y="1797" width="0.2" height="15.0" fill="rgb(214,75,4)" rx="2" ry="2" />
<text  x="724.17" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1012.5" y="2005" width="0.2" height="15.0" fill="rgb(215,66,35)" rx="2" ry="2" />
<text  x="1015.50" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_accept (3 samples, 0.05%)</title><rect x="387.2" y="1957" width="0.6" height="15.0" fill="rgb(241,166,51)" rx="2" ry="2" />
<text  x="390.20" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="800.7" y="1669" width="0.2" height="15.0" fill="rgb(208,120,10)" rx="2" ry="2" />
<text  x="803.70" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="328.3" y="1749" width="0.2" height="15.0" fill="rgb(222,97,15)" rx="2" ry="2" />
<text  x="331.30" y="1759.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1046.0" y="1877" width="0.6" height="15.0" fill="rgb(209,148,25)" rx="2" ry="2" />
<text  x="1049.02" y="1887.5" ></text>
</g>
<g >
<title>module_put (1 samples, 0.02%)</title><rect x="457.2" y="1605" width="0.2" height="15.0" fill="rgb(254,92,54)" rx="2" ry="2" />
<text  x="460.21" y="1615.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (53 samples, 0.89%)</title><rect x="1101.4" y="1781" width="10.5" height="15.0" fill="rgb(248,51,0)" rx="2" ry="2" />
<text  x="1104.35" y="1791.5" ></text>
</g>
<g >
<title>free (24 samples, 0.40%)</title><rect x="180.6" y="2021" width="4.7" height="15.0" fill="rgb(209,141,28)" rx="2" ry="2" />
<text  x="183.55" y="2031.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (1 samples, 0.02%)</title><rect x="683.1" y="1893" width="0.2" height="15.0" fill="rgb(244,158,20)" rx="2" ry="2" />
<text  x="686.10" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="129.2" y="1989" width="0.4" height="15.0" fill="rgb(223,66,24)" rx="2" ry="2" />
<text  x="132.19" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1068.6" y="1797" width="0.2" height="15.0" fill="rgb(240,102,49)" rx="2" ry="2" />
<text  x="1071.63" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="734.7" y="1637" width="0.2" height="15.0" fill="rgb(254,37,17)" rx="2" ry="2" />
<text  x="737.66" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (2 samples, 0.03%)</title><rect x="225.4" y="1957" width="0.4" height="15.0" fill="rgb(226,201,13)" rx="2" ry="2" />
<text  x="228.37" y="1967.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="249.8" y="1941" width="0.2" height="15.0" fill="rgb(237,122,6)" rx="2" ry="2" />
<text  x="252.77" y="1951.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="188.3" y="2037" width="0.4" height="15.0" fill="rgb(241,177,51)" rx="2" ry="2" />
<text  x="191.29" y="2047.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="468.7" y="1941" width="0.2" height="15.0" fill="rgb(227,8,0)" rx="2" ry="2" />
<text  x="471.71" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1006.2" y="1813" width="0.2" height="15.0" fill="rgb(222,159,2)" rx="2" ry="2" />
<text  x="1009.16" y="1823.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="482.4" y="1941" width="0.2" height="15.0" fill="rgb(205,52,4)" rx="2" ry="2" />
<text  x="485.40" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="573.4" y="1973" width="0.2" height="15.0" fill="rgb(248,172,23)" rx="2" ry="2" />
<text  x="576.43" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="115.9" y="37" width="0.2" height="15.0" fill="rgb(213,218,51)" rx="2" ry="2" />
<text  x="118.90" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="69.9" y="1957" width="0.2" height="15.0" fill="rgb(242,36,49)" rx="2" ry="2" />
<text  x="72.89" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="32.8" y="1925" width="0.2" height="15.0" fill="rgb(219,186,47)" rx="2" ry="2" />
<text  x="35.81" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="219.6" y="1797" width="0.4" height="15.0" fill="rgb(241,35,36)" rx="2" ry="2" />
<text  x="222.62" y="1807.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.10%)</title><rect x="1071.4" y="1829" width="1.2" height="15.0" fill="rgb(241,163,4)" rx="2" ry="2" />
<text  x="1074.41" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="264.4" y="1669" width="0.2" height="15.0" fill="rgb(225,94,28)" rx="2" ry="2" />
<text  x="267.44" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="342.8" y="2021" width="0.6" height="15.0" fill="rgb(241,67,47)" rx="2" ry="2" />
<text  x="345.78" y="2031.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="875.1" y="1685" width="0.2" height="15.0" fill="rgb(213,166,20)" rx="2" ry="2" />
<text  x="878.07" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1017.5" y="1861" width="0.2" height="15.0" fill="rgb(210,103,19)" rx="2" ry="2" />
<text  x="1020.46" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="734.7" y="1589" width="0.2" height="15.0" fill="rgb(228,4,1)" rx="2" ry="2" />
<text  x="737.66" y="1599.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_add (1 samples, 0.02%)</title><rect x="565.5" y="1701" width="0.2" height="15.0" fill="rgb(224,126,19)" rx="2" ry="2" />
<text  x="568.49" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="689.4" y="1893" width="0.2" height="15.0" fill="rgb(207,13,9)" rx="2" ry="2" />
<text  x="692.44" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="59.8" y="1941" width="0.2" height="15.0" fill="rgb(232,4,47)" rx="2" ry="2" />
<text  x="62.78" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="321.8" y="1797" width="0.2" height="15.0" fill="rgb(215,208,50)" rx="2" ry="2" />
<text  x="324.76" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="383.0" y="1925" width="1.6" height="15.0" fill="rgb(249,185,3)" rx="2" ry="2" />
<text  x="386.04" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (7 samples, 0.12%)</title><rect x="522.1" y="1957" width="1.3" height="15.0" fill="rgb(205,191,38)" rx="2" ry="2" />
<text  x="525.06" y="1967.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="58.2" y="1621" width="0.2" height="15.0" fill="rgb(219,25,34)" rx="2" ry="2" />
<text  x="61.19" y="1631.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="123.8" y="1717" width="0.2" height="15.0" fill="rgb(232,126,19)" rx="2" ry="2" />
<text  x="126.84" y="1727.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="292.2" y="1733" width="0.2" height="15.0" fill="rgb(236,23,40)" rx="2" ry="2" />
<text  x="295.21" y="1743.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="754.1" y="1669" width="0.2" height="15.0" fill="rgb(217,111,29)" rx="2" ry="2" />
<text  x="757.09" y="1679.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (27 samples, 0.45%)</title><rect x="96.3" y="2037" width="5.3" height="15.0" fill="rgb(236,129,16)" rx="2" ry="2" />
<text  x="99.27" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.24%)</title><rect x="14.8" y="2037" width="2.7" height="15.0" fill="rgb(222,65,43)" rx="2" ry="2" />
<text  x="17.76" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="885.8" y="1941" width="0.2" height="15.0" fill="rgb(232,62,20)" rx="2" ry="2" />
<text  x="888.78" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (8 samples, 0.13%)</title><rect x="888.0" y="2037" width="1.5" height="15.0" fill="rgb(231,50,30)" rx="2" ry="2" />
<text  x="890.96" y="2047.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="732.3" y="1685" width="0.4" height="15.0" fill="rgb(216,31,19)" rx="2" ry="2" />
<text  x="735.28" y="1695.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.12%)</title><rect x="270.0" y="1813" width="1.4" height="15.0" fill="rgb(252,17,4)" rx="2" ry="2" />
<text  x="273.00" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 1.97%)</title><rect x="103.6" y="1925" width="23.2" height="15.0" fill="rgb(215,223,53)" rx="2" ry="2" />
<text  x="106.61" y="1935.5" >[..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (3 samples, 0.05%)</title><rect x="855.2" y="1989" width="0.6" height="15.0" fill="rgb(236,110,35)" rx="2" ry="2" />
<text  x="858.24" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="85.4" y="1973" width="0.2" height="15.0" fill="rgb(249,111,17)" rx="2" ry="2" />
<text  x="88.36" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="171.0" y="1973" width="0.6" height="15.0" fill="rgb(227,216,7)" rx="2" ry="2" />
<text  x="174.04" y="1983.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (3 samples, 0.05%)</title><rect x="486.6" y="2005" width="0.6" height="15.0" fill="rgb(223,169,7)" rx="2" ry="2" />
<text  x="489.56" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (3 samples, 0.05%)</title><rect x="666.0" y="1845" width="0.6" height="15.0" fill="rgb(245,16,28)" rx="2" ry="2" />
<text  x="669.04" y="1855.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (2 samples, 0.03%)</title><rect x="615.7" y="1989" width="0.4" height="15.0" fill="rgb(209,87,23)" rx="2" ry="2" />
<text  x="618.67" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="220.6" y="1797" width="0.4" height="15.0" fill="rgb(221,133,5)" rx="2" ry="2" />
<text  x="223.62" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="857.6" y="1989" width="1.0" height="15.0" fill="rgb(246,122,28)" rx="2" ry="2" />
<text  x="860.62" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1079.9" y="1909" width="0.2" height="15.0" fill="rgb(249,131,15)" rx="2" ry="2" />
<text  x="1082.93" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="530.6" y="2005" width="0.2" height="15.0" fill="rgb(207,79,28)" rx="2" ry="2" />
<text  x="533.59" y="2015.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="289.2" y="1461" width="0.2" height="15.0" fill="rgb(254,166,47)" rx="2" ry="2" />
<text  x="292.23" y="1471.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="707.9" y="1925" width="0.4" height="15.0" fill="rgb(242,82,35)" rx="2" ry="2" />
<text  x="710.89" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="689.4" y="1909" width="0.2" height="15.0" fill="rgb(238,196,7)" rx="2" ry="2" />
<text  x="692.44" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="577.4" y="1973" width="0.2" height="15.0" fill="rgb(249,149,50)" rx="2" ry="2" />
<text  x="580.39" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="517.3" y="1957" width="0.6" height="15.0" fill="rgb(218,109,31)" rx="2" ry="2" />
<text  x="520.30" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="646.2" y="1813" width="0.2" height="15.0" fill="rgb(234,39,19)" rx="2" ry="2" />
<text  x="649.21" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (102 samples, 1.71%)</title><rect x="652.8" y="2037" width="20.2" height="15.0" fill="rgb(226,180,33)" rx="2" ry="2" />
<text  x="655.75" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (1 samples, 0.02%)</title><rect x="570.5" y="2005" width="0.1" height="15.0" fill="rgb(238,199,44)" rx="2" ry="2" />
<text  x="573.45" y="2015.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (10 samples, 0.17%)</title><rect x="743.0" y="1733" width="2.0" height="15.0" fill="rgb(235,200,10)" rx="2" ry="2" />
<text  x="745.99" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1006.2" y="1877" width="0.2" height="15.0" fill="rgb(227,116,18)" rx="2" ry="2" />
<text  x="1009.16" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (1 samples, 0.02%)</title><rect x="1139.8" y="2053" width="0.2" height="15.0" fill="rgb(240,83,40)" rx="2" ry="2" />
<text  x="1142.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="485" width="17.5" height="15.0" fill="rgb(249,22,31)" rx="2" ry="2" />
<text  x="107.40" y="495.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="14.0" y="1781" width="0.2" height="15.0" fill="rgb(218,83,54)" rx="2" ry="2" />
<text  x="16.97" y="1791.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1064.5" y="1861" width="0.2" height="15.0" fill="rgb(220,0,48)" rx="2" ry="2" />
<text  x="1067.46" y="1871.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="63.7" y="1909" width="0.8" height="15.0" fill="rgb(249,224,48)" rx="2" ry="2" />
<text  x="66.74" y="1919.5" ></text>
</g>
<g >
<title>ipv4_mtu (8 samples, 0.13%)</title><rect x="332.1" y="1861" width="1.6" height="15.0" fill="rgb(245,7,4)" rx="2" ry="2" />
<text  x="335.07" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (2 samples, 0.03%)</title><rect x="698.0" y="2037" width="0.4" height="15.0" fill="rgb(216,72,24)" rx="2" ry="2" />
<text  x="700.97" y="2047.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="293.8" y="1525" width="0.2" height="15.0" fill="rgb(213,221,19)" rx="2" ry="2" />
<text  x="296.79" y="1535.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="878.4" y="1909" width="0.2" height="15.0" fill="rgb(247,116,43)" rx="2" ry="2" />
<text  x="881.44" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="148.4" y="1909" width="0.2" height="15.0" fill="rgb(223,209,51)" rx="2" ry="2" />
<text  x="151.43" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="621.4" y="2005" width="0.2" height="15.0" fill="rgb(236,89,43)" rx="2" ry="2" />
<text  x="624.42" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="949" width="17.5" height="15.0" fill="rgb(212,140,37)" rx="2" ry="2" />
<text  x="107.40" y="959.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (3 samples, 0.05%)</title><rect x="32.2" y="1973" width="0.6" height="15.0" fill="rgb(236,169,40)" rx="2" ry="2" />
<text  x="35.21" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="139.3" y="2005" width="0.2" height="15.0" fill="rgb(226,127,21)" rx="2" ry="2" />
<text  x="142.30" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="532.6" y="1893" width="0.2" height="15.0" fill="rgb(217,151,41)" rx="2" ry="2" />
<text  x="535.57" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="394.1" y="1877" width="0.2" height="15.0" fill="rgb(208,45,15)" rx="2" ry="2" />
<text  x="397.14" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="252.3" y="1845" width="0.2" height="15.0" fill="rgb(230,42,47)" rx="2" ry="2" />
<text  x="255.35" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="962.9" y="1989" width="0.6" height="15.0" fill="rgb(249,207,13)" rx="2" ry="2" />
<text  x="965.92" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="509.0" y="1765" width="0.2" height="15.0" fill="rgb(206,138,35)" rx="2" ry="2" />
<text  x="511.97" y="1775.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="817.2" y="1685" width="0.2" height="15.0" fill="rgb(218,83,40)" rx="2" ry="2" />
<text  x="820.16" y="1695.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="223.8" y="1845" width="0.8" height="15.0" fill="rgb(218,138,42)" rx="2" ry="2" />
<text  x="226.79" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (8 samples, 0.13%)</title><rect x="513.5" y="1989" width="1.6" height="15.0" fill="rgb(219,220,29)" rx="2" ry="2" />
<text  x="516.53" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="293" width="17.5" height="15.0" fill="rgb(206,36,0)" rx="2" ry="2" />
<text  x="107.40" y="303.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="186.7" y="1925" width="0.2" height="15.0" fill="rgb(223,169,20)" rx="2" ry="2" />
<text  x="189.70" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="847.9" y="1893" width="0.6" height="15.0" fill="rgb(216,44,3)" rx="2" ry="2" />
<text  x="850.90" y="1903.5" ></text>
</g>
<g >
<title>skb_clone (18 samples, 0.30%)</title><rect x="793.8" y="1669" width="3.5" height="15.0" fill="rgb(210,101,52)" rx="2" ry="2" />
<text  x="796.76" y="1679.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="742.4" y="1733" width="0.2" height="15.0" fill="rgb(208,179,52)" rx="2" ry="2" />
<text  x="745.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="861.0" y="1989" width="0.2" height="15.0" fill="rgb(237,153,15)" rx="2" ry="2" />
<text  x="863.99" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="501.8" y="1653" width="0.2" height="15.0" fill="rgb(230,44,5)" rx="2" ry="2" />
<text  x="504.83" y="1663.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="77.6" y="1925" width="0.4" height="15.0" fill="rgb(225,66,21)" rx="2" ry="2" />
<text  x="80.63" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="552.6" y="1797" width="0.2" height="15.0" fill="rgb(218,125,47)" rx="2" ry="2" />
<text  x="555.60" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="289.2" y="1525" width="0.2" height="15.0" fill="rgb(225,163,6)" rx="2" ry="2" />
<text  x="292.23" y="1535.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="836.8" y="1877" width="0.2" height="15.0" fill="rgb(234,165,51)" rx="2" ry="2" />
<text  x="839.79" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="674.2" y="1957" width="0.2" height="15.0" fill="rgb(245,130,2)" rx="2" ry="2" />
<text  x="677.17" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="773.7" y="1557" width="0.4" height="15.0" fill="rgb(214,201,9)" rx="2" ry="2" />
<text  x="776.73" y="1567.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="222.8" y="1893" width="0.6" height="15.0" fill="rgb(248,99,6)" rx="2" ry="2" />
<text  x="225.80" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="885.2" y="2005" width="0.2" height="15.0" fill="rgb(207,169,1)" rx="2" ry="2" />
<text  x="888.18" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.13%)</title><rect x="62.2" y="1941" width="1.5" height="15.0" fill="rgb(251,203,3)" rx="2" ry="2" />
<text  x="65.16" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="842.5" y="1925" width="0.2" height="15.0" fill="rgb(243,79,39)" rx="2" ry="2" />
<text  x="845.54" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="372.7" y="1877" width="0.2" height="15.0" fill="rgb(209,74,37)" rx="2" ry="2" />
<text  x="375.73" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="501.8" y="1877" width="0.2" height="15.0" fill="rgb(222,33,14)" rx="2" ry="2" />
<text  x="504.83" y="1887.5" ></text>
</g>
<g >
<title>__libc_sendmsg (3 samples, 0.05%)</title><rect x="130.0" y="2005" width="0.6" height="15.0" fill="rgb(236,67,13)" rx="2" ry="2" />
<text  x="132.98" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="252.1" y="1893" width="0.2" height="15.0" fill="rgb(244,51,41)" rx="2" ry="2" />
<text  x="255.15" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.6" y="1861" width="0.2" height="15.0" fill="rgb(251,109,36)" rx="2" ry="2" />
<text  x="128.62" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="105.4" y="37" width="0.2" height="15.0" fill="rgb(220,197,18)" rx="2" ry="2" />
<text  x="108.39" y="47.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (7 samples, 0.12%)</title><rect x="616.1" y="2021" width="1.4" height="15.0" fill="rgb(216,123,46)" rx="2" ry="2" />
<text  x="619.06" y="2031.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="514.9" y="1973" width="0.2" height="15.0" fill="rgb(226,19,53)" rx="2" ry="2" />
<text  x="517.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="277.7" y="1637" width="0.2" height="15.0" fill="rgb(240,196,51)" rx="2" ry="2" />
<text  x="280.73" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="335.6" y="1781" width="0.2" height="15.0" fill="rgb(213,226,49)" rx="2" ry="2" />
<text  x="338.64" y="1791.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="326.7" y="1621" width="0.2" height="15.0" fill="rgb(225,147,4)" rx="2" ry="2" />
<text  x="329.72" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (12 samples, 0.20%)</title><rect x="171.6" y="1989" width="2.4" height="15.0" fill="rgb(230,61,25)" rx="2" ry="2" />
<text  x="174.63" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (136 samples, 2.29%)</title><rect x="200.2" y="2021" width="27.0" height="15.0" fill="rgb(227,57,32)" rx="2" ry="2" />
<text  x="203.19" y="2031.5" >[..</text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="903.6" y="1909" width="0.2" height="15.0" fill="rgb(254,178,54)" rx="2" ry="2" />
<text  x="906.63" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1077" width="17.5" height="15.0" fill="rgb(213,15,25)" rx="2" ry="2" />
<text  x="107.40" y="1087.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="613.3" y="1813" width="0.2" height="15.0" fill="rgb(225,65,19)" rx="2" ry="2" />
<text  x="616.29" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="575.0" y="1989" width="1.4" height="15.0" fill="rgb(206,15,28)" rx="2" ry="2" />
<text  x="578.01" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.2" y="1637" width="0.2" height="15.0" fill="rgb(231,50,41)" rx="2" ry="2" />
<text  x="126.24" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="190.7" y="1893" width="0.2" height="15.0" fill="rgb(251,62,26)" rx="2" ry="2" />
<text  x="193.67" y="1903.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="510.4" y="1925" width="0.2" height="15.0" fill="rgb(229,116,52)" rx="2" ry="2" />
<text  x="513.36" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="898.9" y="1973" width="0.2" height="15.0" fill="rgb(221,71,13)" rx="2" ry="2" />
<text  x="901.87" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="620.8" y="1957" width="0.2" height="15.0" fill="rgb(254,204,51)" rx="2" ry="2" />
<text  x="623.82" y="1967.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="1129.7" y="2053" width="0.2" height="15.0" fill="rgb(213,85,1)" rx="2" ry="2" />
<text  x="1132.71" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="328.3" y="1573" width="0.2" height="15.0" fill="rgb(211,223,42)" rx="2" ry="2" />
<text  x="331.30" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="561.7" y="1669" width="0.2" height="15.0" fill="rgb(248,110,21)" rx="2" ry="2" />
<text  x="564.72" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="509.2" y="1829" width="0.2" height="15.0" fill="rgb(242,223,46)" rx="2" ry="2" />
<text  x="512.17" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="551.6" y="1909" width="0.4" height="15.0" fill="rgb(237,95,20)" rx="2" ry="2" />
<text  x="554.61" y="1919.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1064.9" y="1733" width="0.2" height="15.0" fill="rgb(215,216,9)" rx="2" ry="2" />
<text  x="1067.86" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1068.6" y="1861" width="0.4" height="15.0" fill="rgb(228,81,29)" rx="2" ry="2" />
<text  x="1071.63" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="668.2" y="1877" width="0.4" height="15.0" fill="rgb(224,90,39)" rx="2" ry="2" />
<text  x="671.22" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (45 samples, 0.76%)</title><rect x="915.7" y="1925" width="8.9" height="15.0" fill="rgb(213,207,52)" rx="2" ry="2" />
<text  x="918.72" y="1935.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="549.2" y="1669" width="0.2" height="15.0" fill="rgb(241,170,29)" rx="2" ry="2" />
<text  x="552.23" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="973.4" y="1749" width="0.2" height="15.0" fill="rgb(217,212,29)" rx="2" ry="2" />
<text  x="976.44" y="1759.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="333.5" y="1509" width="0.2" height="15.0" fill="rgb(224,74,43)" rx="2" ry="2" />
<text  x="336.46" y="1519.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="329.1" y="1829" width="0.4" height="15.0" fill="rgb(226,33,6)" rx="2" ry="2" />
<text  x="332.10" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (2 samples, 0.03%)</title><rect x="143.9" y="1925" width="0.4" height="15.0" fill="rgb(249,30,9)" rx="2" ry="2" />
<text  x="146.87" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="152.6" y="1909" width="0.2" height="15.0" fill="rgb(243,104,35)" rx="2" ry="2" />
<text  x="155.59" y="1919.5" ></text>
</g>
<g >
<title>rb_erase_cached (8 samples, 0.13%)</title><rect x="479.2" y="1957" width="1.6" height="15.0" fill="rgb(251,213,35)" rx="2" ry="2" />
<text  x="482.22" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1045.8" y="1893" width="0.8" height="15.0" fill="rgb(214,155,15)" rx="2" ry="2" />
<text  x="1048.82" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(246,75,35)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="872.9" y="1893" width="0.6" height="15.0" fill="rgb(241,13,28)" rx="2" ry="2" />
<text  x="875.89" y="1903.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="517.7" y="1941" width="0.2" height="15.0" fill="rgb(214,22,6)" rx="2" ry="2" />
<text  x="520.70" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="870.9" y="1909" width="0.6" height="15.0" fill="rgb(212,40,3)" rx="2" ry="2" />
<text  x="873.90" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 3.16%)</title><rect x="907.0" y="2021" width="37.3" height="15.0" fill="rgb(214,116,23)" rx="2" ry="2" />
<text  x="910.00" y="2031.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="218.8" y="1845" width="0.2" height="15.0" fill="rgb(237,6,27)" rx="2" ry="2" />
<text  x="221.83" y="1855.5" ></text>
</g>
<g >
<title>__sock_release (417 samples, 7.01%)</title><rect x="737.8" y="1781" width="82.7" height="15.0" fill="rgb(224,74,1)" rx="2" ry="2" />
<text  x="740.83" y="1791.5" >__sock_re..</text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="723.9" y="1717" width="0.4" height="15.0" fill="rgb(220,39,16)" rx="2" ry="2" />
<text  x="726.95" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="335.6" y="1685" width="0.2" height="15.0" fill="rgb(210,177,4)" rx="2" ry="2" />
<text  x="338.64" y="1695.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="176.4" y="1957" width="0.8" height="15.0" fill="rgb(213,38,7)" rx="2" ry="2" />
<text  x="179.39" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="167.9" y="1653" width="0.2" height="15.0" fill="rgb(225,191,52)" rx="2" ry="2" />
<text  x="170.86" y="1663.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (7 samples, 0.12%)</title><rect x="751.7" y="1685" width="1.4" height="15.0" fill="rgb(219,210,41)" rx="2" ry="2" />
<text  x="754.71" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="950.6" y="1957" width="0.8" height="15.0" fill="rgb(216,77,43)" rx="2" ry="2" />
<text  x="953.63" y="1967.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="878.2" y="1941" width="0.2" height="15.0" fill="rgb(205,161,28)" rx="2" ry="2" />
<text  x="881.24" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="549.2" y="1877" width="0.2" height="15.0" fill="rgb(241,56,26)" rx="2" ry="2" />
<text  x="552.23" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1429" width="18.0" height="15.0" fill="rgb(217,151,52)" rx="2" ry="2" />
<text  x="107.40" y="1439.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="903.6" y="1925" width="0.2" height="15.0" fill="rgb(243,33,4)" rx="2" ry="2" />
<text  x="906.63" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="363.6" y="1925" width="0.2" height="15.0" fill="rgb(251,113,7)" rx="2" ry="2" />
<text  x="366.60" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="537.9" y="1989" width="0.2" height="15.0" fill="rgb(252,135,33)" rx="2" ry="2" />
<text  x="540.93" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="549.2" y="1621" width="0.2" height="15.0" fill="rgb(208,171,49)" rx="2" ry="2" />
<text  x="552.23" y="1631.5" ></text>
</g>
<g >
<title>ip_finish_output (130 samples, 2.18%)</title><rect x="767.6" y="1621" width="25.8" height="15.0" fill="rgb(249,65,21)" rx="2" ry="2" />
<text  x="770.58" y="1631.5" >i..</text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1064.7" y="1861" width="0.2" height="15.0" fill="rgb(239,195,5)" rx="2" ry="2" />
<text  x="1067.66" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="859.0" y="1989" width="0.2" height="15.0" fill="rgb(209,33,49)" rx="2" ry="2" />
<text  x="862.01" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="457.0" y="1909" width="0.4" height="15.0" fill="rgb(219,218,6)" rx="2" ry="2" />
<text  x="460.01" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7 samples, 0.12%)</title><rect x="294.0" y="1509" width="1.4" height="15.0" fill="rgb(237,216,15)" rx="2" ry="2" />
<text  x="296.99" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="142.7" y="1909" width="0.2" height="15.0" fill="rgb(250,173,15)" rx="2" ry="2" />
<text  x="145.68" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="860.6" y="1989" width="0.2" height="15.0" fill="rgb(233,22,11)" rx="2" ry="2" />
<text  x="863.59" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="533.0" y="1925" width="0.2" height="15.0" fill="rgb(216,62,18)" rx="2" ry="2" />
<text  x="535.97" y="1935.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1183.1" y="2053" width="0.2" height="15.0" fill="rgb(216,33,42)" rx="2" ry="2" />
<text  x="1186.06" y="2063.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="561.7" y="1621" width="0.2" height="15.0" fill="rgb(229,185,45)" rx="2" ry="2" />
<text  x="564.72" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="389.2" y="1893" width="0.2" height="15.0" fill="rgb(208,6,40)" rx="2" ry="2" />
<text  x="392.19" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="549.2" y="1509" width="0.2" height="15.0" fill="rgb(233,12,28)" rx="2" ry="2" />
<text  x="552.23" y="1519.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (11 samples, 0.18%)</title><rect x="1093.6" y="1893" width="2.2" height="15.0" fill="rgb(243,211,20)" rx="2" ry="2" />
<text  x="1096.62" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (6 samples, 0.10%)</title><rect x="1170.8" y="1989" width="1.2" height="15.0" fill="rgb(208,6,48)" rx="2" ry="2" />
<text  x="1173.76" y="1999.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="665.0" y="1829" width="0.2" height="15.0" fill="rgb(229,122,51)" rx="2" ry="2" />
<text  x="668.05" y="1839.5" ></text>
</g>
<g >
<title>tcp_ca_openreq_child (1 samples, 0.02%)</title><rect x="487.4" y="1749" width="0.2" height="15.0" fill="rgb(243,170,29)" rx="2" ry="2" />
<text  x="490.35" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="1139.4" y="1909" width="0.2" height="15.0" fill="rgb(209,170,17)" rx="2" ry="2" />
<text  x="1142.43" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="962.3" y="1765" width="0.2" height="15.0" fill="rgb(212,8,26)" rx="2" ry="2" />
<text  x="965.33" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="545.3" y="1893" width="0.4" height="15.0" fill="rgb(232,142,51)" rx="2" ry="2" />
<text  x="548.26" y="1903.5" ></text>
</g>
<g >
<title>sock_alloc_file (61 samples, 1.03%)</title><rect x="399.7" y="1957" width="12.1" height="15.0" fill="rgb(206,160,23)" rx="2" ry="2" />
<text  x="402.70" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="866.9" y="1909" width="0.4" height="15.0" fill="rgb(232,104,51)" rx="2" ry="2" />
<text  x="869.94" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="298.0" y="1605" width="0.2" height="15.0" fill="rgb(244,80,22)" rx="2" ry="2" />
<text  x="300.96" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="203.4" y="1941" width="0.6" height="15.0" fill="rgb(208,133,31)" rx="2" ry="2" />
<text  x="206.36" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (10 samples, 0.17%)</title><rect x="700.5" y="1989" width="2.0" height="15.0" fill="rgb(226,177,37)" rx="2" ry="2" />
<text  x="703.55" y="1999.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="763.0" y="1653" width="0.4" height="15.0" fill="rgb(224,147,32)" rx="2" ry="2" />
<text  x="766.02" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="186.7" y="1989" width="0.2" height="15.0" fill="rgb(235,146,14)" rx="2" ry="2" />
<text  x="189.70" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="554.6" y="1893" width="0.2" height="15.0" fill="rgb(212,6,45)" rx="2" ry="2" />
<text  x="557.58" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (8 samples, 0.13%)</title><rect x="834.2" y="1925" width="1.6" height="15.0" fill="rgb(254,112,38)" rx="2" ry="2" />
<text  x="837.22" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="646.2" y="1989" width="0.2" height="15.0" fill="rgb(227,182,38)" rx="2" ry="2" />
<text  x="649.21" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.8" y="1781" width="0.1" height="15.0" fill="rgb(228,115,52)" rx="2" ry="2" />
<text  x="844.75" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="976.8" y="1925" width="0.2" height="15.0" fill="rgb(253,162,23)" rx="2" ry="2" />
<text  x="979.81" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="156.4" y="1861" width="0.2" height="15.0" fill="rgb(246,28,50)" rx="2" ry="2" />
<text  x="159.36" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (8 samples, 0.13%)</title><rect x="573.4" y="1989" width="1.6" height="15.0" fill="rgb(213,179,0)" rx="2" ry="2" />
<text  x="576.43" y="1999.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="349.3" y="2037" width="0.2" height="15.0" fill="rgb(243,68,49)" rx="2" ry="2" />
<text  x="352.32" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="702.1" y="1861" width="0.2" height="15.0" fill="rgb(249,124,25)" rx="2" ry="2" />
<text  x="705.13" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="822.5" y="1781" width="0.2" height="15.0" fill="rgb(243,22,32)" rx="2" ry="2" />
<text  x="825.51" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.9" y="1237" width="0.2" height="15.0" fill="rgb(253,37,52)" rx="2" ry="2" />
<text  x="124.85" y="1247.5" ></text>
</g>
<g >
<title>do_syscall_64 (590 samples, 9.92%)</title><rect x="709.9" y="1877" width="117.0" height="15.0" fill="rgb(246,95,17)" rx="2" ry="2" />
<text  x="712.87" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>__fget (6 samples, 0.10%)</title><rect x="341.2" y="1909" width="1.2" height="15.0" fill="rgb(222,46,12)" rx="2" ry="2" />
<text  x="344.19" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="277.7" y="1861" width="0.2" height="15.0" fill="rgb(209,110,51)" rx="2" ry="2" />
<text  x="280.73" y="1871.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="826.7" y="1861" width="0.2" height="15.0" fill="rgb(219,106,39)" rx="2" ry="2" />
<text  x="829.68" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="913.5" y="1941" width="0.8" height="15.0" fill="rgb(244,177,3)" rx="2" ry="2" />
<text  x="916.54" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="63.1" y="1893" width="0.2" height="15.0" fill="rgb(252,28,13)" rx="2" ry="2" />
<text  x="66.15" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="285.1" y="1765" width="0.2" height="15.0" fill="rgb(238,185,21)" rx="2" ry="2" />
<text  x="288.07" y="1775.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1189.2" y="2037" width="0.6" height="15.0" fill="rgb(246,155,49)" rx="2" ry="2" />
<text  x="1192.21" y="2047.5" ></text>
</g>
<g >
<title>__check_object_size (12 samples, 0.20%)</title><rect x="1090.2" y="1909" width="2.4" height="15.0" fill="rgb(213,88,28)" rx="2" ry="2" />
<text  x="1093.25" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (226 samples, 3.80%)</title><rect x="534.8" y="2021" width="44.8" height="15.0" fill="rgb(236,105,52)" rx="2" ry="2" />
<text  x="537.75" y="2031.5" >foll..</text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="944.3" y="2021" width="0.8" height="15.0" fill="rgb(217,207,46)" rx="2" ry="2" />
<text  x="947.28" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (1 samples, 0.02%)</title><rect x="158.3" y="1957" width="0.2" height="15.0" fill="rgb(219,155,20)" rx="2" ry="2" />
<text  x="161.34" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="858.6" y="1989" width="0.2" height="15.0" fill="rgb(217,62,13)" rx="2" ry="2" />
<text  x="861.61" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="657.1" y="1893" width="0.2" height="15.0" fill="rgb(245,38,51)" rx="2" ry="2" />
<text  x="660.12" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="881.4" y="1861" width="0.2" height="15.0" fill="rgb(236,149,32)" rx="2" ry="2" />
<text  x="884.42" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="360.2" y="1861" width="0.2" height="15.0" fill="rgb(208,123,43)" rx="2" ry="2" />
<text  x="363.23" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="881.4" y="1605" width="0.2" height="15.0" fill="rgb(243,202,46)" rx="2" ry="2" />
<text  x="884.42" y="1615.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (1 samples, 0.02%)</title><rect x="1175.3" y="2053" width="0.2" height="15.0" fill="rgb(254,205,33)" rx="2" ry="2" />
<text  x="1178.32" y="2063.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="343.8" y="1941" width="1.0" height="15.0" fill="rgb(239,5,47)" rx="2" ry="2" />
<text  x="346.77" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="319.2" y="1765" width="0.2" height="15.0" fill="rgb(247,33,7)" rx="2" ry="2" />
<text  x="322.18" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="905.6" y="1989" width="0.2" height="15.0" fill="rgb(223,190,37)" rx="2" ry="2" />
<text  x="908.61" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="411.8" y="1925" width="1.0" height="15.0" fill="rgb(234,102,35)" rx="2" ry="2" />
<text  x="414.79" y="1935.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="411.8" y="1941" width="1.0" height="15.0" fill="rgb(232,102,49)" rx="2" ry="2" />
<text  x="414.79" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="119.9" y="69" width="0.2" height="15.0" fill="rgb(225,37,1)" rx="2" ry="2" />
<text  x="122.87" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="617.5" y="2005" width="0.2" height="15.0" fill="rgb(253,69,34)" rx="2" ry="2" />
<text  x="620.45" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (1 samples, 0.02%)</title><rect x="121.7" y="117" width="0.2" height="15.0" fill="rgb(230,58,3)" rx="2" ry="2" />
<text  x="124.65" y="127.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="564.9" y="1813" width="0.2" height="15.0" fill="rgb(244,19,9)" rx="2" ry="2" />
<text  x="567.90" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="156.0" y="1781" width="0.2" height="15.0" fill="rgb(235,158,48)" rx="2" ry="2" />
<text  x="158.96" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.8" y="1813" width="0.1" height="15.0" fill="rgb(253,180,36)" rx="2" ry="2" />
<text  x="844.75" y="1823.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="774.5" y="1541" width="0.4" height="15.0" fill="rgb(242,132,45)" rx="2" ry="2" />
<text  x="777.52" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="487.2" y="1973" width="0.7" height="15.0" fill="rgb(232,32,52)" rx="2" ry="2" />
<text  x="490.16" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="343.8" y="1925" width="1.0" height="15.0" fill="rgb(242,4,33)" rx="2" ry="2" />
<text  x="346.77" y="1935.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="513.9" y="1957" width="1.0" height="15.0" fill="rgb(206,53,13)" rx="2" ry="2" />
<text  x="516.93" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="321.0" y="1781" width="0.2" height="15.0" fill="rgb(217,127,33)" rx="2" ry="2" />
<text  x="323.96" y="1791.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="942.9" y="1909" width="0.2" height="15.0" fill="rgb(209,64,0)" rx="2" ry="2" />
<text  x="945.89" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="549.2" y="1781" width="0.2" height="15.0" fill="rgb(227,220,12)" rx="2" ry="2" />
<text  x="552.23" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1012.5" y="1973" width="0.2" height="15.0" fill="rgb(210,178,48)" rx="2" ry="2" />
<text  x="1015.50" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="389.2" y="1717" width="0.2" height="15.0" fill="rgb(224,39,54)" rx="2" ry="2" />
<text  x="392.19" y="1727.5" ></text>
</g>
<g >
<title>__sched_text_start (13 samples, 0.22%)</title><rect x="241.0" y="1957" width="2.6" height="15.0" fill="rgb(224,26,21)" rx="2" ry="2" />
<text  x="244.04" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1143.2" y="1957" width="0.2" height="15.0" fill="rgb(220,66,19)" rx="2" ry="2" />
<text  x="1146.20" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="313.0" y="1653" width="0.2" height="15.0" fill="rgb(207,223,40)" rx="2" ry="2" />
<text  x="316.03" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="167.9" y="1797" width="0.2" height="15.0" fill="rgb(224,134,2)" rx="2" ry="2" />
<text  x="170.86" y="1807.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="396.3" y="1877" width="0.2" height="15.0" fill="rgb(249,59,29)" rx="2" ry="2" />
<text  x="399.33" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (2 samples, 0.03%)</title><rect x="597.0" y="1845" width="0.4" height="15.0" fill="rgb(242,194,50)" rx="2" ry="2" />
<text  x="600.03" y="1855.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="456.8" y="1877" width="0.2" height="15.0" fill="rgb(231,99,6)" rx="2" ry="2" />
<text  x="459.81" y="1887.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="64.5" y="1909" width="0.2" height="15.0" fill="rgb(233,153,41)" rx="2" ry="2" />
<text  x="67.54" y="1919.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="84.8" y="1941" width="0.2" height="15.0" fill="rgb(246,95,45)" rx="2" ry="2" />
<text  x="87.77" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (6 samples, 0.10%)</title><rect x="1016.1" y="2037" width="1.2" height="15.0" fill="rgb(208,107,28)" rx="2" ry="2" />
<text  x="1019.07" y="2047.5" ></text>
</g>
<g >
<title>inet_getname (14 samples, 0.24%)</title><rect x="593.3" y="1861" width="2.7" height="15.0" fill="rgb(226,26,8)" rx="2" ry="2" />
<text  x="596.26" y="1871.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="596.4" y="1829" width="0.4" height="15.0" fill="rgb(214,176,6)" rx="2" ry="2" />
<text  x="599.43" y="1839.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="343.6" y="1685" width="0.2" height="15.0" fill="rgb(206,50,10)" rx="2" ry="2" />
<text  x="346.57" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="983.7" y="1909" width="0.2" height="15.0" fill="rgb(221,38,39)" rx="2" ry="2" />
<text  x="986.75" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="689.4" y="1557" width="0.2" height="15.0" fill="rgb(215,222,2)" rx="2" ry="2" />
<text  x="692.44" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (2 samples, 0.03%)</title><rect x="1145.6" y="2037" width="0.4" height="15.0" fill="rgb(233,32,8)" rx="2" ry="2" />
<text  x="1148.58" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1006.0" y="1973" width="0.4" height="15.0" fill="rgb(225,73,46)" rx="2" ry="2" />
<text  x="1008.96" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="104.2" y="1605" width="18.8" height="15.0" fill="rgb(232,74,9)" rx="2" ry="2" />
<text  x="107.20" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="962.3" y="1925" width="0.2" height="15.0" fill="rgb(206,180,43)" rx="2" ry="2" />
<text  x="965.33" y="1935.5" ></text>
</g>
<g >
<title>task_work_add (2 samples, 0.03%)</title><rect x="826.1" y="1813" width="0.4" height="15.0" fill="rgb(216,107,48)" rx="2" ry="2" />
<text  x="829.08" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (3 samples, 0.05%)</title><rect x="1180.9" y="2021" width="0.6" height="15.0" fill="rgb(245,88,26)" rx="2" ry="2" />
<text  x="1183.88" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.03%)</title><rect x="78.0" y="1957" width="0.4" height="15.0" fill="rgb(234,73,16)" rx="2" ry="2" />
<text  x="81.02" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="822.5" y="1765" width="0.2" height="15.0" fill="rgb(251,58,5)" rx="2" ry="2" />
<text  x="825.51" y="1775.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="695.2" y="1989" width="0.2" height="15.0" fill="rgb(240,129,44)" rx="2" ry="2" />
<text  x="698.19" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="223.2" y="1877" width="0.2" height="15.0" fill="rgb(231,25,5)" rx="2" ry="2" />
<text  x="226.19" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (2 samples, 0.03%)</title><rect x="837.0" y="1941" width="0.4" height="15.0" fill="rgb(205,112,49)" rx="2" ry="2" />
<text  x="839.99" y="1951.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1147.0" y="1973" width="0.4" height="15.0" fill="rgb(238,174,35)" rx="2" ry="2" />
<text  x="1149.96" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="457.2" y="1717" width="0.2" height="15.0" fill="rgb(250,10,23)" rx="2" ry="2" />
<text  x="460.21" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="552.6" y="1749" width="0.2" height="15.0" fill="rgb(227,147,42)" rx="2" ry="2" />
<text  x="555.60" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="552.6" y="1781" width="0.2" height="15.0" fill="rgb(237,9,20)" rx="2" ry="2" />
<text  x="555.60" y="1791.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="14.4" y="1989" width="0.2" height="15.0" fill="rgb(242,165,15)" rx="2" ry="2" />
<text  x="17.36" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="800.7" y="1653" width="0.2" height="15.0" fill="rgb(230,197,26)" rx="2" ry="2" />
<text  x="803.70" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="973.4" y="1701" width="0.2" height="15.0" fill="rgb(248,127,48)" rx="2" ry="2" />
<text  x="976.44" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="1068.6" y="1845" width="0.4" height="15.0" fill="rgb(211,54,51)" rx="2" ry="2" />
<text  x="1071.63" y="1855.5" ></text>
</g>
<g >
<title>tcp_write_xmit (250 samples, 4.20%)</title><rect x="757.1" y="1701" width="49.5" height="15.0" fill="rgb(244,105,28)" rx="2" ry="2" />
<text  x="760.07" y="1711.5" >tcp_w..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="761.4" y="1637" width="0.2" height="15.0" fill="rgb(217,149,49)" rx="2" ry="2" />
<text  x="764.43" y="1647.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1158.9" y="1573" width="0.2" height="15.0" fill="rgb(240,147,19)" rx="2" ry="2" />
<text  x="1161.86" y="1583.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="733.5" y="1765" width="0.2" height="15.0" fill="rgb(243,77,32)" rx="2" ry="2" />
<text  x="736.47" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="644.2" y="1861" width="0.2" height="15.0" fill="rgb(240,117,27)" rx="2" ry="2" />
<text  x="647.23" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="891.7" y="2005" width="0.6" height="15.0" fill="rgb(248,140,13)" rx="2" ry="2" />
<text  x="894.73" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="962.3" y="1989" width="0.2" height="15.0" fill="rgb(239,70,35)" rx="2" ry="2" />
<text  x="965.33" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.8" y="1557" width="0.2" height="15.0" fill="rgb(219,211,35)" rx="2" ry="2" />
<text  x="125.84" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="487.2" y="1957" width="0.7" height="15.0" fill="rgb(253,179,47)" rx="2" ry="2" />
<text  x="490.16" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="723.8" y="1733" width="0.5" height="15.0" fill="rgb(207,109,6)" rx="2" ry="2" />
<text  x="726.75" y="1743.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="441.5" y="1989" width="0.4" height="15.0" fill="rgb(205,156,53)" rx="2" ry="2" />
<text  x="444.54" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="610.1" y="1877" width="0.2" height="15.0" fill="rgb(221,217,8)" rx="2" ry="2" />
<text  x="613.11" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (123 samples, 2.07%)</title><rect x="103.4" y="1973" width="24.4" height="15.0" fill="rgb(212,143,2)" rx="2" ry="2" />
<text  x="106.41" y="1983.5" >[..</text>
</g>
<g >
<title>futex_wait (20 samples, 0.34%)</title><rect x="17.7" y="1973" width="4.0" height="15.0" fill="rgb(207,136,19)" rx="2" ry="2" />
<text  x="20.73" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="484.2" y="1845" width="0.2" height="15.0" fill="rgb(243,40,8)" rx="2" ry="2" />
<text  x="487.18" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="962.3" y="1861" width="0.2" height="15.0" fill="rgb(214,118,17)" rx="2" ry="2" />
<text  x="965.33" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="104.0" y="1669" width="19.6" height="15.0" fill="rgb(215,108,42)" rx="2" ry="2" />
<text  x="107.00" y="1679.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="959.0" y="1989" width="0.2" height="15.0" fill="rgb(233,58,7)" rx="2" ry="2" />
<text  x="961.96" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="457.2" y="1669" width="0.2" height="15.0" fill="rgb(232,116,12)" rx="2" ry="2" />
<text  x="460.21" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="326.5" y="1749" width="0.4" height="15.0" fill="rgb(252,160,54)" rx="2" ry="2" />
<text  x="329.52" y="1759.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="389.8" y="1909" width="0.2" height="15.0" fill="rgb(227,193,22)" rx="2" ry="2" />
<text  x="392.78" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="994.9" y="1941" width="0.2" height="15.0" fill="rgb(211,75,8)" rx="2" ry="2" />
<text  x="997.85" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.34%)</title><rect x="10.4" y="1925" width="4.0" height="15.0" fill="rgb(227,44,47)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>dentry_free (4 samples, 0.07%)</title><rect x="723.6" y="1749" width="0.7" height="15.0" fill="rgb(253,181,7)" rx="2" ry="2" />
<text  x="726.55" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1182.1" y="1989" width="0.2" height="15.0" fill="rgb(223,52,8)" rx="2" ry="2" />
<text  x="1185.07" y="1999.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="987.3" y="1893" width="0.2" height="15.0" fill="rgb(244,1,43)" rx="2" ry="2" />
<text  x="990.32" y="1903.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="393.9" y="1893" width="0.2" height="15.0" fill="rgb(231,108,45)" rx="2" ry="2" />
<text  x="396.95" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="103.4" y="1909" width="0.2" height="15.0" fill="rgb(222,76,28)" rx="2" ry="2" />
<text  x="106.41" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="228.7" y="2021" width="0.2" height="15.0" fill="rgb(252,207,38)" rx="2" ry="2" />
<text  x="231.75" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="565.9" y="1637" width="0.2" height="15.0" fill="rgb(216,126,23)" rx="2" ry="2" />
<text  x="568.89" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (5 samples, 0.08%)</title><rect x="1142.0" y="1989" width="1.0" height="15.0" fill="rgb(254,58,14)" rx="2" ry="2" />
<text  x="1145.01" y="1999.5" ></text>
</g>
<g >
<title>ep_remove (66 samples, 1.11%)</title><rect x="467.7" y="1973" width="13.1" height="15.0" fill="rgb(223,98,20)" rx="2" ry="2" />
<text  x="470.72" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (2 samples, 0.03%)</title><rect x="602.6" y="1973" width="0.4" height="15.0" fill="rgb(250,51,19)" rx="2" ry="2" />
<text  x="605.58" y="1983.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (53 samples, 0.89%)</title><rect x="264.8" y="1877" width="10.6" height="15.0" fill="rgb(215,122,15)" rx="2" ry="2" />
<text  x="267.84" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="973.4" y="1829" width="0.2" height="15.0" fill="rgb(239,69,49)" rx="2" ry="2" />
<text  x="976.44" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="414.0" y="1685" width="0.2" height="15.0" fill="rgb(246,47,35)" rx="2" ry="2" />
<text  x="416.98" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="541.3" y="1893" width="0.6" height="15.0" fill="rgb(232,68,23)" rx="2" ry="2" />
<text  x="544.30" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="457.0" y="1829" width="0.4" height="15.0" fill="rgb(224,209,26)" rx="2" ry="2" />
<text  x="460.01" y="1839.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="389.4" y="1957" width="0.2" height="15.0" fill="rgb(241,61,10)" rx="2" ry="2" />
<text  x="392.38" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="104.4" y="1573" width="18.4" height="15.0" fill="rgb(246,100,2)" rx="2" ry="2" />
<text  x="107.40" y="1583.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1189.2" y="2021" width="0.6" height="15.0" fill="rgb(219,211,39)" rx="2" ry="2" />
<text  x="1192.21" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="866.9" y="1653" width="0.2" height="15.0" fill="rgb(243,169,26)" rx="2" ry="2" />
<text  x="869.94" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="319.2" y="1733" width="0.2" height="15.0" fill="rgb(220,72,31)" rx="2" ry="2" />
<text  x="322.18" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="180.2" y="2021" width="0.2" height="15.0" fill="rgb(211,125,11)" rx="2" ry="2" />
<text  x="183.16" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="564.9" y="1909" width="0.2" height="15.0" fill="rgb(212,122,10)" rx="2" ry="2" />
<text  x="567.90" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (4 samples, 0.07%)</title><rect x="1136.9" y="2005" width="0.7" height="15.0" fill="rgb(239,102,17)" rx="2" ry="2" />
<text  x="1139.85" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="104.4" y="133" width="17.3" height="15.0" fill="rgb(220,223,18)" rx="2" ry="2" />
<text  x="107.40" y="143.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="509.0" y="1925" width="0.2" height="15.0" fill="rgb(225,226,41)" rx="2" ry="2" />
<text  x="511.97" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="689.4" y="1717" width="0.2" height="15.0" fill="rgb(225,29,20)" rx="2" ry="2" />
<text  x="692.44" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="277.7" y="1621" width="0.2" height="15.0" fill="rgb(229,206,41)" rx="2" ry="2" />
<text  x="280.73" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="121.7" y="53" width="0.2" height="15.0" fill="rgb(211,216,43)" rx="2" ry="2" />
<text  x="124.65" y="63.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="158.1" y="1941" width="0.2" height="15.0" fill="rgb(242,149,1)" rx="2" ry="2" />
<text  x="161.14" y="1951.5" ></text>
</g>
<g >
<title>sock_edemux (1 samples, 0.02%)</title><rect x="553.4" y="1797" width="0.2" height="15.0" fill="rgb(254,227,35)" rx="2" ry="2" />
<text  x="556.39" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="223.8" y="1893" width="0.8" height="15.0" fill="rgb(215,43,34)" rx="2" ry="2" />
<text  x="226.79" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="275.2" y="1829" width="0.2" height="15.0" fill="rgb(234,140,22)" rx="2" ry="2" />
<text  x="278.15" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="121.1" y="69" width="0.2" height="15.0" fill="rgb(238,157,15)" rx="2" ry="2" />
<text  x="124.06" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="866.9" y="1813" width="0.2" height="15.0" fill="rgb(246,86,10)" rx="2" ry="2" />
<text  x="869.94" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="81.0" y="1941" width="0.2" height="15.0" fill="rgb(252,223,30)" rx="2" ry="2" />
<text  x="84.00" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (56 samples, 0.94%)</title><rect x="914.5" y="1973" width="11.1" height="15.0" fill="rgb(229,36,47)" rx="2" ry="2" />
<text  x="917.53" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="918.9" y="1861" width="0.2" height="15.0" fill="rgb(224,151,0)" rx="2" ry="2" />
<text  x="921.90" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="873.1" y="1877" width="0.4" height="15.0" fill="rgb(249,225,32)" rx="2" ry="2" />
<text  x="876.09" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="87.5" y="1957" width="0.4" height="15.0" fill="rgb(221,201,52)" rx="2" ry="2" />
<text  x="90.54" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="733.5" y="1749" width="0.2" height="15.0" fill="rgb(253,75,39)" rx="2" ry="2" />
<text  x="736.47" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="487.2" y="1989" width="0.7" height="15.0" fill="rgb(217,27,46)" rx="2" ry="2" />
<text  x="490.16" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="396.7" y="1861" width="0.2" height="15.0" fill="rgb(218,13,37)" rx="2" ry="2" />
<text  x="399.72" y="1871.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="319.2" y="1509" width="0.2" height="15.0" fill="rgb(229,107,35)" rx="2" ry="2" />
<text  x="322.18" y="1519.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="848.9" y="1941" width="0.4" height="15.0" fill="rgb(238,145,52)" rx="2" ry="2" />
<text  x="851.89" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="137.7" y="1973" width="0.2" height="15.0" fill="rgb(254,30,35)" rx="2" ry="2" />
<text  x="140.72" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="890.9" y="1989" width="0.2" height="15.0" fill="rgb(232,96,31)" rx="2" ry="2" />
<text  x="893.93" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="264.4" y="1861" width="0.2" height="15.0" fill="rgb(213,28,45)" rx="2" ry="2" />
<text  x="267.44" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="408.8" y="1893" width="0.2" height="15.0" fill="rgb(240,65,37)" rx="2" ry="2" />
<text  x="411.82" y="1903.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="901.0" y="2005" width="0.2" height="15.0" fill="rgb(219,52,39)" rx="2" ry="2" />
<text  x="904.05" y="2015.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (2 samples, 0.03%)</title><rect x="797.3" y="1653" width="0.4" height="15.0" fill="rgb(231,227,32)" rx="2" ry="2" />
<text  x="800.33" y="1663.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="58.2" y="1605" width="0.2" height="15.0" fill="rgb(215,208,40)" rx="2" ry="2" />
<text  x="61.19" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="570.5" y="1941" width="0.1" height="15.0" fill="rgb(246,74,40)" rx="2" ry="2" />
<text  x="573.45" y="1951.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="165.5" y="1861" width="0.2" height="15.0" fill="rgb(222,194,47)" rx="2" ry="2" />
<text  x="168.48" y="1871.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="983.2" y="1909" width="0.3" height="15.0" fill="rgb(253,154,25)" rx="2" ry="2" />
<text  x="986.15" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="689.4" y="1573" width="0.2" height="15.0" fill="rgb(252,66,38)" rx="2" ry="2" />
<text  x="692.44" y="1583.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="28.8" y="2005" width="0.4" height="15.0" fill="rgb(210,53,28)" rx="2" ry="2" />
<text  x="31.84" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="145.3" y="1909" width="0.2" height="15.0" fill="rgb(229,200,3)" rx="2" ry="2" />
<text  x="148.25" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="243.8" y="1749" width="0.2" height="15.0" fill="rgb(229,206,51)" rx="2" ry="2" />
<text  x="246.82" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="121.1" y="37" width="0.2" height="15.0" fill="rgb(254,157,7)" rx="2" ry="2" />
<text  x="124.06" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (19 samples, 0.32%)</title><rect x="86.7" y="1973" width="3.8" height="15.0" fill="rgb(245,159,48)" rx="2" ry="2" />
<text  x="89.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="289.2" y="1509" width="0.2" height="15.0" fill="rgb(223,199,51)" rx="2" ry="2" />
<text  x="292.23" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="895.5" y="1973" width="0.8" height="15.0" fill="rgb(243,165,19)" rx="2" ry="2" />
<text  x="898.50" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="994.7" y="1957" width="0.4" height="15.0" fill="rgb(206,58,29)" rx="2" ry="2" />
<text  x="997.66" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="273.6" y="1781" width="0.2" height="15.0" fill="rgb(244,210,39)" rx="2" ry="2" />
<text  x="276.57" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (18 samples, 0.30%)</title><rect x="844.1" y="1925" width="3.6" height="15.0" fill="rgb(231,145,29)" rx="2" ry="2" />
<text  x="847.13" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::ControllerCallback::~ControllerCallback (1 samples, 0.02%)</title><rect x="963.5" y="2037" width="0.2" height="15.0" fill="rgb(242,42,46)" rx="2" ry="2" />
<text  x="966.52" y="2047.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="365.0" y="1941" width="0.2" height="15.0" fill="rgb(209,36,19)" rx="2" ry="2" />
<text  x="367.99" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="946.7" y="1877" width="0.2" height="15.0" fill="rgb(250,174,32)" rx="2" ry="2" />
<text  x="949.66" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="521.3" y="1973" width="0.2" height="15.0" fill="rgb(217,212,32)" rx="2" ry="2" />
<text  x="524.27" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="841.0" y="1909" width="0.2" height="15.0" fill="rgb(245,137,4)" rx="2" ry="2" />
<text  x="843.96" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (6 samples, 0.10%)</title><rect x="642.0" y="1989" width="1.2" height="15.0" fill="rgb(219,126,0)" rx="2" ry="2" />
<text  x="645.04" y="1999.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="340.2" y="1957" width="0.2" height="15.0" fill="rgb(245,47,44)" rx="2" ry="2" />
<text  x="343.20" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="335.6" y="1797" width="0.2" height="15.0" fill="rgb(245,141,44)" rx="2" ry="2" />
<text  x="338.64" y="1807.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="991.9" y="1925" width="0.2" height="15.0" fill="rgb(243,21,27)" rx="2" ry="2" />
<text  x="994.88" y="1935.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="827.1" y="1573" width="0.2" height="15.0" fill="rgb(244,205,40)" rx="2" ry="2" />
<text  x="830.08" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (2 samples, 0.03%)</title><rect x="546.1" y="1973" width="0.4" height="15.0" fill="rgb(244,196,27)" rx="2" ry="2" />
<text  x="549.06" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="832.2" y="1925" width="0.2" height="15.0" fill="rgb(236,177,26)" rx="2" ry="2" />
<text  x="835.23" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (4 samples, 0.07%)</title><rect x="1004.6" y="1989" width="0.8" height="15.0" fill="rgb(236,66,18)" rx="2" ry="2" />
<text  x="1007.57" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="509.0" y="1813" width="0.2" height="15.0" fill="rgb(247,158,37)" rx="2" ry="2" />
<text  x="511.97" y="1823.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="668.2" y="1525" width="0.2" height="15.0" fill="rgb(221,221,39)" rx="2" ry="2" />
<text  x="671.22" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="32.8" y="1813" width="0.2" height="15.0" fill="rgb(238,137,25)" rx="2" ry="2" />
<text  x="35.81" y="1823.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="666.2" y="1813" width="0.4" height="15.0" fill="rgb(250,151,19)" rx="2" ry="2" />
<text  x="669.24" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="847.3" y="1797" width="0.2" height="15.0" fill="rgb(215,139,53)" rx="2" ry="2" />
<text  x="850.30" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1061.7" y="1893" width="0.2" height="15.0" fill="rgb(216,57,12)" rx="2" ry="2" />
<text  x="1064.69" y="1903.5" ></text>
</g>
<g >
<title>ksize (9 samples, 0.15%)</title><rect x="754.3" y="1701" width="1.8" height="15.0" fill="rgb(237,30,6)" rx="2" ry="2" />
<text  x="757.29" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="166.5" y="2021" width="0.4" height="15.0" fill="rgb(234,168,53)" rx="2" ry="2" />
<text  x="169.47" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (3 samples, 0.05%)</title><rect x="516.3" y="1957" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="519.31" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="118.1" y="37" width="0.2" height="15.0" fill="rgb(252,75,46)" rx="2" ry="2" />
<text  x="121.08" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="946.7" y="2005" width="0.2" height="15.0" fill="rgb(243,134,46)" rx="2" ry="2" />
<text  x="949.66" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1158.9" y="1541" width="0.2" height="15.0" fill="rgb(238,103,10)" rx="2" ry="2" />
<text  x="1161.86" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="893.7" y="2005" width="6.6" height="15.0" fill="rgb(246,188,41)" rx="2" ry="2" />
<text  x="896.71" y="2015.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.65 (3 samples, 0.05%)</title><rect x="1072.6" y="1829" width="0.6" height="15.0" fill="rgb(228,129,47)" rx="2" ry="2" />
<text  x="1075.59" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (3 samples, 0.05%)</title><rect x="645.0" y="2005" width="0.6" height="15.0" fill="rgb(239,97,41)" rx="2" ry="2" />
<text  x="648.02" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="466.7" y="1877" width="0.2" height="15.0" fill="rgb(234,153,45)" rx="2" ry="2" />
<text  x="469.73" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="946.7" y="2021" width="0.2" height="15.0" fill="rgb(231,116,43)" rx="2" ry="2" />
<text  x="949.66" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="668.2" y="1797" width="0.2" height="15.0" fill="rgb(226,60,34)" rx="2" ry="2" />
<text  x="671.22" y="1807.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="243.6" y="1797" width="0.2" height="15.0" fill="rgb(222,85,47)" rx="2" ry="2" />
<text  x="246.62" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (8 samples, 0.13%)</title><rect x="851.9" y="1989" width="1.6" height="15.0" fill="rgb(254,16,34)" rx="2" ry="2" />
<text  x="854.87" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="509.0" y="1733" width="0.2" height="15.0" fill="rgb(252,36,49)" rx="2" ry="2" />
<text  x="511.97" y="1743.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="176.8" y="1941" width="0.4" height="15.0" fill="rgb(252,78,51)" rx="2" ry="2" />
<text  x="179.79" y="1951.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="298.2" y="1669" width="0.9" height="15.0" fill="rgb(205,60,48)" rx="2" ry="2" />
<text  x="301.16" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="394.1" y="1861" width="0.2" height="15.0" fill="rgb(206,12,23)" rx="2" ry="2" />
<text  x="397.14" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="1068.6" y="1829" width="0.4" height="15.0" fill="rgb(249,181,19)" rx="2" ry="2" />
<text  x="1071.63" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="892.1" y="1973" width="0.2" height="15.0" fill="rgb(246,41,33)" rx="2" ry="2" />
<text  x="895.12" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="845.9" y="1797" width="0.2" height="15.0" fill="rgb(253,54,2)" rx="2" ry="2" />
<text  x="848.92" y="1807.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="241.2" y="1861" width="0.2" height="15.0" fill="rgb(240,131,24)" rx="2" ry="2" />
<text  x="244.24" y="1871.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="399.1" y="1877" width="0.2" height="15.0" fill="rgb(214,87,21)" rx="2" ry="2" />
<text  x="402.10" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.18%)</title><rect x="582.9" y="1957" width="2.2" height="15.0" fill="rgb(239,59,19)" rx="2" ry="2" />
<text  x="585.94" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1101.0" y="1797" width="0.2" height="15.0" fill="rgb(251,67,47)" rx="2" ry="2" />
<text  x="1103.95" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="105.6" y="37" width="0.2" height="15.0" fill="rgb(232,128,19)" rx="2" ry="2" />
<text  x="108.59" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="167.3" y="1941" width="0.4" height="15.0" fill="rgb(228,168,2)" rx="2" ry="2" />
<text  x="170.27" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (525 samples, 8.82%)</title><rect x="718.4" y="1861" width="104.1" height="15.0" fill="rgb(236,192,2)" rx="2" ry="2" />
<text  x="721.40" y="1871.5" >exit_to_user..</text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="740.4" y="1749" width="0.2" height="15.0" fill="rgb(222,119,37)" rx="2" ry="2" />
<text  x="743.41" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="891.5" y="1989" width="0.2" height="15.0" fill="rgb(229,160,7)" rx="2" ry="2" />
<text  x="894.53" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (50 samples, 0.84%)</title><rect x="1101.9" y="1605" width="10.0" height="15.0" fill="rgb(242,95,31)" rx="2" ry="2" />
<text  x="1104.95" y="1615.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="126.8" y="1925" width="0.2" height="15.0" fill="rgb(208,217,15)" rx="2" ry="2" />
<text  x="129.81" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="549.2" y="1829" width="0.2" height="15.0" fill="rgb(210,163,39)" rx="2" ry="2" />
<text  x="552.23" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="186.7" y="1909" width="0.2" height="15.0" fill="rgb(231,96,48)" rx="2" ry="2" />
<text  x="189.70" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="121.5" y="53" width="0.2" height="15.0" fill="rgb(213,105,3)" rx="2" ry="2" />
<text  x="124.46" y="63.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (3 samples, 0.05%)</title><rect x="603.6" y="1925" width="0.6" height="15.0" fill="rgb(228,177,17)" rx="2" ry="2" />
<text  x="606.57" y="1935.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="278.9" y="1813" width="0.2" height="15.0" fill="rgb(238,53,36)" rx="2" ry="2" />
<text  x="281.92" y="1823.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (29 samples, 0.49%)</title><rect x="799.3" y="1685" width="5.8" height="15.0" fill="rgb(254,161,29)" rx="2" ry="2" />
<text  x="802.31" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="223.8" y="1925" width="0.8" height="15.0" fill="rgb(243,62,38)" rx="2" ry="2" />
<text  x="226.79" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="552.6" y="1925" width="0.2" height="15.0" fill="rgb(210,151,50)" rx="2" ry="2" />
<text  x="555.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="243.8" y="1765" width="0.2" height="15.0" fill="rgb(244,53,17)" rx="2" ry="2" />
<text  x="246.82" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="631.9" y="1909" width="0.6" height="15.0" fill="rgb(205,79,49)" rx="2" ry="2" />
<text  x="634.93" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="76.2" y="1925" width="0.4" height="15.0" fill="rgb(219,43,38)" rx="2" ry="2" />
<text  x="79.24" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="54.0" y="1877" width="0.2" height="15.0" fill="rgb(235,21,0)" rx="2" ry="2" />
<text  x="57.03" y="1887.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1045.8" y="1989" width="0.8" height="15.0" fill="rgb(217,85,54)" rx="2" ry="2" />
<text  x="1048.82" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="644.2" y="1941" width="0.2" height="15.0" fill="rgb(217,212,15)" rx="2" ry="2" />
<text  x="647.23" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="994.9" y="1909" width="0.2" height="15.0" fill="rgb(252,97,23)" rx="2" ry="2" />
<text  x="997.85" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="561.7" y="1813" width="0.2" height="15.0" fill="rgb(234,207,38)" rx="2" ry="2" />
<text  x="564.72" y="1823.5" ></text>
</g>
<g >
<title>tcp_send_mss (29 samples, 0.49%)</title><rect x="331.1" y="1877" width="5.7" height="15.0" fill="rgb(249,11,36)" rx="2" ry="2" />
<text  x="334.08" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="343.6" y="2005" width="0.2" height="15.0" fill="rgb(206,137,21)" rx="2" ry="2" />
<text  x="346.57" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1145.8" y="1989" width="0.2" height="15.0" fill="rgb(220,227,46)" rx="2" ry="2" />
<text  x="1148.77" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="530.4" y="1989" width="0.2" height="15.0" fill="rgb(253,198,53)" rx="2" ry="2" />
<text  x="533.39" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (1 samples, 0.02%)</title><rect x="389.8" y="1941" width="0.2" height="15.0" fill="rgb(219,10,43)" rx="2" ry="2" />
<text  x="392.78" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="644.2" y="1589" width="0.2" height="15.0" fill="rgb(247,198,54)" rx="2" ry="2" />
<text  x="647.23" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="531.0" y="1989" width="0.2" height="15.0" fill="rgb(237,49,11)" rx="2" ry="2" />
<text  x="533.98" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="881.2" y="1957" width="0.4" height="15.0" fill="rgb(220,91,28)" rx="2" ry="2" />
<text  x="884.22" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="456.8" y="1909" width="0.2" height="15.0" fill="rgb(234,153,37)" rx="2" ry="2" />
<text  x="459.81" y="1919.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="271.8" y="1493" width="0.2" height="15.0" fill="rgb(219,128,7)" rx="2" ry="2" />
<text  x="274.78" y="1503.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="745.0" y="1733" width="0.2" height="15.0" fill="rgb(250,211,46)" rx="2" ry="2" />
<text  x="747.97" y="1743.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="572.2" y="1573" width="0.2" height="15.0" fill="rgb(231,192,3)" rx="2" ry="2" />
<text  x="575.24" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="480.6" y="1925" width="0.2" height="15.0" fill="rgb(242,199,3)" rx="2" ry="2" />
<text  x="483.61" y="1935.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="335.4" y="1845" width="0.2" height="15.0" fill="rgb(214,135,39)" rx="2" ry="2" />
<text  x="338.44" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="156.0" y="1797" width="0.2" height="15.0" fill="rgb(210,220,1)" rx="2" ry="2" />
<text  x="158.96" y="1807.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (3 samples, 0.05%)</title><rect x="616.9" y="1989" width="0.6" height="15.0" fill="rgb(234,202,22)" rx="2" ry="2" />
<text  x="619.86" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="960.5" y="2037" width="0.2" height="15.0" fill="rgb(232,43,15)" rx="2" ry="2" />
<text  x="963.54" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (27 samples, 0.45%)</title><rect x="979.0" y="1989" width="5.3" height="15.0" fill="rgb(243,25,19)" rx="2" ry="2" />
<text  x="981.99" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="573.0" y="1989" width="0.2" height="15.0" fill="rgb(212,91,43)" rx="2" ry="2" />
<text  x="576.03" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (21 samples, 0.35%)</title><rect x="10.2" y="2005" width="4.2" height="15.0" fill="rgb(210,24,4)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>tcp_sendmsg (435 samples, 7.31%)</title><rect x="251.4" y="1909" width="86.2" height="15.0" fill="rgb(216,119,30)" rx="2" ry="2" />
<text  x="254.35" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="571.2" y="1989" width="0.2" height="15.0" fill="rgb(232,123,4)" rx="2" ry="2" />
<text  x="574.24" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="120.3" y="85" width="0.6" height="15.0" fill="rgb(205,213,47)" rx="2" ry="2" />
<text  x="123.27" y="95.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="962.3" y="1893" width="0.2" height="15.0" fill="rgb(211,160,9)" rx="2" ry="2" />
<text  x="965.33" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="59.6" y="1909" width="0.2" height="15.0" fill="rgb(226,228,20)" rx="2" ry="2" />
<text  x="62.58" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (17 samples, 0.29%)</title><rect x="940.9" y="2005" width="3.4" height="15.0" fill="rgb(233,22,14)" rx="2" ry="2" />
<text  x="943.91" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="335.6" y="1573" width="0.2" height="15.0" fill="rgb(220,229,54)" rx="2" ry="2" />
<text  x="338.64" y="1583.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="668.2" y="1493" width="0.2" height="15.0" fill="rgb(218,180,35)" rx="2" ry="2" />
<text  x="671.22" y="1503.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="14.2" y="1909" width="0.2" height="15.0" fill="rgb(254,156,31)" rx="2" ry="2" />
<text  x="17.16" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="914.3" y="1941" width="0.2" height="15.0" fill="rgb(243,138,17)" rx="2" ry="2" />
<text  x="917.34" y="1951.5" ></text>
</g>
<g >
<title>ip_send_check (13 samples, 0.22%)</title><rect x="764.2" y="1621" width="2.6" height="15.0" fill="rgb(205,215,19)" rx="2" ry="2" />
<text  x="767.21" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (55 samples, 0.92%)</title><rect x="914.5" y="1957" width="10.9" height="15.0" fill="rgb(225,109,11)" rx="2" ry="2" />
<text  x="917.53" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="858.0" y="1957" width="0.6" height="15.0" fill="rgb(232,58,19)" rx="2" ry="2" />
<text  x="861.01" y="1967.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="1022.8" y="2053" width="0.4" height="15.0" fill="rgb(233,188,28)" rx="2" ry="2" />
<text  x="1025.82" y="2063.5" ></text>
</g>
<g >
<title>set_close_on_exec (2 samples, 0.03%)</title><rect x="564.1" y="1909" width="0.4" height="15.0" fill="rgb(221,3,10)" rx="2" ry="2" />
<text  x="567.10" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="545.9" y="1973" width="0.2" height="15.0" fill="rgb(228,205,53)" rx="2" ry="2" />
<text  x="548.86" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="552.6" y="1877" width="0.2" height="15.0" fill="rgb(214,191,6)" rx="2" ry="2" />
<text  x="555.60" y="1887.5" ></text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.05%)</title><rect x="99.6" y="2005" width="0.6" height="15.0" fill="rgb(210,67,15)" rx="2" ry="2" />
<text  x="102.64" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="314.4" y="1797" width="0.2" height="15.0" fill="rgb(221,11,37)" rx="2" ry="2" />
<text  x="317.42" y="1807.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="734.7" y="1477" width="0.2" height="15.0" fill="rgb(229,188,17)" rx="2" ry="2" />
<text  x="737.66" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (821 samples, 13.80%)</title><rect x="698.4" y="2005" width="162.8" height="15.0" fill="rgb(214,24,16)" rx="2" ry="2" />
<text  x="701.37" y="2015.5" >[unknown]</text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="41.1" y="2005" width="0.4" height="15.0" fill="rgb(219,40,8)" rx="2" ry="2" />
<text  x="44.14" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (7 samples, 0.12%)</title><rect x="573.6" y="1973" width="1.4" height="15.0" fill="rgb(249,198,9)" rx="2" ry="2" />
<text  x="576.62" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.8" y="1749" width="0.1" height="15.0" fill="rgb(247,106,40)" rx="2" ry="2" />
<text  x="844.75" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="575.8" y="1957" width="0.4" height="15.0" fill="rgb(219,174,18)" rx="2" ry="2" />
<text  x="578.81" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="903.6" y="1957" width="0.2" height="15.0" fill="rgb(234,62,9)" rx="2" ry="2" />
<text  x="906.63" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="167.9" y="1813" width="0.2" height="15.0" fill="rgb(208,13,35)" rx="2" ry="2" />
<text  x="170.86" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="854.4" y="1989" width="0.8" height="15.0" fill="rgb(238,82,50)" rx="2" ry="2" />
<text  x="857.44" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="328.3" y="1557" width="0.2" height="15.0" fill="rgb(238,173,23)" rx="2" ry="2" />
<text  x="331.30" y="1567.5" ></text>
</g>
<g >
<title>mempolicy_slab_node (1 samples, 0.02%)</title><rect x="402.1" y="1861" width="0.2" height="15.0" fill="rgb(236,76,44)" rx="2" ry="2" />
<text  x="405.08" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (5 samples, 0.08%)</title><rect x="113.3" y="53" width="1.0" height="15.0" fill="rgb(246,11,26)" rx="2" ry="2" />
<text  x="116.32" y="63.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1081.1" y="1909" width="0.2" height="15.0" fill="rgb(236,201,13)" rx="2" ry="2" />
<text  x="1084.12" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1045.8" y="1925" width="0.8" height="15.0" fill="rgb(240,167,39)" rx="2" ry="2" />
<text  x="1048.82" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (29 samples, 0.49%)</title><rect x="322.7" y="1813" width="5.8" height="15.0" fill="rgb(247,22,1)" rx="2" ry="2" />
<text  x="325.75" y="1823.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (2 samples, 0.03%)</title><rect x="851.5" y="1973" width="0.4" height="15.0" fill="rgb(218,152,13)" rx="2" ry="2" />
<text  x="854.47" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="572.6" y="2005" width="0.8" height="15.0" fill="rgb(235,120,41)" rx="2" ry="2" />
<text  x="575.63" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="127.0" y="1925" width="0.2" height="15.0" fill="rgb(222,13,2)" rx="2" ry="2" />
<text  x="130.01" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.44%)</title><rect x="629.7" y="1957" width="5.2" height="15.0" fill="rgb(214,68,7)" rx="2" ry="2" />
<text  x="632.75" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="655.9" y="1957" width="0.2" height="15.0" fill="rgb(216,132,34)" rx="2" ry="2" />
<text  x="658.93" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="822.3" y="1829" width="0.2" height="15.0" fill="rgb(237,163,2)" rx="2" ry="2" />
<text  x="825.32" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="414.0" y="1893" width="0.2" height="15.0" fill="rgb(216,160,34)" rx="2" ry="2" />
<text  x="416.98" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getReadBuffer (2 samples, 0.03%)</title><rect x="533.4" y="2005" width="0.4" height="15.0" fill="rgb(239,73,45)" rx="2" ry="2" />
<text  x="536.36" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (48 samples, 0.81%)</title><rect x="1102.3" y="1541" width="9.6" height="15.0" fill="rgb(245,149,16)" rx="2" ry="2" />
<text  x="1105.34" y="1551.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.9" y="1861" width="0.2" height="15.0" fill="rgb(218,189,39)" rx="2" ry="2" />
<text  x="1067.86" y="1871.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="922.3" y="1877" width="0.2" height="15.0" fill="rgb(237,136,4)" rx="2" ry="2" />
<text  x="925.27" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="63.5" y="1845" width="0.2" height="15.0" fill="rgb(238,146,21)" rx="2" ry="2" />
<text  x="66.55" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (31 samples, 0.52%)</title><rect x="305.7" y="1669" width="6.1" height="15.0" fill="rgb(242,157,5)" rx="2" ry="2" />
<text  x="308.69" y="1679.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="976.2" y="1973" width="2.4" height="15.0" fill="rgb(253,115,36)" rx="2" ry="2" />
<text  x="979.21" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="935.2" y="1989" width="1.0" height="15.0" fill="rgb(244,213,10)" rx="2" ry="2" />
<text  x="938.16" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="890.1" y="1909" width="0.2" height="15.0" fill="rgb(208,53,54)" rx="2" ry="2" />
<text  x="893.14" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="515.9" y="1957" width="0.2" height="15.0" fill="rgb(218,46,0)" rx="2" ry="2" />
<text  x="518.91" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="734.7" y="1573" width="0.2" height="15.0" fill="rgb(252,178,51)" rx="2" ry="2" />
<text  x="737.66" y="1583.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="133.6" y="1989" width="0.2" height="15.0" fill="rgb(254,60,33)" rx="2" ry="2" />
<text  x="136.55" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (8 samples, 0.13%)</title><rect x="700.7" y="1925" width="1.6" height="15.0" fill="rgb(238,167,0)" rx="2" ry="2" />
<text  x="703.75" y="1935.5" ></text>
</g>
<g >
<title>sys_getsockname (32 samples, 0.54%)</title><rect x="592.3" y="1893" width="6.3" height="15.0" fill="rgb(228,130,1)" rx="2" ry="2" />
<text  x="595.27" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="277" width="17.5" height="15.0" fill="rgb(231,32,23)" rx="2" ry="2" />
<text  x="107.40" y="287.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="572.2" y="1989" width="0.2" height="15.0" fill="rgb(248,137,1)" rx="2" ry="2" />
<text  x="575.24" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="826.5" y="1845" width="0.2" height="15.0" fill="rgb(212,122,29)" rx="2" ry="2" />
<text  x="829.48" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="335.6" y="1733" width="0.2" height="15.0" fill="rgb(218,80,19)" rx="2" ry="2" />
<text  x="338.64" y="1743.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="271.6" y="1813" width="0.2" height="15.0" fill="rgb(249,23,42)" rx="2" ry="2" />
<text  x="274.58" y="1823.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1158.9" y="1653" width="0.2" height="15.0" fill="rgb(213,22,14)" rx="2" ry="2" />
<text  x="1161.86" y="1663.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="35.8" y="1941" width="0.6" height="15.0" fill="rgb(213,143,8)" rx="2" ry="2" />
<text  x="38.78" y="1951.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="298.0" y="1573" width="0.2" height="15.0" fill="rgb(250,219,27)" rx="2" ry="2" />
<text  x="300.96" y="1583.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="579.2" y="1861" width="0.2" height="15.0" fill="rgb(226,26,12)" rx="2" ry="2" />
<text  x="582.18" y="1871.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="667.0" y="1813" width="1.0" height="15.0" fill="rgb(237,39,42)" rx="2" ry="2" />
<text  x="670.03" y="1823.5" ></text>
</g>
<g >
<title>kfree (20 samples, 0.34%)</title><rect x="1105.9" y="1445" width="4.0" height="15.0" fill="rgb(253,14,51)" rx="2" ry="2" />
<text  x="1108.91" y="1455.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="123.4" y="1637" width="0.2" height="15.0" fill="rgb(205,168,45)" rx="2" ry="2" />
<text  x="126.44" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="365.4" y="1765" width="0.2" height="15.0" fill="rgb(230,93,43)" rx="2" ry="2" />
<text  x="368.39" y="1775.5" ></text>
</g>
<g >
<title>sk_reset_timer (28 samples, 0.47%)</title><rect x="322.9" y="1781" width="5.6" height="15.0" fill="rgb(218,182,3)" rx="2" ry="2" />
<text  x="325.95" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="243.8" y="1829" width="0.2" height="15.0" fill="rgb(237,62,43)" rx="2" ry="2" />
<text  x="246.82" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="858.0" y="1973" width="0.6" height="15.0" fill="rgb(249,183,54)" rx="2" ry="2" />
<text  x="861.01" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (3 samples, 0.05%)</title><rect x="135.7" y="1941" width="0.6" height="15.0" fill="rgb(235,63,4)" rx="2" ry="2" />
<text  x="138.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="552.6" y="1653" width="0.2" height="15.0" fill="rgb(220,71,9)" rx="2" ry="2" />
<text  x="555.60" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="572.2" y="1797" width="0.2" height="15.0" fill="rgb(224,102,52)" rx="2" ry="2" />
<text  x="575.24" y="1807.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (22 samples, 0.37%)</title><rect x="947.1" y="1989" width="4.3" height="15.0" fill="rgb(210,35,4)" rx="2" ry="2" />
<text  x="950.06" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="873.5" y="1893" width="0.2" height="15.0" fill="rgb(243,64,33)" rx="2" ry="2" />
<text  x="876.48" y="1903.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="598.2" y="1813" width="0.4" height="15.0" fill="rgb(229,10,54)" rx="2" ry="2" />
<text  x="601.22" y="1823.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="130.6" y="2005" width="0.2" height="15.0" fill="rgb(246,82,28)" rx="2" ry="2" />
<text  x="133.58" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1173.7" y="2005" width="0.4" height="15.0" fill="rgb(248,219,45)" rx="2" ry="2" />
<text  x="1176.74" y="2015.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="10.8" y="1829" width="0.2" height="15.0" fill="rgb(211,81,9)" rx="2" ry="2" />
<text  x="13.79" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="414.0" y="1669" width="0.2" height="15.0" fill="rgb(212,46,0)" rx="2" ry="2" />
<text  x="416.98" y="1679.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="832.4" y="1909" width="0.2" height="15.0" fill="rgb(254,0,41)" rx="2" ry="2" />
<text  x="835.43" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (19 samples, 0.32%)</title><rect x="17.9" y="1861" width="3.8" height="15.0" fill="rgb(206,13,21)" rx="2" ry="2" />
<text  x="20.93" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="545.3" y="1861" width="0.4" height="15.0" fill="rgb(217,110,52)" rx="2" ry="2" />
<text  x="548.26" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="668.2" y="1557" width="0.2" height="15.0" fill="rgb(215,140,39)" rx="2" ry="2" />
<text  x="671.22" y="1567.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="152.4" y="1909" width="0.2" height="15.0" fill="rgb(206,72,0)" rx="2" ry="2" />
<text  x="155.39" y="1919.5" ></text>
</g>
<g >
<title>ep_remove (1 samples, 0.02%)</title><rect x="441.9" y="1989" width="0.2" height="15.0" fill="rgb(220,99,13)" rx="2" ry="2" />
<text  x="444.94" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (2 samples, 0.03%)</title><rect x="74.3" y="1957" width="0.4" height="15.0" fill="rgb(227,63,0)" rx="2" ry="2" />
<text  x="77.26" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="326.7" y="1733" width="0.2" height="15.0" fill="rgb(234,47,9)" rx="2" ry="2" />
<text  x="329.72" y="1743.5" ></text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.03%)</title><rect x="1132.3" y="2053" width="0.4" height="15.0" fill="rgb(209,137,2)" rx="2" ry="2" />
<text  x="1135.29" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="870.5" y="1893" width="0.2" height="15.0" fill="rgb(218,199,12)" rx="2" ry="2" />
<text  x="873.51" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="945.5" y="1957" width="0.2" height="15.0" fill="rgb(230,164,13)" rx="2" ry="2" />
<text  x="948.47" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="877.1" y="1941" width="0.2" height="15.0" fill="rgb(232,89,53)" rx="2" ry="2" />
<text  x="880.05" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="620.2" y="2005" width="0.2" height="15.0" fill="rgb(235,52,13)" rx="2" ry="2" />
<text  x="623.23" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.6" y="1701" width="0.2" height="15.0" fill="rgb(253,15,5)" rx="2" ry="2" />
<text  x="126.64" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="532.2" y="1877" width="0.2" height="15.0" fill="rgb(239,222,25)" rx="2" ry="2" />
<text  x="535.17" y="1887.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (4 samples, 0.07%)</title><rect x="162.3" y="2021" width="0.8" height="15.0" fill="rgb(213,157,13)" rx="2" ry="2" />
<text  x="165.31" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="179.8" y="1989" width="0.2" height="15.0" fill="rgb(245,119,12)" rx="2" ry="2" />
<text  x="182.76" y="1999.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="1014.5" y="2037" width="0.4" height="15.0" fill="rgb(221,8,27)" rx="2" ry="2" />
<text  x="1017.49" y="2047.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="942.9" y="1877" width="0.2" height="15.0" fill="rgb(240,133,16)" rx="2" ry="2" />
<text  x="945.89" y="1887.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="259.9" y="1877" width="0.2" height="15.0" fill="rgb(229,197,20)" rx="2" ry="2" />
<text  x="262.88" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="58.2" y="1813" width="0.2" height="15.0" fill="rgb(216,100,13)" rx="2" ry="2" />
<text  x="61.19" y="1823.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="217.8" y="1877" width="0.2" height="15.0" fill="rgb(219,85,41)" rx="2" ry="2" />
<text  x="220.84" y="1887.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="501.8" y="1589" width="0.2" height="15.0" fill="rgb(214,85,28)" rx="2" ry="2" />
<text  x="504.83" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="855.6" y="1909" width="0.2" height="15.0" fill="rgb(242,211,15)" rx="2" ry="2" />
<text  x="858.63" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="564.9" y="1893" width="0.2" height="15.0" fill="rgb(227,49,34)" rx="2" ry="2" />
<text  x="567.90" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="103.4" y="1749" width="0.2" height="15.0" fill="rgb(236,18,12)" rx="2" ry="2" />
<text  x="106.41" y="1759.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="740.2" y="1749" width="0.2" height="15.0" fill="rgb(226,49,15)" rx="2" ry="2" />
<text  x="743.21" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1019.6" y="2037" width="0.2" height="15.0" fill="rgb(246,42,20)" rx="2" ry="2" />
<text  x="1022.64" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="510.4" y="1957" width="0.2" height="15.0" fill="rgb(252,89,27)" rx="2" ry="2" />
<text  x="513.36" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="553.4" y="1893" width="0.2" height="15.0" fill="rgb(235,53,5)" rx="2" ry="2" />
<text  x="556.39" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="167.9" y="1765" width="0.2" height="15.0" fill="rgb(243,59,38)" rx="2" ry="2" />
<text  x="170.86" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (7 samples, 0.12%)</title><rect x="632.5" y="1925" width="1.4" height="15.0" fill="rgb(222,206,48)" rx="2" ry="2" />
<text  x="635.52" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="56.0" y="1877" width="0.2" height="15.0" fill="rgb(245,4,38)" rx="2" ry="2" />
<text  x="59.01" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="414.0" y="1877" width="0.2" height="15.0" fill="rgb(238,19,5)" rx="2" ry="2" />
<text  x="416.98" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (7 samples, 0.12%)</title><rect x="869.1" y="1941" width="1.4" height="15.0" fill="rgb(214,69,13)" rx="2" ry="2" />
<text  x="872.12" y="1951.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="37.0" y="1957" width="0.2" height="15.0" fill="rgb(243,117,50)" rx="2" ry="2" />
<text  x="39.97" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="186.7" y="1941" width="0.2" height="15.0" fill="rgb(233,24,48)" rx="2" ry="2" />
<text  x="189.70" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="360.2" y="1717" width="0.2" height="15.0" fill="rgb(221,74,40)" rx="2" ry="2" />
<text  x="363.23" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="335.6" y="1845" width="0.2" height="15.0" fill="rgb(216,116,48)" rx="2" ry="2" />
<text  x="338.64" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="148.6" y="1829" width="0.2" height="15.0" fill="rgb(213,146,10)" rx="2" ry="2" />
<text  x="151.63" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="63.7" y="1941" width="1.0" height="15.0" fill="rgb(240,80,10)" rx="2" ry="2" />
<text  x="66.74" y="1951.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1023.8" y="2053" width="0.2" height="15.0" fill="rgb(206,31,18)" rx="2" ry="2" />
<text  x="1026.81" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="56.4" y="1893" width="0.4" height="15.0" fill="rgb(229,117,50)" rx="2" ry="2" />
<text  x="59.41" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (5 samples, 0.08%)</title><rect x="699.2" y="1973" width="1.0" height="15.0" fill="rgb(252,194,33)" rx="2" ry="2" />
<text  x="702.16" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="572.2" y="1877" width="0.2" height="15.0" fill="rgb(211,28,28)" rx="2" ry="2" />
<text  x="575.24" y="1887.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="689.8" y="1861" width="0.2" height="15.0" fill="rgb(225,118,54)" rx="2" ry="2" />
<text  x="692.84" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1158.9" y="1685" width="0.2" height="15.0" fill="rgb(254,184,40)" rx="2" ry="2" />
<text  x="1161.86" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="365.4" y="1749" width="0.2" height="15.0" fill="rgb(236,145,28)" rx="2" ry="2" />
<text  x="368.39" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="994.9" y="1845" width="0.2" height="15.0" fill="rgb(206,191,33)" rx="2" ry="2" />
<text  x="997.85" y="1855.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="510.4" y="1909" width="0.2" height="15.0" fill="rgb(252,176,41)" rx="2" ry="2" />
<text  x="513.36" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="34.4" y="1989" width="2.8" height="15.0" fill="rgb(208,125,1)" rx="2" ry="2" />
<text  x="37.39" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="382.0" y="1861" width="0.8" height="15.0" fill="rgb(231,225,27)" rx="2" ry="2" />
<text  x="385.05" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="487.4" y="1813" width="0.4" height="15.0" fill="rgb(228,36,38)" rx="2" ry="2" />
<text  x="490.35" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="908.0" y="1973" width="0.4" height="15.0" fill="rgb(237,51,5)" rx="2" ry="2" />
<text  x="910.99" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="103.4" y="1685" width="0.2" height="15.0" fill="rgb(213,178,21)" rx="2" ry="2" />
<text  x="106.41" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="913.1" y="1925" width="0.4" height="15.0" fill="rgb(223,207,7)" rx="2" ry="2" />
<text  x="916.15" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (7 samples, 0.12%)</title><rect x="294.0" y="1477" width="1.4" height="15.0" fill="rgb(237,196,46)" rx="2" ry="2" />
<text  x="296.99" y="1487.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (13 samples, 0.22%)</title><rect x="197.2" y="2021" width="2.6" height="15.0" fill="rgb(243,173,25)" rx="2" ry="2" />
<text  x="200.21" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="166.7" y="1989" width="0.2" height="15.0" fill="rgb(244,143,7)" rx="2" ry="2" />
<text  x="169.67" y="1999.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (2 samples, 0.03%)</title><rect x="996.6" y="2021" width="0.4" height="15.0" fill="rgb(242,194,40)" rx="2" ry="2" />
<text  x="999.64" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.2" y="1621" width="0.2" height="15.0" fill="rgb(234,227,38)" rx="2" ry="2" />
<text  x="126.24" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="991.9" y="1973" width="0.2" height="15.0" fill="rgb(215,96,34)" rx="2" ry="2" />
<text  x="994.88" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="565.5" y="1733" width="0.2" height="15.0" fill="rgb(222,29,10)" rx="2" ry="2" />
<text  x="568.49" y="1743.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="389.2" y="1685" width="0.2" height="15.0" fill="rgb(241,162,22)" rx="2" ry="2" />
<text  x="392.19" y="1695.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="333.5" y="1573" width="0.2" height="15.0" fill="rgb(226,180,34)" rx="2" ry="2" />
<text  x="336.46" y="1583.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (98 samples, 1.65%)</title><rect x="673.2" y="2005" width="19.4" height="15.0" fill="rgb(240,217,51)" rx="2" ry="2" />
<text  x="676.18" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="333.5" y="1653" width="0.2" height="15.0" fill="rgb(254,122,50)" rx="2" ry="2" />
<text  x="336.46" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="127.4" y="1925" width="0.2" height="15.0" fill="rgb(238,125,46)" rx="2" ry="2" />
<text  x="130.41" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10 samples, 0.17%)</title><rect x="293.4" y="1557" width="2.0" height="15.0" fill="rgb(239,35,53)" rx="2" ry="2" />
<text  x="296.40" y="1567.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="990.5" y="1909" width="0.8" height="15.0" fill="rgb(209,38,0)" rx="2" ry="2" />
<text  x="993.49" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="200.0" y="2021" width="0.2" height="15.0" fill="rgb(241,144,20)" rx="2" ry="2" />
<text  x="202.99" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (27 samples, 0.45%)</title><rect x="306.1" y="1653" width="5.3" height="15.0" fill="rgb(232,22,24)" rx="2" ry="2" />
<text  x="309.09" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="945.5" y="2005" width="0.2" height="15.0" fill="rgb(233,163,14)" rx="2" ry="2" />
<text  x="948.47" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.82%)</title><rect x="628.2" y="2005" width="9.7" height="15.0" fill="rgb(205,60,13)" rx="2" ry="2" />
<text  x="631.16" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="142.9" y="1941" width="0.2" height="15.0" fill="rgb(237,59,20)" rx="2" ry="2" />
<text  x="145.87" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (2 samples, 0.03%)</title><rect x="832.8" y="1925" width="0.4" height="15.0" fill="rgb(239,84,1)" rx="2" ry="2" />
<text  x="835.83" y="1935.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="293.6" y="1525" width="0.2" height="15.0" fill="rgb(250,211,39)" rx="2" ry="2" />
<text  x="296.60" y="1535.5" ></text>
</g>
<g >
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="10.2" y="1957" width="0.2" height="15.0" fill="rgb(219,176,4)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="487.2" y="1909" width="0.6" height="15.0" fill="rgb(249,106,49)" rx="2" ry="2" />
<text  x="490.16" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="536.5" y="1941" width="0.4" height="15.0" fill="rgb(227,216,7)" rx="2" ry="2" />
<text  x="539.54" y="1951.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="752.9" y="1669" width="0.2" height="15.0" fill="rgb(219,8,44)" rx="2" ry="2" />
<text  x="755.90" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (9 samples, 0.15%)</title><rect x="889.5" y="2037" width="1.8" height="15.0" fill="rgb(249,204,13)" rx="2" ry="2" />
<text  x="892.55" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (592 samples, 9.95%)</title><rect x="709.7" y="1893" width="117.4" height="15.0" fill="rgb(213,138,11)" rx="2" ry="2" />
<text  x="712.67" y="1903.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (1 samples, 0.02%)</title><rect x="1146.8" y="2037" width="0.2" height="15.0" fill="rgb(212,151,15)" rx="2" ry="2" />
<text  x="1149.77" y="2047.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (10 samples, 0.17%)</title><rect x="976.2" y="1957" width="2.0" height="15.0" fill="rgb(209,190,19)" rx="2" ry="2" />
<text  x="979.21" y="1967.5" ></text>
</g>
<g >
<title>sock_poll (40 samples, 0.67%)</title><rect x="459.4" y="1957" width="7.9" height="15.0" fill="rgb(212,45,35)" rx="2" ry="2" />
<text  x="462.39" y="1967.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="984.5" y="1989" width="0.2" height="15.0" fill="rgb(250,229,13)" rx="2" ry="2" />
<text  x="987.54" y="1999.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(217,210,29)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="277.7" y="1765" width="0.2" height="15.0" fill="rgb(229,137,21)" rx="2" ry="2" />
<text  x="280.73" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="264.4" y="1877" width="0.2" height="15.0" fill="rgb(210,134,31)" rx="2" ry="2" />
<text  x="267.44" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8 samples, 0.13%)</title><rect x="272.2" y="1845" width="1.6" height="15.0" fill="rgb(211,80,2)" rx="2" ry="2" />
<text  x="275.18" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="131.4" y="1989" width="0.2" height="15.0" fill="rgb(233,143,42)" rx="2" ry="2" />
<text  x="134.37" y="1999.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1129.9" y="2053" width="0.2" height="15.0" fill="rgb(249,149,7)" rx="2" ry="2" />
<text  x="1132.91" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1397" width="18.0" height="15.0" fill="rgb(240,18,37)" rx="2" ry="2" />
<text  x="107.40" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.8" y="1685" width="0.1" height="15.0" fill="rgb(208,191,47)" rx="2" ry="2" />
<text  x="844.75" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="365.4" y="1861" width="0.2" height="15.0" fill="rgb(211,140,14)" rx="2" ry="2" />
<text  x="368.39" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="806.5" y="1397" width="0.1" height="15.0" fill="rgb(209,23,8)" rx="2" ry="2" />
<text  x="809.45" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (8 samples, 0.13%)</title><rect x="39.2" y="1989" width="1.5" height="15.0" fill="rgb(221,60,26)" rx="2" ry="2" />
<text  x="42.15" y="1999.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="1082.9" y="1925" width="1.4" height="15.0" fill="rgb(253,27,26)" rx="2" ry="2" />
<text  x="1085.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="135.3" y="1925" width="0.2" height="15.0" fill="rgb(235,115,1)" rx="2" ry="2" />
<text  x="138.34" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="880.2" y="1877" width="0.2" height="15.0" fill="rgb(240,30,22)" rx="2" ry="2" />
<text  x="883.23" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="651.2" y="2021" width="1.4" height="15.0" fill="rgb(233,138,1)" rx="2" ry="2" />
<text  x="654.17" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="643.8" y="1925" width="0.2" height="15.0" fill="rgb(239,168,52)" rx="2" ry="2" />
<text  x="646.83" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="973.4" y="1813" width="0.2" height="15.0" fill="rgb(210,131,10)" rx="2" ry="2" />
<text  x="976.44" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="933" width="17.5" height="15.0" fill="rgb(244,160,50)" rx="2" ry="2" />
<text  x="107.40" y="943.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="805" width="17.5" height="15.0" fill="rgb(239,110,38)" rx="2" ry="2" />
<text  x="107.40" y="815.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (1 samples, 0.02%)</title><rect x="601.4" y="1973" width="0.2" height="15.0" fill="rgb(243,62,17)" rx="2" ry="2" />
<text  x="604.39" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="726.5" y="1605" width="0.2" height="15.0" fill="rgb(247,177,11)" rx="2" ry="2" />
<text  x="729.53" y="1615.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="132.4" y="1957" width="0.6" height="15.0" fill="rgb(228,21,38)" rx="2" ry="2" />
<text  x="135.36" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (18 samples, 0.30%)</title><rect x="10.4" y="1893" width="3.6" height="15.0" fill="rgb(208,165,26)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.3" y="37" width="0.2" height="15.0" fill="rgb(210,8,11)" rx="2" ry="2" />
<text  x="120.29" y="47.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="365.4" y="1637" width="0.2" height="15.0" fill="rgb(225,145,27)" rx="2" ry="2" />
<text  x="368.39" y="1647.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="145.1" y="1861" width="0.2" height="15.0" fill="rgb(206,71,6)" rx="2" ry="2" />
<text  x="148.06" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (3 samples, 0.05%)</title><rect x="131.8" y="1941" width="0.6" height="15.0" fill="rgb(219,3,8)" rx="2" ry="2" />
<text  x="134.77" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (8 samples, 0.13%)</title><rect x="212.9" y="1925" width="1.6" height="15.0" fill="rgb(222,40,14)" rx="2" ry="2" />
<text  x="215.88" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="668.2" y="1893" width="0.4" height="15.0" fill="rgb(228,77,20)" rx="2" ry="2" />
<text  x="671.22" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="644.2" y="1733" width="0.2" height="15.0" fill="rgb(251,158,50)" rx="2" ry="2" />
<text  x="647.23" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="575.0" y="1973" width="0.4" height="15.0" fill="rgb(235,125,44)" rx="2" ry="2" />
<text  x="578.01" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (34 samples, 0.57%)</title><rect x="784.4" y="1541" width="6.8" height="15.0" fill="rgb(254,16,11)" rx="2" ry="2" />
<text  x="787.44" y="1551.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="730.1" y="1669" width="0.2" height="15.0" fill="rgb(212,143,35)" rx="2" ry="2" />
<text  x="733.10" y="1679.5" ></text>
</g>
<g >
<title>__GI___getsockname (81 samples, 1.36%)</title><rect x="585.1" y="1941" width="16.1" height="15.0" fill="rgb(252,33,4)" rx="2" ry="2" />
<text  x="588.13" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (2 samples, 0.03%)</title><rect x="1143.4" y="1989" width="0.4" height="15.0" fill="rgb(242,152,21)" rx="2" ry="2" />
<text  x="1146.39" y="1999.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (4 samples, 0.07%)</title><rect x="1082.1" y="1925" width="0.8" height="15.0" fill="rgb(208,103,41)" rx="2" ry="2" />
<text  x="1085.11" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="135.3" y="1829" width="0.2" height="15.0" fill="rgb(208,161,23)" rx="2" ry="2" />
<text  x="138.34" y="1839.5" ></text>
</g>
<g >
<title>event_del_nolock_ (3 samples, 0.05%)</title><rect x="100.8" y="2005" width="0.6" height="15.0" fill="rgb(248,133,1)" rx="2" ry="2" />
<text  x="103.83" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="959.2" y="1957" width="0.2" height="15.0" fill="rgb(218,73,26)" rx="2" ry="2" />
<text  x="962.16" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="620.6" y="1973" width="0.2" height="15.0" fill="rgb(222,69,16)" rx="2" ry="2" />
<text  x="623.63" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="285.1" y="1797" width="0.2" height="15.0" fill="rgb(215,3,21)" rx="2" ry="2" />
<text  x="288.07" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="336.6" y="1797" width="0.2" height="15.0" fill="rgb(211,26,26)" rx="2" ry="2" />
<text  x="339.63" y="1807.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="365.2" y="1941" width="0.4" height="15.0" fill="rgb(236,104,44)" rx="2" ry="2" />
<text  x="368.19" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.3" y="1877" width="0.2" height="15.0" fill="rgb(214,203,8)" rx="2" ry="2" />
<text  x="147.26" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1012.5" y="1845" width="0.2" height="15.0" fill="rgb(222,131,48)" rx="2" ry="2" />
<text  x="1015.50" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="970.5" y="1989" width="0.2" height="15.0" fill="rgb(220,135,50)" rx="2" ry="2" />
<text  x="973.46" y="1999.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.34%)</title><rect x="17.7" y="1941" width="4.0" height="15.0" fill="rgb(249,46,12)" rx="2" ry="2" />
<text  x="20.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="333.5" y="1621" width="0.2" height="15.0" fill="rgb(243,2,45)" rx="2" ry="2" />
<text  x="336.46" y="1631.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="243.6" y="1845" width="0.2" height="15.0" fill="rgb(206,120,10)" rx="2" ry="2" />
<text  x="246.62" y="1855.5" ></text>
</g>
<g >
<title>__fdget_raw (3 samples, 0.05%)</title><rect x="562.7" y="1925" width="0.6" height="15.0" fill="rgb(221,143,4)" rx="2" ry="2" />
<text  x="565.72" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (52 samples, 0.87%)</title><rect x="1101.5" y="1685" width="10.4" height="15.0" fill="rgb(237,167,7)" rx="2" ry="2" />
<text  x="1104.55" y="1695.5" ></text>
</g>
<g >
<title>skb_entail (13 samples, 0.22%)</title><rect x="275.4" y="1877" width="2.5" height="15.0" fill="rgb(243,86,23)" rx="2" ry="2" />
<text  x="278.35" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4 samples, 0.07%)</title><rect x="1111.9" y="1765" width="0.8" height="15.0" fill="rgb(229,23,23)" rx="2" ry="2" />
<text  x="1114.86" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="643.8" y="1685" width="0.2" height="15.0" fill="rgb(206,17,34)" rx="2" ry="2" />
<text  x="646.83" y="1695.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (1 samples, 0.02%)</title><rect x="523.3" y="1941" width="0.1" height="15.0" fill="rgb(220,46,29)" rx="2" ry="2" />
<text  x="526.25" y="1951.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="873.7" y="1909" width="0.2" height="15.0" fill="rgb(228,160,51)" rx="2" ry="2" />
<text  x="876.68" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="173.8" y="1925" width="0.2" height="15.0" fill="rgb(211,92,48)" rx="2" ry="2" />
<text  x="176.81" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="617.7" y="2021" width="0.1" height="15.0" fill="rgb(234,219,12)" rx="2" ry="2" />
<text  x="620.65" y="2031.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="402.7" y="1893" width="0.4" height="15.0" fill="rgb(245,26,25)" rx="2" ry="2" />
<text  x="405.67" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (51 samples, 0.86%)</title><rect x="604.2" y="1925" width="10.1" height="15.0" fill="rgb(215,84,17)" rx="2" ry="2" />
<text  x="607.16" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="983.5" y="1909" width="0.2" height="15.0" fill="rgb(227,120,4)" rx="2" ry="2" />
<text  x="986.55" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="579.2" y="1893" width="0.2" height="15.0" fill="rgb(213,198,23)" rx="2" ry="2" />
<text  x="582.18" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="881.2" y="1925" width="0.4" height="15.0" fill="rgb(249,167,40)" rx="2" ry="2" />
<text  x="884.22" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (30 samples, 0.50%)</title><rect x="629.4" y="1973" width="5.9" height="15.0" fill="rgb(218,177,5)" rx="2" ry="2" />
<text  x="632.35" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (8 samples, 0.13%)</title><rect x="700.7" y="1941" width="1.6" height="15.0" fill="rgb(245,78,48)" rx="2" ry="2" />
<text  x="703.75" y="1951.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (14 samples, 0.24%)</title><rect x="1179.1" y="2053" width="2.8" height="15.0" fill="rgb(234,229,15)" rx="2" ry="2" />
<text  x="1182.09" y="2063.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="510.4" y="2021" width="0.2" height="15.0" fill="rgb(213,33,6)" rx="2" ry="2" />
<text  x="513.36" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="907.0" y="2005" width="0.2" height="15.0" fill="rgb(254,38,7)" rx="2" ry="2" />
<text  x="910.00" y="2015.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="248.8" y="1909" width="0.2" height="15.0" fill="rgb(235,123,37)" rx="2" ry="2" />
<text  x="251.78" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="32.8" y="1797" width="0.2" height="15.0" fill="rgb(218,175,21)" rx="2" ry="2" />
<text  x="35.81" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="976.0" y="1941" width="0.2" height="15.0" fill="rgb(250,188,39)" rx="2" ry="2" />
<text  x="979.01" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="271.8" y="1605" width="0.2" height="15.0" fill="rgb(246,112,23)" rx="2" ry="2" />
<text  x="274.78" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="130.4" y="1989" width="0.2" height="15.0" fill="rgb(241,144,3)" rx="2" ry="2" />
<text  x="133.38" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="484.4" y="1845" width="0.6" height="15.0" fill="rgb(241,144,18)" rx="2" ry="2" />
<text  x="487.38" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1139.0" y="1989" width="0.2" height="15.0" fill="rgb(214,44,45)" rx="2" ry="2" />
<text  x="1142.03" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="186.7" y="1813" width="0.2" height="15.0" fill="rgb(222,187,24)" rx="2" ry="2" />
<text  x="189.70" y="1823.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="835.8" y="1925" width="0.2" height="15.0" fill="rgb(220,69,39)" rx="2" ry="2" />
<text  x="838.80" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1022.4" y="2021" width="0.2" height="15.0" fill="rgb(207,27,22)" rx="2" ry="2" />
<text  x="1025.42" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.4" y="2021" width="0.2" height="15.0" fill="rgb(208,166,52)" rx="2" ry="2" />
<text  x="583.37" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1445" width="18.0" height="15.0" fill="rgb(254,177,23)" rx="2" ry="2" />
<text  x="107.40" y="1455.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (5 samples, 0.08%)</title><rect x="574.0" y="1957" width="1.0" height="15.0" fill="rgb(232,68,34)" rx="2" ry="2" />
<text  x="577.02" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="333.5" y="1733" width="0.2" height="15.0" fill="rgb(235,225,52)" rx="2" ry="2" />
<text  x="336.46" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="696.0" y="2037" width="0.2" height="15.0" fill="rgb(216,151,19)" rx="2" ry="2" />
<text  x="698.99" y="2047.5" ></text>
</g>
<g >
<title>__libc_recv (4 samples, 0.07%)</title><rect x="950.6" y="1973" width="0.8" height="15.0" fill="rgb(247,65,27)" rx="2" ry="2" />
<text  x="953.63" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="529.8" y="2005" width="0.2" height="15.0" fill="rgb(208,121,1)" rx="2" ry="2" />
<text  x="532.79" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="119.1" y="37" width="0.4" height="15.0" fill="rgb(232,153,51)" rx="2" ry="2" />
<text  x="122.08" y="47.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="689.6" y="1957" width="0.2" height="15.0" fill="rgb(232,100,4)" rx="2" ry="2" />
<text  x="692.64" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="572.2" y="1701" width="0.2" height="15.0" fill="rgb(230,32,40)" rx="2" ry="2" />
<text  x="575.24" y="1711.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="501.6" y="1781" width="0.2" height="15.0" fill="rgb(251,161,51)" rx="2" ry="2" />
<text  x="504.63" y="1791.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="343.8" y="2005" width="1.0" height="15.0" fill="rgb(249,89,0)" rx="2" ry="2" />
<text  x="346.77" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (16 samples, 0.27%)</title><rect x="919.3" y="1893" width="3.2" height="15.0" fill="rgb(216,141,1)" rx="2" ry="2" />
<text  x="922.29" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="192.9" y="1877" width="0.1" height="15.0" fill="rgb(226,58,49)" rx="2" ry="2" />
<text  x="195.85" y="1887.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (1 samples, 0.02%)</title><rect x="832.0" y="1909" width="0.2" height="15.0" fill="rgb(226,89,2)" rx="2" ry="2" />
<text  x="835.03" y="1919.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="250.8" y="1829" width="0.2" height="15.0" fill="rgb(234,19,44)" rx="2" ry="2" />
<text  x="253.76" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="618.4" y="2005" width="0.4" height="15.0" fill="rgb(218,2,42)" rx="2" ry="2" />
<text  x="621.44" y="2015.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="761.2" y="1669" width="0.2" height="15.0" fill="rgb(244,179,3)" rx="2" ry="2" />
<text  x="764.23" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (5 samples, 0.08%)</title><rect x="891.3" y="2037" width="1.0" height="15.0" fill="rgb(240,2,5)" rx="2" ry="2" />
<text  x="894.33" y="2047.5" ></text>
</g>
<g >
<title>import_iovec (5 samples, 0.08%)</title><rect x="248.8" y="1925" width="1.0" height="15.0" fill="rgb(249,54,9)" rx="2" ry="2" />
<text  x="251.78" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="832.6" y="1925" width="0.2" height="15.0" fill="rgb(215,194,37)" rx="2" ry="2" />
<text  x="835.63" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="572.2" y="1925" width="0.2" height="15.0" fill="rgb(210,6,8)" rx="2" ry="2" />
<text  x="575.24" y="1935.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="799.1" y="1685" width="0.2" height="15.0" fill="rgb(231,187,30)" rx="2" ry="2" />
<text  x="802.11" y="1695.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="664.7" y="1861" width="0.2" height="15.0" fill="rgb(253,29,23)" rx="2" ry="2" />
<text  x="667.65" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="208.3" y="1957" width="0.2" height="15.0" fill="rgb(220,130,32)" rx="2" ry="2" />
<text  x="211.32" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (82 samples, 1.38%)</title><rect x="493.1" y="2005" width="16.3" height="15.0" fill="rgb(243,139,8)" rx="2" ry="2" />
<text  x="496.11" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 0.22%)</title><rect x="241.0" y="1925" width="2.6" height="15.0" fill="rgb(208,141,16)" rx="2" ry="2" />
<text  x="244.04" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="336.6" y="1781" width="0.2" height="15.0" fill="rgb(254,41,18)" rx="2" ry="2" />
<text  x="339.63" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (6 samples, 0.10%)</title><rect x="1162.4" y="2053" width="1.2" height="15.0" fill="rgb(231,5,14)" rx="2" ry="2" />
<text  x="1165.43" y="2063.5" ></text>
</g>
<g >
<title>__destroy_inode (6 samples, 0.10%)</title><rect x="729.1" y="1685" width="1.2" height="15.0" fill="rgb(242,179,38)" rx="2" ry="2" />
<text  x="732.11" y="1695.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="761.4" y="1589" width="0.2" height="15.0" fill="rgb(254,160,22)" rx="2" ry="2" />
<text  x="764.43" y="1599.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="137.9" y="1973" width="0.6" height="15.0" fill="rgb(231,17,22)" rx="2" ry="2" />
<text  x="140.92" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="147.2" y="1893" width="0.2" height="15.0" fill="rgb(253,209,5)" rx="2" ry="2" />
<text  x="150.24" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (237 samples, 3.98%)</title><rect x="533.8" y="2037" width="47.0" height="15.0" fill="rgb(225,33,10)" rx="2" ry="2" />
<text  x="536.76" y="2047.5" >face..</text>
</g>
<g >
<title>ip_finish_output2 (121 samples, 2.03%)</title><rect x="769.2" y="1605" width="24.0" height="15.0" fill="rgb(210,141,41)" rx="2" ry="2" />
<text  x="772.17" y="1615.5" >i..</text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="402.3" y="1861" width="0.2" height="15.0" fill="rgb(242,102,18)" rx="2" ry="2" />
<text  x="405.28" y="1871.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="228.5" y="2037" width="0.2" height="15.0" fill="rgb(235,163,48)" rx="2" ry="2" />
<text  x="231.55" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="145.1" y="1909" width="0.2" height="15.0" fill="rgb(247,190,21)" rx="2" ry="2" />
<text  x="148.06" y="1919.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="41.5" y="2005" width="0.2" height="15.0" fill="rgb(219,68,0)" rx="2" ry="2" />
<text  x="44.53" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="285.1" y="1685" width="0.2" height="15.0" fill="rgb(231,78,47)" rx="2" ry="2" />
<text  x="288.07" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1138.2" y="1989" width="0.4" height="15.0" fill="rgb(239,208,48)" rx="2" ry="2" />
<text  x="1141.24" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (3 samples, 0.05%)</title><rect x="523.8" y="1973" width="0.6" height="15.0" fill="rgb(250,12,11)" rx="2" ry="2" />
<text  x="526.85" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (18 samples, 0.30%)</title><rect x="196.2" y="2037" width="3.6" height="15.0" fill="rgb(247,194,26)" rx="2" ry="2" />
<text  x="199.22" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="620.4" y="2005" width="0.2" height="15.0" fill="rgb(226,167,31)" rx="2" ry="2" />
<text  x="623.43" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (40 samples, 0.67%)</title><rect x="987.9" y="2021" width="7.9" height="15.0" fill="rgb(243,75,30)" rx="2" ry="2" />
<text  x="990.91" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="336.6" y="1669" width="0.2" height="15.0" fill="rgb(209,109,12)" rx="2" ry="2" />
<text  x="339.63" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="987.3" y="1941" width="0.2" height="15.0" fill="rgb(218,68,11)" rx="2" ry="2" />
<text  x="990.32" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="80.6" y="1877" width="0.4" height="15.0" fill="rgb(252,159,35)" rx="2" ry="2" />
<text  x="83.60" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1179.7" y="2005" width="0.2" height="15.0" fill="rgb(229,79,25)" rx="2" ry="2" />
<text  x="1182.69" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="646.2" y="1957" width="0.2" height="15.0" fill="rgb(252,71,23)" rx="2" ry="2" />
<text  x="649.21" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (3 samples, 0.05%)</title><rect x="970.7" y="1989" width="0.6" height="15.0" fill="rgb(243,29,11)" rx="2" ry="2" />
<text  x="973.66" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (13 samples, 0.22%)</title><rect x="1179.3" y="2037" width="2.6" height="15.0" fill="rgb(254,39,7)" rx="2" ry="2" />
<text  x="1182.29" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="994.9" y="1893" width="0.2" height="15.0" fill="rgb(231,131,33)" rx="2" ry="2" />
<text  x="997.85" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (1 samples, 0.02%)</title><rect x="68.3" y="1973" width="0.2" height="15.0" fill="rgb(229,138,37)" rx="2" ry="2" />
<text  x="71.31" y="1983.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="17.5" y="1941" width="0.2" height="15.0" fill="rgb(234,73,38)" rx="2" ry="2" />
<text  x="20.54" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="621.0" y="2005" width="0.2" height="15.0" fill="rgb(244,72,50)" rx="2" ry="2" />
<text  x="624.02" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="152.2" y="1909" width="0.2" height="15.0" fill="rgb(251,171,7)" rx="2" ry="2" />
<text  x="155.19" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="319.2" y="1685" width="0.2" height="15.0" fill="rgb(206,56,41)" rx="2" ry="2" />
<text  x="322.18" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="532.2" y="1893" width="0.4" height="15.0" fill="rgb(233,123,13)" rx="2" ry="2" />
<text  x="535.17" y="1903.5" ></text>
</g>
<g >
<title>filp_close (11 samples, 0.18%)</title><rect x="824.3" y="1829" width="2.2" height="15.0" fill="rgb(207,103,32)" rx="2" ry="2" />
<text  x="827.30" y="1839.5" ></text>
</g>
<g >
<title>__GI___getpeername (7 samples, 0.12%)</title><rect x="203.2" y="1957" width="1.4" height="15.0" fill="rgb(206,116,14)" rx="2" ry="2" />
<text  x="206.16" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="289.2" y="1605" width="0.2" height="15.0" fill="rgb(235,68,8)" rx="2" ry="2" />
<text  x="292.23" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1179.9" y="2005" width="0.2" height="15.0" fill="rgb(225,11,2)" rx="2" ry="2" />
<text  x="1182.89" y="2015.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="510.4" y="2037" width="0.2" height="15.0" fill="rgb(236,43,14)" rx="2" ry="2" />
<text  x="513.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 2.25%)</title><rect x="103.2" y="2005" width="26.6" height="15.0" fill="rgb(218,86,7)" rx="2" ry="2" />
<text  x="106.21" y="2015.5" >[..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="58.2" y="1701" width="0.2" height="15.0" fill="rgb(218,225,19)" rx="2" ry="2" />
<text  x="61.19" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (8 samples, 0.13%)</title><rect x="976.4" y="1941" width="1.6" height="15.0" fill="rgb(220,176,41)" rx="2" ry="2" />
<text  x="979.41" y="1951.5" ></text>
</g>
<g >
<title>ep_send_events_proc (76 samples, 1.28%)</title><rect x="494.3" y="1941" width="15.1" height="15.0" fill="rgb(224,136,3)" rx="2" ry="2" />
<text  x="497.30" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (88 samples, 1.48%)</title><rect x="68.3" y="1989" width="17.5" height="15.0" fill="rgb(226,135,35)" rx="2" ry="2" />
<text  x="71.31" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="552.6" y="1717" width="0.2" height="15.0" fill="rgb(222,131,20)" rx="2" ry="2" />
<text  x="555.60" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.4" y="1765" width="0.2" height="15.0" fill="rgb(214,75,4)" rx="2" ry="2" />
<text  x="127.43" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="702.1" y="1813" width="0.2" height="15.0" fill="rgb(229,196,40)" rx="2" ry="2" />
<text  x="705.13" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (1 samples, 0.02%)</title><rect x="946.7" y="1957" width="0.2" height="15.0" fill="rgb(247,32,7)" rx="2" ry="2" />
<text  x="949.66" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="650.2" y="1893" width="0.2" height="15.0" fill="rgb(234,41,15)" rx="2" ry="2" />
<text  x="653.17" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="243.8" y="1861" width="0.2" height="15.0" fill="rgb(215,146,38)" rx="2" ry="2" />
<text  x="246.82" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="877.8" y="1925" width="0.4" height="15.0" fill="rgb(246,83,5)" rx="2" ry="2" />
<text  x="880.85" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="343.6" y="1925" width="0.2" height="15.0" fill="rgb(221,183,19)" rx="2" ry="2" />
<text  x="346.57" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="509.0" y="1877" width="0.2" height="15.0" fill="rgb(223,124,42)" rx="2" ry="2" />
<text  x="511.97" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1137.2" y="1989" width="0.4" height="15.0" fill="rgb(216,186,31)" rx="2" ry="2" />
<text  x="1140.25" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="938.3" y="2005" width="0.2" height="15.0" fill="rgb(230,76,50)" rx="2" ry="2" />
<text  x="941.33" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="551.0" y="1957" width="0.2" height="15.0" fill="rgb(243,23,1)" rx="2" ry="2" />
<text  x="554.02" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="615.5" y="1957" width="0.2" height="15.0" fill="rgb(235,149,8)" rx="2" ry="2" />
<text  x="618.47" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="553.4" y="1861" width="0.2" height="15.0" fill="rgb(223,11,35)" rx="2" ry="2" />
<text  x="556.39" y="1871.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (2 samples, 0.03%)</title><rect x="644.0" y="1989" width="0.4" height="15.0" fill="rgb(241,102,50)" rx="2" ry="2" />
<text  x="647.03" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="552.6" y="1733" width="0.2" height="15.0" fill="rgb(254,159,41)" rx="2" ry="2" />
<text  x="555.60" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="530.8" y="2005" width="0.4" height="15.0" fill="rgb(240,83,6)" rx="2" ry="2" />
<text  x="533.79" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="1180.1" y="2005" width="0.6" height="15.0" fill="rgb(226,15,16)" rx="2" ry="2" />
<text  x="1183.08" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="573.2" y="1989" width="0.2" height="15.0" fill="rgb(247,123,19)" rx="2" ry="2" />
<text  x="576.23" y="1999.5" ></text>
</g>
<g >
<title>sock_destroy_inode (3 samples, 0.05%)</title><rect x="732.7" y="1701" width="0.6" height="15.0" fill="rgb(213,68,15)" rx="2" ry="2" />
<text  x="735.68" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="509.2" y="1861" width="0.2" height="15.0" fill="rgb(226,169,2)" rx="2" ry="2" />
<text  x="512.17" y="1871.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="876.7" y="1909" width="0.2" height="15.0" fill="rgb(213,125,47)" rx="2" ry="2" />
<text  x="879.66" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="866.9" y="1717" width="0.2" height="15.0" fill="rgb(239,98,39)" rx="2" ry="2" />
<text  x="869.94" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1177.7" y="2021" width="0.2" height="15.0" fill="rgb(237,131,23)" rx="2" ry="2" />
<text  x="1180.70" y="2031.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="406.4" y="1877" width="0.2" height="15.0" fill="rgb(214,182,43)" rx="2" ry="2" />
<text  x="409.44" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="456.8" y="1925" width="0.2" height="15.0" fill="rgb(234,228,14)" rx="2" ry="2" />
<text  x="459.81" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="924.6" y="1925" width="0.8" height="15.0" fill="rgb(228,164,51)" rx="2" ry="2" />
<text  x="927.65" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (93 samples, 1.56%)</title><rect x="582.9" y="1973" width="18.5" height="15.0" fill="rgb(230,228,10)" rx="2" ry="2" />
<text  x="585.94" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.8" y="1669" width="0.1" height="15.0" fill="rgb(226,93,49)" rx="2" ry="2" />
<text  x="844.75" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1023.8" y="2037" width="0.2" height="15.0" fill="rgb(213,209,24)" rx="2" ry="2" />
<text  x="1026.81" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="214.1" y="1845" width="0.2" height="15.0" fill="rgb(207,167,38)" rx="2" ry="2" />
<text  x="217.07" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (82 samples, 1.38%)</title><rect x="585.1" y="1957" width="16.3" height="15.0" fill="rgb(205,182,14)" rx="2" ry="2" />
<text  x="588.13" y="1967.5" ></text>
</g>
<g >
<title>security_file_alloc (17 samples, 0.29%)</title><rect x="403.5" y="1909" width="3.3" height="15.0" fill="rgb(212,70,3)" rx="2" ry="2" />
<text  x="406.47" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (76 samples, 1.28%)</title><rect x="299.1" y="1701" width="15.1" height="15.0" fill="rgb(248,185,38)" rx="2" ry="2" />
<text  x="302.15" y="1711.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="973.4" y="1653" width="0.2" height="15.0" fill="rgb(224,165,37)" rx="2" ry="2" />
<text  x="976.44" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="920.9" y="1861" width="0.4" height="15.0" fill="rgb(241,216,17)" rx="2" ry="2" />
<text  x="923.88" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1139.4" y="1925" width="0.2" height="15.0" fill="rgb(227,94,38)" rx="2" ry="2" />
<text  x="1142.43" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="403.3" y="1749" width="0.2" height="15.0" fill="rgb(212,2,39)" rx="2" ry="2" />
<text  x="406.27" y="1759.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="71.5" y="1861" width="0.4" height="15.0" fill="rgb(240,18,3)" rx="2" ry="2" />
<text  x="74.48" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="406.4" y="1861" width="0.2" height="15.0" fill="rgb(236,100,54)" rx="2" ry="2" />
<text  x="409.44" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="103.4" y="1525" width="0.2" height="15.0" fill="rgb(241,93,19)" rx="2" ry="2" />
<text  x="106.41" y="1535.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="1091.6" y="1893" width="1.0" height="15.0" fill="rgb(231,146,19)" rx="2" ry="2" />
<text  x="1094.63" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="561.7" y="1637" width="0.2" height="15.0" fill="rgb(245,197,42)" rx="2" ry="2" />
<text  x="564.72" y="1647.5" ></text>
</g>
<g >
<title>__fput (507 samples, 8.52%)</title><rect x="720.0" y="1813" width="100.5" height="15.0" fill="rgb(232,8,30)" rx="2" ry="2" />
<text  x="722.98" y="1823.5" >__fput</text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="103.4" y="1573" width="0.2" height="15.0" fill="rgb(232,32,20)" rx="2" ry="2" />
<text  x="106.41" y="1583.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="545.9" y="1957" width="0.2" height="15.0" fill="rgb(230,39,32)" rx="2" ry="2" />
<text  x="548.86" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="726.5" y="1685" width="0.2" height="15.0" fill="rgb(206,1,51)" rx="2" ry="2" />
<text  x="729.53" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="364.8" y="1941" width="0.2" height="15.0" fill="rgb(241,109,36)" rx="2" ry="2" />
<text  x="367.79" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="561.7" y="1925" width="0.2" height="15.0" fill="rgb(226,41,38)" rx="2" ry="2" />
<text  x="564.72" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="702.1" y="1685" width="0.2" height="15.0" fill="rgb(225,68,34)" rx="2" ry="2" />
<text  x="705.13" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8 samples, 0.13%)</title><rect x="611.1" y="1845" width="1.6" height="15.0" fill="rgb(229,10,6)" rx="2" ry="2" />
<text  x="614.11" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="945.3" y="2005" width="0.2" height="15.0" fill="rgb(207,153,48)" rx="2" ry="2" />
<text  x="948.27" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (37 samples, 0.62%)</title><rect x="1065.9" y="1893" width="7.3" height="15.0" fill="rgb(239,87,12)" rx="2" ry="2" />
<text  x="1068.85" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (1 samples, 0.02%)</title><rect x="85.0" y="1973" width="0.2" height="15.0" fill="rgb(245,77,25)" rx="2" ry="2" />
<text  x="87.96" y="1983.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="63.0" y="1893" width="0.1" height="15.0" fill="rgb(237,193,8)" rx="2" ry="2" />
<text  x="65.95" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="881.2" y="1973" width="0.4" height="15.0" fill="rgb(211,91,35)" rx="2" ry="2" />
<text  x="884.22" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="487.2" y="1861" width="0.6" height="15.0" fill="rgb(232,201,37)" rx="2" ry="2" />
<text  x="490.16" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="325" width="17.5" height="15.0" fill="rgb(254,56,28)" rx="2" ry="2" />
<text  x="107.40" y="335.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="314.6" y="1797" width="0.2" height="15.0" fill="rgb(226,117,48)" rx="2" ry="2" />
<text  x="317.62" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="881.4" y="1813" width="0.2" height="15.0" fill="rgb(218,81,39)" rx="2" ry="2" />
<text  x="884.42" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="339.6" y="1925" width="0.2" height="15.0" fill="rgb(208,144,27)" rx="2" ry="2" />
<text  x="342.61" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="167.9" y="1957" width="0.2" height="15.0" fill="rgb(242,8,8)" rx="2" ry="2" />
<text  x="170.86" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.8" y="1765" width="0.1" height="15.0" fill="rgb(209,92,19)" rx="2" ry="2" />
<text  x="844.75" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="728.7" y="1685" width="0.2" height="15.0" fill="rgb(254,141,35)" rx="2" ry="2" />
<text  x="731.71" y="1695.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (3 samples, 0.05%)</title><rect x="984.7" y="1989" width="0.6" height="15.0" fill="rgb(226,211,51)" rx="2" ry="2" />
<text  x="987.74" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="984.1" y="1925" width="0.2" height="15.0" fill="rgb(217,99,28)" rx="2" ry="2" />
<text  x="987.14" y="1935.5" ></text>
</g>
<g >
<title>security_socket_getpeername (7 samples, 0.12%)</title><rect x="665.2" y="1861" width="1.4" height="15.0" fill="rgb(235,8,16)" rx="2" ry="2" />
<text  x="668.25" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (4 samples, 0.07%)</title><rect x="167.1" y="2005" width="0.8" height="15.0" fill="rgb(220,119,52)" rx="2" ry="2" />
<text  x="170.07" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="668.0" y="1845" width="0.2" height="15.0" fill="rgb(206,113,24)" rx="2" ry="2" />
<text  x="671.02" y="1855.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="128.2" y="1989" width="0.4" height="15.0" fill="rgb(247,42,31)" rx="2" ry="2" />
<text  x="131.20" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="751.5" y="1701" width="0.2" height="15.0" fill="rgb(213,52,16)" rx="2" ry="2" />
<text  x="754.52" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="487.2" y="1893" width="0.6" height="15.0" fill="rgb(224,21,41)" rx="2" ry="2" />
<text  x="490.16" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="652.6" y="2037" width="0.2" height="15.0" fill="rgb(218,182,35)" rx="2" ry="2" />
<text  x="655.55" y="2047.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="292.8" y="1493" width="0.2" height="15.0" fill="rgb(247,13,49)" rx="2" ry="2" />
<text  x="295.80" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="771.7" y="1509" width="0.2" height="15.0" fill="rgb(219,229,11)" rx="2" ry="2" />
<text  x="774.74" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="544.7" y="1925" width="0.6" height="15.0" fill="rgb(213,22,23)" rx="2" ry="2" />
<text  x="547.67" y="1935.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="341.2" y="1941" width="1.2" height="15.0" fill="rgb(237,30,30)" rx="2" ry="2" />
<text  x="344.19" y="1951.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (19 samples, 0.32%)</title><rect x="463.0" y="1925" width="3.7" height="15.0" fill="rgb(213,123,1)" rx="2" ry="2" />
<text  x="465.96" y="1935.5" ></text>
</g>
<g >
<title>tcp_assign_congestion_control (1 samples, 0.02%)</title><rect x="487.4" y="1733" width="0.2" height="15.0" fill="rgb(228,121,21)" rx="2" ry="2" />
<text  x="490.35" y="1743.5" ></text>
</g>
<g >
<title>tcp_push (259 samples, 4.35%)</title><rect x="278.3" y="1877" width="51.4" height="15.0" fill="rgb(211,139,38)" rx="2" ry="2" />
<text  x="281.33" y="1887.5" >tcp_p..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="578.4" y="1973" width="0.4" height="15.0" fill="rgb(236,217,47)" rx="2" ry="2" />
<text  x="581.38" y="1983.5" ></text>
</g>
<g >
<title>__close (18 samples, 0.30%)</title><rect x="947.1" y="1973" width="3.5" height="15.0" fill="rgb(217,187,41)" rx="2" ry="2" />
<text  x="950.06" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="99.6" y="2021" width="2.0" height="15.0" fill="rgb(233,158,26)" rx="2" ry="2" />
<text  x="102.64" y="2031.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1149.9" y="1941" width="0.2" height="15.0" fill="rgb(239,56,25)" rx="2" ry="2" />
<text  x="1152.94" y="1951.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="733.3" y="1685" width="0.2" height="15.0" fill="rgb(237,221,27)" rx="2" ry="2" />
<text  x="736.27" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseStart (1 samples, 0.02%)</title><rect x="700.2" y="1989" width="0.1" height="15.0" fill="rgb(214,94,37)" rx="2" ry="2" />
<text  x="703.15" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (8 samples, 0.13%)</title><rect x="700.7" y="1957" width="1.6" height="15.0" fill="rgb(239,97,46)" rx="2" ry="2" />
<text  x="703.75" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (13 samples, 0.22%)</title><rect x="872.1" y="1941" width="2.6" height="15.0" fill="rgb(253,110,20)" rx="2" ry="2" />
<text  x="875.09" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="293.0" y="1461" width="0.2" height="15.0" fill="rgb(254,18,15)" rx="2" ry="2" />
<text  x="296.00" y="1471.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (14 samples, 0.24%)</title><rect x="14.8" y="1957" width="2.7" height="15.0" fill="rgb(247,127,53)" rx="2" ry="2" />
<text  x="17.76" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="695.8" y="2037" width="0.2" height="15.0" fill="rgb(245,138,17)" rx="2" ry="2" />
<text  x="698.79" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="644.2" y="1957" width="0.2" height="15.0" fill="rgb(220,183,12)" rx="2" ry="2" />
<text  x="647.23" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (33 samples, 0.55%)</title><rect x="1103.7" y="1493" width="6.6" height="15.0" fill="rgb(254,92,47)" rx="2" ry="2" />
<text  x="1106.73" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (65 samples, 1.09%)</title><rect x="585.7" y="1909" width="12.9" height="15.0" fill="rgb(217,12,22)" rx="2" ry="2" />
<text  x="588.72" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1030.4" y="2037" width="0.3" height="15.0" fill="rgb(217,17,52)" rx="2" ry="2" />
<text  x="1033.35" y="2047.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="501.6" y="1845" width="0.2" height="15.0" fill="rgb(232,24,18)" rx="2" ry="2" />
<text  x="504.63" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7 samples, 0.12%)</title><rect x="294.0" y="1525" width="1.4" height="15.0" fill="rgb(222,37,19)" rx="2" ry="2" />
<text  x="296.99" y="1535.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="71.9" y="1845" width="0.2" height="15.0" fill="rgb(229,165,43)" rx="2" ry="2" />
<text  x="74.88" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="186.7" y="2005" width="0.2" height="15.0" fill="rgb(243,38,37)" rx="2" ry="2" />
<text  x="189.70" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (2 samples, 0.03%)</title><rect x="571.0" y="2005" width="0.4" height="15.0" fill="rgb(217,19,41)" rx="2" ry="2" />
<text  x="574.05" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (19 samples, 0.32%)</title><rect x="801.3" y="1637" width="3.8" height="15.0" fill="rgb(240,176,6)" rx="2" ry="2" />
<text  x="804.29" y="1647.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="666.6" y="1861" width="1.6" height="15.0" fill="rgb(238,199,28)" rx="2" ry="2" />
<text  x="669.64" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="792.4" y="1509" width="0.2" height="15.0" fill="rgb(229,92,22)" rx="2" ry="2" />
<text  x="795.37" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="623.2" y="2005" width="1.0" height="15.0" fill="rgb(206,102,2)" rx="2" ry="2" />
<text  x="626.20" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="414.2" y="2021" width="2.9" height="15.0" fill="rgb(246,181,1)" rx="2" ry="2" />
<text  x="417.17" y="2031.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (363 samples, 6.10%)</title><rect x="21.7" y="2053" width="72.0" height="15.0" fill="rgb(220,64,48)" rx="2" ry="2" />
<text  x="24.70" y="2063.5" >[libeven..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="147.4" y="1893" width="0.8" height="15.0" fill="rgb(221,46,54)" rx="2" ry="2" />
<text  x="150.44" y="1903.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (1 samples, 0.02%)</title><rect x="997.0" y="2021" width="0.2" height="15.0" fill="rgb(219,122,34)" rx="2" ry="2" />
<text  x="1000.04" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="903.6" y="1941" width="0.2" height="15.0" fill="rgb(237,79,41)" rx="2" ry="2" />
<text  x="906.63" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="871.3" y="1861" width="0.2" height="15.0" fill="rgb(239,71,15)" rx="2" ry="2" />
<text  x="874.30" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="487.2" y="1925" width="0.6" height="15.0" fill="rgb(221,161,26)" rx="2" ry="2" />
<text  x="490.16" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="343.6" y="1845" width="0.2" height="15.0" fill="rgb(220,117,46)" rx="2" ry="2" />
<text  x="346.57" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::multiOpEnd (1 samples, 0.02%)</title><rect x="893.5" y="2037" width="0.2" height="15.0" fill="rgb(242,190,5)" rx="2" ry="2" />
<text  x="896.51" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="466.7" y="1925" width="0.2" height="15.0" fill="rgb(206,30,51)" rx="2" ry="2" />
<text  x="469.73" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="891.3" y="2005" width="0.4" height="15.0" fill="rgb(225,13,29)" rx="2" ry="2" />
<text  x="894.33" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="401.9" y="1877" width="0.6" height="15.0" fill="rgb(224,216,15)" rx="2" ry="2" />
<text  x="404.88" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="38.8" y="1989" width="0.2" height="15.0" fill="rgb(214,27,23)" rx="2" ry="2" />
<text  x="41.76" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="32.8" y="1957" width="0.2" height="15.0" fill="rgb(220,11,21)" rx="2" ry="2" />
<text  x="35.81" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1013" width="17.5" height="15.0" fill="rgb(224,97,5)" rx="2" ry="2" />
<text  x="107.40" y="1023.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.8" y="1573" width="0.2" height="15.0" fill="rgb(254,58,40)" rx="2" ry="2" />
<text  x="125.84" y="1583.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="990.5" y="1829" width="0.8" height="15.0" fill="rgb(206,151,3)" rx="2" ry="2" />
<text  x="993.49" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="822.5" y="1845" width="0.2" height="15.0" fill="rgb(243,83,27)" rx="2" ry="2" />
<text  x="825.51" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="937.7" y="2005" width="0.6" height="15.0" fill="rgb(236,170,37)" rx="2" ry="2" />
<text  x="940.74" y="2015.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1006.2" y="1765" width="0.2" height="15.0" fill="rgb(207,108,23)" rx="2" ry="2" />
<text  x="1009.16" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="457.2" y="1621" width="0.2" height="15.0" fill="rgb(248,151,44)" rx="2" ry="2" />
<text  x="460.21" y="1631.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="627.8" y="1973" width="0.4" height="15.0" fill="rgb(239,125,47)" rx="2" ry="2" />
<text  x="630.76" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (3 samples, 0.05%)</title><rect x="962.9" y="2037" width="0.6" height="15.0" fill="rgb(235,106,14)" rx="2" ry="2" />
<text  x="965.92" y="2047.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="524.2" y="1941" width="0.2" height="15.0" fill="rgb(211,130,50)" rx="2" ry="2" />
<text  x="527.24" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (2 samples, 0.03%)</title><rect x="1145.6" y="2005" width="0.4" height="15.0" fill="rgb(214,176,7)" rx="2" ry="2" />
<text  x="1148.58" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="389.2" y="1765" width="0.2" height="15.0" fill="rgb(226,200,9)" rx="2" ry="2" />
<text  x="392.19" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="121.1" y="85" width="0.2" height="15.0" fill="rgb(218,168,16)" rx="2" ry="2" />
<text  x="124.06" y="95.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (2 samples, 0.03%)</title><rect x="956.8" y="2005" width="0.4" height="15.0" fill="rgb(219,76,39)" rx="2" ry="2" />
<text  x="959.78" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="553.4" y="1909" width="0.2" height="15.0" fill="rgb(239,110,23)" rx="2" ry="2" />
<text  x="556.39" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="998.2" y="2021" width="0.2" height="15.0" fill="rgb(252,217,46)" rx="2" ry="2" />
<text  x="1001.23" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="382.2" y="1813" width="0.6" height="15.0" fill="rgb(230,39,50)" rx="2" ry="2" />
<text  x="385.25" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="734.7" y="1541" width="0.2" height="15.0" fill="rgb(240,175,24)" rx="2" ry="2" />
<text  x="737.66" y="1551.5" ></text>
</g>
<g >
<title>evmap_io_active_ (4 samples, 0.07%)</title><rect x="1134.3" y="2053" width="0.8" height="15.0" fill="rgb(214,38,0)" rx="2" ry="2" />
<text  x="1137.27" y="2063.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (2 samples, 0.03%)</title><rect x="1175.5" y="2053" width="0.4" height="15.0" fill="rgb(222,62,20)" rx="2" ry="2" />
<text  x="1178.52" y="2063.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="484.2" y="1909" width="0.8" height="15.0" fill="rgb(218,55,17)" rx="2" ry="2" />
<text  x="487.18" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (3 samples, 0.05%)</title><rect x="74.9" y="1941" width="0.5" height="15.0" fill="rgb(212,181,15)" rx="2" ry="2" />
<text  x="77.85" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="151.8" y="1877" width="0.2" height="15.0" fill="rgb(227,44,31)" rx="2" ry="2" />
<text  x="154.80" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.3" y="1893" width="0.2" height="15.0" fill="rgb(235,153,40)" rx="2" ry="2" />
<text  x="147.26" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="219.6" y="1781" width="0.4" height="15.0" fill="rgb(248,224,19)" rx="2" ry="2" />
<text  x="222.62" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="328.3" y="1701" width="0.2" height="15.0" fill="rgb(241,195,20)" rx="2" ry="2" />
<text  x="331.30" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (3 samples, 0.05%)</title><rect x="635.3" y="1989" width="0.6" height="15.0" fill="rgb(228,153,47)" rx="2" ry="2" />
<text  x="638.30" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="139.9" y="1989" width="0.2" height="15.0" fill="rgb(210,220,20)" rx="2" ry="2" />
<text  x="142.90" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="252.3" y="1813" width="0.2" height="15.0" fill="rgb(212,173,47)" rx="2" ry="2" />
<text  x="255.35" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="561.7" y="1605" width="0.2" height="15.0" fill="rgb(233,108,48)" rx="2" ry="2" />
<text  x="564.72" y="1615.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="127.2" y="1925" width="0.2" height="15.0" fill="rgb(229,223,53)" rx="2" ry="2" />
<text  x="130.21" y="1935.5" ></text>
</g>
<g >
<title>operator delete@plt (5 samples, 0.08%)</title><rect x="886.4" y="2005" width="1.0" height="15.0" fill="rgb(217,141,42)" rx="2" ry="2" />
<text  x="889.37" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="289.2" y="1493" width="0.2" height="15.0" fill="rgb(226,208,4)" rx="2" ry="2" />
<text  x="292.23" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="994.9" y="1685" width="0.2" height="15.0" fill="rgb(233,198,44)" rx="2" ry="2" />
<text  x="997.85" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="103.4" y="1877" width="0.2" height="15.0" fill="rgb(220,194,10)" rx="2" ry="2" />
<text  x="106.41" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="536.9" y="1941" width="0.4" height="15.0" fill="rgb(249,156,9)" rx="2" ry="2" />
<text  x="539.93" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="32.8" y="1717" width="0.2" height="15.0" fill="rgb(209,91,21)" rx="2" ry="2" />
<text  x="35.81" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="326.7" y="1653" width="0.2" height="15.0" fill="rgb(242,214,30)" rx="2" ry="2" />
<text  x="329.72" y="1663.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="293.6" y="1509" width="0.2" height="15.0" fill="rgb(219,205,42)" rx="2" ry="2" />
<text  x="296.60" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="875.1" y="1925" width="0.2" height="15.0" fill="rgb(234,151,50)" rx="2" ry="2" />
<text  x="878.07" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="541.3" y="1909" width="0.6" height="15.0" fill="rgb(225,0,38)" rx="2" ry="2" />
<text  x="544.30" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="745.6" y="1717" width="0.2" height="15.0" fill="rgb(236,226,17)" rx="2" ry="2" />
<text  x="748.57" y="1727.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="842.1" y="1909" width="0.4" height="15.0" fill="rgb(208,105,44)" rx="2" ry="2" />
<text  x="845.15" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="839.0" y="1909" width="0.4" height="15.0" fill="rgb(249,173,31)" rx="2" ry="2" />
<text  x="841.97" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="832.4" y="1925" width="0.2" height="15.0" fill="rgb(239,112,16)" rx="2" ry="2" />
<text  x="835.43" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="614.3" y="1973" width="0.2" height="15.0" fill="rgb(239,83,37)" rx="2" ry="2" />
<text  x="617.28" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="501.8" y="1861" width="0.2" height="15.0" fill="rgb(241,39,26)" rx="2" ry="2" />
<text  x="504.83" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="880.0" y="1909" width="0.4" height="15.0" fill="rgb(241,50,42)" rx="2" ry="2" />
<text  x="883.03" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="665.6" y="1845" width="0.4" height="15.0" fill="rgb(215,84,43)" rx="2" ry="2" />
<text  x="668.64" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="119.9" y="53" width="0.2" height="15.0" fill="rgb(254,125,48)" rx="2" ry="2" />
<text  x="122.87" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (16 samples, 0.27%)</title><rect x="1170.6" y="2005" width="3.1" height="15.0" fill="rgb(253,227,51)" rx="2" ry="2" />
<text  x="1173.56" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="1143.2" y="1925" width="0.2" height="15.0" fill="rgb(224,124,14)" rx="2" ry="2" />
<text  x="1146.20" y="1935.5" ></text>
</g>
<g >
<title>__copy_skb_header (4 samples, 0.07%)</title><rect x="796.5" y="1637" width="0.8" height="15.0" fill="rgb(232,3,46)" rx="2" ry="2" />
<text  x="799.53" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="414.0" y="1813" width="0.2" height="15.0" fill="rgb(243,164,54)" rx="2" ry="2" />
<text  x="416.98" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="833.8" y="1909" width="0.4" height="15.0" fill="rgb(207,123,4)" rx="2" ry="2" />
<text  x="836.82" y="1919.5" ></text>
</g>
<g >
<title>sys_close (1 samples, 0.02%)</title><rect x="826.9" y="1877" width="0.2" height="15.0" fill="rgb(227,126,48)" rx="2" ry="2" />
<text  x="829.88" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="360.2" y="1845" width="0.2" height="15.0" fill="rgb(253,40,19)" rx="2" ry="2" />
<text  x="363.23" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="79.0" y="1941" width="0.4" height="15.0" fill="rgb(215,189,54)" rx="2" ry="2" />
<text  x="82.02" y="1951.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="233.5" y="2005" width="0.2" height="15.0" fill="rgb(229,223,5)" rx="2" ry="2" />
<text  x="236.51" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="551.2" y="1973" width="0.2" height="15.0" fill="rgb(222,119,18)" rx="2" ry="2" />
<text  x="554.21" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="695.4" y="1829" width="0.2" height="15.0" fill="rgb(235,53,25)" rx="2" ry="2" />
<text  x="698.39" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="734.7" y="1749" width="0.2" height="15.0" fill="rgb(217,183,43)" rx="2" ry="2" />
<text  x="737.66" y="1759.5" ></text>
</g>
<g >
<title>epoll_ctl (2 samples, 0.03%)</title><rect x="1131.9" y="2053" width="0.4" height="15.0" fill="rgb(244,144,26)" rx="2" ry="2" />
<text  x="1134.89" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="457.0" y="1861" width="0.4" height="15.0" fill="rgb(248,135,32)" rx="2" ry="2" />
<text  x="460.01" y="1871.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="485.2" y="1973" width="0.4" height="15.0" fill="rgb(246,86,17)" rx="2" ry="2" />
<text  x="488.17" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="103.4" y="1461" width="0.2" height="15.0" fill="rgb(229,123,0)" rx="2" ry="2" />
<text  x="106.41" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="726.5" y="1541" width="0.2" height="15.0" fill="rgb(243,32,30)" rx="2" ry="2" />
<text  x="729.53" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="177.8" y="1973" width="0.2" height="15.0" fill="rgb(230,150,47)" rx="2" ry="2" />
<text  x="180.78" y="1983.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13 samples, 0.22%)</title><rect x="241.0" y="1909" width="2.6" height="15.0" fill="rgb(209,175,48)" rx="2" ry="2" />
<text  x="244.04" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1006.0" y="1989" width="0.4" height="15.0" fill="rgb(212,188,2)" rx="2" ry="2" />
<text  x="1008.96" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (5 samples, 0.08%)</title><rect x="484.2" y="1957" width="1.0" height="15.0" fill="rgb(245,154,14)" rx="2" ry="2" />
<text  x="487.18" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (77 samples, 1.29%)</title><rect x="656.1" y="1973" width="15.3" height="15.0" fill="rgb(237,146,37)" rx="2" ry="2" />
<text  x="659.12" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="806.5" y="1381" width="0.1" height="15.0" fill="rgb(206,4,43)" rx="2" ry="2" />
<text  x="809.45" y="1391.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="881.4" y="1557" width="0.2" height="15.0" fill="rgb(216,3,15)" rx="2" ry="2" />
<text  x="884.42" y="1567.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="805.1" y="1685" width="0.2" height="15.0" fill="rgb(215,82,5)" rx="2" ry="2" />
<text  x="808.06" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (106 samples, 1.78%)</title><rect x="510.8" y="2037" width="21.0" height="15.0" fill="rgb(239,100,12)" rx="2" ry="2" />
<text  x="513.76" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="993.7" y="1989" width="0.6" height="15.0" fill="rgb(241,128,42)" rx="2" ry="2" />
<text  x="996.66" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (4 samples, 0.07%)</title><rect x="397.7" y="1877" width="0.8" height="15.0" fill="rgb(235,125,34)" rx="2" ry="2" />
<text  x="400.71" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="145.1" y="1845" width="0.2" height="15.0" fill="rgb(233,142,14)" rx="2" ry="2" />
<text  x="148.06" y="1855.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="987.3" y="1877" width="0.2" height="15.0" fill="rgb(213,141,9)" rx="2" ry="2" />
<text  x="990.32" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="219.4" y="1797" width="0.2" height="15.0" fill="rgb(206,79,51)" rx="2" ry="2" />
<text  x="222.43" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (9 samples, 0.15%)</title><rect x="540.5" y="1957" width="1.8" height="15.0" fill="rgb(226,114,20)" rx="2" ry="2" />
<text  x="543.50" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="295.2" y="1413" width="0.2" height="15.0" fill="rgb(235,212,9)" rx="2" ry="2" />
<text  x="298.18" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="510.4" y="1973" width="0.2" height="15.0" fill="rgb(205,88,22)" rx="2" ry="2" />
<text  x="513.36" y="1983.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="333.5" y="1525" width="0.2" height="15.0" fill="rgb(209,19,17)" rx="2" ry="2" />
<text  x="336.46" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="702.1" y="1669" width="0.2" height="15.0" fill="rgb(245,128,23)" rx="2" ry="2" />
<text  x="705.13" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="905.2" y="2021" width="0.8" height="15.0" fill="rgb(212,89,24)" rx="2" ry="2" />
<text  x="908.21" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="881.4" y="1589" width="0.2" height="15.0" fill="rgb(241,199,21)" rx="2" ry="2" />
<text  x="884.42" y="1599.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="915.3" y="1893" width="0.2" height="15.0" fill="rgb(254,125,43)" rx="2" ry="2" />
<text  x="918.33" y="1903.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="793.4" y="1637" width="0.2" height="15.0" fill="rgb(205,148,52)" rx="2" ry="2" />
<text  x="796.36" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="629.2" y="1973" width="0.2" height="15.0" fill="rgb(245,13,39)" rx="2" ry="2" />
<text  x="632.15" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="847.9" y="1845" width="0.4" height="15.0" fill="rgb(217,49,45)" rx="2" ry="2" />
<text  x="850.90" y="1855.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (21 samples, 0.35%)</title><rect x="10.2" y="2053" width="4.2" height="15.0" fill="rgb(237,172,4)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="221.2" y="1813" width="0.2" height="15.0" fill="rgb(224,59,0)" rx="2" ry="2" />
<text  x="224.21" y="1823.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="82.6" y="1909" width="0.2" height="15.0" fill="rgb(232,220,0)" rx="2" ry="2" />
<text  x="85.58" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.34%)</title><rect x="17.7" y="2037" width="4.0" height="15.0" fill="rgb(241,202,28)" rx="2" ry="2" />
<text  x="20.73" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="333.7" y="1845" width="0.2" height="15.0" fill="rgb(239,26,42)" rx="2" ry="2" />
<text  x="336.66" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="848.3" y="1861" width="0.2" height="15.0" fill="rgb(229,16,35)" rx="2" ry="2" />
<text  x="851.30" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="186.7" y="1541" width="0.2" height="15.0" fill="rgb(249,20,36)" rx="2" ry="2" />
<text  x="189.70" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="501.8" y="1685" width="0.2" height="15.0" fill="rgb(217,79,23)" rx="2" ry="2" />
<text  x="504.83" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="154.6" y="1877" width="0.4" height="15.0" fill="rgb(223,43,52)" rx="2" ry="2" />
<text  x="157.57" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="509.0" y="1893" width="0.2" height="15.0" fill="rgb(249,16,27)" rx="2" ry="2" />
<text  x="511.97" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="344.0" y="1877" width="0.8" height="15.0" fill="rgb(232,205,24)" rx="2" ry="2" />
<text  x="346.97" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="176.2" y="1957" width="0.2" height="15.0" fill="rgb(221,114,35)" rx="2" ry="2" />
<text  x="179.19" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="120.1" y="37" width="0.2" height="15.0" fill="rgb(207,6,15)" rx="2" ry="2" />
<text  x="123.07" y="47.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="701.7" y="1765" width="0.2" height="15.0" fill="rgb(238,203,28)" rx="2" ry="2" />
<text  x="704.74" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="414.0" y="1925" width="0.2" height="15.0" fill="rgb(232,51,20)" rx="2" ry="2" />
<text  x="416.98" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="973.4" y="1893" width="0.2" height="15.0" fill="rgb(242,192,3)" rx="2" ry="2" />
<text  x="976.44" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="822.5" y="1589" width="0.2" height="15.0" fill="rgb(216,103,14)" rx="2" ry="2" />
<text  x="825.51" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="889.5" y="2005" width="1.8" height="15.0" fill="rgb(224,178,31)" rx="2" ry="2" />
<text  x="892.55" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="903.0" y="2021" width="0.2" height="15.0" fill="rgb(211,199,53)" rx="2" ry="2" />
<text  x="906.03" y="2031.5" ></text>
</g>
<g >
<title>dev_queue_xmit (107 samples, 1.80%)</title><rect x="771.9" y="1589" width="21.3" height="15.0" fill="rgb(249,111,11)" rx="2" ry="2" />
<text  x="774.94" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="532.2" y="1845" width="0.2" height="15.0" fill="rgb(217,194,41)" rx="2" ry="2" />
<text  x="535.17" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="1016.3" y="2005" width="0.8" height="15.0" fill="rgb(210,94,47)" rx="2" ry="2" />
<text  x="1019.27" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (34 samples, 0.57%)</title><rect x="784.4" y="1525" width="6.8" height="15.0" fill="rgb(213,201,44)" rx="2" ry="2" />
<text  x="787.44" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="822.5" y="1733" width="0.2" height="15.0" fill="rgb(212,19,4)" rx="2" ry="2" />
<text  x="825.51" y="1743.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1137.2" y="1893" width="0.2" height="15.0" fill="rgb(237,100,31)" rx="2" ry="2" />
<text  x="1140.25" y="1903.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="337.0" y="1893" width="0.4" height="15.0" fill="rgb(225,62,40)" rx="2" ry="2" />
<text  x="340.03" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="510.4" y="1989" width="0.2" height="15.0" fill="rgb(215,9,37)" rx="2" ry="2" />
<text  x="513.36" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1064.9" y="1765" width="0.2" height="15.0" fill="rgb(214,119,47)" rx="2" ry="2" />
<text  x="1067.86" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="413.6" y="1941" width="0.6" height="15.0" fill="rgb(209,166,7)" rx="2" ry="2" />
<text  x="416.58" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="168.1" y="2021" width="0.4" height="15.0" fill="rgb(228,184,41)" rx="2" ry="2" />
<text  x="171.06" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="158.9" y="1957" width="0.2" height="15.0" fill="rgb(209,195,39)" rx="2" ry="2" />
<text  x="161.94" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="572.2" y="1973" width="0.2" height="15.0" fill="rgb(224,21,37)" rx="2" ry="2" />
<text  x="575.24" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="528.6" y="1973" width="1.0" height="15.0" fill="rgb(213,210,50)" rx="2" ry="2" />
<text  x="531.61" y="1983.5" ></text>
</g>
<g >
<title>clear_inode (4 samples, 0.07%)</title><rect x="728.1" y="1701" width="0.8" height="15.0" fill="rgb(242,201,34)" rx="2" ry="2" />
<text  x="731.11" y="1711.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (33 samples, 0.55%)</title><rect x="418.1" y="2021" width="6.6" height="15.0" fill="rgb(220,52,46)" rx="2" ry="2" />
<text  x="421.14" y="2031.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="991.3" y="1941" width="0.4" height="15.0" fill="rgb(245,209,30)" rx="2" ry="2" />
<text  x="994.28" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (88 samples, 1.48%)</title><rect x="775.7" y="1557" width="17.5" height="15.0" fill="rgb(241,203,2)" rx="2" ry="2" />
<text  x="778.71" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="413.6" y="1925" width="0.2" height="15.0" fill="rgb(218,213,21)" rx="2" ry="2" />
<text  x="416.58" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1181.5" y="2021" width="0.4" height="15.0" fill="rgb(219,16,7)" rx="2" ry="2" />
<text  x="1184.47" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="624.2" y="2005" width="0.2" height="15.0" fill="rgb(234,53,48)" rx="2" ry="2" />
<text  x="627.19" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="657.1" y="1861" width="0.2" height="15.0" fill="rgb(251,144,9)" rx="2" ry="2" />
<text  x="660.12" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1175.1" y="2021" width="0.2" height="15.0" fill="rgb(220,43,51)" rx="2" ry="2" />
<text  x="1178.13" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="609.3" y="1909" width="0.2" height="15.0" fill="rgb(251,44,51)" rx="2" ry="2" />
<text  x="612.32" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="853.8" y="1973" width="0.4" height="15.0" fill="rgb(218,82,34)" rx="2" ry="2" />
<text  x="856.85" y="1983.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="278.9" y="1829" width="0.2" height="15.0" fill="rgb(220,163,4)" rx="2" ry="2" />
<text  x="281.92" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="572.2" y="1781" width="0.2" height="15.0" fill="rgb(253,193,6)" rx="2" ry="2" />
<text  x="575.24" y="1791.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (30 samples, 0.50%)</title><rect x="1169.4" y="2053" width="5.9" height="15.0" fill="rgb(220,29,19)" rx="2" ry="2" />
<text  x="1172.37" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (36 samples, 0.61%)</title><rect x="987.9" y="2005" width="7.2" height="15.0" fill="rgb(246,210,5)" rx="2" ry="2" />
<text  x="990.91" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="103.4" y="1829" width="0.2" height="15.0" fill="rgb(231,117,20)" rx="2" ry="2" />
<text  x="106.41" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.7" y="1909" width="0.2" height="15.0" fill="rgb(244,159,15)" rx="2" ry="2" />
<text  x="852.68" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.03%)</title><rect x="613.1" y="1845" width="0.4" height="15.0" fill="rgb(220,179,17)" rx="2" ry="2" />
<text  x="616.09" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="572.4" y="1845" width="0.2" height="15.0" fill="rgb(205,83,37)" rx="2" ry="2" />
<text  x="575.43" y="1855.5" ></text>
</g>
<g >
<title>__snprintf (3 samples, 0.05%)</title><rect x="350.1" y="2037" width="0.6" height="15.0" fill="rgb(217,196,43)" rx="2" ry="2" />
<text  x="353.12" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="989.1" y="1973" width="0.2" height="15.0" fill="rgb(211,82,37)" rx="2" ry="2" />
<text  x="992.10" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="403.3" y="1701" width="0.2" height="15.0" fill="rgb(206,73,30)" rx="2" ry="2" />
<text  x="406.27" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="58.2" y="1861" width="0.2" height="15.0" fill="rgb(244,127,25)" rx="2" ry="2" />
<text  x="61.19" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (4 samples, 0.07%)</title><rect x="847.7" y="1925" width="0.8" height="15.0" fill="rgb(227,218,23)" rx="2" ry="2" />
<text  x="850.70" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="621.0" y="1989" width="0.2" height="15.0" fill="rgb(243,140,15)" rx="2" ry="2" />
<text  x="624.02" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="882.4" y="1973" width="0.2" height="15.0" fill="rgb(216,37,2)" rx="2" ry="2" />
<text  x="885.41" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (58 samples, 0.97%)</title><rect x="1101.2" y="1797" width="11.5" height="15.0" fill="rgb(216,206,16)" rx="2" ry="2" />
<text  x="1104.15" y="1807.5" ></text>
</g>
<g >
<title>____fput (515 samples, 8.66%)</title><rect x="720.0" y="1829" width="102.1" height="15.0" fill="rgb(241,15,40)" rx="2" ry="2" />
<text  x="722.98" y="1839.5" >____fput</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="75.4" y="1957" width="0.2" height="15.0" fill="rgb(234,123,32)" rx="2" ry="2" />
<text  x="78.45" y="1967.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="792.6" y="1509" width="0.4" height="15.0" fill="rgb(232,168,20)" rx="2" ry="2" />
<text  x="795.57" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (41 samples, 0.69%)</title><rect x="928.2" y="2005" width="8.1" height="15.0" fill="rgb(246,155,53)" rx="2" ry="2" />
<text  x="931.22" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="336.6" y="1829" width="0.2" height="15.0" fill="rgb(223,77,46)" rx="2" ry="2" />
<text  x="339.63" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="136.1" y="1925" width="0.2" height="15.0" fill="rgb(243,71,52)" rx="2" ry="2" />
<text  x="139.13" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="994.9" y="1637" width="0.2" height="15.0" fill="rgb(241,229,21)" rx="2" ry="2" />
<text  x="997.85" y="1647.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="126.2" y="1893" width="0.2" height="15.0" fill="rgb(232,224,42)" rx="2" ry="2" />
<text  x="129.22" y="1903.5" ></text>
</g>
<g >
<title>sock_gen_put (1 samples, 0.02%)</title><rect x="553.4" y="1781" width="0.2" height="15.0" fill="rgb(224,81,7)" rx="2" ry="2" />
<text  x="556.39" y="1791.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="42.3" y="2005" width="0.2" height="15.0" fill="rgb(232,103,5)" rx="2" ry="2" />
<text  x="45.33" y="2015.5" ></text>
</g>
<g >
<title>folly::operator== (3 samples, 0.05%)</title><rect x="37.8" y="1989" width="0.6" height="15.0" fill="rgb(215,135,52)" rx="2" ry="2" />
<text  x="40.76" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (5 samples, 0.08%)</title><rect x="896.5" y="1973" width="1.0" height="15.0" fill="rgb(208,205,15)" rx="2" ry="2" />
<text  x="899.49" y="1983.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="835.8" y="1909" width="0.2" height="15.0" fill="rgb(250,126,51)" rx="2" ry="2" />
<text  x="838.80" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="601.2" y="1941" width="0.2" height="15.0" fill="rgb(253,13,13)" rx="2" ry="2" />
<text  x="604.19" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1096.8" y="1781" width="0.2" height="15.0" fill="rgb(210,15,30)" rx="2" ry="2" />
<text  x="1099.79" y="1791.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="689.8" y="1877" width="0.2" height="15.0" fill="rgb(242,204,25)" rx="2" ry="2" />
<text  x="692.84" y="1887.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.02%)</title><rect x="610.5" y="1861" width="0.2" height="15.0" fill="rgb(254,9,43)" rx="2" ry="2" />
<text  x="613.51" y="1871.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1112.3" y="1717" width="0.2" height="15.0" fill="rgb(247,125,36)" rx="2" ry="2" />
<text  x="1115.26" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (7 samples, 0.12%)</title><rect x="209.3" y="1941" width="1.4" height="15.0" fill="rgb(232,222,25)" rx="2" ry="2" />
<text  x="212.31" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="145.5" y="1909" width="0.2" height="15.0" fill="rgb(219,224,8)" rx="2" ry="2" />
<text  x="148.45" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="895.1" y="1989" width="2.4" height="15.0" fill="rgb(252,32,29)" rx="2" ry="2" />
<text  x="898.10" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="1138.6" y="1989" width="0.2" height="15.0" fill="rgb(215,65,21)" rx="2" ry="2" />
<text  x="1141.64" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="702.1" y="1781" width="0.2" height="15.0" fill="rgb(237,165,1)" rx="2" ry="2" />
<text  x="705.13" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="264.4" y="1733" width="0.2" height="15.0" fill="rgb(206,178,32)" rx="2" ry="2" />
<text  x="267.44" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="885.8" y="1861" width="0.2" height="15.0" fill="rgb(240,2,31)" rx="2" ry="2" />
<text  x="888.78" y="1871.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="223.4" y="1925" width="0.2" height="15.0" fill="rgb(243,182,5)" rx="2" ry="2" />
<text  x="226.39" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="514.3" y="1893" width="0.2" height="15.0" fill="rgb(233,206,20)" rx="2" ry="2" />
<text  x="517.33" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="871.5" y="1925" width="0.6" height="15.0" fill="rgb(230,219,2)" rx="2" ry="2" />
<text  x="874.50" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1139.2" y="1989" width="0.2" height="15.0" fill="rgb(248,24,28)" rx="2" ry="2" />
<text  x="1142.23" y="1999.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="1171.6" y="1973" width="0.4" height="15.0" fill="rgb(237,128,2)" rx="2" ry="2" />
<text  x="1174.56" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="746.0" y="1717" width="0.4" height="15.0" fill="rgb(208,73,20)" rx="2" ry="2" />
<text  x="748.96" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="962.3" y="1813" width="0.2" height="15.0" fill="rgb(222,45,18)" rx="2" ry="2" />
<text  x="965.33" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="365.4" y="1557" width="0.2" height="15.0" fill="rgb(236,221,46)" rx="2" ry="2" />
<text  x="368.39" y="1567.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="880.6" y="1941" width="0.4" height="15.0" fill="rgb(214,11,28)" rx="2" ry="2" />
<text  x="883.62" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (25 samples, 0.42%)</title><rect x="971.3" y="1989" width="4.9" height="15.0" fill="rgb(248,26,41)" rx="2" ry="2" />
<text  x="974.25" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="296.4" y="1701" width="0.2" height="15.0" fill="rgb(242,136,5)" rx="2" ry="2" />
<text  x="299.37" y="1711.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="482.6" y="1877" width="0.2" height="15.0" fill="rgb(243,196,43)" rx="2" ry="2" />
<text  x="485.59" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="912.4" y="1909" width="0.7" height="15.0" fill="rgb(242,9,3)" rx="2" ry="2" />
<text  x="915.35" y="1919.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="860.0" y="1989" width="0.6" height="15.0" fill="rgb(221,201,5)" rx="2" ry="2" />
<text  x="863.00" y="1999.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (77 samples, 1.29%)</title><rect x="494.1" y="1957" width="15.3" height="15.0" fill="rgb(240,82,49)" rx="2" ry="2" />
<text  x="497.10" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1001.6" y="2005" width="0.2" height="15.0" fill="rgb(248,192,17)" rx="2" ry="2" />
<text  x="1004.60" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="1019.8" y="2021" width="2.4" height="15.0" fill="rgb(217,157,25)" rx="2" ry="2" />
<text  x="1022.84" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="858.0" y="1941" width="0.6" height="15.0" fill="rgb(224,131,13)" rx="2" ry="2" />
<text  x="861.01" y="1951.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (53 samples, 0.89%)</title><rect x="1101.4" y="1765" width="10.5" height="15.0" fill="rgb(246,94,26)" rx="2" ry="2" />
<text  x="1104.35" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="457.0" y="1893" width="0.4" height="15.0" fill="rgb(237,180,20)" rx="2" ry="2" />
<text  x="460.01" y="1903.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="67.7" y="1973" width="0.2" height="15.0" fill="rgb(236,184,3)" rx="2" ry="2" />
<text  x="70.71" y="1983.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1045.4" y="2005" width="0.4" height="15.0" fill="rgb(221,39,18)" rx="2" ry="2" />
<text  x="1048.43" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1006.0" y="1925" width="0.2" height="15.0" fill="rgb(253,105,48)" rx="2" ry="2" />
<text  x="1008.96" y="1935.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (258 samples, 4.34%)</title><rect x="278.5" y="1861" width="51.2" height="15.0" fill="rgb(205,16,5)" rx="2" ry="2" />
<text  x="281.52" y="1871.5" >__tcp..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="549.2" y="1925" width="0.2" height="15.0" fill="rgb(227,0,35)" rx="2" ry="2" />
<text  x="552.23" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (3 samples, 0.05%)</title><rect x="901.2" y="2005" width="0.6" height="15.0" fill="rgb(242,83,37)" rx="2" ry="2" />
<text  x="904.25" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="549" width="17.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="107.40" y="559.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="572.2" y="1685" width="0.2" height="15.0" fill="rgb(246,99,48)" rx="2" ry="2" />
<text  x="575.24" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="148.6" y="1893" width="0.2" height="15.0" fill="rgb(253,108,25)" rx="2" ry="2" />
<text  x="151.63" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (14 samples, 0.24%)</title><rect x="149.4" y="1909" width="2.8" height="15.0" fill="rgb(236,169,53)" rx="2" ry="2" />
<text  x="152.42" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="734.7" y="1701" width="0.2" height="15.0" fill="rgb(229,129,11)" rx="2" ry="2" />
<text  x="737.66" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="343.6" y="1893" width="0.2" height="15.0" fill="rgb(243,10,14)" rx="2" ry="2" />
<text  x="346.57" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="32.8" y="1749" width="0.2" height="15.0" fill="rgb(246,225,22)" rx="2" ry="2" />
<text  x="35.81" y="1759.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenlessSlotValue (1 samples, 0.02%)</title><rect x="164.1" y="1989" width="0.2" height="15.0" fill="rgb(241,183,11)" rx="2" ry="2" />
<text  x="167.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.92%)</title><rect x="964.9" y="2021" width="22.6" height="15.0" fill="rgb(249,176,16)" rx="2" ry="2" />
<text  x="967.91" y="2031.5" >[..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="40.5" y="1957" width="0.2" height="15.0" fill="rgb(214,97,15)" rx="2" ry="2" />
<text  x="43.54" y="1967.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="613.7" y="1861" width="0.2" height="15.0" fill="rgb(234,118,23)" rx="2" ry="2" />
<text  x="616.68" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="827.1" y="1765" width="0.2" height="15.0" fill="rgb(222,99,13)" rx="2" ry="2" />
<text  x="830.08" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="453" width="17.5" height="15.0" fill="rgb(207,44,17)" rx="2" ry="2" />
<text  x="107.40" y="463.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="192.9" y="1717" width="0.1" height="15.0" fill="rgb(245,109,18)" rx="2" ry="2" />
<text  x="195.85" y="1727.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="1048.8" y="1973" width="0.6" height="15.0" fill="rgb(208,224,22)" rx="2" ry="2" />
<text  x="1051.80" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.0" y="1605" width="0.2" height="15.0" fill="rgb(235,18,34)" rx="2" ry="2" />
<text  x="107.00" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="866.9" y="1957" width="0.4" height="15.0" fill="rgb(208,135,2)" rx="2" ry="2" />
<text  x="869.94" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="635.9" y="1973" width="1.6" height="15.0" fill="rgb(230,203,43)" rx="2" ry="2" />
<text  x="638.90" y="1983.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="187.3" y="2037" width="0.4" height="15.0" fill="rgb(207,38,39)" rx="2" ry="2" />
<text  x="190.30" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="668.2" y="1861" width="0.4" height="15.0" fill="rgb(230,137,44)" rx="2" ry="2" />
<text  x="671.22" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="78.6" y="1957" width="1.2" height="15.0" fill="rgb(229,166,16)" rx="2" ry="2" />
<text  x="81.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="602.4" y="1973" width="0.2" height="15.0" fill="rgb(228,190,28)" rx="2" ry="2" />
<text  x="605.38" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="343.6" y="1989" width="0.2" height="15.0" fill="rgb(242,76,51)" rx="2" ry="2" />
<text  x="346.57" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (1 samples, 0.02%)</title><rect x="179.8" y="2021" width="0.2" height="15.0" fill="rgb(251,36,51)" rx="2" ry="2" />
<text  x="182.76" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1158.9" y="1733" width="0.2" height="15.0" fill="rgb(238,227,32)" rx="2" ry="2" />
<text  x="1161.86" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="851.1" y="1973" width="0.4" height="15.0" fill="rgb(226,209,48)" rx="2" ry="2" />
<text  x="854.07" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="119.5" y="37" width="0.2" height="15.0" fill="rgb(254,52,42)" rx="2" ry="2" />
<text  x="122.47" y="47.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="79.0" y="1925" width="0.2" height="15.0" fill="rgb(253,77,31)" rx="2" ry="2" />
<text  x="82.02" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (20 samples, 0.34%)</title><rect x="801.1" y="1653" width="4.0" height="15.0" fill="rgb(224,81,17)" rx="2" ry="2" />
<text  x="804.10" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="549.2" y="1861" width="0.2" height="15.0" fill="rgb(213,205,34)" rx="2" ry="2" />
<text  x="552.23" y="1871.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="177.6" y="1941" width="0.2" height="15.0" fill="rgb(246,95,22)" rx="2" ry="2" />
<text  x="180.58" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="973.4" y="1861" width="0.2" height="15.0" fill="rgb(233,104,6)" rx="2" ry="2" />
<text  x="976.44" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="668.2" y="1813" width="0.4" height="15.0" fill="rgb(212,84,47)" rx="2" ry="2" />
<text  x="671.22" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="319.2" y="1637" width="0.2" height="15.0" fill="rgb(223,137,18)" rx="2" ry="2" />
<text  x="322.18" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="399.3" y="1829" width="0.2" height="15.0" fill="rgb(220,12,23)" rx="2" ry="2" />
<text  x="402.30" y="1839.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="344.0" y="1893" width="0.8" height="15.0" fill="rgb(243,199,38)" rx="2" ry="2" />
<text  x="346.97" y="1903.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="485.0" y="1941" width="0.2" height="15.0" fill="rgb(229,47,14)" rx="2" ry="2" />
<text  x="487.97" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="335.6" y="1765" width="0.2" height="15.0" fill="rgb(218,173,42)" rx="2" ry="2" />
<text  x="338.64" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (5 samples, 0.08%)</title><rect x="637.9" y="2005" width="1.0" height="15.0" fill="rgb(237,73,14)" rx="2" ry="2" />
<text  x="640.88" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (27 samples, 0.45%)</title><rect x="1140.0" y="2053" width="5.4" height="15.0" fill="rgb(227,83,26)" rx="2" ry="2" />
<text  x="1143.02" y="2063.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.2" y="1573" width="0.2" height="15.0" fill="rgb(218,187,18)" rx="2" ry="2" />
<text  x="107.20" y="1583.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(236,17,49)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="389.2" y="1733" width="0.2" height="15.0" fill="rgb(205,184,42)" rx="2" ry="2" />
<text  x="392.19" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="264.4" y="1701" width="0.2" height="15.0" fill="rgb(253,158,5)" rx="2" ry="2" />
<text  x="267.44" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="166.3" y="2005" width="0.2" height="15.0" fill="rgb(232,199,54)" rx="2" ry="2" />
<text  x="169.28" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (14 samples, 0.24%)</title><rect x="941.5" y="1989" width="2.8" height="15.0" fill="rgb(222,223,34)" rx="2" ry="2" />
<text  x="944.51" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="331.9" y="1861" width="0.2" height="15.0" fill="rgb(239,133,25)" rx="2" ry="2" />
<text  x="334.87" y="1871.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1045.8" y="2005" width="0.8" height="15.0" fill="rgb(244,150,37)" rx="2" ry="2" />
<text  x="1048.82" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (21 samples, 0.35%)</title><rect x="538.1" y="1989" width="4.2" height="15.0" fill="rgb(222,70,19)" rx="2" ry="2" />
<text  x="541.12" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="994.9" y="1701" width="0.2" height="15.0" fill="rgb(221,84,11)" rx="2" ry="2" />
<text  x="997.85" y="1711.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="554.6" y="1845" width="0.2" height="15.0" fill="rgb(249,99,37)" rx="2" ry="2" />
<text  x="557.58" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (7 samples, 0.12%)</title><rect x="338.2" y="1909" width="1.4" height="15.0" fill="rgb(218,200,10)" rx="2" ry="2" />
<text  x="341.22" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="565.7" y="1733" width="0.4" height="15.0" fill="rgb(228,67,49)" rx="2" ry="2" />
<text  x="568.69" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="457.0" y="1877" width="0.4" height="15.0" fill="rgb(209,178,50)" rx="2" ry="2" />
<text  x="460.01" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="142.7" y="1861" width="0.2" height="15.0" fill="rgb(229,67,40)" rx="2" ry="2" />
<text  x="145.68" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="800.7" y="1589" width="0.2" height="15.0" fill="rgb(231,115,45)" rx="2" ry="2" />
<text  x="803.70" y="1599.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="509.4" y="2021" width="0.4" height="15.0" fill="rgb(236,60,27)" rx="2" ry="2" />
<text  x="512.37" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1017.5" y="1973" width="0.2" height="15.0" fill="rgb(216,123,34)" rx="2" ry="2" />
<text  x="1020.46" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1061" width="17.5" height="15.0" fill="rgb(244,61,54)" rx="2" ry="2" />
<text  x="107.40" y="1071.5" ></text>
</g>
<g >
<title>down_write (1 samples, 0.02%)</title><rect x="738.6" y="1765" width="0.2" height="15.0" fill="rgb(242,168,53)" rx="2" ry="2" />
<text  x="741.63" y="1775.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="964.9" y="1973" width="0.2" height="15.0" fill="rgb(246,162,39)" rx="2" ry="2" />
<text  x="967.91" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1158.9" y="1893" width="0.2" height="15.0" fill="rgb(232,56,41)" rx="2" ry="2" />
<text  x="1161.86" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="841.2" y="1909" width="0.7" height="15.0" fill="rgb(242,135,34)" rx="2" ry="2" />
<text  x="844.16" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="564.9" y="1637" width="0.2" height="15.0" fill="rgb(227,13,47)" rx="2" ry="2" />
<text  x="567.90" y="1647.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="165.3" y="1941" width="0.2" height="15.0" fill="rgb(241,192,43)" rx="2" ry="2" />
<text  x="168.28" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1100.2" y="1861" width="0.2" height="15.0" fill="rgb(216,178,44)" rx="2" ry="2" />
<text  x="1103.16" y="1871.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="990.5" y="1813" width="0.8" height="15.0" fill="rgb(235,147,51)" rx="2" ry="2" />
<text  x="993.49" y="1823.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="768.8" y="1605" width="0.2" height="15.0" fill="rgb(218,220,33)" rx="2" ry="2" />
<text  x="771.77" y="1615.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="939.7" y="2005" width="0.2" height="15.0" fill="rgb(250,162,52)" rx="2" ry="2" />
<text  x="942.72" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="597.4" y="1861" width="1.2" height="15.0" fill="rgb(231,1,33)" rx="2" ry="2" />
<text  x="600.42" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (3 samples, 0.05%)</title><rect x="958.6" y="2005" width="0.6" height="15.0" fill="rgb(212,1,22)" rx="2" ry="2" />
<text  x="961.56" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="271.4" y="1813" width="0.2" height="15.0" fill="rgb(206,99,36)" rx="2" ry="2" />
<text  x="274.38" y="1823.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1173.5" y="1989" width="0.2" height="15.0" fill="rgb(244,172,26)" rx="2" ry="2" />
<text  x="1176.54" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (8 samples, 0.13%)</title><rect x="552.0" y="1973" width="1.6" height="15.0" fill="rgb(224,68,11)" rx="2" ry="2" />
<text  x="555.01" y="1983.5" ></text>
</g>
<g >
<title>__GI___getsockname (15 samples, 0.25%)</title><rect x="193.2" y="2037" width="3.0" height="15.0" fill="rgb(218,224,11)" rx="2" ry="2" />
<text  x="196.25" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (1 samples, 0.02%)</title><rect x="883.8" y="2005" width="0.2" height="15.0" fill="rgb(223,89,5)" rx="2" ry="2" />
<text  x="886.79" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="695.6" y="2021" width="0.2" height="15.0" fill="rgb(209,104,2)" rx="2" ry="2" />
<text  x="698.59" y="2031.5" ></text>
</g>
<g >
<title>tcp_send_fin (355 samples, 5.97%)</title><rect x="747.0" y="1733" width="70.4" height="15.0" fill="rgb(250,22,13)" rx="2" ry="2" />
<text  x="749.95" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (2 samples, 0.03%)</title><rect x="900.7" y="2005" width="0.3" height="15.0" fill="rgb(247,43,39)" rx="2" ry="2" />
<text  x="903.65" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="156.0" y="1749" width="0.2" height="15.0" fill="rgb(244,56,46)" rx="2" ry="2" />
<text  x="158.96" y="1759.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="243.8" y="1717" width="0.2" height="15.0" fill="rgb(232,99,12)" rx="2" ry="2" />
<text  x="246.82" y="1727.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="378.1" y="1653" width="0.2" height="15.0" fill="rgb(249,180,25)" rx="2" ry="2" />
<text  x="381.08" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1023.8" y="1957" width="0.2" height="15.0" fill="rgb(248,204,34)" rx="2" ry="2" />
<text  x="1026.81" y="1967.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="793.6" y="1653" width="0.2" height="15.0" fill="rgb(216,136,30)" rx="2" ry="2" />
<text  x="796.56" y="1663.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="800.9" y="1653" width="0.2" height="15.0" fill="rgb(247,59,21)" rx="2" ry="2" />
<text  x="803.90" y="1663.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="549.2" y="1477" width="0.2" height="15.0" fill="rgb(206,163,50)" rx="2" ry="2" />
<text  x="552.23" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="103.4" y="1893" width="0.2" height="15.0" fill="rgb(231,75,50)" rx="2" ry="2" />
<text  x="106.41" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="833.6" y="1909" width="0.2" height="15.0" fill="rgb(232,22,34)" rx="2" ry="2" />
<text  x="836.62" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="946.7" y="1893" width="0.2" height="15.0" fill="rgb(211,189,49)" rx="2" ry="2" />
<text  x="949.66" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="1017.1" y="2005" width="0.2" height="15.0" fill="rgb(219,29,32)" rx="2" ry="2" />
<text  x="1020.07" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.3" y="1845" width="0.2" height="15.0" fill="rgb(240,3,6)" rx="2" ry="2" />
<text  x="147.26" y="1855.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="126.0" y="1877" width="0.2" height="15.0" fill="rgb(223,178,53)" rx="2" ry="2" />
<text  x="129.02" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="650.6" y="2021" width="0.2" height="15.0" fill="rgb(240,120,20)" rx="2" ry="2" />
<text  x="653.57" y="2031.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="995.8" y="2037" width="0.2" height="15.0" fill="rgb(253,62,53)" rx="2" ry="2" />
<text  x="998.85" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (4 samples, 0.07%)</title><rect x="1138.0" y="2005" width="0.8" height="15.0" fill="rgb(208,66,7)" rx="2" ry="2" />
<text  x="1141.04" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1381" width="17.7" height="15.0" fill="rgb(223,165,37)" rx="2" ry="2" />
<text  x="107.40" y="1391.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="271.8" y="1621" width="0.2" height="15.0" fill="rgb(231,171,51)" rx="2" ry="2" />
<text  x="274.78" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (7 samples, 0.12%)</title><rect x="651.2" y="2037" width="1.4" height="15.0" fill="rgb(250,156,30)" rx="2" ry="2" />
<text  x="654.17" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="163.5" y="2021" width="0.2" height="15.0" fill="rgb(219,219,12)" rx="2" ry="2" />
<text  x="166.50" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="41.7" y="2005" width="0.4" height="15.0" fill="rgb(240,141,16)" rx="2" ry="2" />
<text  x="44.73" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="850.7" y="1957" width="0.2" height="15.0" fill="rgb(233,103,42)" rx="2" ry="2" />
<text  x="853.68" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="668.2" y="1733" width="0.2" height="15.0" fill="rgb(235,67,54)" rx="2" ry="2" />
<text  x="671.22" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="218.6" y="1861" width="0.4" height="15.0" fill="rgb(234,132,36)" rx="2" ry="2" />
<text  x="221.63" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.4" y="1973" width="0.2" height="15.0" fill="rgb(227,229,31)" rx="2" ry="2" />
<text  x="17.36" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="186.7" y="1653" width="0.2" height="15.0" fill="rgb(236,110,12)" rx="2" ry="2" />
<text  x="189.70" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="597.6" y="1829" width="1.0" height="15.0" fill="rgb(250,217,45)" rx="2" ry="2" />
<text  x="600.62" y="1839.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="481.6" y="1925" width="0.4" height="15.0" fill="rgb(219,100,13)" rx="2" ry="2" />
<text  x="484.60" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="962.3" y="1909" width="0.2" height="15.0" fill="rgb(254,53,54)" rx="2" ry="2" />
<text  x="965.33" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (302 samples, 5.08%)</title><rect x="353.7" y="2021" width="59.9" height="15.0" fill="rgb(252,83,19)" rx="2" ry="2" />
<text  x="356.69" y="2031.5" >entry_..</text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (6 samples, 0.10%)</title><rect x="376.9" y="1893" width="1.2" height="15.0" fill="rgb(214,165,39)" rx="2" ry="2" />
<text  x="379.89" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="292.8" y="1589" width="0.4" height="15.0" fill="rgb(252,79,49)" rx="2" ry="2" />
<text  x="295.80" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="321.0" y="1701" width="0.2" height="15.0" fill="rgb(229,153,10)" rx="2" ry="2" />
<text  x="323.96" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="58.2" y="1829" width="0.2" height="15.0" fill="rgb(219,161,26)" rx="2" ry="2" />
<text  x="61.19" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="899.1" y="1989" width="0.2" height="15.0" fill="rgb(247,183,9)" rx="2" ry="2" />
<text  x="902.07" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="866.9" y="1669" width="0.2" height="15.0" fill="rgb(210,176,2)" rx="2" ry="2" />
<text  x="869.94" y="1679.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="253.7" y="1877" width="0.2" height="15.0" fill="rgb(210,193,43)" rx="2" ry="2" />
<text  x="256.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="734.7" y="1509" width="0.2" height="15.0" fill="rgb(229,228,18)" rx="2" ry="2" />
<text  x="737.66" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="181" width="17.5" height="15.0" fill="rgb(240,20,24)" rx="2" ry="2" />
<text  x="107.40" y="191.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="1060.7" y="1925" width="0.6" height="15.0" fill="rgb(220,79,22)" rx="2" ry="2" />
<text  x="1063.70" y="1935.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (25 samples, 0.42%)</title><rect x="954.6" y="2037" width="5.0" height="15.0" fill="rgb(238,13,24)" rx="2" ry="2" />
<text  x="957.59" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="561.7" y="1797" width="0.2" height="15.0" fill="rgb(221,104,24)" rx="2" ry="2" />
<text  x="564.72" y="1807.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="165.5" y="1893" width="0.2" height="15.0" fill="rgb(235,172,34)" rx="2" ry="2" />
<text  x="168.48" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="178.4" y="1957" width="0.8" height="15.0" fill="rgb(237,180,20)" rx="2" ry="2" />
<text  x="181.37" y="1967.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="721.6" y="1797" width="0.4" height="15.0" fill="rgb(226,41,7)" rx="2" ry="2" />
<text  x="724.57" y="1807.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="539.9" y="1957" width="0.2" height="15.0" fill="rgb(250,89,45)" rx="2" ry="2" />
<text  x="542.91" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (5 samples, 0.08%)</title><rect x="873.7" y="1925" width="1.0" height="15.0" fill="rgb(226,222,2)" rx="2" ry="2" />
<text  x="876.68" y="1935.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="990.5" y="1845" width="0.8" height="15.0" fill="rgb(238,21,15)" rx="2" ry="2" />
<text  x="993.49" y="1855.5" ></text>
</g>
<g >
<title>fput (3 samples, 0.05%)</title><rect x="824.5" y="1813" width="0.6" height="15.0" fill="rgb(234,25,51)" rx="2" ry="2" />
<text  x="827.50" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="973.4" y="1909" width="0.2" height="15.0" fill="rgb(244,95,43)" rx="2" ry="2" />
<text  x="976.44" y="1919.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="456.8" y="1797" width="0.2" height="15.0" fill="rgb(243,135,29)" rx="2" ry="2" />
<text  x="459.81" y="1807.5" ></text>
</g>
<g >
<title>inet_release (398 samples, 6.69%)</title><rect x="738.8" y="1765" width="79.0" height="15.0" fill="rgb(205,26,36)" rx="2" ry="2" />
<text  x="741.82" y="1775.5" >inet_rele..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="59.2" y="1941" width="0.6" height="15.0" fill="rgb(207,147,46)" rx="2" ry="2" />
<text  x="62.18" y="1951.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="848.5" y="1941" width="0.4" height="15.0" fill="rgb(253,138,16)" rx="2" ry="2" />
<text  x="851.49" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="135.3" y="1813" width="0.2" height="15.0" fill="rgb(207,71,1)" rx="2" ry="2" />
<text  x="138.34" y="1823.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="827.1" y="1605" width="0.2" height="15.0" fill="rgb(234,182,26)" rx="2" ry="2" />
<text  x="830.08" y="1615.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="305.9" y="1653" width="0.2" height="15.0" fill="rgb(231,128,50)" rx="2" ry="2" />
<text  x="308.89" y="1663.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (62 samples, 1.04%)</title><rect x="602.4" y="2005" width="12.3" height="15.0" fill="rgb(224,20,53)" rx="2" ry="2" />
<text  x="605.38" y="2015.5" ></text>
</g>
<g >
<title>ip_output (61 samples, 1.03%)</title><rect x="1100.6" y="1829" width="12.1" height="15.0" fill="rgb(209,192,52)" rx="2" ry="2" />
<text  x="1103.56" y="1839.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (3 samples, 0.05%)</title><rect x="729.3" y="1637" width="0.6" height="15.0" fill="rgb(218,194,39)" rx="2" ry="2" />
<text  x="732.30" y="1647.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="442.1" y="1989" width="0.2" height="15.0" fill="rgb(247,129,34)" rx="2" ry="2" />
<text  x="445.14" y="1999.5" ></text>
</g>
<g >
<title>decay_load (1 samples, 0.02%)</title><rect x="942.9" y="1749" width="0.2" height="15.0" fill="rgb(212,114,3)" rx="2" ry="2" />
<text  x="945.89" y="1759.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (3 samples, 0.05%)</title><rect x="972.8" y="1973" width="0.6" height="15.0" fill="rgb(209,49,5)" rx="2" ry="2" />
<text  x="975.84" y="1983.5" ></text>
</g>
<g >
<title>fput (3 samples, 0.05%)</title><rect x="564.5" y="1925" width="0.6" height="15.0" fill="rgb(214,58,24)" rx="2" ry="2" />
<text  x="567.50" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="985.3" y="1989" width="0.2" height="15.0" fill="rgb(248,73,46)" rx="2" ry="2" />
<text  x="988.33" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="880.8" y="1925" width="0.2" height="15.0" fill="rgb(242,41,22)" rx="2" ry="2" />
<text  x="883.82" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="885" width="17.5" height="15.0" fill="rgb(208,228,33)" rx="2" ry="2" />
<text  x="107.40" y="895.5" ></text>
</g>
<g >
<title>sys_close (20 samples, 0.34%)</title><rect x="822.7" y="1861" width="4.0" height="15.0" fill="rgb(221,227,6)" rx="2" ry="2" />
<text  x="825.71" y="1871.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="271.0" y="1781" width="0.2" height="15.0" fill="rgb(247,47,33)" rx="2" ry="2" />
<text  x="273.99" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="564.9" y="1669" width="0.2" height="15.0" fill="rgb(221,118,40)" rx="2" ry="2" />
<text  x="567.90" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="180.0" y="2021" width="0.2" height="15.0" fill="rgb(249,108,35)" rx="2" ry="2" />
<text  x="182.96" y="2031.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (136 samples, 2.29%)</title><rect x="200.2" y="2037" width="27.0" height="15.0" fill="rgb(236,182,29)" rx="2" ry="2" />
<text  x="203.19" y="2047.5" >_..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="695.4" y="1941" width="0.2" height="15.0" fill="rgb(219,220,4)" rx="2" ry="2" />
<text  x="698.39" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="442.3" y="1957" width="0.2" height="15.0" fill="rgb(223,130,22)" rx="2" ry="2" />
<text  x="445.34" y="1967.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="954.4" y="2005" width="0.2" height="15.0" fill="rgb(215,74,3)" rx="2" ry="2" />
<text  x="957.40" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="121.5" y="37" width="0.2" height="15.0" fill="rgb(244,173,51)" rx="2" ry="2" />
<text  x="124.46" y="47.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="157.2" y="1909" width="0.5" height="15.0" fill="rgb(245,169,37)" rx="2" ry="2" />
<text  x="160.15" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="483.8" y="1973" width="0.2" height="15.0" fill="rgb(249,68,29)" rx="2" ry="2" />
<text  x="486.78" y="1983.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="1080.7" y="1925" width="1.4" height="15.0" fill="rgb(237,178,44)" rx="2" ry="2" />
<text  x="1083.73" y="1935.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="657.1" y="1925" width="0.2" height="15.0" fill="rgb(253,55,49)" rx="2" ry="2" />
<text  x="660.12" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="1142.2" y="1973" width="0.8" height="15.0" fill="rgb(231,79,23)" rx="2" ry="2" />
<text  x="1145.21" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="628.8" y="1973" width="0.4" height="15.0" fill="rgb(235,0,35)" rx="2" ry="2" />
<text  x="631.76" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="417.3" y="2037" width="0.2" height="15.0" fill="rgb(205,43,13)" rx="2" ry="2" />
<text  x="420.35" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="55.0" y="1941" width="0.2" height="15.0" fill="rgb(226,66,0)" rx="2" ry="2" />
<text  x="58.02" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="77.0" y="1941" width="0.2" height="15.0" fill="rgb(240,141,7)" rx="2" ry="2" />
<text  x="80.03" y="1951.5" ></text>
</g>
<g >
<title>__ip_local_out (16 samples, 0.27%)</title><rect x="763.6" y="1637" width="3.2" height="15.0" fill="rgb(213,125,45)" rx="2" ry="2" />
<text  x="766.61" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="79.2" y="1925" width="0.2" height="15.0" fill="rgb(246,17,51)" rx="2" ry="2" />
<text  x="82.21" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (4 samples, 0.07%)</title><rect x="552.8" y="1957" width="0.8" height="15.0" fill="rgb(231,96,28)" rx="2" ry="2" />
<text  x="555.80" y="1967.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="337.4" y="1893" width="0.2" height="15.0" fill="rgb(205,172,19)" rx="2" ry="2" />
<text  x="340.43" y="1903.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="264.0" y="1877" width="0.4" height="15.0" fill="rgb(251,154,53)" rx="2" ry="2" />
<text  x="267.05" y="1887.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (7 samples, 0.12%)</title><rect x="956.0" y="2021" width="1.4" height="15.0" fill="rgb(250,62,31)" rx="2" ry="2" />
<text  x="958.98" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="335.6" y="1621" width="0.2" height="15.0" fill="rgb(207,185,22)" rx="2" ry="2" />
<text  x="338.64" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="552.6" y="1637" width="0.2" height="15.0" fill="rgb(220,3,33)" rx="2" ry="2" />
<text  x="555.60" y="1647.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="693.6" y="1973" width="0.6" height="15.0" fill="rgb(247,114,15)" rx="2" ry="2" />
<text  x="696.61" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="170.6" y="1957" width="0.2" height="15.0" fill="rgb(242,168,36)" rx="2" ry="2" />
<text  x="173.64" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (11 samples, 0.18%)</title><rect x="293.2" y="1589" width="2.2" height="15.0" fill="rgb(220,209,45)" rx="2" ry="2" />
<text  x="296.20" y="1599.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1081.9" y="1909" width="0.2" height="15.0" fill="rgb(232,229,31)" rx="2" ry="2" />
<text  x="1084.92" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="399.3" y="1845" width="0.2" height="15.0" fill="rgb(211,91,37)" rx="2" ry="2" />
<text  x="402.30" y="1855.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="734.3" y="1765" width="0.2" height="15.0" fill="rgb(240,41,31)" rx="2" ry="2" />
<text  x="737.26" y="1775.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="990.5" y="1765" width="0.8" height="15.0" fill="rgb(217,205,24)" rx="2" ry="2" />
<text  x="993.49" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="907.8" y="1989" width="0.6" height="15.0" fill="rgb(205,217,53)" rx="2" ry="2" />
<text  x="910.79" y="1999.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (3 samples, 0.05%)</title><rect x="1169.6" y="2037" width="0.6" height="15.0" fill="rgb(222,169,21)" rx="2" ry="2" />
<text  x="1172.57" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.43%)</title><rect x="104.4" y="101" width="16.9" height="15.0" fill="rgb(251,106,39)" rx="2" ry="2" />
<text  x="107.40" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (7 samples, 0.12%)</title><rect x="846.1" y="1893" width="1.4" height="15.0" fill="rgb(236,152,6)" rx="2" ry="2" />
<text  x="849.11" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="343.8" y="1989" width="1.0" height="15.0" fill="rgb(224,147,48)" rx="2" ry="2" />
<text  x="346.77" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="399.3" y="1813" width="0.2" height="15.0" fill="rgb(241,77,23)" rx="2" ry="2" />
<text  x="402.30" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="146.8" y="1877" width="0.2" height="15.0" fill="rgb(226,191,13)" rx="2" ry="2" />
<text  x="149.84" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.6" y="1557" width="0.2" height="15.0" fill="rgb(206,139,29)" rx="2" ry="2" />
<text  x="125.65" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="252.3" y="1861" width="0.2" height="15.0" fill="rgb(213,58,1)" rx="2" ry="2" />
<text  x="255.35" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="289.2" y="1653" width="0.2" height="15.0" fill="rgb(229,26,50)" rx="2" ry="2" />
<text  x="292.23" y="1663.5" ></text>
</g>
<g >
<title>event_del_nolock_ (3 samples, 0.05%)</title><rect x="1133.7" y="2053" width="0.6" height="15.0" fill="rgb(246,186,38)" rx="2" ry="2" />
<text  x="1136.68" y="2063.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (6 samples, 0.10%)</title><rect x="990.1" y="1941" width="1.2" height="15.0" fill="rgb(242,220,22)" rx="2" ry="2" />
<text  x="993.09" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="695.4" y="1845" width="0.2" height="15.0" fill="rgb(228,153,25)" rx="2" ry="2" />
<text  x="698.39" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="655.5" y="1989" width="0.6" height="15.0" fill="rgb(253,85,34)" rx="2" ry="2" />
<text  x="658.53" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="627.0" y="1973" width="0.4" height="15.0" fill="rgb(212,175,18)" rx="2" ry="2" />
<text  x="629.97" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1237" width="17.5" height="15.0" fill="rgb(221,76,13)" rx="2" ry="2" />
<text  x="107.40" y="1247.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="551.6" y="1973" width="0.4" height="15.0" fill="rgb(212,228,1)" rx="2" ry="2" />
<text  x="554.61" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1180.7" y="2005" width="0.2" height="15.0" fill="rgb(208,183,48)" rx="2" ry="2" />
<text  x="1183.68" y="2015.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="554.6" y="1877" width="0.2" height="15.0" fill="rgb(212,14,17)" rx="2" ry="2" />
<text  x="557.58" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="360.2" y="1685" width="0.2" height="15.0" fill="rgb(221,78,49)" rx="2" ry="2" />
<text  x="363.23" y="1695.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="655.7" y="1957" width="0.2" height="15.0" fill="rgb(239,169,47)" rx="2" ry="2" />
<text  x="658.73" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="572.2" y="1861" width="0.2" height="15.0" fill="rgb(219,148,13)" rx="2" ry="2" />
<text  x="575.24" y="1871.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="295.0" y="1333" width="0.2" height="15.0" fill="rgb(250,69,22)" rx="2" ry="2" />
<text  x="297.98" y="1343.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (2 samples, 0.03%)</title><rect x="310.7" y="1637" width="0.3" height="15.0" fill="rgb(227,94,1)" rx="2" ry="2" />
<text  x="313.65" y="1647.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="407.8" y="1909" width="0.2" height="15.0" fill="rgb(237,35,31)" rx="2" ry="2" />
<text  x="410.83" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="132.2" y="1925" width="0.2" height="15.0" fill="rgb(218,76,36)" rx="2" ry="2" />
<text  x="135.16" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="884.4" y="2005" width="0.8" height="15.0" fill="rgb(225,190,23)" rx="2" ry="2" />
<text  x="887.39" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1096.8" y="1797" width="0.2" height="15.0" fill="rgb(228,111,49)" rx="2" ry="2" />
<text  x="1099.79" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="822.5" y="1701" width="0.2" height="15.0" fill="rgb(207,184,9)" rx="2" ry="2" />
<text  x="825.51" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="333.5" y="1829" width="0.2" height="15.0" fill="rgb(248,197,6)" rx="2" ry="2" />
<text  x="336.46" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1333" width="17.7" height="15.0" fill="rgb(232,195,40)" rx="2" ry="2" />
<text  x="107.40" y="1343.5" ></text>
</g>
<g >
<title>__fget (23 samples, 0.39%)</title><rect x="452.8" y="1941" width="4.6" height="15.0" fill="rgb(213,138,37)" rx="2" ry="2" />
<text  x="455.85" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="841.8" y="1637" width="0.1" height="15.0" fill="rgb(244,95,48)" rx="2" ry="2" />
<text  x="844.75" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="570.5" y="1925" width="0.1" height="15.0" fill="rgb(215,222,34)" rx="2" ry="2" />
<text  x="573.45" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="626.2" y="2005" width="1.4" height="15.0" fill="rgb(215,101,20)" rx="2" ry="2" />
<text  x="629.18" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="335.6" y="1669" width="0.2" height="15.0" fill="rgb(207,140,5)" rx="2" ry="2" />
<text  x="338.64" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="103.4" y="1509" width="0.2" height="15.0" fill="rgb(221,121,26)" rx="2" ry="2" />
<text  x="106.41" y="1519.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (9 samples, 0.15%)</title><rect x="698.4" y="1989" width="1.8" height="15.0" fill="rgb(222,15,48)" rx="2" ry="2" />
<text  x="701.37" y="1999.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="402.7" y="1877" width="0.2" height="15.0" fill="rgb(252,228,38)" rx="2" ry="2" />
<text  x="405.67" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (18 samples, 0.30%)</title><rect x="947.1" y="1957" width="3.5" height="15.0" fill="rgb(216,181,11)" rx="2" ry="2" />
<text  x="950.06" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="561.7" y="1941" width="0.2" height="15.0" fill="rgb(211,50,38)" rx="2" ry="2" />
<text  x="564.72" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="298.0" y="1669" width="0.2" height="15.0" fill="rgb(246,55,0)" rx="2" ry="2" />
<text  x="300.96" y="1679.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (3 samples, 0.05%)</title><rect x="470.3" y="1925" width="0.6" height="15.0" fill="rgb(210,69,0)" rx="2" ry="2" />
<text  x="473.30" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (33 samples, 0.55%)</title><rect x="518.1" y="1989" width="6.5" height="15.0" fill="rgb(240,180,45)" rx="2" ry="2" />
<text  x="521.09" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="644.2" y="1749" width="0.2" height="15.0" fill="rgb(232,223,38)" rx="2" ry="2" />
<text  x="647.23" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1123.4" y="1909" width="0.2" height="15.0" fill="rgb(209,9,47)" rx="2" ry="2" />
<text  x="1126.36" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (14 samples, 0.24%)</title><rect x="692.6" y="2005" width="2.8" height="15.0" fill="rgb(229,53,33)" rx="2" ry="2" />
<text  x="695.62" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="120.7" y="53" width="0.2" height="15.0" fill="rgb(221,182,8)" rx="2" ry="2" />
<text  x="123.66" y="63.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.02%)</title><rect x="17.5" y="2005" width="0.2" height="15.0" fill="rgb(223,64,39)" rx="2" ry="2" />
<text  x="20.54" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="321.0" y="1621" width="0.2" height="15.0" fill="rgb(247,225,32)" rx="2" ry="2" />
<text  x="323.96" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (77 samples, 1.29%)</title><rect x="1147.0" y="2005" width="15.2" height="15.0" fill="rgb(215,208,38)" rx="2" ry="2" />
<text  x="1149.96" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (12 samples, 0.20%)</title><rect x="15.2" y="1893" width="2.3" height="15.0" fill="rgb(244,126,29)" rx="2" ry="2" />
<text  x="18.16" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="617.5" y="2021" width="0.2" height="15.0" fill="rgb(213,191,39)" rx="2" ry="2" />
<text  x="620.45" y="2031.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1173.9" y="1989" width="0.2" height="15.0" fill="rgb(245,8,42)" rx="2" ry="2" />
<text  x="1176.94" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="365.4" y="1797" width="0.2" height="15.0" fill="rgb(254,50,2)" rx="2" ry="2" />
<text  x="368.39" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (4 samples, 0.07%)</title><rect x="855.8" y="1989" width="0.8" height="15.0" fill="rgb(220,5,1)" rx="2" ry="2" />
<text  x="858.83" y="1999.5" ></text>
</g>
<g >
<title>call_rcu_sched (1 samples, 0.02%)</title><rect x="459.0" y="1973" width="0.2" height="15.0" fill="rgb(210,117,25)" rx="2" ry="2" />
<text  x="461.99" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="837.6" y="1909" width="0.6" height="15.0" fill="rgb(233,188,37)" rx="2" ry="2" />
<text  x="840.59" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="973.4" y="1717" width="0.2" height="15.0" fill="rgb(207,3,41)" rx="2" ry="2" />
<text  x="976.44" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="190.7" y="1957" width="0.2" height="15.0" fill="rgb(224,106,44)" rx="2" ry="2" />
<text  x="193.67" y="1967.5" ></text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1117.0" y="1957" width="0.4" height="15.0" fill="rgb(252,166,38)" rx="2" ry="2" />
<text  x="1120.02" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.8" y="1877" width="0.1" height="15.0" fill="rgb(218,68,22)" rx="2" ry="2" />
<text  x="844.75" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.18%)</title><rect x="911.4" y="1941" width="2.1" height="15.0" fill="rgb(205,40,12)" rx="2" ry="2" />
<text  x="914.36" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="138.7" y="1973" width="0.2" height="15.0" fill="rgb(247,136,7)" rx="2" ry="2" />
<text  x="141.71" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="689.4" y="1845" width="0.2" height="15.0" fill="rgb(226,85,10)" rx="2" ry="2" />
<text  x="692.44" y="1855.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="875.3" y="1909" width="0.2" height="15.0" fill="rgb(225,47,54)" rx="2" ry="2" />
<text  x="878.27" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="321.0" y="1813" width="0.2" height="15.0" fill="rgb(246,132,18)" rx="2" ry="2" />
<text  x="323.96" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="806.5" y="1669" width="0.1" height="15.0" fill="rgb(232,158,3)" rx="2" ry="2" />
<text  x="809.45" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="695.4" y="1989" width="0.2" height="15.0" fill="rgb(207,223,47)" rx="2" ry="2" />
<text  x="698.39" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="136.3" y="1941" width="0.2" height="15.0" fill="rgb(206,55,13)" rx="2" ry="2" />
<text  x="139.33" y="1951.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="343.4" y="2021" width="0.2" height="15.0" fill="rgb(249,214,14)" rx="2" ry="2" />
<text  x="346.37" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="800.7" y="1557" width="0.2" height="15.0" fill="rgb(242,174,21)" rx="2" ry="2" />
<text  x="803.70" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="330.9" y="1845" width="0.2" height="15.0" fill="rgb(230,143,0)" rx="2" ry="2" />
<text  x="333.88" y="1855.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1022.6" y="2021" width="0.2" height="15.0" fill="rgb(250,191,25)" rx="2" ry="2" />
<text  x="1025.62" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="243.6" y="1813" width="0.2" height="15.0" fill="rgb(232,146,46)" rx="2" ry="2" />
<text  x="246.62" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="357" width="17.5" height="15.0" fill="rgb(227,85,44)" rx="2" ry="2" />
<text  x="107.40" y="367.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="946.3" y="2005" width="0.2" height="15.0" fill="rgb(232,181,18)" rx="2" ry="2" />
<text  x="949.27" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="58.2" y="1717" width="0.2" height="15.0" fill="rgb(208,162,51)" rx="2" ry="2" />
<text  x="61.19" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="1024.0" y="2053" width="0.4" height="15.0" fill="rgb(213,121,0)" rx="2" ry="2" />
<text  x="1027.01" y="2063.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.05%)</title><rect x="397.1" y="1861" width="0.6" height="15.0" fill="rgb(247,203,29)" rx="2" ry="2" />
<text  x="400.12" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="403.1" y="1893" width="0.2" height="15.0" fill="rgb(245,178,50)" rx="2" ry="2" />
<text  x="406.07" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="875.1" y="1861" width="0.2" height="15.0" fill="rgb(252,64,51)" rx="2" ry="2" />
<text  x="878.07" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1096.8" y="1861" width="0.2" height="15.0" fill="rgb(247,27,44)" rx="2" ry="2" />
<text  x="1099.79" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="170.2" y="1973" width="0.2" height="15.0" fill="rgb(207,114,0)" rx="2" ry="2" />
<text  x="173.24" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="175.6" y="1957" width="0.6" height="15.0" fill="rgb(246,208,37)" rx="2" ry="2" />
<text  x="178.60" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="547.4" y="1989" width="0.2" height="15.0" fill="rgb(235,40,22)" rx="2" ry="2" />
<text  x="550.45" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="1137.2" y="1925" width="0.4" height="15.0" fill="rgb(214,170,48)" rx="2" ry="2" />
<text  x="1140.25" y="1935.5" ></text>
</g>
<g >
<title>carbon-global-s (22 samples, 0.37%)</title><rect x="10.0" y="2069" width="4.4" height="15.0" fill="rgb(231,208,32)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="343.6" y="1749" width="0.2" height="15.0" fill="rgb(239,134,33)" rx="2" ry="2" />
<text  x="346.57" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (10 samples, 0.17%)</title><rect x="293.4" y="1573" width="2.0" height="15.0" fill="rgb(209,119,36)" rx="2" ry="2" />
<text  x="296.40" y="1583.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="767.4" y="1621" width="0.2" height="15.0" fill="rgb(250,166,39)" rx="2" ry="2" />
<text  x="770.38" y="1631.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="702.1" y="1605" width="0.2" height="15.0" fill="rgb(246,229,37)" rx="2" ry="2" />
<text  x="705.13" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="104.4" y="117" width="17.3" height="15.0" fill="rgb(234,70,29)" rx="2" ry="2" />
<text  x="107.40" y="127.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="894.5" y="1989" width="0.4" height="15.0" fill="rgb(252,80,46)" rx="2" ry="2" />
<text  x="897.50" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1109.7" y="1413" width="0.2" height="15.0" fill="rgb(227,32,45)" rx="2" ry="2" />
<text  x="1112.68" y="1423.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="885.0" y="1989" width="0.2" height="15.0" fill="rgb(222,212,8)" rx="2" ry="2" />
<text  x="887.98" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1123.4" y="1941" width="0.2" height="15.0" fill="rgb(209,123,46)" rx="2" ry="2" />
<text  x="1126.36" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="938.9" y="1989" width="0.8" height="15.0" fill="rgb(243,152,15)" rx="2" ry="2" />
<text  x="941.93" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.0" y="1749" width="0.2" height="15.0" fill="rgb(226,146,19)" rx="2" ry="2" />
<text  x="127.03" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="951.6" y="2021" width="0.2" height="15.0" fill="rgb(214,43,49)" rx="2" ry="2" />
<text  x="954.62" y="2031.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="14.2" y="1893" width="0.2" height="15.0" fill="rgb(211,13,29)" rx="2" ry="2" />
<text  x="17.16" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="72.5" y="1893" width="0.6" height="15.0" fill="rgb(231,184,0)" rx="2" ry="2" />
<text  x="75.47" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="159.7" y="1989" width="0.4" height="15.0" fill="rgb(231,71,39)" rx="2" ry="2" />
<text  x="162.73" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="866.9" y="1941" width="0.4" height="15.0" fill="rgb(253,187,15)" rx="2" ry="2" />
<text  x="869.94" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="745.2" y="1733" width="0.2" height="15.0" fill="rgb(208,116,9)" rx="2" ry="2" />
<text  x="748.17" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="962.7" y="2037" width="0.2" height="15.0" fill="rgb(229,57,15)" rx="2" ry="2" />
<text  x="965.73" y="2047.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="63.9" y="1893" width="0.4" height="15.0" fill="rgb(244,143,39)" rx="2" ry="2" />
<text  x="66.94" y="1903.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="326.9" y="1749" width="0.2" height="15.0" fill="rgb(205,65,30)" rx="2" ry="2" />
<text  x="329.91" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="319.2" y="1653" width="0.2" height="15.0" fill="rgb(251,14,5)" rx="2" ry="2" />
<text  x="322.18" y="1663.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="833.0" y="1909" width="0.2" height="15.0" fill="rgb(211,201,21)" rx="2" ry="2" />
<text  x="836.03" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="554.6" y="1925" width="0.2" height="15.0" fill="rgb(209,193,50)" rx="2" ry="2" />
<text  x="557.58" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="572.4" y="1877" width="0.2" height="15.0" fill="rgb(243,200,54)" rx="2" ry="2" />
<text  x="575.43" y="1887.5" ></text>
</g>
<g >
<title>skb_free_head (20 samples, 0.34%)</title><rect x="1105.9" y="1461" width="4.0" height="15.0" fill="rgb(227,93,5)" rx="2" ry="2" />
<text  x="1108.91" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="277.7" y="1733" width="0.2" height="15.0" fill="rgb(254,223,54)" rx="2" ry="2" />
<text  x="280.73" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="197" width="17.5" height="15.0" fill="rgb(215,78,19)" rx="2" ry="2" />
<text  x="107.40" y="207.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="190.7" y="1989" width="0.2" height="15.0" fill="rgb(240,74,37)" rx="2" ry="2" />
<text  x="193.67" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (97 samples, 1.63%)</title><rect x="140.1" y="2005" width="19.2" height="15.0" fill="rgb(228,5,49)" rx="2" ry="2" />
<text  x="143.10" y="2015.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="973.4" y="1685" width="0.2" height="15.0" fill="rgb(222,95,14)" rx="2" ry="2" />
<text  x="976.44" y="1695.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="382.0" y="1829" width="0.8" height="15.0" fill="rgb(241,105,26)" rx="2" ry="2" />
<text  x="385.05" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="617.7" y="2005" width="0.1" height="15.0" fill="rgb(237,30,22)" rx="2" ry="2" />
<text  x="620.65" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="509.2" y="1893" width="0.2" height="15.0" fill="rgb(225,66,40)" rx="2" ry="2" />
<text  x="512.17" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="565.5" y="1765" width="0.6" height="15.0" fill="rgb(234,125,29)" rx="2" ry="2" />
<text  x="568.49" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="80.6" y="1893" width="0.4" height="15.0" fill="rgb(237,45,39)" rx="2" ry="2" />
<text  x="83.60" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="138.5" y="1973" width="0.2" height="15.0" fill="rgb(220,4,3)" rx="2" ry="2" />
<text  x="141.51" y="1983.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="243.4" y="1861" width="0.2" height="15.0" fill="rgb(249,226,4)" rx="2" ry="2" />
<text  x="246.42" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (10 samples, 0.17%)</title><rect x="791.2" y="1541" width="2.0" height="15.0" fill="rgb(239,3,44)" rx="2" ry="2" />
<text  x="794.18" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="487.2" y="2021" width="0.7" height="15.0" fill="rgb(218,59,18)" rx="2" ry="2" />
<text  x="490.16" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="501.6" y="1877" width="0.2" height="15.0" fill="rgb(226,148,33)" rx="2" ry="2" />
<text  x="504.63" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="561.7" y="1909" width="0.2" height="15.0" fill="rgb(221,7,17)" rx="2" ry="2" />
<text  x="564.72" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="873.3" y="1845" width="0.2" height="15.0" fill="rgb(251,24,20)" rx="2" ry="2" />
<text  x="876.28" y="1855.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="572.2" y="1733" width="0.2" height="15.0" fill="rgb(217,13,28)" rx="2" ry="2" />
<text  x="575.24" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="141.3" y="1941" width="0.6" height="15.0" fill="rgb(212,25,26)" rx="2" ry="2" />
<text  x="144.29" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="643.8" y="1973" width="0.2" height="15.0" fill="rgb(224,105,0)" rx="2" ry="2" />
<text  x="646.83" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="925.6" y="1973" width="0.4" height="15.0" fill="rgb(251,21,43)" rx="2" ry="2" />
<text  x="928.64" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="103.4" y="1605" width="0.2" height="15.0" fill="rgb(210,95,27)" rx="2" ry="2" />
<text  x="106.41" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="192.9" y="1813" width="0.1" height="15.0" fill="rgb(251,225,29)" rx="2" ry="2" />
<text  x="195.85" y="1823.5" ></text>
</g>
<g >
<title>__libc_recv (531 samples, 8.92%)</title><rect x="1024.4" y="2053" width="105.3" height="15.0" fill="rgb(229,150,14)" rx="2" ry="2" />
<text  x="1027.40" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="885.8" y="1893" width="0.2" height="15.0" fill="rgb(226,24,43)" rx="2" ry="2" />
<text  x="888.78" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="186.7" y="1717" width="0.2" height="15.0" fill="rgb(206,81,1)" rx="2" ry="2" />
<text  x="189.70" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="572.4" y="2005" width="0.2" height="15.0" fill="rgb(243,65,48)" rx="2" ry="2" />
<text  x="575.43" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="564.9" y="1701" width="0.2" height="15.0" fill="rgb(242,82,28)" rx="2" ry="2" />
<text  x="567.90" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="644.2" y="1717" width="0.2" height="15.0" fill="rgb(252,11,30)" rx="2" ry="2" />
<text  x="647.23" y="1727.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="223.8" y="1797" width="0.8" height="15.0" fill="rgb(230,43,25)" rx="2" ry="2" />
<text  x="226.79" y="1807.5" ></text>
</g>
<g >
<title>accept4@plt (1 samples, 0.02%)</title><rect x="28.6" y="2005" width="0.2" height="15.0" fill="rgb(220,84,31)" rx="2" ry="2" />
<text  x="31.64" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="512.7" y="1989" width="0.2" height="15.0" fill="rgb(210,17,38)" rx="2" ry="2" />
<text  x="515.74" y="1999.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="14.6" y="2053" width="0.2" height="15.0" fill="rgb(228,93,46)" rx="2" ry="2" />
<text  x="17.56" y="2063.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="877.6" y="1925" width="0.2" height="15.0" fill="rgb(222,146,27)" rx="2" ry="2" />
<text  x="880.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="378.1" y="1669" width="0.2" height="15.0" fill="rgb(210,93,11)" rx="2" ry="2" />
<text  x="381.08" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="378.1" y="1637" width="0.2" height="15.0" fill="rgb(209,190,43)" rx="2" ry="2" />
<text  x="381.08" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="192.9" y="1829" width="0.1" height="15.0" fill="rgb(249,53,41)" rx="2" ry="2" />
<text  x="195.85" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="122.4" y="1541" width="0.2" height="15.0" fill="rgb(210,227,21)" rx="2" ry="2" />
<text  x="125.45" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="726.5" y="1621" width="0.2" height="15.0" fill="rgb(238,67,50)" rx="2" ry="2" />
<text  x="729.53" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (52 samples, 0.87%)</title><rect x="1101.5" y="1669" width="10.4" height="15.0" fill="rgb(216,71,39)" rx="2" ry="2" />
<text  x="1104.55" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (9 samples, 0.15%)</title><rect x="131.6" y="1989" width="1.8" height="15.0" fill="rgb(243,172,25)" rx="2" ry="2" />
<text  x="134.57" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="45.9" y="1989" width="0.2" height="15.0" fill="rgb(238,172,38)" rx="2" ry="2" />
<text  x="48.90" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="148.2" y="1877" width="0.2" height="15.0" fill="rgb(253,133,53)" rx="2" ry="2" />
<text  x="151.23" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="562.7" y="1909" width="0.6" height="15.0" fill="rgb(236,117,29)" rx="2" ry="2" />
<text  x="565.72" y="1919.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="193.0" y="2021" width="0.2" height="15.0" fill="rgb(211,100,27)" rx="2" ry="2" />
<text  x="196.05" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (160 samples, 2.69%)</title><rect x="762.0" y="1669" width="31.8" height="15.0" fill="rgb(214,88,25)" rx="2" ry="2" />
<text  x="765.03" y="1679.5" >ip..</text>
</g>
<g >
<title>prandom_u32_state (1 samples, 0.02%)</title><rect x="487.6" y="1717" width="0.2" height="15.0" fill="rgb(243,203,4)" rx="2" ry="2" />
<text  x="490.55" y="1727.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="71.5" y="1829" width="0.4" height="15.0" fill="rgb(245,19,11)" rx="2" ry="2" />
<text  x="74.48" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="333.7" y="1813" width="0.2" height="15.0" fill="rgb(247,98,30)" rx="2" ry="2" />
<text  x="336.66" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="734.7" y="1653" width="0.2" height="15.0" fill="rgb(226,193,47)" rx="2" ry="2" />
<text  x="737.66" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="644.2" y="1829" width="0.2" height="15.0" fill="rgb(223,166,38)" rx="2" ry="2" />
<text  x="647.23" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="689.4" y="1877" width="0.2" height="15.0" fill="rgb(215,174,7)" rx="2" ry="2" />
<text  x="692.44" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (4 samples, 0.07%)</title><rect x="164.3" y="1989" width="0.8" height="15.0" fill="rgb(236,18,47)" rx="2" ry="2" />
<text  x="167.29" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="403.3" y="1845" width="0.2" height="15.0" fill="rgb(227,171,47)" rx="2" ry="2" />
<text  x="406.27" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="190.7" y="1925" width="0.2" height="15.0" fill="rgb(251,99,7)" rx="2" ry="2" />
<text  x="193.67" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="875.1" y="1813" width="0.2" height="15.0" fill="rgb(247,8,27)" rx="2" ry="2" />
<text  x="878.07" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="917" width="17.5" height="15.0" fill="rgb(227,104,17)" rx="2" ry="2" />
<text  x="107.40" y="927.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="689.8" y="1973" width="0.2" height="15.0" fill="rgb(251,61,54)" rx="2" ry="2" />
<text  x="692.84" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="644.2" y="1925" width="0.2" height="15.0" fill="rgb(216,140,1)" rx="2" ry="2" />
<text  x="647.23" y="1935.5" ></text>
</g>
<g >
<title>tcp_current_mss (15 samples, 0.25%)</title><rect x="333.9" y="1861" width="2.9" height="15.0" fill="rgb(238,214,2)" rx="2" ry="2" />
<text  x="336.86" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.18%)</title><rect x="1176.7" y="2037" width="2.2" height="15.0" fill="rgb(231,2,26)" rx="2" ry="2" />
<text  x="1179.71" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (6 samples, 0.10%)</title><rect x="1136.5" y="2021" width="1.1" height="15.0" fill="rgb(227,196,1)" rx="2" ry="2" />
<text  x="1139.45" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="564.1" y="1893" width="0.4" height="15.0" fill="rgb(238,21,46)" rx="2" ry="2" />
<text  x="567.10" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="223.8" y="1909" width="0.8" height="15.0" fill="rgb(247,29,22)" rx="2" ry="2" />
<text  x="226.79" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="484.2" y="1893" width="0.8" height="15.0" fill="rgb(217,13,32)" rx="2" ry="2" />
<text  x="487.18" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="578.6" y="1925" width="0.2" height="15.0" fill="rgb(242,73,39)" rx="2" ry="2" />
<text  x="581.58" y="1935.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (1 samples, 0.02%)</title><rect x="682.9" y="1909" width="0.2" height="15.0" fill="rgb(219,191,17)" rx="2" ry="2" />
<text  x="685.90" y="1919.5" ></text>
</g>
<g >
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="722.0" y="1797" width="0.4" height="15.0" fill="rgb(217,50,52)" rx="2" ry="2" />
<text  x="724.97" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (4 samples, 0.07%)</title><rect x="641.3" y="1989" width="0.7" height="15.0" fill="rgb(240,80,3)" rx="2" ry="2" />
<text  x="644.25" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1176.1" y="2053" width="0.2" height="15.0" fill="rgb(223,76,30)" rx="2" ry="2" />
<text  x="1179.12" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.35%)</title><rect x="10.2" y="2037" width="4.2" height="15.0" fill="rgb(219,117,4)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="378.1" y="1765" width="0.2" height="15.0" fill="rgb(229,221,19)" rx="2" ry="2" />
<text  x="381.08" y="1775.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="572.2" y="1557" width="0.2" height="15.0" fill="rgb(249,186,3)" rx="2" ry="2" />
<text  x="575.24" y="1567.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="668.2" y="1925" width="0.4" height="15.0" fill="rgb(246,226,38)" rx="2" ry="2" />
<text  x="671.22" y="1935.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1180.5" y="1989" width="0.2" height="15.0" fill="rgb(207,210,42)" rx="2" ry="2" />
<text  x="1183.48" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="878.4" y="1941" width="0.2" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="881.44" y="1951.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="682.7" y="1925" width="0.2" height="15.0" fill="rgb(246,128,15)" rx="2" ry="2" />
<text  x="685.70" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1006.0" y="1957" width="0.4" height="15.0" fill="rgb(222,32,6)" rx="2" ry="2" />
<text  x="1008.96" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1182.1" y="1941" width="0.2" height="15.0" fill="rgb(243,26,9)" rx="2" ry="2" />
<text  x="1185.07" y="1951.5" ></text>
</g>
<g >
<title>detach_if_pending (3 samples, 0.05%)</title><rect x="802.5" y="1605" width="0.6" height="15.0" fill="rgb(244,129,8)" rx="2" ry="2" />
<text  x="805.48" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="572.0" y="1941" width="0.2" height="15.0" fill="rgb(222,6,38)" rx="2" ry="2" />
<text  x="575.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1493" width="18.0" height="15.0" fill="rgb(218,155,16)" rx="2" ry="2" />
<text  x="107.40" y="1503.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="866.9" y="1845" width="0.2" height="15.0" fill="rgb(238,173,9)" rx="2" ry="2" />
<text  x="869.94" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="572.4" y="1829" width="0.2" height="15.0" fill="rgb(225,183,5)" rx="2" ry="2" />
<text  x="575.43" y="1839.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="393.5" y="1877" width="0.2" height="15.0" fill="rgb(248,47,44)" rx="2" ry="2" />
<text  x="396.55" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="549.2" y="1541" width="0.2" height="15.0" fill="rgb(227,129,6)" rx="2" ry="2" />
<text  x="552.23" y="1551.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (3 samples, 0.05%)</title><rect x="1001.8" y="2005" width="0.6" height="15.0" fill="rgb(229,220,37)" rx="2" ry="2" />
<text  x="1004.79" y="2015.5" ></text>
</g>
<g >
<title>__libc_fcntl (17 samples, 0.29%)</title><rect x="1166.0" y="2037" width="3.4" height="15.0" fill="rgb(219,91,27)" rx="2" ry="2" />
<text  x="1169.00" y="2047.5" ></text>
</g>
<g >
<title>tcp_poll (23 samples, 0.39%)</title><rect x="502.0" y="1893" width="4.6" height="15.0" fill="rgb(223,151,17)" rx="2" ry="2" />
<text  x="505.03" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="549.2" y="1461" width="0.2" height="15.0" fill="rgb(240,199,29)" rx="2" ry="2" />
<text  x="552.23" y="1471.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="530.0" y="2005" width="0.2" height="15.0" fill="rgb(247,166,35)" rx="2" ry="2" />
<text  x="532.99" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="643.8" y="1749" width="0.2" height="15.0" fill="rgb(207,43,18)" rx="2" ry="2" />
<text  x="646.83" y="1759.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="84.8" y="1925" width="0.2" height="15.0" fill="rgb(222,154,7)" rx="2" ry="2" />
<text  x="87.77" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="487.6" y="1749" width="0.2" height="15.0" fill="rgb(243,33,45)" rx="2" ry="2" />
<text  x="490.55" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="167.9" y="1909" width="0.2" height="15.0" fill="rgb(240,117,43)" rx="2" ry="2" />
<text  x="170.86" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="908.4" y="2005" width="0.2" height="15.0" fill="rgb(254,80,11)" rx="2" ry="2" />
<text  x="911.39" y="2015.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="761.4" y="1557" width="0.2" height="15.0" fill="rgb(243,20,0)" rx="2" ry="2" />
<text  x="764.43" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="646.2" y="1845" width="0.2" height="15.0" fill="rgb(236,185,27)" rx="2" ry="2" />
<text  x="649.21" y="1855.5" ></text>
</g>
<g >
<title>memchr@plt (2 samples, 0.03%)</title><rect x="1014.1" y="2037" width="0.4" height="15.0" fill="rgb(253,43,6)" rx="2" ry="2" />
<text  x="1017.09" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="399.3" y="1861" width="0.2" height="15.0" fill="rgb(246,168,45)" rx="2" ry="2" />
<text  x="402.30" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="293.0" y="1365" width="0.2" height="15.0" fill="rgb(210,65,21)" rx="2" ry="2" />
<text  x="296.00" y="1375.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (8 samples, 0.13%)</title><rect x="47.1" y="1989" width="1.6" height="15.0" fill="rgb(223,224,14)" rx="2" ry="2" />
<text  x="50.09" y="1999.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="994.9" y="1621" width="0.2" height="15.0" fill="rgb(222,61,33)" rx="2" ry="2" />
<text  x="997.85" y="1631.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="63.0" y="1909" width="0.3" height="15.0" fill="rgb(210,208,43)" rx="2" ry="2" />
<text  x="65.95" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (36 samples, 0.61%)</title><rect x="639.1" y="2021" width="7.1" height="15.0" fill="rgb(242,162,28)" rx="2" ry="2" />
<text  x="642.07" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="170.8" y="1957" width="0.2" height="15.0" fill="rgb(222,85,52)" rx="2" ry="2" />
<text  x="173.84" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (24 samples, 0.40%)</title><rect x="609.5" y="1909" width="4.8" height="15.0" fill="rgb(213,181,47)" rx="2" ry="2" />
<text  x="612.52" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (4 samples, 0.07%)</title><rect x="107.6" y="37" width="0.8" height="15.0" fill="rgb(222,85,31)" rx="2" ry="2" />
<text  x="110.57" y="47.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="514.1" y="1941" width="0.6" height="15.0" fill="rgb(216,19,12)" rx="2" ry="2" />
<text  x="517.13" y="1951.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="167.9" y="1637" width="0.2" height="15.0" fill="rgb(234,95,2)" rx="2" ry="2" />
<text  x="170.86" y="1647.5" ></text>
</g>
<g >
<title>inet_ehash_nolisten (1 samples, 0.02%)</title><rect x="875.1" y="1653" width="0.2" height="15.0" fill="rgb(217,18,29)" rx="2" ry="2" />
<text  x="878.07" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="468.1" y="1957" width="0.8" height="15.0" fill="rgb(240,195,0)" rx="2" ry="2" />
<text  x="471.12" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="734.1" y="1765" width="0.2" height="15.0" fill="rgb(245,93,42)" rx="2" ry="2" />
<text  x="737.06" y="1775.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="881.4" y="1653" width="0.2" height="15.0" fill="rgb(207,211,54)" rx="2" ry="2" />
<text  x="884.42" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="223.6" y="1925" width="0.2" height="15.0" fill="rgb(233,160,28)" rx="2" ry="2" />
<text  x="226.59" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="135.3" y="1893" width="0.2" height="15.0" fill="rgb(253,120,5)" rx="2" ry="2" />
<text  x="138.34" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="620.6" y="2021" width="0.8" height="15.0" fill="rgb(233,116,41)" rx="2" ry="2" />
<text  x="623.63" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1006.2" y="1797" width="0.2" height="15.0" fill="rgb(223,206,19)" rx="2" ry="2" />
<text  x="1009.16" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="827.1" y="1797" width="0.2" height="15.0" fill="rgb(207,1,47)" rx="2" ry="2" />
<text  x="830.08" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="328.3" y="1541" width="0.2" height="15.0" fill="rgb(212,124,42)" rx="2" ry="2" />
<text  x="331.30" y="1551.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="758.7" y="1685" width="0.4" height="15.0" fill="rgb(239,83,52)" rx="2" ry="2" />
<text  x="761.66" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="552.6" y="1893" width="0.2" height="15.0" fill="rgb(209,135,38)" rx="2" ry="2" />
<text  x="555.60" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (26 samples, 0.44%)</title><rect x="542.5" y="2005" width="5.1" height="15.0" fill="rgb(247,16,30)" rx="2" ry="2" />
<text  x="545.49" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="806.5" y="1445" width="0.1" height="15.0" fill="rgb(254,1,30)" rx="2" ry="2" />
<text  x="809.45" y="1455.5" ></text>
</g>
<g >
<title>__wake_up_common (7 samples, 0.12%)</title><rect x="294.0" y="1445" width="1.4" height="15.0" fill="rgb(254,6,38)" rx="2" ry="2" />
<text  x="296.99" y="1455.5" ></text>
</g>
<g >
<title>schedule (20 samples, 0.34%)</title><rect x="10.4" y="1941" width="4.0" height="15.0" fill="rgb(211,6,46)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="261" width="17.5" height="15.0" fill="rgb(232,214,17)" rx="2" ry="2" />
<text  x="107.40" y="271.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (8 samples, 0.13%)</title><rect x="881.8" y="2005" width="1.6" height="15.0" fill="rgb(242,10,40)" rx="2" ry="2" />
<text  x="884.81" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="74.1" y="1957" width="0.2" height="15.0" fill="rgb(217,205,21)" rx="2" ry="2" />
<text  x="77.06" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="650.8" y="2037" width="0.4" height="15.0" fill="rgb(236,7,21)" rx="2" ry="2" />
<text  x="653.77" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="906.0" y="2005" width="0.4" height="15.0" fill="rgb(222,51,24)" rx="2" ry="2" />
<text  x="909.01" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9 samples, 0.15%)</title><rect x="1115.2" y="1941" width="1.8" height="15.0" fill="rgb(209,52,21)" rx="2" ry="2" />
<text  x="1118.23" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1557" width="18.0" height="15.0" fill="rgb(250,195,30)" rx="2" ry="2" />
<text  x="107.40" y="1567.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1084.1" y="1909" width="0.2" height="15.0" fill="rgb(226,52,30)" rx="2" ry="2" />
<text  x="1087.10" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (4 samples, 0.07%)</title><rect x="924.6" y="1941" width="0.8" height="15.0" fill="rgb(239,115,52)" rx="2" ry="2" />
<text  x="927.65" y="1951.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="798.1" y="1685" width="0.2" height="15.0" fill="rgb(214,89,7)" rx="2" ry="2" />
<text  x="801.12" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="216.1" y="1893" width="0.2" height="15.0" fill="rgb(233,25,16)" rx="2" ry="2" />
<text  x="219.05" y="1903.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (14 samples, 0.24%)</title><rect x="292.6" y="1701" width="2.8" height="15.0" fill="rgb(215,181,22)" rx="2" ry="2" />
<text  x="295.61" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="855.6" y="1941" width="0.2" height="15.0" fill="rgb(217,119,40)" rx="2" ry="2" />
<text  x="858.63" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="138.7" y="1989" width="0.2" height="15.0" fill="rgb(226,155,45)" rx="2" ry="2" />
<text  x="141.71" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="646.2" y="1829" width="0.2" height="15.0" fill="rgb(248,58,22)" rx="2" ry="2" />
<text  x="649.21" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="289.0" y="1685" width="0.4" height="15.0" fill="rgb(235,108,43)" rx="2" ry="2" />
<text  x="292.04" y="1695.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1080.1" y="1909" width="0.2" height="15.0" fill="rgb(234,210,51)" rx="2" ry="2" />
<text  x="1083.13" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="241.0" y="1861" width="0.2" height="15.0" fill="rgb(240,118,5)" rx="2" ry="2" />
<text  x="244.04" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="32.8" y="1845" width="0.2" height="15.0" fill="rgb(243,134,13)" rx="2" ry="2" />
<text  x="35.81" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::init (1 samples, 0.02%)</title><rect x="1005.4" y="1989" width="0.2" height="15.0" fill="rgb(238,182,45)" rx="2" ry="2" />
<text  x="1008.36" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="994.9" y="1877" width="0.2" height="15.0" fill="rgb(244,162,20)" rx="2" ry="2" />
<text  x="997.85" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="386.8" y="1909" width="0.2" height="15.0" fill="rgb(216,192,32)" rx="2" ry="2" />
<text  x="389.81" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="103.4" y="1813" width="0.2" height="15.0" fill="rgb(243,88,37)" rx="2" ry="2" />
<text  x="106.41" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="875.1" y="1765" width="0.2" height="15.0" fill="rgb(218,127,9)" rx="2" ry="2" />
<text  x="878.07" y="1775.5" ></text>
</g>
<g >
<title>lock_sock_nested (15 samples, 0.25%)</title><rect x="381.7" y="1941" width="2.9" height="15.0" fill="rgb(207,174,14)" rx="2" ry="2" />
<text  x="384.65" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="994.3" y="1989" width="0.8" height="15.0" fill="rgb(222,194,7)" rx="2" ry="2" />
<text  x="997.26" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="360.2" y="1877" width="0.2" height="15.0" fill="rgb(237,33,11)" rx="2" ry="2" />
<text  x="363.23" y="1887.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="410.0" y="1925" width="0.2" height="15.0" fill="rgb(236,77,49)" rx="2" ry="2" />
<text  x="413.01" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="621.2" y="2005" width="0.2" height="15.0" fill="rgb(209,71,40)" rx="2" ry="2" />
<text  x="624.22" y="2015.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (2 samples, 0.03%)</title><rect x="977.6" y="1877" width="0.4" height="15.0" fill="rgb(223,103,42)" rx="2" ry="2" />
<text  x="980.60" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (2 samples, 0.03%)</title><rect x="27.3" y="2037" width="0.4" height="15.0" fill="rgb(250,158,9)" rx="2" ry="2" />
<text  x="30.25" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1164.4" y="2053" width="0.8" height="15.0" fill="rgb(233,23,29)" rx="2" ry="2" />
<text  x="1167.42" y="2063.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="761.4" y="1621" width="0.2" height="15.0" fill="rgb(214,121,22)" rx="2" ry="2" />
<text  x="764.43" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (7 samples, 0.12%)</title><rect x="846.1" y="1877" width="1.4" height="15.0" fill="rgb(242,160,19)" rx="2" ry="2" />
<text  x="849.11" y="1887.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="538.5" y="1973" width="0.2" height="15.0" fill="rgb(228,53,50)" rx="2" ry="2" />
<text  x="541.52" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (4 samples, 0.07%)</title><rect x="853.5" y="1989" width="0.7" height="15.0" fill="rgb(249,200,40)" rx="2" ry="2" />
<text  x="856.45" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (7 samples, 0.12%)</title><rect x="568.9" y="2005" width="1.4" height="15.0" fill="rgb(246,205,54)" rx="2" ry="2" />
<text  x="571.86" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (3 samples, 0.05%)</title><rect x="141.9" y="1941" width="0.6" height="15.0" fill="rgb(218,63,49)" rx="2" ry="2" />
<text  x="144.88" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="509.0" y="1797" width="0.2" height="15.0" fill="rgb(218,31,17)" rx="2" ry="2" />
<text  x="511.97" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="695.4" y="1957" width="0.2" height="15.0" fill="rgb(245,53,7)" rx="2" ry="2" />
<text  x="698.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="903.0" y="2005" width="0.2" height="15.0" fill="rgb(225,126,27)" rx="2" ry="2" />
<text  x="906.03" y="2015.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (7 samples, 0.12%)</title><rect x="248.4" y="1941" width="1.4" height="15.0" fill="rgb(225,82,29)" rx="2" ry="2" />
<text  x="251.38" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (1 samples, 0.02%)</title><rect x="645.4" y="1989" width="0.2" height="15.0" fill="rgb(217,32,46)" rx="2" ry="2" />
<text  x="648.42" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1096.8" y="1909" width="0.2" height="15.0" fill="rgb(240,100,40)" rx="2" ry="2" />
<text  x="1099.79" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (33 samples, 0.55%)</title><rect x="628.8" y="1989" width="6.5" height="15.0" fill="rgb(233,68,13)" rx="2" ry="2" />
<text  x="631.76" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="881.4" y="1621" width="0.2" height="15.0" fill="rgb(227,131,7)" rx="2" ry="2" />
<text  x="884.42" y="1631.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (61 samples, 1.03%)</title><rect x="496.9" y="1925" width="12.1" height="15.0" fill="rgb(236,229,17)" rx="2" ry="2" />
<text  x="499.87" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (4 samples, 0.07%)</title><rect x="218.2" y="1877" width="0.8" height="15.0" fill="rgb(215,38,16)" rx="2" ry="2" />
<text  x="221.24" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McStatsReply::~McStatsReply (1 samples, 0.02%)</title><rect x="946.7" y="2037" width="0.2" height="15.0" fill="rgb(248,216,5)" rx="2" ry="2" />
<text  x="949.66" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="157.9" y="1941" width="0.2" height="15.0" fill="rgb(211,63,51)" rx="2" ry="2" />
<text  x="160.95" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (16 samples, 0.27%)</title><rect x="1061.9" y="1893" width="3.2" height="15.0" fill="rgb(239,176,51)" rx="2" ry="2" />
<text  x="1064.89" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="572.2" y="1717" width="0.2" height="15.0" fill="rgb(243,92,31)" rx="2" ry="2" />
<text  x="575.24" y="1727.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11 samples, 0.18%)</title><rect x="312.0" y="1685" width="2.2" height="15.0" fill="rgb(222,146,36)" rx="2" ry="2" />
<text  x="315.04" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="565.5" y="1861" width="0.6" height="15.0" fill="rgb(249,216,21)" rx="2" ry="2" />
<text  x="568.49" y="1871.5" ></text>
</g>
<g >
<title>ksize (7 samples, 0.12%)</title><rect x="273.8" y="1845" width="1.4" height="15.0" fill="rgb(238,151,13)" rx="2" ry="2" />
<text  x="276.76" y="1855.5" ></text>
</g>
<g >
<title>sched_clock (4 samples, 0.07%)</title><rect x="1113.3" y="1893" width="0.7" height="15.0" fill="rgb(248,131,54)" rx="2" ry="2" />
<text  x="1116.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="625.4" y="2005" width="0.4" height="15.0" fill="rgb(247,173,24)" rx="2" ry="2" />
<text  x="628.38" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="186.7" y="1781" width="0.2" height="15.0" fill="rgb(217,94,27)" rx="2" ry="2" />
<text  x="189.70" y="1791.5" ></text>
</g>
<g >
<title>___d_drop (1 samples, 0.02%)</title><rect x="722.8" y="1765" width="0.2" height="15.0" fill="rgb(239,65,30)" rx="2" ry="2" />
<text  x="725.76" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (3 samples, 0.05%)</title><rect x="33.8" y="1973" width="0.6" height="15.0" fill="rgb(243,38,37)" rx="2" ry="2" />
<text  x="36.80" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="820.7" y="1813" width="0.2" height="15.0" fill="rgb(254,126,0)" rx="2" ry="2" />
<text  x="823.73" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (3 samples, 0.05%)</title><rect x="671.6" y="2005" width="0.6" height="15.0" fill="rgb(214,81,13)" rx="2" ry="2" />
<text  x="674.59" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="126.4" y="1909" width="0.2" height="15.0" fill="rgb(248,106,54)" rx="2" ry="2" />
<text  x="129.41" y="1919.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (21 samples, 0.35%)</title><rect x="800.9" y="1669" width="4.2" height="15.0" fill="rgb(205,94,10)" rx="2" ry="2" />
<text  x="803.90" y="1679.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="1063.7" y="1877" width="1.2" height="15.0" fill="rgb(254,174,48)" rx="2" ry="2" />
<text  x="1066.67" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1123.4" y="1781" width="0.2" height="15.0" fill="rgb(211,149,17)" rx="2" ry="2" />
<text  x="1126.36" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1006.2" y="1829" width="0.2" height="15.0" fill="rgb(234,70,9)" rx="2" ry="2" />
<text  x="1009.16" y="1839.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="402.5" y="1877" width="0.2" height="15.0" fill="rgb(227,22,2)" rx="2" ry="2" />
<text  x="405.47" y="1887.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="252.5" y="1861" width="0.2" height="15.0" fill="rgb(238,57,15)" rx="2" ry="2" />
<text  x="255.54" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="552.6" y="1909" width="0.2" height="15.0" fill="rgb(232,192,9)" rx="2" ry="2" />
<text  x="555.60" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="121.7" y="85" width="0.2" height="15.0" fill="rgb(246,95,5)" rx="2" ry="2" />
<text  x="124.65" y="95.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="112.1" y="37" width="0.2" height="15.0" fill="rgb(236,59,49)" rx="2" ry="2" />
<text  x="115.13" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="933.6" y="1973" width="1.0" height="15.0" fill="rgb(217,76,34)" rx="2" ry="2" />
<text  x="936.57" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="890.3" y="1925" width="0.4" height="15.0" fill="rgb(245,18,24)" rx="2" ry="2" />
<text  x="893.34" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="866.9" y="1829" width="0.2" height="15.0" fill="rgb(239,7,41)" rx="2" ry="2" />
<text  x="869.94" y="1839.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="456.8" y="1813" width="0.2" height="15.0" fill="rgb(229,155,37)" rx="2" ry="2" />
<text  x="459.81" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="243.8" y="1877" width="0.2" height="15.0" fill="rgb(207,48,6)" rx="2" ry="2" />
<text  x="246.82" y="1887.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1064.9" y="1877" width="0.2" height="15.0" fill="rgb(242,150,28)" rx="2" ry="2" />
<text  x="1067.86" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="521.1" y="1925" width="0.2" height="15.0" fill="rgb(211,204,2)" rx="2" ry="2" />
<text  x="524.07" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="509.0" y="1829" width="0.2" height="15.0" fill="rgb(225,172,32)" rx="2" ry="2" />
<text  x="511.97" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1012.5" y="1861" width="0.2" height="15.0" fill="rgb(228,141,40)" rx="2" ry="2" />
<text  x="1015.50" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="365.4" y="1509" width="0.2" height="15.0" fill="rgb(249,194,53)" rx="2" ry="2" />
<text  x="368.39" y="1519.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="924.3" y="1909" width="0.2" height="15.0" fill="rgb(241,178,31)" rx="2" ry="2" />
<text  x="927.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (5 samples, 0.08%)</title><rect x="1018.7" y="2037" width="0.9" height="15.0" fill="rgb(244,11,53)" rx="2" ry="2" />
<text  x="1021.65" y="2047.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="58.2" y="1589" width="0.2" height="15.0" fill="rgb(219,158,50)" rx="2" ry="2" />
<text  x="61.19" y="1599.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="223.8" y="1781" width="0.8" height="15.0" fill="rgb(232,160,15)" rx="2" ry="2" />
<text  x="226.79" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (8 samples, 0.13%)</title><rect x="31.4" y="1989" width="1.6" height="15.0" fill="rgb(245,54,38)" rx="2" ry="2" />
<text  x="34.42" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="103.4" y="1589" width="0.2" height="15.0" fill="rgb(248,152,20)" rx="2" ry="2" />
<text  x="106.41" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="48.5" y="1941" width="0.2" height="15.0" fill="rgb(250,130,17)" rx="2" ry="2" />
<text  x="51.47" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="326.7" y="1701" width="0.2" height="15.0" fill="rgb(239,102,28)" rx="2" ry="2" />
<text  x="329.72" y="1711.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="554.6" y="1861" width="0.2" height="15.0" fill="rgb(222,43,2)" rx="2" ry="2" />
<text  x="557.58" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="104.0" y="1701" width="19.6" height="15.0" fill="rgb(219,148,31)" rx="2" ry="2" />
<text  x="107.00" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (4,672 samples, 78.52%)</title><rect x="96.3" y="2053" width="926.5" height="15.0" fill="rgb(222,12,51)" rx="2" ry="2" />
<text  x="99.27" y="2063.5" >[unknown]</text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="72.7" y="1861" width="0.4" height="15.0" fill="rgb(231,67,6)" rx="2" ry="2" />
<text  x="75.67" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (2 samples, 0.03%)</title><rect x="981.6" y="1909" width="0.4" height="15.0" fill="rgb(224,130,4)" rx="2" ry="2" />
<text  x="984.57" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="880.0" y="1893" width="0.4" height="15.0" fill="rgb(214,138,47)" rx="2" ry="2" />
<text  x="883.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="937.1" y="2005" width="0.6" height="15.0" fill="rgb(218,172,1)" rx="2" ry="2" />
<text  x="940.14" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="1181.9" y="2037" width="1.0" height="15.0" fill="rgb(228,94,50)" rx="2" ry="2" />
<text  x="1184.87" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="501.8" y="1733" width="0.2" height="15.0" fill="rgb(227,97,24)" rx="2" ry="2" />
<text  x="504.83" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="946.7" y="1925" width="0.2" height="15.0" fill="rgb(228,90,44)" rx="2" ry="2" />
<text  x="949.66" y="1935.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="389.0" y="1941" width="0.2" height="15.0" fill="rgb(230,160,24)" rx="2" ry="2" />
<text  x="391.99" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="167.9" y="1701" width="0.2" height="15.0" fill="rgb(220,157,15)" rx="2" ry="2" />
<text  x="170.86" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="165.5" y="1909" width="0.2" height="15.0" fill="rgb(252,124,29)" rx="2" ry="2" />
<text  x="168.48" y="1919.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="571.8" y="1957" width="0.4" height="15.0" fill="rgb(233,154,50)" rx="2" ry="2" />
<text  x="574.84" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (8 samples, 0.13%)</title><rect x="150.2" y="1893" width="1.6" height="15.0" fill="rgb(229,92,3)" rx="2" ry="2" />
<text  x="153.21" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="822.5" y="1717" width="0.2" height="15.0" fill="rgb(224,147,31)" rx="2" ry="2" />
<text  x="825.51" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="192.9" y="1781" width="0.1" height="15.0" fill="rgb(230,48,53)" rx="2" ry="2" />
<text  x="195.85" y="1791.5" ></text>
</g>
<g >
<title>__fdget (27 samples, 0.45%)</title><rect x="452.1" y="1973" width="5.3" height="15.0" fill="rgb(236,60,2)" rx="2" ry="2" />
<text  x="455.05" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="909.4" y="1989" width="0.2" height="15.0" fill="rgb(247,115,34)" rx="2" ry="2" />
<text  x="912.38" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (13 samples, 0.22%)</title><rect x="241.0" y="1989" width="2.6" height="15.0" fill="rgb(236,53,12)" rx="2" ry="2" />
<text  x="244.04" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="977.2" y="1909" width="0.2" height="15.0" fill="rgb(216,97,30)" rx="2" ry="2" />
<text  x="980.20" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="689.8" y="1893" width="0.2" height="15.0" fill="rgb(245,174,7)" rx="2" ry="2" />
<text  x="692.84" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="626.6" y="1989" width="0.2" height="15.0" fill="rgb(229,41,3)" rx="2" ry="2" />
<text  x="629.57" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="1174.3" y="2005" width="0.4" height="15.0" fill="rgb(209,5,43)" rx="2" ry="2" />
<text  x="1177.33" y="2015.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (13 samples, 0.22%)</title><rect x="365.6" y="1941" width="2.6" height="15.0" fill="rgb(233,172,1)" rx="2" ry="2" />
<text  x="368.59" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (2 samples, 0.03%)</title><rect x="1143.0" y="1989" width="0.4" height="15.0" fill="rgb(231,67,26)" rx="2" ry="2" />
<text  x="1146.00" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="702.1" y="1765" width="0.2" height="15.0" fill="rgb(209,31,45)" rx="2" ry="2" />
<text  x="705.13" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="190.7" y="1829" width="0.2" height="15.0" fill="rgb(205,115,25)" rx="2" ry="2" />
<text  x="193.67" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (8 samples, 0.13%)</title><rect x="1137.8" y="2021" width="1.6" height="15.0" fill="rgb(215,15,21)" rx="2" ry="2" />
<text  x="1140.84" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="689.8" y="1957" width="0.2" height="15.0" fill="rgb(232,29,39)" rx="2" ry="2" />
<text  x="692.84" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1100.8" y="1813" width="0.2" height="15.0" fill="rgb(252,13,42)" rx="2" ry="2" />
<text  x="1103.76" y="1823.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="249.6" y="1893" width="0.2" height="15.0" fill="rgb(232,75,30)" rx="2" ry="2" />
<text  x="252.57" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="252.7" y="1877" width="1.0" height="15.0" fill="rgb(236,222,53)" rx="2" ry="2" />
<text  x="255.74" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="885.8" y="1845" width="0.2" height="15.0" fill="rgb(228,83,5)" rx="2" ry="2" />
<text  x="888.78" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="120.1" y="53" width="0.2" height="15.0" fill="rgb(221,217,25)" rx="2" ry="2" />
<text  x="123.07" y="63.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="389.8" y="1925" width="0.2" height="15.0" fill="rgb(252,99,34)" rx="2" ry="2" />
<text  x="392.78" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="1137.2" y="1973" width="0.4" height="15.0" fill="rgb(252,204,49)" rx="2" ry="2" />
<text  x="1140.25" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.38%)</title><rect x="493.1" y="2021" width="16.3" height="15.0" fill="rgb(248,219,53)" rx="2" ry="2" />
<text  x="496.11" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="114.1" y="37" width="0.2" height="15.0" fill="rgb(233,17,32)" rx="2" ry="2" />
<text  x="117.12" y="47.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (5 samples, 0.08%)</title><rect x="569.3" y="1989" width="1.0" height="15.0" fill="rgb(225,223,38)" rx="2" ry="2" />
<text  x="572.26" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="277.7" y="1781" width="0.2" height="15.0" fill="rgb(206,143,47)" rx="2" ry="2" />
<text  x="280.73" y="1791.5" ></text>
</g>
<g >
<title>tcp_init_buffer_space (1 samples, 0.02%)</title><rect x="866.9" y="1573" width="0.2" height="15.0" fill="rgb(226,207,54)" rx="2" ry="2" />
<text  x="869.94" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="389.2" y="1829" width="0.2" height="15.0" fill="rgb(238,26,2)" rx="2" ry="2" />
<text  x="392.19" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="905.8" y="1989" width="0.2" height="15.0" fill="rgb(210,18,41)" rx="2" ry="2" />
<text  x="908.81" y="1999.5" ></text>
</g>
<g >
<title>evict (33 samples, 0.55%)</title><rect x="726.9" y="1717" width="6.6" height="15.0" fill="rgb(229,65,15)" rx="2" ry="2" />
<text  x="729.92" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;folly::SocketAddress&amp;&gt; (1 samples, 0.02%)</title><rect x="42.5" y="2005" width="0.2" height="15.0" fill="rgb(207,33,48)" rx="2" ry="2" />
<text  x="45.52" y="2015.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="688.1" y="1909" width="0.9" height="15.0" fill="rgb(215,55,52)" rx="2" ry="2" />
<text  x="691.05" y="1919.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="761.4" y="1493" width="0.2" height="15.0" fill="rgb(207,212,44)" rx="2" ry="2" />
<text  x="764.43" y="1503.5" ></text>
</g>
<g >
<title>__sched_text_start (14 samples, 0.24%)</title><rect x="14.8" y="1925" width="2.7" height="15.0" fill="rgb(228,51,25)" rx="2" ry="2" />
<text  x="17.76" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (2 samples, 0.03%)</title><rect x="512.9" y="1989" width="0.4" height="15.0" fill="rgb(227,118,1)" rx="2" ry="2" />
<text  x="515.94" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="273.6" y="1797" width="0.2" height="15.0" fill="rgb(219,140,32)" rx="2" ry="2" />
<text  x="276.57" y="1807.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1080.3" y="1925" width="0.2" height="15.0" fill="rgb(220,154,54)" rx="2" ry="2" />
<text  x="1083.33" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="942.9" y="1957" width="0.2" height="15.0" fill="rgb(241,37,40)" rx="2" ry="2" />
<text  x="945.89" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="915.3" y="1909" width="0.2" height="15.0" fill="rgb(238,120,16)" rx="2" ry="2" />
<text  x="918.33" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (2 samples, 0.03%)</title><rect x="978.6" y="1989" width="0.4" height="15.0" fill="rgb(251,109,35)" rx="2" ry="2" />
<text  x="981.59" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="173.4" y="1941" width="0.6" height="15.0" fill="rgb(217,148,15)" rx="2" ry="2" />
<text  x="176.42" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (18 samples, 0.30%)</title><rect x="10.4" y="1861" width="3.6" height="15.0" fill="rgb(217,143,2)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="319.0" y="1781" width="0.2" height="15.0" fill="rgb(233,76,8)" rx="2" ry="2" />
<text  x="321.98" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1173" width="17.5" height="15.0" fill="rgb(242,164,33)" rx="2" ry="2" />
<text  x="107.40" y="1183.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="314.2" y="1749" width="0.2" height="15.0" fill="rgb(210,30,23)" rx="2" ry="2" />
<text  x="317.22" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="947.1" y="2005" width="4.3" height="15.0" fill="rgb(231,173,19)" rx="2" ry="2" />
<text  x="950.06" y="2015.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="408.8" y="1861" width="0.2" height="15.0" fill="rgb(241,169,12)" rx="2" ry="2" />
<text  x="411.82" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="218.8" y="1829" width="0.2" height="15.0" fill="rgb(219,143,36)" rx="2" ry="2" />
<text  x="221.83" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="643.8" y="1861" width="0.2" height="15.0" fill="rgb(228,194,32)" rx="2" ry="2" />
<text  x="646.83" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="421" width="17.5" height="15.0" fill="rgb(240,148,54)" rx="2" ry="2" />
<text  x="107.40" y="431.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="565.5" y="1749" width="0.6" height="15.0" fill="rgb(240,26,4)" rx="2" ry="2" />
<text  x="568.49" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="487.4" y="1765" width="0.2" height="15.0" fill="rgb(226,91,42)" rx="2" ry="2" />
<text  x="490.35" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (5 samples, 0.08%)</title><rect x="872.7" y="1925" width="1.0" height="15.0" fill="rgb(236,172,52)" rx="2" ry="2" />
<text  x="875.69" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="634.7" y="1909" width="0.2" height="15.0" fill="rgb(214,194,42)" rx="2" ry="2" />
<text  x="637.71" y="1919.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="326.7" y="1637" width="0.2" height="15.0" fill="rgb(215,168,35)" rx="2" ry="2" />
<text  x="329.72" y="1647.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="220.4" y="1829" width="0.6" height="15.0" fill="rgb(219,110,37)" rx="2" ry="2" />
<text  x="223.42" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="951.8" y="2021" width="2.8" height="15.0" fill="rgb(253,170,26)" rx="2" ry="2" />
<text  x="954.82" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="402.9" y="1877" width="0.2" height="15.0" fill="rgb(227,199,26)" rx="2" ry="2" />
<text  x="405.87" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (115 samples, 1.93%)</title><rect x="673.0" y="2037" width="22.8" height="15.0" fill="rgb(209,175,9)" rx="2" ry="2" />
<text  x="675.98" y="2047.5" >f..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="360.2" y="1893" width="0.2" height="15.0" fill="rgb(236,79,20)" rx="2" ry="2" />
<text  x="363.23" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="645" width="17.5" height="15.0" fill="rgb(237,47,4)" rx="2" ry="2" />
<text  x="107.40" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="545.3" y="1877" width="0.4" height="15.0" fill="rgb(220,25,35)" rx="2" ry="2" />
<text  x="548.26" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="73.1" y="1909" width="0.4" height="15.0" fill="rgb(217,140,14)" rx="2" ry="2" />
<text  x="76.07" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="945.5" y="1941" width="0.2" height="15.0" fill="rgb(236,91,12)" rx="2" ry="2" />
<text  x="948.47" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (6 samples, 0.10%)</title><rect x="213.3" y="1909" width="1.2" height="15.0" fill="rgb(228,121,48)" rx="2" ry="2" />
<text  x="216.28" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="196.0" y="2021" width="0.2" height="15.0" fill="rgb(240,23,54)" rx="2" ry="2" />
<text  x="199.02" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="965" width="17.5" height="15.0" fill="rgb(214,201,54)" rx="2" ry="2" />
<text  x="107.40" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (97 samples, 1.63%)</title><rect x="140.1" y="1989" width="19.2" height="15.0" fill="rgb(251,85,23)" rx="2" ry="2" />
<text  x="143.10" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="243.6" y="1909" width="0.4" height="15.0" fill="rgb(234,200,1)" rx="2" ry="2" />
<text  x="246.62" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (67 samples, 1.13%)</title><rect x="585.3" y="1925" width="13.3" height="15.0" fill="rgb(250,41,33)" rx="2" ry="2" />
<text  x="588.32" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="702.3" y="1957" width="0.2" height="15.0" fill="rgb(216,176,32)" rx="2" ry="2" />
<text  x="705.33" y="1967.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="791.4" y="1525" width="0.4" height="15.0" fill="rgb(226,103,48)" rx="2" ry="2" />
<text  x="794.38" y="1535.5" ></text>
</g>
<g >
<title>ip_local_out (152 samples, 2.55%)</title><rect x="763.4" y="1653" width="30.2" height="15.0" fill="rgb(245,192,18)" rx="2" ry="2" />
<text  x="766.42" y="1663.5" >ip..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="517.3" y="1973" width="0.8" height="15.0" fill="rgb(215,200,40)" rx="2" ry="2" />
<text  x="520.30" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="58.2" y="1845" width="0.2" height="15.0" fill="rgb(210,35,1)" rx="2" ry="2" />
<text  x="61.19" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1509" width="18.0" height="15.0" fill="rgb(227,19,43)" rx="2" ry="2" />
<text  x="107.40" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (3 samples, 0.05%)</title><rect x="856.6" y="1989" width="0.6" height="15.0" fill="rgb(227,27,47)" rx="2" ry="2" />
<text  x="859.63" y="1999.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="414.0" y="1733" width="0.2" height="15.0" fill="rgb(210,92,19)" rx="2" ry="2" />
<text  x="416.98" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="875.1" y="1733" width="0.2" height="15.0" fill="rgb(221,18,9)" rx="2" ry="2" />
<text  x="878.07" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="192.9" y="2005" width="0.1" height="15.0" fill="rgb(210,15,50)" rx="2" ry="2" />
<text  x="195.85" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="528.8" y="1957" width="0.8" height="15.0" fill="rgb(213,33,20)" rx="2" ry="2" />
<text  x="531.80" y="1967.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="549.2" y="1573" width="0.2" height="15.0" fill="rgb(209,118,40)" rx="2" ry="2" />
<text  x="552.23" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.05%)</title><rect x="1018.1" y="2037" width="0.6" height="15.0" fill="rgb(247,49,5)" rx="2" ry="2" />
<text  x="1021.06" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (83 samples, 1.39%)</title><rect x="68.5" y="1973" width="16.5" height="15.0" fill="rgb(219,187,48)" rx="2" ry="2" />
<text  x="71.50" y="1983.5" ></text>
</g>
<g >
<title>ip_output (126 samples, 2.12%)</title><rect x="289.4" y="1781" width="25.0" height="15.0" fill="rgb(242,30,33)" rx="2" ry="2" />
<text  x="292.43" y="1791.5" >i..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="650.0" y="2005" width="0.4" height="15.0" fill="rgb(240,71,17)" rx="2" ry="2" />
<text  x="652.98" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="264.4" y="1717" width="0.2" height="15.0" fill="rgb(222,91,24)" rx="2" ry="2" />
<text  x="267.44" y="1727.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="329.3" y="1813" width="0.2" height="15.0" fill="rgb(247,2,9)" rx="2" ry="2" />
<text  x="332.29" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="564.9" y="1653" width="0.2" height="15.0" fill="rgb(233,114,29)" rx="2" ry="2" />
<text  x="567.90" y="1663.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1123.4" y="1733" width="0.2" height="15.0" fill="rgb(251,50,13)" rx="2" ry="2" />
<text  x="1126.36" y="1743.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="343.8" y="1957" width="1.0" height="15.0" fill="rgb(242,61,0)" rx="2" ry="2" />
<text  x="346.77" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="170.2" y="1957" width="0.2" height="15.0" fill="rgb(208,121,2)" rx="2" ry="2" />
<text  x="173.24" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (9 samples, 0.15%)</title><rect x="878.6" y="1941" width="1.8" height="15.0" fill="rgb(230,190,37)" rx="2" ry="2" />
<text  x="881.64" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="875.1" y="1941" width="0.2" height="15.0" fill="rgb(237,221,31)" rx="2" ry="2" />
<text  x="878.07" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="389.2" y="1941" width="0.2" height="15.0" fill="rgb(228,87,38)" rx="2" ry="2" />
<text  x="392.19" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="549.2" y="1845" width="0.2" height="15.0" fill="rgb(208,203,47)" rx="2" ry="2" />
<text  x="552.23" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (38 samples, 0.64%)</title><rect x="638.9" y="2037" width="7.5" height="15.0" fill="rgb(216,25,1)" rx="2" ry="2" />
<text  x="641.87" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (36 samples, 0.61%)</title><rect x="777.3" y="1541" width="7.1" height="15.0" fill="rgb(232,138,10)" rx="2" ry="2" />
<text  x="780.30" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="570.5" y="1973" width="0.1" height="15.0" fill="rgb(222,90,40)" rx="2" ry="2" />
<text  x="573.45" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="617.8" y="2037" width="0.2" height="15.0" fill="rgb(206,12,36)" rx="2" ry="2" />
<text  x="620.85" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (22 samples, 0.37%)</title><rect x="640.5" y="2005" width="4.3" height="15.0" fill="rgb(226,85,45)" rx="2" ry="2" />
<text  x="643.46" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="104.0" y="1685" width="19.6" height="15.0" fill="rgb(235,79,15)" rx="2" ry="2" />
<text  x="107.00" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="343.6" y="2021" width="0.2" height="15.0" fill="rgb(248,185,46)" rx="2" ry="2" />
<text  x="346.57" y="2031.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="321.2" y="1829" width="1.0" height="15.0" fill="rgb(247,180,27)" rx="2" ry="2" />
<text  x="324.16" y="1839.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="875.1" y="1637" width="0.2" height="15.0" fill="rgb(224,20,29)" rx="2" ry="2" />
<text  x="878.07" y="1647.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="249.2" y="1893" width="0.4" height="15.0" fill="rgb(210,6,35)" rx="2" ry="2" />
<text  x="252.17" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="882.6" y="1989" width="0.8" height="15.0" fill="rgb(248,221,31)" rx="2" ry="2" />
<text  x="885.61" y="1999.5" ></text>
</g>
<g >
<title>mutex_lock (6 samples, 0.10%)</title><rect x="484.0" y="1973" width="1.2" height="15.0" fill="rgb(246,216,44)" rx="2" ry="2" />
<text  x="486.98" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="982.4" y="1877" width="0.4" height="15.0" fill="rgb(228,29,46)" rx="2" ry="2" />
<text  x="985.36" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="394.1" y="1845" width="0.2" height="15.0" fill="rgb(214,33,7)" rx="2" ry="2" />
<text  x="397.14" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::base (2 samples, 0.03%)</title><rect x="39.7" y="1973" width="0.4" height="15.0" fill="rgb(252,206,17)" rx="2" ry="2" />
<text  x="42.75" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="326.7" y="1669" width="0.2" height="15.0" fill="rgb(254,103,11)" rx="2" ry="2" />
<text  x="329.72" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="104.0" y="1653" width="19.6" height="15.0" fill="rgb(243,202,33)" rx="2" ry="2" />
<text  x="107.00" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="552.6" y="1765" width="0.2" height="15.0" fill="rgb(219,35,0)" rx="2" ry="2" />
<text  x="555.60" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="121.5" y="101" width="0.2" height="15.0" fill="rgb(247,117,8)" rx="2" ry="2" />
<text  x="124.46" y="111.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (26 samples, 0.44%)</title><rect x="1140.2" y="2021" width="5.2" height="15.0" fill="rgb(248,114,22)" rx="2" ry="2" />
<text  x="1143.22" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (125 samples, 2.10%)</title><rect x="103.2" y="1989" width="24.8" height="15.0" fill="rgb(238,200,12)" rx="2" ry="2" />
<text  x="106.21" y="1999.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="103.4" y="1765" width="0.2" height="15.0" fill="rgb(210,29,13)" rx="2" ry="2" />
<text  x="106.41" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="601.6" y="1989" width="0.2" height="15.0" fill="rgb(229,36,10)" rx="2" ry="2" />
<text  x="604.59" y="1999.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="722.0" y="1781" width="0.4" height="15.0" fill="rgb(212,24,50)" rx="2" ry="2" />
<text  x="724.97" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="1137.2" y="1941" width="0.4" height="15.0" fill="rgb(246,217,36)" rx="2" ry="2" />
<text  x="1140.25" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="734.7" y="1525" width="0.2" height="15.0" fill="rgb(224,130,40)" rx="2" ry="2" />
<text  x="737.66" y="1535.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="745.8" y="1733" width="0.6" height="15.0" fill="rgb(208,219,34)" rx="2" ry="2" />
<text  x="748.76" y="1743.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="89.7" y="1941" width="0.4" height="15.0" fill="rgb(208,192,4)" rx="2" ry="2" />
<text  x="92.72" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="479.0" y="1925" width="0.2" height="15.0" fill="rgb(210,175,20)" rx="2" ry="2" />
<text  x="482.03" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="161.1" y="2021" width="0.2" height="15.0" fill="rgb(212,101,23)" rx="2" ry="2" />
<text  x="164.12" y="2031.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (4 samples, 0.07%)</title><rect x="729.1" y="1653" width="0.8" height="15.0" fill="rgb(227,13,11)" rx="2" ry="2" />
<text  x="732.11" y="1663.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1012.5" y="1813" width="0.2" height="15.0" fill="rgb(207,100,12)" rx="2" ry="2" />
<text  x="1015.50" y="1823.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="413.8" y="1925" width="0.2" height="15.0" fill="rgb(243,155,19)" rx="2" ry="2" />
<text  x="416.78" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="565.7" y="1717" width="0.4" height="15.0" fill="rgb(251,192,51)" rx="2" ry="2" />
<text  x="568.69" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="866.9" y="1685" width="0.2" height="15.0" fill="rgb(211,138,15)" rx="2" ry="2" />
<text  x="869.94" y="1695.5" ></text>
</g>
<g >
<title>security_file_fcntl (1 samples, 0.02%)</title><rect x="565.1" y="1925" width="0.2" height="15.0" fill="rgb(210,124,22)" rx="2" ry="2" />
<text  x="568.10" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="487.6" y="1733" width="0.2" height="15.0" fill="rgb(210,137,49)" rx="2" ry="2" />
<text  x="490.55" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="365.4" y="1877" width="0.2" height="15.0" fill="rgb(252,220,51)" rx="2" ry="2" />
<text  x="368.39" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="668.2" y="1509" width="0.2" height="15.0" fill="rgb(225,188,11)" rx="2" ry="2" />
<text  x="671.22" y="1519.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="644.2" y="1653" width="0.2" height="15.0" fill="rgb(232,65,52)" rx="2" ry="2" />
<text  x="647.23" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (2 samples, 0.03%)</title><rect x="865.9" y="1973" width="0.4" height="15.0" fill="rgb(217,145,16)" rx="2" ry="2" />
<text  x="868.95" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="156.0" y="1717" width="0.2" height="15.0" fill="rgb(205,105,19)" rx="2" ry="2" />
<text  x="158.96" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="271.8" y="1557" width="0.2" height="15.0" fill="rgb(223,97,44)" rx="2" ry="2" />
<text  x="274.78" y="1567.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="761.4" y="1525" width="0.2" height="15.0" fill="rgb(209,46,53)" rx="2" ry="2" />
<text  x="764.43" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="190.7" y="1877" width="0.2" height="15.0" fill="rgb(228,190,5)" rx="2" ry="2" />
<text  x="193.67" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="962.5" y="2037" width="0.2" height="15.0" fill="rgb(248,211,6)" rx="2" ry="2" />
<text  x="965.53" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="800.7" y="1621" width="0.2" height="15.0" fill="rgb(212,207,41)" rx="2" ry="2" />
<text  x="803.70" y="1631.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="220.2" y="1877" width="1.2" height="15.0" fill="rgb(222,123,32)" rx="2" ry="2" />
<text  x="223.22" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.4" y="1957" width="0.2" height="15.0" fill="rgb(248,4,19)" rx="2" ry="2" />
<text  x="17.36" y="1967.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="14.0" y="1749" width="0.2" height="15.0" fill="rgb(242,125,22)" rx="2" ry="2" />
<text  x="16.97" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (2 samples, 0.03%)</title><rect x="140.1" y="1957" width="0.4" height="15.0" fill="rgb(218,118,37)" rx="2" ry="2" />
<text  x="143.10" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="644.2" y="1893" width="0.2" height="15.0" fill="rgb(218,68,8)" rx="2" ry="2" />
<text  x="647.23" y="1903.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="333.7" y="1781" width="0.2" height="15.0" fill="rgb(230,5,12)" rx="2" ry="2" />
<text  x="336.66" y="1791.5" ></text>
</g>
<g >
<title>do_futex (14 samples, 0.24%)</title><rect x="14.8" y="1989" width="2.7" height="15.0" fill="rgb(231,168,6)" rx="2" ry="2" />
<text  x="17.76" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="120.7" y="37" width="0.2" height="15.0" fill="rgb(249,86,45)" rx="2" ry="2" />
<text  x="123.66" y="47.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1525" width="18.0" height="15.0" fill="rgb(241,15,19)" rx="2" ry="2" />
<text  x="107.40" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="264.4" y="1749" width="0.2" height="15.0" fill="rgb(213,75,16)" rx="2" ry="2" />
<text  x="267.44" y="1759.5" ></text>
</g>
<g >
<title>folly::canNallocx (1 samples, 0.02%)</title><rect x="641.6" y="1973" width="0.2" height="15.0" fill="rgb(205,77,53)" rx="2" ry="2" />
<text  x="644.65" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (8 samples, 0.13%)</title><rect x="552.0" y="1989" width="1.6" height="15.0" fill="rgb(209,74,16)" rx="2" ry="2" />
<text  x="555.01" y="1999.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="285.1" y="1813" width="0.2" height="15.0" fill="rgb(205,5,0)" rx="2" ry="2" />
<text  x="288.07" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="165.5" y="1925" width="0.2" height="15.0" fill="rgb(210,126,8)" rx="2" ry="2" />
<text  x="168.48" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (17 samples, 0.29%)</title><rect x="1106.5" y="1429" width="3.4" height="15.0" fill="rgb(232,227,5)" rx="2" ry="2" />
<text  x="1109.51" y="1439.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="103.4" y="1637" width="0.2" height="15.0" fill="rgb(206,141,35)" rx="2" ry="2" />
<text  x="106.41" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="333.7" y="1861" width="0.2" height="15.0" fill="rgb(248,227,23)" rx="2" ry="2" />
<text  x="336.66" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1157" width="17.5" height="15.0" fill="rgb(245,73,18)" rx="2" ry="2" />
<text  x="107.40" y="1167.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (9 samples, 0.15%)</title><rect x="838.4" y="1941" width="1.8" height="15.0" fill="rgb(238,188,50)" rx="2" ry="2" />
<text  x="841.38" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="159.3" y="2005" width="0.4" height="15.0" fill="rgb(222,70,52)" rx="2" ry="2" />
<text  x="162.33" y="2015.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (12 samples, 0.20%)</title><rect x="506.6" y="1893" width="2.4" height="15.0" fill="rgb(210,72,15)" rx="2" ry="2" />
<text  x="509.59" y="1903.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="641.8" y="1973" width="0.2" height="15.0" fill="rgb(226,162,1)" rx="2" ry="2" />
<text  x="644.85" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="292.8" y="1525" width="0.4" height="15.0" fill="rgb(237,45,39)" rx="2" ry="2" />
<text  x="295.80" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="399.1" y="1829" width="0.2" height="15.0" fill="rgb(216,177,11)" rx="2" ry="2" />
<text  x="402.10" y="1839.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="549.2" y="1605" width="0.2" height="15.0" fill="rgb(212,85,41)" rx="2" ry="2" />
<text  x="552.23" y="1615.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="515.3" y="1957" width="0.6" height="15.0" fill="rgb(224,153,1)" rx="2" ry="2" />
<text  x="518.32" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (1 samples, 0.02%)</title><rect x="646.2" y="2021" width="0.2" height="15.0" fill="rgb(221,210,52)" rx="2" ry="2" />
<text  x="649.21" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="903.2" y="1989" width="0.6" height="15.0" fill="rgb(209,33,23)" rx="2" ry="2" />
<text  x="906.23" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="80.4" y="1925" width="0.6" height="15.0" fill="rgb(228,191,15)" rx="2" ry="2" />
<text  x="83.40" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="165.5" y="1973" width="0.2" height="15.0" fill="rgb(210,180,27)" rx="2" ry="2" />
<text  x="168.48" y="1983.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="493.7" y="1973" width="0.2" height="15.0" fill="rgb(222,207,16)" rx="2" ry="2" />
<text  x="496.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (2 samples, 0.03%)</title><rect x="105.8" y="37" width="0.4" height="15.0" fill="rgb(251,118,46)" rx="2" ry="2" />
<text  x="108.79" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="343.6" y="1781" width="0.2" height="15.0" fill="rgb(212,67,37)" rx="2" ry="2" />
<text  x="346.57" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="565.5" y="1877" width="0.6" height="15.0" fill="rgb(236,199,17)" rx="2" ry="2" />
<text  x="568.49" y="1887.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (2 samples, 0.03%)</title><rect x="682.9" y="1925" width="0.4" height="15.0" fill="rgb(224,207,25)" rx="2" ry="2" />
<text  x="685.90" y="1935.5" ></text>
</g>
<g >
<title>alloc_inode (36 samples, 0.61%)</title><rect x="392.6" y="1925" width="7.1" height="15.0" fill="rgb(210,57,21)" rx="2" ry="2" />
<text  x="395.56" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="62.8" y="1909" width="0.2" height="15.0" fill="rgb(249,174,44)" rx="2" ry="2" />
<text  x="65.75" y="1919.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="213.3" y="1765" width="0.2" height="15.0" fill="rgb(219,32,35)" rx="2" ry="2" />
<text  x="216.28" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="116.1" y="37" width="0.2" height="15.0" fill="rgb(222,70,29)" rx="2" ry="2" />
<text  x="119.10" y="47.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="629" width="17.5" height="15.0" fill="rgb(228,75,31)" rx="2" ry="2" />
<text  x="107.40" y="639.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (30 samples, 0.50%)</title><rect x="784.8" y="1509" width="6.0" height="15.0" fill="rgb(213,112,10)" rx="2" ry="2" />
<text  x="787.83" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="221.6" y="1909" width="1.8" height="15.0" fill="rgb(244,132,33)" rx="2" ry="2" />
<text  x="224.61" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1159.1" y="1941" width="0.2" height="15.0" fill="rgb(231,176,45)" rx="2" ry="2" />
<text  x="1162.06" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1164.2" y="2053" width="0.2" height="15.0" fill="rgb(207,122,49)" rx="2" ry="2" />
<text  x="1167.22" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1012.5" y="1829" width="0.2" height="15.0" fill="rgb(230,88,42)" rx="2" ry="2" />
<text  x="1015.50" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="636.5" y="1957" width="0.8" height="15.0" fill="rgb(218,206,26)" rx="2" ry="2" />
<text  x="639.49" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="951.6" y="1989" width="0.2" height="15.0" fill="rgb(223,116,51)" rx="2" ry="2" />
<text  x="954.62" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="847.9" y="1909" width="0.6" height="15.0" fill="rgb(235,53,52)" rx="2" ry="2" />
<text  x="850.90" y="1919.5" ></text>
</g>
<g >
<title>netdev_pick_tx (8 samples, 0.13%)</title><rect x="297.6" y="1701" width="1.5" height="15.0" fill="rgb(222,8,44)" rx="2" ry="2" />
<text  x="300.56" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1141" width="17.5" height="15.0" fill="rgb(232,208,42)" rx="2" ry="2" />
<text  x="107.40" y="1151.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="1123.4" y="1717" width="0.2" height="15.0" fill="rgb(219,88,23)" rx="2" ry="2" />
<text  x="1126.36" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="457.0" y="1925" width="0.4" height="15.0" fill="rgb(229,188,7)" rx="2" ry="2" />
<text  x="460.01" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="336.6" y="1701" width="0.2" height="15.0" fill="rgb(221,152,21)" rx="2" ry="2" />
<text  x="339.63" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="880.4" y="1957" width="0.6" height="15.0" fill="rgb(228,135,35)" rx="2" ry="2" />
<text  x="883.42" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="935.0" y="1893" width="0.2" height="15.0" fill="rgb(253,204,35)" rx="2" ry="2" />
<text  x="937.96" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="243.8" y="1845" width="0.2" height="15.0" fill="rgb(238,86,25)" rx="2" ry="2" />
<text  x="246.82" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="881.2" y="1909" width="0.4" height="15.0" fill="rgb(228,65,32)" rx="2" ry="2" />
<text  x="884.22" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="657.5" y="1957" width="0.2" height="15.0" fill="rgb(208,196,38)" rx="2" ry="2" />
<text  x="660.51" y="1967.5" ></text>
</g>
<g >
<title>dput.part.26 (62 samples, 1.04%)</title><rect x="722.6" y="1781" width="12.3" height="15.0" fill="rgb(208,85,46)" rx="2" ry="2" />
<text  x="725.56" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.8" y="1893" width="0.1" height="15.0" fill="rgb(212,229,30)" rx="2" ry="2" />
<text  x="844.75" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="271.8" y="1669" width="0.2" height="15.0" fill="rgb(237,178,30)" rx="2" ry="2" />
<text  x="274.78" y="1679.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="103.4" y="1493" width="0.2" height="15.0" fill="rgb(235,187,40)" rx="2" ry="2" />
<text  x="106.41" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="689.8" y="1941" width="0.2" height="15.0" fill="rgb(248,41,30)" rx="2" ry="2" />
<text  x="692.84" y="1951.5" ></text>
</g>
<g >
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="761.6" y="1669" width="0.4" height="15.0" fill="rgb(238,35,38)" rx="2" ry="2" />
<text  x="764.63" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="135.3" y="1845" width="0.2" height="15.0" fill="rgb(225,207,52)" rx="2" ry="2" />
<text  x="138.34" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="926.8" y="1941" width="0.4" height="15.0" fill="rgb(222,178,32)" rx="2" ry="2" />
<text  x="929.83" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="532.0" y="1925" width="0.8" height="15.0" fill="rgb(226,133,18)" rx="2" ry="2" />
<text  x="534.98" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1158.9" y="1621" width="0.2" height="15.0" fill="rgb(226,42,47)" rx="2" ry="2" />
<text  x="1161.86" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="487.2" y="2005" width="0.7" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="490.16" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="879.4" y="1893" width="0.4" height="15.0" fill="rgb(235,206,44)" rx="2" ry="2" />
<text  x="882.43" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="531.8" y="1957" width="1.4" height="15.0" fill="rgb(229,12,16)" rx="2" ry="2" />
<text  x="534.78" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="218.0" y="1877" width="0.2" height="15.0" fill="rgb(219,182,8)" rx="2" ry="2" />
<text  x="221.04" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.9" y="1845" width="0.2" height="15.0" fill="rgb(208,24,16)" rx="2" ry="2" />
<text  x="1067.86" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="668.2" y="1749" width="0.2" height="15.0" fill="rgb(252,134,26)" rx="2" ry="2" />
<text  x="671.22" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="192.9" y="1797" width="0.1" height="15.0" fill="rgb(218,35,38)" rx="2" ry="2" />
<text  x="195.85" y="1807.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="14.0" y="1797" width="0.2" height="15.0" fill="rgb(219,148,46)" rx="2" ry="2" />
<text  x="16.97" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (72 samples, 1.21%)</title><rect x="601.8" y="2021" width="14.3" height="15.0" fill="rgb(215,122,30)" rx="2" ry="2" />
<text  x="604.78" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="912.2" y="1909" width="0.2" height="15.0" fill="rgb(239,89,53)" rx="2" ry="2" />
<text  x="915.15" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1158.9" y="1781" width="0.2" height="15.0" fill="rgb(253,215,48)" rx="2" ry="2" />
<text  x="1161.86" y="1791.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="509.2" y="1925" width="0.2" height="15.0" fill="rgb(212,75,36)" rx="2" ry="2" />
<text  x="512.17" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="377.9" y="1861" width="0.2" height="15.0" fill="rgb(208,54,12)" rx="2" ry="2" />
<text  x="380.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="668.2" y="1637" width="0.2" height="15.0" fill="rgb(213,39,1)" rx="2" ry="2" />
<text  x="671.22" y="1647.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="189.9" y="2021" width="0.4" height="15.0" fill="rgb(231,1,30)" rx="2" ry="2" />
<text  x="192.88" y="2031.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (61 samples, 1.03%)</title><rect x="602.4" y="1989" width="12.1" height="15.0" fill="rgb(221,10,13)" rx="2" ry="2" />
<text  x="605.38" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="360.2" y="1669" width="0.2" height="15.0" fill="rgb(214,135,36)" rx="2" ry="2" />
<text  x="363.23" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="806.5" y="1621" width="0.1" height="15.0" fill="rgb(216,113,41)" rx="2" ry="2" />
<text  x="809.45" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="731.5" y="1669" width="0.8" height="15.0" fill="rgb(214,32,18)" rx="2" ry="2" />
<text  x="734.49" y="1679.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="657.1" y="1797" width="0.2" height="15.0" fill="rgb(210,158,31)" rx="2" ry="2" />
<text  x="660.12" y="1807.5" ></text>
</g>
<g >
<title>security_socket_getsockname (3 samples, 0.05%)</title><rect x="596.8" y="1861" width="0.6" height="15.0" fill="rgb(234,102,32)" rx="2" ry="2" />
<text  x="599.83" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="564.9" y="1845" width="0.2" height="15.0" fill="rgb(244,153,33)" rx="2" ry="2" />
<text  x="567.90" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="627.4" y="1973" width="0.2" height="15.0" fill="rgb(253,136,24)" rx="2" ry="2" />
<text  x="630.37" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="1065.3" y="1893" width="0.6" height="15.0" fill="rgb(250,153,31)" rx="2" ry="2" />
<text  x="1068.26" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="907.0" y="1957" width="0.2" height="15.0" fill="rgb(232,116,22)" rx="2" ry="2" />
<text  x="910.00" y="1967.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (7 samples, 0.12%)</title><rect x="329.7" y="1877" width="1.4" height="15.0" fill="rgb(238,94,10)" rx="2" ry="2" />
<text  x="332.69" y="1887.5" ></text>
</g>
<g >
<title>move_addr_to_user (7 samples, 0.12%)</title><rect x="387.8" y="1957" width="1.4" height="15.0" fill="rgb(245,30,7)" rx="2" ry="2" />
<text  x="390.80" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="956.6" y="2005" width="0.2" height="15.0" fill="rgb(222,95,27)" rx="2" ry="2" />
<text  x="959.58" y="2015.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="17.5" y="2053" width="0.2" height="15.0" fill="rgb(215,196,24)" rx="2" ry="2" />
<text  x="20.54" y="2063.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="579.2" y="1925" width="0.2" height="15.0" fill="rgb(225,12,9)" rx="2" ry="2" />
<text  x="582.18" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="112.3" y="37" width="0.8" height="15.0" fill="rgb(241,153,49)" rx="2" ry="2" />
<text  x="115.33" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="277.7" y="1685" width="0.2" height="15.0" fill="rgb(218,205,46)" rx="2" ry="2" />
<text  x="280.73" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="1139.6" y="2053" width="0.2" height="15.0" fill="rgb(240,147,6)" rx="2" ry="2" />
<text  x="1142.63" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="889.7" y="1989" width="1.2" height="15.0" fill="rgb(249,20,20)" rx="2" ry="2" />
<text  x="892.74" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="1137.6" y="2053" width="0.2" height="15.0" fill="rgb(244,11,53)" rx="2" ry="2" />
<text  x="1140.64" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (5 samples, 0.08%)</title><rect x="575.4" y="1973" width="1.0" height="15.0" fill="rgb(237,1,4)" rx="2" ry="2" />
<text  x="578.41" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.61%)</title><rect x="104.0" y="1621" width="19.0" height="15.0" fill="rgb(225,127,35)" rx="2" ry="2" />
<text  x="107.00" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="271.8" y="1797" width="0.2" height="15.0" fill="rgb(218,227,37)" rx="2" ry="2" />
<text  x="274.78" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="270.2" y="1797" width="1.2" height="15.0" fill="rgb(211,148,34)" rx="2" ry="2" />
<text  x="273.19" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="615.1" y="1973" width="0.6" height="15.0" fill="rgb(248,212,34)" rx="2" ry="2" />
<text  x="618.07" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (92 samples, 1.55%)</title><rect x="967.3" y="2005" width="18.2" height="15.0" fill="rgb(226,137,14)" rx="2" ry="2" />
<text  x="970.29" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (3 samples, 0.05%)</title><rect x="612.1" y="1829" width="0.6" height="15.0" fill="rgb(222,213,27)" rx="2" ry="2" />
<text  x="615.10" y="1839.5" ></text>
</g>
<g >
<title>__update_load_avg_se.isra.38 (1 samples, 0.02%)</title><rect x="942.9" y="1765" width="0.2" height="15.0" fill="rgb(239,69,35)" rx="2" ry="2" />
<text  x="945.89" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="252.5" y="1829" width="0.2" height="15.0" fill="rgb(250,78,5)" rx="2" ry="2" />
<text  x="255.54" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="832.8" y="1909" width="0.2" height="15.0" fill="rgb(245,193,39)" rx="2" ry="2" />
<text  x="835.83" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1022.2" y="2021" width="0.2" height="15.0" fill="rgb(217,183,45)" rx="2" ry="2" />
<text  x="1025.22" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="139.5" y="2005" width="0.6" height="15.0" fill="rgb(233,2,25)" rx="2" ry="2" />
<text  x="142.50" y="2015.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="793.2" y="1605" width="0.2" height="15.0" fill="rgb(232,5,19)" rx="2" ry="2" />
<text  x="796.16" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (24 samples, 0.40%)</title><rect x="979.2" y="1925" width="4.7" height="15.0" fill="rgb(241,4,14)" rx="2" ry="2" />
<text  x="982.19" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="166.5" y="1989" width="0.2" height="15.0" fill="rgb(207,177,46)" rx="2" ry="2" />
<text  x="169.47" y="1999.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (3 samples, 0.05%)</title><rect x="746.4" y="1733" width="0.6" height="15.0" fill="rgb(249,67,44)" rx="2" ry="2" />
<text  x="749.36" y="1743.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="252.5" y="1893" width="1.4" height="15.0" fill="rgb(220,183,33)" rx="2" ry="2" />
<text  x="255.54" y="1903.5" ></text>
</g>
<g >
<title>do_fcntl (6 samples, 0.10%)</title><rect x="563.3" y="1925" width="1.2" height="15.0" fill="rgb(212,120,12)" rx="2" ry="2" />
<text  x="566.31" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="806.5" y="1637" width="0.1" height="15.0" fill="rgb(242,11,18)" rx="2" ry="2" />
<text  x="809.45" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="414.0" y="1829" width="0.2" height="15.0" fill="rgb(240,3,16)" rx="2" ry="2" />
<text  x="416.98" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="413.6" y="2021" width="0.6" height="15.0" fill="rgb(206,8,27)" rx="2" ry="2" />
<text  x="416.58" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="501.8" y="1749" width="0.2" height="15.0" fill="rgb(253,155,36)" rx="2" ry="2" />
<text  x="504.83" y="1759.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="903.6" y="1877" width="0.2" height="15.0" fill="rgb(205,141,45)" rx="2" ry="2" />
<text  x="906.63" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="118.9" y="37" width="0.2" height="15.0" fill="rgb(242,228,38)" rx="2" ry="2" />
<text  x="121.88" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="689.4" y="1733" width="0.2" height="15.0" fill="rgb(222,183,32)" rx="2" ry="2" />
<text  x="692.44" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="564.9" y="1717" width="0.2" height="15.0" fill="rgb(221,138,33)" rx="2" ry="2" />
<text  x="567.90" y="1727.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="510.4" y="2005" width="0.2" height="15.0" fill="rgb(232,126,45)" rx="2" ry="2" />
<text  x="513.36" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="58.2" y="1749" width="0.2" height="15.0" fill="rgb(229,163,28)" rx="2" ry="2" />
<text  x="61.19" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="838.2" y="1925" width="0.2" height="15.0" fill="rgb(225,195,4)" rx="2" ry="2" />
<text  x="841.18" y="1935.5" ></text>
</g>
<g >
<title>accept4 (1 samples, 0.02%)</title><rect x="28.4" y="2005" width="0.2" height="15.0" fill="rgb(218,175,29)" rx="2" ry="2" />
<text  x="31.44" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="771.7" y="1461" width="0.2" height="15.0" fill="rgb(208,116,3)" rx="2" ry="2" />
<text  x="774.74" y="1471.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1023.4" y="2053" width="0.4" height="15.0" fill="rgb(211,35,19)" rx="2" ry="2" />
<text  x="1026.41" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="275.2" y="1845" width="0.2" height="15.0" fill="rgb(213,102,18)" rx="2" ry="2" />
<text  x="278.15" y="1855.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="554.6" y="1813" width="0.2" height="15.0" fill="rgb(228,134,28)" rx="2" ry="2" />
<text  x="557.58" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="942.9" y="1941" width="0.2" height="15.0" fill="rgb(229,16,46)" rx="2" ry="2" />
<text  x="945.89" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="34.0" y="1957" width="0.2" height="15.0" fill="rgb(215,15,34)" rx="2" ry="2" />
<text  x="37.00" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="995.3" y="1989" width="0.1" height="15.0" fill="rgb(225,148,52)" rx="2" ry="2" />
<text  x="998.25" y="1999.5" ></text>
</g>
<g >
<title>@plt (1 samples, 0.02%)</title><rect x="189.7" y="2021" width="0.2" height="15.0" fill="rgb(239,47,5)" rx="2" ry="2" />
<text  x="192.68" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="529.6" y="1973" width="0.2" height="15.0" fill="rgb(222,103,42)" rx="2" ry="2" />
<text  x="532.60" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="866.9" y="1781" width="0.2" height="15.0" fill="rgb(228,158,54)" rx="2" ry="2" />
<text  x="869.94" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="526.0" y="1989" width="1.0" height="15.0" fill="rgb(236,164,2)" rx="2" ry="2" />
<text  x="529.03" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="10.4" y="1829" width="0.2" height="15.0" fill="rgb(227,97,46)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="412.8" y="1957" width="0.2" height="15.0" fill="rgb(231,208,5)" rx="2" ry="2" />
<text  x="415.79" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="866.9" y="1637" width="0.2" height="15.0" fill="rgb(250,161,1)" rx="2" ry="2" />
<text  x="869.94" y="1647.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="882.4" y="1941" width="0.2" height="15.0" fill="rgb(253,86,10)" rx="2" ry="2" />
<text  x="885.41" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="333.5" y="1845" width="0.2" height="15.0" fill="rgb(248,160,20)" rx="2" ry="2" />
<text  x="336.46" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="845.5" y="1877" width="0.2" height="15.0" fill="rgb(250,59,25)" rx="2" ry="2" />
<text  x="848.52" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="658.1" y="1925" width="0.2" height="15.0" fill="rgb(236,157,5)" rx="2" ry="2" />
<text  x="661.11" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="114.9" y="37" width="1.0" height="15.0" fill="rgb(236,21,42)" rx="2" ry="2" />
<text  x="117.91" y="47.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (2 samples, 0.03%)</title><rect x="165.1" y="1989" width="0.4" height="15.0" fill="rgb(253,145,18)" rx="2" ry="2" />
<text  x="168.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="893.7" y="1989" width="0.8" height="15.0" fill="rgb(248,202,53)" rx="2" ry="2" />
<text  x="896.71" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="571.8" y="1941" width="0.2" height="15.0" fill="rgb(213,86,54)" rx="2" ry="2" />
<text  x="574.84" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (5 samples, 0.08%)</title><rect x="569.3" y="1973" width="1.0" height="15.0" fill="rgb(224,192,23)" rx="2" ry="2" />
<text  x="572.26" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 0.07%)</title><rect x="1083.3" y="1893" width="0.8" height="15.0" fill="rgb(240,91,25)" rx="2" ry="2" />
<text  x="1086.30" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="335.6" y="1701" width="0.2" height="15.0" fill="rgb(231,209,31)" rx="2" ry="2" />
<text  x="338.64" y="1711.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="689.4" y="1589" width="0.2" height="15.0" fill="rgb(232,32,18)" rx="2" ry="2" />
<text  x="692.44" y="1599.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="577.0" y="1989" width="0.2" height="15.0" fill="rgb(222,78,22)" rx="2" ry="2" />
<text  x="579.99" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1285" width="17.7" height="15.0" fill="rgb(221,53,36)" rx="2" ry="2" />
<text  x="107.40" y="1295.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="411.8" y="1957" width="1.0" height="15.0" fill="rgb(222,97,52)" rx="2" ry="2" />
<text  x="414.79" y="1967.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.6" y="1909" width="0.2" height="15.0" fill="rgb(225,19,4)" rx="2" ry="2" />
<text  x="106.61" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="213.3" y="1813" width="0.2" height="15.0" fill="rgb(229,200,9)" rx="2" ry="2" />
<text  x="216.28" y="1823.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1122.8" y="1989" width="0.4" height="15.0" fill="rgb(254,154,22)" rx="2" ry="2" />
<text  x="1125.77" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="271.8" y="1781" width="0.2" height="15.0" fill="rgb(252,46,47)" rx="2" ry="2" />
<text  x="274.78" y="1791.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="37.2" y="1957" width="0.4" height="15.0" fill="rgb(229,122,28)" rx="2" ry="2" />
<text  x="40.17" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (188 samples, 3.16%)</title><rect x="907.0" y="2037" width="37.3" height="15.0" fill="rgb(219,228,48)" rx="2" ry="2" />
<text  x="910.00" y="2047.5" >fac..</text>
</g>
<g >
<title>[unknown] (80 samples, 1.34%)</title><rect x="104.4" y="85" width="15.9" height="15.0" fill="rgb(206,38,48)" rx="2" ry="2" />
<text  x="107.40" y="95.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="870.5" y="1909" width="0.2" height="15.0" fill="rgb(217,36,27)" rx="2" ry="2" />
<text  x="873.51" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="881.4" y="1893" width="0.2" height="15.0" fill="rgb(220,53,42)" rx="2" ry="2" />
<text  x="884.42" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="289.2" y="1477" width="0.2" height="15.0" fill="rgb(237,215,27)" rx="2" ry="2" />
<text  x="292.23" y="1487.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="214.3" y="1877" width="0.2" height="15.0" fill="rgb(216,213,43)" rx="2" ry="2" />
<text  x="217.27" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="142.7" y="1925" width="0.2" height="15.0" fill="rgb(215,88,9)" rx="2" ry="2" />
<text  x="145.68" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="380.5" y="1909" width="0.6" height="15.0" fill="rgb(227,166,53)" rx="2" ry="2" />
<text  x="383.46" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (7 samples, 0.12%)</title><rect x="1112.7" y="1925" width="1.3" height="15.0" fill="rgb(236,139,51)" rx="2" ry="2" />
<text  x="1115.66" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="866.9" y="1749" width="0.2" height="15.0" fill="rgb(206,91,20)" rx="2" ry="2" />
<text  x="869.94" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="66.9" y="1877" width="0.4" height="15.0" fill="rgb(228,114,31)" rx="2" ry="2" />
<text  x="69.92" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="702.3" y="1973" width="0.2" height="15.0" fill="rgb(248,195,33)" rx="2" ry="2" />
<text  x="705.33" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (1 samples, 0.02%)</title><rect x="892.9" y="2037" width="0.2" height="15.0" fill="rgb(249,27,32)" rx="2" ry="2" />
<text  x="895.92" y="2047.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="646.2" y="1797" width="0.2" height="15.0" fill="rgb(229,82,5)" rx="2" ry="2" />
<text  x="649.21" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1172.2" y="1941" width="0.1" height="15.0" fill="rgb(218,181,38)" rx="2" ry="2" />
<text  x="1175.15" y="1951.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="827.1" y="1589" width="0.2" height="15.0" fill="rgb(223,178,53)" rx="2" ry="2" />
<text  x="830.08" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="32.8" y="1973" width="0.2" height="15.0" fill="rgb(221,150,38)" rx="2" ry="2" />
<text  x="35.81" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="80.4" y="1941" width="0.6" height="15.0" fill="rgb(235,56,50)" rx="2" ry="2" />
<text  x="83.40" y="1951.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (2 samples, 0.03%)</title><rect x="959.8" y="2037" width="0.3" height="15.0" fill="rgb(207,173,34)" rx="2" ry="2" />
<text  x="962.75" y="2047.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="615.5" y="1941" width="0.2" height="15.0" fill="rgb(251,136,29)" rx="2" ry="2" />
<text  x="618.47" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="167.9" y="1893" width="0.2" height="15.0" fill="rgb(233,13,40)" rx="2" ry="2" />
<text  x="170.86" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (25 samples, 0.42%)</title><rect x="300.3" y="1685" width="5.0" height="15.0" fill="rgb(230,141,49)" rx="2" ry="2" />
<text  x="303.34" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="389.2" y="1749" width="0.2" height="15.0" fill="rgb(215,144,25)" rx="2" ry="2" />
<text  x="392.19" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.9" y="1877" width="0.2" height="15.0" fill="rgb(218,140,15)" rx="2" ry="2" />
<text  x="547.87" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (23 samples, 0.39%)</title><rect x="1117.8" y="1941" width="4.6" height="15.0" fill="rgb(250,182,0)" rx="2" ry="2" />
<text  x="1120.81" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="172.6" y="1957" width="1.4" height="15.0" fill="rgb(228,161,48)" rx="2" ry="2" />
<text  x="175.62" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1123.4" y="1813" width="0.2" height="15.0" fill="rgb(223,149,34)" rx="2" ry="2" />
<text  x="1126.36" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="482.6" y="1861" width="0.2" height="15.0" fill="rgb(220,116,45)" rx="2" ry="2" />
<text  x="485.59" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1158.9" y="1669" width="0.2" height="15.0" fill="rgb(247,169,42)" rx="2" ry="2" />
<text  x="1161.86" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="333.5" y="1637" width="0.2" height="15.0" fill="rgb(220,146,51)" rx="2" ry="2" />
<text  x="336.46" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="935.0" y="1973" width="0.2" height="15.0" fill="rgb(252,140,41)" rx="2" ry="2" />
<text  x="937.96" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="163.1" y="2021" width="0.4" height="15.0" fill="rgb(239,57,38)" rx="2" ry="2" />
<text  x="166.10" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="516.3" y="1941" width="0.6" height="15.0" fill="rgb(249,206,31)" rx="2" ry="2" />
<text  x="519.31" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="414.0" y="1637" width="0.2" height="15.0" fill="rgb(221,13,45)" rx="2" ry="2" />
<text  x="416.98" y="1647.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (64 samples, 1.08%)</title><rect x="1100.0" y="1893" width="12.7" height="15.0" fill="rgb(215,41,6)" rx="2" ry="2" />
<text  x="1102.96" y="1903.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="480.6" y="1909" width="0.2" height="15.0" fill="rgb(218,66,7)" rx="2" ry="2" />
<text  x="483.61" y="1919.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="260.7" y="1861" width="0.6" height="15.0" fill="rgb(205,44,3)" rx="2" ry="2" />
<text  x="263.68" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="250.8" y="1909" width="0.2" height="15.0" fill="rgb(220,110,45)" rx="2" ry="2" />
<text  x="253.76" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="879.8" y="1925" width="0.6" height="15.0" fill="rgb(248,82,20)" rx="2" ry="2" />
<text  x="882.83" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="848.1" y="1813" width="0.2" height="15.0" fill="rgb(254,218,18)" rx="2" ry="2" />
<text  x="851.10" y="1823.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (15 samples, 0.25%)</title><rect x="64.7" y="1941" width="3.0" height="15.0" fill="rgb(211,191,27)" rx="2" ry="2" />
<text  x="67.74" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (1 samples, 0.02%)</title><rect x="946.9" y="2037" width="0.2" height="15.0" fill="rgb(223,195,41)" rx="2" ry="2" />
<text  x="949.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="229" width="17.5" height="15.0" fill="rgb(216,76,17)" rx="2" ry="2" />
<text  x="107.40" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="761.4" y="1573" width="0.2" height="15.0" fill="rgb(253,23,19)" rx="2" ry="2" />
<text  x="764.43" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="289.0" y="1717" width="0.4" height="15.0" fill="rgb(251,106,22)" rx="2" ry="2" />
<text  x="292.04" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="42.1" y="2005" width="0.2" height="15.0" fill="rgb(214,137,36)" rx="2" ry="2" />
<text  x="45.13" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="179.8" y="1973" width="0.2" height="15.0" fill="rgb(253,73,16)" rx="2" ry="2" />
<text  x="182.76" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="169.1" y="2021" width="0.2" height="15.0" fill="rgb(228,21,18)" rx="2" ry="2" />
<text  x="172.05" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="564.9" y="1781" width="0.2" height="15.0" fill="rgb(241,51,49)" rx="2" ry="2" />
<text  x="567.90" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="951.6" y="2037" width="0.2" height="15.0" fill="rgb(230,62,52)" rx="2" ry="2" />
<text  x="954.62" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="136.5" y="1941" width="0.2" height="15.0" fill="rgb(215,134,0)" rx="2" ry="2" />
<text  x="139.53" y="1951.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="579.2" y="1877" width="0.2" height="15.0" fill="rgb(225,107,33)" rx="2" ry="2" />
<text  x="582.18" y="1887.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="87.5" y="1941" width="0.4" height="15.0" fill="rgb(217,161,1)" rx="2" ry="2" />
<text  x="90.54" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="167.9" y="1749" width="0.2" height="15.0" fill="rgb(226,27,16)" rx="2" ry="2" />
<text  x="170.86" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="403.3" y="1717" width="0.2" height="15.0" fill="rgb(233,81,22)" rx="2" ry="2" />
<text  x="406.27" y="1727.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="126.8" y="1909" width="0.2" height="15.0" fill="rgb(218,59,33)" rx="2" ry="2" />
<text  x="129.81" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="572.4" y="1957" width="0.2" height="15.0" fill="rgb(208,156,32)" rx="2" ry="2" />
<text  x="575.43" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="59.6" y="1861" width="0.2" height="15.0" fill="rgb(249,32,35)" rx="2" ry="2" />
<text  x="62.58" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="277.7" y="1797" width="0.2" height="15.0" fill="rgb(220,151,33)" rx="2" ry="2" />
<text  x="280.73" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="45.7" y="1989" width="0.2" height="15.0" fill="rgb(207,44,17)" rx="2" ry="2" />
<text  x="48.70" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (5 samples, 0.08%)</title><rect x="846.5" y="1845" width="1.0" height="15.0" fill="rgb(243,106,47)" rx="2" ry="2" />
<text  x="849.51" y="1855.5" ></text>
</g>
<g >
<title>__fget_light (27 samples, 0.45%)</title><rect x="452.1" y="1957" width="5.3" height="15.0" fill="rgb(232,172,23)" rx="2" ry="2" />
<text  x="455.05" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (6 samples, 0.10%)</title><rect x="83.4" y="1941" width="1.2" height="15.0" fill="rgb(233,16,4)" rx="2" ry="2" />
<text  x="86.38" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="390.2" y="1941" width="0.2" height="15.0" fill="rgb(223,99,31)" rx="2" ry="2" />
<text  x="393.18" y="1951.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.02%)</title><rect x="729.7" y="1621" width="0.2" height="15.0" fill="rgb(223,30,1)" rx="2" ry="2" />
<text  x="732.70" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="973.4" y="1973" width="0.2" height="15.0" fill="rgb(207,58,12)" rx="2" ry="2" />
<text  x="976.44" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="977.6" y="1893" width="0.4" height="15.0" fill="rgb(222,159,4)" rx="2" ry="2" />
<text  x="980.60" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="657.1" y="1909" width="0.2" height="15.0" fill="rgb(207,139,32)" rx="2" ry="2" />
<text  x="660.12" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="219.2" y="1797" width="0.2" height="15.0" fill="rgb(214,112,36)" rx="2" ry="2" />
<text  x="222.23" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1180.7" y="1989" width="0.2" height="15.0" fill="rgb(234,85,18)" rx="2" ry="2" />
<text  x="1183.68" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="906.0" y="2021" width="0.4" height="15.0" fill="rgb(247,156,48)" rx="2" ry="2" />
<text  x="909.01" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="827.1" y="1781" width="0.2" height="15.0" fill="rgb(248,165,51)" rx="2" ry="2" />
<text  x="830.08" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="457.0" y="1813" width="0.4" height="15.0" fill="rgb(238,122,4)" rx="2" ry="2" />
<text  x="460.01" y="1823.5" ></text>
</g>
<g >
<title>sys_futex (14 samples, 0.24%)</title><rect x="14.8" y="2005" width="2.7" height="15.0" fill="rgb(243,39,46)" rx="2" ry="2" />
<text  x="17.76" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.6" y="2021" width="0.2" height="15.0" fill="rgb(226,176,3)" rx="2" ry="2" />
<text  x="17.56" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1123.2" y="2037" width="0.4" height="15.0" fill="rgb(237,176,18)" rx="2" ry="2" />
<text  x="1126.17" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="866.9" y="1797" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="869.94" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.03%)</title><rect x="186.9" y="2021" width="0.4" height="15.0" fill="rgb(250,2,39)" rx="2" ry="2" />
<text  x="189.90" y="2031.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (14 samples, 0.24%)</title><rect x="292.6" y="1717" width="2.8" height="15.0" fill="rgb(238,49,48)" rx="2" ry="2" />
<text  x="295.61" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (78 samples, 1.31%)</title><rect x="1146.8" y="2053" width="15.4" height="15.0" fill="rgb(220,114,50)" rx="2" ry="2" />
<text  x="1149.77" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="243.6" y="1925" width="0.4" height="15.0" fill="rgb(233,63,46)" rx="2" ry="2" />
<text  x="246.62" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="165.5" y="1989" width="0.2" height="15.0" fill="rgb(252,181,1)" rx="2" ry="2" />
<text  x="168.48" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.0" y="1605" width="0.2" height="15.0" fill="rgb(232,124,31)" rx="2" ry="2" />
<text  x="126.04" y="1615.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="875.9" y="1925" width="0.4" height="15.0" fill="rgb(231,136,4)" rx="2" ry="2" />
<text  x="878.86" y="1935.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="597.6" y="1845" width="1.0" height="15.0" fill="rgb(248,57,2)" rx="2" ry="2" />
<text  x="600.62" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="378.1" y="1781" width="0.2" height="15.0" fill="rgb(211,148,3)" rx="2" ry="2" />
<text  x="381.08" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="822.5" y="1813" width="0.2" height="15.0" fill="rgb(253,192,37)" rx="2" ry="2" />
<text  x="825.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.66%)</title><rect x="104.0" y="1717" width="19.6" height="15.0" fill="rgb(211,45,27)" rx="2" ry="2" />
<text  x="107.00" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="572.4" y="1973" width="0.2" height="15.0" fill="rgb(243,215,27)" rx="2" ry="2" />
<text  x="575.43" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="694.0" y="1957" width="0.2" height="15.0" fill="rgb(237,158,16)" rx="2" ry="2" />
<text  x="697.00" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="321.0" y="1589" width="0.2" height="15.0" fill="rgb(240,162,43)" rx="2" ry="2" />
<text  x="323.96" y="1599.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (54 samples, 0.91%)</title><rect x="603.6" y="1957" width="10.7" height="15.0" fill="rgb(209,38,20)" rx="2" ry="2" />
<text  x="606.57" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="186.7" y="1797" width="0.2" height="15.0" fill="rgb(227,170,19)" rx="2" ry="2" />
<text  x="189.70" y="1807.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="991.9" y="1909" width="0.2" height="15.0" fill="rgb(248,107,29)" rx="2" ry="2" />
<text  x="994.88" y="1919.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1109.9" y="1477" width="0.4" height="15.0" fill="rgb(211,51,21)" rx="2" ry="2" />
<text  x="1112.88" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="328.3" y="1605" width="0.2" height="15.0" fill="rgb(224,121,34)" rx="2" ry="2" />
<text  x="331.30" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="319.2" y="1605" width="0.2" height="15.0" fill="rgb(238,132,47)" rx="2" ry="2" />
<text  x="322.18" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="289.2" y="1557" width="0.2" height="15.0" fill="rgb(216,210,36)" rx="2" ry="2" />
<text  x="292.23" y="1567.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="344.2" y="1861" width="0.6" height="15.0" fill="rgb(230,13,41)" rx="2" ry="2" />
<text  x="347.17" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="389.2" y="1877" width="0.2" height="15.0" fill="rgb(235,147,39)" rx="2" ry="2" />
<text  x="392.19" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="646.4" y="2037" width="0.2" height="15.0" fill="rgb(233,120,40)" rx="2" ry="2" />
<text  x="649.41" y="2047.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.03%)</title><rect x="294.8" y="1349" width="0.4" height="15.0" fill="rgb(207,88,4)" rx="2" ry="2" />
<text  x="297.79" y="1359.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="378.1" y="1685" width="0.2" height="15.0" fill="rgb(208,10,28)" rx="2" ry="2" />
<text  x="381.08" y="1695.5" ></text>
</g>
<g >
<title>all (5,950 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(237,2,18)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="282.3" y="1829" width="0.2" height="15.0" fill="rgb(239,6,17)" rx="2" ry="2" />
<text  x="285.29" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="650.2" y="1941" width="0.2" height="15.0" fill="rgb(219,224,23)" rx="2" ry="2" />
<text  x="653.17" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (3 samples, 0.05%)</title><rect x="960.7" y="2037" width="0.6" height="15.0" fill="rgb(218,3,26)" rx="2" ry="2" />
<text  x="963.74" y="2047.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="849.3" y="1941" width="0.2" height="15.0" fill="rgb(254,117,17)" rx="2" ry="2" />
<text  x="852.29" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (12 samples, 0.20%)</title><rect x="15.2" y="1861" width="2.3" height="15.0" fill="rgb(231,123,41)" rx="2" ry="2" />
<text  x="18.16" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="646.2" y="1973" width="0.2" height="15.0" fill="rgb(217,16,3)" rx="2" ry="2" />
<text  x="649.21" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="561.7" y="1685" width="0.2" height="15.0" fill="rgb(222,26,31)" rx="2" ry="2" />
<text  x="564.72" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="894.9" y="1989" width="0.2" height="15.0" fill="rgb(227,69,28)" rx="2" ry="2" />
<text  x="897.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.85%)</title><rect x="103.8" y="1861" width="21.8" height="15.0" fill="rgb(215,161,11)" rx="2" ry="2" />
<text  x="106.81" y="1871.5" >[..</text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (1 samples, 0.02%)</title><rect x="73.9" y="1957" width="0.2" height="15.0" fill="rgb(230,227,54)" rx="2" ry="2" />
<text  x="76.86" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="83.6" y="1925" width="0.2" height="15.0" fill="rgb(228,174,24)" rx="2" ry="2" />
<text  x="86.58" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (18 samples, 0.30%)</title><rect x="268.6" y="1845" width="3.6" height="15.0" fill="rgb(254,19,29)" rx="2" ry="2" />
<text  x="271.61" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="561.7" y="1717" width="0.2" height="15.0" fill="rgb(230,110,20)" rx="2" ry="2" />
<text  x="564.72" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="103.4" y="1861" width="0.2" height="15.0" fill="rgb(227,139,8)" rx="2" ry="2" />
<text  x="106.41" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1143.0" y="1909" width="0.2" height="15.0" fill="rgb(217,204,1)" rx="2" ry="2" />
<text  x="1146.00" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="402.9" y="1845" width="0.2" height="15.0" fill="rgb(244,206,36)" rx="2" ry="2" />
<text  x="405.87" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="144.3" y="1925" width="0.2" height="15.0" fill="rgb(216,95,21)" rx="2" ry="2" />
<text  x="147.26" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="382.0" y="1893" width="1.0" height="15.0" fill="rgb(215,86,32)" rx="2" ry="2" />
<text  x="385.05" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (96 samples, 1.61%)</title><rect x="1061.3" y="1925" width="19.0" height="15.0" fill="rgb(249,96,15)" rx="2" ry="2" />
<text  x="1064.29" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="403.3" y="1765" width="0.2" height="15.0" fill="rgb(216,45,0)" rx="2" ry="2" />
<text  x="406.27" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="668.2" y="1765" width="0.2" height="15.0" fill="rgb(226,5,41)" rx="2" ry="2" />
<text  x="671.22" y="1775.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="83.4" y="1925" width="0.2" height="15.0" fill="rgb(231,157,47)" rx="2" ry="2" />
<text  x="86.38" y="1935.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="579.4" y="1989" width="0.2" height="15.0" fill="rgb(222,178,46)" rx="2" ry="2" />
<text  x="582.37" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="655.9" y="1861" width="0.2" height="15.0" fill="rgb(224,33,45)" rx="2" ry="2" />
<text  x="658.93" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="526.8" y="1973" width="0.2" height="15.0" fill="rgb(250,126,39)" rx="2" ry="2" />
<text  x="529.82" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="264.4" y="1685" width="0.2" height="15.0" fill="rgb(216,37,9)" rx="2" ry="2" />
<text  x="267.44" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="219.8" y="1765" width="0.2" height="15.0" fill="rgb(212,28,21)" rx="2" ry="2" />
<text  x="222.82" y="1775.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="644.2" y="1685" width="0.2" height="15.0" fill="rgb(235,79,8)" rx="2" ry="2" />
<text  x="647.23" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="167.9" y="1845" width="0.2" height="15.0" fill="rgb(236,148,23)" rx="2" ry="2" />
<text  x="170.86" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="874.7" y="1941" width="0.4" height="15.0" fill="rgb(217,93,54)" rx="2" ry="2" />
<text  x="877.67" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="224.8" y="1941" width="0.2" height="15.0" fill="rgb(248,8,51)" rx="2" ry="2" />
<text  x="227.78" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="549.2" y="1493" width="0.2" height="15.0" fill="rgb(225,157,11)" rx="2" ry="2" />
<text  x="552.23" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="343.6" y="1957" width="0.2" height="15.0" fill="rgb(216,104,22)" rx="2" ry="2" />
<text  x="346.57" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="677" width="17.5" height="15.0" fill="rgb(209,192,0)" rx="2" ry="2" />
<text  x="107.40" y="687.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (2 samples, 0.03%)</title><rect x="883.4" y="2005" width="0.4" height="15.0" fill="rgb(232,76,10)" rx="2" ry="2" />
<text  x="886.40" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="620.6" y="1989" width="0.4" height="15.0" fill="rgb(249,100,31)" rx="2" ry="2" />
<text  x="623.63" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="875.1" y="1909" width="0.2" height="15.0" fill="rgb(232,21,48)" rx="2" ry="2" />
<text  x="878.07" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1096.8" y="1829" width="0.2" height="15.0" fill="rgb(236,50,18)" rx="2" ry="2" />
<text  x="1099.79" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (16 samples, 0.27%)</title><rect x="229.7" y="2021" width="3.2" height="15.0" fill="rgb(219,228,44)" rx="2" ry="2" />
<text  x="232.74" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="549.2" y="1557" width="0.2" height="15.0" fill="rgb(236,164,32)" rx="2" ry="2" />
<text  x="552.23" y="1567.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="18.3" y="1829" width="0.2" height="15.0" fill="rgb(252,131,41)" rx="2" ry="2" />
<text  x="21.33" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="655.9" y="1925" width="0.2" height="15.0" fill="rgb(234,175,16)" rx="2" ry="2" />
<text  x="658.93" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (6 samples, 0.10%)</title><rect x="1000.2" y="2005" width="1.2" height="15.0" fill="rgb(240,94,7)" rx="2" ry="2" />
<text  x="1003.21" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="945.7" y="1989" width="0.2" height="15.0" fill="rgb(207,125,9)" rx="2" ry="2" />
<text  x="948.67" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="520.7" y="1941" width="0.2" height="15.0" fill="rgb(207,7,47)" rx="2" ry="2" />
<text  x="523.67" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (5 samples, 0.08%)</title><rect x="616.5" y="2005" width="1.0" height="15.0" fill="rgb(206,212,7)" rx="2" ry="2" />
<text  x="619.46" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="913.5" y="1925" width="0.8" height="15.0" fill="rgb(227,187,29)" rx="2" ry="2" />
<text  x="916.54" y="1935.5" ></text>
</g>
<g >
<title>skb_release_data (31 samples, 0.52%)</title><rect x="1103.7" y="1477" width="6.2" height="15.0" fill="rgb(221,118,7)" rx="2" ry="2" />
<text  x="1106.73" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (12 samples, 0.20%)</title><rect x="618.2" y="2037" width="2.4" height="15.0" fill="rgb(254,219,39)" rx="2" ry="2" />
<text  x="621.25" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="213.9" y="1861" width="0.2" height="15.0" fill="rgb(231,133,18)" rx="2" ry="2" />
<text  x="216.87" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="58.2" y="1797" width="0.2" height="15.0" fill="rgb(227,7,6)" rx="2" ry="2" />
<text  x="61.19" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="632.7" y="1909" width="0.4" height="15.0" fill="rgb(253,210,15)" rx="2" ry="2" />
<text  x="635.72" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="62.4" y="1925" width="1.3" height="15.0" fill="rgb(238,181,13)" rx="2" ry="2" />
<text  x="65.36" y="1935.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="411.8" y="1909" width="1.0" height="15.0" fill="rgb(205,169,6)" rx="2" ry="2" />
<text  x="414.79" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1006.2" y="1861" width="0.2" height="15.0" fill="rgb(214,35,13)" rx="2" ry="2" />
<text  x="1009.16" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="771.7" y="1541" width="0.2" height="15.0" fill="rgb(209,224,16)" rx="2" ry="2" />
<text  x="774.74" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (743 samples, 12.49%)</title><rect x="703.7" y="1973" width="147.4" height="15.0" fill="rgb(252,40,48)" rx="2" ry="2" />
<text  x="706.72" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>_atomic_dec_and_lock (5 samples, 0.08%)</title><rect x="725.7" y="1717" width="1.0" height="15.0" fill="rgb(228,82,34)" rx="2" ry="2" />
<text  x="728.73" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="552.6" y="1941" width="0.2" height="15.0" fill="rgb(220,1,7)" rx="2" ry="2" />
<text  x="555.60" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="116.3" y="37" width="0.8" height="15.0" fill="rgb(253,139,17)" rx="2" ry="2" />
<text  x="119.30" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="702.1" y="1845" width="0.2" height="15.0" fill="rgb(221,81,0)" rx="2" ry="2" />
<text  x="705.13" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="584.9" y="1893" width="0.2" height="15.0" fill="rgb(209,33,46)" rx="2" ry="2" />
<text  x="587.93" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="516.7" y="1909" width="0.2" height="15.0" fill="rgb(235,188,43)" rx="2" ry="2" />
<text  x="519.71" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="66.9" y="1861" width="0.4" height="15.0" fill="rgb(238,174,9)" rx="2" ry="2" />
<text  x="69.92" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.30%)</title><rect x="610.1" y="1893" width="3.6" height="15.0" fill="rgb(241,129,51)" rx="2" ry="2" />
<text  x="613.11" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="103.4" y="1733" width="0.2" height="15.0" fill="rgb(225,70,27)" rx="2" ry="2" />
<text  x="106.41" y="1743.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="771.7" y="1589" width="0.2" height="15.0" fill="rgb(253,163,47)" rx="2" ry="2" />
<text  x="774.74" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (5 samples, 0.08%)</title><rect x="1083.1" y="1909" width="1.0" height="15.0" fill="rgb(210,14,2)" rx="2" ry="2" />
<text  x="1086.11" y="1919.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="130.8" y="2005" width="0.2" height="15.0" fill="rgb(223,181,39)" rx="2" ry="2" />
<text  x="133.78" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="889.5" y="1989" width="0.2" height="15.0" fill="rgb(213,166,13)" rx="2" ry="2" />
<text  x="892.55" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="845.9" y="1813" width="0.2" height="15.0" fill="rgb(211,180,35)" rx="2" ry="2" />
<text  x="848.92" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="549.2" y="1717" width="0.2" height="15.0" fill="rgb(206,23,22)" rx="2" ry="2" />
<text  x="552.23" y="1727.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (1 samples, 0.02%)</title><rect x="571.4" y="2005" width="0.2" height="15.0" fill="rgb(217,112,18)" rx="2" ry="2" />
<text  x="574.44" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (3 samples, 0.05%)</title><rect x="465.9" y="1893" width="0.6" height="15.0" fill="rgb(213,112,34)" rx="2" ry="2" />
<text  x="468.94" y="1903.5" ></text>
</g>
<g >
<title>__close (620 samples, 10.42%)</title><rect x="708.5" y="1909" width="122.9" height="15.0" fill="rgb(221,127,46)" rx="2" ry="2" />
<text  x="711.48" y="1919.5" >__close</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="456.8" y="1893" width="0.2" height="15.0" fill="rgb(248,188,24)" rx="2" ry="2" />
<text  x="459.81" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="544.9" y="1909" width="0.4" height="15.0" fill="rgb(218,61,5)" rx="2" ry="2" />
<text  x="547.87" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="14.0" y="1813" width="0.2" height="15.0" fill="rgb(216,112,46)" rx="2" ry="2" />
<text  x="16.97" y="1823.5" ></text>
</g>
<g >
<title>sys_epoll_wait (79 samples, 1.33%)</title><rect x="493.7" y="1989" width="15.7" height="15.0" fill="rgb(246,188,3)" rx="2" ry="2" />
<text  x="496.70" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="834.8" y="1909" width="0.8" height="15.0" fill="rgb(209,209,19)" rx="2" ry="2" />
<text  x="837.81" y="1919.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="532.4" y="1877" width="0.2" height="15.0" fill="rgb(213,78,21)" rx="2" ry="2" />
<text  x="535.37" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="333.5" y="1749" width="0.2" height="15.0" fill="rgb(241,116,18)" rx="2" ry="2" />
<text  x="336.46" y="1759.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1023.8" y="1941" width="0.2" height="15.0" fill="rgb(241,190,35)" rx="2" ry="2" />
<text  x="1026.81" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="365.4" y="1621" width="0.2" height="15.0" fill="rgb(213,118,21)" rx="2" ry="2" />
<text  x="368.39" y="1631.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="655.5" y="1973" width="0.6" height="15.0" fill="rgb(207,106,41)" rx="2" ry="2" />
<text  x="658.53" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="875.1" y="1701" width="0.2" height="15.0" fill="rgb(224,223,38)" rx="2" ry="2" />
<text  x="878.07" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (5 samples, 0.08%)</title><rect x="75.6" y="1941" width="1.0" height="15.0" fill="rgb(226,121,26)" rx="2" ry="2" />
<text  x="78.64" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="365.4" y="1845" width="0.2" height="15.0" fill="rgb(234,64,24)" rx="2" ry="2" />
<text  x="368.39" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="501.8" y="1829" width="0.2" height="15.0" fill="rgb(226,33,36)" rx="2" ry="2" />
<text  x="504.83" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="1014.9" y="2037" width="0.4" height="15.0" fill="rgb(223,62,49)" rx="2" ry="2" />
<text  x="1017.88" y="2047.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="222.6" y="1893" width="0.2" height="15.0" fill="rgb(246,99,0)" rx="2" ry="2" />
<text  x="225.60" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1123.4" y="2005" width="0.2" height="15.0" fill="rgb(207,42,31)" rx="2" ry="2" />
<text  x="1126.36" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="32.8" y="1829" width="0.2" height="15.0" fill="rgb(219,202,11)" rx="2" ry="2" />
<text  x="35.81" y="1839.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="1132.9" y="2053" width="0.2" height="15.0" fill="rgb(244,43,32)" rx="2" ry="2" />
<text  x="1135.88" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="771.7" y="1525" width="0.2" height="15.0" fill="rgb(228,151,11)" rx="2" ry="2" />
<text  x="774.74" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="59.2" y="1925" width="0.6" height="15.0" fill="rgb(227,17,15)" rx="2" ry="2" />
<text  x="62.18" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1132.1" y="2037" width="0.2" height="15.0" fill="rgb(252,66,6)" rx="2" ry="2" />
<text  x="1135.09" y="2047.5" ></text>
</g>
<g >
<title>SYSC_getpeername (19 samples, 0.32%)</title><rect x="664.5" y="1877" width="3.7" height="15.0" fill="rgb(236,177,0)" rx="2" ry="2" />
<text  x="667.45" y="1887.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="701.5" y="1813" width="0.2" height="15.0" fill="rgb(222,95,47)" rx="2" ry="2" />
<text  x="704.54" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (3 samples, 0.05%)</title><rect x="697.2" y="2037" width="0.6" height="15.0" fill="rgb(241,160,36)" rx="2" ry="2" />
<text  x="700.18" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="784.6" y="1509" width="0.2" height="15.0" fill="rgb(250,209,8)" rx="2" ry="2" />
<text  x="787.64" y="1519.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="729.9" y="1669" width="0.2" height="15.0" fill="rgb(221,174,33)" rx="2" ry="2" />
<text  x="732.90" y="1679.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="942.9" y="1893" width="0.2" height="15.0" fill="rgb(224,38,4)" rx="2" ry="2" />
<text  x="945.89" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="403.3" y="1909" width="0.2" height="15.0" fill="rgb(227,137,25)" rx="2" ry="2" />
<text  x="406.27" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="76.8" y="1941" width="0.2" height="15.0" fill="rgb(207,16,29)" rx="2" ry="2" />
<text  x="79.83" y="1951.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="990.5" y="1861" width="0.8" height="15.0" fill="rgb(246,109,53)" rx="2" ry="2" />
<text  x="993.49" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1158.9" y="1557" width="0.2" height="15.0" fill="rgb(246,80,39)" rx="2" ry="2" />
<text  x="1161.86" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="243.8" y="1733" width="0.2" height="15.0" fill="rgb(222,3,15)" rx="2" ry="2" />
<text  x="246.82" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="618.2" y="2021" width="2.4" height="15.0" fill="rgb(224,209,25)" rx="2" ry="2" />
<text  x="621.25" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="635.3" y="1973" width="0.6" height="15.0" fill="rgb(252,165,32)" rx="2" ry="2" />
<text  x="638.30" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="806.5" y="1605" width="0.1" height="15.0" fill="rgb(241,216,27)" rx="2" ry="2" />
<text  x="809.45" y="1615.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="1045.8" y="1877" width="0.2" height="15.0" fill="rgb(232,204,37)" rx="2" ry="2" />
<text  x="1048.82" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="552.6" y="1621" width="0.2" height="15.0" fill="rgb(218,190,48)" rx="2" ry="2" />
<text  x="555.60" y="1631.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="77.0" y="1925" width="0.2" height="15.0" fill="rgb(222,56,28)" rx="2" ry="2" />
<text  x="80.03" y="1935.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="793.0" y="1509" width="0.2" height="15.0" fill="rgb(207,58,18)" rx="2" ry="2" />
<text  x="795.96" y="1519.5" ></text>
</g>
<g >
<title>task_work_run (522 samples, 8.77%)</title><rect x="719.0" y="1845" width="103.5" height="15.0" fill="rgb(216,154,26)" rx="2" ry="2" />
<text  x="721.99" y="1855.5" >task_work_run</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="668.2" y="1717" width="0.2" height="15.0" fill="rgb(239,107,20)" rx="2" ry="2" />
<text  x="671.22" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="935.0" y="1957" width="0.2" height="15.0" fill="rgb(223,52,44)" rx="2" ry="2" />
<text  x="937.96" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (7 samples, 0.12%)</title><rect x="55.4" y="1909" width="1.4" height="15.0" fill="rgb(236,171,37)" rx="2" ry="2" />
<text  x="58.42" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="442.3" y="1989" width="0.2" height="15.0" fill="rgb(217,114,2)" rx="2" ry="2" />
<text  x="445.34" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (2 samples, 0.03%)</title><rect x="67.3" y="1925" width="0.4" height="15.0" fill="rgb(253,59,7)" rx="2" ry="2" />
<text  x="70.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="621.6" y="2037" width="0.4" height="15.0" fill="rgb(252,155,18)" rx="2" ry="2" />
<text  x="624.62" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="806.5" y="1541" width="0.1" height="15.0" fill="rgb(242,33,46)" rx="2" ry="2" />
<text  x="809.45" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="630.9" y="1941" width="0.2" height="15.0" fill="rgb(252,153,34)" rx="2" ry="2" />
<text  x="633.94" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (1 samples, 0.02%)</title><rect x="579.6" y="2021" width="0.2" height="15.0" fill="rgb(214,63,49)" rx="2" ry="2" />
<text  x="582.57" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="135.3" y="1765" width="0.2" height="15.0" fill="rgb(227,220,33)" rx="2" ry="2" />
<text  x="138.34" y="1775.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="151.6" y="1877" width="0.2" height="15.0" fill="rgb(250,147,42)" rx="2" ry="2" />
<text  x="154.60" y="1887.5" ></text>
</g>
<g >
<title>__mmdrop (2 samples, 0.03%)</title><rect x="14.8" y="1893" width="0.4" height="15.0" fill="rgb(244,220,0)" rx="2" ry="2" />
<text  x="17.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="466.9" y="1941" width="0.4" height="15.0" fill="rgb(211,119,36)" rx="2" ry="2" />
<text  x="469.93" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="264.4" y="1797" width="0.2" height="15.0" fill="rgb(244,127,30)" rx="2" ry="2" />
<text  x="267.44" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="292.8" y="1621" width="0.4" height="15.0" fill="rgb(207,15,4)" rx="2" ry="2" />
<text  x="295.80" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="378.1" y="1893" width="0.2" height="15.0" fill="rgb(233,159,3)" rx="2" ry="2" />
<text  x="381.08" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="890.1" y="1941" width="0.8" height="15.0" fill="rgb(230,130,10)" rx="2" ry="2" />
<text  x="893.14" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="389.2" y="1845" width="0.2" height="15.0" fill="rgb(221,48,4)" rx="2" ry="2" />
<text  x="392.19" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="984.9" y="1957" width="0.2" height="15.0" fill="rgb(214,228,1)" rx="2" ry="2" />
<text  x="987.94" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="1017.5" y="1829" width="0.2" height="15.0" fill="rgb(254,124,29)" rx="2" ry="2" />
<text  x="1020.46" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1081.3" y="1909" width="0.6" height="15.0" fill="rgb(206,5,32)" rx="2" ry="2" />
<text  x="1084.32" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="122.2" y="1381" width="0.2" height="15.0" fill="rgb(246,139,4)" rx="2" ry="2" />
<text  x="125.25" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="186.7" y="1765" width="0.2" height="15.0" fill="rgb(250,6,36)" rx="2" ry="2" />
<text  x="189.70" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="875.1" y="1877" width="0.2" height="15.0" fill="rgb(238,64,54)" rx="2" ry="2" />
<text  x="878.07" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="293.0" y="1477" width="0.2" height="15.0" fill="rgb(240,226,14)" rx="2" ry="2" />
<text  x="296.00" y="1487.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (2 samples, 0.03%)</title><rect x="1131.5" y="2053" width="0.4" height="15.0" fill="rgb(250,170,4)" rx="2" ry="2" />
<text  x="1134.50" y="2063.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="999.8" y="2005" width="0.2" height="15.0" fill="rgb(205,224,26)" rx="2" ry="2" />
<text  x="1002.81" y="2015.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="597.0" y="1829" width="0.4" height="15.0" fill="rgb(219,33,1)" rx="2" ry="2" />
<text  x="600.03" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="145.1" y="1893" width="0.2" height="15.0" fill="rgb(208,122,21)" rx="2" ry="2" />
<text  x="148.06" y="1903.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="644.2" y="1573" width="0.2" height="15.0" fill="rgb(214,196,31)" rx="2" ry="2" />
<text  x="647.23" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="365.4" y="1829" width="0.2" height="15.0" fill="rgb(205,53,25)" rx="2" ry="2" />
<text  x="368.39" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (27 samples, 0.45%)</title><rect x="216.1" y="1909" width="5.3" height="15.0" fill="rgb(238,10,38)" rx="2" ry="2" />
<text  x="219.05" y="1919.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="565.7" y="1685" width="0.2" height="15.0" fill="rgb(230,227,49)" rx="2" ry="2" />
<text  x="568.69" y="1695.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="985.1" y="1957" width="0.2" height="15.0" fill="rgb(238,196,50)" rx="2" ry="2" />
<text  x="988.14" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="1143.0" y="1925" width="0.2" height="15.0" fill="rgb(245,132,41)" rx="2" ry="2" />
<text  x="1146.00" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="833.0" y="1893" width="0.2" height="15.0" fill="rgb(243,88,34)" rx="2" ry="2" />
<text  x="836.03" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="371.5" y="1925" width="0.2" height="15.0" fill="rgb(237,82,49)" rx="2" ry="2" />
<text  x="374.54" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="328.3" y="1733" width="0.2" height="15.0" fill="rgb(239,202,19)" rx="2" ry="2" />
<text  x="331.30" y="1743.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="226.4" y="1957" width="0.2" height="15.0" fill="rgb(253,197,8)" rx="2" ry="2" />
<text  x="229.37" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="277.7" y="1669" width="0.2" height="15.0" fill="rgb(212,223,31)" rx="2" ry="2" />
<text  x="280.73" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="250.8" y="1861" width="0.2" height="15.0" fill="rgb(244,130,33)" rx="2" ry="2" />
<text  x="253.76" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="806.5" y="1653" width="0.1" height="15.0" fill="rgb(246,227,42)" rx="2" ry="2" />
<text  x="809.45" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="341.2" y="1925" width="1.2" height="15.0" fill="rgb(224,37,46)" rx="2" ry="2" />
<text  x="344.19" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="413.6" y="1989" width="0.6" height="15.0" fill="rgb(216,74,49)" rx="2" ry="2" />
<text  x="416.58" y="1999.5" ></text>
</g>
<g >
<title>syscall (70 samples, 1.18%)</title><rect x="1148.4" y="1973" width="13.8" height="15.0" fill="rgb(209,133,5)" rx="2" ry="2" />
<text  x="1151.35" y="1983.5" ></text>
</g>
<g >
<title>sock_close (2 samples, 0.03%)</title><rect x="821.7" y="1813" width="0.4" height="15.0" fill="rgb(222,198,54)" rx="2" ry="2" />
<text  x="824.72" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="883.2" y="1957" width="0.2" height="15.0" fill="rgb(230,131,18)" rx="2" ry="2" />
<text  x="886.20" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="517.9" y="1957" width="0.2" height="15.0" fill="rgb(206,30,22)" rx="2" ry="2" />
<text  x="520.90" y="1967.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="991.7" y="1941" width="0.2" height="15.0" fill="rgb(239,192,12)" rx="2" ry="2" />
<text  x="994.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="697.8" y="2037" width="0.2" height="15.0" fill="rgb(224,177,38)" rx="2" ry="2" />
<text  x="700.77" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="365.4" y="1573" width="0.2" height="15.0" fill="rgb(217,186,11)" rx="2" ry="2" />
<text  x="368.39" y="1583.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="671.4" y="1973" width="0.2" height="15.0" fill="rgb(219,57,52)" rx="2" ry="2" />
<text  x="674.39" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="333.5" y="1765" width="0.2" height="15.0" fill="rgb(249,59,39)" rx="2" ry="2" />
<text  x="336.46" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="343.6" y="1877" width="0.2" height="15.0" fill="rgb(235,142,19)" rx="2" ry="2" />
<text  x="346.57" y="1887.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="945.5" y="1925" width="0.2" height="15.0" fill="rgb(236,50,54)" rx="2" ry="2" />
<text  x="948.47" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="414.0" y="1765" width="0.2" height="15.0" fill="rgb(211,199,38)" rx="2" ry="2" />
<text  x="416.98" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="962.3" y="1941" width="0.2" height="15.0" fill="rgb(225,119,26)" rx="2" ry="2" />
<text  x="965.33" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="165.9" y="1989" width="0.4" height="15.0" fill="rgb(239,153,42)" rx="2" ry="2" />
<text  x="168.88" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="221.0" y="1829" width="0.4" height="15.0" fill="rgb(220,207,4)" rx="2" ry="2" />
<text  x="224.01" y="1839.5" ></text>
</g>
<g >
<title>tcp_init_xmit_timers (1 samples, 0.02%)</title><rect x="378.1" y="1605" width="0.2" height="15.0" fill="rgb(251,92,1)" rx="2" ry="2" />
<text  x="381.08" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26 samples, 0.44%)</title><rect x="1170.2" y="2037" width="5.1" height="15.0" fill="rgb(220,91,26)" rx="2" ry="2" />
<text  x="1173.17" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (61 samples, 1.03%)</title><rect x="1100.6" y="1845" width="12.1" height="15.0" fill="rgb(244,1,31)" rx="2" ry="2" />
<text  x="1103.56" y="1855.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="365.4" y="1909" width="0.2" height="15.0" fill="rgb(215,43,11)" rx="2" ry="2" />
<text  x="368.39" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="459.2" y="1973" width="0.2" height="15.0" fill="rgb(254,220,0)" rx="2" ry="2" />
<text  x="462.19" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="827.1" y="1861" width="0.2" height="15.0" fill="rgb(239,193,40)" rx="2" ry="2" />
<text  x="830.08" y="1871.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="570.6" y="2005" width="0.2" height="15.0" fill="rgb(216,159,47)" rx="2" ry="2" />
<text  x="573.65" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="53.0" y="1941" width="1.2" height="15.0" fill="rgb(223,212,35)" rx="2" ry="2" />
<text  x="56.04" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="982.8" y="1893" width="0.2" height="15.0" fill="rgb(251,65,0)" rx="2" ry="2" />
<text  x="985.76" y="1903.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="160.5" y="2005" width="0.2" height="15.0" fill="rgb(239,27,9)" rx="2" ry="2" />
<text  x="163.52" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="121.7" y="101" width="0.2" height="15.0" fill="rgb(211,160,17)" rx="2" ry="2" />
<text  x="124.65" y="111.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="875.3" y="1941" width="1.8" height="15.0" fill="rgb(210,74,14)" rx="2" ry="2" />
<text  x="878.27" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="945.5" y="1973" width="0.2" height="15.0" fill="rgb(227,193,50)" rx="2" ry="2" />
<text  x="948.47" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1165.4" y="2021" width="0.2" height="15.0" fill="rgb(210,91,13)" rx="2" ry="2" />
<text  x="1168.41" y="2031.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.07%)</title><rect x="1113.3" y="1877" width="0.7" height="15.0" fill="rgb(241,22,21)" rx="2" ry="2" />
<text  x="1116.25" y="1887.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="466.3" y="1877" width="0.2" height="15.0" fill="rgb(228,158,26)" rx="2" ry="2" />
<text  x="469.33" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="487.4" y="1797" width="0.4" height="15.0" fill="rgb(244,170,36)" rx="2" ry="2" />
<text  x="490.35" y="1807.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="165.7" y="1989" width="0.2" height="15.0" fill="rgb(237,221,36)" rx="2" ry="2" />
<text  x="168.68" y="1999.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="894.1" y="1973" width="0.4" height="15.0" fill="rgb(226,5,41)" rx="2" ry="2" />
<text  x="897.11" y="1983.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="408.8" y="1877" width="0.2" height="15.0" fill="rgb(245,129,53)" rx="2" ry="2" />
<text  x="411.82" y="1887.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (22 samples, 0.37%)</title><rect x="683.3" y="1925" width="4.4" height="15.0" fill="rgb(251,82,31)" rx="2" ry="2" />
<text  x="686.29" y="1935.5" ></text>
</g>
<g >
<title>ep_poll_callback (6 samples, 0.10%)</title><rect x="294.2" y="1429" width="1.2" height="15.0" fill="rgb(236,178,22)" rx="2" ry="2" />
<text  x="297.19" y="1439.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="509.2" y="1813" width="0.2" height="15.0" fill="rgb(239,161,54)" rx="2" ry="2" />
<text  x="512.17" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (9 samples, 0.15%)</title><rect x="81.4" y="1941" width="1.8" height="15.0" fill="rgb(216,7,39)" rx="2" ry="2" />
<text  x="84.39" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="213.3" y="1861" width="0.2" height="15.0" fill="rgb(230,141,36)" rx="2" ry="2" />
<text  x="216.28" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1163.8" y="2053" width="0.2" height="15.0" fill="rgb(237,159,42)" rx="2" ry="2" />
<text  x="1166.82" y="2063.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="381.1" y="1893" width="0.4" height="15.0" fill="rgb(218,142,7)" rx="2" ry="2" />
<text  x="384.06" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="551.6" y="1989" width="0.4" height="15.0" fill="rgb(213,21,41)" rx="2" ry="2" />
<text  x="554.61" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="243.6" y="1941" width="0.4" height="15.0" fill="rgb(248,219,31)" rx="2" ry="2" />
<text  x="246.62" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="644.2" y="1525" width="0.2" height="15.0" fill="rgb(230,129,28)" rx="2" ry="2" />
<text  x="647.23" y="1535.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="881.4" y="1733" width="0.2" height="15.0" fill="rgb(222,121,4)" rx="2" ry="2" />
<text  x="884.42" y="1743.5" ></text>
</g>
<g >
<title>alloc_file (35 samples, 0.59%)</title><rect x="399.9" y="1941" width="6.9" height="15.0" fill="rgb(238,75,45)" rx="2" ry="2" />
<text  x="402.90" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="53.4" y="1925" width="0.8" height="15.0" fill="rgb(206,63,15)" rx="2" ry="2" />
<text  x="56.43" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (1 samples, 0.02%)</title><rect x="39.0" y="1989" width="0.2" height="15.0" fill="rgb(220,11,43)" rx="2" ry="2" />
<text  x="41.95" y="1999.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.02%)</title><rect x="820.9" y="1813" width="0.2" height="15.0" fill="rgb(219,158,12)" rx="2" ry="2" />
<text  x="823.93" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="271.8" y="1653" width="0.2" height="15.0" fill="rgb(222,49,25)" rx="2" ry="2" />
<text  x="274.78" y="1663.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="501.6" y="1893" width="0.2" height="15.0" fill="rgb(217,162,18)" rx="2" ry="2" />
<text  x="504.63" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="156.8" y="1909" width="0.2" height="15.0" fill="rgb(224,14,36)" rx="2" ry="2" />
<text  x="159.76" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="228.9" y="2021" width="0.4" height="15.0" fill="rgb(231,132,16)" rx="2" ry="2" />
<text  x="231.94" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::isParentError (1 samples, 0.02%)</title><rect x="699.0" y="1973" width="0.2" height="15.0" fill="rgb(250,76,53)" rx="2" ry="2" />
<text  x="701.96" y="1983.5" ></text>
</g>
<g >
<title>skb_free_head (21 samples, 0.35%)</title><rect x="1069.0" y="1877" width="4.2" height="15.0" fill="rgb(214,216,7)" rx="2" ry="2" />
<text  x="1072.03" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="757" width="17.5" height="15.0" fill="rgb(230,31,39)" rx="2" ry="2" />
<text  x="107.40" y="767.5" ></text>
</g>
<g >
<title>__ip_local_out (9 samples, 0.15%)</title><rect x="287.6" y="1781" width="1.8" height="15.0" fill="rgb(233,68,18)" rx="2" ry="2" />
<text  x="290.65" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="872.7" y="1909" width="0.2" height="15.0" fill="rgb(236,207,50)" rx="2" ry="2" />
<text  x="875.69" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="689.4" y="1653" width="0.2" height="15.0" fill="rgb(223,197,21)" rx="2" ry="2" />
<text  x="692.44" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="113.3" y="37" width="0.8" height="15.0" fill="rgb(228,173,49)" rx="2" ry="2" />
<text  x="116.32" y="47.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="541.5" y="1861" width="0.4" height="15.0" fill="rgb(228,208,0)" rx="2" ry="2" />
<text  x="544.50" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="939.9" y="2005" width="0.6" height="15.0" fill="rgb(225,55,23)" rx="2" ry="2" />
<text  x="942.92" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="870.5" y="1861" width="0.2" height="15.0" fill="rgb(253,221,51)" rx="2" ry="2" />
<text  x="873.51" y="1871.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="254.9" y="1893" width="0.2" height="15.0" fill="rgb(206,176,34)" rx="2" ry="2" />
<text  x="257.92" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (5 samples, 0.08%)</title><rect x="578.0" y="1989" width="1.0" height="15.0" fill="rgb(216,115,52)" rx="2" ry="2" />
<text  x="580.99" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="875.1" y="1845" width="0.2" height="15.0" fill="rgb(221,170,49)" rx="2" ry="2" />
<text  x="878.07" y="1855.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="689.4" y="1637" width="0.2" height="15.0" fill="rgb(231,213,26)" rx="2" ry="2" />
<text  x="692.44" y="1647.5" ></text>
</g>
<g >
<title>kmem_cache_free (10 samples, 0.17%)</title><rect x="473.7" y="1941" width="2.0" height="15.0" fill="rgb(231,209,48)" rx="2" ry="2" />
<text  x="476.67" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (5 samples, 0.08%)</title><rect x="869.3" y="1925" width="1.0" height="15.0" fill="rgb(209,203,50)" rx="2" ry="2" />
<text  x="872.32" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="644.2" y="1701" width="0.2" height="15.0" fill="rgb(221,55,30)" rx="2" ry="2" />
<text  x="647.23" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (3 samples, 0.05%)</title><rect x="1138.8" y="2005" width="0.6" height="15.0" fill="rgb(242,6,12)" rx="2" ry="2" />
<text  x="1141.83" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="906.4" y="2037" width="0.2" height="15.0" fill="rgb(253,20,27)" rx="2" ry="2" />
<text  x="909.40" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (71 samples, 1.19%)</title><rect x="866.3" y="1973" width="14.1" height="15.0" fill="rgb(228,44,26)" rx="2" ry="2" />
<text  x="869.34" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="537.5" y="1957" width="0.4" height="15.0" fill="rgb(245,185,47)" rx="2" ry="2" />
<text  x="540.53" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="833.6" y="1925" width="0.6" height="15.0" fill="rgb(246,170,23)" rx="2" ry="2" />
<text  x="836.62" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (133 samples, 2.24%)</title><rect x="200.8" y="2005" width="26.4" height="15.0" fill="rgb(219,220,35)" rx="2" ry="2" />
<text  x="203.78" y="2015.5" >f..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="644.2" y="1877" width="0.2" height="15.0" fill="rgb(244,60,43)" rx="2" ry="2" />
<text  x="647.23" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1023.8" y="2005" width="0.2" height="15.0" fill="rgb(212,97,39)" rx="2" ry="2" />
<text  x="1026.81" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (9 samples, 0.15%)</title><rect x="1137.8" y="2037" width="1.8" height="15.0" fill="rgb(206,78,9)" rx="2" ry="2" />
<text  x="1140.84" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.4" y="2021" width="0.2" height="15.0" fill="rgb(224,44,10)" rx="2" ry="2" />
<text  x="17.36" y="2031.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="510.0" y="2037" width="0.2" height="15.0" fill="rgb(213,103,0)" rx="2" ry="2" />
<text  x="512.96" y="2047.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="596.2" y="1845" width="0.6" height="15.0" fill="rgb(239,227,7)" rx="2" ry="2" />
<text  x="599.23" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.35%)</title><rect x="10.2" y="2021" width="4.2" height="15.0" fill="rgb(245,6,17)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>__d_instantiate (5 samples, 0.08%)</title><rect x="410.2" y="1925" width="1.0" height="15.0" fill="rgb(218,134,17)" rx="2" ry="2" />
<text  x="413.21" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="853" width="17.5" height="15.0" fill="rgb(250,177,38)" rx="2" ry="2" />
<text  x="107.40" y="863.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (241 samples, 4.05%)</title><rect x="43.5" y="2005" width="47.8" height="15.0" fill="rgb(220,102,22)" rx="2" ry="2" />
<text  x="46.52" y="2015.5" >foll..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="975.8" y="1957" width="0.4" height="15.0" fill="rgb(218,95,49)" rx="2" ry="2" />
<text  x="978.82" y="1967.5" ></text>
</g>
<g >
<title>ep_poll (78 samples, 1.31%)</title><rect x="493.9" y="1973" width="15.5" height="15.0" fill="rgb(247,211,16)" rx="2" ry="2" />
<text  x="496.90" y="1983.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="293.0" y="1413" width="0.2" height="15.0" fill="rgb(230,127,26)" rx="2" ry="2" />
<text  x="296.00" y="1423.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="928.0" y="1989" width="0.2" height="15.0" fill="rgb(208,62,26)" rx="2" ry="2" />
<text  x="931.02" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="520.3" y="1941" width="0.4" height="15.0" fill="rgb(225,116,48)" rx="2" ry="2" />
<text  x="523.28" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.75%)</title><rect x="104.0" y="1781" width="20.6" height="15.0" fill="rgb(228,48,39)" rx="2" ry="2" />
<text  x="107.00" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="148.0" y="1861" width="0.2" height="15.0" fill="rgb(212,49,3)" rx="2" ry="2" />
<text  x="151.03" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (91 samples, 1.53%)</title><rect x="511.7" y="2005" width="18.1" height="15.0" fill="rgb(215,37,3)" rx="2" ry="2" />
<text  x="514.75" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1253" width="17.5" height="15.0" fill="rgb(213,89,25)" rx="2" ry="2" />
<text  x="107.40" y="1263.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="827.1" y="1701" width="0.2" height="15.0" fill="rgb(232,78,12)" rx="2" ry="2" />
<text  x="830.08" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="668.2" y="1781" width="0.2" height="15.0" fill="rgb(248,59,4)" rx="2" ry="2" />
<text  x="671.22" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="179.2" y="1973" width="0.2" height="15.0" fill="rgb(237,157,52)" rx="2" ry="2" />
<text  x="182.17" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="67.3" y="1893" width="0.4" height="15.0" fill="rgb(245,110,46)" rx="2" ry="2" />
<text  x="70.31" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="365.4" y="1685" width="0.2" height="15.0" fill="rgb(240,126,5)" rx="2" ry="2" />
<text  x="368.39" y="1695.5" ></text>
</g>
<g >
<title>inet_csk_accept (68 samples, 1.14%)</title><rect x="368.2" y="1941" width="13.5" height="15.0" fill="rgb(235,138,29)" rx="2" ry="2" />
<text  x="371.16" y="1951.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="816.0" y="1701" width="0.2" height="15.0" fill="rgb(208,27,41)" rx="2" ry="2" />
<text  x="818.97" y="1711.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="875.5" y="1925" width="0.4" height="15.0" fill="rgb(218,39,44)" rx="2" ry="2" />
<text  x="878.47" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="553.4" y="1925" width="0.2" height="15.0" fill="rgb(223,115,49)" rx="2" ry="2" />
<text  x="556.39" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="119.1" y="53" width="0.6" height="15.0" fill="rgb(225,181,6)" rx="2" ry="2" />
<text  x="122.08" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="838.4" y="1925" width="1.8" height="15.0" fill="rgb(240,175,53)" rx="2" ry="2" />
<text  x="841.38" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="946.7" y="1973" width="0.2" height="15.0" fill="rgb(228,74,17)" rx="2" ry="2" />
<text  x="949.66" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="994.9" y="1861" width="0.2" height="15.0" fill="rgb(223,95,23)" rx="2" ry="2" />
<text  x="997.85" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1172.3" y="1957" width="0.2" height="15.0" fill="rgb(230,86,27)" rx="2" ry="2" />
<text  x="1175.35" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="627.6" y="1989" width="0.6" height="15.0" fill="rgb(247,197,35)" rx="2" ry="2" />
<text  x="630.57" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.24%)</title><rect x="292.6" y="1685" width="2.8" height="15.0" fill="rgb(209,205,43)" rx="2" ry="2" />
<text  x="295.61" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.05%)</title><rect x="103.4" y="1941" width="24.2" height="15.0" fill="rgb(219,211,4)" rx="2" ry="2" />
<text  x="106.41" y="1951.5" >[..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="526.6" y="1941" width="0.2" height="15.0" fill="rgb(221,160,2)" rx="2" ry="2" />
<text  x="529.62" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="871.9" y="1909" width="0.2" height="15.0" fill="rgb(244,190,16)" rx="2" ry="2" />
<text  x="874.90" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="59.6" y="1877" width="0.2" height="15.0" fill="rgb(238,47,27)" rx="2" ry="2" />
<text  x="62.58" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="687.3" y="1845" width="0.4" height="15.0" fill="rgb(228,149,19)" rx="2" ry="2" />
<text  x="690.26" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="668.2" y="1909" width="0.4" height="15.0" fill="rgb(248,219,37)" rx="2" ry="2" />
<text  x="671.22" y="1919.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (42 samples, 0.71%)</title><rect x="459.4" y="1973" width="8.3" height="15.0" fill="rgb(227,179,22)" rx="2" ry="2" />
<text  x="462.39" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (13 samples, 0.22%)</title><rect x="1135.1" y="2053" width="2.5" height="15.0" fill="rgb(231,134,20)" rx="2" ry="2" />
<text  x="1138.07" y="2063.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="37.2" y="1989" width="0.6" height="15.0" fill="rgb(224,43,48)" rx="2" ry="2" />
<text  x="40.17" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="524.0" y="1957" width="0.4" height="15.0" fill="rgb(226,52,50)" rx="2" ry="2" />
<text  x="527.04" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="643.8" y="1797" width="0.2" height="15.0" fill="rgb(240,145,34)" rx="2" ry="2" />
<text  x="646.83" y="1807.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="510.2" y="2037" width="0.2" height="15.0" fill="rgb(219,165,46)" rx="2" ry="2" />
<text  x="513.16" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (30 samples, 0.50%)</title><rect x="61.8" y="1973" width="5.9" height="15.0" fill="rgb(252,42,40)" rx="2" ry="2" />
<text  x="64.76" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="321.8" y="1813" width="0.2" height="15.0" fill="rgb(248,180,11)" rx="2" ry="2" />
<text  x="324.76" y="1823.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (8 samples, 0.13%)</title><rect x="951.8" y="2005" width="1.6" height="15.0" fill="rgb(249,138,9)" rx="2" ry="2" />
<text  x="954.82" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="987.3" y="1861" width="0.2" height="15.0" fill="rgb(217,5,8)" rx="2" ry="2" />
<text  x="990.32" y="1871.5" ></text>
</g>
<g >
<title>skb_defer_rx_timestamp (1 samples, 0.02%)</title><rect x="394.1" y="1797" width="0.2" height="15.0" fill="rgb(213,161,8)" rx="2" ry="2" />
<text  x="397.14" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="466.7" y="1861" width="0.2" height="15.0" fill="rgb(230,199,6)" rx="2" ry="2" />
<text  x="469.73" y="1871.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="269.8" y="1813" width="0.2" height="15.0" fill="rgb(219,131,39)" rx="2" ry="2" />
<text  x="272.80" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="944.3" y="2005" width="0.8" height="15.0" fill="rgb(251,218,53)" rx="2" ry="2" />
<text  x="947.28" y="2015.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (2 samples, 0.03%)</title><rect x="99.2" y="2021" width="0.4" height="15.0" fill="rgb(236,135,51)" rx="2" ry="2" />
<text  x="102.24" y="2031.5" ></text>
</g>
<g >
<title>free (31 samples, 0.52%)</title><rect x="1006.6" y="2037" width="6.1" height="15.0" fill="rgb(245,125,17)" rx="2" ry="2" />
<text  x="1009.55" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="571.8" y="1925" width="0.2" height="15.0" fill="rgb(237,112,29)" rx="2" ry="2" />
<text  x="574.84" y="1935.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="997.2" y="2021" width="0.2" height="15.0" fill="rgb(216,18,7)" rx="2" ry="2" />
<text  x="1000.23" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="565.5" y="1973" width="0.6" height="15.0" fill="rgb(236,193,15)" rx="2" ry="2" />
<text  x="568.49" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="509.0" y="1781" width="0.2" height="15.0" fill="rgb(251,156,8)" rx="2" ry="2" />
<text  x="511.97" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="328.3" y="1653" width="0.2" height="15.0" fill="rgb(250,47,48)" rx="2" ry="2" />
<text  x="331.30" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (85 samples, 1.43%)</title><rect x="208.5" y="1957" width="16.9" height="15.0" fill="rgb(249,187,17)" rx="2" ry="2" />
<text  x="211.52" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1045.8" y="1957" width="0.8" height="15.0" fill="rgb(237,84,42)" rx="2" ry="2" />
<text  x="1048.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="619.6" y="2005" width="0.6" height="15.0" fill="rgb(227,149,19)" rx="2" ry="2" />
<text  x="622.63" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="167.5" y="1909" width="0.2" height="15.0" fill="rgb(244,60,42)" rx="2" ry="2" />
<text  x="170.47" y="1919.5" ></text>
</g>
<g >
<title>__skb_clone (22 samples, 0.37%)</title><rect x="315.0" y="1797" width="4.4" height="15.0" fill="rgb(206,211,15)" rx="2" ry="2" />
<text  x="318.02" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output2 (117 samples, 1.97%)</title><rect x="291.0" y="1749" width="23.2" height="15.0" fill="rgb(217,121,3)" rx="2" ry="2" />
<text  x="294.02" y="1759.5" >i..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="529.2" y="1941" width="0.2" height="15.0" fill="rgb(248,124,45)" rx="2" ry="2" />
<text  x="532.20" y="1951.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1045.8" y="1973" width="0.8" height="15.0" fill="rgb(238,112,36)" rx="2" ry="2" />
<text  x="1048.82" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="147.2" y="1877" width="0.2" height="15.0" fill="rgb(254,70,4)" rx="2" ry="2" />
<text  x="150.24" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="186.7" y="1685" width="0.2" height="15.0" fill="rgb(213,73,13)" rx="2" ry="2" />
<text  x="189.70" y="1695.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="213.3" y="1781" width="0.2" height="15.0" fill="rgb(225,33,6)" rx="2" ry="2" />
<text  x="216.28" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="333.5" y="1589" width="0.2" height="15.0" fill="rgb(227,98,36)" rx="2" ry="2" />
<text  x="336.46" y="1599.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="737.6" y="1765" width="0.2" height="15.0" fill="rgb(211,163,1)" rx="2" ry="2" />
<text  x="740.63" y="1775.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1158.9" y="1637" width="0.2" height="15.0" fill="rgb(221,12,18)" rx="2" ry="2" />
<text  x="1161.86" y="1647.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1189.6" y="2005" width="0.2" height="15.0" fill="rgb(209,153,27)" rx="2" ry="2" />
<text  x="1192.60" y="2015.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="666.8" y="1845" width="1.2" height="15.0" fill="rgb(213,6,19)" rx="2" ry="2" />
<text  x="669.83" y="1855.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="572.2" y="1589" width="0.2" height="15.0" fill="rgb(240,106,53)" rx="2" ry="2" />
<text  x="575.24" y="1599.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (5 samples, 0.08%)</title><rect x="522.3" y="1941" width="1.0" height="15.0" fill="rgb(249,174,5)" rx="2" ry="2" />
<text  x="525.26" y="1951.5" ></text>
</g>
<g >
<title>move_addr_to_user (1 samples, 0.02%)</title><rect x="665.0" y="1861" width="0.2" height="15.0" fill="rgb(245,210,48)" rx="2" ry="2" />
<text  x="668.05" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="333.5" y="1717" width="0.2" height="15.0" fill="rgb(223,72,38)" rx="2" ry="2" />
<text  x="336.46" y="1727.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (222 samples, 3.73%)</title><rect x="442.5" y="1989" width="44.1" height="15.0" fill="rgb(221,79,14)" rx="2" ry="2" />
<text  x="445.53" y="1999.5" >sys_..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="537.3" y="1973" width="0.6" height="15.0" fill="rgb(232,27,16)" rx="2" ry="2" />
<text  x="540.33" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="912.0" y="1909" width="0.2" height="15.0" fill="rgb(248,220,26)" rx="2" ry="2" />
<text  x="914.96" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="459.6" y="1941" width="0.2" height="15.0" fill="rgb(246,88,27)" rx="2" ry="2" />
<text  x="462.59" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="120.9" y="37" width="0.2" height="15.0" fill="rgb(240,163,1)" rx="2" ry="2" />
<text  x="123.86" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="570.5" y="1989" width="0.1" height="15.0" fill="rgb(237,37,53)" rx="2" ry="2" />
<text  x="573.45" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="883.4" y="1989" width="0.4" height="15.0" fill="rgb(239,127,13)" rx="2" ry="2" />
<text  x="886.40" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (8 samples, 0.13%)</title><rect x="700.7" y="1893" width="1.6" height="15.0" fill="rgb(211,2,3)" rx="2" ry="2" />
<text  x="703.75" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="135.3" y="1877" width="0.2" height="15.0" fill="rgb(253,21,16)" rx="2" ry="2" />
<text  x="138.34" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="726.5" y="1669" width="0.2" height="15.0" fill="rgb(253,1,25)" rx="2" ry="2" />
<text  x="729.53" y="1679.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="157.0" y="1909" width="0.2" height="15.0" fill="rgb(211,41,47)" rx="2" ry="2" />
<text  x="159.95" y="1919.5" ></text>
</g>
<g >
<title>default_do_nmi (1 samples, 0.02%)</title><rect x="17.9" y="1829" width="0.2" height="15.0" fill="rgb(250,140,4)" rx="2" ry="2" />
<text  x="20.93" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="541.3" y="1877" width="0.6" height="15.0" fill="rgb(238,60,23)" rx="2" ry="2" />
<text  x="544.30" y="1887.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (2 samples, 0.03%)</title><rect x="1114.0" y="1925" width="0.4" height="15.0" fill="rgb(244,26,4)" rx="2" ry="2" />
<text  x="1117.04" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (94 samples, 1.58%)</title><rect x="582.9" y="2005" width="18.7" height="15.0" fill="rgb(253,123,28)" rx="2" ry="2" />
<text  x="585.94" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="103.4" y="1541" width="0.2" height="15.0" fill="rgb(215,152,15)" rx="2" ry="2" />
<text  x="106.41" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="746.8" y="1717" width="0.2" height="15.0" fill="rgb(215,185,25)" rx="2" ry="2" />
<text  x="749.76" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="378.1" y="1717" width="0.2" height="15.0" fill="rgb(219,73,40)" rx="2" ry="2" />
<text  x="381.08" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="981" width="17.5" height="15.0" fill="rgb(225,159,31)" rx="2" ry="2" />
<text  x="107.40" y="991.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="441.1" y="1989" width="0.4" height="15.0" fill="rgb(213,24,53)" rx="2" ry="2" />
<text  x="444.15" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (10 samples, 0.17%)</title><rect x="70.1" y="1957" width="2.0" height="15.0" fill="rgb(227,20,1)" rx="2" ry="2" />
<text  x="73.09" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="655.1" y="1989" width="0.4" height="15.0" fill="rgb(239,159,53)" rx="2" ry="2" />
<text  x="658.13" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (3 samples, 0.05%)</title><rect x="718.4" y="1845" width="0.6" height="15.0" fill="rgb(230,33,17)" rx="2" ry="2" />
<text  x="721.40" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="554.6" y="1957" width="0.2" height="15.0" fill="rgb(228,24,52)" rx="2" ry="2" />
<text  x="557.58" y="1967.5" ></text>
</g>
<g >
<title>inet_recvmsg (322 samples, 5.41%)</title><rect x="1050.6" y="1957" width="63.8" height="15.0" fill="rgb(216,137,24)" rx="2" ry="2" />
<text  x="1053.58" y="1967.5" >inet_re..</text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="634.3" y="1925" width="0.6" height="15.0" fill="rgb(234,114,3)" rx="2" ry="2" />
<text  x="637.31" y="1935.5" ></text>
</g>
<g >
<title>wakeup_source_unregister (2 samples, 0.03%)</title><rect x="486.2" y="1973" width="0.4" height="15.0" fill="rgb(209,84,8)" rx="2" ry="2" />
<text  x="489.16" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="64.7" y="1925" width="0.2" height="15.0" fill="rgb(231,47,40)" rx="2" ry="2" />
<text  x="67.74" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="701.1" y="1861" width="0.8" height="15.0" fill="rgb(212,194,30)" rx="2" ry="2" />
<text  x="704.14" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1064.9" y="1797" width="0.2" height="15.0" fill="rgb(210,122,53)" rx="2" ry="2" />
<text  x="1067.86" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="103.4" y="1797" width="0.2" height="15.0" fill="rgb(217,102,13)" rx="2" ry="2" />
<text  x="106.41" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="150.6" y="1877" width="1.0" height="15.0" fill="rgb(235,30,27)" rx="2" ry="2" />
<text  x="153.61" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (7 samples, 0.12%)</title><rect x="109.4" y="37" width="1.3" height="15.0" fill="rgb(245,155,33)" rx="2" ry="2" />
<text  x="112.36" y="47.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="37.2" y="1973" width="0.4" height="15.0" fill="rgb(245,104,26)" rx="2" ry="2" />
<text  x="40.17" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="381.1" y="1909" width="0.4" height="15.0" fill="rgb(254,103,9)" rx="2" ry="2" />
<text  x="384.06" y="1919.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="885.4" y="2005" width="0.6" height="15.0" fill="rgb(249,228,53)" rx="2" ry="2" />
<text  x="888.38" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="223.8" y="1829" width="0.8" height="15.0" fill="rgb(230,22,18)" rx="2" ry="2" />
<text  x="226.79" y="1839.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="118.1" y="69" width="0.4" height="15.0" fill="rgb(237,175,24)" rx="2" ry="2" />
<text  x="121.08" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (7 samples, 0.12%)</title><rect x="106.2" y="37" width="1.4" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="109.18" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="628.2" y="1989" width="0.4" height="15.0" fill="rgb(227,228,6)" rx="2" ry="2" />
<text  x="631.16" y="1999.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="167.9" y="1605" width="0.2" height="15.0" fill="rgb(208,28,31)" rx="2" ry="2" />
<text  x="170.86" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (5 samples, 0.08%)</title><rect x="398.5" y="1893" width="1.0" height="15.0" fill="rgb(229,32,29)" rx="2" ry="2" />
<text  x="401.51" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="827.1" y="1893" width="0.2" height="15.0" fill="rgb(245,111,7)" rx="2" ry="2" />
<text  x="830.08" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="989.9" y="1957" width="0.2" height="15.0" fill="rgb(235,92,34)" rx="2" ry="2" />
<text  x="992.90" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="79.4" y="1941" width="0.4" height="15.0" fill="rgb(206,186,29)" rx="2" ry="2" />
<text  x="82.41" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="293.0" y="1429" width="0.2" height="15.0" fill="rgb(227,171,51)" rx="2" ry="2" />
<text  x="296.00" y="1439.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="927.6" y="1957" width="0.2" height="15.0" fill="rgb(248,137,8)" rx="2" ry="2" />
<text  x="930.62" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="875.1" y="1669" width="0.2" height="15.0" fill="rgb(244,100,3)" rx="2" ry="2" />
<text  x="878.07" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="82.4" y="1909" width="0.2" height="15.0" fill="rgb(219,47,49)" rx="2" ry="2" />
<text  x="85.39" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="219.4" y="1845" width="0.6" height="15.0" fill="rgb(208,191,53)" rx="2" ry="2" />
<text  x="222.43" y="1855.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1001.4" y="2005" width="0.2" height="15.0" fill="rgb(205,212,32)" rx="2" ry="2" />
<text  x="1004.40" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="333.7" y="1797" width="0.2" height="15.0" fill="rgb(253,198,33)" rx="2" ry="2" />
<text  x="336.66" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="186.7" y="1845" width="0.2" height="15.0" fill="rgb(236,5,53)" rx="2" ry="2" />
<text  x="189.70" y="1855.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (21 samples, 0.35%)</title><rect x="683.5" y="1893" width="4.2" height="15.0" fill="rgb(218,54,8)" rx="2" ry="2" />
<text  x="686.49" y="1903.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="393.7" y="1877" width="0.2" height="15.0" fill="rgb(221,220,53)" rx="2" ry="2" />
<text  x="396.75" y="1887.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (53 samples, 0.89%)</title><rect x="1101.4" y="1749" width="10.5" height="15.0" fill="rgb(253,25,39)" rx="2" ry="2" />
<text  x="1104.35" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="893.9" y="1957" width="0.2" height="15.0" fill="rgb(248,194,40)" rx="2" ry="2" />
<text  x="896.91" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="646.2" y="2005" width="0.2" height="15.0" fill="rgb(246,176,43)" rx="2" ry="2" />
<text  x="649.21" y="2015.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="320.2" y="1797" width="0.2" height="15.0" fill="rgb(216,227,40)" rx="2" ry="2" />
<text  x="323.17" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="827.1" y="1637" width="0.2" height="15.0" fill="rgb(228,130,48)" rx="2" ry="2" />
<text  x="830.08" y="1647.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="694.4" y="1973" width="0.4" height="15.0" fill="rgb(224,53,40)" rx="2" ry="2" />
<text  x="697.40" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="643.8" y="1813" width="0.2" height="15.0" fill="rgb(216,227,49)" rx="2" ry="2" />
<text  x="646.83" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="693" width="17.5" height="15.0" fill="rgb(220,131,19)" rx="2" ry="2" />
<text  x="107.40" y="703.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="561.7" y="1829" width="0.2" height="15.0" fill="rgb(221,176,43)" rx="2" ry="2" />
<text  x="564.72" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="509.0" y="1749" width="0.2" height="15.0" fill="rgb(242,109,48)" rx="2" ry="2" />
<text  x="511.97" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="360.2" y="1925" width="0.2" height="15.0" fill="rgb(247,162,8)" rx="2" ry="2" />
<text  x="363.23" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="321.0" y="1749" width="0.2" height="15.0" fill="rgb(225,22,35)" rx="2" ry="2" />
<text  x="323.96" y="1759.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="509.2" y="1797" width="0.2" height="15.0" fill="rgb(226,174,46)" rx="2" ry="2" />
<text  x="512.17" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="142.5" y="1941" width="0.4" height="15.0" fill="rgb(210,193,8)" rx="2" ry="2" />
<text  x="145.48" y="1951.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1148.2" y="1973" width="0.2" height="15.0" fill="rgb(225,48,24)" rx="2" ry="2" />
<text  x="1151.15" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="902.0" y="2037" width="0.4" height="15.0" fill="rgb(205,145,39)" rx="2" ry="2" />
<text  x="905.04" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="145.3" y="1893" width="0.2" height="15.0" fill="rgb(215,188,29)" rx="2" ry="2" />
<text  x="148.25" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1012.5" y="1989" width="0.2" height="15.0" fill="rgb(249,165,8)" rx="2" ry="2" />
<text  x="1015.50" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="156.0" y="1765" width="0.2" height="15.0" fill="rgb(225,111,47)" rx="2" ry="2" />
<text  x="158.96" y="1775.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="90.5" y="1973" width="0.2" height="15.0" fill="rgb(229,162,8)" rx="2" ry="2" />
<text  x="93.52" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (14 samples, 0.24%)</title><rect x="145.7" y="1909" width="2.7" height="15.0" fill="rgb(205,112,0)" rx="2" ry="2" />
<text  x="148.65" y="1919.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="293.0" y="1333" width="0.2" height="15.0" fill="rgb(248,149,34)" rx="2" ry="2" />
<text  x="296.00" y="1343.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="199.4" y="2005" width="0.4" height="15.0" fill="rgb(215,81,51)" rx="2" ry="2" />
<text  x="202.39" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (20 samples, 0.34%)</title><rect x="17.7" y="1925" width="4.0" height="15.0" fill="rgb(245,140,8)" rx="2" ry="2" />
<text  x="20.73" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (114 samples, 1.92%)</title><rect x="964.9" y="2037" width="22.6" height="15.0" fill="rgb(223,68,47)" rx="2" ry="2" />
<text  x="967.91" y="2047.5" >f..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="328.3" y="1589" width="0.2" height="15.0" fill="rgb(216,149,52)" rx="2" ry="2" />
<text  x="331.30" y="1599.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="298.0" y="1589" width="0.2" height="15.0" fill="rgb(244,18,10)" rx="2" ry="2" />
<text  x="300.96" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="911.2" y="1941" width="0.2" height="15.0" fill="rgb(237,130,10)" rx="2" ry="2" />
<text  x="914.16" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="572.4" y="1941" width="0.2" height="15.0" fill="rgb(234,190,18)" rx="2" ry="2" />
<text  x="575.43" y="1951.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="373.3" y="1925" width="0.2" height="15.0" fill="rgb(205,229,15)" rx="2" ry="2" />
<text  x="376.32" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (25 samples, 0.42%)</title><rect x="152.8" y="1925" width="4.9" height="15.0" fill="rgb(214,191,10)" rx="2" ry="2" />
<text  x="155.79" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (83 samples, 1.39%)</title><rect x="655.1" y="2005" width="16.5" height="15.0" fill="rgb(244,160,26)" rx="2" ry="2" />
<text  x="658.13" y="2015.5" ></text>
</g>
<g >
<title>d_instantiate (7 samples, 0.12%)</title><rect x="410.2" y="1941" width="1.4" height="15.0" fill="rgb(237,141,54)" rx="2" ry="2" />
<text  x="413.21" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="389.2" y="1813" width="0.2" height="15.0" fill="rgb(250,147,39)" rx="2" ry="2" />
<text  x="392.19" y="1823.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (19 samples, 0.32%)</title><rect x="149.0" y="1925" width="3.8" height="15.0" fill="rgb(212,9,33)" rx="2" ry="2" />
<text  x="152.02" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="221.6" y="1925" width="1.8" height="15.0" fill="rgb(205,68,49)" rx="2" ry="2" />
<text  x="224.61" y="1935.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (1 samples, 0.02%)</title><rect x="413.0" y="1973" width="0.2" height="15.0" fill="rgb(240,151,37)" rx="2" ry="2" />
<text  x="415.98" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="58.2" y="1781" width="0.2" height="15.0" fill="rgb(241,204,37)" rx="2" ry="2" />
<text  x="61.19" y="1791.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="797.3" y="1669" width="0.4" height="15.0" fill="rgb(211,212,50)" rx="2" ry="2" />
<text  x="800.33" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="156.0" y="1845" width="0.2" height="15.0" fill="rgb(251,19,51)" rx="2" ry="2" />
<text  x="158.96" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="463.6" y="1893" width="0.4" height="15.0" fill="rgb(251,73,49)" rx="2" ry="2" />
<text  x="466.56" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="473.5" y="1941" width="0.2" height="15.0" fill="rgb(219,25,0)" rx="2" ry="2" />
<text  x="476.47" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1182.1" y="1957" width="0.2" height="15.0" fill="rgb(227,68,6)" rx="2" ry="2" />
<text  x="1185.07" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="121.3" y="53" width="0.2" height="15.0" fill="rgb(236,188,7)" rx="2" ry="2" />
<text  x="124.26" y="63.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.05%)</title><rect x="840.4" y="1909" width="0.6" height="15.0" fill="rgb(247,2,13)" rx="2" ry="2" />
<text  x="843.36" y="1919.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (13 samples, 0.22%)</title><rect x="1114.4" y="1957" width="2.6" height="15.0" fill="rgb(248,203,24)" rx="2" ry="2" />
<text  x="1117.44" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="935.0" y="1877" width="0.2" height="15.0" fill="rgb(250,16,49)" rx="2" ry="2" />
<text  x="937.96" y="1887.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="133.4" y="1989" width="0.2" height="15.0" fill="rgb(220,65,39)" rx="2" ry="2" />
<text  x="136.35" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (12 samples, 0.20%)</title><rect x="976.2" y="1989" width="2.4" height="15.0" fill="rgb(209,126,26)" rx="2" ry="2" />
<text  x="979.21" y="1999.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="250.8" y="1813" width="0.2" height="15.0" fill="rgb(246,119,48)" rx="2" ry="2" />
<text  x="253.76" y="1823.5" ></text>
</g>
<g >
<title>tcp_close (388 samples, 6.52%)</title><rect x="740.6" y="1749" width="77.0" height="15.0" fill="rgb(225,67,39)" rx="2" ry="2" />
<text  x="743.61" y="1759.5" >tcp_close</text>
</g>
<g >
<title>SYSC_recvfrom (384 samples, 6.45%)</title><rect x="1046.6" y="1989" width="76.2" height="15.0" fill="rgb(217,137,34)" rx="2" ry="2" />
<text  x="1049.62" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>folly::EventBase::getBackend (3 samples, 0.05%)</title><rect x="66.7" y="1909" width="0.6" height="15.0" fill="rgb(253,25,34)" rx="2" ry="2" />
<text  x="69.72" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_xmit (254 samples, 4.27%)</title><rect x="279.3" y="1845" width="50.4" height="15.0" fill="rgb(252,51,3)" rx="2" ry="2" />
<text  x="282.32" y="1855.5" >tcp_w..</text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="801.1" y="1637" width="0.2" height="15.0" fill="rgb(212,6,2)" rx="2" ry="2" />
<text  x="804.10" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.84%)</title><rect x="658.3" y="1925" width="9.9" height="15.0" fill="rgb(235,175,14)" rx="2" ry="2" />
<text  x="661.31" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="289.2" y="1621" width="0.2" height="15.0" fill="rgb(223,166,19)" rx="2" ry="2" />
<text  x="292.23" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (122 samples, 2.05%)</title><rect x="103.4" y="1957" width="24.2" height="15.0" fill="rgb(252,78,33)" rx="2" ry="2" />
<text  x="106.41" y="1967.5" >[..</text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="735.5" y="1797" width="0.2" height="15.0" fill="rgb(249,57,14)" rx="2" ry="2" />
<text  x="738.45" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="167.5" y="1925" width="0.2" height="15.0" fill="rgb(222,125,35)" rx="2" ry="2" />
<text  x="170.47" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (4 samples, 0.07%)</title><rect x="72.3" y="1925" width="0.8" height="15.0" fill="rgb(253,112,6)" rx="2" ry="2" />
<text  x="75.27" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (15 samples, 0.25%)</title><rect x="692.6" y="2021" width="3.0" height="15.0" fill="rgb(223,28,52)" rx="2" ry="2" />
<text  x="695.62" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="923.9" y="1909" width="0.2" height="15.0" fill="rgb(244,214,45)" rx="2" ry="2" />
<text  x="926.86" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.2" y="2021" width="0.2" height="15.0" fill="rgb(247,110,41)" rx="2" ry="2" />
<text  x="583.17" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="548.6" y="1989" width="3.0" height="15.0" fill="rgb(240,202,3)" rx="2" ry="2" />
<text  x="551.64" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="702.1" y="1829" width="0.2" height="15.0" fill="rgb(234,161,45)" rx="2" ry="2" />
<text  x="705.13" y="1839.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1148.9" y="1893" width="0.2" height="15.0" fill="rgb(238,4,6)" rx="2" ry="2" />
<text  x="1151.95" y="1903.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (1 samples, 0.02%)</title><rect x="401.1" y="1909" width="0.2" height="15.0" fill="rgb(244,115,9)" rx="2" ry="2" />
<text  x="404.09" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="561.7" y="1749" width="0.2" height="15.0" fill="rgb(234,171,41)" rx="2" ry="2" />
<text  x="564.72" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="145.1" y="1877" width="0.2" height="15.0" fill="rgb(214,146,32)" rx="2" ry="2" />
<text  x="148.06" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.12%)</title><rect x="294.0" y="1461" width="1.4" height="15.0" fill="rgb(247,92,3)" rx="2" ry="2" />
<text  x="296.99" y="1471.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="328.3" y="1509" width="0.2" height="15.0" fill="rgb(223,91,11)" rx="2" ry="2" />
<text  x="331.30" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="689.8" y="1909" width="0.2" height="15.0" fill="rgb(253,13,24)" rx="2" ry="2" />
<text  x="692.84" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (124 samples, 2.08%)</title><rect x="289.8" y="1765" width="24.6" height="15.0" fill="rgb(233,133,34)" rx="2" ry="2" />
<text  x="292.83" y="1775.5" >i..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="855.6" y="1925" width="0.2" height="15.0" fill="rgb(239,132,22)" rx="2" ry="2" />
<text  x="858.63" y="1935.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="135.1" y="1925" width="0.2" height="15.0" fill="rgb(251,80,34)" rx="2" ry="2" />
<text  x="138.14" y="1935.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 0.02%)</title><rect x="362.2" y="1957" width="0.2" height="15.0" fill="rgb(235,0,5)" rx="2" ry="2" />
<text  x="365.22" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="975.6" y="1957" width="0.2" height="15.0" fill="rgb(250,17,13)" rx="2" ry="2" />
<text  x="978.62" y="1967.5" ></text>
</g>
<g >
<title>malloc (29 samples, 0.49%)</title><rect x="1183.3" y="2053" width="5.7" height="15.0" fill="rgb(218,0,31)" rx="2" ry="2" />
<text  x="1186.26" y="2063.5" ></text>
</g>
<g >
<title>event_assign (3 samples, 0.05%)</title><rect x="161.7" y="2021" width="0.6" height="15.0" fill="rgb(230,192,53)" rx="2" ry="2" />
<text  x="164.71" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="389.2" y="1797" width="0.2" height="15.0" fill="rgb(226,20,22)" rx="2" ry="2" />
<text  x="392.19" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="213.9" y="1877" width="0.4" height="15.0" fill="rgb(205,114,41)" rx="2" ry="2" />
<text  x="216.87" y="1887.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="618.2" y="2005" width="0.2" height="15.0" fill="rgb(248,91,53)" rx="2" ry="2" />
<text  x="621.25" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="989.7" y="1957" width="0.2" height="15.0" fill="rgb(211,97,16)" rx="2" ry="2" />
<text  x="992.70" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (47 samples, 0.79%)</title><rect x="556.2" y="1957" width="9.3" height="15.0" fill="rgb(246,117,6)" rx="2" ry="2" />
<text  x="559.17" y="1967.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="999.6" y="2005" width="0.2" height="15.0" fill="rgb(207,52,53)" rx="2" ry="2" />
<text  x="1002.61" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="992.3" y="1973" width="0.6" height="15.0" fill="rgb(216,32,1)" rx="2" ry="2" />
<text  x="995.28" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="156.0" y="1653" width="0.2" height="15.0" fill="rgb(244,104,0)" rx="2" ry="2" />
<text  x="158.96" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1093" width="17.5" height="15.0" fill="rgb(248,100,30)" rx="2" ry="2" />
<text  x="107.40" y="1103.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (5 samples, 0.08%)</title><rect x="846.5" y="1829" width="1.0" height="15.0" fill="rgb(224,157,11)" rx="2" ry="2" />
<text  x="849.51" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1123.4" y="1797" width="0.2" height="15.0" fill="rgb(242,84,12)" rx="2" ry="2" />
<text  x="1126.36" y="1807.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="975.4" y="1957" width="0.2" height="15.0" fill="rgb(241,117,32)" rx="2" ry="2" />
<text  x="978.42" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="250.8" y="1925" width="0.2" height="15.0" fill="rgb(219,114,54)" rx="2" ry="2" />
<text  x="253.76" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="289.0" y="1749" width="0.4" height="15.0" fill="rgb(237,50,36)" rx="2" ry="2" />
<text  x="292.04" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (297 samples, 4.99%)</title><rect x="354.5" y="2005" width="58.9" height="15.0" fill="rgb(237,92,34)" rx="2" ry="2" />
<text  x="357.48" y="2015.5" >do_sys..</text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="57.8" y="1941" width="0.6" height="15.0" fill="rgb(212,189,24)" rx="2" ry="2" />
<text  x="60.79" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="82.6" y="1925" width="0.2" height="15.0" fill="rgb(251,192,30)" rx="2" ry="2" />
<text  x="85.58" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="565.5" y="1813" width="0.6" height="15.0" fill="rgb(215,167,26)" rx="2" ry="2" />
<text  x="568.49" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (1 samples, 0.02%)</title><rect x="617.5" y="2037" width="0.2" height="15.0" fill="rgb(239,183,30)" rx="2" ry="2" />
<text  x="620.45" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="285.1" y="1653" width="0.2" height="15.0" fill="rgb(214,131,6)" rx="2" ry="2" />
<text  x="288.07" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (7 samples, 0.12%)</title><rect x="531.8" y="1973" width="1.4" height="15.0" fill="rgb(212,217,8)" rx="2" ry="2" />
<text  x="534.78" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="137.3" y="1957" width="0.2" height="15.0" fill="rgb(221,9,35)" rx="2" ry="2" />
<text  x="140.32" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="561.7" y="1733" width="0.2" height="15.0" fill="rgb(250,164,38)" rx="2" ry="2" />
<text  x="564.72" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (6 samples, 0.10%)</title><rect x="938.5" y="2005" width="1.2" height="15.0" fill="rgb(248,2,17)" rx="2" ry="2" />
<text  x="941.53" y="2015.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="339.8" y="1957" width="0.2" height="15.0" fill="rgb(207,217,52)" rx="2" ry="2" />
<text  x="342.81" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="509.0" y="1717" width="0.2" height="15.0" fill="rgb(232,158,27)" rx="2" ry="2" />
<text  x="511.97" y="1727.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (1 samples, 0.02%)</title><rect x="492.7" y="2037" width="0.2" height="15.0" fill="rgb(224,5,50)" rx="2" ry="2" />
<text  x="495.71" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_locked (4 samples, 0.07%)</title><rect x="294.4" y="1413" width="0.8" height="15.0" fill="rgb(227,151,10)" rx="2" ry="2" />
<text  x="297.39" y="1423.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="549.2" y="1589" width="0.2" height="15.0" fill="rgb(227,181,10)" rx="2" ry="2" />
<text  x="552.23" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.03%)</title><rect x="1017.7" y="2037" width="0.4" height="15.0" fill="rgb(243,68,51)" rx="2" ry="2" />
<text  x="1020.66" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="149.8" y="1893" width="0.4" height="15.0" fill="rgb(244,100,51)" rx="2" ry="2" />
<text  x="152.82" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="725" width="17.5" height="15.0" fill="rgb(251,9,34)" rx="2" ry="2" />
<text  x="107.40" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="544.9" y="1845" width="0.2" height="15.0" fill="rgb(210,122,1)" rx="2" ry="2" />
<text  x="547.87" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (247 samples, 4.15%)</title><rect x="42.9" y="2021" width="49.0" height="15.0" fill="rgb(248,126,36)" rx="2" ry="2" />
<text  x="45.92" y="2031.5" >foll..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="995.1" y="2005" width="0.3" height="15.0" fill="rgb(223,188,32)" rx="2" ry="2" />
<text  x="998.05" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (128 samples, 2.15%)</title><rect x="201.8" y="1989" width="25.4" height="15.0" fill="rgb(228,123,1)" rx="2" ry="2" />
<text  x="204.77" y="1999.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="192.9" y="1861" width="0.1" height="15.0" fill="rgb(213,206,17)" rx="2" ry="2" />
<text  x="195.85" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="401.9" y="1893" width="0.6" height="15.0" fill="rgb(216,193,42)" rx="2" ry="2" />
<text  x="404.88" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="572.4" y="1989" width="0.2" height="15.0" fill="rgb(213,93,28)" rx="2" ry="2" />
<text  x="575.43" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="17.5" y="2037" width="0.2" height="15.0" fill="rgb(222,50,53)" rx="2" ry="2" />
<text  x="20.54" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (8 samples, 0.13%)</title><rect x="573.4" y="2005" width="1.6" height="15.0" fill="rgb(222,87,15)" rx="2" ry="2" />
<text  x="576.43" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (77 samples, 1.29%)</title><rect x="1147.0" y="2037" width="15.2" height="15.0" fill="rgb(205,226,40)" rx="2" ry="2" />
<text  x="1149.96" y="2047.5" ></text>
</g>
<g >
<title>fsnotify (2 samples, 0.03%)</title><rect x="734.9" y="1797" width="0.4" height="15.0" fill="rgb(211,105,40)" rx="2" ry="2" />
<text  x="737.86" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (2 samples, 0.03%)</title><rect x="1145.6" y="2021" width="0.4" height="15.0" fill="rgb(226,105,34)" rx="2" ry="2" />
<text  x="1148.58" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="565.9" y="1669" width="0.2" height="15.0" fill="rgb(220,17,10)" rx="2" ry="2" />
<text  x="568.89" y="1679.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="402.3" y="1845" width="0.2" height="15.0" fill="rgb(209,96,37)" rx="2" ry="2" />
<text  x="405.28" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="272.0" y="1829" width="0.2" height="15.0" fill="rgb(242,120,4)" rx="2" ry="2" />
<text  x="274.98" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="126.6" y="1909" width="0.2" height="15.0" fill="rgb(217,2,42)" rx="2" ry="2" />
<text  x="129.61" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="886.2" y="2005" width="0.2" height="15.0" fill="rgb(250,121,8)" rx="2" ry="2" />
<text  x="889.17" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="850.1" y="1957" width="0.2" height="15.0" fill="rgb(227,228,26)" rx="2" ry="2" />
<text  x="853.08" y="1967.5" ></text>
</g>
<g >
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="463.6" y="1909" width="0.4" height="15.0" fill="rgb(248,143,20)" rx="2" ry="2" />
<text  x="466.56" y="1919.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="761.4" y="1509" width="0.2" height="15.0" fill="rgb(220,214,42)" rx="2" ry="2" />
<text  x="764.43" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="321.8" y="1733" width="0.2" height="15.0" fill="rgb(250,99,15)" rx="2" ry="2" />
<text  x="324.76" y="1743.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1103.3" y="1461" width="0.4" height="15.0" fill="rgb(211,138,42)" rx="2" ry="2" />
<text  x="1106.33" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="192.9" y="1973" width="0.1" height="15.0" fill="rgb(208,216,5)" rx="2" ry="2" />
<text  x="195.85" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (17 samples, 0.29%)</title><rect x="1166.0" y="2021" width="3.4" height="15.0" fill="rgb(206,177,45)" rx="2" ry="2" />
<text  x="1169.00" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (305 samples, 5.13%)</title><rect x="426.1" y="2005" width="60.5" height="15.0" fill="rgb(207,99,1)" rx="2" ry="2" />
<text  x="429.07" y="2015.5" >do_sys..</text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="668.2" y="1845" width="0.4" height="15.0" fill="rgb(226,39,11)" rx="2" ry="2" />
<text  x="671.22" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="360.2" y="1989" width="0.2" height="15.0" fill="rgb(246,163,20)" rx="2" ry="2" />
<text  x="363.23" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="881.2" y="1941" width="0.4" height="15.0" fill="rgb(243,164,3)" rx="2" ry="2" />
<text  x="884.22" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="861.4" y="1973" width="0.4" height="15.0" fill="rgb(212,131,20)" rx="2" ry="2" />
<text  x="864.38" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (2 samples, 0.03%)</title><rect x="164.7" y="1973" width="0.4" height="15.0" fill="rgb(250,105,54)" rx="2" ry="2" />
<text  x="167.69" y="1983.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="977.0" y="1925" width="1.0" height="15.0" fill="rgb(224,58,11)" rx="2" ry="2" />
<text  x="980.01" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (7 samples, 0.12%)</title><rect x="974.2" y="1973" width="1.4" height="15.0" fill="rgb(242,187,54)" rx="2" ry="2" />
<text  x="977.23" y="1983.5" ></text>
</g>
<g >
<title>sock_close (417 samples, 7.01%)</title><rect x="737.8" y="1797" width="82.7" height="15.0" fill="rgb(236,29,43)" rx="2" ry="2" />
<text  x="740.83" y="1807.5" >sock_close</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="328.3" y="1637" width="0.2" height="15.0" fill="rgb(207,213,36)" rx="2" ry="2" />
<text  x="331.30" y="1647.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="973.6" y="1973" width="0.2" height="15.0" fill="rgb(244,8,5)" rx="2" ry="2" />
<text  x="976.63" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="32.8" y="1909" width="0.2" height="15.0" fill="rgb(242,24,1)" rx="2" ry="2" />
<text  x="35.81" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (4 samples, 0.07%)</title><rect x="74.7" y="1957" width="0.7" height="15.0" fill="rgb(224,60,0)" rx="2" ry="2" />
<text  x="77.65" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="480.6" y="1941" width="0.2" height="15.0" fill="rgb(212,174,45)" rx="2" ry="2" />
<text  x="483.61" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (8 samples, 0.13%)</title><rect x="803.5" y="1605" width="1.6" height="15.0" fill="rgb(218,55,7)" rx="2" ry="2" />
<text  x="806.48" y="1615.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (6 samples, 0.10%)</title><rect x="577.8" y="2005" width="1.2" height="15.0" fill="rgb(231,64,0)" rx="2" ry="2" />
<text  x="580.79" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="689.4" y="1829" width="0.2" height="15.0" fill="rgb(209,157,54)" rx="2" ry="2" />
<text  x="692.44" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="132.8" y="1941" width="0.2" height="15.0" fill="rgb(253,205,21)" rx="2" ry="2" />
<text  x="135.76" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="487.2" y="1845" width="0.6" height="15.0" fill="rgb(232,150,24)" rx="2" ry="2" />
<text  x="490.16" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="885.8" y="1909" width="0.2" height="15.0" fill="rgb(241,107,16)" rx="2" ry="2" />
<text  x="888.78" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="859.2" y="1989" width="0.8" height="15.0" fill="rgb(241,143,13)" rx="2" ry="2" />
<text  x="862.20" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="850.5" y="1957" width="0.2" height="15.0" fill="rgb(208,103,53)" rx="2" ry="2" />
<text  x="853.48" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="131.8" y="1973" width="0.6" height="15.0" fill="rgb(249,147,21)" rx="2" ry="2" />
<text  x="134.77" y="1983.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="14.2" y="1877" width="0.2" height="15.0" fill="rgb(221,219,33)" rx="2" ry="2" />
<text  x="17.16" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="103.4" y="1653" width="0.2" height="15.0" fill="rgb(219,220,41)" rx="2" ry="2" />
<text  x="106.41" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (185 samples, 3.11%)</title><rect x="580.8" y="2037" width="36.7" height="15.0" fill="rgb(242,108,44)" rx="2" ry="2" />
<text  x="583.76" y="2047.5" >fac..</text>
</g>
<g >
<title>process_backlog (11 samples, 0.18%)</title><rect x="293.2" y="1653" width="2.2" height="15.0" fill="rgb(244,229,36)" rx="2" ry="2" />
<text  x="296.20" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.8" y="1957" width="0.2" height="15.0" fill="rgb(254,25,9)" rx="2" ry="2" />
<text  x="579.80" y="1967.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="1068.8" y="1813" width="0.2" height="15.0" fill="rgb(229,48,31)" rx="2" ry="2" />
<text  x="1071.83" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="293.0" y="1381" width="0.2" height="15.0" fill="rgb(217,108,14)" rx="2" ry="2" />
<text  x="296.00" y="1391.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="622.4" y="2005" width="0.2" height="15.0" fill="rgb(237,109,54)" rx="2" ry="2" />
<text  x="625.41" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="849.7" y="1829" width="0.2" height="15.0" fill="rgb(215,128,50)" rx="2" ry="2" />
<text  x="852.68" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.16%)</title><rect x="104.4" y="69" width="13.7" height="15.0" fill="rgb(242,228,34)" rx="2" ry="2" />
<text  x="107.40" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="58.2" y="1669" width="0.2" height="15.0" fill="rgb(253,72,33)" rx="2" ry="2" />
<text  x="61.19" y="1679.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="161.3" y="2021" width="0.4" height="15.0" fill="rgb(224,102,52)" rx="2" ry="2" />
<text  x="164.32" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="389.2" y="1925" width="0.2" height="15.0" fill="rgb(234,2,0)" rx="2" ry="2" />
<text  x="392.19" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.6" y="1845" width="0.2" height="15.0" fill="rgb(210,220,16)" rx="2" ry="2" />
<text  x="128.62" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="178.4" y="1941" width="0.4" height="15.0" fill="rgb(233,203,48)" rx="2" ry="2" />
<text  x="181.37" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="148.8" y="1925" width="0.2" height="15.0" fill="rgb(223,192,2)" rx="2" ry="2" />
<text  x="151.82" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="979.0" y="1925" width="0.2" height="15.0" fill="rgb(236,37,39)" rx="2" ry="2" />
<text  x="981.99" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="378.3" y="1909" width="1.8" height="15.0" fill="rgb(239,80,29)" rx="2" ry="2" />
<text  x="381.28" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="646.2" y="1941" width="0.2" height="15.0" fill="rgb(214,224,39)" rx="2" ry="2" />
<text  x="649.21" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (1 samples, 0.02%)</title><rect x="570.3" y="2005" width="0.2" height="15.0" fill="rgb(247,64,44)" rx="2" ry="2" />
<text  x="573.25" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="577.6" y="1973" width="0.2" height="15.0" fill="rgb(217,121,46)" rx="2" ry="2" />
<text  x="580.59" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (69 samples, 1.16%)</title><rect x="657.7" y="1957" width="13.7" height="15.0" fill="rgb(223,113,21)" rx="2" ry="2" />
<text  x="660.71" y="1967.5" ></text>
</g>
<g >
<title>sys_getpeername (2 samples, 0.03%)</title><rect x="701.5" y="1845" width="0.4" height="15.0" fill="rgb(226,109,20)" rx="2" ry="2" />
<text  x="704.54" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="1006.0" y="1909" width="0.2" height="15.0" fill="rgb(236,206,13)" rx="2" ry="2" />
<text  x="1008.96" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="551.8" y="1893" width="0.2" height="15.0" fill="rgb(247,41,36)" rx="2" ry="2" />
<text  x="554.81" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (197 samples, 3.31%)</title><rect x="759.1" y="1685" width="39.0" height="15.0" fill="rgb(218,34,25)" rx="2" ry="2" />
<text  x="762.05" y="1695.5" >__t..</text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="175.4" y="1957" width="0.2" height="15.0" fill="rgb(230,4,21)" rx="2" ry="2" />
<text  x="178.40" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="565.9" y="1605" width="0.2" height="15.0" fill="rgb(229,180,46)" rx="2" ry="2" />
<text  x="568.89" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="827.1" y="1733" width="0.2" height="15.0" fill="rgb(210,211,13)" rx="2" ry="2" />
<text  x="830.08" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (7 samples, 0.12%)</title><rect x="917.9" y="1893" width="1.4" height="15.0" fill="rgb(218,9,17)" rx="2" ry="2" />
<text  x="920.91" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (25 samples, 0.42%)</title><rect x="988.7" y="1989" width="5.0" height="15.0" fill="rgb(205,2,5)" rx="2" ry="2" />
<text  x="991.71" y="1999.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (2 samples, 0.03%)</title><rect x="530.2" y="2005" width="0.4" height="15.0" fill="rgb(244,229,52)" rx="2" ry="2" />
<text  x="533.19" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="878.6" y="1925" width="1.2" height="15.0" fill="rgb(228,11,18)" rx="2" ry="2" />
<text  x="881.64" y="1935.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (1 samples, 0.02%)</title><rect x="1148.0" y="1973" width="0.2" height="15.0" fill="rgb(209,181,20)" rx="2" ry="2" />
<text  x="1150.96" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="565" width="17.5" height="15.0" fill="rgb(221,23,16)" rx="2" ry="2" />
<text  x="107.40" y="575.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="112.3" y="53" width="1.0" height="15.0" fill="rgb(236,137,0)" rx="2" ry="2" />
<text  x="115.33" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1182.1" y="1973" width="0.2" height="15.0" fill="rgb(244,180,1)" rx="2" ry="2" />
<text  x="1185.07" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="285.1" y="1637" width="0.2" height="15.0" fill="rgb(251,214,23)" rx="2" ry="2" />
<text  x="288.07" y="1647.5" ></text>
</g>
<g >
<title>folly::canSdallocx (1 samples, 0.02%)</title><rect x="1175.9" y="2053" width="0.2" height="15.0" fill="rgb(235,48,26)" rx="2" ry="2" />
<text  x="1178.92" y="2063.5" ></text>
</g>
<g >
<title>SYSC_getsockname (32 samples, 0.54%)</title><rect x="592.3" y="1877" width="6.3" height="15.0" fill="rgb(254,30,17)" rx="2" ry="2" />
<text  x="595.27" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (5 samples, 0.08%)</title><rect x="877.3" y="1941" width="0.9" height="15.0" fill="rgb(243,181,34)" rx="2" ry="2" />
<text  x="880.25" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="516.1" y="1941" width="0.2" height="15.0" fill="rgb(205,208,10)" rx="2" ry="2" />
<text  x="519.11" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="806.5" y="1461" width="0.1" height="15.0" fill="rgb(224,108,41)" rx="2" ry="2" />
<text  x="809.45" y="1471.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="199.8" y="2021" width="0.2" height="15.0" fill="rgb(232,46,21)" rx="2" ry="2" />
<text  x="202.79" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="292.8" y="1653" width="0.4" height="15.0" fill="rgb(254,97,24)" rx="2" ry="2" />
<text  x="295.80" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (51 samples, 0.86%)</title><rect x="1101.7" y="1621" width="10.2" height="15.0" fill="rgb(211,152,21)" rx="2" ry="2" />
<text  x="1104.75" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="726.5" y="1637" width="0.2" height="15.0" fill="rgb(244,140,17)" rx="2" ry="2" />
<text  x="729.53" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (35 samples, 0.59%)</title><rect x="214.5" y="1925" width="6.9" height="15.0" fill="rgb(230,0,28)" rx="2" ry="2" />
<text  x="217.47" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (4 samples, 0.07%)</title><rect x="837.6" y="1941" width="0.8" height="15.0" fill="rgb(243,192,34)" rx="2" ry="2" />
<text  x="840.59" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="192.9" y="1733" width="0.1" height="15.0" fill="rgb(242,140,28)" rx="2" ry="2" />
<text  x="195.85" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="343.6" y="1797" width="0.2" height="15.0" fill="rgb(207,166,43)" rx="2" ry="2" />
<text  x="346.57" y="1807.5" ></text>
</g>
<g >
<title>sys_getpeername (19 samples, 0.32%)</title><rect x="664.5" y="1893" width="3.7" height="15.0" fill="rgb(221,111,6)" rx="2" ry="2" />
<text  x="667.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_setsockopt (22 samples, 0.37%)</title><rect x="683.3" y="1909" width="4.4" height="15.0" fill="rgb(216,6,27)" rx="2" ry="2" />
<text  x="686.29" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="575.8" y="1941" width="0.4" height="15.0" fill="rgb(206,66,18)" rx="2" ry="2" />
<text  x="578.81" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="345.0" y="2021" width="3.1" height="15.0" fill="rgb(254,82,11)" rx="2" ry="2" />
<text  x="347.96" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="213.3" y="1877" width="0.2" height="15.0" fill="rgb(223,203,33)" rx="2" ry="2" />
<text  x="216.28" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="122.1" y="1381" width="0.1" height="15.0" fill="rgb(216,14,33)" rx="2" ry="2" />
<text  x="125.05" y="1391.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="372.7" y="1909" width="0.2" height="15.0" fill="rgb(236,165,4)" rx="2" ry="2" />
<text  x="375.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1221" width="17.5" height="15.0" fill="rgb(211,68,6)" rx="2" ry="2" />
<text  x="107.40" y="1231.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="482.6" y="1925" width="0.2" height="15.0" fill="rgb(239,217,10)" rx="2" ry="2" />
<text  x="485.59" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="114.3" y="37" width="0.4" height="15.0" fill="rgb(210,193,38)" rx="2" ry="2" />
<text  x="117.32" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="319.2" y="1589" width="0.2" height="15.0" fill="rgb(245,45,27)" rx="2" ry="2" />
<text  x="322.18" y="1599.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="944.7" y="1989" width="0.4" height="15.0" fill="rgb(208,193,18)" rx="2" ry="2" />
<text  x="947.68" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="579.2" y="1909" width="0.2" height="15.0" fill="rgb(242,43,40)" rx="2" ry="2" />
<text  x="582.18" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (13 samples, 0.22%)</title><rect x="1176.3" y="2053" width="2.6" height="15.0" fill="rgb(227,118,47)" rx="2" ry="2" />
<text  x="1179.32" y="2063.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="549.2" y="1653" width="0.2" height="15.0" fill="rgb(248,101,19)" rx="2" ry="2" />
<text  x="552.23" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="468.9" y="1957" width="0.2" height="15.0" fill="rgb(222,129,46)" rx="2" ry="2" />
<text  x="471.91" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (21 samples, 0.35%)</title><rect x="133.8" y="1989" width="4.1" height="15.0" fill="rgb(223,137,6)" rx="2" ry="2" />
<text  x="136.75" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="946.1" y="2005" width="0.2" height="15.0" fill="rgb(223,181,31)" rx="2" ry="2" />
<text  x="949.07" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (22 samples, 0.37%)</title><rect x="605.0" y="1893" width="4.3" height="15.0" fill="rgb(236,75,43)" rx="2" ry="2" />
<text  x="607.96" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (7 samples, 0.12%)</title><rect x="544.5" y="1941" width="1.4" height="15.0" fill="rgb(217,3,3)" rx="2" ry="2" />
<text  x="547.47" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="156.0" y="1701" width="0.2" height="15.0" fill="rgb(244,61,49)" rx="2" ry="2" />
<text  x="158.96" y="1711.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.02%)</title><rect x="393.7" y="1893" width="0.2" height="15.0" fill="rgb(216,69,33)" rx="2" ry="2" />
<text  x="396.75" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="149.2" y="1909" width="0.2" height="15.0" fill="rgb(211,189,44)" rx="2" ry="2" />
<text  x="152.22" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="213" width="17.5" height="15.0" fill="rgb(212,22,24)" rx="2" ry="2" />
<text  x="107.40" y="223.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="226.2" y="1957" width="0.2" height="15.0" fill="rgb(242,41,33)" rx="2" ry="2" />
<text  x="229.17" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="501.8" y="1637" width="0.2" height="15.0" fill="rgb(240,192,1)" rx="2" ry="2" />
<text  x="504.83" y="1647.5" ></text>
</g>
<g >
<title>task_work_add (3 samples, 0.05%)</title><rect x="824.5" y="1797" width="0.6" height="15.0" fill="rgb(220,41,11)" rx="2" ry="2" />
<text  x="827.50" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="58.2" y="1765" width="0.2" height="15.0" fill="rgb(234,18,33)" rx="2" ry="2" />
<text  x="61.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="991.9" y="1957" width="0.2" height="15.0" fill="rgb(223,89,40)" rx="2" ry="2" />
<text  x="994.88" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="527.0" y="1989" width="0.2" height="15.0" fill="rgb(205,52,20)" rx="2" ry="2" />
<text  x="530.02" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (3 samples, 0.05%)</title><rect x="215.5" y="1909" width="0.6" height="15.0" fill="rgb(217,28,37)" rx="2" ry="2" />
<text  x="218.46" y="1919.5" ></text>
</g>
<g >
<title>_find_next_bit (3 samples, 0.05%)</title><rect x="363.0" y="1925" width="0.6" height="15.0" fill="rgb(229,187,22)" rx="2" ry="2" />
<text  x="366.01" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (78 samples, 1.31%)</title><rect x="656.1" y="1989" width="15.5" height="15.0" fill="rgb(227,73,32)" rx="2" ry="2" />
<text  x="659.12" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="402.5" y="1893" width="0.2" height="15.0" fill="rgb(217,211,3)" rx="2" ry="2" />
<text  x="405.47" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="48.5" y="1973" width="0.2" height="15.0" fill="rgb(251,95,15)" rx="2" ry="2" />
<text  x="51.47" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (1 samples, 0.02%)</title><rect x="542.3" y="1989" width="0.2" height="15.0" fill="rgb(233,223,53)" rx="2" ry="2" />
<text  x="545.29" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="613.1" y="1829" width="0.4" height="15.0" fill="rgb(215,40,49)" rx="2" ry="2" />
<text  x="616.09" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="564.9" y="1749" width="0.2" height="15.0" fill="rgb(214,8,10)" rx="2" ry="2" />
<text  x="567.90" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="289.0" y="1733" width="0.4" height="15.0" fill="rgb(251,111,47)" rx="2" ry="2" />
<text  x="292.04" y="1743.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="689.8" y="1829" width="0.2" height="15.0" fill="rgb(205,116,40)" rx="2" ry="2" />
<text  x="692.84" y="1839.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="377.9" y="1845" width="0.2" height="15.0" fill="rgb(253,121,2)" rx="2" ry="2" />
<text  x="380.88" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1006.2" y="1909" width="0.2" height="15.0" fill="rgb(209,166,14)" rx="2" ry="2" />
<text  x="1009.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="111.7" y="37" width="0.2" height="15.0" fill="rgb(208,33,25)" rx="2" ry="2" />
<text  x="114.74" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="945.7" y="2005" width="0.2" height="15.0" fill="rgb(253,210,27)" rx="2" ry="2" />
<text  x="948.67" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1158.9" y="1589" width="0.2" height="15.0" fill="rgb(252,189,1)" rx="2" ry="2" />
<text  x="1161.86" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="402.9" y="1829" width="0.2" height="15.0" fill="rgb(254,163,20)" rx="2" ry="2" />
<text  x="405.87" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1023.8" y="1973" width="0.2" height="15.0" fill="rgb(217,18,20)" rx="2" ry="2" />
<text  x="1026.81" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1158.9" y="1861" width="0.2" height="15.0" fill="rgb(238,47,29)" rx="2" ry="2" />
<text  x="1161.86" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="734.7" y="1669" width="0.2" height="15.0" fill="rgb(246,181,1)" rx="2" ry="2" />
<text  x="737.66" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="564.9" y="1877" width="0.2" height="15.0" fill="rgb(220,123,37)" rx="2" ry="2" />
<text  x="567.90" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="656.9" y="1925" width="0.2" height="15.0" fill="rgb(213,147,8)" rx="2" ry="2" />
<text  x="659.92" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="536.3" y="1957" width="1.0" height="15.0" fill="rgb(229,5,24)" rx="2" ry="2" />
<text  x="539.34" y="1967.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="903.6" y="1893" width="0.2" height="15.0" fill="rgb(226,103,21)" rx="2" ry="2" />
<text  x="906.63" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="365.2" y="1925" width="0.4" height="15.0" fill="rgb(214,24,3)" rx="2" ry="2" />
<text  x="368.19" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="995.6" y="2005" width="0.2" height="15.0" fill="rgb(248,126,3)" rx="2" ry="2" />
<text  x="998.65" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="548.2" y="1957" width="0.2" height="15.0" fill="rgb(220,158,12)" rx="2" ry="2" />
<text  x="551.24" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="360.2" y="1765" width="0.2" height="15.0" fill="rgb(241,44,40)" rx="2" ry="2" />
<text  x="363.23" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="885.8" y="1925" width="0.2" height="15.0" fill="rgb(215,22,37)" rx="2" ry="2" />
<text  x="888.78" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (52 samples, 0.87%)</title><rect x="1101.5" y="1637" width="10.4" height="15.0" fill="rgb(252,199,11)" rx="2" ry="2" />
<text  x="1104.55" y="1647.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.0" y="1621" width="0.2" height="15.0" fill="rgb(216,160,26)" rx="2" ry="2" />
<text  x="126.04" y="1631.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="493.7" y="1941" width="0.2" height="15.0" fill="rgb(209,170,38)" rx="2" ry="2" />
<text  x="496.70" y="1951.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="1112.1" y="1749" width="0.4" height="15.0" fill="rgb(223,3,34)" rx="2" ry="2" />
<text  x="1115.06" y="1759.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (9 samples, 0.15%)</title><rect x="1115.2" y="1925" width="1.8" height="15.0" fill="rgb(238,85,14)" rx="2" ry="2" />
<text  x="1118.23" y="1935.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (1 samples, 0.02%)</title><rect x="180.4" y="2021" width="0.2" height="15.0" fill="rgb(250,53,41)" rx="2" ry="2" />
<text  x="183.36" y="2031.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="524.4" y="1973" width="0.2" height="15.0" fill="rgb(211,181,50)" rx="2" ry="2" />
<text  x="527.44" y="1983.5" ></text>
</g>
<g >
<title>syscall (15 samples, 0.25%)</title><rect x="1019.8" y="2037" width="3.0" height="15.0" fill="rgb(234,8,41)" rx="2" ry="2" />
<text  x="1022.84" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="644.2" y="1797" width="0.2" height="15.0" fill="rgb(240,180,54)" rx="2" ry="2" />
<text  x="647.23" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="973.4" y="1797" width="0.2" height="15.0" fill="rgb(214,38,10)" rx="2" ry="2" />
<text  x="976.44" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (2 samples, 0.03%)</title><rect x="212.9" y="1909" width="0.4" height="15.0" fill="rgb(212,163,3)" rx="2" ry="2" />
<text  x="215.88" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="994.5" y="1973" width="0.6" height="15.0" fill="rgb(227,38,6)" rx="2" ry="2" />
<text  x="997.46" y="1983.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (10 samples, 0.17%)</title><rect x="337.6" y="1925" width="2.0" height="15.0" fill="rgb(246,148,54)" rx="2" ry="2" />
<text  x="340.62" y="1935.5" ></text>
</g>
<g >
<title>[mcrouter] (27 samples, 0.45%)</title><rect x="979.0" y="1941" width="5.3" height="15.0" fill="rgb(205,124,44)" rx="2" ry="2" />
<text  x="981.99" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="644.2" y="1637" width="0.2" height="15.0" fill="rgb(216,53,30)" rx="2" ry="2" />
<text  x="647.23" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(210,106,2)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="735.7" y="1797" width="0.1" height="15.0" fill="rgb(229,106,47)" rx="2" ry="2" />
<text  x="738.65" y="1807.5" ></text>
</g>
<g >
<title>vfprintf (2 samples, 0.03%)</title><rect x="1131.5" y="2037" width="0.4" height="15.0" fill="rgb(227,62,9)" rx="2" ry="2" />
<text  x="1134.50" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="501.8" y="1605" width="0.2" height="15.0" fill="rgb(212,185,12)" rx="2" ry="2" />
<text  x="504.83" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (5 samples, 0.08%)</title><rect x="91.9" y="2021" width="1.0" height="15.0" fill="rgb(234,222,16)" rx="2" ry="2" />
<text  x="94.91" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1017.5" y="1989" width="0.2" height="15.0" fill="rgb(214,214,41)" rx="2" ry="2" />
<text  x="1020.46" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="668.2" y="1669" width="0.2" height="15.0" fill="rgb(238,115,10)" rx="2" ry="2" />
<text  x="671.22" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.5" y="1989" width="0.2" height="15.0" fill="rgb(229,14,3)" rx="2" ry="2" />
<text  x="966.52" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="527.2" y="1989" width="0.4" height="15.0" fill="rgb(223,75,47)" rx="2" ry="2" />
<text  x="530.22" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="42.7" y="2005" width="0.2" height="15.0" fill="rgb(236,159,5)" rx="2" ry="2" />
<text  x="45.72" y="2015.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="243.8" y="1701" width="0.2" height="15.0" fill="rgb(227,23,46)" rx="2" ry="2" />
<text  x="246.82" y="1711.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="798.3" y="1685" width="0.8" height="15.0" fill="rgb(211,33,6)" rx="2" ry="2" />
<text  x="801.32" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1165.2" y="2053" width="0.2" height="15.0" fill="rgb(228,113,19)" rx="2" ry="2" />
<text  x="1168.21" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="501.8" y="1669" width="0.2" height="15.0" fill="rgb(240,140,8)" rx="2" ry="2" />
<text  x="504.83" y="1679.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="17.5" y="1989" width="0.2" height="15.0" fill="rgb(247,51,11)" rx="2" ry="2" />
<text  x="20.54" y="1999.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="523.8" y="1957" width="0.2" height="15.0" fill="rgb(234,155,52)" rx="2" ry="2" />
<text  x="526.85" y="1967.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="821.1" y="1813" width="0.2" height="15.0" fill="rgb(232,173,16)" rx="2" ry="2" />
<text  x="824.13" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="516.1" y="1957" width="0.2" height="15.0" fill="rgb(238,224,49)" rx="2" ry="2" />
<text  x="519.11" y="1967.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (62 samples, 1.04%)</title><rect x="1100.4" y="1877" width="12.3" height="15.0" fill="rgb(249,189,46)" rx="2" ry="2" />
<text  x="1103.36" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="962.3" y="1845" width="0.2" height="15.0" fill="rgb(218,137,45)" rx="2" ry="2" />
<text  x="965.33" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="64.3" y="1877" width="0.2" height="15.0" fill="rgb(247,2,15)" rx="2" ry="2" />
<text  x="67.34" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="82.0" y="1925" width="0.6" height="15.0" fill="rgb(221,158,38)" rx="2" ry="2" />
<text  x="84.99" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="343.6" y="1701" width="0.2" height="15.0" fill="rgb(226,94,2)" rx="2" ry="2" />
<text  x="346.57" y="1711.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="875.7" y="1909" width="0.2" height="15.0" fill="rgb(230,226,46)" rx="2" ry="2" />
<text  x="878.66" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="169.6" y="1989" width="0.2" height="15.0" fill="rgb(253,199,23)" rx="2" ry="2" />
<text  x="172.65" y="1999.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="277.9" y="1877" width="0.2" height="15.0" fill="rgb(241,186,52)" rx="2" ry="2" />
<text  x="280.93" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (38 samples, 0.64%)</title><rect x="916.3" y="1909" width="7.6" height="15.0" fill="rgb(240,106,36)" rx="2" ry="2" />
<text  x="919.32" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="727.5" y="1701" width="0.6" height="15.0" fill="rgb(224,148,20)" rx="2" ry="2" />
<text  x="730.52" y="1711.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="466.5" y="1893" width="0.2" height="15.0" fill="rgb(216,135,13)" rx="2" ry="2" />
<text  x="469.53" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="17.5" y="1957" width="0.2" height="15.0" fill="rgb(247,9,19)" rx="2" ry="2" />
<text  x="20.54" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="904.6" y="2005" width="0.2" height="15.0" fill="rgb(219,200,31)" rx="2" ry="2" />
<text  x="907.62" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="564.9" y="1685" width="0.2" height="15.0" fill="rgb(214,125,31)" rx="2" ry="2" />
<text  x="567.90" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="657.1" y="1813" width="0.2" height="15.0" fill="rgb(251,182,45)" rx="2" ry="2" />
<text  x="660.12" y="1823.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="847.9" y="1877" width="0.6" height="15.0" fill="rgb(235,83,15)" rx="2" ry="2" />
<text  x="850.90" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.8" y="1861" width="0.2" height="15.0" fill="rgb(254,229,30)" rx="2" ry="2" />
<text  x="128.82" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (23 samples, 0.39%)</title><rect x="537.9" y="2005" width="4.6" height="15.0" fill="rgb(210,183,5)" rx="2" ry="2" />
<text  x="540.93" y="2015.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (3 samples, 0.05%)</title><rect x="577.2" y="2005" width="0.6" height="15.0" fill="rgb(251,87,4)" rx="2" ry="2" />
<text  x="580.19" y="2015.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="798.7" y="1653" width="0.4" height="15.0" fill="rgb(226,126,31)" rx="2" ry="2" />
<text  x="801.72" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="457.2" y="1765" width="0.2" height="15.0" fill="rgb(240,144,45)" rx="2" ry="2" />
<text  x="460.21" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="995.4" y="2005" width="0.2" height="15.0" fill="rgb(253,172,15)" rx="2" ry="2" />
<text  x="998.45" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="643.8" y="1941" width="0.2" height="15.0" fill="rgb(218,37,45)" rx="2" ry="2" />
<text  x="646.83" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8 samples, 0.13%)</title><rect x="408.0" y="1909" width="1.6" height="15.0" fill="rgb(252,220,7)" rx="2" ry="2" />
<text  x="411.03" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="130.0" y="1989" width="0.4" height="15.0" fill="rgb(238,149,28)" rx="2" ry="2" />
<text  x="132.98" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="565.5" y="1941" width="0.6" height="15.0" fill="rgb(215,223,9)" rx="2" ry="2" />
<text  x="568.49" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="552.6" y="1813" width="0.2" height="15.0" fill="rgb(240,228,29)" rx="2" ry="2" />
<text  x="555.60" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="59.0" y="1957" width="0.2" height="15.0" fill="rgb(234,11,33)" rx="2" ry="2" />
<text  x="61.98" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="514.7" y="1925" width="0.2" height="15.0" fill="rgb(225,121,1)" rx="2" ry="2" />
<text  x="517.72" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.22%)</title><rect x="241.0" y="1941" width="2.6" height="15.0" fill="rgb(221,2,27)" rx="2" ry="2" />
<text  x="244.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.5" y="2005" width="0.2" height="15.0" fill="rgb(207,26,50)" rx="2" ry="2" />
<text  x="966.52" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="457.0" y="1781" width="0.4" height="15.0" fill="rgb(233,30,12)" rx="2" ry="2" />
<text  x="460.01" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="637.3" y="1957" width="0.2" height="15.0" fill="rgb(214,146,13)" rx="2" ry="2" />
<text  x="640.28" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1012.5" y="1893" width="0.2" height="15.0" fill="rgb(230,202,44)" rx="2" ry="2" />
<text  x="1015.50" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="689.4" y="1701" width="0.2" height="15.0" fill="rgb(227,183,0)" rx="2" ry="2" />
<text  x="692.44" y="1711.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (1 samples, 0.02%)</title><rect x="513.3" y="1989" width="0.2" height="15.0" fill="rgb(212,119,46)" rx="2" ry="2" />
<text  x="516.33" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.7" y="1893" width="0.2" height="15.0" fill="rgb(229,25,29)" rx="2" ry="2" />
<text  x="145.68" y="1903.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="549.2" y="1445" width="0.2" height="15.0" fill="rgb(210,88,54)" rx="2" ry="2" />
<text  x="552.23" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="564.9" y="1765" width="0.2" height="15.0" fill="rgb(228,192,16)" rx="2" ry="2" />
<text  x="567.90" y="1775.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="705.9" y="1941" width="0.2" height="15.0" fill="rgb(226,140,31)" rx="2" ry="2" />
<text  x="708.90" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="457.4" y="1973" width="0.2" height="15.0" fill="rgb(227,41,43)" rx="2" ry="2" />
<text  x="460.41" y="1983.5" ></text>
</g>
<g >
<title>release_sock (12 samples, 0.20%)</title><rect x="384.6" y="1941" width="2.4" height="15.0" fill="rgb(219,220,30)" rx="2" ry="2" />
<text  x="387.63" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_perm (3 samples, 0.05%)</title><rect x="666.0" y="1829" width="0.6" height="15.0" fill="rgb(216,49,20)" rx="2" ry="2" />
<text  x="669.04" y="1839.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="501.8" y="1573" width="0.2" height="15.0" fill="rgb(230,139,19)" rx="2" ry="2" />
<text  x="504.83" y="1583.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (33 samples, 0.55%)</title><rect x="305.3" y="1685" width="6.5" height="15.0" fill="rgb(210,162,16)" rx="2" ry="2" />
<text  x="308.30" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="646.2" y="1861" width="0.2" height="15.0" fill="rgb(208,47,33)" rx="2" ry="2" />
<text  x="649.21" y="1871.5" ></text>
</g>
<g >
<title>_copy_to_iter (16 samples, 0.27%)</title><rect x="1092.6" y="1909" width="3.2" height="15.0" fill="rgb(212,184,51)" rx="2" ry="2" />
<text  x="1095.63" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1012.5" y="1877" width="0.2" height="15.0" fill="rgb(234,210,47)" rx="2" ry="2" />
<text  x="1015.50" y="1887.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1068.6" y="1781" width="0.2" height="15.0" fill="rgb(212,200,32)" rx="2" ry="2" />
<text  x="1071.63" y="1791.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="613.7" y="1877" width="0.2" height="15.0" fill="rgb(227,80,49)" rx="2" ry="2" />
<text  x="616.68" y="1887.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="501.6" y="1765" width="0.2" height="15.0" fill="rgb(233,24,2)" rx="2" ry="2" />
<text  x="504.63" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="572.4" y="1893" width="0.2" height="15.0" fill="rgb(249,90,4)" rx="2" ry="2" />
<text  x="575.43" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="633.9" y="1925" width="0.2" height="15.0" fill="rgb(244,133,35)" rx="2" ry="2" />
<text  x="636.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="378.1" y="1877" width="0.2" height="15.0" fill="rgb(221,72,37)" rx="2" ry="2" />
<text  x="381.08" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="405" width="17.5" height="15.0" fill="rgb(245,91,42)" rx="2" ry="2" />
<text  x="107.40" y="415.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="997" width="17.5" height="15.0" fill="rgb(239,56,22)" rx="2" ry="2" />
<text  x="107.40" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="186.7" y="1861" width="0.2" height="15.0" fill="rgb(224,219,29)" rx="2" ry="2" />
<text  x="189.70" y="1871.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.02%)</title><rect x="1132.7" y="2053" width="0.2" height="15.0" fill="rgb(212,214,21)" rx="2" ry="2" />
<text  x="1135.69" y="2063.5" ></text>
</g>
<g >
<title>dput (63 samples, 1.06%)</title><rect x="722.4" y="1797" width="12.5" height="15.0" fill="rgb(216,170,31)" rx="2" ry="2" />
<text  x="725.36" y="1807.5" ></text>
</g>
<g >
<title>native_write_msr (15 samples, 0.25%)</title><rect x="11.0" y="1829" width="3.0" height="15.0" fill="rgb(251,1,7)" rx="2" ry="2" />
<text  x="13.99" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="411.2" y="1925" width="0.2" height="15.0" fill="rgb(210,25,49)" rx="2" ry="2" />
<text  x="414.20" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (2 samples, 0.03%)</title><rect x="895.1" y="1973" width="0.4" height="15.0" fill="rgb(219,112,25)" rx="2" ry="2" />
<text  x="898.10" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="167.9" y="2021" width="0.2" height="15.0" fill="rgb(248,19,20)" rx="2" ry="2" />
<text  x="170.86" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1096.8" y="1813" width="0.2" height="15.0" fill="rgb(224,176,26)" rx="2" ry="2" />
<text  x="1099.79" y="1823.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="554.6" y="1909" width="0.2" height="15.0" fill="rgb(217,89,3)" rx="2" ry="2" />
<text  x="557.58" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="321.0" y="1685" width="0.2" height="15.0" fill="rgb(243,212,0)" rx="2" ry="2" />
<text  x="323.96" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="580.6" y="2021" width="0.2" height="15.0" fill="rgb(223,127,50)" rx="2" ry="2" />
<text  x="583.56" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (3 samples, 0.05%)</title><rect x="548.8" y="1957" width="0.6" height="15.0" fill="rgb(244,175,20)" rx="2" ry="2" />
<text  x="551.83" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="531.6" y="2021" width="0.2" height="15.0" fill="rgb(220,162,39)" rx="2" ry="2" />
<text  x="534.58" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="399.3" y="1877" width="0.2" height="15.0" fill="rgb(222,65,23)" rx="2" ry="2" />
<text  x="402.30" y="1887.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (14 samples, 0.24%)</title><rect x="269.2" y="1829" width="2.8" height="15.0" fill="rgb(234,63,20)" rx="2" ry="2" />
<text  x="272.20" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="118.5" y="53" width="0.6" height="15.0" fill="rgb(248,122,54)" rx="2" ry="2" />
<text  x="121.48" y="63.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="509.0" y="1909" width="0.2" height="15.0" fill="rgb(247,196,19)" rx="2" ry="2" />
<text  x="511.97" y="1919.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="311.4" y="1653" width="0.4" height="15.0" fill="rgb(247,174,26)" rx="2" ry="2" />
<text  x="314.45" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (40 samples, 0.67%)</title><rect x="867.3" y="1957" width="8.0" height="15.0" fill="rgb(217,131,12)" rx="2" ry="2" />
<text  x="870.33" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="875.1" y="1781" width="0.2" height="15.0" fill="rgb(226,95,39)" rx="2" ry="2" />
<text  x="878.07" y="1791.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="621.0" y="1957" width="0.2" height="15.0" fill="rgb(226,86,5)" rx="2" ry="2" />
<text  x="624.02" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1179.9" y="1989" width="0.2" height="15.0" fill="rgb(207,25,19)" rx="2" ry="2" />
<text  x="1182.89" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="1139.4" y="2021" width="0.2" height="15.0" fill="rgb(215,229,48)" rx="2" ry="2" />
<text  x="1142.43" y="2031.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="103.4" y="1445" width="0.2" height="15.0" fill="rgb(223,5,26)" rx="2" ry="2" />
<text  x="106.41" y="1455.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="138.5" y="1989" width="0.2" height="15.0" fill="rgb(209,25,47)" rx="2" ry="2" />
<text  x="141.51" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="138.5" y="1957" width="0.2" height="15.0" fill="rgb(218,36,4)" rx="2" ry="2" />
<text  x="141.51" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="644.2" y="1765" width="0.2" height="15.0" fill="rgb(228,145,3)" rx="2" ry="2" />
<text  x="647.23" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="378.1" y="1749" width="0.2" height="15.0" fill="rgb(217,76,49)" rx="2" ry="2" />
<text  x="381.08" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (25 samples, 0.42%)</title><rect x="216.5" y="1893" width="4.9" height="15.0" fill="rgb(239,100,46)" rx="2" ry="2" />
<text  x="219.45" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="213.5" y="1893" width="1.0" height="15.0" fill="rgb(215,197,2)" rx="2" ry="2" />
<text  x="216.48" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="806.5" y="1477" width="0.1" height="15.0" fill="rgb(235,200,12)" rx="2" ry="2" />
<text  x="809.45" y="1487.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="683.1" y="1877" width="0.2" height="15.0" fill="rgb(241,99,24)" rx="2" ry="2" />
<text  x="686.10" y="1887.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="481.6" y="1941" width="0.4" height="15.0" fill="rgb(239,122,40)" rx="2" ry="2" />
<text  x="484.60" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="572.4" y="1925" width="0.2" height="15.0" fill="rgb(238,58,38)" rx="2" ry="2" />
<text  x="575.43" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="926.0" y="1973" width="0.2" height="15.0" fill="rgb(233,150,41)" rx="2" ry="2" />
<text  x="929.04" y="1983.5" ></text>
</g>
<g >
<title>___sys_sendmsg (472 samples, 7.93%)</title><rect x="246.2" y="1957" width="93.6" height="15.0" fill="rgb(224,117,18)" rx="2" ry="2" />
<text  x="249.20" y="1967.5" >___sys_send..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="520.3" y="1957" width="0.4" height="15.0" fill="rgb(250,219,41)" rx="2" ry="2" />
<text  x="523.28" y="1967.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="413.4" y="2005" width="0.2" height="15.0" fill="rgb(250,131,50)" rx="2" ry="2" />
<text  x="416.38" y="2015.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (14 samples, 0.24%)</title><rect x="14.8" y="2053" width="2.7" height="15.0" fill="rgb(224,69,35)" rx="2" ry="2" />
<text  x="17.76" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="389.2" y="1957" width="0.2" height="15.0" fill="rgb(206,218,23)" rx="2" ry="2" />
<text  x="392.19" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="484.2" y="1941" width="0.8" height="15.0" fill="rgb(233,132,23)" rx="2" ry="2" />
<text  x="487.18" y="1951.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (5 samples, 0.08%)</title><rect x="522.3" y="1925" width="1.0" height="15.0" fill="rgb(236,88,7)" rx="2" ry="2" />
<text  x="525.26" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="321.0" y="1669" width="0.2" height="15.0" fill="rgb(242,153,33)" rx="2" ry="2" />
<text  x="323.96" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="413.6" y="1957" width="0.6" height="15.0" fill="rgb(212,174,42)" rx="2" ry="2" />
<text  x="416.58" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="955.8" y="2021" width="0.2" height="15.0" fill="rgb(240,53,15)" rx="2" ry="2" />
<text  x="958.78" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="541.9" y="1925" width="0.4" height="15.0" fill="rgb(242,183,21)" rx="2" ry="2" />
<text  x="544.89" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.13%)</title><rect x="926.2" y="1973" width="1.6" height="15.0" fill="rgb(239,130,51)" rx="2" ry="2" />
<text  x="929.24" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="806.5" y="1493" width="0.1" height="15.0" fill="rgb(208,108,51)" rx="2" ry="2" />
<text  x="809.45" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (549 samples, 9.23%)</title><rect x="233.7" y="2005" width="108.9" height="15.0" fill="rgb(211,91,50)" rx="2" ry="2" />
<text  x="236.70" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="959.2" y="2005" width="0.2" height="15.0" fill="rgb(253,214,51)" rx="2" ry="2" />
<text  x="962.16" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="881.4" y="1701" width="0.2" height="15.0" fill="rgb(225,53,29)" rx="2" ry="2" />
<text  x="884.42" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (753 samples, 12.66%)</title><rect x="702.5" y="1989" width="149.4" height="15.0" fill="rgb(207,148,42)" rx="2" ry="2" />
<text  x="705.53" y="1999.5" >facebook::memcache:..</text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="927.2" y="1941" width="0.2" height="15.0" fill="rgb(244,94,48)" rx="2" ry="2" />
<text  x="930.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="365.4" y="1669" width="0.2" height="15.0" fill="rgb(243,51,8)" rx="2" ry="2" />
<text  x="368.39" y="1679.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (47 samples, 0.79%)</title><rect x="1102.5" y="1525" width="9.4" height="15.0" fill="rgb(244,94,48)" rx="2" ry="2" />
<text  x="1105.54" y="1535.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (19 samples, 0.32%)</title><rect x="174.0" y="1989" width="3.8" height="15.0" fill="rgb(247,126,32)" rx="2" ry="2" />
<text  x="177.01" y="1999.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(243,187,43)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="40.7" y="2005" width="0.4" height="15.0" fill="rgb(207,5,45)" rx="2" ry="2" />
<text  x="43.74" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.07%)</title><rect x="903.8" y="1989" width="0.8" height="15.0" fill="rgb(246,132,25)" rx="2" ry="2" />
<text  x="906.83" y="1999.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="380.1" y="1925" width="1.4" height="15.0" fill="rgb(223,115,32)" rx="2" ry="2" />
<text  x="383.06" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="565.9" y="1653" width="0.2" height="15.0" fill="rgb(222,27,2)" rx="2" ry="2" />
<text  x="568.89" y="1663.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="885.8" y="1877" width="0.2" height="15.0" fill="rgb(226,3,19)" rx="2" ry="2" />
<text  x="888.78" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="668.2" y="1829" width="0.4" height="15.0" fill="rgb(213,224,36)" rx="2" ry="2" />
<text  x="671.22" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="806.5" y="1557" width="0.1" height="15.0" fill="rgb(234,174,43)" rx="2" ry="2" />
<text  x="809.45" y="1567.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="292.8" y="1429" width="0.2" height="15.0" fill="rgb(223,4,16)" rx="2" ry="2" />
<text  x="295.80" y="1439.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="942.9" y="1813" width="0.2" height="15.0" fill="rgb(239,47,9)" rx="2" ry="2" />
<text  x="945.89" y="1823.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="409.0" y="1877" width="0.2" height="15.0" fill="rgb(208,228,25)" rx="2" ry="2" />
<text  x="412.02" y="1887.5" ></text>
</g>
<g >
<title>__alloc_skb (50 samples, 0.84%)</title><rect x="265.4" y="1861" width="10.0" height="15.0" fill="rgb(233,16,16)" rx="2" ry="2" />
<text  x="268.44" y="1871.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="771.7" y="1557" width="0.2" height="15.0" fill="rgb(240,179,16)" rx="2" ry="2" />
<text  x="774.74" y="1567.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="34.2" y="1957" width="0.2" height="15.0" fill="rgb(223,185,41)" rx="2" ry="2" />
<text  x="37.19" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="129.6" y="1989" width="0.2" height="15.0" fill="rgb(226,25,27)" rx="2" ry="2" />
<text  x="132.59" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (18 samples, 0.30%)</title><rect x="174.2" y="1973" width="3.6" height="15.0" fill="rgb(244,49,52)" rx="2" ry="2" />
<text  x="177.21" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (5 samples, 0.08%)</title><rect x="965.7" y="2005" width="1.0" height="15.0" fill="rgb(227,110,2)" rx="2" ry="2" />
<text  x="968.70" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="927.4" y="1941" width="0.2" height="15.0" fill="rgb(223,132,37)" rx="2" ry="2" />
<text  x="930.43" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="942.9" y="1781" width="0.2" height="15.0" fill="rgb(221,122,13)" rx="2" ry="2" />
<text  x="945.89" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="336.6" y="1813" width="0.2" height="15.0" fill="rgb(209,95,12)" rx="2" ry="2" />
<text  x="339.63" y="1823.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="572.2" y="1621" width="0.2" height="15.0" fill="rgb(245,185,12)" rx="2" ry="2" />
<text  x="575.24" y="1631.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="878.8" y="1909" width="0.2" height="15.0" fill="rgb(227,225,35)" rx="2" ry="2" />
<text  x="881.84" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="583.3" y="1941" width="1.8" height="15.0" fill="rgb(223,220,45)" rx="2" ry="2" />
<text  x="586.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="689.4" y="1685" width="0.2" height="15.0" fill="rgb(230,119,47)" rx="2" ry="2" />
<text  x="692.44" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="220.0" y="1877" width="0.2" height="15.0" fill="rgb(211,132,54)" rx="2" ry="2" />
<text  x="223.02" y="1887.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="942.9" y="1797" width="0.2" height="15.0" fill="rgb(217,133,54)" rx="2" ry="2" />
<text  x="945.89" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="655.9" y="1893" width="0.2" height="15.0" fill="rgb(208,91,7)" rx="2" ry="2" />
<text  x="658.93" y="1903.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.07%)</title><rect x="1096.0" y="1909" width="0.8" height="15.0" fill="rgb(250,28,32)" rx="2" ry="2" />
<text  x="1099.00" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="213.3" y="1829" width="0.2" height="15.0" fill="rgb(248,188,50)" rx="2" ry="2" />
<text  x="216.28" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (19 samples, 0.32%)</title><rect x="17.9" y="1877" width="3.8" height="15.0" fill="rgb(229,222,9)" rx="2" ry="2" />
<text  x="20.93" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="243.8" y="1813" width="0.2" height="15.0" fill="rgb(251,59,0)" rx="2" ry="2" />
<text  x="246.82" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::size (1 samples, 0.02%)</title><rect x="32.6" y="1957" width="0.2" height="15.0" fill="rgb(238,38,32)" rx="2" ry="2" />
<text  x="35.61" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.8" y="1845" width="0.1" height="15.0" fill="rgb(221,116,28)" rx="2" ry="2" />
<text  x="844.75" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="103.4" y="1701" width="0.2" height="15.0" fill="rgb(226,213,7)" rx="2" ry="2" />
<text  x="106.41" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (53 samples, 0.89%)</title><rect x="1101.4" y="1733" width="10.5" height="15.0" fill="rgb(228,91,31)" rx="2" ry="2" />
<text  x="1104.35" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (11 samples, 0.18%)</title><rect x="293.2" y="1621" width="2.2" height="15.0" fill="rgb(253,13,48)" rx="2" ry="2" />
<text  x="296.20" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="219.4" y="1829" width="0.6" height="15.0" fill="rgb(239,73,25)" rx="2" ry="2" />
<text  x="222.43" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (660 samples, 11.09%)</title><rect x="706.1" y="1941" width="130.9" height="15.0" fill="rgb(244,155,49)" rx="2" ry="2" />
<text  x="709.10" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="394.1" y="1909" width="0.2" height="15.0" fill="rgb(228,19,41)" rx="2" ry="2" />
<text  x="397.14" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="913.9" y="1909" width="0.4" height="15.0" fill="rgb(230,45,43)" rx="2" ry="2" />
<text  x="916.94" y="1919.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="644.4" y="1989" width="0.4" height="15.0" fill="rgb(243,9,23)" rx="2" ry="2" />
<text  x="647.42" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="396.5" y="1877" width="0.4" height="15.0" fill="rgb(223,110,29)" rx="2" ry="2" />
<text  x="399.52" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="482.6" y="1941" width="0.2" height="15.0" fill="rgb(214,183,18)" rx="2" ry="2" />
<text  x="485.59" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="292.8" y="1605" width="0.4" height="15.0" fill="rgb(234,112,12)" rx="2" ry="2" />
<text  x="295.80" y="1615.5" ></text>
</g>
<g >
<title>up_write (10 samples, 0.17%)</title><rect x="818.5" y="1765" width="2.0" height="15.0" fill="rgb(218,50,21)" rx="2" ry="2" />
<text  x="821.55" y="1775.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (42 samples, 0.71%)</title><rect x="470.9" y="1957" width="8.3" height="15.0" fill="rgb(236,7,45)" rx="2" ry="2" />
<text  x="473.89" y="1967.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="1101.9" y="1573" width="0.4" height="15.0" fill="rgb(217,181,54)" rx="2" ry="2" />
<text  x="1104.95" y="1583.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="125.0" y="1797" width="0.2" height="15.0" fill="rgb(212,181,49)" rx="2" ry="2" />
<text  x="128.03" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="514.5" y="1925" width="0.2" height="15.0" fill="rgb(212,140,30)" rx="2" ry="2" />
<text  x="517.52" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="519.7" y="1973" width="0.4" height="15.0" fill="rgb(237,162,26)" rx="2" ry="2" />
<text  x="522.68" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (3 samples, 0.05%)</title><rect x="40.1" y="1973" width="0.6" height="15.0" fill="rgb(242,32,0)" rx="2" ry="2" />
<text  x="43.14" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.6" y="2037" width="0.2" height="15.0" fill="rgb(223,219,11)" rx="2" ry="2" />
<text  x="17.56" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1269" width="17.7" height="15.0" fill="rgb(205,201,32)" rx="2" ry="2" />
<text  x="107.40" y="1279.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="734.7" y="1685" width="0.2" height="15.0" fill="rgb(227,125,48)" rx="2" ry="2" />
<text  x="737.66" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="72.5" y="1909" width="0.6" height="15.0" fill="rgb(219,132,45)" rx="2" ry="2" />
<text  x="75.47" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="321.0" y="1797" width="0.2" height="15.0" fill="rgb(226,97,13)" rx="2" ry="2" />
<text  x="323.96" y="1807.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (1 samples, 0.02%)</title><rect x="539.7" y="1973" width="0.2" height="15.0" fill="rgb(254,43,36)" rx="2" ry="2" />
<text  x="542.71" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(241,158,24)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="325.9" y="1749" width="0.6" height="15.0" fill="rgb(218,8,14)" rx="2" ry="2" />
<text  x="328.92" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="890.1" y="1925" width="0.2" height="15.0" fill="rgb(240,188,31)" rx="2" ry="2" />
<text  x="893.14" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (12 samples, 0.20%)</title><rect x="840.2" y="1925" width="2.3" height="15.0" fill="rgb(217,25,18)" rx="2" ry="2" />
<text  x="843.16" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="403.3" y="1877" width="0.2" height="15.0" fill="rgb(226,121,19)" rx="2" ry="2" />
<text  x="406.27" y="1887.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="220.4" y="1845" width="1.0" height="15.0" fill="rgb(235,150,13)" rx="2" ry="2" />
<text  x="223.42" y="1855.5" ></text>
</g>
<g >
<title>finish_task_switch (20 samples, 0.34%)</title><rect x="17.7" y="1909" width="4.0" height="15.0" fill="rgb(214,83,54)" rx="2" ry="2" />
<text  x="20.73" y="1919.5" ></text>
</g>
<g >
<title>__GI___getpeername (68 samples, 1.14%)</title><rect x="657.9" y="1941" width="13.5" height="15.0" fill="rgb(212,79,1)" rx="2" ry="2" />
<text  x="660.91" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="457.0" y="1845" width="0.4" height="15.0" fill="rgb(216,190,45)" rx="2" ry="2" />
<text  x="460.01" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="138.7" y="1957" width="0.2" height="15.0" fill="rgb(245,157,31)" rx="2" ry="2" />
<text  x="141.71" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (124 samples, 2.08%)</title><rect x="202.6" y="1973" width="24.6" height="15.0" fill="rgb(206,66,18)" rx="2" ry="2" />
<text  x="205.57" y="1983.5" >f..</text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="320.4" y="1797" width="0.2" height="15.0" fill="rgb(242,218,33)" rx="2" ry="2" />
<text  x="323.37" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="903.6" y="1973" width="0.2" height="15.0" fill="rgb(211,10,7)" rx="2" ry="2" />
<text  x="906.63" y="1983.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="951.6" y="2005" width="0.2" height="15.0" fill="rgb(249,226,10)" rx="2" ry="2" />
<text  x="954.62" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="285.1" y="1781" width="0.2" height="15.0" fill="rgb(216,87,8)" rx="2" ry="2" />
<text  x="288.07" y="1791.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="298.0" y="1653" width="0.2" height="15.0" fill="rgb(209,149,42)" rx="2" ry="2" />
<text  x="300.96" y="1663.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="565.9" y="1701" width="0.2" height="15.0" fill="rgb(247,135,26)" rx="2" ry="2" />
<text  x="568.89" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="1137.2" y="1957" width="0.4" height="15.0" fill="rgb(248,157,39)" rx="2" ry="2" />
<text  x="1140.25" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="694.6" y="1957" width="0.2" height="15.0" fill="rgb(240,101,48)" rx="2" ry="2" />
<text  x="697.60" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="656.7" y="1941" width="0.8" height="15.0" fill="rgb(244,117,10)" rx="2" ry="2" />
<text  x="659.72" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="565.5" y="1797" width="0.6" height="15.0" fill="rgb(224,53,44)" rx="2" ry="2" />
<text  x="568.49" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (7 samples, 0.12%)</title><rect x="79.8" y="1957" width="1.4" height="15.0" fill="rgb(230,139,5)" rx="2" ry="2" />
<text  x="82.81" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1123.2" y="2005" width="0.2" height="15.0" fill="rgb(214,178,23)" rx="2" ry="2" />
<text  x="1126.17" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="63.5" y="1893" width="0.2" height="15.0" fill="rgb(240,129,46)" rx="2" ry="2" />
<text  x="66.55" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="536.7" y="1925" width="0.2" height="15.0" fill="rgb(223,123,3)" rx="2" ry="2" />
<text  x="539.74" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="167.3" y="1973" width="0.4" height="15.0" fill="rgb(242,197,37)" rx="2" ry="2" />
<text  x="170.27" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="278.9" y="1845" width="0.2" height="15.0" fill="rgb(205,178,54)" rx="2" ry="2" />
<text  x="281.92" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="861.4" y="1989" width="0.6" height="15.0" fill="rgb(207,177,24)" rx="2" ry="2" />
<text  x="864.38" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="179.8" y="1941" width="0.2" height="15.0" fill="rgb(207,152,0)" rx="2" ry="2" />
<text  x="182.76" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (2 samples, 0.03%)</title><rect x="624.4" y="2005" width="0.4" height="15.0" fill="rgb(207,17,33)" rx="2" ry="2" />
<text  x="627.39" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="549.2" y="1765" width="0.2" height="15.0" fill="rgb(212,83,21)" rx="2" ry="2" />
<text  x="552.23" y="1775.5" ></text>
</g>
<g >
<title>__kfree_skb (37 samples, 0.62%)</title><rect x="1102.9" y="1509" width="7.4" height="15.0" fill="rgb(213,135,51)" rx="2" ry="2" />
<text  x="1105.94" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="319.2" y="1669" width="0.2" height="15.0" fill="rgb(206,146,46)" rx="2" ry="2" />
<text  x="322.18" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="333.5" y="1701" width="0.2" height="15.0" fill="rgb(210,42,47)" rx="2" ry="2" />
<text  x="336.46" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="561.7" y="1781" width="0.2" height="15.0" fill="rgb(250,198,53)" rx="2" ry="2" />
<text  x="564.72" y="1791.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1172.5" y="1957" width="0.4" height="15.0" fill="rgb(206,108,19)" rx="2" ry="2" />
<text  x="1175.55" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="333.5" y="1685" width="0.2" height="15.0" fill="rgb(235,163,5)" rx="2" ry="2" />
<text  x="336.46" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="994.9" y="1765" width="0.2" height="15.0" fill="rgb(211,200,19)" rx="2" ry="2" />
<text  x="997.85" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="120.9" y="69" width="0.2" height="15.0" fill="rgb(253,42,49)" rx="2" ry="2" />
<text  x="123.86" y="79.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="762.6" y="1653" width="0.4" height="15.0" fill="rgb(209,111,6)" rx="2" ry="2" />
<text  x="765.62" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="875.1" y="1797" width="0.2" height="15.0" fill="rgb(226,121,0)" rx="2" ry="2" />
<text  x="878.07" y="1807.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="381.5" y="1925" width="0.2" height="15.0" fill="rgb(220,83,0)" rx="2" ry="2" />
<text  x="384.45" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (2 samples, 0.03%)</title><rect x="75.0" y="1925" width="0.4" height="15.0" fill="rgb(237,146,44)" rx="2" ry="2" />
<text  x="78.05" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="946.7" y="1941" width="0.2" height="15.0" fill="rgb(221,158,0)" rx="2" ry="2" />
<text  x="949.66" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1139.4" y="1941" width="0.2" height="15.0" fill="rgb(234,134,46)" rx="2" ry="2" />
<text  x="1142.43" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="377.9" y="1813" width="0.2" height="15.0" fill="rgb(250,156,15)" rx="2" ry="2" />
<text  x="380.88" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="319.2" y="1701" width="0.2" height="15.0" fill="rgb(233,138,42)" rx="2" ry="2" />
<text  x="322.18" y="1711.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="89.5" y="1941" width="0.2" height="15.0" fill="rgb(252,173,41)" rx="2" ry="2" />
<text  x="92.53" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="854.2" y="1989" width="0.2" height="15.0" fill="rgb(214,189,15)" rx="2" ry="2" />
<text  x="857.25" y="1999.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="57.2" y="1941" width="0.6" height="15.0" fill="rgb(237,107,28)" rx="2" ry="2" />
<text  x="60.20" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="121.5" y="85" width="0.2" height="15.0" fill="rgb(234,71,52)" rx="2" ry="2" />
<text  x="124.46" y="95.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="668.2" y="1573" width="0.2" height="15.0" fill="rgb(220,22,34)" rx="2" ry="2" />
<text  x="671.22" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="936.3" y="1973" width="0.2" height="15.0" fill="rgb(222,158,21)" rx="2" ry="2" />
<text  x="939.35" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="872.9" y="1877" width="0.2" height="15.0" fill="rgb(244,40,17)" rx="2" ry="2" />
<text  x="875.89" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="866.9" y="1765" width="0.2" height="15.0" fill="rgb(232,182,32)" rx="2" ry="2" />
<text  x="869.94" y="1775.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="485.6" y="1973" width="0.6" height="15.0" fill="rgb(232,169,51)" rx="2" ry="2" />
<text  x="488.57" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="293.0" y="1349" width="0.2" height="15.0" fill="rgb(205,215,2)" rx="2" ry="2" />
<text  x="296.00" y="1359.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (1 samples, 0.02%)</title><rect x="959.6" y="2037" width="0.2" height="15.0" fill="rgb(251,226,28)" rx="2" ry="2" />
<text  x="962.55" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="514.3" y="1909" width="0.2" height="15.0" fill="rgb(248,225,49)" rx="2" ry="2" />
<text  x="517.33" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="526.2" y="1973" width="0.6" height="15.0" fill="rgb(208,31,36)" rx="2" ry="2" />
<text  x="529.23" y="1983.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (7 samples, 0.12%)</title><rect x="101.6" y="2037" width="1.4" height="15.0" fill="rgb(214,83,16)" rx="2" ry="2" />
<text  x="104.62" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="515.3" y="1973" width="0.8" height="15.0" fill="rgb(228,115,53)" rx="2" ry="2" />
<text  x="518.32" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="827.1" y="1653" width="0.2" height="15.0" fill="rgb(228,129,2)" rx="2" ry="2" />
<text  x="830.08" y="1663.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="482.8" y="1957" width="0.2" height="15.0" fill="rgb(213,211,43)" rx="2" ry="2" />
<text  x="485.79" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1301" width="17.7" height="15.0" fill="rgb(231,224,32)" rx="2" ry="2" />
<text  x="107.40" y="1311.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="382.0" y="1845" width="0.8" height="15.0" fill="rgb(221,193,3)" rx="2" ry="2" />
<text  x="385.05" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="389.2" y="1861" width="0.2" height="15.0" fill="rgb(211,130,43)" rx="2" ry="2" />
<text  x="392.19" y="1871.5" ></text>
</g>
<g >
<title>__fdget (24 samples, 0.40%)</title><rect x="1117.6" y="1957" width="4.8" height="15.0" fill="rgb(232,160,22)" rx="2" ry="2" />
<text  x="1120.61" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="167.9" y="1973" width="0.2" height="15.0" fill="rgb(252,160,47)" rx="2" ry="2" />
<text  x="170.86" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="643.8" y="1957" width="0.2" height="15.0" fill="rgb(238,151,19)" rx="2" ry="2" />
<text  x="646.83" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="158.5" y="1957" width="0.4" height="15.0" fill="rgb(223,28,24)" rx="2" ry="2" />
<text  x="161.54" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="66.9" y="1893" width="0.4" height="15.0" fill="rgb(223,11,30)" rx="2" ry="2" />
<text  x="69.92" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (73 samples, 1.23%)</title><rect x="28.4" y="2021" width="14.5" height="15.0" fill="rgb(217,71,29)" rx="2" ry="2" />
<text  x="31.44" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="190.7" y="2005" width="0.2" height="15.0" fill="rgb(225,98,33)" rx="2" ry="2" />
<text  x="193.67" y="2015.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="392.6" y="1909" width="0.2" height="15.0" fill="rgb(228,10,3)" rx="2" ry="2" />
<text  x="395.56" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="833.4" y="1925" width="0.2" height="15.0" fill="rgb(239,32,11)" rx="2" ry="2" />
<text  x="836.42" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="672.2" y="2021" width="0.2" height="15.0" fill="rgb(221,57,26)" rx="2" ry="2" />
<text  x="675.19" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1205" width="17.5" height="15.0" fill="rgb(243,32,10)" rx="2" ry="2" />
<text  x="107.40" y="1215.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1137.2" y="1909" width="0.2" height="15.0" fill="rgb(231,90,12)" rx="2" ry="2" />
<text  x="1140.25" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="319.2" y="1621" width="0.2" height="15.0" fill="rgb(222,12,41)" rx="2" ry="2" />
<text  x="322.18" y="1631.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="219.2" y="1781" width="0.2" height="15.0" fill="rgb(206,52,11)" rx="2" ry="2" />
<text  x="222.23" y="1791.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="566.1" y="1973" width="2.8" height="15.0" fill="rgb(248,49,22)" rx="2" ry="2" />
<text  x="569.09" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="103.4" y="1429" width="0.2" height="15.0" fill="rgb(245,176,29)" rx="2" ry="2" />
<text  x="106.41" y="1439.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="689.4" y="1813" width="0.2" height="15.0" fill="rgb(243,166,41)" rx="2" ry="2" />
<text  x="692.44" y="1823.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="989.1" y="1957" width="0.2" height="15.0" fill="rgb(222,182,14)" rx="2" ry="2" />
<text  x="992.10" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (21 samples, 0.35%)</title><rect x="827.3" y="1893" width="4.1" height="15.0" fill="rgb(222,139,22)" rx="2" ry="2" />
<text  x="830.27" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="127.8" y="1973" width="0.2" height="15.0" fill="rgb(209,118,24)" rx="2" ry="2" />
<text  x="130.80" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (19 samples, 0.32%)</title><rect x="17.9" y="1893" width="3.8" height="15.0" fill="rgb(228,109,44)" rx="2" ry="2" />
<text  x="20.93" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="53.8" y="1893" width="0.4" height="15.0" fill="rgb(254,199,26)" rx="2" ry="2" />
<text  x="56.83" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="245" width="17.5" height="15.0" fill="rgb(236,119,15)" rx="2" ry="2" />
<text  x="107.40" y="255.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="111.1" y="37" width="0.4" height="15.0" fill="rgb(230,227,17)" rx="2" ry="2" />
<text  x="114.14" y="47.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="344.0" y="1909" width="0.8" height="15.0" fill="rgb(253,149,38)" rx="2" ry="2" />
<text  x="346.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="32.8" y="1733" width="0.2" height="15.0" fill="rgb(250,11,21)" rx="2" ry="2" />
<text  x="35.81" y="1743.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="806.5" y="1429" width="0.1" height="15.0" fill="rgb(241,186,40)" rx="2" ry="2" />
<text  x="809.45" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (54 samples, 0.91%)</title><rect x="628.2" y="2037" width="10.7" height="15.0" fill="rgb(249,40,37)" rx="2" ry="2" />
<text  x="631.16" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="232.9" y="2021" width="0.2" height="15.0" fill="rgb(241,147,32)" rx="2" ry="2" />
<text  x="235.91" y="2031.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (20 samples, 0.34%)</title><rect x="10.4" y="1957" width="4.0" height="15.0" fill="rgb(242,223,35)" rx="2" ry="2" />
<text  x="13.40" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="554.6" y="1941" width="0.2" height="15.0" fill="rgb(254,225,37)" rx="2" ry="2" />
<text  x="557.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="689.4" y="1749" width="0.2" height="15.0" fill="rgb(207,220,40)" rx="2" ry="2" />
<text  x="692.44" y="1759.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="190.3" y="2021" width="0.2" height="15.0" fill="rgb(252,68,54)" rx="2" ry="2" />
<text  x="193.27" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1123.4" y="1989" width="0.2" height="15.0" fill="rgb(252,78,13)" rx="2" ry="2" />
<text  x="1126.36" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="836.6" y="1909" width="0.4" height="15.0" fill="rgb(251,22,1)" rx="2" ry="2" />
<text  x="839.59" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="192.9" y="1957" width="0.1" height="15.0" fill="rgb(240,163,32)" rx="2" ry="2" />
<text  x="195.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (956 samples, 16.07%)</title><rect x="698.4" y="2021" width="189.6" height="15.0" fill="rgb(238,70,51)" rx="2" ry="2" />
<text  x="701.37" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="565.5" y="1829" width="0.6" height="15.0" fill="rgb(218,144,44)" rx="2" ry="2" />
<text  x="568.49" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="484.2" y="1925" width="0.8" height="15.0" fill="rgb(206,148,40)" rx="2" ry="2" />
<text  x="487.18" y="1935.5" ></text>
</g>
<g >
<title>sock_poll (58 samples, 0.97%)</title><rect x="497.5" y="1909" width="11.5" height="15.0" fill="rgb(233,61,21)" rx="2" ry="2" />
<text  x="500.47" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="889.9" y="1957" width="1.0" height="15.0" fill="rgb(206,7,48)" rx="2" ry="2" />
<text  x="892.94" y="1967.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="417.1" y="2021" width="0.2" height="15.0" fill="rgb(210,147,31)" rx="2" ry="2" />
<text  x="420.15" y="2031.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="411.6" y="1941" width="0.2" height="15.0" fill="rgb(210,112,38)" rx="2" ry="2" />
<text  x="414.60" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="615.1" y="1989" width="0.6" height="15.0" fill="rgb(225,31,30)" rx="2" ry="2" />
<text  x="618.07" y="1999.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="1102.1" y="1557" width="0.2" height="15.0" fill="rgb(238,9,17)" rx="2" ry="2" />
<text  x="1105.14" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="801.5" y="1621" width="0.2" height="15.0" fill="rgb(226,24,21)" rx="2" ry="2" />
<text  x="804.49" y="1631.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="565.5" y="1717" width="0.2" height="15.0" fill="rgb(229,21,17)" rx="2" ry="2" />
<text  x="568.49" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="509.2" y="1877" width="0.2" height="15.0" fill="rgb(205,140,13)" rx="2" ry="2" />
<text  x="512.17" y="1887.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="501.8" y="1621" width="0.2" height="15.0" fill="rgb(246,101,21)" rx="2" ry="2" />
<text  x="504.83" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="572.2" y="1845" width="0.2" height="15.0" fill="rgb(205,30,10)" rx="2" ry="2" />
<text  x="575.24" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="510.6" y="2037" width="0.2" height="15.0" fill="rgb(223,216,0)" rx="2" ry="2" />
<text  x="513.56" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (7 samples, 0.12%)</title><rect x="155.0" y="1893" width="1.4" height="15.0" fill="rgb(252,163,17)" rx="2" ry="2" />
<text  x="157.97" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="156.0" y="1813" width="0.2" height="15.0" fill="rgb(241,20,45)" rx="2" ry="2" />
<text  x="158.96" y="1823.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="578.6" y="1941" width="0.2" height="15.0" fill="rgb(242,55,11)" rx="2" ry="2" />
<text  x="581.58" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (77 samples, 1.29%)</title><rect x="674.4" y="1957" width="15.2" height="15.0" fill="rgb(211,157,32)" rx="2" ry="2" />
<text  x="677.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10 samples, 0.17%)</title><rect x="293.4" y="1541" width="2.0" height="15.0" fill="rgb(219,185,33)" rx="2" ry="2" />
<text  x="296.40" y="1551.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="686.1" y="1877" width="0.2" height="15.0" fill="rgb(241,138,9)" rx="2" ry="2" />
<text  x="689.07" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="456.8" y="1781" width="0.2" height="15.0" fill="rgb(232,136,15)" rx="2" ry="2" />
<text  x="459.81" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="734.7" y="1733" width="0.2" height="15.0" fill="rgb(212,128,37)" rx="2" ry="2" />
<text  x="737.66" y="1743.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1103.3" y="1477" width="0.4" height="15.0" fill="rgb(248,7,36)" rx="2" ry="2" />
<text  x="1106.33" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="531.8" y="2005" width="1.6" height="15.0" fill="rgb(233,191,30)" rx="2" ry="2" />
<text  x="534.78" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="552.6" y="1701" width="0.2" height="15.0" fill="rgb(208,104,14)" rx="2" ry="2" />
<text  x="555.60" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.82%)</title><rect x="104.0" y="1829" width="21.4" height="15.0" fill="rgb(225,37,50)" rx="2" ry="2" />
<text  x="107.00" y="1839.5" >[..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="701.7" y="1781" width="0.2" height="15.0" fill="rgb(211,70,22)" rx="2" ry="2" />
<text  x="704.74" y="1791.5" ></text>
</g>
<g >
<title>inet_put_port (1 samples, 0.02%)</title><rect x="734.7" y="1461" width="0.2" height="15.0" fill="rgb(253,73,25)" rx="2" ry="2" />
<text  x="737.66" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="271.8" y="1701" width="0.2" height="15.0" fill="rgb(228,85,9)" rx="2" ry="2" />
<text  x="274.78" y="1711.5" ></text>
</g>
<g >
<title>native_write_msr (10 samples, 0.17%)</title><rect x="241.4" y="1861" width="2.0" height="15.0" fill="rgb(250,120,49)" rx="2" ry="2" />
<text  x="244.44" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="321.8" y="1749" width="0.2" height="15.0" fill="rgb(237,78,33)" rx="2" ry="2" />
<text  x="324.76" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1461" width="18.0" height="15.0" fill="rgb(249,93,51)" rx="2" ry="2" />
<text  x="107.40" y="1471.5" ></text>
</g>
<g >
<title>security_file_free (2 samples, 0.03%)</title><rect x="821.3" y="1813" width="0.4" height="15.0" fill="rgb(240,124,36)" rx="2" ry="2" />
<text  x="824.32" y="1823.5" ></text>
</g>
<g >
<title>tcp_tso_segs (4 samples, 0.07%)</title><rect x="805.9" y="1685" width="0.7" height="15.0" fill="rgb(237,177,2)" rx="2" ry="2" />
<text  x="808.86" y="1695.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1006.2" y="1749" width="0.2" height="15.0" fill="rgb(209,104,19)" rx="2" ry="2" />
<text  x="1009.16" y="1759.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="465.7" y="1893" width="0.2" height="15.0" fill="rgb(249,1,11)" rx="2" ry="2" />
<text  x="468.74" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1123.4" y="1829" width="0.2" height="15.0" fill="rgb(232,100,14)" rx="2" ry="2" />
<text  x="1126.36" y="1839.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="343.8" y="1973" width="1.0" height="15.0" fill="rgb(238,19,48)" rx="2" ry="2" />
<text  x="346.77" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="689.8" y="1845" width="0.2" height="15.0" fill="rgb(224,65,43)" rx="2" ry="2" />
<text  x="692.84" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1023.8" y="1989" width="0.2" height="15.0" fill="rgb(219,107,53)" rx="2" ry="2" />
<text  x="1026.81" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (24 samples, 0.40%)</title><rect x="373.5" y="1925" width="4.8" height="15.0" fill="rgb(224,134,21)" rx="2" ry="2" />
<text  x="376.52" y="1935.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (17 samples, 0.29%)</title><rect x="406.8" y="1941" width="3.4" height="15.0" fill="rgb(212,145,15)" rx="2" ry="2" />
<text  x="409.84" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="888.0" y="2021" width="1.5" height="15.0" fill="rgb(209,84,27)" rx="2" ry="2" />
<text  x="890.96" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="167.9" y="1989" width="0.2" height="15.0" fill="rgb(231,28,25)" rx="2" ry="2" />
<text  x="170.86" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="67.3" y="1909" width="0.4" height="15.0" fill="rgb(208,56,7)" rx="2" ry="2" />
<text  x="70.31" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="693.2" y="1973" width="0.2" height="15.0" fill="rgb(214,99,26)" rx="2" ry="2" />
<text  x="696.21" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="190.7" y="1845" width="0.2" height="15.0" fill="rgb(230,39,36)" rx="2" ry="2" />
<text  x="193.67" y="1855.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.9" y="1253" width="0.2" height="15.0" fill="rgb(223,61,0)" rx="2" ry="2" />
<text  x="124.85" y="1263.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="800.7" y="1637" width="0.2" height="15.0" fill="rgb(242,55,53)" rx="2" ry="2" />
<text  x="803.70" y="1647.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="326.7" y="1605" width="0.2" height="15.0" fill="rgb(208,157,16)" rx="2" ry="2" />
<text  x="329.72" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="264.4" y="1829" width="0.2" height="15.0" fill="rgb(247,96,40)" rx="2" ry="2" />
<text  x="267.44" y="1839.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (6 samples, 0.10%)</title><rect x="549.8" y="1957" width="1.2" height="15.0" fill="rgb(248,181,33)" rx="2" ry="2" />
<text  x="552.83" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="378.1" y="1621" width="0.2" height="15.0" fill="rgb(224,124,7)" rx="2" ry="2" />
<text  x="381.08" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="292.8" y="1477" width="0.2" height="15.0" fill="rgb(244,68,15)" rx="2" ry="2" />
<text  x="295.80" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="171.0" y="1957" width="0.6" height="15.0" fill="rgb(212,154,0)" rx="2" ry="2" />
<text  x="174.04" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="264.4" y="1813" width="0.2" height="15.0" fill="rgb(238,170,17)" rx="2" ry="2" />
<text  x="267.44" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="365.4" y="1781" width="0.2" height="15.0" fill="rgb(226,106,21)" rx="2" ry="2" />
<text  x="368.39" y="1791.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="63.5" y="1861" width="0.2" height="15.0" fill="rgb(211,68,1)" rx="2" ry="2" />
<text  x="66.55" y="1871.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12 samples, 0.20%)</title><rect x="15.2" y="1877" width="2.3" height="15.0" fill="rgb(248,33,32)" rx="2" ry="2" />
<text  x="18.16" y="1887.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1071.4" y="1813" width="0.2" height="15.0" fill="rgb(222,89,24)" rx="2" ry="2" />
<text  x="1074.41" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (5 samples, 0.08%)</title><rect x="382.0" y="1925" width="1.0" height="15.0" fill="rgb(213,28,33)" rx="2" ry="2" />
<text  x="385.05" y="1935.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="729.5" y="1621" width="0.2" height="15.0" fill="rgb(235,227,23)" rx="2" ry="2" />
<text  x="732.50" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="336.6" y="1765" width="0.2" height="15.0" fill="rgb(209,166,13)" rx="2" ry="2" />
<text  x="339.63" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="186.7" y="1829" width="0.2" height="15.0" fill="rgb(208,80,13)" rx="2" ry="2" />
<text  x="189.70" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="884.0" y="2005" width="0.4" height="15.0" fill="rgb(232,57,38)" rx="2" ry="2" />
<text  x="886.99" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1143.0" y="1941" width="0.2" height="15.0" fill="rgb(240,163,2)" rx="2" ry="2" />
<text  x="1146.00" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="885.8" y="1989" width="0.2" height="15.0" fill="rgb(206,164,24)" rx="2" ry="2" />
<text  x="888.78" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="160.7" y="2021" width="0.4" height="15.0" fill="rgb(220,120,19)" rx="2" ry="2" />
<text  x="163.72" y="2031.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (9 samples, 0.15%)</title><rect x="957.4" y="2021" width="1.8" height="15.0" fill="rgb(224,164,5)" rx="2" ry="2" />
<text  x="960.37" y="2031.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="388.6" y="1925" width="0.4" height="15.0" fill="rgb(236,10,8)" rx="2" ry="2" />
<text  x="391.59" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="753.5" y="1701" width="0.8" height="15.0" fill="rgb(205,137,37)" rx="2" ry="2" />
<text  x="756.50" y="1711.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="650.2" y="1909" width="0.2" height="15.0" fill="rgb(220,199,13)" rx="2" ry="2" />
<text  x="653.17" y="1919.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="487.9" y="2021" width="0.2" height="15.0" fill="rgb(229,155,11)" rx="2" ry="2" />
<text  x="490.95" y="2031.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (4 samples, 0.07%)</title><rect x="249.0" y="1909" width="0.8" height="15.0" fill="rgb(241,188,41)" rx="2" ry="2" />
<text  x="251.97" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (5 samples, 0.08%)</title><rect x="516.3" y="1989" width="1.0" height="15.0" fill="rgb(217,31,32)" rx="2" ry="2" />
<text  x="519.31" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="992.1" y="1973" width="0.2" height="15.0" fill="rgb(225,207,45)" rx="2" ry="2" />
<text  x="995.08" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="335.6" y="1589" width="0.2" height="15.0" fill="rgb(219,149,21)" rx="2" ry="2" />
<text  x="338.64" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="520.9" y="1941" width="0.2" height="15.0" fill="rgb(217,15,31)" rx="2" ry="2" />
<text  x="523.87" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="335.6" y="1717" width="0.2" height="15.0" fill="rgb(233,24,1)" rx="2" ry="2" />
<text  x="338.64" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="565.5" y="1781" width="0.6" height="15.0" fill="rgb(234,92,53)" rx="2" ry="2" />
<text  x="568.49" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="849.9" y="1941" width="0.2" height="15.0" fill="rgb(208,116,44)" rx="2" ry="2" />
<text  x="852.88" y="1951.5" ></text>
</g>
<g >
<title>sock_recvmsg (338 samples, 5.68%)</title><rect x="1050.4" y="1973" width="67.0" height="15.0" fill="rgb(218,43,20)" rx="2" ry="2" />
<text  x="1053.38" y="1983.5" >sock_re..</text>
</g>
<g >
<title>ip_finish_output (59 samples, 0.99%)</title><rect x="1101.0" y="1813" width="11.7" height="15.0" fill="rgb(248,186,38)" rx="2" ry="2" />
<text  x="1103.95" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (2 samples, 0.03%)</title><rect x="160.1" y="2005" width="0.4" height="15.0" fill="rgb(212,60,50)" rx="2" ry="2" />
<text  x="163.13" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="219.2" y="1813" width="0.2" height="15.0" fill="rgb(245,207,4)" rx="2" ry="2" />
<text  x="222.23" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (16 samples, 0.27%)</title><rect x="844.3" y="1909" width="3.2" height="15.0" fill="rgb(231,24,28)" rx="2" ry="2" />
<text  x="847.33" y="1919.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (3 samples, 0.05%)</title><rect x="579.0" y="2005" width="0.6" height="15.0" fill="rgb(245,49,52)" rx="2" ry="2" />
<text  x="581.98" y="2015.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="261.3" y="1877" width="0.2" height="15.0" fill="rgb(216,33,37)" rx="2" ry="2" />
<text  x="264.27" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="922.7" y="1893" width="0.4" height="15.0" fill="rgb(222,29,2)" rx="2" ry="2" />
<text  x="925.67" y="1903.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1064.9" y="1749" width="0.2" height="15.0" fill="rgb(209,218,8)" rx="2" ry="2" />
<text  x="1067.86" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="224.6" y="1941" width="0.2" height="15.0" fill="rgb(243,72,46)" rx="2" ry="2" />
<text  x="227.58" y="1951.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="320.8" y="1829" width="0.4" height="15.0" fill="rgb(238,102,18)" rx="2" ry="2" />
<text  x="323.77" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (7 samples, 0.12%)</title><rect x="651.2" y="1989" width="1.4" height="15.0" fill="rgb(207,48,7)" rx="2" ry="2" />
<text  x="654.17" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="243.6" y="1861" width="0.2" height="15.0" fill="rgb(206,179,28)" rx="2" ry="2" />
<text  x="246.62" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="526.6" y="1925" width="0.2" height="15.0" fill="rgb(206,129,23)" rx="2" ry="2" />
<text  x="529.62" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="962.3" y="1797" width="0.2" height="15.0" fill="rgb(205,123,36)" rx="2" ry="2" />
<text  x="965.33" y="1807.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="268.4" y="1845" width="0.2" height="15.0" fill="rgb(209,77,26)" rx="2" ry="2" />
<text  x="271.41" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="271.8" y="1765" width="0.2" height="15.0" fill="rgb(244,47,35)" rx="2" ry="2" />
<text  x="274.78" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="883.6" y="1957" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="886.60" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="536.3" y="1973" width="1.0" height="15.0" fill="rgb(209,69,15)" rx="2" ry="2" />
<text  x="539.34" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="827.1" y="1813" width="0.2" height="15.0" fill="rgb(208,142,47)" rx="2" ry="2" />
<text  x="830.08" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="59.2" y="1957" width="0.6" height="15.0" fill="rgb(227,166,15)" rx="2" ry="2" />
<text  x="62.18" y="1967.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="248.6" y="1925" width="0.2" height="15.0" fill="rgb(214,229,8)" rx="2" ry="2" />
<text  x="251.58" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="962.9" y="2021" width="0.6" height="15.0" fill="rgb(236,135,11)" rx="2" ry="2" />
<text  x="965.92" y="2031.5" ></text>
</g>
<g >
<title>dst_release (15 samples, 0.25%)</title><rect x="1074.8" y="1877" width="3.0" height="15.0" fill="rgb(226,98,54)" rx="2" ry="2" />
<text  x="1077.78" y="1887.5" ></text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.03%)</title><rect x="340.4" y="1957" width="0.4" height="15.0" fill="rgb(216,132,4)" rx="2" ry="2" />
<text  x="343.40" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="891.5" y="1973" width="0.2" height="15.0" fill="rgb(208,42,42)" rx="2" ry="2" />
<text  x="894.53" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="974.8" y="1957" width="0.6" height="15.0" fill="rgb(245,18,46)" rx="2" ry="2" />
<text  x="977.82" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="878.0" y="1909" width="0.2" height="15.0" fill="rgb(208,130,34)" rx="2" ry="2" />
<text  x="881.04" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="643.8" y="1893" width="0.2" height="15.0" fill="rgb(213,219,20)" rx="2" ry="2" />
<text  x="646.83" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (10 samples, 0.17%)</title><rect x="875.3" y="1957" width="2.0" height="15.0" fill="rgb(232,110,38)" rx="2" ry="2" />
<text  x="878.27" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="571.2" y="1957" width="0.2" height="15.0" fill="rgb(228,64,43)" rx="2" ry="2" />
<text  x="574.24" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="135.3" y="1797" width="0.2" height="15.0" fill="rgb(212,171,2)" rx="2" ry="2" />
<text  x="138.34" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="945.9" y="2005" width="0.2" height="15.0" fill="rgb(233,14,40)" rx="2" ry="2" />
<text  x="948.87" y="2015.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="124.2" y="1765" width="0.2" height="15.0" fill="rgb(205,24,46)" rx="2" ry="2" />
<text  x="127.23" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="702.1" y="1877" width="0.2" height="15.0" fill="rgb(215,87,1)" rx="2" ry="2" />
<text  x="705.13" y="1887.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(244,9,40)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="959.4" y="2021" width="0.2" height="15.0" fill="rgb(213,187,18)" rx="2" ry="2" />
<text  x="962.35" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="923.7" y="1893" width="0.2" height="15.0" fill="rgb(233,120,12)" rx="2" ry="2" />
<text  x="926.66" y="1903.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="190.5" y="2021" width="0.2" height="15.0" fill="rgb(253,213,28)" rx="2" ry="2" />
<text  x="193.47" y="2031.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.03%)</title><rect x="459.8" y="1941" width="0.4" height="15.0" fill="rgb(216,94,22)" rx="2" ry="2" />
<text  x="462.79" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="243.8" y="1685" width="0.2" height="15.0" fill="rgb(247,196,20)" rx="2" ry="2" />
<text  x="246.82" y="1695.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="961.3" y="2037" width="0.2" height="15.0" fill="rgb(206,118,7)" rx="2" ry="2" />
<text  x="964.34" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="32.8" y="1877" width="0.2" height="15.0" fill="rgb(242,158,19)" rx="2" ry="2" />
<text  x="35.81" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="509.0" y="1861" width="0.2" height="15.0" fill="rgb(241,154,16)" rx="2" ry="2" />
<text  x="511.97" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="487.6" y="1781" width="0.2" height="15.0" fill="rgb(207,111,9)" rx="2" ry="2" />
<text  x="490.55" y="1791.5" ></text>
</g>
<g >
<title>futex_wait (21 samples, 0.35%)</title><rect x="10.2" y="1973" width="4.2" height="15.0" fill="rgb(222,215,29)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="179.4" y="2005" width="0.2" height="15.0" fill="rgb(207,116,7)" rx="2" ry="2" />
<text  x="182.36" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="689.4" y="1861" width="0.2" height="15.0" fill="rgb(212,29,12)" rx="2" ry="2" />
<text  x="692.44" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="761.4" y="1669" width="0.2" height="15.0" fill="rgb(209,117,30)" rx="2" ry="2" />
<text  x="764.43" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="905.2" y="1989" width="0.4" height="15.0" fill="rgb(212,188,49)" rx="2" ry="2" />
<text  x="908.21" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="63.5" y="1877" width="0.2" height="15.0" fill="rgb(230,203,32)" rx="2" ry="2" />
<text  x="66.55" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="994.9" y="1669" width="0.2" height="15.0" fill="rgb(231,193,34)" rx="2" ry="2" />
<text  x="997.85" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="644.2" y="1781" width="0.2" height="15.0" fill="rgb(254,127,37)" rx="2" ry="2" />
<text  x="647.23" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="501.6" y="1829" width="0.2" height="15.0" fill="rgb(217,107,7)" rx="2" ry="2" />
<text  x="504.63" y="1839.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="1170.0" y="2021" width="0.2" height="15.0" fill="rgb(220,195,15)" rx="2" ry="2" />
<text  x="1172.97" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="981.8" y="1893" width="0.2" height="15.0" fill="rgb(229,124,14)" rx="2" ry="2" />
<text  x="984.76" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="456.8" y="1845" width="0.2" height="15.0" fill="rgb(212,18,24)" rx="2" ry="2" />
<text  x="459.81" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1137.4" y="1909" width="0.2" height="15.0" fill="rgb(216,184,8)" rx="2" ry="2" />
<text  x="1140.45" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="132.6" y="1941" width="0.2" height="15.0" fill="rgb(224,225,13)" rx="2" ry="2" />
<text  x="135.56" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="545.3" y="1909" width="0.6" height="15.0" fill="rgb(232,200,12)" rx="2" ry="2" />
<text  x="548.26" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="215.5" y="1893" width="0.2" height="15.0" fill="rgb(214,219,54)" rx="2" ry="2" />
<text  x="218.46" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="360.2" y="1909" width="0.2" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="363.23" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1172.2" y="1957" width="0.1" height="15.0" fill="rgb(241,163,18)" rx="2" ry="2" />
<text  x="1175.15" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="178.2" y="1973" width="1.0" height="15.0" fill="rgb(206,63,33)" rx="2" ry="2" />
<text  x="181.17" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="185.3" y="2021" width="0.2" height="15.0" fill="rgb(218,197,29)" rx="2" ry="2" />
<text  x="188.31" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="58.2" y="1893" width="0.2" height="15.0" fill="rgb(214,84,49)" rx="2" ry="2" />
<text  x="61.19" y="1903.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="689.4" y="1525" width="0.2" height="15.0" fill="rgb(224,161,8)" rx="2" ry="2" />
<text  x="692.44" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1477" width="18.0" height="15.0" fill="rgb(221,42,45)" rx="2" ry="2" />
<text  x="107.40" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="572.4" y="1813" width="0.2" height="15.0" fill="rgb(252,98,19)" rx="2" ry="2" />
<text  x="575.43" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="976.6" y="1925" width="0.2" height="15.0" fill="rgb(250,48,6)" rx="2" ry="2" />
<text  x="979.61" y="1935.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="775.3" y="1525" width="0.4" height="15.0" fill="rgb(216,107,35)" rx="2" ry="2" />
<text  x="778.31" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="343.6" y="1861" width="0.2" height="15.0" fill="rgb(231,11,47)" rx="2" ry="2" />
<text  x="346.57" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="118.5" y="37" width="0.4" height="15.0" fill="rgb(212,219,30)" rx="2" ry="2" />
<text  x="121.48" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="335.6" y="1637" width="0.2" height="15.0" fill="rgb(237,190,39)" rx="2" ry="2" />
<text  x="338.64" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="336.4" y="1845" width="0.4" height="15.0" fill="rgb(226,50,32)" rx="2" ry="2" />
<text  x="339.43" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.4" y="2053" width="0.2" height="15.0" fill="rgb(237,24,41)" rx="2" ry="2" />
<text  x="17.36" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="532.8" y="1925" width="0.2" height="15.0" fill="rgb(232,25,41)" rx="2" ry="2" />
<text  x="535.77" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="905.2" y="2037" width="0.8" height="15.0" fill="rgb(223,192,26)" rx="2" ry="2" />
<text  x="908.21" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="243.8" y="1781" width="0.2" height="15.0" fill="rgb(231,61,47)" rx="2" ry="2" />
<text  x="246.82" y="1791.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="643.8" y="1701" width="0.2" height="15.0" fill="rgb(239,171,32)" rx="2" ry="2" />
<text  x="646.83" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="595.8" y="1845" width="0.2" height="15.0" fill="rgb(231,119,49)" rx="2" ry="2" />
<text  x="598.84" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1017.5" y="1845" width="0.2" height="15.0" fill="rgb(252,123,35)" rx="2" ry="2" />
<text  x="1020.46" y="1855.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="37.6" y="1973" width="0.2" height="15.0" fill="rgb(223,169,38)" rx="2" ry="2" />
<text  x="40.57" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="204.0" y="1941" width="0.6" height="15.0" fill="rgb(226,116,43)" rx="2" ry="2" />
<text  x="206.96" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="837.6" y="1925" width="0.6" height="15.0" fill="rgb(217,202,45)" rx="2" ry="2" />
<text  x="840.59" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (18 samples, 0.30%)</title><rect x="10.4" y="1845" width="3.6" height="15.0" fill="rgb(218,113,48)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="389.2" y="1701" width="0.2" height="15.0" fill="rgb(218,66,30)" rx="2" ry="2" />
<text  x="392.19" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="53.2" y="1925" width="0.2" height="15.0" fill="rgb(251,22,41)" rx="2" ry="2" />
<text  x="56.23" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="694.8" y="1973" width="0.4" height="15.0" fill="rgb(207,108,13)" rx="2" ry="2" />
<text  x="697.80" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="285.1" y="1749" width="0.2" height="15.0" fill="rgb(229,211,40)" rx="2" ry="2" />
<text  x="288.07" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (52 samples, 0.87%)</title><rect x="1101.5" y="1653" width="10.4" height="15.0" fill="rgb(250,64,47)" rx="2" ry="2" />
<text  x="1104.55" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="822.5" y="1861" width="0.2" height="15.0" fill="rgb(232,176,14)" rx="2" ry="2" />
<text  x="825.51" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="963.5" y="1973" width="0.2" height="15.0" fill="rgb(249,31,32)" rx="2" ry="2" />
<text  x="966.52" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="157.5" y="1893" width="0.2" height="15.0" fill="rgb(222,168,13)" rx="2" ry="2" />
<text  x="160.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="936.5" y="2005" width="0.6" height="15.0" fill="rgb(243,115,38)" rx="2" ry="2" />
<text  x="939.55" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="800.7" y="1541" width="0.2" height="15.0" fill="rgb(236,212,49)" rx="2" ry="2" />
<text  x="803.70" y="1551.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="876.3" y="1925" width="0.8" height="15.0" fill="rgb(231,114,25)" rx="2" ry="2" />
<text  x="879.26" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="517.3" y="1989" width="0.8" height="15.0" fill="rgb(218,108,45)" rx="2" ry="2" />
<text  x="520.30" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="219.0" y="1845" width="0.2" height="15.0" fill="rgb(239,55,20)" rx="2" ry="2" />
<text  x="222.03" y="1855.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="849.7" y="1813" width="0.2" height="15.0" fill="rgb(245,228,28)" rx="2" ry="2" />
<text  x="852.68" y="1823.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (9 samples, 0.15%)</title><rect x="521.7" y="1973" width="1.7" height="15.0" fill="rgb(253,41,8)" rx="2" ry="2" />
<text  x="524.66" y="1983.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="771.7" y="1477" width="0.2" height="15.0" fill="rgb(213,218,11)" rx="2" ry="2" />
<text  x="774.74" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="219.2" y="1845" width="0.2" height="15.0" fill="rgb(219,60,6)" rx="2" ry="2" />
<text  x="222.23" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (1 samples, 0.02%)</title><rect x="850.9" y="1957" width="0.2" height="15.0" fill="rgb(230,81,37)" rx="2" ry="2" />
<text  x="853.87" y="1967.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="343.6" y="1717" width="0.2" height="15.0" fill="rgb(226,138,35)" rx="2" ry="2" />
<text  x="346.57" y="1727.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (64 samples, 1.08%)</title><rect x="1084.3" y="1925" width="12.7" height="15.0" fill="rgb(237,179,11)" rx="2" ry="2" />
<text  x="1087.30" y="1935.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="292.8" y="1461" width="0.2" height="15.0" fill="rgb(254,211,41)" rx="2" ry="2" />
<text  x="295.80" y="1471.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="335.8" y="1845" width="0.6" height="15.0" fill="rgb(211,63,0)" rx="2" ry="2" />
<text  x="338.84" y="1855.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="837.6" y="1893" width="0.6" height="15.0" fill="rgb(227,171,2)" rx="2" ry="2" />
<text  x="840.59" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="509.0" y="1845" width="0.2" height="15.0" fill="rgb(215,98,7)" rx="2" ry="2" />
<text  x="511.97" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="319.2" y="1781" width="0.2" height="15.0" fill="rgb(225,193,18)" rx="2" ry="2" />
<text  x="322.18" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (13 samples, 0.22%)</title><rect x="989.3" y="1973" width="2.6" height="15.0" fill="rgb(217,70,33)" rx="2" ry="2" />
<text  x="992.30" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (6 samples, 0.10%)</title><rect x="70.9" y="1925" width="1.2" height="15.0" fill="rgb(227,213,31)" rx="2" ry="2" />
<text  x="73.88" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="166.7" y="2005" width="0.2" height="15.0" fill="rgb(214,61,7)" rx="2" ry="2" />
<text  x="169.67" y="2015.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="457.2" y="1653" width="0.2" height="15.0" fill="rgb(231,112,2)" rx="2" ry="2" />
<text  x="460.21" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1006.0" y="1941" width="0.4" height="15.0" fill="rgb(218,194,31)" rx="2" ry="2" />
<text  x="1008.96" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="973.4" y="1733" width="0.2" height="15.0" fill="rgb(229,36,49)" rx="2" ry="2" />
<text  x="976.44" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="167.9" y="1941" width="0.2" height="15.0" fill="rgb(235,140,43)" rx="2" ry="2" />
<text  x="170.86" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.18%)</title><rect x="193.2" y="2021" width="2.2" height="15.0" fill="rgb(217,133,15)" rx="2" ry="2" />
<text  x="196.25" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="907.0" y="1989" width="0.2" height="15.0" fill="rgb(221,172,44)" rx="2" ry="2" />
<text  x="910.00" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (1 samples, 0.02%)</title><rect x="644.8" y="2005" width="0.2" height="15.0" fill="rgb(246,93,25)" rx="2" ry="2" />
<text  x="647.82" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (11 samples, 0.18%)</title><rect x="293.2" y="1605" width="2.2" height="15.0" fill="rgb(218,223,1)" rx="2" ry="2" />
<text  x="296.20" y="1615.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="360.2" y="1733" width="0.2" height="15.0" fill="rgb(215,63,33)" rx="2" ry="2" />
<text  x="363.23" y="1743.5" ></text>
</g>
<g >
<title>tcp_init_congestion_control (1 samples, 0.02%)</title><rect x="271.8" y="1525" width="0.2" height="15.0" fill="rgb(249,155,47)" rx="2" ry="2" />
<text  x="274.78" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="319.2" y="1749" width="0.2" height="15.0" fill="rgb(226,126,11)" rx="2" ry="2" />
<text  x="322.18" y="1759.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="838.0" y="1877" width="0.2" height="15.0" fill="rgb(240,106,4)" rx="2" ry="2" />
<text  x="840.98" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="611.7" y="1829" width="0.4" height="15.0" fill="rgb(240,81,2)" rx="2" ry="2" />
<text  x="614.70" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="170.4" y="1973" width="0.6" height="15.0" fill="rgb(239,207,0)" rx="2" ry="2" />
<text  x="173.44" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="565.5" y="1893" width="0.6" height="15.0" fill="rgb(218,166,23)" rx="2" ry="2" />
<text  x="568.49" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="965.3" y="2005" width="0.2" height="15.0" fill="rgb(243,156,25)" rx="2" ry="2" />
<text  x="968.30" y="2015.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (2 samples, 0.03%)</title><rect x="1004.8" y="1957" width="0.4" height="15.0" fill="rgb(250,113,44)" rx="2" ry="2" />
<text  x="1007.77" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10 samples, 0.17%)</title><rect x="401.3" y="1909" width="2.0" height="15.0" fill="rgb(223,175,45)" rx="2" ry="2" />
<text  x="404.28" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="530.8" y="1989" width="0.2" height="15.0" fill="rgb(211,186,41)" rx="2" ry="2" />
<text  x="533.79" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="336.6" y="1749" width="0.2" height="15.0" fill="rgb(236,133,51)" rx="2" ry="2" />
<text  x="339.63" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="319.2" y="1717" width="0.2" height="15.0" fill="rgb(236,86,12)" rx="2" ry="2" />
<text  x="322.18" y="1727.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="58.2" y="1653" width="0.2" height="15.0" fill="rgb(249,59,45)" rx="2" ry="2" />
<text  x="61.19" y="1663.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1049.4" y="1973" width="0.2" height="15.0" fill="rgb(233,83,41)" rx="2" ry="2" />
<text  x="1052.39" y="1983.5" ></text>
</g>
<g >
<title>free_unref_page (1 samples, 0.02%)</title><rect x="1069.0" y="1861" width="0.2" height="15.0" fill="rgb(224,92,43)" rx="2" ry="2" />
<text  x="1072.03" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (70 samples, 1.18%)</title><rect x="210.7" y="1941" width="13.9" height="15.0" fill="rgb(248,1,46)" rx="2" ry="2" />
<text  x="213.70" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="58.2" y="1637" width="0.2" height="15.0" fill="rgb(222,152,15)" rx="2" ry="2" />
<text  x="61.19" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="935.0" y="1925" width="0.2" height="15.0" fill="rgb(207,66,7)" rx="2" ry="2" />
<text  x="937.96" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="360.2" y="1701" width="0.2" height="15.0" fill="rgb(210,111,32)" rx="2" ry="2" />
<text  x="363.23" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="66.9" y="1845" width="0.2" height="15.0" fill="rgb(236,88,22)" rx="2" ry="2" />
<text  x="69.92" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="904.8" y="2037" width="0.2" height="15.0" fill="rgb(237,178,52)" rx="2" ry="2" />
<text  x="907.82" y="2047.5" ></text>
</g>
<g >
<title>jump_fcontext (10 samples, 0.17%)</title><rect x="985.5" y="2005" width="2.0" height="15.0" fill="rgb(231,193,39)" rx="2" ry="2" />
<text  x="988.53" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="906.0" y="1989" width="0.2" height="15.0" fill="rgb(244,79,43)" rx="2" ry="2" />
<text  x="909.01" y="1999.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="644.2" y="1509" width="0.2" height="15.0" fill="rgb(234,160,39)" rx="2" ry="2" />
<text  x="647.23" y="1519.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="973.4" y="1669" width="0.2" height="15.0" fill="rgb(216,60,14)" rx="2" ry="2" />
<text  x="976.44" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="82.2" y="1909" width="0.2" height="15.0" fill="rgb(246,29,21)" rx="2" ry="2" />
<text  x="85.19" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (16 samples, 0.27%)</title><rect x="877.3" y="1957" width="3.1" height="15.0" fill="rgb(243,115,41)" rx="2" ry="2" />
<text  x="880.25" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (4 samples, 0.07%)</title><rect x="642.4" y="1973" width="0.8" height="15.0" fill="rgb(212,120,3)" rx="2" ry="2" />
<text  x="645.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="702.1" y="1621" width="0.2" height="15.0" fill="rgb(253,3,23)" rx="2" ry="2" />
<text  x="705.13" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.24%)</title><rect x="610.7" y="1861" width="2.8" height="15.0" fill="rgb(206,224,50)" rx="2" ry="2" />
<text  x="613.71" y="1871.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="756.3" y="1701" width="0.4" height="15.0" fill="rgb(224,113,54)" rx="2" ry="2" />
<text  x="759.28" y="1711.5" ></text>
</g>
<g >
<title>free_unref_page (10 samples, 0.17%)</title><rect x="1071.2" y="1845" width="2.0" height="15.0" fill="rgb(231,141,19)" rx="2" ry="2" />
<text  x="1074.21" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.9" y="1957" width="0.2" height="15.0" fill="rgb(235,203,15)" rx="2" ry="2" />
<text  x="1151.95" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (8 samples, 0.13%)</title><rect x="888.0" y="2005" width="1.5" height="15.0" fill="rgb(248,178,43)" rx="2" ry="2" />
<text  x="890.96" y="2015.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (2 samples, 0.03%)</title><rect x="745.4" y="1733" width="0.4" height="15.0" fill="rgb(213,136,30)" rx="2" ry="2" />
<text  x="748.37" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="248.2" y="1941" width="0.2" height="15.0" fill="rgb(250,35,28)" rx="2" ry="2" />
<text  x="251.18" y="1951.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="100.2" y="2005" width="0.6" height="15.0" fill="rgb(237,11,32)" rx="2" ry="2" />
<text  x="103.24" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="88.1" y="1957" width="0.6" height="15.0" fill="rgb(212,184,19)" rx="2" ry="2" />
<text  x="91.14" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="822.5" y="1605" width="0.2" height="15.0" fill="rgb(212,63,4)" rx="2" ry="2" />
<text  x="825.51" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (6 samples, 0.10%)</title><rect x="889.7" y="1973" width="1.2" height="15.0" fill="rgb(235,200,3)" rx="2" ry="2" />
<text  x="892.74" y="1983.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_device (1 samples, 0.02%)</title><rect x="413.6" y="1909" width="0.2" height="15.0" fill="rgb(225,162,38)" rx="2" ry="2" />
<text  x="416.58" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="93.5" y="2037" width="0.2" height="15.0" fill="rgb(208,108,41)" rx="2" ry="2" />
<text  x="96.49" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="564.9" y="1829" width="0.2" height="15.0" fill="rgb(239,132,41)" rx="2" ry="2" />
<text  x="567.90" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="250.8" y="1893" width="0.2" height="15.0" fill="rgb(227,19,8)" rx="2" ry="2" />
<text  x="253.76" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="572.2" y="1765" width="0.2" height="15.0" fill="rgb(249,34,14)" rx="2" ry="2" />
<text  x="575.24" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="243.6" y="1957" width="0.4" height="15.0" fill="rgb(240,217,32)" rx="2" ry="2" />
<text  x="246.62" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="378.1" y="1829" width="0.2" height="15.0" fill="rgb(208,175,31)" rx="2" ry="2" />
<text  x="381.08" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="693.4" y="1973" width="0.2" height="15.0" fill="rgb(205,185,29)" rx="2" ry="2" />
<text  x="696.41" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.84%)</title><rect x="1149.1" y="1957" width="10.0" height="15.0" fill="rgb(211,118,36)" rx="2" ry="2" />
<text  x="1152.15" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="561.7" y="1861" width="0.2" height="15.0" fill="rgb(213,165,9)" rx="2" ry="2" />
<text  x="564.72" y="1871.5" ></text>
</g>
<g >
<title>tcp_drop (1 samples, 0.02%)</title><rect x="827.1" y="1621" width="0.2" height="15.0" fill="rgb(228,119,50)" rx="2" ry="2" />
<text  x="830.08" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (466 samples, 7.83%)</title><rect x="1030.7" y="2037" width="92.5" height="15.0" fill="rgb(233,115,22)" rx="2" ry="2" />
<text  x="1033.75" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="822.5" y="1685" width="0.2" height="15.0" fill="rgb(232,229,19)" rx="2" ry="2" />
<text  x="825.51" y="1695.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.8" y="1877" width="0.2" height="15.0" fill="rgb(239,96,0)" rx="2" ry="2" />
<text  x="128.82" y="1887.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (5 samples, 0.08%)</title><rect x="836.0" y="1925" width="1.0" height="15.0" fill="rgb(251,141,26)" rx="2" ry="2" />
<text  x="839.00" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="726.5" y="1525" width="0.2" height="15.0" fill="rgb(211,168,53)" rx="2" ry="2" />
<text  x="729.53" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="389" width="17.5" height="15.0" fill="rgb(245,50,0)" rx="2" ry="2" />
<text  x="107.40" y="399.5" ></text>
</g>
<g >
<title>security_sk_alloc (1 samples, 0.02%)</title><rect x="501.8" y="1557" width="0.2" height="15.0" fill="rgb(220,91,7)" rx="2" ry="2" />
<text  x="504.83" y="1567.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="155.6" y="1877" width="0.6" height="15.0" fill="rgb(215,36,50)" rx="2" ry="2" />
<text  x="158.57" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="58.2" y="1733" width="0.2" height="15.0" fill="rgb(226,41,53)" rx="2" ry="2" />
<text  x="61.19" y="1743.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="329.3" y="1797" width="0.2" height="15.0" fill="rgb(252,10,37)" rx="2" ry="2" />
<text  x="332.29" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="656.3" y="1957" width="1.2" height="15.0" fill="rgb(249,115,15)" rx="2" ry="2" />
<text  x="659.32" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="178.0" y="1989" width="1.2" height="15.0" fill="rgb(227,6,30)" rx="2" ry="2" />
<text  x="180.98" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="973.2" y="1957" width="0.2" height="15.0" fill="rgb(251,228,0)" rx="2" ry="2" />
<text  x="976.24" y="1967.5" ></text>
</g>
<g >
<title>lock_timer_base (6 samples, 0.10%)</title><rect x="327.1" y="1749" width="1.2" height="15.0" fill="rgb(232,79,14)" rx="2" ry="2" />
<text  x="330.11" y="1759.5" ></text>
</g>
<g >
<title>__set_pte_vaddr (1 samples, 0.02%)</title><rect x="10.6" y="1829" width="0.2" height="15.0" fill="rgb(206,178,2)" rx="2" ry="2" />
<text  x="13.59" y="1839.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="626.8" y="1973" width="0.2" height="15.0" fill="rgb(222,176,40)" rx="2" ry="2" />
<text  x="629.77" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="622.0" y="2037" width="0.4" height="15.0" fill="rgb(220,34,36)" rx="2" ry="2" />
<text  x="625.01" y="2047.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="382.0" y="1813" width="0.2" height="15.0" fill="rgb(219,226,50)" rx="2" ry="2" />
<text  x="385.05" y="1823.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1103.1" y="1493" width="0.6" height="15.0" fill="rgb(205,213,18)" rx="2" ry="2" />
<text  x="1106.14" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (21 samples, 0.35%)</title><rect x="646.6" y="2037" width="4.2" height="15.0" fill="rgb(212,200,26)" rx="2" ry="2" />
<text  x="649.61" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1006.2" y="1893" width="0.2" height="15.0" fill="rgb(238,205,12)" rx="2" ry="2" />
<text  x="1009.16" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="165.5" y="1877" width="0.2" height="15.0" fill="rgb(248,190,15)" rx="2" ry="2" />
<text  x="168.48" y="1887.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="924.5" y="1909" width="0.1" height="15.0" fill="rgb(228,194,31)" rx="2" ry="2" />
<text  x="927.45" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (13 samples, 0.22%)</title><rect x="241.0" y="1893" width="2.6" height="15.0" fill="rgb(241,65,9)" rx="2" ry="2" />
<text  x="244.04" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1017.5" y="1909" width="0.2" height="15.0" fill="rgb(246,77,11)" rx="2" ry="2" />
<text  x="1020.46" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (90 samples, 1.51%)</title><rect x="140.5" y="1957" width="17.8" height="15.0" fill="rgb(217,229,20)" rx="2" ry="2" />
<text  x="143.49" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="122.4" y="1557" width="0.2" height="15.0" fill="rgb(227,160,44)" rx="2" ry="2" />
<text  x="125.45" y="1567.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="293.0" y="1397" width="0.2" height="15.0" fill="rgb(228,125,13)" rx="2" ry="2" />
<text  x="296.00" y="1407.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="255.1" y="1893" width="0.2" height="15.0" fill="rgb(239,56,26)" rx="2" ry="2" />
<text  x="258.12" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="146.4" y="1893" width="0.8" height="15.0" fill="rgb(243,202,30)" rx="2" ry="2" />
<text  x="149.44" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="501.6" y="1861" width="0.2" height="15.0" fill="rgb(240,95,34)" rx="2" ry="2" />
<text  x="504.63" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="121.3" y="37" width="0.2" height="15.0" fill="rgb(251,24,32)" rx="2" ry="2" />
<text  x="124.26" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="399.1" y="1845" width="0.2" height="15.0" fill="rgb(213,40,11)" rx="2" ry="2" />
<text  x="402.10" y="1855.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="510.4" y="1893" width="0.2" height="15.0" fill="rgb(220,85,9)" rx="2" ry="2" />
<text  x="513.36" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="119.7" y="53" width="0.2" height="15.0" fill="rgb(207,216,12)" rx="2" ry="2" />
<text  x="122.67" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="67.9" y="1973" width="0.2" height="15.0" fill="rgb(251,23,43)" rx="2" ry="2" />
<text  x="70.91" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="186.7" y="1589" width="0.2" height="15.0" fill="rgb(213,52,15)" rx="2" ry="2" />
<text  x="189.70" y="1599.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (95 samples, 1.60%)</title><rect x="582.9" y="2021" width="18.9" height="15.0" fill="rgb(209,113,16)" rx="2" ry="2" />
<text  x="585.94" y="2031.5" ></text>
</g>
<g >
<title>rcu_segcblist_insert_count (1 samples, 0.02%)</title><rect x="855.6" y="1893" width="0.2" height="15.0" fill="rgb(223,214,16)" rx="2" ry="2" />
<text  x="858.63" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (3 samples, 0.05%)</title><rect x="902.4" y="2037" width="0.6" height="15.0" fill="rgb(243,137,1)" rx="2" ry="2" />
<text  x="905.44" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="135.3" y="1909" width="0.2" height="15.0" fill="rgb(218,120,31)" rx="2" ry="2" />
<text  x="138.34" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc (49 samples, 0.82%)</title><rect x="390.0" y="1957" width="9.7" height="15.0" fill="rgb(225,105,5)" rx="2" ry="2" />
<text  x="392.98" y="1967.5" ></text>
</g>
<g >
<title>tcp_sndbuf_expand (1 samples, 0.02%)</title><rect x="866.9" y="1557" width="0.2" height="15.0" fill="rgb(230,155,1)" rx="2" ry="2" />
<text  x="869.94" y="1567.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="363.8" y="1941" width="0.2" height="15.0" fill="rgb(227,162,18)" rx="2" ry="2" />
<text  x="366.80" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="655.9" y="1877" width="0.2" height="15.0" fill="rgb(205,70,35)" rx="2" ry="2" />
<text  x="658.93" y="1887.5" ></text>
</g>
<g >
<title>__close (2 samples, 0.03%)</title><rect x="199.8" y="2037" width="0.4" height="15.0" fill="rgb(246,64,10)" rx="2" ry="2" />
<text  x="202.79" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="827.1" y="1749" width="0.2" height="15.0" fill="rgb(229,128,36)" rx="2" ry="2" />
<text  x="830.08" y="1759.5" ></text>
</g>
<g >
<title>process_backlog (52 samples, 0.87%)</title><rect x="1101.5" y="1701" width="10.4" height="15.0" fill="rgb(244,36,48)" rx="2" ry="2" />
<text  x="1104.55" y="1711.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="769.0" y="1605" width="0.2" height="15.0" fill="rgb(216,123,39)" rx="2" ry="2" />
<text  x="771.97" y="1615.5" ></text>
</g>
<g >
<title>call_rcu_sched (9 samples, 0.15%)</title><rect x="469.1" y="1957" width="1.8" height="15.0" fill="rgb(212,159,38)" rx="2" ry="2" />
<text  x="472.11" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="880.4" y="1973" width="0.6" height="15.0" fill="rgb(225,204,42)" rx="2" ry="2" />
<text  x="883.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (5 samples, 0.08%)</title><rect x="166.9" y="2021" width="1.0" height="15.0" fill="rgb(232,188,13)" rx="2" ry="2" />
<text  x="169.87" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="333.7" y="1829" width="0.2" height="15.0" fill="rgb(224,174,14)" rx="2" ry="2" />
<text  x="336.66" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="85.2" y="1973" width="0.2" height="15.0" fill="rgb(245,209,39)" rx="2" ry="2" />
<text  x="88.16" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="878.4" y="1925" width="0.2" height="15.0" fill="rgb(220,211,28)" rx="2" ry="2" />
<text  x="881.44" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="962.3" y="1749" width="0.2" height="15.0" fill="rgb(220,119,25)" rx="2" ry="2" />
<text  x="965.33" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="110.9" y="37" width="0.2" height="15.0" fill="rgb(227,113,37)" rx="2" ry="2" />
<text  x="113.94" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.24%)</title><rect x="14.8" y="2021" width="2.7" height="15.0" fill="rgb(242,63,1)" rx="2" ry="2" />
<text  x="17.76" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1123.4" y="1973" width="0.2" height="15.0" fill="rgb(243,65,31)" rx="2" ry="2" />
<text  x="1126.36" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="516.9" y="1973" width="0.4" height="15.0" fill="rgb(240,25,39)" rx="2" ry="2" />
<text  x="519.90" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (8 samples, 0.13%)</title><rect x="575.0" y="2005" width="1.6" height="15.0" fill="rgb(242,119,15)" rx="2" ry="2" />
<text  x="578.01" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="17.5" y="2021" width="0.2" height="15.0" fill="rgb(225,16,19)" rx="2" ry="2" />
<text  x="20.54" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (93 samples, 1.56%)</title><rect x="909.6" y="1989" width="18.4" height="15.0" fill="rgb(251,2,38)" rx="2" ry="2" />
<text  x="912.58" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.34%)</title><rect x="17.7" y="2021" width="4.0" height="15.0" fill="rgb(205,207,25)" rx="2" ry="2" />
<text  x="20.73" y="2031.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1050.0" y="1973" width="0.4" height="15.0" fill="rgb(222,199,12)" rx="2" ry="2" />
<text  x="1052.99" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="271.8" y="1685" width="0.2" height="15.0" fill="rgb(240,158,14)" rx="2" ry="2" />
<text  x="274.78" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="213.3" y="1797" width="0.2" height="15.0" fill="rgb(244,215,19)" rx="2" ry="2" />
<text  x="216.28" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="179.8" y="1925" width="0.2" height="15.0" fill="rgb(225,126,53)" rx="2" ry="2" />
<text  x="182.76" y="1935.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.02%)</title><rect x="727.3" y="1701" width="0.2" height="15.0" fill="rgb(214,142,12)" rx="2" ry="2" />
<text  x="730.32" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1158.9" y="1765" width="0.2" height="15.0" fill="rgb(252,55,7)" rx="2" ry="2" />
<text  x="1161.86" y="1775.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="514.1" y="1925" width="0.4" height="15.0" fill="rgb(247,228,36)" rx="2" ry="2" />
<text  x="517.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.63%)</title><rect x="104.0" y="1637" width="19.2" height="15.0" fill="rgb(251,155,6)" rx="2" ry="2" />
<text  x="107.00" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="213.3" y="1893" width="0.2" height="15.0" fill="rgb(229,24,44)" rx="2" ry="2" />
<text  x="216.28" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1139.4" y="2005" width="0.2" height="15.0" fill="rgb(242,166,11)" rx="2" ry="2" />
<text  x="1142.43" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (7 samples, 0.12%)</title><rect x="72.1" y="1941" width="1.4" height="15.0" fill="rgb(235,130,10)" rx="2" ry="2" />
<text  x="75.07" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="893.1" y="2037" width="0.4" height="15.0" fill="rgb(253,37,3)" rx="2" ry="2" />
<text  x="896.12" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.71%)</title><rect x="893.7" y="2021" width="8.3" height="15.0" fill="rgb(252,167,32)" rx="2" ry="2" />
<text  x="896.71" y="2031.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="402.9" y="1797" width="0.2" height="15.0" fill="rgb(237,217,27)" rx="2" ry="2" />
<text  x="405.87" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="336.6" y="1733" width="0.2" height="15.0" fill="rgb(215,31,11)" rx="2" ry="2" />
<text  x="339.63" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (29 samples, 0.49%)</title><rect x="54.2" y="1973" width="5.8" height="15.0" fill="rgb(212,83,14)" rx="2" ry="2" />
<text  x="57.23" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="572.2" y="1813" width="0.2" height="15.0" fill="rgb(214,207,36)" rx="2" ry="2" />
<text  x="575.24" y="1823.5" ></text>
</g>
<g >
<title>inet_sendmsg (437 samples, 7.34%)</title><rect x="251.0" y="1925" width="86.6" height="15.0" fill="rgb(247,0,2)" rx="2" ry="2" />
<text  x="253.96" y="1935.5" >inet_sendmsg</text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="731.3" y="1653" width="0.2" height="15.0" fill="rgb(234,109,5)" rx="2" ry="2" />
<text  x="734.29" y="1663.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="754.1" y="1685" width="0.2" height="15.0" fill="rgb(211,66,24)" rx="2" ry="2" />
<text  x="757.09" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (113 samples, 1.90%)</title><rect x="103.8" y="1893" width="22.4" height="15.0" fill="rgb(217,170,50)" rx="2" ry="2" />
<text  x="106.81" y="1903.5" >[..</text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="725.9" y="1701" width="0.8" height="15.0" fill="rgb(239,22,11)" rx="2" ry="2" />
<text  x="728.93" y="1711.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (9 samples, 0.15%)</title><rect x="469.1" y="1941" width="1.8" height="15.0" fill="rgb(240,219,43)" rx="2" ry="2" />
<text  x="472.11" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="643.8" y="1829" width="0.2" height="15.0" fill="rgb(206,213,9)" rx="2" ry="2" />
<text  x="646.83" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1017.5" y="1925" width="0.2" height="15.0" fill="rgb(252,181,23)" rx="2" ry="2" />
<text  x="1020.46" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="887.6" y="2005" width="0.4" height="15.0" fill="rgb(229,33,31)" rx="2" ry="2" />
<text  x="890.56" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (8 samples, 0.13%)</title><rect x="536.3" y="1989" width="1.6" height="15.0" fill="rgb(232,212,6)" rx="2" ry="2" />
<text  x="539.34" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="964.9" y="2005" width="0.2" height="15.0" fill="rgb(220,127,9)" rx="2" ry="2" />
<text  x="967.91" y="2015.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="263.3" y="1861" width="0.2" height="15.0" fill="rgb(223,117,28)" rx="2" ry="2" />
<text  x="266.25" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1123.4" y="1877" width="0.2" height="15.0" fill="rgb(244,33,25)" rx="2" ry="2" />
<text  x="1126.36" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="55.8" y="1893" width="0.6" height="15.0" fill="rgb(212,80,10)" rx="2" ry="2" />
<text  x="58.81" y="1903.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1112.3" y="1733" width="0.2" height="15.0" fill="rgb(251,190,23)" rx="2" ry="2" />
<text  x="1115.26" y="1743.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (2 samples, 0.03%)</title><rect x="571.8" y="1989" width="0.4" height="15.0" fill="rgb(254,50,38)" rx="2" ry="2" />
<text  x="574.84" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="327.1" y="1733" width="1.2" height="15.0" fill="rgb(248,147,52)" rx="2" ry="2" />
<text  x="330.11" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="827.1" y="1829" width="0.2" height="15.0" fill="rgb(213,170,3)" rx="2" ry="2" />
<text  x="830.08" y="1839.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="482.0" y="1957" width="0.8" height="15.0" fill="rgb(217,84,18)" rx="2" ry="2" />
<text  x="485.00" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.08%)</title><rect x="615.1" y="2005" width="1.0" height="15.0" fill="rgb(212,61,51)" rx="2" ry="2" />
<text  x="618.07" y="2015.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="899.9" y="1989" width="0.4" height="15.0" fill="rgb(245,110,45)" rx="2" ry="2" />
<text  x="902.86" y="1999.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="529.4" y="1941" width="0.2" height="15.0" fill="rgb(223,229,50)" rx="2" ry="2" />
<text  x="532.40" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="520.1" y="1973" width="1.2" height="15.0" fill="rgb(236,102,47)" rx="2" ry="2" />
<text  x="523.08" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="849.7" y="1861" width="0.2" height="15.0" fill="rgb(213,56,41)" rx="2" ry="2" />
<text  x="852.68" y="1871.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="942.9" y="1925" width="0.2" height="15.0" fill="rgb(230,124,54)" rx="2" ry="2" />
<text  x="945.89" y="1935.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="399.5" y="1893" width="0.2" height="15.0" fill="rgb(229,4,45)" rx="2" ry="2" />
<text  x="402.50" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1148.9" y="1909" width="0.2" height="15.0" fill="rgb(235,35,5)" rx="2" ry="2" />
<text  x="1151.95" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="32.8" y="1765" width="0.2" height="15.0" fill="rgb(238,71,37)" rx="2" ry="2" />
<text  x="35.81" y="1775.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="880.8" y="1909" width="0.2" height="15.0" fill="rgb(207,37,42)" rx="2" ry="2" />
<text  x="883.82" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="643.8" y="1877" width="0.2" height="15.0" fill="rgb(208,69,15)" rx="2" ry="2" />
<text  x="646.83" y="1887.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="730.7" y="1653" width="0.6" height="15.0" fill="rgb(206,65,32)" rx="2" ry="2" />
<text  x="733.69" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="82.8" y="1925" width="0.4" height="15.0" fill="rgb(253,28,54)" rx="2" ry="2" />
<text  x="85.78" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="962.3" y="1973" width="0.2" height="15.0" fill="rgb(213,112,8)" rx="2" ry="2" />
<text  x="965.33" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="914.3" y="1925" width="0.2" height="15.0" fill="rgb(229,24,15)" rx="2" ry="2" />
<text  x="917.34" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="43.3" y="2005" width="0.2" height="15.0" fill="rgb(208,95,21)" rx="2" ry="2" />
<text  x="46.32" y="2015.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="891.3" y="1989" width="0.2" height="15.0" fill="rgb(223,207,51)" rx="2" ry="2" />
<text  x="894.33" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="870.9" y="1877" width="0.6" height="15.0" fill="rgb(249,127,36)" rx="2" ry="2" />
<text  x="873.90" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="285.1" y="1669" width="0.2" height="15.0" fill="rgb(234,24,17)" rx="2" ry="2" />
<text  x="288.07" y="1679.5" ></text>
</g>
<g >
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="286.9" y="1797" width="0.5" height="15.0" fill="rgb(232,168,10)" rx="2" ry="2" />
<text  x="289.85" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="549.2" y="1941" width="0.2" height="15.0" fill="rgb(233,26,49)" rx="2" ry="2" />
<text  x="552.23" y="1951.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (1 samples, 0.02%)</title><rect x="33.6" y="1989" width="0.2" height="15.0" fill="rgb(249,100,34)" rx="2" ry="2" />
<text  x="36.60" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (18 samples, 0.30%)</title><rect x="10.4" y="1877" width="3.6" height="15.0" fill="rgb(248,174,30)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="541.9" y="1909" width="0.4" height="15.0" fill="rgb(218,67,1)" rx="2" ry="2" />
<text  x="544.89" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1012.5" y="1941" width="0.2" height="15.0" fill="rgb(225,85,14)" rx="2" ry="2" />
<text  x="1015.50" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="913.3" y="1909" width="0.2" height="15.0" fill="rgb(221,191,29)" rx="2" ry="2" />
<text  x="916.34" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="822.5" y="1749" width="0.2" height="15.0" fill="rgb(218,214,23)" rx="2" ry="2" />
<text  x="825.51" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="774.1" y="1557" width="0.2" height="15.0" fill="rgb(253,0,34)" rx="2" ry="2" />
<text  x="777.12" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1123.4" y="1861" width="0.2" height="15.0" fill="rgb(209,219,31)" rx="2" ry="2" />
<text  x="1126.36" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (106 samples, 1.78%)</title><rect x="104.0" y="1813" width="21.0" height="15.0" fill="rgb(211,112,22)" rx="2" ry="2" />
<text  x="107.00" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (95 samples, 1.60%)</title><rect x="295.4" y="1733" width="18.8" height="15.0" fill="rgb(224,19,49)" rx="2" ry="2" />
<text  x="298.38" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="889.5" y="2021" width="1.8" height="15.0" fill="rgb(247,96,19)" rx="2" ry="2" />
<text  x="892.55" y="2031.5" ></text>
</g>
<g >
<title>__libc_fcntl (75 samples, 1.26%)</title><rect x="554.0" y="1989" width="14.9" height="15.0" fill="rgb(223,148,21)" rx="2" ry="2" />
<text  x="556.99" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="365.4" y="1701" width="0.2" height="15.0" fill="rgb(226,77,15)" rx="2" ry="2" />
<text  x="368.39" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (461 samples, 7.75%)</title><rect x="1031.7" y="2021" width="91.5" height="15.0" fill="rgb(217,184,15)" rx="2" ry="2" />
<text  x="1034.74" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="597.0" y="1813" width="0.4" height="15.0" fill="rgb(253,132,16)" rx="2" ry="2" />
<text  x="600.03" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="893.7" y="1973" width="0.4" height="15.0" fill="rgb(224,52,14)" rx="2" ry="2" />
<text  x="896.71" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="63.9" y="1877" width="0.4" height="15.0" fill="rgb(230,183,36)" rx="2" ry="2" />
<text  x="66.94" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="293.0" y="1493" width="0.2" height="15.0" fill="rgb(235,198,40)" rx="2" ry="2" />
<text  x="296.00" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="572.4" y="1861" width="0.2" height="15.0" fill="rgb(254,100,42)" rx="2" ry="2" />
<text  x="575.43" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="155.2" y="1877" width="0.4" height="15.0" fill="rgb(216,106,33)" rx="2" ry="2" />
<text  x="158.17" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="571.2" y="1973" width="0.2" height="15.0" fill="rgb(253,3,15)" rx="2" ry="2" />
<text  x="574.24" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="1143.8" y="1989" width="0.8" height="15.0" fill="rgb(215,152,35)" rx="2" ry="2" />
<text  x="1146.79" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="251.0" y="1909" width="0.2" height="15.0" fill="rgb(215,98,44)" rx="2" ry="2" />
<text  x="253.96" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (3 samples, 0.05%)</title><rect x="1145.4" y="2053" width="0.6" height="15.0" fill="rgb(243,21,10)" rx="2" ry="2" />
<text  x="1148.38" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="360.2" y="1797" width="0.2" height="15.0" fill="rgb(251,61,15)" rx="2" ry="2" />
<text  x="363.23" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="225.8" y="1957" width="0.2" height="15.0" fill="rgb(222,46,54)" rx="2" ry="2" />
<text  x="228.77" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="984.7" y="1973" width="0.6" height="15.0" fill="rgb(221,27,4)" rx="2" ry="2" />
<text  x="987.74" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.9" y="1861" width="0.2" height="15.0" fill="rgb(222,149,47)" rx="2" ry="2" />
<text  x="547.87" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.13%)</title><rect x="35.4" y="1957" width="1.6" height="15.0" fill="rgb(207,175,28)" rx="2" ry="2" />
<text  x="38.38" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="93.3" y="2021" width="0.2" height="15.0" fill="rgb(248,54,36)" rx="2" ry="2" />
<text  x="96.29" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 0.49%)</title><rect x="622.4" y="2021" width="5.8" height="15.0" fill="rgb(229,51,46)" rx="2" ry="2" />
<text  x="625.41" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="516.5" y="1909" width="0.2" height="15.0" fill="rgb(242,124,3)" rx="2" ry="2" />
<text  x="519.51" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="870.7" y="1925" width="0.8" height="15.0" fill="rgb(222,212,41)" rx="2" ry="2" />
<text  x="873.71" y="1935.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="742.6" y="1733" width="0.4" height="15.0" fill="rgb(240,195,29)" rx="2" ry="2" />
<text  x="745.59" y="1743.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="521.3" y="1957" width="0.2" height="15.0" fill="rgb(228,146,18)" rx="2" ry="2" />
<text  x="524.27" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="702.1" y="1749" width="0.2" height="15.0" fill="rgb(253,194,42)" rx="2" ry="2" />
<text  x="705.13" y="1759.5" ></text>
</g>
<g >
<title>sock_alloc_inode (27 samples, 0.45%)</title><rect x="394.3" y="1909" width="5.4" height="15.0" fill="rgb(232,99,48)" rx="2" ry="2" />
<text  x="397.34" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="413.2" y="1973" width="0.2" height="15.0" fill="rgb(230,103,38)" rx="2" ry="2" />
<text  x="416.18" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1139.4" y="1989" width="0.2" height="15.0" fill="rgb(250,183,22)" rx="2" ry="2" />
<text  x="1142.43" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1012.5" y="1925" width="0.2" height="15.0" fill="rgb(239,89,41)" rx="2" ry="2" />
<text  x="1015.50" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="121.3" y="101" width="0.2" height="15.0" fill="rgb(211,81,50)" rx="2" ry="2" />
<text  x="124.26" y="111.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="827.1" y="1717" width="0.2" height="15.0" fill="rgb(243,30,34)" rx="2" ry="2" />
<text  x="830.08" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="870.5" y="1877" width="0.2" height="15.0" fill="rgb(211,48,5)" rx="2" ry="2" />
<text  x="873.51" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="583.7" y="1925" width="1.4" height="15.0" fill="rgb(220,31,6)" rx="2" ry="2" />
<text  x="586.74" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="987.3" y="1989" width="0.2" height="15.0" fill="rgb(205,161,11)" rx="2" ry="2" />
<text  x="990.32" y="1999.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="565.9" y="1589" width="0.2" height="15.0" fill="rgb(246,206,9)" rx="2" ry="2" />
<text  x="568.89" y="1599.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="822.1" y="1829" width="0.2" height="15.0" fill="rgb(231,82,5)" rx="2" ry="2" />
<text  x="825.12" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="216.3" y="1893" width="0.2" height="15.0" fill="rgb(221,9,25)" rx="2" ry="2" />
<text  x="219.25" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="14.0" y="1829" width="0.2" height="15.0" fill="rgb(240,117,15)" rx="2" ry="2" />
<text  x="16.97" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="532.0" y="1941" width="0.8" height="15.0" fill="rgb(224,121,25)" rx="2" ry="2" />
<text  x="534.98" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="925.2" y="1909" width="0.2" height="15.0" fill="rgb(253,96,39)" rx="2" ry="2" />
<text  x="928.24" y="1919.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (9 samples, 0.15%)</title><rect x="751.7" y="1701" width="1.8" height="15.0" fill="rgb(232,220,8)" rx="2" ry="2" />
<text  x="754.71" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1176.3" y="2037" width="0.4" height="15.0" fill="rgb(220,81,5)" rx="2" ry="2" />
<text  x="1179.32" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="973.4" y="1765" width="0.2" height="15.0" fill="rgb(216,118,21)" rx="2" ry="2" />
<text  x="976.44" y="1775.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="523.6" y="1973" width="0.2" height="15.0" fill="rgb(242,34,6)" rx="2" ry="2" />
<text  x="526.65" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="892.3" y="2037" width="0.2" height="15.0" fill="rgb(241,207,8)" rx="2" ry="2" />
<text  x="895.32" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="167.9" y="1861" width="0.2" height="15.0" fill="rgb(244,48,14)" rx="2" ry="2" />
<text  x="170.86" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="442.3" y="1973" width="0.2" height="15.0" fill="rgb(215,189,32)" rx="2" ry="2" />
<text  x="445.34" y="1983.5" ></text>
</g>
<g >
<title>__alloc_skb (36 samples, 0.61%)</title><rect x="749.1" y="1717" width="7.2" height="15.0" fill="rgb(240,14,25)" rx="2" ry="2" />
<text  x="752.14" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="192.9" y="1909" width="0.1" height="15.0" fill="rgb(253,143,6)" rx="2" ry="2" />
<text  x="195.85" y="1919.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="255.3" y="1893" width="0.2" height="15.0" fill="rgb(235,200,7)" rx="2" ry="2" />
<text  x="258.32" y="1903.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="271.2" y="1781" width="0.2" height="15.0" fill="rgb(231,90,33)" rx="2" ry="2" />
<text  x="274.19" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="702.1" y="1701" width="0.2" height="15.0" fill="rgb(223,142,25)" rx="2" ry="2" />
<text  x="705.13" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1096.8" y="1765" width="0.2" height="15.0" fill="rgb(244,24,32)" rx="2" ry="2" />
<text  x="1099.79" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="973.4" y="1877" width="0.2" height="15.0" fill="rgb(231,82,45)" rx="2" ry="2" />
<text  x="976.44" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="314.0" y="1669" width="0.2" height="15.0" fill="rgb(237,57,17)" rx="2" ry="2" />
<text  x="317.02" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (735 samples, 12.35%)</title><rect x="704.3" y="1957" width="145.8" height="15.0" fill="rgb(208,197,6)" rx="2" ry="2" />
<text  x="707.32" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="726.5" y="1573" width="0.2" height="15.0" fill="rgb(249,178,39)" rx="2" ry="2" />
<text  x="729.53" y="1583.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="186.7" y="1637" width="0.2" height="15.0" fill="rgb(207,51,24)" rx="2" ry="2" />
<text  x="189.70" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="695.4" y="1973" width="0.2" height="15.0" fill="rgb(214,198,45)" rx="2" ry="2" />
<text  x="698.39" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="111.9" y="37" width="0.2" height="15.0" fill="rgb(212,146,34)" rx="2" ry="2" />
<text  x="114.94" y="47.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (19 samples, 0.32%)</title><rect x="17.9" y="1845" width="3.8" height="15.0" fill="rgb(248,19,6)" rx="2" ry="2" />
<text  x="20.93" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="394.1" y="1813" width="0.2" height="15.0" fill="rgb(246,170,38)" rx="2" ry="2" />
<text  x="397.14" y="1823.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="322.0" y="1813" width="0.2" height="15.0" fill="rgb(235,124,20)" rx="2" ry="2" />
<text  x="324.96" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="156.0" y="1669" width="0.2" height="15.0" fill="rgb(247,225,23)" rx="2" ry="2" />
<text  x="158.96" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (6 samples, 0.10%)</title><rect x="918.1" y="1877" width="1.2" height="15.0" fill="rgb(207,204,0)" rx="2" ry="2" />
<text  x="921.10" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="121.1" y="53" width="0.2" height="15.0" fill="rgb(233,162,43)" rx="2" ry="2" />
<text  x="124.06" y="63.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 0.91%)</title><rect x="628.2" y="2021" width="10.7" height="15.0" fill="rgb(219,15,4)" rx="2" ry="2" />
<text  x="631.16" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="646.2" y="1909" width="0.2" height="15.0" fill="rgb(228,175,10)" rx="2" ry="2" />
<text  x="649.21" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="142.7" y="1877" width="0.2" height="15.0" fill="rgb(236,27,12)" rx="2" ry="2" />
<text  x="145.68" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="921.5" y="1861" width="0.2" height="15.0" fill="rgb(215,84,37)" rx="2" ry="2" />
<text  x="924.48" y="1871.5" ></text>
</g>
<g >
<title>sock_sendmsg (453 samples, 7.61%)</title><rect x="250.0" y="1941" width="89.8" height="15.0" fill="rgb(228,119,37)" rx="2" ry="2" />
<text  x="252.97" y="1951.5" >sock_sendmsg</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="872.9" y="1909" width="0.8" height="15.0" fill="rgb(230,12,2)" rx="2" ry="2" />
<text  x="875.89" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="103.4" y="1669" width="0.2" height="15.0" fill="rgb(222,193,43)" rx="2" ry="2" />
<text  x="106.41" y="1679.5" ></text>
</g>
<g >
<title>SYSC_getpeername (2 samples, 0.03%)</title><rect x="701.5" y="1829" width="0.4" height="15.0" fill="rgb(214,99,35)" rx="2" ry="2" />
<text  x="704.54" y="1839.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8 samples, 0.13%)</title><rect x="362.4" y="1957" width="1.6" height="15.0" fill="rgb(215,2,6)" rx="2" ry="2" />
<text  x="365.41" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1068.6" y="1813" width="0.2" height="15.0" fill="rgb(225,77,26)" rx="2" ry="2" />
<text  x="1071.63" y="1823.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="402.3" y="1829" width="0.2" height="15.0" fill="rgb(221,197,1)" rx="2" ry="2" />
<text  x="405.28" y="1839.5" ></text>
</g>
<g >
<title>__libc_sendmsg (599 samples, 10.07%)</title><rect x="229.3" y="2037" width="118.8" height="15.0" fill="rgb(239,15,24)" rx="2" ry="2" />
<text  x="232.34" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>__cgroup_account_cputime_field (1 samples, 0.02%)</title><rect x="510.4" y="1877" width="0.2" height="15.0" fill="rgb(207,228,40)" rx="2" ry="2" />
<text  x="513.36" y="1887.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="919.1" y="1861" width="0.2" height="15.0" fill="rgb(247,44,25)" rx="2" ry="2" />
<text  x="922.10" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1165.6" y="2021" width="0.4" height="15.0" fill="rgb(223,95,39)" rx="2" ry="2" />
<text  x="1168.61" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="549.4" y="1957" width="0.4" height="15.0" fill="rgb(212,155,26)" rx="2" ry="2" />
<text  x="552.43" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="250.8" y="1877" width="0.2" height="15.0" fill="rgb(219,110,53)" rx="2" ry="2" />
<text  x="253.76" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1123.2" y="1989" width="0.2" height="15.0" fill="rgb(227,164,46)" rx="2" ry="2" />
<text  x="1126.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="533.2" y="1973" width="0.2" height="15.0" fill="rgb(233,90,7)" rx="2" ry="2" />
<text  x="536.17" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="14.0" y="1845" width="0.2" height="15.0" fill="rgb(231,191,22)" rx="2" ry="2" />
<text  x="16.97" y="1855.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="1114.8" y="1941" width="0.4" height="15.0" fill="rgb(244,171,37)" rx="2" ry="2" />
<text  x="1117.84" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="167.9" y="1877" width="0.2" height="15.0" fill="rgb(217,65,5)" rx="2" ry="2" />
<text  x="170.86" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="124.8" y="1797" width="0.2" height="15.0" fill="rgb(215,77,18)" rx="2" ry="2" />
<text  x="127.83" y="1807.5" ></text>
</g>
<g >
<title>event_del@plt (1 samples, 0.02%)</title><rect x="66.5" y="1909" width="0.2" height="15.0" fill="rgb(234,178,34)" rx="2" ry="2" />
<text  x="69.52" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="634.1" y="1925" width="0.2" height="15.0" fill="rgb(236,117,5)" rx="2" ry="2" />
<text  x="637.11" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="579.2" y="1989" width="0.2" height="15.0" fill="rgb(247,219,49)" rx="2" ry="2" />
<text  x="582.18" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="403.3" y="1797" width="0.2" height="15.0" fill="rgb(229,37,36)" rx="2" ry="2" />
<text  x="406.27" y="1807.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="955.4" y="2021" width="0.4" height="15.0" fill="rgb(238,148,33)" rx="2" ry="2" />
<text  x="958.39" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="846.3" y="1861" width="1.2" height="15.0" fill="rgb(218,228,48)" rx="2" ry="2" />
<text  x="849.31" y="1871.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="592.7" y="1861" width="0.4" height="15.0" fill="rgb(243,23,32)" rx="2" ry="2" />
<text  x="595.66" y="1871.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (12 samples, 0.20%)</title><rect x="15.2" y="1845" width="2.3" height="15.0" fill="rgb(247,61,23)" rx="2" ry="2" />
<text  x="18.16" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="67.5" y="1877" width="0.2" height="15.0" fill="rgb(239,127,54)" rx="2" ry="2" />
<text  x="70.51" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1158.9" y="1845" width="0.2" height="15.0" fill="rgb(244,213,30)" rx="2" ry="2" />
<text  x="1161.86" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="538.7" y="1973" width="0.4" height="15.0" fill="rgb(220,16,9)" rx="2" ry="2" />
<text  x="541.72" y="1983.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="165.1" y="1973" width="0.4" height="15.0" fill="rgb(211,139,18)" rx="2" ry="2" />
<text  x="168.09" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="823.5" y="1829" width="0.6" height="15.0" fill="rgb(249,52,16)" rx="2" ry="2" />
<text  x="826.51" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="372.7" y="1893" width="0.2" height="15.0" fill="rgb(220,52,0)" rx="2" ry="2" />
<text  x="375.73" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="994.9" y="1925" width="0.2" height="15.0" fill="rgb(242,111,28)" rx="2" ry="2" />
<text  x="997.85" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (3 samples, 0.05%)</title><rect x="1171.0" y="1973" width="0.6" height="15.0" fill="rgb(218,191,53)" rx="2" ry="2" />
<text  x="1173.96" y="1983.5" ></text>
</g>
<g >
<title>__memchr_avx2 (6 samples, 0.10%)</title><rect x="348.1" y="2037" width="1.2" height="15.0" fill="rgb(216,76,49)" rx="2" ry="2" />
<text  x="351.13" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.6" y="1973" width="0.2" height="15.0" fill="rgb(230,28,10)" rx="2" ry="2" />
<text  x="579.60" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="736.2" y="1781" width="0.2" height="15.0" fill="rgb(250,13,23)" rx="2" ry="2" />
<text  x="739.25" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="576.6" y="2005" width="0.6" height="15.0" fill="rgb(219,220,13)" rx="2" ry="2" />
<text  x="579.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="905.2" y="2005" width="0.8" height="15.0" fill="rgb(220,4,6)" rx="2" ry="2" />
<text  x="908.21" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="103.4" y="1621" width="0.2" height="15.0" fill="rgb(249,71,44)" rx="2" ry="2" />
<text  x="106.41" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="213.3" y="1845" width="0.2" height="15.0" fill="rgb(241,102,54)" rx="2" ry="2" />
<text  x="216.28" y="1855.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="71.1" y="1877" width="1.0" height="15.0" fill="rgb(250,141,16)" rx="2" ry="2" />
<text  x="74.08" y="1887.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="365.4" y="1589" width="0.2" height="15.0" fill="rgb(251,156,15)" rx="2" ry="2" />
<text  x="368.39" y="1599.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (26 samples, 0.44%)</title><rect x="1025.2" y="2037" width="5.2" height="15.0" fill="rgb(209,134,53)" rx="2" ry="2" />
<text  x="1028.20" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="215.9" y="1893" width="0.2" height="15.0" fill="rgb(236,197,19)" rx="2" ry="2" />
<text  x="218.86" y="1903.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="650.2" y="1925" width="0.2" height="15.0" fill="rgb(223,85,39)" rx="2" ry="2" />
<text  x="653.17" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="777.1" y="1541" width="0.2" height="15.0" fill="rgb(228,201,45)" rx="2" ry="2" />
<text  x="780.10" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.32%)</title><rect x="631.1" y="1941" width="3.8" height="15.0" fill="rgb(239,148,2)" rx="2" ry="2" />
<text  x="634.14" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="186.7" y="1973" width="0.2" height="15.0" fill="rgb(247,204,23)" rx="2" ry="2" />
<text  x="189.70" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="946.7" y="1909" width="0.2" height="15.0" fill="rgb(235,104,22)" rx="2" ry="2" />
<text  x="949.66" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="923.5" y="1893" width="0.2" height="15.0" fill="rgb(247,186,45)" rx="2" ry="2" />
<text  x="926.46" y="1903.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.02%)</title><rect x="1023.2" y="2053" width="0.2" height="15.0" fill="rgb(208,186,21)" rx="2" ry="2" />
<text  x="1026.21" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="264.4" y="1845" width="0.2" height="15.0" fill="rgb(240,198,8)" rx="2" ry="2" />
<text  x="267.44" y="1855.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="321.0" y="1573" width="0.2" height="15.0" fill="rgb(209,176,31)" rx="2" ry="2" />
<text  x="323.96" y="1583.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="271.8" y="1573" width="0.2" height="15.0" fill="rgb(242,200,20)" rx="2" ry="2" />
<text  x="274.78" y="1583.5" ></text>
</g>
<g >
<title>epoll_ctl (379 samples, 6.37%)</title><rect x="417.5" y="2037" width="75.2" height="15.0" fill="rgb(217,163,34)" rx="2" ry="2" />
<text  x="420.55" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>folly::netops::getpeername (8 samples, 0.13%)</title><rect x="700.7" y="1909" width="1.6" height="15.0" fill="rgb(249,101,27)" rx="2" ry="2" />
<text  x="703.75" y="1919.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="551.4" y="1973" width="0.2" height="15.0" fill="rgb(223,86,14)" rx="2" ry="2" />
<text  x="554.41" y="1983.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="841.0" y="1893" width="0.2" height="15.0" fill="rgb(213,45,30)" rx="2" ry="2" />
<text  x="843.96" y="1903.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (3 samples, 0.05%)</title><rect x="1000.8" y="1973" width="0.6" height="15.0" fill="rgb(223,212,25)" rx="2" ry="2" />
<text  x="1003.80" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (8 samples, 0.13%)</title><rect x="528.2" y="1989" width="1.6" height="15.0" fill="rgb(231,129,43)" rx="2" ry="2" />
<text  x="531.21" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="753.1" y="1685" width="0.4" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="756.10" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="487.6" y="1765" width="0.2" height="15.0" fill="rgb(223,57,8)" rx="2" ry="2" />
<text  x="490.55" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="981.0" y="1909" width="0.6" height="15.0" fill="rgb(224,145,52)" rx="2" ry="2" />
<text  x="983.97" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="822.5" y="1653" width="0.2" height="15.0" fill="rgb(237,217,37)" rx="2" ry="2" />
<text  x="825.51" y="1663.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="77.0" y="1909" width="0.2" height="15.0" fill="rgb(217,154,51)" rx="2" ry="2" />
<text  x="80.03" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1012.5" y="1909" width="0.2" height="15.0" fill="rgb(213,133,53)" rx="2" ry="2" />
<text  x="1015.50" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="650.2" y="1861" width="0.2" height="15.0" fill="rgb(232,206,0)" rx="2" ry="2" />
<text  x="653.17" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="120.5" y="37" width="0.2" height="15.0" fill="rgb(235,138,13)" rx="2" ry="2" />
<text  x="123.46" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="298.0" y="1637" width="0.2" height="15.0" fill="rgb(222,47,46)" rx="2" ry="2" />
<text  x="300.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="343.6" y="1765" width="0.2" height="15.0" fill="rgb(212,21,15)" rx="2" ry="2" />
<text  x="346.57" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="328.3" y="1669" width="0.2" height="15.0" fill="rgb(223,61,50)" rx="2" ry="2" />
<text  x="331.30" y="1679.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="226.6" y="1957" width="0.6" height="15.0" fill="rgb(223,17,20)" rx="2" ry="2" />
<text  x="229.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (1 samples, 0.02%)</title><rect x="578.8" y="1973" width="0.2" height="15.0" fill="rgb(230,158,31)" rx="2" ry="2" />
<text  x="581.78" y="1983.5" ></text>
</g>
<g >
<title>folly::isSet (3 samples, 0.05%)</title><rect x="869.7" y="1909" width="0.6" height="15.0" fill="rgb(213,177,23)" rx="2" ry="2" />
<text  x="872.71" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="531.8" y="1893" width="0.2" height="15.0" fill="rgb(211,113,44)" rx="2" ry="2" />
<text  x="534.78" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1158.9" y="1909" width="0.2" height="15.0" fill="rgb(213,171,49)" rx="2" ry="2" />
<text  x="1161.86" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="561.7" y="1653" width="0.2" height="15.0" fill="rgb(236,229,15)" rx="2" ry="2" />
<text  x="564.72" y="1663.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (7 samples, 0.12%)</title><rect x="76.6" y="1957" width="1.4" height="15.0" fill="rgb(205,200,11)" rx="2" ry="2" />
<text  x="79.64" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="330.9" y="1829" width="0.2" height="15.0" fill="rgb(240,54,36)" rx="2" ry="2" />
<text  x="333.88" y="1839.5" ></text>
</g>
<g >
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="816.2" y="1701" width="1.2" height="15.0" fill="rgb(230,200,39)" rx="2" ry="2" />
<text  x="819.17" y="1711.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="841.9" y="1909" width="0.2" height="15.0" fill="rgb(249,218,6)" rx="2" ry="2" />
<text  x="844.95" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="510.4" y="1941" width="0.2" height="15.0" fill="rgb(220,223,45)" rx="2" ry="2" />
<text  x="513.36" y="1951.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="251.2" y="1909" width="0.2" height="15.0" fill="rgb(240,224,41)" rx="2" ry="2" />
<text  x="254.16" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="151.4" y="1861" width="0.2" height="15.0" fill="rgb(246,2,2)" rx="2" ry="2" />
<text  x="154.40" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1158.9" y="1717" width="0.2" height="15.0" fill="rgb(226,31,22)" rx="2" ry="2" />
<text  x="1161.86" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="734.7" y="1765" width="0.2" height="15.0" fill="rgb(213,0,40)" rx="2" ry="2" />
<text  x="737.66" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="643.8" y="1717" width="0.2" height="15.0" fill="rgb(216,110,5)" rx="2" ry="2" />
<text  x="646.83" y="1727.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="596.0" y="1861" width="0.8" height="15.0" fill="rgb(244,10,20)" rx="2" ry="2" />
<text  x="599.03" y="1871.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="263.5" y="1861" width="0.3" height="15.0" fill="rgb(254,40,26)" rx="2" ry="2" />
<text  x="266.45" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="285.1" y="1733" width="0.2" height="15.0" fill="rgb(223,82,42)" rx="2" ry="2" />
<text  x="288.07" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (94 samples, 1.58%)</title><rect x="582.9" y="1989" width="18.7" height="15.0" fill="rgb(251,54,14)" rx="2" ry="2" />
<text  x="585.94" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="365.4" y="1525" width="0.2" height="15.0" fill="rgb(237,179,21)" rx="2" ry="2" />
<text  x="368.39" y="1535.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="870.9" y="1893" width="0.6" height="15.0" fill="rgb(250,35,32)" rx="2" ry="2" />
<text  x="873.90" y="1903.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="129.8" y="2005" width="0.2" height="15.0" fill="rgb(236,218,52)" rx="2" ry="2" />
<text  x="132.78" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="628.6" y="1989" width="0.2" height="15.0" fill="rgb(226,79,30)" rx="2" ry="2" />
<text  x="631.56" y="1999.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="554.6" y="1829" width="0.2" height="15.0" fill="rgb(247,96,42)" rx="2" ry="2" />
<text  x="557.58" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="565.5" y="1925" width="0.6" height="15.0" fill="rgb(214,211,2)" rx="2" ry="2" />
<text  x="568.49" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="885.8" y="1829" width="0.2" height="15.0" fill="rgb(224,113,16)" rx="2" ry="2" />
<text  x="888.78" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="186.7" y="1605" width="0.2" height="15.0" fill="rgb(215,121,15)" rx="2" ry="2" />
<text  x="189.70" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="624.8" y="2005" width="0.6" height="15.0" fill="rgb(251,119,32)" rx="2" ry="2" />
<text  x="627.79" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="121.3" y="69" width="0.2" height="15.0" fill="rgb(229,78,50)" rx="2" ry="2" />
<text  x="124.26" y="79.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="572.2" y="1829" width="0.2" height="15.0" fill="rgb(235,10,4)" rx="2" ry="2" />
<text  x="575.24" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="225.0" y="1941" width="0.4" height="15.0" fill="rgb(227,188,46)" rx="2" ry="2" />
<text  x="227.98" y="1951.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="990.5" y="1749" width="0.8" height="15.0" fill="rgb(245,23,4)" rx="2" ry="2" />
<text  x="993.49" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="254.7" y="1877" width="0.2" height="15.0" fill="rgb(247,49,16)" rx="2" ry="2" />
<text  x="257.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="644.2" y="1669" width="0.2" height="15.0" fill="rgb(242,219,0)" rx="2" ry="2" />
<text  x="647.23" y="1679.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (3 samples, 0.05%)</title><rect x="33.0" y="1989" width="0.6" height="15.0" fill="rgb(242,202,48)" rx="2" ry="2" />
<text  x="36.01" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="847.9" y="1861" width="0.4" height="15.0" fill="rgb(237,118,25)" rx="2" ry="2" />
<text  x="850.90" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="545.1" y="1893" width="0.2" height="15.0" fill="rgb(247,21,18)" rx="2" ry="2" />
<text  x="548.07" y="1903.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (9 samples, 0.15%)</title><rect x="743.2" y="1717" width="1.8" height="15.0" fill="rgb(227,58,7)" rx="2" ry="2" />
<text  x="746.19" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="192.9" y="1989" width="0.1" height="15.0" fill="rgb(211,77,53)" rx="2" ry="2" />
<text  x="195.85" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1123.4" y="1893" width="0.2" height="15.0" fill="rgb(233,175,7)" rx="2" ry="2" />
<text  x="1126.36" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (13 samples, 0.22%)</title><rect x="241.0" y="1877" width="2.6" height="15.0" fill="rgb(223,202,25)" rx="2" ry="2" />
<text  x="244.04" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (99 samples, 1.66%)</title><rect x="673.0" y="2021" width="19.6" height="15.0" fill="rgb(241,26,45)" rx="2" ry="2" />
<text  x="675.98" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 0.72%)</title><rect x="1150.1" y="1941" width="8.6" height="15.0" fill="rgb(245,64,3)" rx="2" ry="2" />
<text  x="1153.14" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="192.9" y="1941" width="0.1" height="15.0" fill="rgb(210,27,44)" rx="2" ry="2" />
<text  x="195.85" y="1951.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (4 samples, 0.07%)</title><rect x="817.8" y="1765" width="0.7" height="15.0" fill="rgb(218,200,7)" rx="2" ry="2" />
<text  x="820.75" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.39%)</title><rect x="947.1" y="2021" width="4.5" height="15.0" fill="rgb(216,116,54)" rx="2" ry="2" />
<text  x="950.06" y="2031.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (16 samples, 0.27%)</title><rect x="14.4" y="2069" width="3.1" height="15.0" fill="rgb(212,148,39)" rx="2" ry="2" />
<text  x="17.36" y="2079.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1017.5" y="1941" width="0.2" height="15.0" fill="rgb(251,165,9)" rx="2" ry="2" />
<text  x="1020.46" y="1951.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (4 samples, 0.07%)</title><rect x="643.2" y="1989" width="0.8" height="15.0" fill="rgb(239,157,35)" rx="2" ry="2" />
<text  x="646.23" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1141.2" y="2005" width="0.2" height="15.0" fill="rgb(229,95,28)" rx="2" ry="2" />
<text  x="1144.21" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="620.6" y="1957" width="0.2" height="15.0" fill="rgb(254,28,28)" rx="2" ry="2" />
<text  x="623.63" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="190.7" y="2021" width="0.2" height="15.0" fill="rgb(225,198,19)" rx="2" ry="2" />
<text  x="193.67" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="127.6" y="1957" width="0.2" height="15.0" fill="rgb(253,166,0)" rx="2" ry="2" />
<text  x="130.60" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="117.1" y="37" width="0.2" height="15.0" fill="rgb(235,204,12)" rx="2" ry="2" />
<text  x="120.09" y="47.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="186.7" y="1557" width="0.2" height="15.0" fill="rgb(223,127,52)" rx="2" ry="2" />
<text  x="189.70" y="1567.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="64.3" y="1893" width="0.2" height="15.0" fill="rgb(212,125,39)" rx="2" ry="2" />
<text  x="67.34" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="576.4" y="1989" width="0.2" height="15.0" fill="rgb(246,164,41)" rx="2" ry="2" />
<text  x="579.40" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="822.5" y="1669" width="0.2" height="15.0" fill="rgb(241,172,14)" rx="2" ry="2" />
<text  x="825.51" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11 samples, 0.18%)</title><rect x="293.2" y="1637" width="2.2" height="15.0" fill="rgb(217,166,22)" rx="2" ry="2" />
<text  x="296.20" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="466.7" y="1909" width="0.2" height="15.0" fill="rgb(215,12,16)" rx="2" ry="2" />
<text  x="469.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="903.2" y="2005" width="1.4" height="15.0" fill="rgb(211,111,34)" rx="2" ry="2" />
<text  x="906.23" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="839.4" y="1893" width="0.8" height="15.0" fill="rgb(239,23,28)" rx="2" ry="2" />
<text  x="842.37" y="1903.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1142.0" y="1973" width="0.2" height="15.0" fill="rgb(231,160,27)" rx="2" ry="2" />
<text  x="1145.01" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (4 samples, 0.07%)</title><rect x="992.9" y="1973" width="0.8" height="15.0" fill="rgb(224,91,43)" rx="2" ry="2" />
<text  x="995.87" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="991.9" y="1941" width="0.2" height="15.0" fill="rgb(247,207,39)" rx="2" ry="2" />
<text  x="994.88" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (9 samples, 0.15%)</title><rect x="990.1" y="1957" width="1.8" height="15.0" fill="rgb(223,173,27)" rx="2" ry="2" />
<text  x="993.09" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="957.2" y="2005" width="0.2" height="15.0" fill="rgb(252,150,12)" rx="2" ry="2" />
<text  x="960.17" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="541.9" y="1893" width="0.4" height="15.0" fill="rgb(233,157,29)" rx="2" ry="2" />
<text  x="544.89" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="897.5" y="1989" width="0.2" height="15.0" fill="rgb(231,0,42)" rx="2" ry="2" />
<text  x="900.48" y="1999.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="289.2" y="1445" width="0.2" height="15.0" fill="rgb(233,222,24)" rx="2" ry="2" />
<text  x="292.23" y="1455.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="484.2" y="1877" width="0.8" height="15.0" fill="rgb(246,99,48)" rx="2" ry="2" />
<text  x="487.18" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="644.2" y="1909" width="0.2" height="15.0" fill="rgb(235,118,45)" rx="2" ry="2" />
<text  x="647.23" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (13 samples, 0.22%)</title><rect x="1003.0" y="2005" width="2.6" height="15.0" fill="rgb(224,136,47)" rx="2" ry="2" />
<text  x="1005.98" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="277.7" y="1813" width="0.2" height="15.0" fill="rgb(242,125,25)" rx="2" ry="2" />
<text  x="280.73" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (5 samples, 0.08%)</title><rect x="219.0" y="1877" width="1.0" height="15.0" fill="rgb(254,93,7)" rx="2" ry="2" />
<text  x="222.03" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="385.2" y="1925" width="1.6" height="15.0" fill="rgb(253,167,46)" rx="2" ry="2" />
<text  x="388.22" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="572.2" y="1669" width="0.2" height="15.0" fill="rgb(245,185,16)" rx="2" ry="2" />
<text  x="575.24" y="1679.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="103.4" y="1413" width="0.2" height="15.0" fill="rgb(205,118,37)" rx="2" ry="2" />
<text  x="106.41" y="1423.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="683.3" y="1893" width="0.2" height="15.0" fill="rgb(224,135,8)" rx="2" ry="2" />
<text  x="686.29" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (8 samples, 0.13%)</title><rect x="920.1" y="1877" width="1.6" height="15.0" fill="rgb(206,228,20)" rx="2" ry="2" />
<text  x="923.09" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (136 samples, 2.29%)</title><rect x="287.4" y="1797" width="27.0" height="15.0" fill="rgb(209,166,42)" rx="2" ry="2" />
<text  x="290.45" y="1807.5" >i..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (9 samples, 0.15%)</title><rect x="169.8" y="1989" width="1.8" height="15.0" fill="rgb(218,138,27)" rx="2" ry="2" />
<text  x="172.85" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="890.9" y="1957" width="0.2" height="15.0" fill="rgb(235,41,33)" rx="2" ry="2" />
<text  x="893.93" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (19 samples, 0.32%)</title><rect x="1061.3" y="1909" width="3.8" height="15.0" fill="rgb(218,98,23)" rx="2" ry="2" />
<text  x="1064.29" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="595.8" y="1829" width="0.2" height="15.0" fill="rgb(218,200,5)" rx="2" ry="2" />
<text  x="598.84" y="1839.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="817.4" y="1733" width="0.2" height="15.0" fill="rgb(251,74,25)" rx="2" ry="2" />
<text  x="820.36" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (3 samples, 0.05%)</title><rect x="83.8" y="1925" width="0.6" height="15.0" fill="rgb(233,60,39)" rx="2" ry="2" />
<text  x="86.77" y="1935.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="866.9" y="1621" width="0.2" height="15.0" fill="rgb(217,65,53)" rx="2" ry="2" />
<text  x="869.94" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="572.2" y="2005" width="0.2" height="15.0" fill="rgb(247,229,8)" rx="2" ry="2" />
<text  x="575.24" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="687.7" y="1925" width="1.5" height="15.0" fill="rgb(217,157,29)" rx="2" ry="2" />
<text  x="690.66" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1139.4" y="1973" width="0.2" height="15.0" fill="rgb(229,199,45)" rx="2" ry="2" />
<text  x="1142.43" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="1123.2" y="1973" width="0.2" height="15.0" fill="rgb(221,127,42)" rx="2" ry="2" />
<text  x="1126.17" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="458.2" y="1973" width="0.8" height="15.0" fill="rgb(235,31,0)" rx="2" ry="2" />
<text  x="461.20" y="1983.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="365.4" y="1893" width="0.2" height="15.0" fill="rgb(244,36,37)" rx="2" ry="2" />
<text  x="368.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="84.4" y="1925" width="0.2" height="15.0" fill="rgb(238,217,11)" rx="2" ry="2" />
<text  x="87.37" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="881.4" y="1573" width="0.2" height="15.0" fill="rgb(224,205,33)" rx="2" ry="2" />
<text  x="884.42" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (8 samples, 0.13%)</title><rect x="945.1" y="2037" width="1.6" height="15.0" fill="rgb(212,226,13)" rx="2" ry="2" />
<text  x="948.08" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="516.1" y="1973" width="0.2" height="15.0" fill="rgb(219,142,30)" rx="2" ry="2" />
<text  x="519.11" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="156.0" y="1733" width="0.2" height="15.0" fill="rgb(236,6,31)" rx="2" ry="2" />
<text  x="158.96" y="1743.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="797.7" y="1669" width="0.2" height="15.0" fill="rgb(217,86,10)" rx="2" ry="2" />
<text  x="800.72" y="1679.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="243.6" y="1829" width="0.2" height="15.0" fill="rgb(210,110,40)" rx="2" ry="2" />
<text  x="246.62" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1138.6" y="1973" width="0.2" height="15.0" fill="rgb(205,173,27)" rx="2" ry="2" />
<text  x="1141.64" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="119.1" y="69" width="0.8" height="15.0" fill="rgb(240,225,22)" rx="2" ry="2" />
<text  x="122.08" y="79.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="643.8" y="1781" width="0.2" height="15.0" fill="rgb(235,27,14)" rx="2" ry="2" />
<text  x="646.83" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="243.6" y="1989" width="0.4" height="15.0" fill="rgb(236,225,13)" rx="2" ry="2" />
<text  x="246.62" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="549.2" y="1701" width="0.2" height="15.0" fill="rgb(214,167,13)" rx="2" ry="2" />
<text  x="552.23" y="1711.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="572.2" y="1653" width="0.2" height="15.0" fill="rgb(222,73,54)" rx="2" ry="2" />
<text  x="575.24" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1017.5" y="2005" width="0.2" height="15.0" fill="rgb(219,140,45)" rx="2" ry="2" />
<text  x="1020.46" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="822.5" y="1637" width="0.2" height="15.0" fill="rgb(213,7,6)" rx="2" ry="2" />
<text  x="825.51" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1017.5" y="1893" width="0.2" height="15.0" fill="rgb(237,183,26)" rx="2" ry="2" />
<text  x="1020.46" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="186.7" y="1877" width="0.2" height="15.0" fill="rgb(244,47,8)" rx="2" ry="2" />
<text  x="189.70" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (290 samples, 4.87%)</title><rect x="103.2" y="2021" width="57.5" height="15.0" fill="rgb(227,219,22)" rx="2" ry="2" />
<text  x="106.21" y="2031.5" >[unkno..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="457.2" y="1733" width="0.2" height="15.0" fill="rgb(212,186,10)" rx="2" ry="2" />
<text  x="460.21" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (1 samples, 0.02%)</title><rect x="621.4" y="2037" width="0.2" height="15.0" fill="rgb(243,22,28)" rx="2" ry="2" />
<text  x="624.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1317" width="17.7" height="15.0" fill="rgb(211,7,26)" rx="2" ry="2" />
<text  x="107.40" y="1327.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="730.3" y="1669" width="0.4" height="15.0" fill="rgb(254,123,18)" rx="2" ry="2" />
<text  x="733.30" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.87%)</title><rect x="555.2" y="1973" width="10.3" height="15.0" fill="rgb(213,108,25)" rx="2" ry="2" />
<text  x="558.18" y="1983.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="193.0" y="2037" width="0.2" height="15.0" fill="rgb(219,105,30)" rx="2" ry="2" />
<text  x="196.05" y="2047.5" ></text>
</g>
<g >
<title>folly::format_value::formatNumber&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1178.9" y="2053" width="0.2" height="15.0" fill="rgb(224,110,9)" rx="2" ry="2" />
<text  x="1181.89" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="695.4" y="1861" width="0.2" height="15.0" fill="rgb(206,193,16)" rx="2" ry="2" />
<text  x="698.39" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (3 samples, 0.05%)</title><rect x="36.4" y="1941" width="0.6" height="15.0" fill="rgb(214,155,53)" rx="2" ry="2" />
<text  x="39.38" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1029" width="17.5" height="15.0" fill="rgb(225,182,34)" rx="2" ry="2" />
<text  x="107.40" y="1039.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="881.4" y="1877" width="0.2" height="15.0" fill="rgb(242,112,23)" rx="2" ry="2" />
<text  x="884.42" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="695.4" y="1909" width="0.2" height="15.0" fill="rgb(245,68,28)" rx="2" ry="2" />
<text  x="698.39" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="973.8" y="1957" width="0.4" height="15.0" fill="rgb(242,23,29)" rx="2" ry="2" />
<text  x="976.83" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="285.1" y="1717" width="0.2" height="15.0" fill="rgb(251,192,24)" rx="2" ry="2" />
<text  x="288.07" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (2 samples, 0.03%)</title><rect x="857.2" y="1989" width="0.4" height="15.0" fill="rgb(218,44,39)" rx="2" ry="2" />
<text  x="860.22" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (9 samples, 0.15%)</title><rect x="340.8" y="1957" width="1.8" height="15.0" fill="rgb(241,99,45)" rx="2" ry="2" />
<text  x="343.80" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="973.4" y="1845" width="0.2" height="15.0" fill="rgb(246,99,48)" rx="2" ry="2" />
<text  x="976.44" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="866.9" y="1925" width="0.4" height="15.0" fill="rgb(233,7,53)" rx="2" ry="2" />
<text  x="869.94" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="734.7" y="1621" width="0.2" height="15.0" fill="rgb(233,162,27)" rx="2" ry="2" />
<text  x="737.66" y="1631.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="643.8" y="1733" width="0.2" height="15.0" fill="rgb(222,90,53)" rx="2" ry="2" />
<text  x="646.83" y="1743.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="525.4" y="1989" width="0.2" height="15.0" fill="rgb(207,94,41)" rx="2" ry="2" />
<text  x="528.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="414.0" y="1797" width="0.2" height="15.0" fill="rgb(236,156,34)" rx="2" ry="2" />
<text  x="416.98" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="277.7" y="1653" width="0.2" height="15.0" fill="rgb(233,67,6)" rx="2" ry="2" />
<text  x="280.73" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="515.3" y="1941" width="0.6" height="15.0" fill="rgb(245,46,7)" rx="2" ry="2" />
<text  x="518.32" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="1145.0" y="2005" width="0.4" height="15.0" fill="rgb(235,103,12)" rx="2" ry="2" />
<text  x="1147.98" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_ack (64 samples, 1.08%)</title><rect x="1100.0" y="1909" width="12.7" height="15.0" fill="rgb(226,226,10)" rx="2" ry="2" />
<text  x="1102.96" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1182.7" y="1973" width="0.2" height="15.0" fill="rgb(253,44,33)" rx="2" ry="2" />
<text  x="1185.66" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="190.7" y="1941" width="0.2" height="15.0" fill="rgb(247,93,29)" rx="2" ry="2" />
<text  x="193.67" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="695.4" y="1877" width="0.2" height="15.0" fill="rgb(247,137,36)" rx="2" ry="2" />
<text  x="698.39" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="803.9" y="1589" width="1.2" height="15.0" fill="rgb(208,74,16)" rx="2" ry="2" />
<text  x="806.87" y="1599.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="271.8" y="1541" width="0.2" height="15.0" fill="rgb(252,206,44)" rx="2" ry="2" />
<text  x="274.78" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="549.2" y="1749" width="0.2" height="15.0" fill="rgb(235,107,32)" rx="2" ry="2" />
<text  x="552.23" y="1759.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (1 samples, 0.02%)</title><rect x="1182.9" y="2053" width="0.2" height="15.0" fill="rgb(248,130,47)" rx="2" ry="2" />
<text  x="1185.86" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="333.5" y="1813" width="0.2" height="15.0" fill="rgb(241,98,52)" rx="2" ry="2" />
<text  x="336.46" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="994.9" y="1717" width="0.2" height="15.0" fill="rgb(253,217,38)" rx="2" ry="2" />
<text  x="997.85" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="53.6" y="1909" width="0.2" height="15.0" fill="rgb(236,51,53)" rx="2" ry="2" />
<text  x="56.63" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="650.4" y="2021" width="0.2" height="15.0" fill="rgb(239,135,42)" rx="2" ry="2" />
<text  x="653.37" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="336.6" y="1685" width="0.2" height="15.0" fill="rgb(206,152,6)" rx="2" ry="2" />
<text  x="339.63" y="1695.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="565.9" y="1685" width="0.2" height="15.0" fill="rgb(215,159,17)" rx="2" ry="2" />
<text  x="568.89" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="564.9" y="1861" width="0.2" height="15.0" fill="rgb(206,75,26)" rx="2" ry="2" />
<text  x="567.90" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="620.6" y="2005" width="0.4" height="15.0" fill="rgb(237,61,16)" rx="2" ry="2" />
<text  x="623.63" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (3 samples, 0.05%)</title><rect x="273.2" y="1829" width="0.6" height="15.0" fill="rgb(207,224,13)" rx="2" ry="2" />
<text  x="276.17" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (1 samples, 0.02%)</title><rect x="850.3" y="1957" width="0.2" height="15.0" fill="rgb(243,123,1)" rx="2" ry="2" />
<text  x="853.28" y="1967.5" ></text>
</g>
<g >
<title>skb_clone (23 samples, 0.39%)</title><rect x="314.8" y="1813" width="4.6" height="15.0" fill="rgb(234,62,13)" rx="2" ry="2" />
<text  x="317.82" y="1823.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="806.5" y="1413" width="0.1" height="15.0" fill="rgb(242,184,23)" rx="2" ry="2" />
<text  x="809.45" y="1423.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="548.2" y="1973" width="0.2" height="15.0" fill="rgb(214,3,36)" rx="2" ry="2" />
<text  x="551.24" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (1 samples, 0.02%)</title><rect x="603.2" y="1957" width="0.2" height="15.0" fill="rgb(244,47,50)" rx="2" ry="2" />
<text  x="606.17" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="277.7" y="1829" width="0.2" height="15.0" fill="rgb(220,166,36)" rx="2" ry="2" />
<text  x="280.73" y="1839.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="1017.5" y="1813" width="0.2" height="15.0" fill="rgb(205,110,41)" rx="2" ry="2" />
<text  x="1020.46" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (8 samples, 0.13%)</title><rect x="544.3" y="1973" width="1.6" height="15.0" fill="rgb(237,141,16)" rx="2" ry="2" />
<text  x="547.27" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="622.8" y="2005" width="0.4" height="15.0" fill="rgb(209,179,21)" rx="2" ry="2" />
<text  x="625.81" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="858.8" y="1989" width="0.2" height="15.0" fill="rgb(243,130,20)" rx="2" ry="2" />
<text  x="861.81" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="702.1" y="1637" width="0.2" height="15.0" fill="rgb(247,169,46)" rx="2" ry="2" />
<text  x="705.13" y="1647.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.03%)</title><rect x="81.6" y="1925" width="0.4" height="15.0" fill="rgb(217,108,6)" rx="2" ry="2" />
<text  x="84.59" y="1935.5" ></text>
</g>
<g >
<title>ip_copy_addrs (4 samples, 0.07%)</title><rect x="285.3" y="1813" width="0.8" height="15.0" fill="rgb(251,119,54)" rx="2" ry="2" />
<text  x="288.27" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (2 samples, 0.03%)</title><rect x="882.8" y="1957" width="0.4" height="15.0" fill="rgb(216,29,0)" rx="2" ry="2" />
<text  x="885.80" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="921.9" y="1877" width="0.4" height="15.0" fill="rgb(205,21,45)" rx="2" ry="2" />
<text  x="924.87" y="1887.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="1159.3" y="1957" width="2.9" height="15.0" fill="rgb(224,146,47)" rx="2" ry="2" />
<text  x="1162.26" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="167.9" y="1733" width="0.2" height="15.0" fill="rgb(216,204,34)" rx="2" ry="2" />
<text  x="170.86" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (48 samples, 0.81%)</title><rect x="1102.3" y="1557" width="9.6" height="15.0" fill="rgb(208,211,3)" rx="2" ry="2" />
<text  x="1105.34" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="572.4" y="1797" width="0.2" height="15.0" fill="rgb(254,67,51)" rx="2" ry="2" />
<text  x="575.43" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="221.4" y="1925" width="0.2" height="15.0" fill="rgb(227,14,34)" rx="2" ry="2" />
<text  x="224.41" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="861.6" y="1957" width="0.2" height="15.0" fill="rgb(214,109,21)" rx="2" ry="2" />
<text  x="864.58" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="155.8" y="1861" width="0.4" height="15.0" fill="rgb(233,64,39)" rx="2" ry="2" />
<text  x="158.76" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1158.9" y="1797" width="0.2" height="15.0" fill="rgb(237,61,33)" rx="2" ry="2" />
<text  x="1161.86" y="1807.5" ></text>
</g>
<g >
<title>new_inode_pseudo (47 samples, 0.79%)</title><rect x="390.4" y="1941" width="9.3" height="15.0" fill="rgb(242,170,21)" rx="2" ry="2" />
<text  x="393.38" y="1951.5" ></text>
</g>
<g >
<title>hmm_mm_destroy (1 samples, 0.02%)</title><rect x="382.8" y="1877" width="0.2" height="15.0" fill="rgb(217,201,30)" rx="2" ry="2" />
<text  x="385.84" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="403.3" y="1781" width="0.2" height="15.0" fill="rgb(231,20,50)" rx="2" ry="2" />
<text  x="406.27" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="111.5" y="37" width="0.2" height="15.0" fill="rgb(211,98,17)" rx="2" ry="2" />
<text  x="114.54" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1171.4" y="1957" width="0.2" height="15.0" fill="rgb(232,64,53)" rx="2" ry="2" />
<text  x="1174.36" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="827.1" y="1669" width="0.2" height="15.0" fill="rgb(252,60,51)" rx="2" ry="2" />
<text  x="830.08" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="63.7" y="1925" width="1.0" height="15.0" fill="rgb(237,160,48)" rx="2" ry="2" />
<text  x="66.74" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="668.2" y="1621" width="0.2" height="15.0" fill="rgb(242,109,37)" rx="2" ry="2" />
<text  x="671.22" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (26 samples, 0.44%)</title><rect x="604.2" y="1909" width="5.1" height="15.0" fill="rgb(241,1,54)" rx="2" ry="2" />
<text  x="607.16" y="1919.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (3 samples, 0.05%)</title><rect x="154.4" y="1893" width="0.6" height="15.0" fill="rgb(246,214,43)" rx="2" ry="2" />
<text  x="157.38" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="335.6" y="1749" width="0.2" height="15.0" fill="rgb(219,90,9)" rx="2" ry="2" />
<text  x="338.64" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="121.3" y="85" width="0.2" height="15.0" fill="rgb(207,111,41)" rx="2" ry="2" />
<text  x="124.26" y="95.5" ></text>
</g>
<g >
<title>folly::operator&amp; (2 samples, 0.03%)</title><rect x="869.9" y="1893" width="0.4" height="15.0" fill="rgb(238,44,33)" rx="2" ry="2" />
<text  x="872.91" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="289.2" y="1573" width="0.2" height="15.0" fill="rgb(205,26,9)" rx="2" ry="2" />
<text  x="292.23" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1158.9" y="1749" width="0.2" height="15.0" fill="rgb(218,217,40)" rx="2" ry="2" />
<text  x="1161.86" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="186.7" y="1749" width="0.2" height="15.0" fill="rgb(251,6,27)" rx="2" ry="2" />
<text  x="189.70" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="165.1" y="1957" width="0.4" height="15.0" fill="rgb(242,207,30)" rx="2" ry="2" />
<text  x="168.09" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="138.9" y="2005" width="0.2" height="15.0" fill="rgb(220,186,21)" rx="2" ry="2" />
<text  x="141.91" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="613.5" y="1861" width="0.2" height="15.0" fill="rgb(210,221,16)" rx="2" ry="2" />
<text  x="616.49" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="995.1" y="1989" width="0.2" height="15.0" fill="rgb(213,48,46)" rx="2" ry="2" />
<text  x="998.05" y="1999.5" ></text>
</g>
<g >
<title>sys_setsockopt (37 samples, 0.62%)</title><rect x="682.3" y="1941" width="7.3" height="15.0" fill="rgb(221,33,16)" rx="2" ry="2" />
<text  x="685.30" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="108.6" y="37" width="0.8" height="15.0" fill="rgb(213,65,0)" rx="2" ry="2" />
<text  x="111.56" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="143.9" y="1909" width="0.4" height="15.0" fill="rgb(244,32,28)" rx="2" ry="2" />
<text  x="146.87" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="921.3" y="1861" width="0.2" height="15.0" fill="rgb(208,129,14)" rx="2" ry="2" />
<text  x="924.28" y="1871.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="822.5" y="1573" width="0.2" height="15.0" fill="rgb(239,37,22)" rx="2" ry="2" />
<text  x="825.51" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.82%)</title><rect x="658.5" y="1909" width="9.7" height="15.0" fill="rgb(229,114,38)" rx="2" ry="2" />
<text  x="661.50" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="595.8" y="1797" width="0.2" height="15.0" fill="rgb(206,146,3)" rx="2" ry="2" />
<text  x="598.84" y="1807.5" ></text>
</g>
<g >
<title>__GI___setsockopt (97 samples, 1.63%)</title><rect x="673.4" y="1989" width="19.2" height="15.0" fill="rgb(237,34,0)" rx="2" ry="2" />
<text  x="676.38" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1017.5" y="2021" width="0.2" height="15.0" fill="rgb(252,85,53)" rx="2" ry="2" />
<text  x="1020.46" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (100 samples, 1.68%)</title><rect x="862.0" y="2005" width="19.8" height="15.0" fill="rgb(254,149,25)" rx="2" ry="2" />
<text  x="864.98" y="2015.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="798.5" y="1669" width="0.6" height="15.0" fill="rgb(221,109,0)" rx="2" ry="2" />
<text  x="801.52" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="273.6" y="1813" width="0.2" height="15.0" fill="rgb(248,211,45)" rx="2" ry="2" />
<text  x="276.57" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="93.5" y="2021" width="0.2" height="15.0" fill="rgb(209,93,20)" rx="2" ry="2" />
<text  x="96.49" y="2031.5" ></text>
</g>
<g >
<title>tcp_recvmsg (316 samples, 5.31%)</title><rect x="1051.8" y="1941" width="62.6" height="15.0" fill="rgb(231,95,19)" rx="2" ry="2" />
<text  x="1054.77" y="1951.5" >tcp_re..</text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1146.8" y="2021" width="0.2" height="15.0" fill="rgb(241,103,40)" rx="2" ry="2" />
<text  x="1149.77" y="2031.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="263.8" y="1877" width="0.2" height="15.0" fill="rgb(221,165,6)" rx="2" ry="2" />
<text  x="266.85" y="1887.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (8 samples, 0.13%)</title><rect x="1157.1" y="1909" width="1.6" height="15.0" fill="rgb(233,101,34)" rx="2" ry="2" />
<text  x="1160.08" y="1919.5" ></text>
</g>
<g >
<title>__put_cred (1 samples, 0.02%)</title><rect x="14.6" y="2005" width="0.2" height="15.0" fill="rgb(236,33,12)" rx="2" ry="2" />
<text  x="17.56" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="521.5" y="1973" width="0.2" height="15.0" fill="rgb(224,93,10)" rx="2" ry="2" />
<text  x="524.47" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="847.5" y="1909" width="0.2" height="15.0" fill="rgb(240,56,3)" rx="2" ry="2" />
<text  x="850.50" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.4" y="2005" width="0.2" height="15.0" fill="rgb(210,159,37)" rx="2" ry="2" />
<text  x="17.36" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="360.2" y="1749" width="0.2" height="15.0" fill="rgb(220,221,45)" rx="2" ry="2" />
<text  x="363.23" y="1759.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1049.6" y="1973" width="0.4" height="15.0" fill="rgb(217,153,45)" rx="2" ry="2" />
<text  x="1052.59" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="142.9" y="1925" width="0.2" height="15.0" fill="rgb(234,183,14)" rx="2" ry="2" />
<text  x="145.87" y="1935.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.22%)</title><rect x="241.0" y="1973" width="2.6" height="15.0" fill="rgb(227,80,15)" rx="2" ry="2" />
<text  x="244.04" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="906.0" y="2037" width="0.4" height="15.0" fill="rgb(218,213,37)" rx="2" ry="2" />
<text  x="909.01" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="548.6" y="1973" width="2.6" height="15.0" fill="rgb(243,108,15)" rx="2" ry="2" />
<text  x="551.64" y="1983.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="771.7" y="1493" width="0.2" height="15.0" fill="rgb(241,71,30)" rx="2" ry="2" />
<text  x="774.74" y="1503.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="723.6" y="1733" width="0.2" height="15.0" fill="rgb(229,44,38)" rx="2" ry="2" />
<text  x="726.55" y="1743.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="222.4" y="1893" width="0.2" height="15.0" fill="rgb(226,126,10)" rx="2" ry="2" />
<text  x="225.40" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="542.1" y="1877" width="0.2" height="15.0" fill="rgb(231,85,53)" rx="2" ry="2" />
<text  x="545.09" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="531.8" y="2021" width="2.0" height="15.0" fill="rgb(210,80,46)" rx="2" ry="2" />
<text  x="534.78" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1413" width="18.0" height="15.0" fill="rgb(212,91,8)" rx="2" ry="2" />
<text  x="107.40" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="993.9" y="1973" width="0.4" height="15.0" fill="rgb(233,94,11)" rx="2" ry="2" />
<text  x="996.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="309" width="17.5" height="15.0" fill="rgb(214,217,22)" rx="2" ry="2" />
<text  x="107.40" y="319.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1146.4" y="2053" width="0.2" height="15.0" fill="rgb(252,38,20)" rx="2" ry="2" />
<text  x="1149.37" y="2063.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="113.1" y="37" width="0.2" height="15.0" fill="rgb(226,184,12)" rx="2" ry="2" />
<text  x="116.13" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="625.8" y="2005" width="0.4" height="15.0" fill="rgb(232,95,47)" rx="2" ry="2" />
<text  x="628.78" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (3 samples, 0.05%)</title><rect x="483.0" y="1957" width="0.6" height="15.0" fill="rgb(250,206,4)" rx="2" ry="2" />
<text  x="485.99" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="32.8" y="1861" width="0.2" height="15.0" fill="rgb(254,5,11)" rx="2" ry="2" />
<text  x="35.81" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="866.9" y="1701" width="0.2" height="15.0" fill="rgb(224,141,35)" rx="2" ry="2" />
<text  x="869.94" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="650.2" y="1973" width="0.2" height="15.0" fill="rgb(254,96,38)" rx="2" ry="2" />
<text  x="653.17" y="1983.5" ></text>
</g>
<g >
<title>mod_node_page_state (1 samples, 0.02%)</title><rect x="481.8" y="1909" width="0.2" height="15.0" fill="rgb(234,196,43)" rx="2" ry="2" />
<text  x="484.80" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="120.7" y="69" width="0.2" height="15.0" fill="rgb(248,105,1)" rx="2" ry="2" />
<text  x="123.66" y="79.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="572.2" y="1605" width="0.2" height="15.0" fill="rgb(230,108,17)" rx="2" ry="2" />
<text  x="575.24" y="1615.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="403.3" y="1813" width="0.2" height="15.0" fill="rgb(219,49,52)" rx="2" ry="2" />
<text  x="406.27" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="131.8" y="1957" width="0.6" height="15.0" fill="rgb(230,132,25)" rx="2" ry="2" />
<text  x="134.77" y="1967.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="761.0" y="1669" width="0.2" height="15.0" fill="rgb(252,40,16)" rx="2" ry="2" />
<text  x="764.04" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="321.0" y="1653" width="0.2" height="15.0" fill="rgb(234,99,6)" rx="2" ry="2" />
<text  x="323.96" y="1663.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="1112.5" y="1749" width="0.2" height="15.0" fill="rgb(248,111,29)" rx="2" ry="2" />
<text  x="1115.46" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1174.1" y="2005" width="0.2" height="15.0" fill="rgb(248,84,35)" rx="2" ry="2" />
<text  x="1177.13" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1148.9" y="1925" width="0.2" height="15.0" fill="rgb(248,176,50)" rx="2" ry="2" />
<text  x="1151.95" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (1 samples, 0.02%)</title><rect x="1000.0" y="2005" width="0.2" height="15.0" fill="rgb(229,71,7)" rx="2" ry="2" />
<text  x="1003.01" y="2015.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="843.3" y="1925" width="0.2" height="15.0" fill="rgb(252,212,34)" rx="2" ry="2" />
<text  x="846.34" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="687.1" y="1861" width="0.6" height="15.0" fill="rgb(254,182,1)" rx="2" ry="2" />
<text  x="690.06" y="1871.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="973.8" y="1973" width="0.4" height="15.0" fill="rgb(208,71,47)" rx="2" ry="2" />
<text  x="976.83" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (22 samples, 0.37%)</title><rect x="1170.4" y="2021" width="4.3" height="15.0" fill="rgb(215,145,38)" rx="2" ry="2" />
<text  x="1173.37" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="414.0" y="1909" width="0.2" height="15.0" fill="rgb(219,175,6)" rx="2" ry="2" />
<text  x="416.98" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="549.2" y="1797" width="0.2" height="15.0" fill="rgb(254,55,16)" rx="2" ry="2" />
<text  x="552.23" y="1807.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="942.9" y="1845" width="0.2" height="15.0" fill="rgb(239,108,24)" rx="2" ry="2" />
<text  x="945.89" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="987.3" y="1957" width="0.2" height="15.0" fill="rgb(210,224,5)" rx="2" ry="2" />
<text  x="990.32" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="881.0" y="1989" width="0.2" height="15.0" fill="rgb(219,199,44)" rx="2" ry="2" />
<text  x="884.02" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="866.9" y="1589" width="0.2" height="15.0" fill="rgb(209,150,47)" rx="2" ry="2" />
<text  x="869.94" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1158.9" y="1829" width="0.2" height="15.0" fill="rgb(220,56,42)" rx="2" ry="2" />
<text  x="1161.86" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="994.9" y="1733" width="0.2" height="15.0" fill="rgb(247,66,8)" rx="2" ry="2" />
<text  x="997.85" y="1743.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="313.6" y="1637" width="0.4" height="15.0" fill="rgb(245,57,29)" rx="2" ry="2" />
<text  x="316.63" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="167.9" y="1925" width="0.2" height="15.0" fill="rgb(222,85,6)" rx="2" ry="2" />
<text  x="170.86" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="966.9" y="2005" width="0.4" height="15.0" fill="rgb(212,150,1)" rx="2" ry="2" />
<text  x="969.89" y="2015.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="185.1" y="2005" width="0.2" height="15.0" fill="rgb(207,23,29)" rx="2" ry="2" />
<text  x="188.12" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="533" width="17.5" height="15.0" fill="rgb(227,111,21)" rx="2" ry="2" />
<text  x="107.40" y="543.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="603.4" y="1957" width="0.2" height="15.0" fill="rgb(243,70,0)" rx="2" ry="2" />
<text  x="606.37" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="544.9" y="1893" width="0.2" height="15.0" fill="rgb(221,196,13)" rx="2" ry="2" />
<text  x="547.87" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="294.4" y="1397" width="0.8" height="15.0" fill="rgb(213,86,39)" rx="2" ry="2" />
<text  x="297.39" y="1407.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="294.6" y="1365" width="0.6" height="15.0" fill="rgb(221,4,53)" rx="2" ry="2" />
<text  x="297.59" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="147.0" y="1877" width="0.2" height="15.0" fill="rgb(211,146,36)" rx="2" ry="2" />
<text  x="150.04" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="643.8" y="1669" width="0.2" height="15.0" fill="rgb(218,117,53)" rx="2" ry="2" />
<text  x="646.83" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23 samples, 0.39%)</title><rect x="488.1" y="2021" width="4.6" height="15.0" fill="rgb(230,111,28)" rx="2" ry="2" />
<text  x="491.15" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="517" width="17.5" height="15.0" fill="rgb(240,62,15)" rx="2" ry="2" />
<text  x="107.40" y="527.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="243.8" y="1893" width="0.2" height="15.0" fill="rgb(214,110,40)" rx="2" ry="2" />
<text  x="246.82" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="509.2" y="1909" width="0.2" height="15.0" fill="rgb(214,103,1)" rx="2" ry="2" />
<text  x="512.17" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="771.7" y="1573" width="0.2" height="15.0" fill="rgb(253,16,25)" rx="2" ry="2" />
<text  x="774.74" y="1583.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="836.2" y="1909" width="0.4" height="15.0" fill="rgb(215,137,37)" rx="2" ry="2" />
<text  x="839.20" y="1919.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="657.1" y="1829" width="0.2" height="15.0" fill="rgb(254,146,38)" rx="2" ry="2" />
<text  x="660.12" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="990.5" y="1797" width="0.8" height="15.0" fill="rgb(208,211,19)" rx="2" ry="2" />
<text  x="993.49" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="120.3" y="53" width="0.4" height="15.0" fill="rgb(224,160,26)" rx="2" ry="2" />
<text  x="123.27" y="63.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="215.7" y="1893" width="0.2" height="15.0" fill="rgb(209,142,45)" rx="2" ry="2" />
<text  x="218.66" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="570.5" y="1957" width="0.1" height="15.0" fill="rgb(222,161,28)" rx="2" ry="2" />
<text  x="573.45" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="396.9" y="1877" width="0.8" height="15.0" fill="rgb(227,87,7)" rx="2" ry="2" />
<text  x="399.92" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="975.2" y="1941" width="0.2" height="15.0" fill="rgb(250,119,54)" rx="2" ry="2" />
<text  x="978.22" y="1951.5" ></text>
</g>
<g >
<title>do_futex (20 samples, 0.34%)</title><rect x="17.7" y="1989" width="4.0" height="15.0" fill="rgb(250,72,24)" rx="2" ry="2" />
<text  x="20.73" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (11 samples, 0.18%)</title><rect x="81.2" y="1957" width="2.2" height="15.0" fill="rgb(223,49,22)" rx="2" ry="2" />
<text  x="84.20" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="689.4" y="1781" width="0.2" height="15.0" fill="rgb(220,96,5)" rx="2" ry="2" />
<text  x="692.44" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="326.7" y="1717" width="0.2" height="15.0" fill="rgb(216,113,39)" rx="2" ry="2" />
<text  x="329.72" y="1727.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (13 samples, 0.22%)</title><rect x="163.7" y="2005" width="2.6" height="15.0" fill="rgb(254,78,7)" rx="2" ry="2" />
<text  x="166.70" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="541.3" y="1925" width="0.6" height="15.0" fill="rgb(231,80,6)" rx="2" ry="2" />
<text  x="544.30" y="1935.5" ></text>
</g>
<g >
<title>isspace (4 samples, 0.07%)</title><rect x="1005.6" y="2021" width="0.8" height="15.0" fill="rgb(221,128,5)" rx="2" ry="2" />
<text  x="1008.56" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="613" width="17.5" height="15.0" fill="rgb(253,169,26)" rx="2" ry="2" />
<text  x="107.40" y="623.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="128.0" y="1989" width="0.2" height="15.0" fill="rgb(221,36,4)" rx="2" ry="2" />
<text  x="131.00" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="360.2" y="1941" width="0.2" height="15.0" fill="rgb(237,107,8)" rx="2" ry="2" />
<text  x="363.23" y="1951.5" ></text>
</g>
<g >
<title>ip_send_check (4 samples, 0.07%)</title><rect x="288.6" y="1765" width="0.8" height="15.0" fill="rgb(242,49,3)" rx="2" ry="2" />
<text  x="291.64" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="822.5" y="1621" width="0.2" height="15.0" fill="rgb(251,4,30)" rx="2" ry="2" />
<text  x="825.51" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.8" y="1829" width="0.1" height="15.0" fill="rgb(213,151,37)" rx="2" ry="2" />
<text  x="844.75" y="1839.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="963.3" y="1957" width="0.2" height="15.0" fill="rgb(241,180,38)" rx="2" ry="2" />
<text  x="966.32" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (5 samples, 0.08%)</title><rect x="219.0" y="1861" width="1.0" height="15.0" fill="rgb(217,15,16)" rx="2" ry="2" />
<text  x="222.03" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="457.2" y="1637" width="0.2" height="15.0" fill="rgb(253,201,4)" rx="2" ry="2" />
<text  x="460.21" y="1647.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="860.8" y="1989" width="0.2" height="15.0" fill="rgb(248,184,6)" rx="2" ry="2" />
<text  x="863.79" y="1999.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="311.8" y="1685" width="0.2" height="15.0" fill="rgb(235,25,10)" rx="2" ry="2" />
<text  x="314.84" y="1695.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="732.3" y="1701" width="0.4" height="15.0" fill="rgb(241,59,36)" rx="2" ry="2" />
<text  x="735.28" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="912.0" y="1925" width="0.2" height="15.0" fill="rgb(238,33,22)" rx="2" ry="2" />
<text  x="914.96" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="335.6" y="1829" width="0.2" height="15.0" fill="rgb(254,162,11)" rx="2" ry="2" />
<text  x="338.64" y="1839.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="403.3" y="1653" width="0.2" height="15.0" fill="rgb(206,176,23)" rx="2" ry="2" />
<text  x="406.27" y="1663.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="565.9" y="1621" width="0.2" height="15.0" fill="rgb(244,27,29)" rx="2" ry="2" />
<text  x="568.89" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="133.2" y="1957" width="0.2" height="15.0" fill="rgb(215,150,36)" rx="2" ry="2" />
<text  x="136.16" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="994.9" y="1653" width="0.2" height="15.0" fill="rgb(221,177,24)" rx="2" ry="2" />
<text  x="997.85" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="466.7" y="1893" width="0.2" height="15.0" fill="rgb(235,76,9)" rx="2" ry="2" />
<text  x="469.73" y="1903.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="487.4" y="1781" width="0.2" height="15.0" fill="rgb(234,161,26)" rx="2" ry="2" />
<text  x="490.35" y="1791.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="980.4" y="1909" width="0.6" height="15.0" fill="rgb(228,144,52)" rx="2" ry="2" />
<text  x="983.38" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="118.3" y="37" width="0.2" height="15.0" fill="rgb(235,26,32)" rx="2" ry="2" />
<text  x="121.28" y="47.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="879.0" y="1909" width="0.8" height="15.0" fill="rgb(217,126,30)" rx="2" ry="2" />
<text  x="882.04" y="1919.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="15.4" y="1829" width="0.2" height="15.0" fill="rgb(237,220,11)" rx="2" ry="2" />
<text  x="18.35" y="1839.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="665.0" y="1845" width="0.2" height="15.0" fill="rgb(250,196,42)" rx="2" ry="2" />
<text  x="668.05" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="243.8" y="1797" width="0.2" height="15.0" fill="rgb(229,19,4)" rx="2" ry="2" />
<text  x="246.82" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="90.1" y="1957" width="0.4" height="15.0" fill="rgb(216,120,23)" rx="2" ry="2" />
<text  x="93.12" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1100.6" y="1813" width="0.2" height="15.0" fill="rgb(242,119,46)" rx="2" ry="2" />
<text  x="1103.56" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="195.4" y="2021" width="0.6" height="15.0" fill="rgb(209,198,26)" rx="2" ry="2" />
<text  x="198.43" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (5 samples, 0.08%)</title><rect x="696.2" y="2037" width="1.0" height="15.0" fill="rgb(207,9,33)" rx="2" ry="2" />
<text  x="699.18" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="726.5" y="1557" width="0.2" height="15.0" fill="rgb(240,35,51)" rx="2" ry="2" />
<text  x="729.53" y="1567.5" ></text>
</g>
<g >
<title>tcp_current_mss (15 samples, 0.25%)</title><rect x="814.4" y="1717" width="3.0" height="15.0" fill="rgb(249,79,30)" rx="2" ry="2" />
<text  x="817.38" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="168.9" y="2005" width="0.2" height="15.0" fill="rgb(251,58,24)" rx="2" ry="2" />
<text  x="171.85" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (6 samples, 0.10%)</title><rect x="260.1" y="1877" width="1.2" height="15.0" fill="rgb(205,124,2)" rx="2" ry="2" />
<text  x="263.08" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="252.3" y="1829" width="0.2" height="15.0" fill="rgb(234,147,53)" rx="2" ry="2" />
<text  x="255.35" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (77 samples, 1.29%)</title><rect x="1147.0" y="1989" width="15.2" height="15.0" fill="rgb(248,45,26)" rx="2" ry="2" />
<text  x="1149.96" y="1999.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1102.3" y="1525" width="0.2" height="15.0" fill="rgb(251,206,33)" rx="2" ry="2" />
<text  x="1105.34" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="104.4" y="37" width="0.4" height="15.0" fill="rgb(232,175,42)" rx="2" ry="2" />
<text  x="107.40" y="47.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="104.4" y="165" width="17.3" height="15.0" fill="rgb(218,196,31)" rx="2" ry="2" />
<text  x="107.40" y="175.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="148.2" y="1893" width="0.2" height="15.0" fill="rgb(228,140,13)" rx="2" ry="2" />
<text  x="151.23" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (88 samples, 1.48%)</title><rect x="654.7" y="2021" width="17.5" height="15.0" fill="rgb(247,11,47)" rx="2" ry="2" />
<text  x="657.74" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="378.1" y="1701" width="0.2" height="15.0" fill="rgb(227,148,48)" rx="2" ry="2" />
<text  x="381.08" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="110.7" y="37" width="0.2" height="15.0" fill="rgb(205,134,7)" rx="2" ry="2" />
<text  x="113.75" y="47.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5 samples, 0.08%)</title><rect x="1071.6" y="1813" width="1.0" height="15.0" fill="rgb(250,194,41)" rx="2" ry="2" />
<text  x="1074.60" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="722.4" y="1781" width="0.2" height="15.0" fill="rgb(224,64,45)" rx="2" ry="2" />
<text  x="725.36" y="1791.5" ></text>
</g>
<g >
<title>mcrouter (5,891 samples, 99.01%)</title><rect x="21.7" y="2069" width="1168.3" height="15.0" fill="rgb(253,90,23)" rx="2" ry="2" />
<text  x="24.70" y="2079.5" >mcrouter</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="618.8" y="2005" width="0.8" height="15.0" fill="rgb(234,15,37)" rx="2" ry="2" />
<text  x="621.84" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="937.1" y="1989" width="0.6" height="15.0" fill="rgb(222,41,48)" rx="2" ry="2" />
<text  x="940.14" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (13 samples, 0.22%)</title><rect x="34.6" y="1973" width="2.6" height="15.0" fill="rgb(254,208,25)" rx="2" ry="2" />
<text  x="37.59" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="885.0" y="1973" width="0.2" height="15.0" fill="rgb(215,107,32)" rx="2" ry="2" />
<text  x="887.98" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (19 samples, 0.32%)</title><rect x="204.6" y="1941" width="3.7" height="15.0" fill="rgb(235,81,32)" rx="2" ry="2" />
<text  x="207.55" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="822.5" y="1829" width="0.2" height="15.0" fill="rgb(207,24,26)" rx="2" ry="2" />
<text  x="825.51" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="168.5" y="2021" width="0.6" height="15.0" fill="rgb(216,204,22)" rx="2" ry="2" />
<text  x="171.46" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="292.8" y="1637" width="0.4" height="15.0" fill="rgb(247,72,28)" rx="2" ry="2" />
<text  x="295.80" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="875.1" y="1749" width="0.2" height="15.0" fill="rgb(254,142,19)" rx="2" ry="2" />
<text  x="878.07" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="46.7" y="1989" width="0.4" height="15.0" fill="rgb(227,169,44)" rx="2" ry="2" />
<text  x="49.69" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (193 samples, 3.24%)</title><rect x="282.5" y="1829" width="38.3" height="15.0" fill="rgb(222,68,6)" rx="2" ry="2" />
<text  x="285.49" y="1839.5" >__t..</text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="531.2" y="2021" width="0.4" height="15.0" fill="rgb(211,187,3)" rx="2" ry="2" />
<text  x="534.18" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="139.1" y="2005" width="0.2" height="15.0" fill="rgb(233,156,1)" rx="2" ry="2" />
<text  x="142.11" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="179.2" y="1989" width="0.2" height="15.0" fill="rgb(215,148,37)" rx="2" ry="2" />
<text  x="182.17" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="709" width="17.5" height="15.0" fill="rgb(217,77,10)" rx="2" ry="2" />
<text  x="107.40" y="719.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="598.6" y="1925" width="2.6" height="15.0" fill="rgb(222,218,32)" rx="2" ry="2" />
<text  x="601.61" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="177.2" y="1957" width="0.6" height="15.0" fill="rgb(216,155,25)" rx="2" ry="2" />
<text  x="180.18" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="403.3" y="1829" width="0.2" height="15.0" fill="rgb(223,27,14)" rx="2" ry="2" />
<text  x="406.27" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="141.7" y="1925" width="0.2" height="15.0" fill="rgb(250,115,32)" rx="2" ry="2" />
<text  x="144.68" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="871.5" y="1941" width="0.6" height="15.0" fill="rgb(250,12,12)" rx="2" ry="2" />
<text  x="874.50" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="1143.0" y="1973" width="0.4" height="15.0" fill="rgb(225,70,42)" rx="2" ry="2" />
<text  x="1146.00" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="148.6" y="1877" width="0.2" height="15.0" fill="rgb(244,2,53)" rx="2" ry="2" />
<text  x="151.63" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="156.0" y="1637" width="0.2" height="15.0" fill="rgb(246,229,49)" rx="2" ry="2" />
<text  x="158.96" y="1647.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="613.9" y="1893" width="0.4" height="15.0" fill="rgb(210,176,42)" rx="2" ry="2" />
<text  x="616.88" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="321.0" y="1637" width="0.2" height="15.0" fill="rgb(215,135,32)" rx="2" ry="2" />
<text  x="323.96" y="1647.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="343.6" y="1733" width="0.2" height="15.0" fill="rgb(244,33,44)" rx="2" ry="2" />
<text  x="346.57" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="333.5" y="1781" width="0.2" height="15.0" fill="rgb(211,169,53)" rx="2" ry="2" />
<text  x="336.46" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (3 samples, 0.05%)</title><rect x="1147.4" y="1973" width="0.6" height="15.0" fill="rgb(213,78,40)" rx="2" ry="2" />
<text  x="1150.36" y="1983.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="916.1" y="1909" width="0.2" height="15.0" fill="rgb(230,65,20)" rx="2" ry="2" />
<text  x="919.12" y="1919.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="990.5" y="1877" width="0.8" height="15.0" fill="rgb(205,209,54)" rx="2" ry="2" />
<text  x="993.49" y="1887.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="253.9" y="1893" width="1.0" height="15.0" fill="rgb(240,169,31)" rx="2" ry="2" />
<text  x="256.93" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="480.8" y="1973" width="2.8" height="15.0" fill="rgb(228,19,35)" rx="2" ry="2" />
<text  x="483.81" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="942.5" y="1973" width="0.6" height="15.0" fill="rgb(208,123,27)" rx="2" ry="2" />
<text  x="945.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="469" width="17.5" height="15.0" fill="rgb(247,130,42)" rx="2" ry="2" />
<text  x="107.40" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.12%)</title><rect x="1179.5" y="2021" width="1.4" height="15.0" fill="rgb(225,109,24)" rx="2" ry="2" />
<text  x="1182.49" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (62 samples, 1.04%)</title><rect x="1100.4" y="1861" width="12.3" height="15.0" fill="rgb(211,83,53)" rx="2" ry="2" />
<text  x="1103.36" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (5 samples, 0.08%)</title><rect x="296.6" y="1701" width="1.0" height="15.0" fill="rgb(227,73,19)" rx="2" ry="2" />
<text  x="299.57" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="891.3" y="2021" width="1.0" height="15.0" fill="rgb(242,216,7)" rx="2" ry="2" />
<text  x="894.33" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="219.4" y="1813" width="0.6" height="15.0" fill="rgb(219,127,52)" rx="2" ry="2" />
<text  x="222.43" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="487.2" y="1941" width="0.6" height="15.0" fill="rgb(213,194,6)" rx="2" ry="2" />
<text  x="490.16" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (4 samples, 0.07%)</title><rect x="774.9" y="1541" width="0.8" height="15.0" fill="rgb(212,167,23)" rx="2" ry="2" />
<text  x="777.92" y="1551.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="992.5" y="1957" width="0.4" height="15.0" fill="rgb(222,56,37)" rx="2" ry="2" />
<text  x="995.47" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="156.0" y="1829" width="0.2" height="15.0" fill="rgb(251,163,41)" rx="2" ry="2" />
<text  x="158.96" y="1839.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="509.2" y="1781" width="0.2" height="15.0" fill="rgb(239,155,38)" rx="2" ry="2" />
<text  x="512.17" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="643.8" y="1765" width="0.2" height="15.0" fill="rgb(215,107,48)" rx="2" ry="2" />
<text  x="646.83" y="1775.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="67.1" y="1829" width="0.2" height="15.0" fill="rgb(229,10,11)" rx="2" ry="2" />
<text  x="70.12" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="394.1" y="1893" width="0.2" height="15.0" fill="rgb(249,25,40)" rx="2" ry="2" />
<text  x="397.14" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="457.2" y="1749" width="0.2" height="15.0" fill="rgb(234,137,41)" rx="2" ry="2" />
<text  x="460.21" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="501.8" y="1893" width="0.2" height="15.0" fill="rgb(244,5,37)" rx="2" ry="2" />
<text  x="504.83" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="668.2" y="1701" width="0.2" height="15.0" fill="rgb(209,160,35)" rx="2" ry="2" />
<text  x="671.22" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313 samples, 5.26%)</title><rect x="425.1" y="2021" width="62.1" height="15.0" fill="rgb(240,26,30)" rx="2" ry="2" />
<text  x="428.08" y="2031.5" >entry_..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="118.5" y="69" width="0.6" height="15.0" fill="rgb(213,89,12)" rx="2" ry="2" />
<text  x="121.48" y="79.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="399.3" y="1797" width="0.2" height="15.0" fill="rgb(209,114,37)" rx="2" ry="2" />
<text  x="402.30" y="1807.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="959.2" y="1941" width="0.2" height="15.0" fill="rgb(231,173,38)" rx="2" ry="2" />
<text  x="962.16" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="277.7" y="1749" width="0.2" height="15.0" fill="rgb(236,217,4)" rx="2" ry="2" />
<text  x="280.73" y="1759.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1158.9" y="1525" width="0.2" height="15.0" fill="rgb(218,27,51)" rx="2" ry="2" />
<text  x="1161.86" y="1535.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="56.2" y="1877" width="0.2" height="15.0" fill="rgb(243,177,52)" rx="2" ry="2" />
<text  x="59.21" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="547.0" y="1973" width="0.4" height="15.0" fill="rgb(246,202,38)" rx="2" ry="2" />
<text  x="550.05" y="1983.5" ></text>
</g>
<g >
<title>locks_remove_posix (5 samples, 0.08%)</title><rect x="825.1" y="1813" width="1.0" height="15.0" fill="rgb(231,137,41)" rx="2" ry="2" />
<text  x="828.09" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="252.3" y="1893" width="0.2" height="15.0" fill="rgb(241,101,41)" rx="2" ry="2" />
<text  x="255.35" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="966.7" y="2005" width="0.2" height="15.0" fill="rgb(206,137,6)" rx="2" ry="2" />
<text  x="969.69" y="2015.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="409.2" y="1893" width="0.2" height="15.0" fill="rgb(227,152,53)" rx="2" ry="2" />
<text  x="412.22" y="1903.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="664.9" y="1861" width="0.1" height="15.0" fill="rgb(238,124,51)" rx="2" ry="2" />
<text  x="667.85" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="271.8" y="1589" width="0.2" height="15.0" fill="rgb(246,98,41)" rx="2" ry="2" />
<text  x="274.78" y="1599.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="77.8" y="1909" width="0.2" height="15.0" fill="rgb(208,203,42)" rx="2" ry="2" />
<text  x="80.83" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="695.4" y="1925" width="0.2" height="15.0" fill="rgb(236,44,52)" rx="2" ry="2" />
<text  x="698.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="945.5" y="1989" width="0.2" height="15.0" fill="rgb(242,112,49)" rx="2" ry="2" />
<text  x="948.47" y="1999.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="120.1" y="69" width="0.2" height="15.0" fill="rgb(235,178,16)" rx="2" ry="2" />
<text  x="123.07" y="79.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="701.9" y="1877" width="0.2" height="15.0" fill="rgb(253,61,50)" rx="2" ry="2" />
<text  x="704.94" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="635.7" y="1957" width="0.2" height="15.0" fill="rgb(207,28,10)" rx="2" ry="2" />
<text  x="638.70" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="532.2" y="1861" width="0.2" height="15.0" fill="rgb(222,3,31)" rx="2" ry="2" />
<text  x="535.17" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="179.2" y="1957" width="0.2" height="15.0" fill="rgb(231,162,39)" rx="2" ry="2" />
<text  x="182.17" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1164.0" y="2053" width="0.2" height="15.0" fill="rgb(214,114,33)" rx="2" ry="2" />
<text  x="1167.02" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="531.8" y="1989" width="1.6" height="15.0" fill="rgb(205,69,5)" rx="2" ry="2" />
<text  x="534.78" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="378.1" y="1797" width="0.2" height="15.0" fill="rgb(247,208,3)" rx="2" ry="2" />
<text  x="381.08" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (78 samples, 1.31%)</title><rect x="865.5" y="1989" width="15.5" height="15.0" fill="rgb(231,163,12)" rx="2" ry="2" />
<text  x="868.55" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="482.6" y="1845" width="0.2" height="15.0" fill="rgb(218,216,43)" rx="2" ry="2" />
<text  x="485.59" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="644.2" y="1813" width="0.2" height="15.0" fill="rgb(233,120,36)" rx="2" ry="2" />
<text  x="647.23" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="578.4" y="1957" width="0.4" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="581.38" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="1122.4" y="1957" width="0.4" height="15.0" fill="rgb(246,82,22)" rx="2" ry="2" />
<text  x="1125.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="292.8" y="1445" width="0.2" height="15.0" fill="rgb(244,167,38)" rx="2" ry="2" />
<text  x="295.80" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (3 samples, 0.05%)</title><rect x="577.2" y="1989" width="0.6" height="15.0" fill="rgb(252,69,40)" rx="2" ry="2" />
<text  x="580.19" y="1999.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1068.4" y="1877" width="0.2" height="15.0" fill="rgb(208,73,50)" rx="2" ry="2" />
<text  x="1071.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="279.1" y="1845" width="0.2" height="15.0" fill="rgb(211,44,2)" rx="2" ry="2" />
<text  x="282.12" y="1855.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="414.0" y="1701" width="0.2" height="15.0" fill="rgb(217,9,50)" rx="2" ry="2" />
<text  x="416.98" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="761.4" y="1653" width="0.2" height="15.0" fill="rgb(251,11,26)" rx="2" ry="2" />
<text  x="764.43" y="1663.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (7 samples, 0.12%)</title><rect x="70.7" y="1941" width="1.4" height="15.0" fill="rgb(235,159,33)" rx="2" ry="2" />
<text  x="73.69" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="53.8" y="1909" width="0.4" height="15.0" fill="rgb(215,146,36)" rx="2" ry="2" />
<text  x="56.83" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="328.3" y="1621" width="0.2" height="15.0" fill="rgb(211,166,18)" rx="2" ry="2" />
<text  x="331.30" y="1631.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="91.1" y="1989" width="0.2" height="15.0" fill="rgb(246,121,39)" rx="2" ry="2" />
<text  x="94.11" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="186.7" y="1893" width="0.2" height="15.0" fill="rgb(219,33,10)" rx="2" ry="2" />
<text  x="189.70" y="1903.5" ></text>
</g>
<g >
<title>futex_wait (14 samples, 0.24%)</title><rect x="14.8" y="1973" width="2.7" height="15.0" fill="rgb(241,31,14)" rx="2" ry="2" />
<text  x="17.76" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="545.3" y="1925" width="0.6" height="15.0" fill="rgb(212,43,0)" rx="2" ry="2" />
<text  x="548.26" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="457.2" y="1701" width="0.2" height="15.0" fill="rgb(213,21,54)" rx="2" ry="2" />
<text  x="460.21" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="328.3" y="1685" width="0.2" height="15.0" fill="rgb(232,221,31)" rx="2" ry="2" />
<text  x="331.30" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="58.2" y="1877" width="0.2" height="15.0" fill="rgb(210,92,16)" rx="2" ry="2" />
<text  x="61.19" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (16 samples, 0.27%)</title><rect x="18.5" y="1829" width="3.2" height="15.0" fill="rgb(223,123,46)" rx="2" ry="2" />
<text  x="21.53" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (9 samples, 0.15%)</title><rect x="55.0" y="1957" width="1.8" height="15.0" fill="rgb(229,5,49)" rx="2" ry="2" />
<text  x="58.02" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="644.2" y="1557" width="0.2" height="15.0" fill="rgb(234,137,7)" rx="2" ry="2" />
<text  x="647.23" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.4" y="2037" width="0.2" height="15.0" fill="rgb(215,215,53)" rx="2" ry="2" />
<text  x="17.36" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="403.3" y="1861" width="0.2" height="15.0" fill="rgb(244,143,36)" rx="2" ry="2" />
<text  x="406.27" y="1871.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="457.6" y="1973" width="0.2" height="15.0" fill="rgb(215,212,47)" rx="2" ry="2" />
<text  x="460.61" y="1983.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5 samples, 0.08%)</title><rect x="1113.1" y="1909" width="0.9" height="15.0" fill="rgb(236,52,50)" rx="2" ry="2" />
<text  x="1116.05" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="70.9" y="1909" width="1.2" height="15.0" fill="rgb(244,63,3)" rx="2" ry="2" />
<text  x="73.88" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="689.8" y="1797" width="0.2" height="15.0" fill="rgb(228,29,14)" rx="2" ry="2" />
<text  x="692.84" y="1807.5" ></text>
</g>
<g >
<title>__close_fd (18 samples, 0.30%)</title><rect x="822.9" y="1845" width="3.6" height="15.0" fill="rgb(227,87,42)" rx="2" ry="2" />
<text  x="825.91" y="1855.5" ></text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="1100.0" y="1877" width="0.4" height="15.0" fill="rgb(219,84,5)" rx="2" ry="2" />
<text  x="1102.96" y="1887.5" ></text>
</g>
<g >
<title>accept4 (335 samples, 5.63%)</title><rect x="350.7" y="2037" width="66.4" height="15.0" fill="rgb(253,226,45)" rx="2" ry="2" />
<text  x="353.71" y="2047.5" >accept4</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="994.9" y="1813" width="0.2" height="15.0" fill="rgb(243,11,28)" rx="2" ry="2" />
<text  x="997.85" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="688.1" y="1893" width="0.9" height="15.0" fill="rgb(231,111,45)" rx="2" ry="2" />
<text  x="691.05" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="576.2" y="1957" width="0.2" height="15.0" fill="rgb(211,88,28)" rx="2" ry="2" />
<text  x="579.20" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (1 samples, 0.02%)</title><rect x="1136.3" y="2021" width="0.2" height="15.0" fill="rgb(219,213,35)" rx="2" ry="2" />
<text  x="1139.26" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="561.7" y="1893" width="0.2" height="15.0" fill="rgb(240,100,12)" rx="2" ry="2" />
<text  x="564.72" y="1903.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="321.6" y="1813" width="0.2" height="15.0" fill="rgb(247,105,25)" rx="2" ry="2" />
<text  x="324.56" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="869" width="17.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="107.40" y="879.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="213.3" y="1749" width="0.2" height="15.0" fill="rgb(226,130,30)" rx="2" ry="2" />
<text  x="216.28" y="1759.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.07%)</title><rect x="186.1" y="2021" width="0.8" height="15.0" fill="rgb(230,154,20)" rx="2" ry="2" />
<text  x="189.11" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (956 samples, 16.07%)</title><rect x="698.4" y="2037" width="189.6" height="15.0" fill="rgb(206,128,12)" rx="2" ry="2" />
<text  x="701.37" y="2047.5" >facebook::memcache::McSe..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="80.4" y="1909" width="0.6" height="15.0" fill="rgb(230,96,48)" rx="2" ry="2" />
<text  x="83.40" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (38 samples, 0.64%)</title><rect x="131.0" y="2005" width="7.5" height="15.0" fill="rgb(218,103,7)" rx="2" ry="2" />
<text  x="133.97" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="58.2" y="1925" width="0.2" height="15.0" fill="rgb(217,81,48)" rx="2" ry="2" />
<text  x="61.19" y="1935.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="290.8" y="1749" width="0.2" height="15.0" fill="rgb(215,219,3)" rx="2" ry="2" />
<text  x="293.82" y="1759.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="576.8" y="1973" width="0.2" height="15.0" fill="rgb(221,101,42)" rx="2" ry="2" />
<text  x="579.80" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="842.7" y="1941" width="0.2" height="15.0" fill="rgb(206,139,45)" rx="2" ry="2" />
<text  x="845.74" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.9" y="1989" width="0.2" height="15.0" fill="rgb(239,118,20)" rx="2" ry="2" />
<text  x="1175.94" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="333.5" y="1557" width="0.2" height="15.0" fill="rgb(253,158,10)" rx="2" ry="2" />
<text  x="336.46" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="866.9" y="1605" width="0.2" height="15.0" fill="rgb(241,207,17)" rx="2" ry="2" />
<text  x="869.94" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="328.3" y="1525" width="0.2" height="15.0" fill="rgb(230,161,3)" rx="2" ry="2" />
<text  x="331.30" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1096.8" y="1733" width="0.2" height="15.0" fill="rgb(214,68,33)" rx="2" ry="2" />
<text  x="1099.79" y="1743.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="876.9" y="1909" width="0.2" height="15.0" fill="rgb(222,142,49)" rx="2" ry="2" />
<text  x="879.85" y="1919.5" ></text>
</g>
<g >
<title>dnotify_flush (1 samples, 0.02%)</title><rect x="824.1" y="1829" width="0.2" height="15.0" fill="rgb(238,20,29)" rx="2" ry="2" />
<text  x="827.10" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1123.4" y="1845" width="0.2" height="15.0" fill="rgb(219,142,27)" rx="2" ry="2" />
<text  x="1126.36" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="963.5" y="2021" width="0.2" height="15.0" fill="rgb(248,204,4)" rx="2" ry="2" />
<text  x="966.52" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="657.1" y="1877" width="0.2" height="15.0" fill="rgb(218,152,18)" rx="2" ry="2" />
<text  x="660.12" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="867.1" y="1861" width="0.2" height="15.0" fill="rgb(212,154,43)" rx="2" ry="2" />
<text  x="870.14" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="556.0" y="1957" width="0.2" height="15.0" fill="rgb(249,15,14)" rx="2" ry="2" />
<text  x="558.97" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1173.7" y="1989" width="0.2" height="15.0" fill="rgb(207,17,1)" rx="2" ry="2" />
<text  x="1176.74" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="414.0" y="1845" width="0.2" height="15.0" fill="rgb(239,83,49)" rx="2" ry="2" />
<text  x="416.98" y="1855.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="90.7" y="1989" width="0.4" height="15.0" fill="rgb(251,73,30)" rx="2" ry="2" />
<text  x="93.72" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="644.2" y="1973" width="0.2" height="15.0" fill="rgb(239,227,41)" rx="2" ry="2" />
<text  x="647.23" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="631.7" y="1925" width="0.8" height="15.0" fill="rgb(241,90,30)" rx="2" ry="2" />
<text  x="634.73" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="51.8" y="1973" width="0.2" height="15.0" fill="rgb(220,69,50)" rx="2" ry="2" />
<text  x="54.85" y="1983.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="338.2" y="1893" width="1.4" height="15.0" fill="rgb(215,221,37)" rx="2" ry="2" />
<text  x="341.22" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1068.6" y="1877" width="0.4" height="15.0" fill="rgb(220,103,22)" rx="2" ry="2" />
<text  x="1071.63" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1006.2" y="1925" width="0.2" height="15.0" fill="rgb(229,220,15)" rx="2" ry="2" />
<text  x="1009.16" y="1935.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="990.5" y="1893" width="0.8" height="15.0" fill="rgb(222,30,10)" rx="2" ry="2" />
<text  x="993.49" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getSecurityProtocol[abi:cxx11] (1 samples, 0.02%)</title><rect x="226.0" y="1957" width="0.2" height="15.0" fill="rgb(238,114,17)" rx="2" ry="2" />
<text  x="228.97" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="271.8" y="1813" width="0.2" height="15.0" fill="rgb(226,166,14)" rx="2" ry="2" />
<text  x="274.78" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="941.3" y="1989" width="0.2" height="15.0" fill="rgb(238,162,3)" rx="2" ry="2" />
<text  x="944.31" y="1999.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="899.3" y="1989" width="0.6" height="15.0" fill="rgb(220,171,41)" rx="2" ry="2" />
<text  x="902.26" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="845.7" y="1877" width="0.4" height="15.0" fill="rgb(225,209,1)" rx="2" ry="2" />
<text  x="848.72" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1017.5" y="1877" width="0.2" height="15.0" fill="rgb(208,109,50)" rx="2" ry="2" />
<text  x="1020.46" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="132.4" y="1973" width="0.8" height="15.0" fill="rgb(211,200,29)" rx="2" ry="2" />
<text  x="135.36" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (2 samples, 0.03%)</title><rect x="70.3" y="1941" width="0.4" height="15.0" fill="rgb(219,211,20)" rx="2" ry="2" />
<text  x="73.29" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1045" width="17.5" height="15.0" fill="rgb(232,224,8)" rx="2" ry="2" />
<text  x="107.40" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="166.7" y="1973" width="0.2" height="15.0" fill="rgb(207,75,40)" rx="2" ry="2" />
<text  x="169.67" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="1123.4" y="1701" width="0.2" height="15.0" fill="rgb(244,49,25)" rx="2" ry="2" />
<text  x="1126.36" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="773" width="17.5" height="15.0" fill="rgb(233,71,40)" rx="2" ry="2" />
<text  x="107.40" y="783.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (27 samples, 0.45%)</title><rect x="979.0" y="1973" width="5.3" height="15.0" fill="rgb(228,30,20)" rx="2" ry="2" />
<text  x="981.99" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="531.8" y="1925" width="0.2" height="15.0" fill="rgb(232,121,45)" rx="2" ry="2" />
<text  x="534.78" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="885.8" y="1973" width="0.2" height="15.0" fill="rgb(221,25,46)" rx="2" ry="2" />
<text  x="888.78" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.3" y="1861" width="0.2" height="15.0" fill="rgb(245,176,28)" rx="2" ry="2" />
<text  x="147.26" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="689.4" y="1765" width="0.2" height="15.0" fill="rgb(238,122,53)" rx="2" ry="2" />
<text  x="692.44" y="1775.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="552.4" y="1957" width="0.4" height="15.0" fill="rgb(230,154,0)" rx="2" ry="2" />
<text  x="555.40" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="963.1" y="1973" width="0.4" height="15.0" fill="rgb(249,147,25)" rx="2" ry="2" />
<text  x="966.12" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="277.7" y="1605" width="0.2" height="15.0" fill="rgb(223,87,25)" rx="2" ry="2" />
<text  x="280.73" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="978.2" y="1957" width="0.2" height="15.0" fill="rgb(228,121,3)" rx="2" ry="2" />
<text  x="981.19" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="961.5" y="2021" width="1.0" height="15.0" fill="rgb(241,185,27)" rx="2" ry="2" />
<text  x="964.54" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (20 samples, 0.34%)</title><rect x="374.3" y="1909" width="4.0" height="15.0" fill="rgb(252,44,38)" rx="2" ry="2" />
<text  x="377.31" y="1919.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="417.1" y="2037" width="0.2" height="15.0" fill="rgb(225,42,36)" rx="2" ry="2" />
<text  x="420.15" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (36 samples, 0.61%)</title><rect x="998.4" y="2021" width="7.2" height="15.0" fill="rgb(211,170,39)" rx="2" ry="2" />
<text  x="1001.42" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="190.7" y="1973" width="0.2" height="15.0" fill="rgb(240,181,45)" rx="2" ry="2" />
<text  x="193.67" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="399.1" y="1813" width="0.2" height="15.0" fill="rgb(222,143,26)" rx="2" ry="2" />
<text  x="402.10" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.8" y="1861" width="0.1" height="15.0" fill="rgb(246,114,21)" rx="2" ry="2" />
<text  x="844.75" y="1871.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (2 samples, 0.03%)</title><rect x="84.6" y="1957" width="0.4" height="15.0" fill="rgb(243,203,39)" rx="2" ry="2" />
<text  x="87.57" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="861.2" y="2005" width="0.2" height="15.0" fill="rgb(231,199,36)" rx="2" ry="2" />
<text  x="864.19" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="289.2" y="1637" width="0.2" height="15.0" fill="rgb(254,29,7)" rx="2" ry="2" />
<text  x="292.23" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="839.4" y="1909" width="0.8" height="15.0" fill="rgb(214,150,12)" rx="2" ry="2" />
<text  x="842.37" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1182.7" y="1989" width="0.2" height="15.0" fill="rgb(240,87,40)" rx="2" ry="2" />
<text  x="1185.66" y="1999.5" ></text>
</g>
<g >
<title>vfprintf (11 samples, 0.18%)</title><rect x="190.9" y="2021" width="2.1" height="15.0" fill="rgb(241,54,50)" rx="2" ry="2" />
<text  x="193.87" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="264.4" y="1765" width="0.2" height="15.0" fill="rgb(223,155,2)" rx="2" ry="2" />
<text  x="267.44" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="565.5" y="1845" width="0.6" height="15.0" fill="rgb(206,72,44)" rx="2" ry="2" />
<text  x="568.49" y="1855.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (254 samples, 4.27%)</title><rect x="756.3" y="1717" width="50.3" height="15.0" fill="rgb(230,219,38)" rx="2" ry="2" />
<text  x="759.28" y="1727.5" >__tcp..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (6 samples, 0.10%)</title><rect x="515.1" y="1989" width="1.2" height="15.0" fill="rgb(250,226,6)" rx="2" ry="2" />
<text  x="518.12" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="994.9" y="1797" width="0.2" height="15.0" fill="rgb(216,163,22)" rx="2" ry="2" />
<text  x="997.85" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="365.4" y="1733" width="0.2" height="15.0" fill="rgb(238,113,53)" rx="2" ry="2" />
<text  x="368.39" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="564.9" y="1733" width="0.2" height="15.0" fill="rgb(213,41,30)" rx="2" ry="2" />
<text  x="567.90" y="1743.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="177.4" y="1941" width="0.2" height="15.0" fill="rgb(221,213,53)" rx="2" ry="2" />
<text  x="180.38" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (52 samples, 0.87%)</title><rect x="169.3" y="2021" width="10.3" height="15.0" fill="rgb(229,198,45)" rx="2" ry="2" />
<text  x="172.25" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="900.3" y="2005" width="0.4" height="15.0" fill="rgb(239,137,24)" rx="2" ry="2" />
<text  x="903.26" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="800.7" y="1525" width="0.2" height="15.0" fill="rgb(217,203,19)" rx="2" ry="2" />
<text  x="803.70" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.71%)</title><rect x="104.0" y="1765" width="20.2" height="15.0" fill="rgb(226,71,12)" rx="2" ry="2" />
<text  x="107.00" y="1775.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="365.4" y="1493" width="0.2" height="15.0" fill="rgb(251,91,26)" rx="2" ry="2" />
<text  x="368.39" y="1503.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="156.4" y="1877" width="0.2" height="15.0" fill="rgb(229,135,31)" rx="2" ry="2" />
<text  x="159.36" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="120.9" y="53" width="0.2" height="15.0" fill="rgb(205,101,4)" rx="2" ry="2" />
<text  x="123.86" y="63.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="650.2" y="1989" width="0.2" height="15.0" fill="rgb(226,195,21)" rx="2" ry="2" />
<text  x="653.17" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="924.1" y="1909" width="0.2" height="15.0" fill="rgb(229,48,47)" rx="2" ry="2" />
<text  x="927.05" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1012.5" y="1957" width="0.2" height="15.0" fill="rgb(206,213,22)" rx="2" ry="2" />
<text  x="1015.50" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="167.9" y="1685" width="0.2" height="15.0" fill="rgb(214,137,9)" rx="2" ry="2" />
<text  x="170.86" y="1695.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="550.2" y="1941" width="0.2" height="15.0" fill="rgb(216,72,53)" rx="2" ry="2" />
<text  x="553.22" y="1951.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="803.1" y="1605" width="0.4" height="15.0" fill="rgb(211,186,35)" rx="2" ry="2" />
<text  x="806.08" y="1615.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="526.6" y="1957" width="0.2" height="15.0" fill="rgb(205,205,36)" rx="2" ry="2" />
<text  x="529.62" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="68.1" y="1989" width="0.2" height="15.0" fill="rgb(206,182,15)" rx="2" ry="2" />
<text  x="71.11" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.70%)</title><rect x="104.0" y="1749" width="20.0" height="15.0" fill="rgb(219,94,54)" rx="2" ry="2" />
<text  x="107.00" y="1759.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="615.5" y="1925" width="0.2" height="15.0" fill="rgb(238,217,23)" rx="2" ry="2" />
<text  x="618.47" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (13 samples, 0.22%)</title><rect x="840.2" y="1941" width="2.5" height="15.0" fill="rgb(250,63,37)" rx="2" ry="2" />
<text  x="843.16" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="644.2" y="1845" width="0.2" height="15.0" fill="rgb(210,135,23)" rx="2" ry="2" />
<text  x="647.23" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="959.2" y="1989" width="0.2" height="15.0" fill="rgb(216,208,6)" rx="2" ry="2" />
<text  x="962.16" y="1999.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.02%)</title><rect x="942.9" y="1829" width="0.2" height="15.0" fill="rgb(220,220,30)" rx="2" ry="2" />
<text  x="945.89" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="531.8" y="1909" width="0.2" height="15.0" fill="rgb(213,207,34)" rx="2" ry="2" />
<text  x="534.78" y="1919.5" ></text>
</g>
<g >
<title>__dentry_kill (53 samples, 0.89%)</title><rect x="723.0" y="1765" width="10.5" height="15.0" fill="rgb(229,87,38)" rx="2" ry="2" />
<text  x="725.96" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (9 samples, 0.15%)</title><rect x="60.0" y="1973" width="1.8" height="15.0" fill="rgb(237,85,33)" rx="2" ry="2" />
<text  x="62.98" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (74 samples, 1.24%)</title><rect x="143.1" y="1941" width="14.6" height="15.0" fill="rgb(240,116,15)" rx="2" ry="2" />
<text  x="146.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="320.6" y="1813" width="0.2" height="15.0" fill="rgb(221,202,29)" rx="2" ry="2" />
<text  x="323.57" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="734.7" y="1557" width="0.2" height="15.0" fill="rgb(245,30,20)" rx="2" ry="2" />
<text  x="737.66" y="1567.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.18%)</title><rect x="351.5" y="2021" width="2.2" height="15.0" fill="rgb(213,151,34)" rx="2" ry="2" />
<text  x="354.51" y="2031.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="167.9" y="1621" width="0.2" height="15.0" fill="rgb(232,29,15)" rx="2" ry="2" />
<text  x="170.86" y="1631.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="756.1" y="1701" width="0.2" height="15.0" fill="rgb(241,142,0)" rx="2" ry="2" />
<text  x="759.08" y="1711.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1072.2" y="1797" width="0.2" height="15.0" fill="rgb(210,29,36)" rx="2" ry="2" />
<text  x="1075.20" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (17 samples, 0.29%)</title><rect x="610.3" y="1877" width="3.4" height="15.0" fill="rgb(238,227,34)" rx="2" ry="2" />
<text  x="613.31" y="1887.5" ></text>
</g>
<g >
<title>sock_rfree (5 samples, 0.08%)</title><rect x="1077.8" y="1877" width="0.9" height="15.0" fill="rgb(247,142,33)" rx="2" ry="2" />
<text  x="1080.75" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="91.3" y="2005" width="0.2" height="15.0" fill="rgb(245,111,12)" rx="2" ry="2" />
<text  x="94.31" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="871.9" y="1877" width="0.2" height="15.0" fill="rgb(212,66,42)" rx="2" ry="2" />
<text  x="874.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="83.2" y="1941" width="0.2" height="15.0" fill="rgb(208,200,48)" rx="2" ry="2" />
<text  x="86.18" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 1.87%)</title><rect x="103.8" y="1877" width="22.0" height="15.0" fill="rgb(212,100,45)" rx="2" ry="2" />
<text  x="106.81" y="1887.5" >[..</text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="403.3" y="1669" width="0.2" height="15.0" fill="rgb(217,152,4)" rx="2" ry="2" />
<text  x="406.27" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (114 samples, 1.92%)</title><rect x="103.8" y="1909" width="22.6" height="15.0" fill="rgb(234,113,44)" rx="2" ry="2" />
<text  x="106.81" y="1919.5" >[..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="800.7" y="1573" width="0.2" height="15.0" fill="rgb(246,131,30)" rx="2" ry="2" />
<text  x="803.70" y="1583.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="328.9" y="1829" width="0.2" height="15.0" fill="rgb(228,157,40)" rx="2" ry="2" />
<text  x="331.90" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1148.9" y="1941" width="0.2" height="15.0" fill="rgb(205,19,24)" rx="2" ry="2" />
<text  x="1151.95" y="1951.5" ></text>
</g>
<g >
<title>isspace@plt (1 samples, 0.02%)</title><rect x="1006.4" y="2021" width="0.2" height="15.0" fill="rgb(249,99,5)" rx="2" ry="2" />
<text  x="1009.36" y="2031.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="294.6" y="1381" width="0.6" height="15.0" fill="rgb(241,158,41)" rx="2" ry="2" />
<text  x="297.59" y="1391.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="805.3" y="1685" width="0.6" height="15.0" fill="rgb(247,53,31)" rx="2" ry="2" />
<text  x="808.26" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="167.3" y="1957" width="0.4" height="15.0" fill="rgb(229,129,49)" rx="2" ry="2" />
<text  x="170.27" y="1967.5" ></text>
</g>
<g >
<title>tcp_poll (34 samples, 0.57%)</title><rect x="460.2" y="1941" width="6.7" height="15.0" fill="rgb(220,31,13)" rx="2" ry="2" />
<text  x="463.18" y="1951.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="329.5" y="1829" width="0.2" height="15.0" fill="rgb(226,216,12)" rx="2" ry="2" />
<text  x="332.49" y="1839.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="117.5" y="53" width="0.6" height="15.0" fill="rgb(220,60,50)" rx="2" ry="2" />
<text  x="120.49" y="63.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="153.8" y="1893" width="0.2" height="15.0" fill="rgb(243,203,49)" rx="2" ry="2" />
<text  x="156.78" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="643.8" y="1845" width="0.2" height="15.0" fill="rgb(217,12,19)" rx="2" ry="2" />
<text  x="646.83" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="973.4" y="1957" width="0.2" height="15.0" fill="rgb(210,58,9)" rx="2" ry="2" />
<text  x="976.44" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="114.7" y="37" width="0.2" height="15.0" fill="rgb(208,147,5)" rx="2" ry="2" />
<text  x="117.71" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="570.5" y="1909" width="0.1" height="15.0" fill="rgb(239,63,51)" rx="2" ry="2" />
<text  x="573.45" y="1919.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="223.8" y="1877" width="0.8" height="15.0" fill="rgb(208,78,10)" rx="2" ry="2" />
<text  x="226.79" y="1887.5" ></text>
</g>
<g >
<title>SYSC_accept4 (265 samples, 4.45%)</title><rect x="360.4" y="1973" width="52.6" height="15.0" fill="rgb(215,23,25)" rx="2" ry="2" />
<text  x="363.43" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="501.8" y="1541" width="0.2" height="15.0" fill="rgb(210,152,51)" rx="2" ry="2" />
<text  x="504.83" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="649.6" y="2021" width="0.8" height="15.0" fill="rgb(238,71,9)" rx="2" ry="2" />
<text  x="652.58" y="2031.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (6 samples, 0.10%)</title><rect x="1000.2" y="1989" width="1.2" height="15.0" fill="rgb(242,148,34)" rx="2" ry="2" />
<text  x="1003.21" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (1 samples, 0.02%)</title><rect x="582.7" y="2021" width="0.2" height="15.0" fill="rgb(251,173,44)" rx="2" ry="2" />
<text  x="585.75" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="333.5" y="1605" width="0.2" height="15.0" fill="rgb(241,1,4)" rx="2" ry="2" />
<text  x="336.46" y="1615.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="217.6" y="1877" width="0.2" height="15.0" fill="rgb(252,68,38)" rx="2" ry="2" />
<text  x="220.64" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="963.7" y="2037" width="1.2" height="15.0" fill="rgb(229,195,31)" rx="2" ry="2" />
<text  x="966.72" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1096.8" y="1749" width="0.2" height="15.0" fill="rgb(245,76,43)" rx="2" ry="2" />
<text  x="1099.79" y="1759.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="806.6" y="1717" width="0.2" height="15.0" fill="rgb(240,57,2)" rx="2" ry="2" />
<text  x="809.65" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="532.0" y="1909" width="0.6" height="15.0" fill="rgb(205,63,11)" rx="2" ry="2" />
<text  x="534.98" y="1919.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="562.7" y="1893" width="0.6" height="15.0" fill="rgb(233,33,24)" rx="2" ry="2" />
<text  x="565.72" y="1903.5" ></text>
</g>
<g >
<title>dev_queue_xmit (4 samples, 0.07%)</title><rect x="1111.9" y="1781" width="0.8" height="15.0" fill="rgb(223,112,29)" rx="2" ry="2" />
<text  x="1114.86" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="220.2" y="1861" width="1.2" height="15.0" fill="rgb(214,71,43)" rx="2" ry="2" />
<text  x="223.22" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="321.8" y="1765" width="0.2" height="15.0" fill="rgb(205,161,10)" rx="2" ry="2" />
<text  x="324.76" y="1775.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="942.3" y="1973" width="0.2" height="15.0" fill="rgb(225,177,47)" rx="2" ry="2" />
<text  x="945.30" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="277.7" y="1701" width="0.2" height="15.0" fill="rgb(211,2,8)" rx="2" ry="2" />
<text  x="280.73" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="103.4" y="1845" width="0.2" height="15.0" fill="rgb(254,141,38)" rx="2" ry="2" />
<text  x="106.41" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="378.1" y="1733" width="0.2" height="15.0" fill="rgb(210,7,38)" rx="2" ry="2" />
<text  x="381.08" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="944.3" y="2037" width="0.8" height="15.0" fill="rgb(205,42,54)" rx="2" ry="2" />
<text  x="947.28" y="2047.5" ></text>
</g>
<g >
<title>sys_fcntl (17 samples, 0.29%)</title><rect x="562.1" y="1941" width="3.4" height="15.0" fill="rgb(238,64,44)" rx="2" ry="2" />
<text  x="565.12" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="321.0" y="1765" width="0.2" height="15.0" fill="rgb(253,48,29)" rx="2" ry="2" />
<text  x="323.96" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="621.0" y="1973" width="0.2" height="15.0" fill="rgb(248,149,46)" rx="2" ry="2" />
<text  x="624.02" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="203.2" y="1941" width="0.2" height="15.0" fill="rgb(208,154,36)" rx="2" ry="2" />
<text  x="206.16" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="945.3" y="2021" width="1.4" height="15.0" fill="rgb(223,205,30)" rx="2" ry="2" />
<text  x="948.27" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="442.3" y="1893" width="0.2" height="15.0" fill="rgb(241,108,53)" rx="2" ry="2" />
<text  x="445.34" y="1903.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="925.4" y="1957" width="0.2" height="15.0" fill="rgb(210,69,25)" rx="2" ry="2" />
<text  x="928.44" y="1967.5" ></text>
</g>
<g >
<title>ip_output (134 samples, 2.25%)</title><rect x="766.8" y="1637" width="26.6" height="15.0" fill="rgb(231,184,52)" rx="2" ry="2" />
<text  x="769.79" y="1647.5" >i..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="171.6" y="1973" width="0.2" height="15.0" fill="rgb(247,94,36)" rx="2" ry="2" />
<text  x="174.63" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1143.0" y="1957" width="0.2" height="15.0" fill="rgb(247,191,53)" rx="2" ry="2" />
<text  x="1146.00" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="167.3" y="1925" width="0.2" height="15.0" fill="rgb(238,208,18)" rx="2" ry="2" />
<text  x="170.27" y="1935.5" ></text>
</g>
<g >
<title>event_base_loop (3 samples, 0.05%)</title><rect x="1133.1" y="2053" width="0.6" height="15.0" fill="rgb(227,201,7)" rx="2" ry="2" />
<text  x="1136.08" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.08%)</title><rect x="912.2" y="1925" width="0.9" height="15.0" fill="rgb(248,37,49)" rx="2" ry="2" />
<text  x="915.15" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="108.4" y="37" width="0.2" height="15.0" fill="rgb(217,189,25)" rx="2" ry="2" />
<text  x="111.37" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="360.2" y="1781" width="0.2" height="15.0" fill="rgb(246,73,9)" rx="2" ry="2" />
<text  x="363.23" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="319.2" y="1525" width="0.2" height="15.0" fill="rgb(231,138,1)" rx="2" ry="2" />
<text  x="322.18" y="1535.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="901.8" y="2005" width="0.2" height="15.0" fill="rgb(225,182,14)" rx="2" ry="2" />
<text  x="904.84" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1005.2" y="1973" width="0.2" height="15.0" fill="rgb(241,80,45)" rx="2" ry="2" />
<text  x="1008.17" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="661" width="17.5" height="15.0" fill="rgb(218,215,23)" rx="2" ry="2" />
<text  x="107.40" y="671.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="501.8" y="1717" width="0.2" height="15.0" fill="rgb(208,202,2)" rx="2" ry="2" />
<text  x="504.83" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (10 samples, 0.17%)</title><rect x="15.6" y="1829" width="1.9" height="15.0" fill="rgb(240,74,1)" rx="2" ry="2" />
<text  x="18.55" y="1839.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (46 samples, 0.77%)</title><rect x="724.3" y="1749" width="9.2" height="15.0" fill="rgb(243,7,44)" rx="2" ry="2" />
<text  x="727.35" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="119.7" y="37" width="0.2" height="15.0" fill="rgb(223,189,25)" rx="2" ry="2" />
<text  x="122.67" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="413.6" y="2005" width="0.6" height="15.0" fill="rgb(211,130,10)" rx="2" ry="2" />
<text  x="416.58" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="646.2" y="1877" width="0.2" height="15.0" fill="rgb(213,91,33)" rx="2" ry="2" />
<text  x="649.21" y="1887.5" ></text>
</g>
<g >
<title>__fd_install (2 samples, 0.03%)</title><rect x="361.6" y="1957" width="0.4" height="15.0" fill="rgb(227,218,10)" rx="2" ry="2" />
<text  x="364.62" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="649.8" y="2005" width="0.2" height="15.0" fill="rgb(236,48,50)" rx="2" ry="2" />
<text  x="652.78" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="88.7" y="1957" width="1.4" height="15.0" fill="rgb(214,121,23)" rx="2" ry="2" />
<text  x="91.73" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="903.2" y="2021" width="1.6" height="15.0" fill="rgb(221,9,34)" rx="2" ry="2" />
<text  x="906.23" y="2031.5" ></text>
</g>
<g >
<title>sock_destroy_inode (10 samples, 0.17%)</title><rect x="730.3" y="1685" width="2.0" height="15.0" fill="rgb(227,3,2)" rx="2" ry="2" />
<text  x="733.30" y="1695.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (3 samples, 0.05%)</title><rect x="958.0" y="2005" width="0.6" height="15.0" fill="rgb(222,205,6)" rx="2" ry="2" />
<text  x="960.97" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="360.2" y="1957" width="0.2" height="15.0" fill="rgb(250,158,51)" rx="2" ry="2" />
<text  x="363.23" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="271.8" y="1749" width="0.2" height="15.0" fill="rgb(245,221,44)" rx="2" ry="2" />
<text  x="274.78" y="1759.5" ></text>
</g>
<g >
<title>epoll_wait (85 samples, 1.43%)</title><rect x="492.9" y="2037" width="16.9" height="15.0" fill="rgb(232,192,25)" rx="2" ry="2" />
<text  x="495.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="577.4" y="1957" width="0.2" height="15.0" fill="rgb(230,49,50)" rx="2" ry="2" />
<text  x="580.39" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (7 samples, 0.12%)</title><rect x="294.0" y="1493" width="1.4" height="15.0" fill="rgb(210,43,24)" rx="2" ry="2" />
<text  x="296.99" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (425 samples, 7.14%)</title><rect x="103.0" y="2037" width="84.3" height="15.0" fill="rgb(233,72,26)" rx="2" ry="2" />
<text  x="106.01" y="2047.5" >[unknown]</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="192.9" y="1749" width="0.1" height="15.0" fill="rgb(227,76,36)" rx="2" ry="2" />
<text  x="195.85" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="875.1" y="1829" width="0.2" height="15.0" fill="rgb(240,175,38)" rx="2" ry="2" />
<text  x="878.07" y="1839.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (6 samples, 0.10%)</title><rect x="83.4" y="1957" width="1.2" height="15.0" fill="rgb(253,115,44)" rx="2" ry="2" />
<text  x="86.38" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="343.8" y="2021" width="1.0" height="15.0" fill="rgb(221,164,26)" rx="2" ry="2" />
<text  x="346.77" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="330.9" y="1861" width="0.2" height="15.0" fill="rgb(219,181,41)" rx="2" ry="2" />
<text  x="333.88" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="292.8" y="1573" width="0.4" height="15.0" fill="rgb(218,154,33)" rx="2" ry="2" />
<text  x="295.80" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="881.2" y="1989" width="0.4" height="15.0" fill="rgb(248,104,10)" rx="2" ry="2" />
<text  x="884.22" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="171.2" y="1941" width="0.4" height="15.0" fill="rgb(242,180,38)" rx="2" ry="2" />
<text  x="174.23" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="866.9" y="1861" width="0.2" height="15.0" fill="rgb(221,127,20)" rx="2" ry="2" />
<text  x="869.94" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="885.8" y="1957" width="0.2" height="15.0" fill="rgb(223,165,20)" rx="2" ry="2" />
<text  x="888.78" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="849.7" y="1925" width="0.2" height="15.0" fill="rgb(233,55,49)" rx="2" ry="2" />
<text  x="852.68" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="856.0" y="1973" width="0.6" height="15.0" fill="rgb(240,66,9)" rx="2" ry="2" />
<text  x="859.03" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="552.6" y="1845" width="0.2" height="15.0" fill="rgb(239,222,9)" rx="2" ry="2" />
<text  x="555.60" y="1855.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="243.6" y="1877" width="0.2" height="15.0" fill="rgb(213,77,1)" rx="2" ry="2" />
<text  x="246.62" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="166.5" y="2005" width="0.2" height="15.0" fill="rgb(205,88,47)" rx="2" ry="2" />
<text  x="169.47" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="882.4" y="1989" width="0.2" height="15.0" fill="rgb(210,148,3)" rx="2" ry="2" />
<text  x="885.41" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="402.9" y="1861" width="0.2" height="15.0" fill="rgb(231,4,41)" rx="2" ry="2" />
<text  x="405.87" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="621.4" y="2021" width="0.2" height="15.0" fill="rgb(238,64,29)" rx="2" ry="2" />
<text  x="624.42" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (53 samples, 0.89%)</title><rect x="1101.4" y="1717" width="10.5" height="15.0" fill="rgb(206,218,30)" rx="2" ry="2" />
<text  x="1104.35" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="365.4" y="1541" width="0.2" height="15.0" fill="rgb(228,52,25)" rx="2" ry="2" />
<text  x="368.39" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (8 samples, 0.13%)</title><rect x="536.3" y="2005" width="1.6" height="15.0" fill="rgb(213,161,45)" rx="2" ry="2" />
<text  x="539.34" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="378.1" y="1861" width="0.2" height="15.0" fill="rgb(223,159,36)" rx="2" ry="2" />
<text  x="381.08" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="887.4" y="2005" width="0.2" height="15.0" fill="rgb(246,8,41)" rx="2" ry="2" />
<text  x="890.36" y="2015.5" ></text>
</g>
<g >
<title>bictcp_init (1 samples, 0.02%)</title><rect x="271.8" y="1509" width="0.2" height="15.0" fill="rgb(223,128,33)" rx="2" ry="2" />
<text  x="274.78" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1172.3" y="1973" width="0.6" height="15.0" fill="rgb(229,17,16)" rx="2" ry="2" />
<text  x="1175.35" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="959.2" y="1973" width="0.2" height="15.0" fill="rgb(225,146,18)" rx="2" ry="2" />
<text  x="962.16" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="833.2" y="1925" width="0.2" height="15.0" fill="rgb(210,60,46)" rx="2" ry="2" />
<text  x="836.22" y="1935.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="565.7" y="1669" width="0.2" height="15.0" fill="rgb(226,54,20)" rx="2" ry="2" />
<text  x="568.69" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="148.0" y="1877" width="0.2" height="15.0" fill="rgb(211,86,54)" rx="2" ry="2" />
<text  x="151.03" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="14.0" y="1893" width="0.2" height="15.0" fill="rgb(249,122,52)" rx="2" ry="2" />
<text  x="16.97" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="892.9" y="2005" width="0.2" height="15.0" fill="rgb(227,96,53)" rx="2" ry="2" />
<text  x="895.92" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6 samples, 0.10%)</title><rect x="926.4" y="1957" width="1.2" height="15.0" fill="rgb(247,21,16)" rx="2" ry="2" />
<text  x="929.43" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="289.2" y="1541" width="0.2" height="15.0" fill="rgb(205,122,36)" rx="2" ry="2" />
<text  x="292.23" y="1551.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="103.4" y="1557" width="0.2" height="15.0" fill="rgb(252,139,19)" rx="2" ry="2" />
<text  x="106.41" y="1567.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="516.3" y="1973" width="0.6" height="15.0" fill="rgb(207,164,31)" rx="2" ry="2" />
<text  x="519.31" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="866.9" y="1877" width="0.4" height="15.0" fill="rgb(240,12,7)" rx="2" ry="2" />
<text  x="869.94" y="1887.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="689.8" y="1813" width="0.2" height="15.0" fill="rgb(230,179,37)" rx="2" ry="2" />
<text  x="692.84" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="915.3" y="1925" width="0.4" height="15.0" fill="rgb(253,103,26)" rx="2" ry="2" />
<text  x="918.33" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (2 samples, 0.03%)</title><rect x="92.9" y="2021" width="0.4" height="15.0" fill="rgb(240,73,0)" rx="2" ry="2" />
<text  x="95.90" y="2031.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (4 samples, 0.07%)</title><rect x="227.2" y="2037" width="0.8" height="15.0" fill="rgb(240,108,13)" rx="2" ry="2" />
<text  x="230.16" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="365.4" y="1813" width="0.2" height="15.0" fill="rgb(219,105,33)" rx="2" ry="2" />
<text  x="368.39" y="1823.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (4 samples, 0.07%)</title><rect x="729.1" y="1669" width="0.8" height="15.0" fill="rgb(234,215,49)" rx="2" ry="2" />
<text  x="732.11" y="1679.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="228.0" y="2037" width="0.5" height="15.0" fill="rgb(233,155,45)" rx="2" ry="2" />
<text  x="230.95" y="2047.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (1 samples, 0.02%)</title><rect x="733.3" y="1701" width="0.2" height="15.0" fill="rgb(235,15,31)" rx="2" ry="2" />
<text  x="736.27" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="905.0" y="2037" width="0.2" height="15.0" fill="rgb(221,190,32)" rx="2" ry="2" />
<text  x="908.02" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="292.8" y="1509" width="0.4" height="15.0" fill="rgb(253,191,48)" rx="2" ry="2" />
<text  x="295.80" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="726.5" y="1653" width="0.2" height="15.0" fill="rgb(222,115,30)" rx="2" ry="2" />
<text  x="729.53" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="464.0" y="1909" width="2.7" height="15.0" fill="rgb(249,12,15)" rx="2" ry="2" />
<text  x="466.95" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="119.9" y="37" width="0.2" height="15.0" fill="rgb(221,52,12)" rx="2" ry="2" />
<text  x="122.87" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="551.6" y="1925" width="0.4" height="15.0" fill="rgb(227,211,36)" rx="2" ry="2" />
<text  x="554.61" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="668.2" y="1589" width="0.2" height="15.0" fill="rgb(221,186,44)" rx="2" ry="2" />
<text  x="671.22" y="1599.5" ></text>
</g>
<g >
<title>event_base_set@plt (1 samples, 0.02%)</title><rect x="217.4" y="1877" width="0.2" height="15.0" fill="rgb(220,195,25)" rx="2" ry="2" />
<text  x="220.44" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="881.6" y="1989" width="0.2" height="15.0" fill="rgb(248,0,45)" rx="2" ry="2" />
<text  x="884.61" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="179.8" y="1957" width="0.2" height="15.0" fill="rgb(221,197,45)" rx="2" ry="2" />
<text  x="182.76" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.53%)</title><rect x="104.4" y="1541" width="18.0" height="15.0" fill="rgb(207,206,4)" rx="2" ry="2" />
<text  x="107.40" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="219.2" y="1829" width="0.2" height="15.0" fill="rgb(248,156,31)" rx="2" ry="2" />
<text  x="222.23" y="1839.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (9 samples, 0.15%)</title><rect x="403.9" y="1893" width="1.7" height="15.0" fill="rgb(245,38,36)" rx="2" ry="2" />
<text  x="406.86" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="962.3" y="1733" width="0.2" height="15.0" fill="rgb(217,228,47)" rx="2" ry="2" />
<text  x="965.33" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="192.9" y="1765" width="0.1" height="15.0" fill="rgb(234,165,13)" rx="2" ry="2" />
<text  x="195.85" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="121.5" y="69" width="0.2" height="15.0" fill="rgb(218,134,45)" rx="2" ry="2" />
<text  x="124.46" y="79.5" ></text>
</g>
<g >
<title>tcp_setsockopt (2 samples, 0.03%)</title><rect x="689.2" y="1925" width="0.4" height="15.0" fill="rgb(239,131,27)" rx="2" ry="2" />
<text  x="692.24" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="437" width="17.5" height="15.0" fill="rgb(211,142,13)" rx="2" ry="2" />
<text  x="107.40" y="447.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (28 samples, 0.47%)</title><rect x="842.9" y="1941" width="5.6" height="15.0" fill="rgb(219,3,49)" rx="2" ry="2" />
<text  x="845.94" y="1951.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="553.4" y="1829" width="0.2" height="15.0" fill="rgb(245,12,5)" rx="2" ry="2" />
<text  x="556.39" y="1839.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="688.1" y="1877" width="0.9" height="15.0" fill="rgb(240,74,25)" rx="2" ry="2" />
<text  x="691.05" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="114.3" y="53" width="3.0" height="15.0" fill="rgb(232,226,53)" rx="2" ry="2" />
<text  x="117.32" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="372.9" y="1925" width="0.4" height="15.0" fill="rgb(252,40,4)" rx="2" ry="2" />
<text  x="375.92" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (8 samples, 0.13%)</title><rect x="700.7" y="1973" width="1.6" height="15.0" fill="rgb(254,169,13)" rx="2" ry="2" />
<text  x="703.75" y="1983.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="365.4" y="1653" width="0.2" height="15.0" fill="rgb(214,84,50)" rx="2" ry="2" />
<text  x="368.39" y="1663.5" ></text>
</g>
<g >
<title>event_set (3 samples, 0.05%)</title><rect x="843.5" y="1925" width="0.6" height="15.0" fill="rgb(217,37,47)" rx="2" ry="2" />
<text  x="846.54" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="666.8" y="1829" width="1.2" height="15.0" fill="rgb(217,148,35)" rx="2" ry="2" />
<text  x="669.83" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1017.5" y="1957" width="0.2" height="15.0" fill="rgb(247,105,49)" rx="2" ry="2" />
<text  x="1020.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="835.6" y="1909" width="0.2" height="15.0" fill="rgb(224,89,37)" rx="2" ry="2" />
<text  x="838.60" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="501.8" y="1781" width="0.2" height="15.0" fill="rgb(252,42,54)" rx="2" ry="2" />
<text  x="504.83" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="371.7" y="1925" width="1.2" height="15.0" fill="rgb(240,137,51)" rx="2" ry="2" />
<text  x="374.73" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb (7 samples, 0.12%)</title><rect x="791.8" y="1525" width="1.4" height="15.0" fill="rgb(223,133,18)" rx="2" ry="2" />
<text  x="794.77" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="487.2" y="1877" width="0.6" height="15.0" fill="rgb(227,148,12)" rx="2" ry="2" />
<text  x="490.16" y="1887.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="834.4" y="1909" width="0.4" height="15.0" fill="rgb(241,10,13)" rx="2" ry="2" />
<text  x="837.41" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="251.9" y="1893" width="0.2" height="15.0" fill="rgb(250,77,5)" rx="2" ry="2" />
<text  x="254.95" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.60%)</title><rect x="104.2" y="1589" width="18.8" height="15.0" fill="rgb(241,147,19)" rx="2" ry="2" />
<text  x="107.20" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="553.4" y="1941" width="0.2" height="15.0" fill="rgb(223,31,48)" rx="2" ry="2" />
<text  x="556.39" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (332 samples, 5.58%)</title><rect x="27.7" y="2037" width="65.8" height="15.0" fill="rgb(224,131,29)" rx="2" ry="2" />
<text  x="30.65" y="2047.5" >folly::..</text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="965.5" y="2005" width="0.2" height="15.0" fill="rgb(247,217,50)" rx="2" ry="2" />
<text  x="968.50" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1174.7" y="2021" width="0.4" height="15.0" fill="rgb(247,34,27)" rx="2" ry="2" />
<text  x="1177.73" y="2031.5" ></text>
</g>
<g >
<title>get_empty_filp (34 samples, 0.57%)</title><rect x="400.1" y="1925" width="6.7" height="15.0" fill="rgb(225,132,38)" rx="2" ry="2" />
<text  x="403.09" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="55.4" y="1925" width="1.4" height="15.0" fill="rgb(228,85,3)" rx="2" ry="2" />
<text  x="58.42" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="513.7" y="1973" width="1.2" height="15.0" fill="rgb(235,106,19)" rx="2" ry="2" />
<text  x="516.73" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1144.6" y="1989" width="0.4" height="15.0" fill="rgb(212,63,5)" rx="2" ry="2" />
<text  x="1147.58" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1045.8" y="1909" width="0.8" height="15.0" fill="rgb(253,130,20)" rx="2" ry="2" />
<text  x="1048.82" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="59.6" y="1893" width="0.2" height="15.0" fill="rgb(251,189,51)" rx="2" ry="2" />
<text  x="62.58" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="620.6" y="1941" width="0.2" height="15.0" fill="rgb(216,29,2)" rx="2" ry="2" />
<text  x="623.63" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="63.3" y="1909" width="0.4" height="15.0" fill="rgb(225,154,30)" rx="2" ry="2" />
<text  x="66.35" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="643.8" y="1909" width="0.2" height="15.0" fill="rgb(212,191,48)" rx="2" ry="2" />
<text  x="646.83" y="1919.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="342.6" y="2005" width="0.2" height="15.0" fill="rgb(218,32,30)" rx="2" ry="2" />
<text  x="345.58" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="702.1" y="1573" width="0.2" height="15.0" fill="rgb(211,210,35)" rx="2" ry="2" />
<text  x="705.13" y="1583.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="572.2" y="1637" width="0.2" height="15.0" fill="rgb(228,59,27)" rx="2" ry="2" />
<text  x="575.24" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="78.4" y="1957" width="0.2" height="15.0" fill="rgb(207,75,31)" rx="2" ry="2" />
<text  x="81.42" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (13 samples, 0.22%)</title><rect x="93.7" y="2053" width="2.6" height="15.0" fill="rgb(217,193,26)" rx="2" ry="2" />
<text  x="96.69" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="341" width="17.5" height="15.0" fill="rgb(222,51,54)" rx="2" ry="2" />
<text  x="107.40" y="351.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (14 samples, 0.24%)</title><rect x="163.7" y="2021" width="2.8" height="15.0" fill="rgb(229,9,51)" rx="2" ry="2" />
<text  x="166.70" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1143.2" y="1941" width="0.2" height="15.0" fill="rgb(249,217,15)" rx="2" ry="2" />
<text  x="1146.20" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (4 samples, 0.07%)</title><rect x="997.4" y="2021" width="0.8" height="15.0" fill="rgb(246,21,31)" rx="2" ry="2" />
<text  x="1000.43" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.0" y="1733" width="0.2" height="15.0" fill="rgb(244,121,29)" rx="2" ry="2" />
<text  x="127.03" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (3 samples, 0.05%)</title><rect x="977.4" y="1909" width="0.6" height="15.0" fill="rgb(246,55,26)" rx="2" ry="2" />
<text  x="980.40" y="1919.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="377.9" y="1781" width="0.2" height="15.0" fill="rgb(240,23,23)" rx="2" ry="2" />
<text  x="380.88" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="891.9" y="1989" width="0.4" height="15.0" fill="rgb(207,197,23)" rx="2" ry="2" />
<text  x="894.93" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="148.6" y="1861" width="0.2" height="15.0" fill="rgb(230,95,49)" rx="2" ry="2" />
<text  x="151.63" y="1871.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="125.2" y="1813" width="0.2" height="15.0" fill="rgb(235,190,51)" rx="2" ry="2" />
<text  x="128.22" y="1823.5" ></text>
</g>
<g >
<title>__sock_release (1 samples, 0.02%)</title><rect x="721.4" y="1797" width="0.2" height="15.0" fill="rgb(208,29,15)" rx="2" ry="2" />
<text  x="724.37" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="644.2" y="1621" width="0.2" height="15.0" fill="rgb(222,191,14)" rx="2" ry="2" />
<text  x="647.23" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (27 samples, 0.45%)</title><rect x="979.0" y="1957" width="5.3" height="15.0" fill="rgb(251,21,2)" rx="2" ry="2" />
<text  x="981.99" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (100 samples, 1.68%)</title><rect x="511.4" y="2021" width="19.8" height="15.0" fill="rgb(230,19,37)" rx="2" ry="2" />
<text  x="514.35" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="377.9" y="1797" width="0.2" height="15.0" fill="rgb(251,33,14)" rx="2" ry="2" />
<text  x="380.88" y="1807.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="773.5" y="1557" width="0.2" height="15.0" fill="rgb(213,25,53)" rx="2" ry="2" />
<text  x="776.53" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="532.6" y="1909" width="0.2" height="15.0" fill="rgb(253,105,48)" rx="2" ry="2" />
<text  x="535.57" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="892.5" y="2037" width="0.4" height="15.0" fill="rgb(212,56,14)" rx="2" ry="2" />
<text  x="895.52" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="965.1" y="2005" width="0.2" height="15.0" fill="rgb(206,172,34)" rx="2" ry="2" />
<text  x="968.11" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="875.1" y="1717" width="0.2" height="15.0" fill="rgb(240,133,37)" rx="2" ry="2" />
<text  x="878.07" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="264.4" y="1781" width="0.2" height="15.0" fill="rgb(247,166,16)" rx="2" ry="2" />
<text  x="267.44" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="321.0" y="1605" width="0.2" height="15.0" fill="rgb(249,89,6)" rx="2" ry="2" />
<text  x="323.96" y="1615.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="15.2" y="1829" width="0.2" height="15.0" fill="rgb(253,107,1)" rx="2" ry="2" />
<text  x="18.16" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="292.8" y="1541" width="0.4" height="15.0" fill="rgb(246,96,47)" rx="2" ry="2" />
<text  x="295.80" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="1016.3" y="2021" width="1.0" height="15.0" fill="rgb(228,176,30)" rx="2" ry="2" />
<text  x="1019.27" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="165.5" y="1957" width="0.2" height="15.0" fill="rgb(247,189,51)" rx="2" ry="2" />
<text  x="168.48" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="321.0" y="1733" width="0.2" height="15.0" fill="rgb(223,214,12)" rx="2" ry="2" />
<text  x="323.96" y="1743.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="1064.9" y="1717" width="0.2" height="15.0" fill="rgb(209,52,32)" rx="2" ry="2" />
<text  x="1067.86" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="892.9" y="2021" width="0.2" height="15.0" fill="rgb(225,147,2)" rx="2" ry="2" />
<text  x="895.92" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="172.8" y="1941" width="0.6" height="15.0" fill="rgb(224,10,1)" rx="2" ry="2" />
<text  x="175.82" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="200.2" y="2005" width="0.6" height="15.0" fill="rgb(214,215,14)" rx="2" ry="2" />
<text  x="203.19" y="2015.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.12%)</title><rect x="1012.7" y="2037" width="1.4" height="15.0" fill="rgb(244,186,17)" rx="2" ry="2" />
<text  x="1015.70" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="595.8" y="1813" width="0.2" height="15.0" fill="rgb(241,184,34)" rx="2" ry="2" />
<text  x="598.84" y="1823.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="135.3" y="1749" width="0.2" height="15.0" fill="rgb(248,220,6)" rx="2" ry="2" />
<text  x="138.34" y="1759.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (2 samples, 0.03%)</title><rect x="524.6" y="1989" width="0.4" height="15.0" fill="rgb(208,33,54)" rx="2" ry="2" />
<text  x="527.64" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (16 samples, 0.27%)</title><rect x="153.4" y="1909" width="3.2" height="15.0" fill="rgb(232,214,35)" rx="2" ry="2" />
<text  x="156.38" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="501.6" y="1797" width="0.2" height="15.0" fill="rgb(249,47,28)" rx="2" ry="2" />
<text  x="504.63" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="978.4" y="1957" width="0.2" height="15.0" fill="rgb(240,166,40)" rx="2" ry="2" />
<text  x="981.39" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="689.8" y="1925" width="0.2" height="15.0" fill="rgb(212,218,25)" rx="2" ry="2" />
<text  x="692.84" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="121.7" y="149" width="0.2" height="15.0" fill="rgb(253,149,54)" rx="2" ry="2" />
<text  x="124.65" y="159.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="481.6" y="1957" width="0.4" height="15.0" fill="rgb(242,97,41)" rx="2" ry="2" />
<text  x="484.60" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1131.9" y="2037" width="0.2" height="15.0" fill="rgb(225,67,1)" rx="2" ry="2" />
<text  x="1134.89" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="923.1" y="1893" width="0.4" height="15.0" fill="rgb(235,94,0)" rx="2" ry="2" />
<text  x="926.06" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="186.7" y="1573" width="0.2" height="15.0" fill="rgb(227,192,24)" rx="2" ry="2" />
<text  x="189.70" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="655.9" y="1941" width="0.2" height="15.0" fill="rgb(208,204,39)" rx="2" ry="2" />
<text  x="658.93" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (23 samples, 0.39%)</title><rect x="910.0" y="1973" width="4.5" height="15.0" fill="rgb(250,80,51)" rx="2" ry="2" />
<text  x="912.97" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.8" y="1701" width="0.1" height="15.0" fill="rgb(224,76,33)" rx="2" ry="2" />
<text  x="844.75" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="525.8" y="1989" width="0.2" height="15.0" fill="rgb(232,120,3)" rx="2" ry="2" />
<text  x="528.83" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="1171.4" y="1941" width="0.2" height="15.0" fill="rgb(206,30,53)" rx="2" ry="2" />
<text  x="1174.36" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.6" y="1781" width="0.2" height="15.0" fill="rgb(216,140,16)" rx="2" ry="2" />
<text  x="127.63" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="614.5" y="1973" width="0.2" height="15.0" fill="rgb(242,68,31)" rx="2" ry="2" />
<text  x="617.48" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="409.0" y="1893" width="0.2" height="15.0" fill="rgb(235,187,32)" rx="2" ry="2" />
<text  x="412.02" y="1903.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2 samples, 0.03%)</title><rect x="736.4" y="1781" width="0.4" height="15.0" fill="rgb(248,65,19)" rx="2" ry="2" />
<text  x="739.44" y="1791.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="935.0" y="1861" width="0.2" height="15.0" fill="rgb(248,228,44)" rx="2" ry="2" />
<text  x="937.96" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="565.5" y="1957" width="0.6" height="15.0" fill="rgb(247,166,41)" rx="2" ry="2" />
<text  x="568.49" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="161.1" y="2005" width="0.2" height="15.0" fill="rgb(246,62,7)" rx="2" ry="2" />
<text  x="164.12" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="646.2" y="1925" width="0.2" height="15.0" fill="rgb(249,188,9)" rx="2" ry="2" />
<text  x="649.21" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="289.0" y="1701" width="0.4" height="15.0" fill="rgb(208,69,31)" rx="2" ry="2" />
<text  x="292.04" y="1711.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="249.4" y="1877" width="0.2" height="15.0" fill="rgb(254,135,17)" rx="2" ry="2" />
<text  x="252.37" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="271.8" y="1733" width="0.2" height="15.0" fill="rgb(239,149,32)" rx="2" ry="2" />
<text  x="274.78" y="1743.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="831.4" y="1909" width="0.6" height="15.0" fill="rgb(212,228,45)" rx="2" ry="2" />
<text  x="834.44" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="319.2" y="1541" width="0.2" height="15.0" fill="rgb(242,75,20)" rx="2" ry="2" />
<text  x="322.18" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="613.7" y="1893" width="0.2" height="15.0" fill="rgb(248,203,20)" rx="2" ry="2" />
<text  x="616.68" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="157.7" y="1941" width="0.2" height="15.0" fill="rgb(253,82,47)" rx="2" ry="2" />
<text  x="160.75" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1096.8" y="1845" width="0.2" height="15.0" fill="rgb(211,129,29)" rx="2" ry="2" />
<text  x="1099.79" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="845.3" y="1893" width="0.8" height="15.0" fill="rgb(253,135,35)" rx="2" ry="2" />
<text  x="848.32" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="845.9" y="1829" width="0.2" height="15.0" fill="rgb(225,118,49)" rx="2" ry="2" />
<text  x="848.92" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (30 samples, 0.50%)</title><rect x="547.6" y="2005" width="6.0" height="15.0" fill="rgb(231,36,24)" rx="2" ry="2" />
<text  x="550.64" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="882.4" y="1957" width="0.2" height="15.0" fill="rgb(252,28,26)" rx="2" ry="2" />
<text  x="885.41" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.34%)</title><rect x="17.7" y="2053" width="4.0" height="15.0" fill="rgb(233,117,2)" rx="2" ry="2" />
<text  x="20.73" y="2063.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="574.6" y="1941" width="0.4" height="15.0" fill="rgb(212,17,16)" rx="2" ry="2" />
<text  x="577.62" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="192.9" y="1845" width="0.1" height="15.0" fill="rgb(219,198,33)" rx="2" ry="2" />
<text  x="195.85" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1129.7" y="2037" width="0.2" height="15.0" fill="rgb(211,93,26)" rx="2" ry="2" />
<text  x="1132.71" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="921.7" y="1877" width="0.2" height="15.0" fill="rgb(219,99,45)" rx="2" ry="2" />
<text  x="924.67" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="136.7" y="1957" width="0.6" height="15.0" fill="rgb(238,51,22)" rx="2" ry="2" />
<text  x="139.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1163.6" y="2053" width="0.2" height="15.0" fill="rgb(216,43,30)" rx="2" ry="2" />
<text  x="1166.62" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="893.9" y="1941" width="0.2" height="15.0" fill="rgb(218,163,41)" rx="2" ry="2" />
<text  x="896.91" y="1951.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="186.7" y="1733" width="0.2" height="15.0" fill="rgb(250,99,26)" rx="2" ry="2" />
<text  x="189.70" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="104.4" y="1349" width="17.7" height="15.0" fill="rgb(228,35,27)" rx="2" ry="2" />
<text  x="107.40" y="1359.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="501.8" y="1845" width="0.2" height="15.0" fill="rgb(251,21,11)" rx="2" ry="2" />
<text  x="504.83" y="1855.5" ></text>
</g>
<g >
<title>sys_accept4 (267 samples, 4.49%)</title><rect x="360.4" y="1989" width="53.0" height="15.0" fill="rgb(237,147,19)" rx="2" ry="2" />
<text  x="363.43" y="1999.5" >sys_a..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="657.1" y="1845" width="0.2" height="15.0" fill="rgb(240,143,24)" rx="2" ry="2" />
<text  x="660.12" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1082.9" y="1909" width="0.2" height="15.0" fill="rgb(246,80,24)" rx="2" ry="2" />
<text  x="1085.91" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="637.5" y="1989" width="0.4" height="15.0" fill="rgb(251,153,26)" rx="2" ry="2" />
<text  x="640.48" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="841.8" y="1653" width="0.1" height="15.0" fill="rgb(247,197,49)" rx="2" ry="2" />
<text  x="844.75" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="335.6" y="1813" width="0.2" height="15.0" fill="rgb(226,150,36)" rx="2" ry="2" />
<text  x="338.64" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="275.2" y="1813" width="0.2" height="15.0" fill="rgb(212,197,21)" rx="2" ry="2" />
<text  x="278.15" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="1173.1" y="1989" width="0.4" height="15.0" fill="rgb(213,188,45)" rx="2" ry="2" />
<text  x="1176.14" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="482.6" y="1893" width="0.2" height="15.0" fill="rgb(215,66,27)" rx="2" ry="2" />
<text  x="485.59" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="141.5" y="1925" width="0.2" height="15.0" fill="rgb(219,207,22)" rx="2" ry="2" />
<text  x="144.49" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (29 samples, 0.49%)</title><rect x="622.4" y="2037" width="5.8" height="15.0" fill="rgb(234,121,1)" rx="2" ry="2" />
<text  x="625.41" y="2047.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="220.4" y="1813" width="0.6" height="15.0" fill="rgb(246,217,18)" rx="2" ry="2" />
<text  x="223.42" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="983.0" y="1893" width="0.2" height="15.0" fill="rgb(220,151,13)" rx="2" ry="2" />
<text  x="985.95" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1006.2" y="1781" width="0.2" height="15.0" fill="rgb(251,143,8)" rx="2" ry="2" />
<text  x="1009.16" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="907.2" y="2005" width="1.2" height="15.0" fill="rgb(227,93,39)" rx="2" ry="2" />
<text  x="910.20" y="2015.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="58.2" y="1685" width="0.2" height="15.0" fill="rgb(238,191,31)" rx="2" ry="2" />
<text  x="61.19" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="845.9" y="1845" width="0.2" height="15.0" fill="rgb(231,131,6)" rx="2" ry="2" />
<text  x="848.92" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="223.8" y="1765" width="0.8" height="15.0" fill="rgb(220,168,29)" rx="2" ry="2" />
<text  x="226.79" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="881.4" y="1765" width="0.2" height="15.0" fill="rgb(241,14,34)" rx="2" ry="2" />
<text  x="884.42" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="1172.3" y="1989" width="0.6" height="15.0" fill="rgb(218,28,13)" rx="2" ry="2" />
<text  x="1175.35" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="336.6" y="1717" width="0.2" height="15.0" fill="rgb(237,53,6)" rx="2" ry="2" />
<text  x="339.63" y="1727.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="841.8" y="1605" width="0.1" height="15.0" fill="rgb(233,173,6)" rx="2" ry="2" />
<text  x="844.75" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="836.8" y="1893" width="0.2" height="15.0" fill="rgb(206,138,6)" rx="2" ry="2" />
<text  x="839.79" y="1903.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5 samples, 0.08%)</title><rect x="405.6" y="1893" width="1.0" height="15.0" fill="rgb(221,99,24)" rx="2" ry="2" />
<text  x="408.65" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="668.2" y="1685" width="0.2" height="15.0" fill="rgb(248,50,23)" rx="2" ry="2" />
<text  x="671.22" y="1695.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1165.4" y="2037" width="0.6" height="15.0" fill="rgb(229,52,8)" rx="2" ry="2" />
<text  x="1168.41" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="734.7" y="1605" width="0.2" height="15.0" fill="rgb(206,46,24)" rx="2" ry="2" />
<text  x="737.66" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="668.2" y="1461" width="0.2" height="15.0" fill="rgb(211,203,7)" rx="2" ry="2" />
<text  x="671.22" y="1471.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (27 samples, 0.45%)</title><rect x="1117.4" y="1973" width="5.4" height="15.0" fill="rgb(244,11,34)" rx="2" ry="2" />
<text  x="1120.42" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (16 samples, 0.27%)</title><rect x="475.9" y="1925" width="3.1" height="15.0" fill="rgb(229,129,49)" rx="2" ry="2" />
<text  x="478.85" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="644.2" y="1605" width="0.2" height="15.0" fill="rgb(224,112,44)" rx="2" ry="2" />
<text  x="647.23" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (3 samples, 0.05%)</title><rect x="1002.4" y="2005" width="0.6" height="15.0" fill="rgb(213,28,34)" rx="2" ry="2" />
<text  x="1005.39" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (29 samples, 0.49%)</title><rect x="322.7" y="1797" width="5.8" height="15.0" fill="rgb(235,28,33)" rx="2" ry="2" />
<text  x="325.75" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="877.4" y="1925" width="0.2" height="15.0" fill="rgb(247,16,11)" rx="2" ry="2" />
<text  x="880.45" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1182.1" y="2005" width="0.2" height="15.0" fill="rgb(240,206,10)" rx="2" ry="2" />
<text  x="1185.07" y="2015.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(252,184,30)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="545.3" y="1845" width="0.4" height="15.0" fill="rgb(213,177,15)" rx="2" ry="2" />
<text  x="548.26" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="581" width="17.5" height="15.0" fill="rgb(205,116,2)" rx="2" ry="2" />
<text  x="107.40" y="591.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="940.5" y="2005" width="0.2" height="15.0" fill="rgb(223,185,34)" rx="2" ry="2" />
<text  x="943.51" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="121.7" y="133" width="0.2" height="15.0" fill="rgb(252,140,41)" rx="2" ry="2" />
<text  x="124.65" y="143.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="734.5" y="1765" width="0.2" height="15.0" fill="rgb(209,146,1)" rx="2" ry="2" />
<text  x="737.46" y="1775.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="36.2" y="1925" width="0.2" height="15.0" fill="rgb(235,78,2)" rx="2" ry="2" />
<text  x="39.18" y="1935.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="382.0" y="1877" width="0.8" height="15.0" fill="rgb(239,104,28)" rx="2" ry="2" />
<text  x="385.05" y="1887.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="734.7" y="1493" width="0.2" height="15.0" fill="rgb(236,203,8)" rx="2" ry="2" />
<text  x="737.66" y="1503.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1045.8" y="1941" width="0.8" height="15.0" fill="rgb(211,54,15)" rx="2" ry="2" />
<text  x="1048.82" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="572.2" y="1749" width="0.2" height="15.0" fill="rgb(218,68,38)" rx="2" ry="2" />
<text  x="575.24" y="1759.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="338.0" y="1909" width="0.2" height="15.0" fill="rgb(225,124,27)" rx="2" ry="2" />
<text  x="341.02" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="593.1" y="1861" width="0.2" height="15.0" fill="rgb(214,178,14)" rx="2" ry="2" />
<text  x="596.06" y="1871.5" ></text>
</g>
<g >
<title>netdev_pick_tx (7 samples, 0.12%)</title><rect x="774.3" y="1557" width="1.4" height="15.0" fill="rgb(231,25,44)" rx="2" ry="2" />
<text  x="777.32" y="1567.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="655.9" y="1909" width="0.2" height="15.0" fill="rgb(220,30,47)" rx="2" ry="2" />
<text  x="658.93" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="644.2" y="1541" width="0.2" height="15.0" fill="rgb(216,14,22)" rx="2" ry="2" />
<text  x="647.23" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="973.4" y="1781" width="0.2" height="15.0" fill="rgb(252,106,24)" rx="2" ry="2" />
<text  x="976.44" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="152.0" y="1877" width="0.2" height="15.0" fill="rgb(205,24,9)" rx="2" ry="2" />
<text  x="155.00" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (18 samples, 0.30%)</title><rect x="1141.4" y="2005" width="3.6" height="15.0" fill="rgb(252,39,47)" rx="2" ry="2" />
<text  x="1144.41" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="855.6" y="1973" width="0.2" height="15.0" fill="rgb(212,75,16)" rx="2" ry="2" />
<text  x="858.63" y="1983.5" ></text>
</g>
<g >
<title>__internal_add_timer (2 samples, 0.03%)</title><rect x="325.5" y="1749" width="0.4" height="15.0" fill="rgb(217,31,33)" rx="2" ry="2" />
<text  x="328.53" y="1759.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="922.5" y="1893" width="0.2" height="15.0" fill="rgb(215,197,12)" rx="2" ry="2" />
<text  x="925.47" y="1903.5" ></text>
</g>
<g >
<title>__check_object_size (5 samples, 0.08%)</title><rect x="388.0" y="1941" width="1.0" height="15.0" fill="rgb(209,68,30)" rx="2" ry="2" />
<text  x="391.00" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="849.7" y="1877" width="0.2" height="15.0" fill="rgb(205,207,49)" rx="2" ry="2" />
<text  x="852.68" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1158.9" y="1813" width="0.2" height="15.0" fill="rgb(241,61,24)" rx="2" ry="2" />
<text  x="1161.86" y="1823.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="71.5" y="1845" width="0.4" height="15.0" fill="rgb(212,158,32)" rx="2" ry="2" />
<text  x="74.48" y="1855.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="565.7" y="1701" width="0.2" height="15.0" fill="rgb(208,87,15)" rx="2" ry="2" />
<text  x="568.69" y="1711.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="482.6" y="1909" width="0.2" height="15.0" fill="rgb(213,131,27)" rx="2" ry="2" />
<text  x="485.59" y="1919.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.08%)</title><rect x="953.4" y="2005" width="1.0" height="15.0" fill="rgb(253,179,47)" rx="2" ry="2" />
<text  x="956.41" y="2015.5" ></text>
</g>
<g >
<title>kfree_call_rcu (4 samples, 0.07%)</title><rect x="730.7" y="1669" width="0.8" height="15.0" fill="rgb(241,133,36)" rx="2" ry="2" />
<text  x="733.69" y="1679.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="533.0" y="1941" width="0.2" height="15.0" fill="rgb(208,7,34)" rx="2" ry="2" />
<text  x="535.97" y="1951.5" ></text>
</g>
<g >
<title>locks_remove_file (1 samples, 0.02%)</title><rect x="735.3" y="1797" width="0.2" height="15.0" fill="rgb(246,77,2)" rx="2" ry="2" />
<text  x="738.25" y="1807.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="14.0" y="1733" width="0.2" height="15.0" fill="rgb(243,183,24)" rx="2" ry="2" />
<text  x="16.97" y="1743.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="978.0" y="1941" width="0.2" height="15.0" fill="rgb(236,9,16)" rx="2" ry="2" />
<text  x="981.00" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="343.6" y="1909" width="0.2" height="15.0" fill="rgb(224,31,48)" rx="2" ry="2" />
<text  x="346.57" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="378.3" y="1925" width="1.8" height="15.0" fill="rgb(212,216,45)" rx="2" ry="2" />
<text  x="381.28" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="457.8" y="1973" width="0.4" height="15.0" fill="rgb(228,108,7)" rx="2" ry="2" />
<text  x="460.81" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="668.2" y="1477" width="0.2" height="15.0" fill="rgb(227,143,16)" rx="2" ry="2" />
<text  x="671.22" y="1487.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (42 samples, 0.71%)</title><rect x="987.5" y="2037" width="8.3" height="15.0" fill="rgb(205,212,48)" rx="2" ry="2" />
<text  x="990.52" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="135.3" y="1861" width="0.2" height="15.0" fill="rgb(209,116,27)" rx="2" ry="2" />
<text  x="138.34" y="1871.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (4 samples, 0.07%)</title><rect x="77.2" y="1941" width="0.8" height="15.0" fill="rgb(226,197,22)" rx="2" ry="2" />
<text  x="80.23" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (3 samples, 0.05%)</title><rect x="134.7" y="1941" width="0.6" height="15.0" fill="rgb(253,36,19)" rx="2" ry="2" />
<text  x="137.74" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="319.2" y="1573" width="0.2" height="15.0" fill="rgb(215,133,10)" rx="2" ry="2" />
<text  x="322.18" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1181.3" y="2005" width="0.2" height="15.0" fill="rgb(254,19,10)" rx="2" ry="2" />
<text  x="1184.27" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="403.3" y="1685" width="0.2" height="15.0" fill="rgb(234,31,2)" rx="2" ry="2" />
<text  x="406.27" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (29 samples, 0.49%)</title><rect x="929.4" y="1989" width="5.8" height="15.0" fill="rgb(243,16,36)" rx="2" ry="2" />
<text  x="932.41" y="1999.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (53 samples, 0.89%)</title><rect x="996.0" y="2037" width="10.6" height="15.0" fill="rgb(212,212,45)" rx="2" ry="2" />
<text  x="999.04" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="621.2" y="1973" width="0.2" height="15.0" fill="rgb(228,166,34)" rx="2" ry="2" />
<text  x="624.22" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="525.6" y="1989" width="0.2" height="15.0" fill="rgb(229,53,31)" rx="2" ry="2" />
<text  x="528.63" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="881.4" y="1749" width="0.2" height="15.0" fill="rgb(217,77,44)" rx="2" ry="2" />
<text  x="884.42" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="617.7" y="2037" width="0.1" height="15.0" fill="rgb(219,150,15)" rx="2" ry="2" />
<text  x="620.65" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.6" y="1717" width="0.2" height="15.0" fill="rgb(223,98,27)" rx="2" ry="2" />
<text  x="126.64" y="1727.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="373.1" y="1909" width="0.2" height="15.0" fill="rgb(213,126,48)" rx="2" ry="2" />
<text  x="376.12" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="934.6" y="1973" width="0.4" height="15.0" fill="rgb(241,113,50)" rx="2" ry="2" />
<text  x="937.56" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (99 samples, 1.66%)</title><rect x="908.6" y="2005" width="19.6" height="15.0" fill="rgb(229,6,40)" rx="2" ry="2" />
<text  x="911.58" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="570.8" y="2005" width="0.2" height="15.0" fill="rgb(215,7,52)" rx="2" ry="2" />
<text  x="573.85" y="2015.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (3 samples, 0.05%)</title><rect x="527.6" y="1989" width="0.6" height="15.0" fill="rgb(209,39,52)" rx="2" ry="2" />
<text  x="530.61" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (20 samples, 0.34%)</title><rect x="17.7" y="2005" width="4.0" height="15.0" fill="rgb(230,34,42)" rx="2" ry="2" />
<text  x="20.73" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="962.3" y="1829" width="0.2" height="15.0" fill="rgb(218,147,36)" rx="2" ry="2" />
<text  x="965.33" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="121.7" y="37" width="0.2" height="15.0" fill="rgb(245,69,35)" rx="2" ry="2" />
<text  x="124.65" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (8 samples, 0.13%)</title><rect x="55.2" y="1941" width="1.6" height="15.0" fill="rgb(218,110,33)" rx="2" ry="2" />
<text  x="58.22" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (1 samples, 0.02%)</title><rect x="511.2" y="2021" width="0.2" height="15.0" fill="rgb(213,147,33)" rx="2" ry="2" />
<text  x="514.15" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="389.2" y="1909" width="0.2" height="15.0" fill="rgb(244,166,47)" rx="2" ry="2" />
<text  x="392.19" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="881.4" y="1669" width="0.2" height="15.0" fill="rgb(209,135,27)" rx="2" ry="2" />
<text  x="884.42" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="148.6" y="1845" width="0.2" height="15.0" fill="rgb(206,113,40)" rx="2" ry="2" />
<text  x="151.63" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="277.7" y="1717" width="0.2" height="15.0" fill="rgb(223,107,20)" rx="2" ry="2" />
<text  x="280.73" y="1727.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="14.0" y="1717" width="0.2" height="15.0" fill="rgb(206,183,0)" rx="2" ry="2" />
<text  x="16.97" y="1727.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.7" y="69" width="0.2" height="15.0" fill="rgb(236,191,9)" rx="2" ry="2" />
<text  x="124.65" y="79.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="377.9" y="1829" width="0.2" height="15.0" fill="rgb(222,18,47)" rx="2" ry="2" />
<text  x="380.88" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="726.5" y="1589" width="0.2" height="15.0" fill="rgb(226,211,37)" rx="2" ry="2" />
<text  x="729.53" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="576.6" y="1989" width="0.4" height="15.0" fill="rgb(214,11,28)" rx="2" ry="2" />
<text  x="579.60" y="1999.5" ></text>
</g>
<g >
<title>folly::operator!= (5 samples, 0.08%)</title><rect x="1181.9" y="2053" width="1.0" height="15.0" fill="rgb(211,139,52)" rx="2" ry="2" />
<text  x="1184.87" y="2063.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="128.6" y="1989" width="0.6" height="15.0" fill="rgb(245,154,8)" rx="2" ry="2" />
<text  x="131.59" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="620.8" y="1973" width="0.2" height="15.0" fill="rgb(222,6,21)" rx="2" ry="2" />
<text  x="623.82" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="271.8" y="1717" width="0.2" height="15.0" fill="rgb(224,183,48)" rx="2" ry="2" />
<text  x="274.78" y="1727.5" ></text>
</g>
<g >
<title>sys_gettid (8 samples, 0.13%)</title><rect x="1157.1" y="1925" width="1.6" height="15.0" fill="rgb(215,145,35)" rx="2" ry="2" />
<text  x="1160.08" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="881.4" y="1781" width="0.2" height="15.0" fill="rgb(211,174,31)" rx="2" ry="2" />
<text  x="884.42" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="156.4" y="1893" width="0.2" height="15.0" fill="rgb(235,105,16)" rx="2" ry="2" />
<text  x="159.36" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="292.8" y="1557" width="0.4" height="15.0" fill="rgb(230,167,28)" rx="2" ry="2" />
<text  x="295.80" y="1567.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="38.4" y="1989" width="0.4" height="15.0" fill="rgb(226,33,3)" rx="2" ry="2" />
<text  x="41.36" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="378.1" y="1813" width="0.2" height="15.0" fill="rgb(206,78,39)" rx="2" ry="2" />
<text  x="381.08" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1006.0" y="2005" width="0.4" height="15.0" fill="rgb(212,159,36)" rx="2" ry="2" />
<text  x="1008.96" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="614.9" y="2005" width="0.2" height="15.0" fill="rgb(249,223,32)" rx="2" ry="2" />
<text  x="617.87" y="2015.5" ></text>
</g>
<g >
<title>__sys_sendmsg (497 samples, 8.35%)</title><rect x="244.0" y="1973" width="98.6" height="15.0" fill="rgb(238,152,32)" rx="2" ry="2" />
<text  x="247.02" y="1983.5" >__sys_sendmsg</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="117.5" y="37" width="0.6" height="15.0" fill="rgb(216,41,5)" rx="2" ry="2" />
<text  x="120.49" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="414.0" y="1781" width="0.2" height="15.0" fill="rgb(235,219,25)" rx="2" ry="2" />
<text  x="416.98" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="456.8" y="1861" width="0.2" height="15.0" fill="rgb(236,63,17)" rx="2" ry="2" />
<text  x="459.81" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (553 samples, 9.29%)</title><rect x="233.1" y="2021" width="109.7" height="15.0" fill="rgb(233,81,7)" rx="2" ry="2" />
<text  x="236.11" y="2031.5" >entry_SYSCALL..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="924.8" y="1909" width="0.4" height="15.0" fill="rgb(234,50,18)" rx="2" ry="2" />
<text  x="927.85" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="277.7" y="1589" width="0.2" height="15.0" fill="rgb(232,66,22)" rx="2" ry="2" />
<text  x="280.73" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="546.7" y="1973" width="0.3" height="15.0" fill="rgb(228,202,22)" rx="2" ry="2" />
<text  x="549.65" y="1983.5" ></text>
</g>
<g >
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1158.9" y="1941" width="0.2" height="15.0" fill="rgb(244,100,15)" rx="2" ry="2" />
<text  x="1161.86" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (12 samples, 0.20%)</title><rect x="539.9" y="1973" width="2.4" height="15.0" fill="rgb(224,92,31)" rx="2" ry="2" />
<text  x="542.91" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::recv (11 samples, 0.18%)</title><rect x="56.8" y="1957" width="2.2" height="15.0" fill="rgb(251,41,48)" rx="2" ry="2" />
<text  x="59.80" y="1967.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (2 samples, 0.03%)</title><rect x="1002.0" y="1989" width="0.4" height="15.0" fill="rgb(209,175,22)" rx="2" ry="2" />
<text  x="1004.99" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="646.0" y="2005" width="0.2" height="15.0" fill="rgb(205,67,32)" rx="2" ry="2" />
<text  x="649.01" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="179.8" y="2005" width="0.2" height="15.0" fill="rgb(251,81,32)" rx="2" ry="2" />
<text  x="182.76" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (5 samples, 0.08%)</title><rect x="961.5" y="2005" width="1.0" height="15.0" fill="rgb(208,60,6)" rx="2" ry="2" />
<text  x="964.54" y="2015.5" ></text>
</g>
<g >
<title>__libc_fcntl (3 samples, 0.05%)</title><rect x="228.7" y="2037" width="0.6" height="15.0" fill="rgb(208,114,27)" rx="2" ry="2" />
<text  x="231.75" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="994.9" y="1829" width="0.2" height="15.0" fill="rgb(222,61,16)" rx="2" ry="2" />
<text  x="997.85" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="890.9" y="1973" width="0.2" height="15.0" fill="rgb(215,124,12)" rx="2" ry="2" />
<text  x="893.93" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.2" y="1973" width="0.2" height="15.0" fill="rgb(205,202,26)" rx="2" ry="2" />
<text  x="106.21" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="531.8" y="1941" width="0.2" height="15.0" fill="rgb(211,226,53)" rx="2" ry="2" />
<text  x="534.78" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1158.9" y="1605" width="0.2" height="15.0" fill="rgb(216,63,15)" rx="2" ry="2" />
<text  x="1161.86" y="1615.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="17.5" y="1973" width="0.2" height="15.0" fill="rgb(239,42,4)" rx="2" ry="2" />
<text  x="20.54" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="881.4" y="1845" width="0.2" height="15.0" fill="rgb(228,201,21)" rx="2" ry="2" />
<text  x="884.42" y="1855.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="964.9" y="1989" width="0.2" height="15.0" fill="rgb(229,81,42)" rx="2" ry="2" />
<text  x="967.91" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="59.8" y="1957" width="0.2" height="15.0" fill="rgb(208,64,34)" rx="2" ry="2" />
<text  x="62.78" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="935.0" y="1909" width="0.2" height="15.0" fill="rgb(249,168,45)" rx="2" ry="2" />
<text  x="937.96" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="806.5" y="1573" width="0.1" height="15.0" fill="rgb(236,106,11)" rx="2" ry="2" />
<text  x="809.45" y="1583.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="186.7" y="1669" width="0.2" height="15.0" fill="rgb(245,220,36)" rx="2" ry="2" />
<text  x="189.70" y="1679.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="342.4" y="1941" width="0.2" height="15.0" fill="rgb(228,25,3)" rx="2" ry="2" />
<text  x="345.38" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="289.0" y="1669" width="0.4" height="15.0" fill="rgb(213,168,38)" rx="2" ry="2" />
<text  x="292.04" y="1679.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="501.6" y="1813" width="0.2" height="15.0" fill="rgb(224,137,42)" rx="2" ry="2" />
<text  x="504.63" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="520.7" y="1957" width="0.4" height="15.0" fill="rgb(216,27,13)" rx="2" ry="2" />
<text  x="523.67" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1189" width="17.5" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="107.40" y="1199.5" ></text>
</g>
<g >
<title>event_set (4 samples, 0.07%)</title><rect x="543.5" y="1973" width="0.8" height="15.0" fill="rgb(246,71,28)" rx="2" ry="2" />
<text  x="546.48" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="167.9" y="1781" width="0.2" height="15.0" fill="rgb(241,54,12)" rx="2" ry="2" />
<text  x="170.86" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="983.9" y="1925" width="0.2" height="15.0" fill="rgb(242,30,52)" rx="2" ry="2" />
<text  x="986.95" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="483.6" y="1973" width="0.2" height="15.0" fill="rgb(243,174,7)" rx="2" ry="2" />
<text  x="486.59" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1123.4" y="1925" width="0.2" height="15.0" fill="rgb(213,171,45)" rx="2" ry="2" />
<text  x="1126.36" y="1935.5" ></text>
</g>
<g >
<title>sys_recvfrom (386 samples, 6.49%)</title><rect x="1046.6" y="2005" width="76.6" height="15.0" fill="rgb(205,132,17)" rx="2" ry="2" />
<text  x="1049.62" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="1172.0" y="1989" width="0.3" height="15.0" fill="rgb(230,128,28)" rx="2" ry="2" />
<text  x="1174.95" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="572.2" y="1893" width="0.2" height="15.0" fill="rgb(212,37,30)" rx="2" ry="2" />
<text  x="575.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="548.2" y="1989" width="0.2" height="15.0" fill="rgb(218,124,38)" rx="2" ry="2" />
<text  x="551.24" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.24%)</title><rect x="14.8" y="1909" width="2.7" height="15.0" fill="rgb(233,57,22)" rx="2" ry="2" />
<text  x="17.76" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="333.5" y="1669" width="0.2" height="15.0" fill="rgb(219,79,3)" rx="2" ry="2" />
<text  x="336.46" y="1679.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="326.7" y="1589" width="0.2" height="15.0" fill="rgb(242,128,41)" rx="2" ry="2" />
<text  x="329.72" y="1599.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1004.6" y="1973" width="0.6" height="15.0" fill="rgb(234,86,2)" rx="2" ry="2" />
<text  x="1007.57" y="1983.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="84.2" y="1909" width="0.2" height="15.0" fill="rgb(240,166,41)" rx="2" ry="2" />
<text  x="87.17" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="167.9" y="1829" width="0.2" height="15.0" fill="rgb(230,105,39)" rx="2" ry="2" />
<text  x="170.86" y="1839.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="525.0" y="1989" width="0.4" height="15.0" fill="rgb(233,5,15)" rx="2" ry="2" />
<text  x="528.04" y="1999.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="103.4" y="1925" width="0.2" height="15.0" fill="rgb(222,92,19)" rx="2" ry="2" />
<text  x="106.41" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="614.5" y="1989" width="0.2" height="15.0" fill="rgb(219,19,48)" rx="2" ry="2" />
<text  x="617.48" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (5 samples, 0.08%)</title><rect x="474.7" y="1909" width="1.0" height="15.0" fill="rgb(238,107,8)" rx="2" ry="2" />
<text  x="477.66" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="87.9" y="1957" width="0.2" height="15.0" fill="rgb(218,91,38)" rx="2" ry="2" />
<text  x="90.94" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="190.7" y="1861" width="0.2" height="15.0" fill="rgb(250,96,32)" rx="2" ry="2" />
<text  x="193.67" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="837" width="17.5" height="15.0" fill="rgb(244,188,27)" rx="2" ry="2" />
<text  x="107.40" y="847.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="344.8" y="2021" width="0.2" height="15.0" fill="rgb(249,218,8)" rx="2" ry="2" />
<text  x="347.76" y="2031.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (2 samples, 0.03%)</title><rect x="756.7" y="1701" width="0.4" height="15.0" fill="rgb(214,103,24)" rx="2" ry="2" />
<text  x="759.67" y="1711.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="414.0" y="1717" width="0.2" height="15.0" fill="rgb(226,16,13)" rx="2" ry="2" />
<text  x="416.98" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="81.4" y="1925" width="0.2" height="15.0" fill="rgb(214,159,29)" rx="2" ry="2" />
<text  x="84.39" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="120.3" y="69" width="0.4" height="15.0" fill="rgb(220,174,18)" rx="2" ry="2" />
<text  x="123.27" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (9 samples, 0.15%)</title><rect x="1137.8" y="2053" width="1.8" height="15.0" fill="rgb(222,37,9)" rx="2" ry="2" />
<text  x="1140.84" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1096.8" y="1893" width="0.2" height="15.0" fill="rgb(226,198,49)" rx="2" ry="2" />
<text  x="1099.79" y="1903.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="190.7" y="1813" width="0.2" height="15.0" fill="rgb(216,83,16)" rx="2" ry="2" />
<text  x="193.67" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="501.8" y="1797" width="0.2" height="15.0" fill="rgb(239,175,12)" rx="2" ry="2" />
<text  x="504.83" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="67.5" y="1861" width="0.2" height="15.0" fill="rgb(235,55,3)" rx="2" ry="2" />
<text  x="70.51" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="501.8" y="1701" width="0.2" height="15.0" fill="rgb(232,11,44)" rx="2" ry="2" />
<text  x="504.83" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="526.0" y="1973" width="0.2" height="15.0" fill="rgb(236,97,5)" rx="2" ry="2" />
<text  x="529.03" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="343.6" y="1829" width="0.2" height="15.0" fill="rgb(239,47,26)" rx="2" ry="2" />
<text  x="346.57" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="549.2" y="1893" width="0.2" height="15.0" fill="rgb(209,17,3)" rx="2" ry="2" />
<text  x="552.23" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="962.3" y="1877" width="0.2" height="15.0" fill="rgb(245,202,23)" rx="2" ry="2" />
<text  x="965.33" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="156.6" y="1909" width="0.2" height="15.0" fill="rgb(247,117,36)" rx="2" ry="2" />
<text  x="159.56" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="14.0" y="1877" width="0.2" height="15.0" fill="rgb(218,52,46)" rx="2" ry="2" />
<text  x="16.97" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="847.9" y="1829" width="0.4" height="15.0" fill="rgb(212,121,39)" rx="2" ry="2" />
<text  x="850.90" y="1839.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (79 samples, 1.33%)</title><rect x="1097.0" y="1925" width="15.7" height="15.0" fill="rgb(213,200,27)" rx="2" ry="2" />
<text  x="1099.99" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="975.6" y="1973" width="0.6" height="15.0" fill="rgb(216,209,2)" rx="2" ry="2" />
<text  x="978.62" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="484.2" y="1861" width="0.8" height="15.0" fill="rgb(234,196,21)" rx="2" ry="2" />
<text  x="487.18" y="1871.5" ></text>
</g>
<g >
<title>sock_rfree (6 samples, 0.10%)</title><rect x="1078.7" y="1893" width="1.2" height="15.0" fill="rgb(240,176,8)" rx="2" ry="2" />
<text  x="1081.74" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (97 samples, 1.63%)</title><rect x="140.1" y="1973" width="19.2" height="15.0" fill="rgb(230,225,19)" rx="2" ry="2" />
<text  x="143.10" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="651.2" y="2005" width="1.4" height="15.0" fill="rgb(238,96,46)" rx="2" ry="2" />
<text  x="654.17" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="984.3" y="1989" width="0.2" height="15.0" fill="rgb(252,101,18)" rx="2" ry="2" />
<text  x="987.34" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1125" width="17.5" height="15.0" fill="rgb(251,207,8)" rx="2" ry="2" />
<text  x="107.40" y="1135.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="144.3" y="1909" width="0.2" height="15.0" fill="rgb(246,140,5)" rx="2" ry="2" />
<text  x="147.26" y="1919.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="761.4" y="1541" width="0.2" height="15.0" fill="rgb(217,20,53)" rx="2" ry="2" />
<text  x="764.43" y="1551.5" ></text>
</g>
<g >
<title>event_del (2 samples, 0.03%)</title><rect x="66.1" y="1909" width="0.4" height="15.0" fill="rgb(240,135,6)" rx="2" ry="2" />
<text  x="69.12" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (23 samples, 0.39%)</title><rect x="910.0" y="1957" width="4.5" height="15.0" fill="rgb(222,94,3)" rx="2" ry="2" />
<text  x="912.97" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="695.4" y="2005" width="0.2" height="15.0" fill="rgb(229,113,19)" rx="2" ry="2" />
<text  x="698.39" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="252.3" y="1877" width="0.2" height="15.0" fill="rgb(219,143,23)" rx="2" ry="2" />
<text  x="255.35" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="157.4" y="1893" width="0.1" height="15.0" fill="rgb(250,123,42)" rx="2" ry="2" />
<text  x="160.35" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="622.6" y="2005" width="0.2" height="15.0" fill="rgb(234,76,5)" rx="2" ry="2" />
<text  x="625.61" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="614.7" y="2005" width="0.2" height="15.0" fill="rgb(239,50,23)" rx="2" ry="2" />
<text  x="617.68" y="2015.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="927.8" y="1973" width="0.2" height="15.0" fill="rgb(206,210,10)" rx="2" ry="2" />
<text  x="930.82" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="686.3" y="1877" width="0.4" height="15.0" fill="rgb(243,34,29)" rx="2" ry="2" />
<text  x="689.27" y="1887.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="686.7" y="1877" width="1.0" height="15.0" fill="rgb(212,126,43)" rx="2" ry="2" />
<text  x="689.67" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="881.4" y="1797" width="0.2" height="15.0" fill="rgb(234,214,32)" rx="2" ry="2" />
<text  x="884.42" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="962.3" y="1781" width="0.2" height="15.0" fill="rgb(213,170,10)" rx="2" ry="2" />
<text  x="965.33" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="620.6" y="2037" width="0.8" height="15.0" fill="rgb(219,67,19)" rx="2" ry="2" />
<text  x="623.63" y="2047.5" ></text>
</g>
<g >
<title>skb_release_head_state (28 samples, 0.47%)</title><rect x="1073.2" y="1893" width="5.5" height="15.0" fill="rgb(225,207,40)" rx="2" ry="2" />
<text  x="1076.19" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="137.5" y="1957" width="0.2" height="15.0" fill="rgb(224,25,1)" rx="2" ry="2" />
<text  x="140.52" y="1967.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="881.4" y="1637" width="0.2" height="15.0" fill="rgb(227,144,32)" rx="2" ry="2" />
<text  x="884.42" y="1647.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="177.8" y="1989" width="0.2" height="15.0" fill="rgb(241,229,37)" rx="2" ry="2" />
<text  x="180.78" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.34%)</title><rect x="394.5" y="1893" width="4.0" height="15.0" fill="rgb(221,10,23)" rx="2" ry="2" />
<text  x="397.54" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1023.8" y="2021" width="0.2" height="15.0" fill="rgb(248,59,7)" rx="2" ry="2" />
<text  x="1026.81" y="2031.5" ></text>
</g>
<g >
<title>__skb_clone (16 samples, 0.27%)</title><rect x="794.2" y="1653" width="3.1" height="15.0" fill="rgb(241,167,43)" rx="2" ry="2" />
<text  x="797.15" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="167.3" y="1909" width="0.2" height="15.0" fill="rgb(232,38,29)" rx="2" ry="2" />
<text  x="170.27" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="549.2" y="1733" width="0.2" height="15.0" fill="rgb(227,68,17)" rx="2" ry="2" />
<text  x="552.23" y="1743.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="951.4" y="2005" width="0.2" height="15.0" fill="rgb(243,19,32)" rx="2" ry="2" />
<text  x="954.42" y="2015.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="790.8" y="1509" width="0.4" height="15.0" fill="rgb(250,82,0)" rx="2" ry="2" />
<text  x="793.78" y="1519.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="553.4" y="1845" width="0.2" height="15.0" fill="rgb(232,94,1)" rx="2" ry="2" />
<text  x="556.39" y="1855.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="493.7" y="1957" width="0.2" height="15.0" fill="rgb(246,227,32)" rx="2" ry="2" />
<text  x="496.70" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (2 samples, 0.03%)</title><rect x="29.2" y="2005" width="0.4" height="15.0" fill="rgb(239,103,10)" rx="2" ry="2" />
<text  x="32.24" y="2015.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="915.5" y="1909" width="0.2" height="15.0" fill="rgb(219,102,47)" rx="2" ry="2" />
<text  x="918.53" y="1919.5" ></text>
</g>
<g >
<title>schedule (14 samples, 0.24%)</title><rect x="14.8" y="1941" width="2.7" height="15.0" fill="rgb(233,92,7)" rx="2" ry="2" />
<text  x="17.76" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (20 samples, 0.34%)</title><rect x="86.7" y="1989" width="4.0" height="15.0" fill="rgb(227,113,38)" rx="2" ry="2" />
<text  x="89.75" y="1999.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="255.5" y="1893" width="0.2" height="15.0" fill="rgb(236,218,32)" rx="2" ry="2" />
<text  x="258.52" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="634.9" y="1957" width="0.2" height="15.0" fill="rgb(224,204,39)" rx="2" ry="2" />
<text  x="637.90" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="360.2" y="1813" width="0.2" height="15.0" fill="rgb(225,110,36)" rx="2" ry="2" />
<text  x="363.23" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.8" y="1717" width="0.1" height="15.0" fill="rgb(226,99,4)" rx="2" ry="2" />
<text  x="844.75" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="883.4" y="1973" width="0.4" height="15.0" fill="rgb(236,226,46)" rx="2" ry="2" />
<text  x="886.40" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="117.3" y="53" width="0.2" height="15.0" fill="rgb(234,160,27)" rx="2" ry="2" />
<text  x="120.29" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1162.2" y="2053" width="0.2" height="15.0" fill="rgb(210,113,50)" rx="2" ry="2" />
<text  x="1165.24" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="414.0" y="1861" width="0.2" height="15.0" fill="rgb(248,105,26)" rx="2" ry="2" />
<text  x="416.98" y="1871.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="990.5" y="1925" width="0.8" height="15.0" fill="rgb(244,202,4)" rx="2" ry="2" />
<text  x="993.49" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1158.9" y="1701" width="0.2" height="15.0" fill="rgb(247,226,19)" rx="2" ry="2" />
<text  x="1161.86" y="1711.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="135.9" y="1925" width="0.2" height="15.0" fill="rgb(206,193,31)" rx="2" ry="2" />
<text  x="138.93" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="849.7" y="1845" width="0.2" height="15.0" fill="rgb(218,100,14)" rx="2" ry="2" />
<text  x="852.68" y="1855.5" ></text>
</g>
<g >
<title>security_file_free (10 samples, 0.17%)</title><rect x="735.8" y="1797" width="2.0" height="15.0" fill="rgb(221,84,2)" rx="2" ry="2" />
<text  x="738.85" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="159.1" y="1957" width="0.2" height="15.0" fill="rgb(211,47,24)" rx="2" ry="2" />
<text  x="162.14" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="701.7" y="1813" width="0.2" height="15.0" fill="rgb(240,4,40)" rx="2" ry="2" />
<text  x="704.74" y="1823.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (2 samples, 0.03%)</title><rect x="328.5" y="1829" width="0.4" height="15.0" fill="rgb(247,66,11)" rx="2" ry="2" />
<text  x="331.50" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="192.9" y="1893" width="0.1" height="15.0" fill="rgb(236,176,17)" rx="2" ry="2" />
<text  x="195.85" y="1903.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="820.5" y="1813" width="0.2" height="15.0" fill="rgb(232,87,21)" rx="2" ry="2" />
<text  x="823.53" y="1823.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="689.4" y="1605" width="0.2" height="15.0" fill="rgb(217,179,1)" rx="2" ry="2" />
<text  x="692.44" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="103.4" y="1717" width="0.2" height="15.0" fill="rgb(232,227,36)" rx="2" ry="2" />
<text  x="106.41" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="293.0" y="1301" width="0.2" height="15.0" fill="rgb(220,210,10)" rx="2" ry="2" />
<text  x="296.00" y="1311.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="133.2" y="1973" width="0.2" height="15.0" fill="rgb(224,52,21)" rx="2" ry="2" />
<text  x="136.16" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="285.1" y="1701" width="0.2" height="15.0" fill="rgb(234,226,5)" rx="2" ry="2" />
<text  x="288.07" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="192.9" y="1925" width="0.1" height="15.0" fill="rgb(242,144,18)" rx="2" ry="2" />
<text  x="195.85" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="946.5" y="2005" width="0.2" height="15.0" fill="rgb(234,91,18)" rx="2" ry="2" />
<text  x="949.46" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="378.1" y="1845" width="0.2" height="15.0" fill="rgb(250,215,38)" rx="2" ry="2" />
<text  x="381.08" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="532.8" y="1941" width="0.2" height="15.0" fill="rgb(235,189,26)" rx="2" ry="2" />
<text  x="535.77" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="601.6" y="2005" width="0.2" height="15.0" fill="rgb(247,95,36)" rx="2" ry="2" />
<text  x="604.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="936.3" y="2005" width="0.2" height="15.0" fill="rgb(237,88,32)" rx="2" ry="2" />
<text  x="939.35" y="2015.5" ></text>
</g>
<g >
<title>inode_init_always (7 samples, 0.12%)</title><rect x="392.8" y="1909" width="1.3" height="15.0" fill="rgb(254,43,2)" rx="2" ry="2" />
<text  x="395.76" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="377.9" y="1877" width="0.2" height="15.0" fill="rgb(240,13,37)" rx="2" ry="2" />
<text  x="380.88" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="700.3" y="1989" width="0.2" height="15.0" fill="rgb(217,50,44)" rx="2" ry="2" />
<text  x="703.35" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="442.3" y="1941" width="0.2" height="15.0" fill="rgb(222,98,13)" rx="2" ry="2" />
<text  x="445.34" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="650.2" y="1877" width="0.2" height="15.0" fill="rgb(240,142,10)" rx="2" ry="2" />
<text  x="653.17" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="726.7" y="1717" width="0.2" height="15.0" fill="rgb(211,69,34)" rx="2" ry="2" />
<text  x="729.73" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="424.7" y="2021" width="0.4" height="15.0" fill="rgb(215,198,43)" rx="2" ry="2" />
<text  x="427.69" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (3 samples, 0.05%)</title><rect x="550.4" y="1941" width="0.6" height="15.0" fill="rgb(224,42,21)" rx="2" ry="2" />
<text  x="553.42" y="1951.5" ></text>
</g>
<g >
<title>[[vdso]] (3 samples, 0.05%)</title><rect x="1182.3" y="2005" width="0.6" height="15.0" fill="rgb(247,220,49)" rx="2" ry="2" />
<text  x="1185.27" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="692.6" y="1989" width="2.6" height="15.0" fill="rgb(209,132,50)" rx="2" ry="2" />
<text  x="695.62" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="521.1" y="1957" width="0.2" height="15.0" fill="rgb(230,214,12)" rx="2" ry="2" />
<text  x="524.07" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;int, void&gt; (1 samples, 0.02%)</title><rect x="580.0" y="2021" width="0.2" height="15.0" fill="rgb(213,162,36)" rx="2" ry="2" />
<text  x="582.97" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="71.9" y="1861" width="0.2" height="15.0" fill="rgb(245,67,22)" rx="2" ry="2" />
<text  x="74.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1123.4" y="1765" width="0.2" height="15.0" fill="rgb(208,50,36)" rx="2" ry="2" />
<text  x="1126.36" y="1775.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="936.2" y="1989" width="0.1" height="15.0" fill="rgb(212,217,2)" rx="2" ry="2" />
<text  x="939.15" y="1999.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="145.1" y="1813" width="0.2" height="15.0" fill="rgb(239,27,8)" rx="2" ry="2" />
<text  x="148.06" y="1823.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="456.8" y="1829" width="0.2" height="15.0" fill="rgb(228,138,29)" rx="2" ry="2" />
<text  x="459.81" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (5 samples, 0.08%)</title><rect x="298.2" y="1685" width="0.9" height="15.0" fill="rgb(221,212,11)" rx="2" ry="2" />
<text  x="301.16" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="365.4" y="1477" width="0.2" height="15.0" fill="rgb(211,177,2)" rx="2" ry="2" />
<text  x="368.39" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="845.1" y="1893" width="0.2" height="15.0" fill="rgb(211,124,24)" rx="2" ry="2" />
<text  x="848.12" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (4 samples, 0.07%)</title><rect x="982.0" y="1893" width="0.8" height="15.0" fill="rgb(221,0,3)" rx="2" ry="2" />
<text  x="984.96" y="1903.5" ></text>
</g>
<g >
<title>do_futex (21 samples, 0.35%)</title><rect x="10.2" y="1989" width="4.2" height="15.0" fill="rgb(236,129,54)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="994.9" y="1781" width="0.2" height="15.0" fill="rgb(232,153,16)" rx="2" ry="2" />
<text  x="997.85" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="70.9" y="1893" width="1.2" height="15.0" fill="rgb(246,174,20)" rx="2" ry="2" />
<text  x="73.88" y="1903.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="411.4" y="1925" width="0.2" height="15.0" fill="rgb(220,65,38)" rx="2" ry="2" />
<text  x="414.40" y="1935.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="187.7" y="2037" width="0.2" height="15.0" fill="rgb(252,173,43)" rx="2" ry="2" />
<text  x="190.69" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="82.2" y="1893" width="0.2" height="15.0" fill="rgb(212,39,26)" rx="2" ry="2" />
<text  x="85.19" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="104.8" y="37" width="0.6" height="15.0" fill="rgb(237,220,48)" rx="2" ry="2" />
<text  x="107.80" y="47.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="549.2" y="1637" width="0.2" height="15.0" fill="rgb(242,107,15)" rx="2" ry="2" />
<text  x="552.23" y="1647.5" ></text>
</g>
<g >
<title>mod_timer (17 samples, 0.29%)</title><rect x="801.7" y="1621" width="3.4" height="15.0" fill="rgb(235,110,41)" rx="2" ry="2" />
<text  x="804.69" y="1631.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="185.5" y="2021" width="0.6" height="15.0" fill="rgb(252,85,37)" rx="2" ry="2" />
<text  x="188.51" y="2031.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="414.0" y="1653" width="0.2" height="15.0" fill="rgb(207,151,49)" rx="2" ry="2" />
<text  x="416.98" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="549.2" y="1685" width="0.2" height="15.0" fill="rgb(235,27,7)" rx="2" ry="2" />
<text  x="552.23" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (48 samples, 0.81%)</title><rect x="1102.3" y="1573" width="9.6" height="15.0" fill="rgb(232,180,39)" rx="2" ry="2" />
<text  x="1105.34" y="1583.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="761.4" y="1605" width="0.2" height="15.0" fill="rgb(219,30,12)" rx="2" ry="2" />
<text  x="764.43" y="1615.5" ></text>
</g>
<g >
<title>iput (42 samples, 0.71%)</title><rect x="725.1" y="1733" width="8.4" height="15.0" fill="rgb(237,25,25)" rx="2" ry="2" />
<text  x="728.14" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1158.9" y="1877" width="0.2" height="15.0" fill="rgb(232,222,24)" rx="2" ry="2" />
<text  x="1161.86" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="940.7" y="2005" width="0.2" height="15.0" fill="rgb(221,11,28)" rx="2" ry="2" />
<text  x="943.71" y="2015.5" ></text>
</g>
<g >
<title>d_set_d_op (2 samples, 0.03%)</title><rect x="409.6" y="1925" width="0.4" height="15.0" fill="rgb(253,202,30)" rx="2" ry="2" />
<text  x="412.61" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="572.2" y="1957" width="0.2" height="15.0" fill="rgb(249,170,14)" rx="2" ry="2" />
<text  x="575.24" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="689.4" y="1621" width="0.2" height="15.0" fill="rgb(237,36,37)" rx="2" ry="2" />
<text  x="692.44" y="1631.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (7 samples, 0.12%)</title><rect x="1130.1" y="2053" width="1.4" height="15.0" fill="rgb(218,20,35)" rx="2" ry="2" />
<text  x="1133.11" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="457.2" y="1685" width="0.2" height="15.0" fill="rgb(240,169,24)" rx="2" ry="2" />
<text  x="460.21" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="702.1" y="1653" width="0.2" height="15.0" fill="rgb(240,66,10)" rx="2" ry="2" />
<text  x="705.13" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(218,86,18)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (95 samples, 1.60%)</title><rect x="295.4" y="1717" width="18.8" height="15.0" fill="rgb(253,3,54)" rx="2" ry="2" />
<text  x="298.38" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="487.8" y="1941" width="0.1" height="15.0" fill="rgb(221,127,14)" rx="2" ry="2" />
<text  x="490.75" y="1951.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="523.4" y="1973" width="0.2" height="15.0" fill="rgb(241,42,39)" rx="2" ry="2" />
<text  x="526.45" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="1109" width="17.5" height="15.0" fill="rgb(229,111,20)" rx="2" ry="2" />
<text  x="107.40" y="1119.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (15 samples, 0.25%)</title><rect x="292.4" y="1733" width="3.0" height="15.0" fill="rgb(225,136,3)" rx="2" ry="2" />
<text  x="295.41" y="1743.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1182.3" y="2021" width="0.6" height="15.0" fill="rgb(224,27,8)" rx="2" ry="2" />
<text  x="1185.27" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="827.1" y="1845" width="0.2" height="15.0" fill="rgb(210,16,7)" rx="2" ry="2" />
<text  x="830.08" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="103.4" y="1781" width="0.2" height="15.0" fill="rgb(230,99,9)" rx="2" ry="2" />
<text  x="106.41" y="1791.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="156.2" y="1877" width="0.2" height="15.0" fill="rgb(208,137,18)" rx="2" ry="2" />
<text  x="159.16" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="668.2" y="1541" width="0.2" height="15.0" fill="rgb(220,190,38)" rx="2" ry="2" />
<text  x="671.22" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="134.7" y="1957" width="0.8" height="15.0" fill="rgb(208,57,5)" rx="2" ry="2" />
<text  x="137.74" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="565.5" y="1909" width="0.6" height="15.0" fill="rgb(211,120,10)" rx="2" ry="2" />
<text  x="568.49" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="1189.0" y="2053" width="0.2" height="15.0" fill="rgb(215,25,34)" rx="2" ry="2" />
<text  x="1192.01" y="2063.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="442.3" y="1909" width="0.2" height="15.0" fill="rgb(242,8,21)" rx="2" ry="2" />
<text  x="445.34" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="702.1" y="1733" width="0.2" height="15.0" fill="rgb(246,75,10)" rx="2" ry="2" />
<text  x="705.13" y="1743.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="797.9" y="1653" width="0.2" height="15.0" fill="rgb(254,107,45)" rx="2" ry="2" />
<text  x="800.92" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="849.5" y="1941" width="0.4" height="15.0" fill="rgb(206,151,24)" rx="2" ry="2" />
<text  x="852.49" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.8" y="1797" width="0.1" height="15.0" fill="rgb(225,97,48)" rx="2" ry="2" />
<text  x="844.75" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="572.2" y="1909" width="0.2" height="15.0" fill="rgb(228,96,38)" rx="2" ry="2" />
<text  x="575.24" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="403.3" y="1893" width="0.2" height="15.0" fill="rgb(226,36,27)" rx="2" ry="2" />
<text  x="406.27" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="223.8" y="1861" width="0.8" height="15.0" fill="rgb(231,88,39)" rx="2" ry="2" />
<text  x="226.79" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="319.2" y="1557" width="0.2" height="15.0" fill="rgb(243,217,36)" rx="2" ry="2" />
<text  x="322.18" y="1567.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="284.7" y="1813" width="0.4" height="15.0" fill="rgb(231,212,39)" rx="2" ry="2" />
<text  x="287.67" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1139.4" y="1957" width="0.2" height="15.0" fill="rgb(253,186,40)" rx="2" ry="2" />
<text  x="1142.43" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="151.8" y="1893" width="0.4" height="15.0" fill="rgb(205,144,54)" rx="2" ry="2" />
<text  x="154.80" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="125.0" y="1813" width="0.2" height="15.0" fill="rgb(240,94,12)" rx="2" ry="2" />
<text  x="128.03" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="167.7" y="1973" width="0.2" height="15.0" fill="rgb(230,46,11)" rx="2" ry="2" />
<text  x="170.66" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="549.2" y="1525" width="0.2" height="15.0" fill="rgb(222,19,53)" rx="2" ry="2" />
<text  x="552.23" y="1535.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (77 samples, 1.29%)</title><rect x="553.6" y="2005" width="15.3" height="15.0" fill="rgb(215,177,32)" rx="2" ry="2" />
<text  x="556.59" y="2015.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="409.4" y="1893" width="0.2" height="15.0" fill="rgb(215,166,7)" rx="2" ry="2" />
<text  x="412.42" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="186.7" y="1621" width="0.2" height="15.0" fill="rgb(253,228,42)" rx="2" ry="2" />
<text  x="189.70" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="343.6" y="1941" width="0.2" height="15.0" fill="rgb(213,17,14)" rx="2" ry="2" />
<text  x="346.57" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="626.8" y="1989" width="0.8" height="15.0" fill="rgb(222,30,7)" rx="2" ry="2" />
<text  x="629.77" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="79.2" y="1909" width="0.2" height="15.0" fill="rgb(213,54,19)" rx="2" ry="2" />
<text  x="82.21" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="987.3" y="1925" width="0.2" height="15.0" fill="rgb(207,213,25)" rx="2" ry="2" />
<text  x="990.32" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="875.1" y="1893" width="0.2" height="15.0" fill="rgb(249,190,13)" rx="2" ry="2" />
<text  x="878.07" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (75 samples, 1.26%)</title><rect x="1065.1" y="1909" width="14.8" height="15.0" fill="rgb(237,164,38)" rx="2" ry="2" />
<text  x="1068.06" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (107 samples, 1.80%)</title><rect x="771.9" y="1573" width="21.3" height="15.0" fill="rgb(239,52,12)" rx="2" ry="2" />
<text  x="774.94" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="243.6" y="1973" width="0.4" height="15.0" fill="rgb(226,162,14)" rx="2" ry="2" />
<text  x="246.62" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="572.4" y="1909" width="0.2" height="15.0" fill="rgb(240,13,22)" rx="2" ry="2" />
<text  x="575.43" y="1919.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="907.0" y="1973" width="0.2" height="15.0" fill="rgb(237,213,3)" rx="2" ry="2" />
<text  x="910.00" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="501.8" y="1765" width="0.2" height="15.0" fill="rgb(222,222,27)" rx="2" ry="2" />
<text  x="504.83" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="537.7" y="1941" width="0.2" height="15.0" fill="rgb(228,161,49)" rx="2" ry="2" />
<text  x="540.73" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (1 samples, 0.02%)</title><rect x="579.8" y="2021" width="0.2" height="15.0" fill="rgb(229,147,9)" rx="2" ry="2" />
<text  x="582.77" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (8 samples, 0.13%)</title><rect x="544.3" y="1957" width="1.6" height="15.0" fill="rgb(240,190,39)" rx="2" ry="2" />
<text  x="547.27" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="135.3" y="1781" width="0.2" height="15.0" fill="rgb(212,29,1)" rx="2" ry="2" />
<text  x="138.34" y="1791.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="668.6" y="1925" width="2.8" height="15.0" fill="rgb(213,126,18)" rx="2" ry="2" />
<text  x="671.62" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="344.0" y="1861" width="0.2" height="15.0" fill="rgb(238,151,16)" rx="2" ry="2" />
<text  x="346.97" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (42 samples, 0.71%)</title><rect x="893.7" y="2037" width="8.3" height="15.0" fill="rgb(234,180,39)" rx="2" ry="2" />
<text  x="896.71" y="2047.5" ></text>
</g>
<g >
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="509.8" y="2037" width="0.2" height="15.0" fill="rgb(245,2,15)" rx="2" ry="2" />
<text  x="512.76" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="552.6" y="1861" width="0.2" height="15.0" fill="rgb(234,133,13)" rx="2" ry="2" />
<text  x="555.60" y="1871.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="252.5" y="1845" width="0.2" height="15.0" fill="rgb(228,10,51)" rx="2" ry="2" />
<text  x="255.54" y="1855.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.13%)</title><rect x="312.4" y="1669" width="1.6" height="15.0" fill="rgb(247,51,51)" rx="2" ry="2" />
<text  x="315.44" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="806.5" y="1589" width="0.1" height="15.0" fill="rgb(247,189,19)" rx="2" ry="2" />
<text  x="809.45" y="1599.5" ></text>
</g>
<g >
<title>mod_timer (26 samples, 0.44%)</title><rect x="323.3" y="1765" width="5.2" height="15.0" fill="rgb(219,213,27)" rx="2" ry="2" />
<text  x="326.34" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (23 samples, 0.39%)</title><rect x="947.1" y="2037" width="4.5" height="15.0" fill="rgb(241,135,32)" rx="2" ry="2" />
<text  x="950.06" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="573.0" y="1973" width="0.2" height="15.0" fill="rgb(224,175,22)" rx="2" ry="2" />
<text  x="576.03" y="1983.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="298.0" y="1685" width="0.2" height="15.0" fill="rgb(211,6,48)" rx="2" ry="2" />
<text  x="300.96" y="1695.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="186.7" y="1701" width="0.2" height="15.0" fill="rgb(221,215,4)" rx="2" ry="2" />
<text  x="189.70" y="1711.5" ></text>
</g>
<g >
<title>finish_task_switch (19 samples, 0.32%)</title><rect x="10.4" y="1909" width="3.8" height="15.0" fill="rgb(237,38,43)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>__fget (18 samples, 0.30%)</title><rect x="1118.8" y="1925" width="3.6" height="15.0" fill="rgb(254,220,38)" rx="2" ry="2" />
<text  x="1121.80" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="552.6" y="1685" width="0.2" height="15.0" fill="rgb(243,159,33)" rx="2" ry="2" />
<text  x="555.60" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="982.0" y="1909" width="1.2" height="15.0" fill="rgb(235,31,16)" rx="2" ry="2" />
<text  x="984.96" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="178.8" y="1941" width="0.4" height="15.0" fill="rgb(244,193,40)" rx="2" ry="2" />
<text  x="181.77" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="179.6" y="2021" width="0.2" height="15.0" fill="rgb(247,38,2)" rx="2" ry="2" />
<text  x="182.56" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1158.7" y="1941" width="0.2" height="15.0" fill="rgb(239,227,5)" rx="2" ry="2" />
<text  x="1161.67" y="1951.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="959.2" y="2021" width="0.2" height="15.0" fill="rgb(238,149,23)" rx="2" ry="2" />
<text  x="962.16" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="800.7" y="1605" width="0.2" height="15.0" fill="rgb(236,104,32)" rx="2" ry="2" />
<text  x="803.70" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="135.3" y="1941" width="0.2" height="15.0" fill="rgb(228,164,25)" rx="2" ry="2" />
<text  x="138.34" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="389.2" y="1781" width="0.2" height="15.0" fill="rgb(239,79,6)" rx="2" ry="2" />
<text  x="392.19" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="252.3" y="1797" width="0.2" height="15.0" fill="rgb(224,73,47)" rx="2" ry="2" />
<text  x="255.35" y="1807.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="149.6" y="1893" width="0.2" height="15.0" fill="rgb(231,228,19)" rx="2" ry="2" />
<text  x="152.62" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="936.3" y="1989" width="0.2" height="15.0" fill="rgb(219,118,12)" rx="2" ry="2" />
<text  x="939.35" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="514.7" y="1941" width="0.2" height="15.0" fill="rgb(235,172,31)" rx="2" ry="2" />
<text  x="517.72" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="689.4" y="1797" width="0.2" height="15.0" fill="rgb(226,161,23)" rx="2" ry="2" />
<text  x="692.44" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="797.9" y="1669" width="0.2" height="15.0" fill="rgb(236,69,44)" rx="2" ry="2" />
<text  x="800.92" y="1679.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="668.2" y="1605" width="0.2" height="15.0" fill="rgb(225,94,13)" rx="2" ry="2" />
<text  x="671.22" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (3 samples, 0.05%)</title><rect x="861.4" y="2005" width="0.6" height="15.0" fill="rgb(211,83,2)" rx="2" ry="2" />
<text  x="864.38" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="135.5" y="1957" width="1.2" height="15.0" fill="rgb(251,63,1)" rx="2" ry="2" />
<text  x="138.54" y="1967.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="565.3" y="1925" width="0.2" height="15.0" fill="rgb(243,90,47)" rx="2" ry="2" />
<text  x="568.29" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (3 samples, 0.05%)</title><rect x="33.8" y="1989" width="0.6" height="15.0" fill="rgb(223,16,37)" rx="2" ry="2" />
<text  x="36.80" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="853.3" y="1973" width="0.2" height="15.0" fill="rgb(210,38,46)" rx="2" ry="2" />
<text  x="856.25" y="1983.5" ></text>
</g>
<g >
<title>page_frag_free (20 samples, 0.34%)</title><rect x="1069.2" y="1861" width="4.0" height="15.0" fill="rgb(226,85,12)" rx="2" ry="2" />
<text  x="1072.22" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="672.4" y="2021" width="0.6" height="15.0" fill="rgb(217,55,49)" rx="2" ry="2" />
<text  x="675.39" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="373" width="17.5" height="15.0" fill="rgb(236,52,28)" rx="2" ry="2" />
<text  x="107.40" y="383.5" ></text>
</g>
<g >
<title>_IO_setb (2 samples, 0.03%)</title><rect x="187.9" y="2037" width="0.4" height="15.0" fill="rgb(247,105,12)" rx="2" ry="2" />
<text  x="190.89" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="403.3" y="1733" width="0.2" height="15.0" fill="rgb(212,113,25)" rx="2" ry="2" />
<text  x="406.27" y="1743.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="160.7" y="2005" width="0.4" height="15.0" fill="rgb(250,203,53)" rx="2" ry="2" />
<text  x="163.72" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="822.5" y="1797" width="0.2" height="15.0" fill="rgb(205,41,26)" rx="2" ry="2" />
<text  x="825.51" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (20 samples, 0.34%)</title><rect x="1165.4" y="2053" width="4.0" height="15.0" fill="rgb(252,72,37)" rx="2" ry="2" />
<text  x="1168.41" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="551.6" y="1941" width="0.4" height="15.0" fill="rgb(239,226,43)" rx="2" ry="2" />
<text  x="554.61" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="159.7" y="2005" width="0.4" height="15.0" fill="rgb(239,7,14)" rx="2" ry="2" />
<text  x="162.73" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="881.4" y="1717" width="0.2" height="15.0" fill="rgb(209,109,51)" rx="2" ry="2" />
<text  x="884.42" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="846.9" y="1813" width="0.6" height="15.0" fill="rgb(225,29,24)" rx="2" ry="2" />
<text  x="849.91" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="554.8" y="1973" width="0.4" height="15.0" fill="rgb(249,224,45)" rx="2" ry="2" />
<text  x="557.78" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (8 samples, 0.13%)</title><rect x="903.2" y="2037" width="1.6" height="15.0" fill="rgb(218,130,3)" rx="2" ry="2" />
<text  x="906.23" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="866.9" y="1733" width="0.2" height="15.0" fill="rgb(250,26,10)" rx="2" ry="2" />
<text  x="869.94" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="133.9" y="1973" width="3.8" height="15.0" fill="rgb(221,30,39)" rx="2" ry="2" />
<text  x="136.95" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (57 samples, 0.96%)</title><rect x="603.0" y="1973" width="11.3" height="15.0" fill="rgb(238,218,19)" rx="2" ry="2" />
<text  x="605.97" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="168.9" y="1989" width="0.2" height="15.0" fill="rgb(245,185,29)" rx="2" ry="2" />
<text  x="171.85" y="1999.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="329.1" y="1813" width="0.2" height="15.0" fill="rgb(251,227,27)" rx="2" ry="2" />
<text  x="332.10" y="1823.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="402.3" y="1813" width="0.2" height="15.0" fill="rgb(246,76,31)" rx="2" ry="2" />
<text  x="405.28" y="1823.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1095.8" y="1909" width="0.2" height="15.0" fill="rgb(250,182,49)" rx="2" ry="2" />
<text  x="1098.80" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1080.5" y="1925" width="0.2" height="15.0" fill="rgb(250,76,4)" rx="2" ry="2" />
<text  x="1083.53" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="561.7" y="1877" width="0.2" height="15.0" fill="rgb(209,82,22)" rx="2" ry="2" />
<text  x="564.72" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1177.9" y="2021" width="1.0" height="15.0" fill="rgb(235,147,37)" rx="2" ry="2" />
<text  x="1180.90" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="827.1" y="1877" width="0.2" height="15.0" fill="rgb(251,55,53)" rx="2" ry="2" />
<text  x="830.08" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="214.1" y="1861" width="0.2" height="15.0" fill="rgb(216,155,6)" rx="2" ry="2" />
<text  x="217.07" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (1 samples, 0.02%)</title><rect x="27.1" y="2037" width="0.2" height="15.0" fill="rgb(240,34,40)" rx="2" ry="2" />
<text  x="30.06" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.48%)</title><rect x="104.4" y="501" width="17.5" height="15.0" fill="rgb(213,63,13)" rx="2" ry="2" />
<text  x="107.40" y="511.5" ></text>
</g>
<g >
<title>destroy_inode (17 samples, 0.29%)</title><rect x="728.9" y="1701" width="3.4" height="15.0" fill="rgb(236,119,15)" rx="2" ry="2" />
<text  x="731.91" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.46%)</title><rect x="104.4" y="149" width="17.3" height="15.0" fill="rgb(253,80,10)" rx="2" ry="2" />
<text  x="107.40" y="159.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="553.4" y="1813" width="0.2" height="15.0" fill="rgb(214,28,41)" rx="2" ry="2" />
<text  x="556.39" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="736.8" y="1781" width="1.0" height="15.0" fill="rgb(213,187,18)" rx="2" ry="2" />
<text  x="739.84" y="1791.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.02%)</title><rect x="298.0" y="1557" width="0.2" height="15.0" fill="rgb(219,82,5)" rx="2" ry="2" />
<text  x="300.96" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="120.9" y="85" width="0.2" height="15.0" fill="rgb(210,202,34)" rx="2" ry="2" />
<text  x="123.86" y="95.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="817.6" y="1749" width="0.2" height="15.0" fill="rgb(212,54,19)" rx="2" ry="2" />
<text  x="820.56" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="890.7" y="1925" width="0.2" height="15.0" fill="rgb(240,194,3)" rx="2" ry="2" />
<text  x="893.74" y="1935.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="387.0" y="1941" width="0.2" height="15.0" fill="rgb(244,1,25)" rx="2" ry="2" />
<text  x="390.01" y="1951.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (22 samples, 0.37%)</title><rect x="188.7" y="2037" width="4.3" height="15.0" fill="rgb(217,164,21)" rx="2" ry="2" />
<text  x="191.69" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="125.4" y="1829" width="0.2" height="15.0" fill="rgb(208,138,49)" rx="2" ry="2" />
<text  x="128.42" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="138.5" y="2005" width="0.4" height="15.0" fill="rgb(211,27,22)" rx="2" ry="2" />
<text  x="141.51" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="837.4" y="1941" width="0.2" height="15.0" fill="rgb(207,62,27)" rx="2" ry="2" />
<text  x="840.39" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="128.0" y="1973" width="0.2" height="15.0" fill="rgb(211,98,17)" rx="2" ry="2" />
<text  x="131.00" y="1983.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="942.9" y="1861" width="0.2" height="15.0" fill="rgb(213,167,33)" rx="2" ry="2" />
<text  x="945.89" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="32.8" y="1893" width="0.2" height="15.0" fill="rgb(234,5,28)" rx="2" ry="2" />
<text  x="35.81" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (8 samples, 0.13%)</title><rect x="52.6" y="1957" width="1.6" height="15.0" fill="rgb(214,10,11)" rx="2" ry="2" />
<text  x="55.64" y="1967.5" ></text>
</g>
</g>
</svg>
