<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="235.7" y="1877" width="0.2" height="15.0" fill="rgb(216,45,16)" rx="2" ry="2" />
<text  x="238.69" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="53.8" y="37" width="0.2" height="15.0" fill="rgb(207,105,1)" rx="2" ry="2" />
<text  x="56.83" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="882.6" y="1989" width="0.2" height="15.0" fill="rgb(205,184,32)" rx="2" ry="2" />
<text  x="885.61" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="301.3" y="1669" width="0.4" height="15.0" fill="rgb(245,166,34)" rx="2" ry="2" />
<text  x="304.33" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (1 samples, 0.02%)</title><rect x="314.6" y="2021" width="0.2" height="15.0" fill="rgb(222,226,18)" rx="2" ry="2" />
<text  x="317.62" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="583.7" y="1749" width="0.4" height="15.0" fill="rgb(250,213,4)" rx="2" ry="2" />
<text  x="586.74" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (9 samples, 0.15%)</title><rect x="73.7" y="53" width="1.7" height="15.0" fill="rgb(236,94,21)" rx="2" ry="2" />
<text  x="76.66" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="587.5" y="1973" width="0.2" height="15.0" fill="rgb(206,121,51)" rx="2" ry="2" />
<text  x="590.51" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="579.2" y="1877" width="0.6" height="15.0" fill="rgb(205,70,44)" rx="2" ry="2" />
<text  x="582.18" y="1887.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="10.4" y="1957" width="0.8" height="15.0" fill="rgb(208,46,14)" rx="2" ry="2" />
<text  x="13.40" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (6 samples, 0.10%)</title><rect x="261.5" y="1541" width="1.2" height="15.0" fill="rgb(209,18,18)" rx="2" ry="2" />
<text  x="264.47" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="501" width="45.2" height="15.0" fill="rgb(219,159,42)" rx="2" ry="2" />
<text  x="53.85" y="511.5" >[unk..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1301" width="45.2" height="15.0" fill="rgb(232,173,54)" rx="2" ry="2" />
<text  x="53.85" y="1311.5" >[unk..</text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="300.9" y="1813" width="0.2" height="15.0" fill="rgb(246,106,38)" rx="2" ry="2" />
<text  x="303.93" y="1823.5" ></text>
</g>
<g >
<title>skb_try_coalesce (1 samples, 0.02%)</title><rect x="1073.2" y="1829" width="0.2" height="15.0" fill="rgb(250,98,6)" rx="2" ry="2" />
<text  x="1076.19" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="582.0" y="1941" width="0.2" height="15.0" fill="rgb(213,173,4)" rx="2" ry="2" />
<text  x="584.95" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="1042.3" y="1861" width="0.7" height="15.0" fill="rgb(205,81,6)" rx="2" ry="2" />
<text  x="1045.25" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="576.8" y="1861" width="0.2" height="15.0" fill="rgb(238,155,36)" rx="2" ry="2" />
<text  x="579.80" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (16 samples, 0.27%)</title><rect x="115.9" y="1957" width="3.2" height="15.0" fill="rgb(214,199,54)" rx="2" ry="2" />
<text  x="118.90" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="173.2" y="1893" width="0.2" height="15.0" fill="rgb(233,124,2)" rx="2" ry="2" />
<text  x="176.22" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="512.5" y="2005" width="0.2" height="15.0" fill="rgb(228,108,27)" rx="2" ry="2" />
<text  x="515.54" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1071.6" y="1781" width="0.2" height="15.0" fill="rgb(207,89,23)" rx="2" ry="2" />
<text  x="1074.60" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="673.6" y="1941" width="0.2" height="15.0" fill="rgb(212,81,33)" rx="2" ry="2" />
<text  x="676.58" y="1951.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="258.3" y="1813" width="0.2" height="15.0" fill="rgb(215,99,16)" rx="2" ry="2" />
<text  x="261.30" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="255.3" y="1685" width="0.2" height="15.0" fill="rgb(221,215,45)" rx="2" ry="2" />
<text  x="258.32" y="1695.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="182.1" y="2021" width="0.6" height="15.0" fill="rgb(216,156,28)" rx="2" ry="2" />
<text  x="185.14" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="258.3" y="1765" width="0.2" height="15.0" fill="rgb(250,37,27)" rx="2" ry="2" />
<text  x="261.30" y="1775.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (7 samples, 0.12%)</title><rect x="1174.9" y="2053" width="1.4" height="15.0" fill="rgb(253,150,17)" rx="2" ry="2" />
<text  x="1177.93" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="565" width="45.2" height="15.0" fill="rgb(211,32,30)" rx="2" ry="2" />
<text  x="53.85" y="575.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (118 samples, 1.98%)</title><rect x="830.8" y="1989" width="23.4" height="15.0" fill="rgb(219,26,54)" rx="2" ry="2" />
<text  x="833.84" y="1999.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="297.6" y="1749" width="0.2" height="15.0" fill="rgb(214,85,54)" rx="2" ry="2" />
<text  x="300.56" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="394.1" y="1957" width="0.2" height="15.0" fill="rgb(250,198,47)" rx="2" ry="2" />
<text  x="397.14" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="190.7" y="1893" width="0.2" height="15.0" fill="rgb(217,37,1)" rx="2" ry="2" />
<text  x="193.67" y="1903.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="305.9" y="2037" width="0.2" height="15.0" fill="rgb(233,157,5)" rx="2" ry="2" />
<text  x="308.89" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="309" width="45.0" height="15.0" fill="rgb(250,101,11)" rx="2" ry="2" />
<text  x="53.85" y="319.5" >[unk..</text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="580.2" y="1909" width="0.4" height="15.0" fill="rgb(229,70,45)" rx="2" ry="2" />
<text  x="583.17" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (250 samples, 4.20%)</title><rect x="315.2" y="2005" width="49.6" height="15.0" fill="rgb(244,180,33)" rx="2" ry="2" />
<text  x="318.21" y="2015.5" >folly..</text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (13 samples, 0.22%)</title><rect x="16.7" y="1989" width="2.6" height="15.0" fill="rgb(209,202,2)" rx="2" ry="2" />
<text  x="19.74" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9 samples, 0.15%)</title><rect x="640.1" y="1989" width="1.7" height="15.0" fill="rgb(248,79,34)" rx="2" ry="2" />
<text  x="643.06" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="402.5" y="1893" width="0.6" height="15.0" fill="rgb(207,27,21)" rx="2" ry="2" />
<text  x="405.47" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="288.8" y="1701" width="0.2" height="15.0" fill="rgb(244,31,53)" rx="2" ry="2" />
<text  x="291.84" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (52 samples, 0.87%)</title><rect x="467.3" y="1941" width="10.3" height="15.0" fill="rgb(205,222,47)" rx="2" ry="2" />
<text  x="470.32" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="605.8" y="1941" width="0.3" height="15.0" fill="rgb(220,205,0)" rx="2" ry="2" />
<text  x="608.75" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="256.1" y="1845" width="0.2" height="15.0" fill="rgb(215,169,33)" rx="2" ry="2" />
<text  x="259.11" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1073.6" y="1765" width="0.4" height="15.0" fill="rgb(237,115,28)" rx="2" ry="2" />
<text  x="1076.59" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="95.5" y="165" width="0.2" height="15.0" fill="rgb(209,13,52)" rx="2" ry="2" />
<text  x="98.48" y="175.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.6" y="1861" width="0.8" height="15.0" fill="rgb(243,167,0)" rx="2" ry="2" />
<text  x="14.59" y="1871.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="374.1" y="1941" width="0.2" height="15.0" fill="rgb(233,218,49)" rx="2" ry="2" />
<text  x="377.11" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="39.5" y="1733" width="0.4" height="15.0" fill="rgb(248,27,17)" rx="2" ry="2" />
<text  x="42.55" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (17 samples, 0.29%)</title><rect x="86.6" y="53" width="3.3" height="15.0" fill="rgb(229,59,18)" rx="2" ry="2" />
<text  x="89.55" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="301.9" y="1925" width="0.2" height="15.0" fill="rgb(235,97,3)" rx="2" ry="2" />
<text  x="304.93" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="583.7" y="1765" width="0.4" height="15.0" fill="rgb(211,71,5)" rx="2" ry="2" />
<text  x="586.74" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="254.5" y="1813" width="0.2" height="15.0" fill="rgb(223,194,51)" rx="2" ry="2" />
<text  x="257.53" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="310.1" y="1861" width="0.4" height="15.0" fill="rgb(253,1,46)" rx="2" ry="2" />
<text  x="313.06" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="599.2" y="2021" width="0.8" height="15.0" fill="rgb(218,13,15)" rx="2" ry="2" />
<text  x="602.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1829" width="45.2" height="15.0" fill="rgb(225,120,23)" rx="2" ry="2" />
<text  x="53.85" y="1839.5" >[unk..</text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="581.6" y="1973" width="0.2" height="15.0" fill="rgb(233,229,23)" rx="2" ry="2" />
<text  x="584.56" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="116.7" y="1925" width="0.6" height="15.0" fill="rgb(219,153,19)" rx="2" ry="2" />
<text  x="119.70" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (6 samples, 0.10%)</title><rect x="38.8" y="1845" width="1.1" height="15.0" fill="rgb(209,140,35)" rx="2" ry="2" />
<text  x="41.76" y="1855.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="677.5" y="1941" width="0.4" height="15.0" fill="rgb(223,46,3)" rx="2" ry="2" />
<text  x="680.54" y="1951.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="1187.8" y="1941" width="0.8" height="15.0" fill="rgb(240,227,14)" rx="2" ry="2" />
<text  x="1190.82" y="1951.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1069.6" y="1893" width="0.2" height="15.0" fill="rgb(249,24,39)" rx="2" ry="2" />
<text  x="1072.62" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="733.1" y="1941" width="1.0" height="15.0" fill="rgb(213,185,19)" rx="2" ry="2" />
<text  x="736.07" y="1951.5" ></text>
</g>
<g >
<title>tcp_poll (7 samples, 0.12%)</title><rect x="310.5" y="1893" width="1.3" height="15.0" fill="rgb(222,15,4)" rx="2" ry="2" />
<text  x="313.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1143.8" y="1717" width="0.2" height="15.0" fill="rgb(208,117,8)" rx="2" ry="2" />
<text  x="1146.79" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="230.5" y="1957" width="0.8" height="15.0" fill="rgb(224,151,32)" rx="2" ry="2" />
<text  x="233.53" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1205" width="45.2" height="15.0" fill="rgb(231,58,31)" rx="2" ry="2" />
<text  x="53.85" y="1215.5" >[unk..</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="1083.7" y="1797" width="0.4" height="15.0" fill="rgb(248,65,14)" rx="2" ry="2" />
<text  x="1086.70" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="858.2" y="1925" width="0.4" height="15.0" fill="rgb(248,153,39)" rx="2" ry="2" />
<text  x="861.21" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="213.7" y="1877" width="0.2" height="15.0" fill="rgb(208,105,3)" rx="2" ry="2" />
<text  x="216.67" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="209.1" y="2005" width="0.4" height="15.0" fill="rgb(252,48,24)" rx="2" ry="2" />
<text  x="212.11" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="236.5" y="1877" width="0.2" height="15.0" fill="rgb(207,193,41)" rx="2" ry="2" />
<text  x="239.48" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="288.6" y="1717" width="0.2" height="15.0" fill="rgb(228,159,31)" rx="2" ry="2" />
<text  x="291.64" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="543.5" y="1637" width="0.2" height="15.0" fill="rgb(206,150,16)" rx="2" ry="2" />
<text  x="546.48" y="1647.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1039.1" y="1845" width="0.2" height="15.0" fill="rgb(236,3,37)" rx="2" ry="2" />
<text  x="1042.08" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1072.4" y="1701" width="0.2" height="15.0" fill="rgb(252,195,37)" rx="2" ry="2" />
<text  x="1075.40" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="301.9" y="1861" width="0.2" height="15.0" fill="rgb(247,150,1)" rx="2" ry="2" />
<text  x="304.93" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="255.5" y="1829" width="0.2" height="15.0" fill="rgb(251,106,20)" rx="2" ry="2" />
<text  x="258.52" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="192.3" y="1989" width="0.6" height="15.0" fill="rgb(247,175,45)" rx="2" ry="2" />
<text  x="195.26" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1131.9" y="1909" width="0.2" height="15.0" fill="rgb(224,179,54)" rx="2" ry="2" />
<text  x="1134.89" y="1919.5" ></text>
</g>
<g >
<title>native_sched_clock (5 samples, 0.08%)</title><rect x="1085.7" y="1877" width="1.0" height="15.0" fill="rgb(254,53,6)" rx="2" ry="2" />
<text  x="1088.68" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (13 samples, 0.22%)</title><rect x="341.8" y="1973" width="2.6" height="15.0" fill="rgb(238,27,26)" rx="2" ry="2" />
<text  x="344.79" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="364.6" y="1957" width="0.2" height="15.0" fill="rgb(224,206,31)" rx="2" ry="2" />
<text  x="367.59" y="1967.5" ></text>
</g>
<g >
<title>__libc_recv (357 samples, 6.00%)</title><rect x="1018.3" y="2053" width="70.8" height="15.0" fill="rgb(210,158,16)" rx="2" ry="2" />
<text  x="1021.26" y="2063.5" >__libc_r..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1065.9" y="1829" width="0.2" height="15.0" fill="rgb(235,91,2)" rx="2" ry="2" />
<text  x="1068.85" y="1839.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (6 samples, 0.10%)</title><rect x="350.7" y="1989" width="1.2" height="15.0" fill="rgb(250,149,0)" rx="2" ry="2" />
<text  x="353.71" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="294.8" y="1685" width="0.2" height="15.0" fill="rgb(233,202,48)" rx="2" ry="2" />
<text  x="297.79" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="670.8" y="1909" width="0.2" height="15.0" fill="rgb(228,56,2)" rx="2" ry="2" />
<text  x="673.80" y="1919.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="1145.8" y="1989" width="0.2" height="15.0" fill="rgb(211,204,40)" rx="2" ry="2" />
<text  x="1148.77" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1059.9" y="1589" width="0.2" height="15.0" fill="rgb(213,188,22)" rx="2" ry="2" />
<text  x="1062.90" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (17 samples, 0.29%)</title><rect x="185.1" y="2021" width="3.4" height="15.0" fill="rgb(209,46,47)" rx="2" ry="2" />
<text  x="188.12" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="312.2" y="1877" width="0.2" height="15.0" fill="rgb(250,179,44)" rx="2" ry="2" />
<text  x="315.24" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="291.8" y="1749" width="0.2" height="15.0" fill="rgb(252,202,23)" rx="2" ry="2" />
<text  x="294.81" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="868.1" y="1989" width="3.2" height="15.0" fill="rgb(223,3,32)" rx="2" ry="2" />
<text  x="871.13" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1065.9" y="1781" width="0.2" height="15.0" fill="rgb(229,73,33)" rx="2" ry="2" />
<text  x="1068.85" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="474.3" y="1909" width="0.4" height="15.0" fill="rgb(252,195,29)" rx="2" ry="2" />
<text  x="477.27" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="161.5" y="1973" width="0.4" height="15.0" fill="rgb(229,186,14)" rx="2" ry="2" />
<text  x="164.52" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="393.7" y="1973" width="0.6" height="15.0" fill="rgb(240,126,39)" rx="2" ry="2" />
<text  x="396.75" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="1042.3" y="1813" width="0.7" height="15.0" fill="rgb(206,185,30)" rx="2" ry="2" />
<text  x="1045.25" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="311.6" y="1765" width="0.2" height="15.0" fill="rgb(224,77,29)" rx="2" ry="2" />
<text  x="314.64" y="1775.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="719.4" y="1877" width="0.2" height="15.0" fill="rgb(214,189,46)" rx="2" ry="2" />
<text  x="722.39" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1042.6" y="1733" width="0.4" height="15.0" fill="rgb(243,115,47)" rx="2" ry="2" />
<text  x="1045.65" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="95.9" y="437" width="0.2" height="15.0" fill="rgb(209,139,49)" rx="2" ry="2" />
<text  x="98.87" y="447.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="543.5" y="1749" width="0.2" height="15.0" fill="rgb(254,34,8)" rx="2" ry="2" />
<text  x="546.48" y="1759.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1083.7" y="1525" width="0.2" height="15.0" fill="rgb(243,114,39)" rx="2" ry="2" />
<text  x="1086.70" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="252.9" y="1717" width="0.2" height="15.0" fill="rgb(215,143,6)" rx="2" ry="2" />
<text  x="255.94" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="583.7" y="1685" width="0.2" height="15.0" fill="rgb(225,76,2)" rx="2" ry="2" />
<text  x="586.74" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="672.0" y="1909" width="0.2" height="15.0" fill="rgb(244,86,37)" rx="2" ry="2" />
<text  x="674.99" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (5 samples, 0.08%)</title><rect x="169.4" y="1957" width="1.0" height="15.0" fill="rgb(246,84,5)" rx="2" ry="2" />
<text  x="172.45" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1059.9" y="1541" width="0.2" height="15.0" fill="rgb(247,73,50)" rx="2" ry="2" />
<text  x="1062.90" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1093.4" y="1893" width="0.2" height="15.0" fill="rgb(246,161,51)" rx="2" ry="2" />
<text  x="1096.42" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (36 samples, 0.61%)</title><rect x="13.6" y="2053" width="7.1" height="15.0" fill="rgb(235,43,37)" rx="2" ry="2" />
<text  x="16.57" y="2063.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="96.7" y="1669" width="0.2" height="15.0" fill="rgb(247,53,11)" rx="2" ry="2" />
<text  x="99.67" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="198.8" y="1813" width="0.2" height="15.0" fill="rgb(218,28,38)" rx="2" ry="2" />
<text  x="201.80" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="576.8" y="1797" width="0.2" height="15.0" fill="rgb(247,7,51)" rx="2" ry="2" />
<text  x="579.80" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="858.2" y="1973" width="0.4" height="15.0" fill="rgb(241,57,13)" rx="2" ry="2" />
<text  x="861.21" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="580.8" y="1861" width="0.2" height="15.0" fill="rgb(238,200,51)" rx="2" ry="2" />
<text  x="583.76" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="579.0" y="1957" width="0.8" height="15.0" fill="rgb(216,47,25)" rx="2" ry="2" />
<text  x="581.98" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="95.9" y="69" width="0.2" height="15.0" fill="rgb(240,210,22)" rx="2" ry="2" />
<text  x="98.87" y="79.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="297.6" y="1765" width="0.2" height="15.0" fill="rgb(222,103,13)" rx="2" ry="2" />
<text  x="300.56" y="1775.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="213.5" y="2021" width="0.4" height="15.0" fill="rgb(214,30,33)" rx="2" ry="2" />
<text  x="216.48" y="2031.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="1083.7" y="1701" width="0.2" height="15.0" fill="rgb(249,53,53)" rx="2" ry="2" />
<text  x="1086.70" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="171.6" y="1989" width="0.2" height="15.0" fill="rgb(224,185,45)" rx="2" ry="2" />
<text  x="174.63" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="809.6" y="2005" width="0.2" height="15.0" fill="rgb(240,128,54)" rx="2" ry="2" />
<text  x="812.62" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (136 samples, 2.29%)</title><rect x="602.0" y="2005" width="27.0" height="15.0" fill="rgb(236,185,35)" rx="2" ry="2" />
<text  x="604.98" y="2015.5" >[..</text>
</g>
<g >
<title>ip_queue_xmit (148 samples, 2.49%)</title><rect x="259.1" y="1813" width="29.3" height="15.0" fill="rgb(254,81,8)" rx="2" ry="2" />
<text  x="262.09" y="1823.5" >ip..</text>
</g>
<g >
<title>[mcrouter] (146 samples, 2.45%)</title><rect x="937.7" y="1941" width="29.0" height="15.0" fill="rgb(232,198,11)" rx="2" ry="2" />
<text  x="940.74" y="1951.5" >[m..</text>
</g>
<g >
<title>security_socket_sendmsg (8 samples, 0.13%)</title><rect x="296.2" y="1925" width="1.6" height="15.0" fill="rgb(212,133,31)" rx="2" ry="2" />
<text  x="299.17" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1095.4" y="1797" width="0.2" height="15.0" fill="rgb(233,141,3)" rx="2" ry="2" />
<text  x="1098.40" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="198.8" y="1733" width="0.2" height="15.0" fill="rgb(239,172,2)" rx="2" ry="2" />
<text  x="201.80" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="253.1" y="1653" width="0.2" height="15.0" fill="rgb(232,224,23)" rx="2" ry="2" />
<text  x="256.14" y="1663.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="17.3" y="1909" width="0.2" height="15.0" fill="rgb(219,208,14)" rx="2" ry="2" />
<text  x="20.34" y="1919.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="294.8" y="1637" width="0.2" height="15.0" fill="rgb(244,184,41)" rx="2" ry="2" />
<text  x="297.79" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="95.9" y="181" width="0.2" height="15.0" fill="rgb(223,211,9)" rx="2" ry="2" />
<text  x="98.87" y="191.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="11.4" y="1989" width="1.0" height="15.0" fill="rgb(213,209,48)" rx="2" ry="2" />
<text  x="14.39" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="555.8" y="1989" width="0.4" height="15.0" fill="rgb(213,114,30)" rx="2" ry="2" />
<text  x="558.77" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (2 samples, 0.03%)</title><rect x="871.3" y="2037" width="0.4" height="15.0" fill="rgb(216,165,52)" rx="2" ry="2" />
<text  x="874.30" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="1087.5" y="1941" width="0.6" height="15.0" fill="rgb(234,95,6)" rx="2" ry="2" />
<text  x="1090.47" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1095.4" y="1909" width="0.2" height="15.0" fill="rgb(241,4,52)" rx="2" ry="2" />
<text  x="1098.40" y="1919.5" ></text>
</g>
<g >
<title>epoll_wait (23 samples, 0.39%)</title><rect x="307.9" y="2037" width="4.5" height="15.0" fill="rgb(253,142,51)" rx="2" ry="2" />
<text  x="310.88" y="2047.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="279.5" y="1429" width="0.4" height="15.0" fill="rgb(214,135,21)" rx="2" ry="2" />
<text  x="282.52" y="1439.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="1146.6" y="2005" width="0.4" height="15.0" fill="rgb(213,14,52)" rx="2" ry="2" />
<text  x="1149.57" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1071.2" y="1829" width="0.2" height="15.0" fill="rgb(219,113,12)" rx="2" ry="2" />
<text  x="1074.21" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (15 samples, 0.25%)</title><rect x="512.7" y="2021" width="3.0" height="15.0" fill="rgb(254,24,16)" rx="2" ry="2" />
<text  x="515.74" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="657.5" y="2005" width="1.0" height="15.0" fill="rgb(210,180,52)" rx="2" ry="2" />
<text  x="660.51" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="1017.3" y="2037" width="0.2" height="15.0" fill="rgb(219,163,10)" rx="2" ry="2" />
<text  x="1020.26" y="2047.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="579.0" y="1877" width="0.2" height="15.0" fill="rgb(231,112,33)" rx="2" ry="2" />
<text  x="581.98" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="653.0" y="1989" width="0.3" height="15.0" fill="rgb(212,57,30)" rx="2" ry="2" />
<text  x="655.95" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (20 samples, 0.34%)</title><rect x="354.5" y="1989" width="3.9" height="15.0" fill="rgb(239,25,5)" rx="2" ry="2" />
<text  x="357.48" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="198.8" y="1717" width="0.2" height="15.0" fill="rgb(212,186,34)" rx="2" ry="2" />
<text  x="201.80" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="310.1" y="1877" width="0.4" height="15.0" fill="rgb(219,13,31)" rx="2" ry="2" />
<text  x="313.06" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="883.2" y="1973" width="0.6" height="15.0" fill="rgb(251,157,16)" rx="2" ry="2" />
<text  x="886.20" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="1071.4" y="1861" width="0.4" height="15.0" fill="rgb(253,45,13)" rx="2" ry="2" />
<text  x="1074.41" y="1871.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="1087.5" y="1925" width="0.6" height="15.0" fill="rgb(219,110,0)" rx="2" ry="2" />
<text  x="1090.47" y="1935.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="532.2" y="1893" width="0.2" height="15.0" fill="rgb(224,7,37)" rx="2" ry="2" />
<text  x="535.17" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (16 samples, 0.27%)</title><rect x="389.2" y="1941" width="3.2" height="15.0" fill="rgb(236,15,42)" rx="2" ry="2" />
<text  x="392.19" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="95.9" y="165" width="0.2" height="15.0" fill="rgb(225,52,35)" rx="2" ry="2" />
<text  x="98.87" y="175.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="198.0" y="2005" width="0.2" height="15.0" fill="rgb(231,47,6)" rx="2" ry="2" />
<text  x="201.01" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="581.8" y="1685" width="0.2" height="15.0" fill="rgb(214,89,48)" rx="2" ry="2" />
<text  x="584.75" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1072.4" y="1781" width="0.2" height="15.0" fill="rgb(242,58,5)" rx="2" ry="2" />
<text  x="1075.40" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="254.5" y="1861" width="0.2" height="15.0" fill="rgb(241,70,48)" rx="2" ry="2" />
<text  x="257.53" y="1871.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1083.7" y="1541" width="0.2" height="15.0" fill="rgb(223,196,14)" rx="2" ry="2" />
<text  x="1086.70" y="1551.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1017.7" y="2053" width="0.6" height="15.0" fill="rgb(207,56,32)" rx="2" ry="2" />
<text  x="1020.66" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="582.0" y="1973" width="0.2" height="15.0" fill="rgb(253,19,17)" rx="2" ry="2" />
<text  x="584.95" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="173.0" y="1893" width="0.2" height="15.0" fill="rgb(207,92,40)" rx="2" ry="2" />
<text  x="176.02" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="387.0" y="1957" width="0.4" height="15.0" fill="rgb(212,198,20)" rx="2" ry="2" />
<text  x="390.01" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (9 samples, 0.15%)</title><rect x="673.8" y="1941" width="1.8" height="15.0" fill="rgb(245,87,43)" rx="2" ry="2" />
<text  x="676.77" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (5 samples, 0.08%)</title><rect x="76.0" y="37" width="1.0" height="15.0" fill="rgb(228,212,16)" rx="2" ry="2" />
<text  x="79.04" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="858.0" y="1957" width="0.2" height="15.0" fill="rgb(235,65,11)" rx="2" ry="2" />
<text  x="861.01" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (110 samples, 1.85%)</title><rect x="261.3" y="1701" width="21.8" height="15.0" fill="rgb(209,220,51)" rx="2" ry="2" />
<text  x="264.27" y="1711.5" >d..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1083.9" y="1765" width="0.2" height="15.0" fill="rgb(242,172,17)" rx="2" ry="2" />
<text  x="1086.90" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (4 samples, 0.07%)</title><rect x="431.0" y="2005" width="0.8" height="15.0" fill="rgb(229,68,26)" rx="2" ry="2" />
<text  x="434.03" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1285" width="45.2" height="15.0" fill="rgb(214,68,9)" rx="2" ry="2" />
<text  x="53.85" y="1295.5" >[unk..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="549.4" y="1941" width="0.2" height="15.0" fill="rgb(231,32,34)" rx="2" ry="2" />
<text  x="552.43" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="84.4" y="37" width="1.4" height="15.0" fill="rgb(250,28,32)" rx="2" ry="2" />
<text  x="87.37" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="288.8" y="1685" width="0.2" height="15.0" fill="rgb(215,12,23)" rx="2" ry="2" />
<text  x="291.84" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="1103.1" y="1957" width="0.4" height="15.0" fill="rgb(233,131,48)" rx="2" ry="2" />
<text  x="1106.14" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="1105.9" y="2053" width="0.2" height="15.0" fill="rgb(213,36,3)" rx="2" ry="2" />
<text  x="1108.91" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="96.7" y="1781" width="0.2" height="15.0" fill="rgb(237,162,28)" rx="2" ry="2" />
<text  x="99.67" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="300.9" y="1861" width="0.8" height="15.0" fill="rgb(235,178,0)" rx="2" ry="2" />
<text  x="303.93" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="865.5" y="1989" width="0.4" height="15.0" fill="rgb(243,161,1)" rx="2" ry="2" />
<text  x="868.55" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1493" width="45.2" height="15.0" fill="rgb(249,83,10)" rx="2" ry="2" />
<text  x="53.85" y="1503.5" >[unk..</text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="333.7" y="1957" width="0.6" height="15.0" fill="rgb(254,148,1)" rx="2" ry="2" />
<text  x="336.66" y="1967.5" ></text>
</g>
<g >
<title>sched_clock (5 samples, 0.08%)</title><rect x="1085.7" y="1893" width="1.0" height="15.0" fill="rgb(209,85,24)" rx="2" ry="2" />
<text  x="1088.68" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="181" width="0.2" height="15.0" fill="rgb(227,143,28)" rx="2" ry="2" />
<text  x="98.67" y="191.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="239.1" y="1749" width="0.2" height="15.0" fill="rgb(241,174,8)" rx="2" ry="2" />
<text  x="242.06" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (17 samples, 0.29%)</title><rect x="560.3" y="1941" width="3.4" height="15.0" fill="rgb(251,109,19)" rx="2" ry="2" />
<text  x="563.34" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1095.4" y="1765" width="0.2" height="15.0" fill="rgb(224,24,17)" rx="2" ry="2" />
<text  x="1098.40" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="353.7" y="1989" width="0.6" height="15.0" fill="rgb(233,14,31)" rx="2" ry="2" />
<text  x="356.69" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (221 samples, 3.71%)</title><rect x="50.9" y="85" width="43.8" height="15.0" fill="rgb(210,105,14)" rx="2" ry="2" />
<text  x="53.85" y="95.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="603.4" y="1973" width="0.2" height="15.0" fill="rgb(250,35,54)" rx="2" ry="2" />
<text  x="606.37" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="453" width="45.2" height="15.0" fill="rgb(234,201,31)" rx="2" ry="2" />
<text  x="53.85" y="463.5" >[unk..</text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="579.0" y="1893" width="0.8" height="15.0" fill="rgb(228,212,38)" rx="2" ry="2" />
<text  x="581.98" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="181.9" y="1845" width="0.2" height="15.0" fill="rgb(220,131,46)" rx="2" ry="2" />
<text  x="184.94" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (10 samples, 0.17%)</title><rect x="344.8" y="1957" width="1.9" height="15.0" fill="rgb(251,2,11)" rx="2" ry="2" />
<text  x="347.76" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="395.1" y="1989" width="0.2" height="15.0" fill="rgb(217,82,31)" rx="2" ry="2" />
<text  x="398.14" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (40 samples, 0.67%)</title><rect x="484.8" y="1989" width="7.9" height="15.0" fill="rgb(223,222,49)" rx="2" ry="2" />
<text  x="487.78" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="294.8" y="1717" width="0.2" height="15.0" fill="rgb(214,227,20)" rx="2" ry="2" />
<text  x="297.79" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (23 samples, 0.39%)</title><rect x="388.2" y="1989" width="4.6" height="15.0" fill="rgb(230,55,28)" rx="2" ry="2" />
<text  x="391.19" y="1999.5" ></text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.02%)</title><rect x="291.2" y="1765" width="0.2" height="15.0" fill="rgb(242,47,2)" rx="2" ry="2" />
<text  x="294.22" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="579.4" y="1797" width="0.4" height="15.0" fill="rgb(246,209,44)" rx="2" ry="2" />
<text  x="582.37" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="213.7" y="1813" width="0.2" height="15.0" fill="rgb(226,9,19)" rx="2" ry="2" />
<text  x="216.67" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="181.9" y="1941" width="0.2" height="15.0" fill="rgb(237,197,17)" rx="2" ry="2" />
<text  x="184.94" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (6 samples, 0.10%)</title><rect x="471.5" y="1909" width="1.2" height="15.0" fill="rgb(219,54,19)" rx="2" ry="2" />
<text  x="474.49" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="725.9" y="1909" width="0.8" height="15.0" fill="rgb(213,26,24)" rx="2" ry="2" />
<text  x="728.93" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="290.4" y="1717" width="0.4" height="15.0" fill="rgb(228,146,10)" rx="2" ry="2" />
<text  x="293.42" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1797" width="45.2" height="15.0" fill="rgb(230,178,50)" rx="2" ry="2" />
<text  x="53.85" y="1807.5" >[unk..</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="261.9" y="1381" width="0.2" height="15.0" fill="rgb(225,144,24)" rx="2" ry="2" />
<text  x="264.87" y="1391.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="660.1" y="1989" width="0.2" height="15.0" fill="rgb(234,221,40)" rx="2" ry="2" />
<text  x="663.09" y="1999.5" ></text>
</g>
<g >
<title>skb_free_head (8 samples, 0.13%)</title><rect x="277.9" y="1413" width="1.6" height="15.0" fill="rgb(227,103,9)" rx="2" ry="2" />
<text  x="280.93" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="198.8" y="1925" width="0.2" height="15.0" fill="rgb(230,137,12)" rx="2" ry="2" />
<text  x="201.80" y="1935.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="81.0" y="37" width="0.2" height="15.0" fill="rgb(219,106,37)" rx="2" ry="2" />
<text  x="84.00" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (10 samples, 0.17%)</title><rect x="582.2" y="2005" width="1.9" height="15.0" fill="rgb(249,185,37)" rx="2" ry="2" />
<text  x="585.15" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="255.5" y="1813" width="0.2" height="15.0" fill="rgb(224,206,17)" rx="2" ry="2" />
<text  x="258.52" y="1823.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="577.4" y="1717" width="0.2" height="15.0" fill="rgb(234,202,14)" rx="2" ry="2" />
<text  x="580.39" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1072.4" y="1813" width="0.2" height="15.0" fill="rgb(250,65,42)" rx="2" ry="2" />
<text  x="1075.40" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1073.6" y="1749" width="0.4" height="15.0" fill="rgb(230,178,5)" rx="2" ry="2" />
<text  x="1076.59" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="166.7" y="1941" width="0.2" height="15.0" fill="rgb(219,9,8)" rx="2" ry="2" />
<text  x="169.67" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (3 samples, 0.05%)</title><rect x="18.7" y="1941" width="0.6" height="15.0" fill="rgb(219,155,54)" rx="2" ry="2" />
<text  x="21.73" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="188.5" y="2021" width="0.2" height="15.0" fill="rgb(212,137,2)" rx="2" ry="2" />
<text  x="191.49" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="241.0" y="1653" width="0.2" height="15.0" fill="rgb(253,166,30)" rx="2" ry="2" />
<text  x="244.04" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="297.4" y="1877" width="0.4" height="15.0" fill="rgb(207,42,10)" rx="2" ry="2" />
<text  x="300.36" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (3 samples, 0.05%)</title><rect x="1161.8" y="2053" width="0.6" height="15.0" fill="rgb(244,134,28)" rx="2" ry="2" />
<text  x="1164.84" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1147.0" y="1989" width="0.2" height="15.0" fill="rgb(230,110,51)" rx="2" ry="2" />
<text  x="1149.96" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (7 samples, 0.12%)</title><rect x="1172.0" y="2053" width="1.3" height="15.0" fill="rgb(221,115,29)" rx="2" ry="2" />
<text  x="1174.95" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="255.5" y="1781" width="0.2" height="15.0" fill="rgb(242,222,1)" rx="2" ry="2" />
<text  x="258.52" y="1791.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.4" y="2053" width="1.0" height="15.0" fill="rgb(230,119,14)" rx="2" ry="2" />
<text  x="14.39" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="589.7" y="1925" width="0.2" height="15.0" fill="rgb(217,157,27)" rx="2" ry="2" />
<text  x="592.69" y="1935.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="737.2" y="1989" width="0.2" height="15.0" fill="rgb(205,140,31)" rx="2" ry="2" />
<text  x="740.24" y="1999.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1023.6" y="2005" width="0.4" height="15.0" fill="rgb(227,66,13)" rx="2" ry="2" />
<text  x="1026.61" y="2015.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="254.9" y="1829" width="0.6" height="15.0" fill="rgb(226,67,41)" rx="2" ry="2" />
<text  x="257.92" y="1839.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="10.4" y="1829" width="0.2" height="15.0" fill="rgb(209,5,29)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="181.9" y="1781" width="0.2" height="15.0" fill="rgb(211,107,6)" rx="2" ry="2" />
<text  x="184.94" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="230.7" y="1829" width="0.6" height="15.0" fill="rgb(249,121,36)" rx="2" ry="2" />
<text  x="233.73" y="1839.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="196.6" y="1941" width="0.2" height="15.0" fill="rgb(219,216,30)" rx="2" ry="2" />
<text  x="199.62" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (6 samples, 0.10%)</title><rect x="202.6" y="2021" width="1.2" height="15.0" fill="rgb(217,177,40)" rx="2" ry="2" />
<text  x="205.57" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="578.4" y="1925" width="0.2" height="15.0" fill="rgb(254,151,27)" rx="2" ry="2" />
<text  x="581.38" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="235.7" y="1781" width="0.2" height="15.0" fill="rgb(254,191,0)" rx="2" ry="2" />
<text  x="238.69" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (2 samples, 0.03%)</title><rect x="172.2" y="1941" width="0.4" height="15.0" fill="rgb(238,79,8)" rx="2" ry="2" />
<text  x="175.23" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="655.9" y="1989" width="0.2" height="15.0" fill="rgb(251,101,45)" rx="2" ry="2" />
<text  x="658.93" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="652.8" y="2005" width="0.5" height="15.0" fill="rgb(230,197,29)" rx="2" ry="2" />
<text  x="655.75" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="167.5" y="1941" width="0.2" height="15.0" fill="rgb(254,72,2)" rx="2" ry="2" />
<text  x="170.47" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1131.9" y="1973" width="0.2" height="15.0" fill="rgb(214,132,19)" rx="2" ry="2" />
<text  x="1134.89" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="282.5" y="1461" width="0.2" height="15.0" fill="rgb(228,70,44)" rx="2" ry="2" />
<text  x="285.49" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.13%)</title><rect x="477.8" y="1941" width="1.6" height="15.0" fill="rgb(231,151,52)" rx="2" ry="2" />
<text  x="480.84" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (3 samples, 0.05%)</title><rect x="653.3" y="2037" width="0.6" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="656.35" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="244.2" y="1797" width="0.2" height="15.0" fill="rgb(220,120,49)" rx="2" ry="2" />
<text  x="247.22" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="364.4" y="1973" width="0.4" height="15.0" fill="rgb(213,183,40)" rx="2" ry="2" />
<text  x="367.40" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1015.5" y="1989" width="0.2" height="15.0" fill="rgb(248,162,52)" rx="2" ry="2" />
<text  x="1018.48" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (43 samples, 0.72%)</title><rect x="75.4" y="53" width="8.6" height="15.0" fill="rgb(242,167,10)" rx="2" ry="2" />
<text  x="78.45" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="166.5" y="1973" width="0.4" height="15.0" fill="rgb(239,58,6)" rx="2" ry="2" />
<text  x="169.47" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="277" width="45.0" height="15.0" fill="rgb(228,212,24)" rx="2" ry="2" />
<text  x="53.85" y="287.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="173.2" y="1909" width="0.2" height="15.0" fill="rgb(242,164,25)" rx="2" ry="2" />
<text  x="176.22" y="1919.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="256.3" y="1877" width="0.2" height="15.0" fill="rgb(229,183,23)" rx="2" ry="2" />
<text  x="259.31" y="1887.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (3 samples, 0.05%)</title><rect x="1083.5" y="1877" width="0.6" height="15.0" fill="rgb(230,84,25)" rx="2" ry="2" />
<text  x="1086.50" y="1887.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="114.1" y="1829" width="0.2" height="15.0" fill="rgb(209,73,6)" rx="2" ry="2" />
<text  x="117.12" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (10 samples, 0.17%)</title><rect x="38.2" y="1957" width="1.9" height="15.0" fill="rgb(238,84,26)" rx="2" ry="2" />
<text  x="41.16" y="1967.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="96.7" y="1637" width="0.2" height="15.0" fill="rgb(208,143,26)" rx="2" ry="2" />
<text  x="99.67" y="1647.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="253.1" y="1605" width="0.2" height="15.0" fill="rgb(224,201,37)" rx="2" ry="2" />
<text  x="256.14" y="1615.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="79.4" y="37" width="0.2" height="15.0" fill="rgb(213,102,3)" rx="2" ry="2" />
<text  x="82.41" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="198.8" y="1749" width="0.2" height="15.0" fill="rgb(234,199,48)" rx="2" ry="2" />
<text  x="201.80" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1083.7" y="1685" width="0.2" height="15.0" fill="rgb(210,225,6)" rx="2" ry="2" />
<text  x="1086.70" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="581.8" y="1733" width="0.2" height="15.0" fill="rgb(209,130,40)" rx="2" ry="2" />
<text  x="584.75" y="1743.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1059.9" y="1573" width="0.2" height="15.0" fill="rgb(206,156,34)" rx="2" ry="2" />
<text  x="1062.90" y="1583.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="287.6" y="1653" width="0.2" height="15.0" fill="rgb(247,44,13)" rx="2" ry="2" />
<text  x="290.65" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1042.6" y="1781" width="0.4" height="15.0" fill="rgb(253,188,46)" rx="2" ry="2" />
<text  x="1045.65" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="190.7" y="1829" width="0.2" height="15.0" fill="rgb(236,99,20)" rx="2" ry="2" />
<text  x="193.67" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="261.9" y="1429" width="0.2" height="15.0" fill="rgb(240,85,19)" rx="2" ry="2" />
<text  x="264.87" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="638.7" y="2037" width="0.4" height="15.0" fill="rgb(206,53,8)" rx="2" ry="2" />
<text  x="641.67" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="643.6" y="1989" width="0.4" height="15.0" fill="rgb(230,54,36)" rx="2" ry="2" />
<text  x="646.63" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="258.3" y="1685" width="0.2" height="15.0" fill="rgb(210,209,34)" rx="2" ry="2" />
<text  x="261.30" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (29 samples, 0.49%)</title><rect x="192.3" y="2005" width="5.7" height="15.0" fill="rgb(233,216,31)" rx="2" ry="2" />
<text  x="195.26" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (21 samples, 0.35%)</title><rect x="574.0" y="1957" width="4.2" height="15.0" fill="rgb(241,79,54)" rx="2" ry="2" />
<text  x="577.02" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="539.7" y="1989" width="0.4" height="15.0" fill="rgb(214,196,17)" rx="2" ry="2" />
<text  x="542.71" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="301.9" y="1829" width="0.2" height="15.0" fill="rgb(216,92,34)" rx="2" ry="2" />
<text  x="304.93" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="469" width="45.2" height="15.0" fill="rgb(225,25,43)" rx="2" ry="2" />
<text  x="53.85" y="479.5" >[unk..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="235.7" y="1669" width="0.2" height="15.0" fill="rgb(206,56,1)" rx="2" ry="2" />
<text  x="238.69" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="365.8" y="1957" width="0.2" height="15.0" fill="rgb(226,127,43)" rx="2" ry="2" />
<text  x="368.78" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="236.7" y="1829" width="0.2" height="15.0" fill="rgb(248,83,5)" rx="2" ry="2" />
<text  x="239.68" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (2 samples, 0.03%)</title><rect x="816.8" y="2005" width="0.4" height="15.0" fill="rgb(249,96,36)" rx="2" ry="2" />
<text  x="819.76" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="255.5" y="1733" width="0.2" height="15.0" fill="rgb(234,144,36)" rx="2" ry="2" />
<text  x="258.52" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="176.2" y="1893" width="0.2" height="15.0" fill="rgb(210,76,33)" rx="2" ry="2" />
<text  x="179.19" y="1903.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (2 samples, 0.03%)</title><rect x="20.1" y="1989" width="0.4" height="15.0" fill="rgb(217,182,33)" rx="2" ry="2" />
<text  x="23.11" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="200.8" y="1925" width="0.2" height="15.0" fill="rgb(231,51,49)" rx="2" ry="2" />
<text  x="203.78" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="95.9" y="213" width="0.2" height="15.0" fill="rgb(236,61,2)" rx="2" ry="2" />
<text  x="98.87" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="114.1" y="1973" width="0.2" height="15.0" fill="rgb(254,71,21)" rx="2" ry="2" />
<text  x="117.12" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="478.6" y="1909" width="0.4" height="15.0" fill="rgb(208,27,40)" rx="2" ry="2" />
<text  x="481.63" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1093.4" y="1781" width="0.2" height="15.0" fill="rgb(242,158,18)" rx="2" ry="2" />
<text  x="1096.42" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="809.2" y="1973" width="0.4" height="15.0" fill="rgb(244,217,54)" rx="2" ry="2" />
<text  x="812.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (1 samples, 0.02%)</title><rect x="638.9" y="2005" width="0.2" height="15.0" fill="rgb(214,34,25)" rx="2" ry="2" />
<text  x="641.87" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="858.0" y="1973" width="0.2" height="15.0" fill="rgb(240,145,38)" rx="2" ry="2" />
<text  x="861.01" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="63.7" y="37" width="0.2" height="15.0" fill="rgb(239,163,34)" rx="2" ry="2" />
<text  x="66.74" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (16 samples, 0.27%)</title><rect x="161.9" y="1989" width="3.2" height="15.0" fill="rgb(254,59,22)" rx="2" ry="2" />
<text  x="164.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.74%)</title><rect x="365.8" y="2005" width="8.7" height="15.0" fill="rgb(254,219,42)" rx="2" ry="2" />
<text  x="368.78" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="283.9" y="1701" width="0.2" height="15.0" fill="rgb(246,108,21)" rx="2" ry="2" />
<text  x="286.88" y="1711.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="288.8" y="1605" width="0.2" height="15.0" fill="rgb(238,192,13)" rx="2" ry="2" />
<text  x="291.84" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1042.6" y="1717" width="0.4" height="15.0" fill="rgb(217,68,21)" rx="2" ry="2" />
<text  x="1045.65" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="627.6" y="1925" width="0.2" height="15.0" fill="rgb(210,23,46)" rx="2" ry="2" />
<text  x="630.57" y="1935.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="344.0" y="1925" width="0.2" height="15.0" fill="rgb(254,149,3)" rx="2" ry="2" />
<text  x="346.97" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="182.9" y="2021" width="0.2" height="15.0" fill="rgb(240,3,26)" rx="2" ry="2" />
<text  x="185.93" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="96.7" y="1813" width="0.2" height="15.0" fill="rgb(221,68,18)" rx="2" ry="2" />
<text  x="99.67" y="1823.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="19.3" y="1957" width="0.2" height="15.0" fill="rgb(228,124,35)" rx="2" ry="2" />
<text  x="22.32" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4 samples, 0.07%)</title><rect x="39.2" y="1797" width="0.7" height="15.0" fill="rgb(236,125,41)" rx="2" ry="2" />
<text  x="42.15" y="1807.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="114.1" y="1909" width="0.2" height="15.0" fill="rgb(244,148,20)" rx="2" ry="2" />
<text  x="117.12" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="254.5" y="1781" width="0.2" height="15.0" fill="rgb(233,120,0)" rx="2" ry="2" />
<text  x="257.53" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="1131.9" y="1941" width="0.2" height="15.0" fill="rgb(241,76,14)" rx="2" ry="2" />
<text  x="1134.89" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="15.4" y="1989" width="0.2" height="15.0" fill="rgb(228,91,7)" rx="2" ry="2" />
<text  x="18.35" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="644.0" y="1989" width="0.4" height="15.0" fill="rgb(230,225,40)" rx="2" ry="2" />
<text  x="647.03" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="241.0" y="1637" width="0.2" height="15.0" fill="rgb(238,146,25)" rx="2" ry="2" />
<text  x="244.04" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (11 samples, 0.18%)</title><rect x="549.6" y="1989" width="2.2" height="15.0" fill="rgb(222,228,1)" rx="2" ry="2" />
<text  x="552.63" y="1999.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1159.9" y="1765" width="0.2" height="15.0" fill="rgb(253,210,52)" rx="2" ry="2" />
<text  x="1162.86" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1159.9" y="1829" width="0.2" height="15.0" fill="rgb(215,30,53)" rx="2" ry="2" />
<text  x="1162.86" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="652.0" y="2021" width="0.6" height="15.0" fill="rgb(219,116,5)" rx="2" ry="2" />
<text  x="654.96" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (6 samples, 0.10%)</title><rect x="88.7" y="37" width="1.2" height="15.0" fill="rgb(251,140,37)" rx="2" ry="2" />
<text  x="91.73" y="47.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="261.3" y="1653" width="0.2" height="15.0" fill="rgb(233,207,25)" rx="2" ry="2" />
<text  x="264.27" y="1663.5" ></text>
</g>
<g >
<title>tcp_push (184 samples, 3.09%)</title><rect x="256.5" y="1877" width="36.5" height="15.0" fill="rgb(254,41,53)" rx="2" ry="2" />
<text  x="259.51" y="1887.5" >tcp..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="871.7" y="2037" width="0.4" height="15.0" fill="rgb(243,122,18)" rx="2" ry="2" />
<text  x="874.70" y="2047.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="373.5" y="1925" width="0.6" height="15.0" fill="rgb(238,80,43)" rx="2" ry="2" />
<text  x="376.52" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1159.9" y="1845" width="0.2" height="15.0" fill="rgb(242,57,38)" rx="2" ry="2" />
<text  x="1162.86" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="254.5" y="1749" width="0.2" height="15.0" fill="rgb(239,222,50)" rx="2" ry="2" />
<text  x="257.53" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="114.1" y="1893" width="0.2" height="15.0" fill="rgb(239,125,45)" rx="2" ry="2" />
<text  x="117.12" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1042.8" y="1685" width="0.2" height="15.0" fill="rgb(210,136,29)" rx="2" ry="2" />
<text  x="1045.85" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (5 samples, 0.08%)</title><rect x="639.1" y="1989" width="1.0" height="15.0" fill="rgb(210,102,21)" rx="2" ry="2" />
<text  x="642.07" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1073.6" y="1797" width="0.4" height="15.0" fill="rgb(213,87,13)" rx="2" ry="2" />
<text  x="1076.59" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="869.1" y="1973" width="1.4" height="15.0" fill="rgb(238,71,11)" rx="2" ry="2" />
<text  x="872.12" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="85.8" y="37" width="0.2" height="15.0" fill="rgb(221,67,29)" rx="2" ry="2" />
<text  x="88.76" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (8 samples, 0.13%)</title><rect x="380.1" y="1973" width="1.6" height="15.0" fill="rgb(205,223,39)" rx="2" ry="2" />
<text  x="383.06" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1173.7" y="2053" width="0.8" height="15.0" fill="rgb(248,181,35)" rx="2" ry="2" />
<text  x="1176.74" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="253.1" y="1861" width="0.2" height="15.0" fill="rgb(213,99,12)" rx="2" ry="2" />
<text  x="256.14" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="311.6" y="1589" width="0.2" height="15.0" fill="rgb(208,185,29)" rx="2" ry="2" />
<text  x="314.64" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="251.9" y="1765" width="0.2" height="15.0" fill="rgb(247,175,20)" rx="2" ry="2" />
<text  x="254.95" y="1775.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="182.3" y="2005" width="0.4" height="15.0" fill="rgb(241,174,29)" rx="2" ry="2" />
<text  x="185.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (10 samples, 0.17%)</title><rect x="395.3" y="2037" width="2.0" height="15.0" fill="rgb(219,60,23)" rx="2" ry="2" />
<text  x="398.33" y="2047.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="932.4" y="1957" width="4.7" height="15.0" fill="rgb(231,2,11)" rx="2" ry="2" />
<text  x="935.38" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1071.4" y="1813" width="0.4" height="15.0" fill="rgb(249,12,47)" rx="2" ry="2" />
<text  x="1074.41" y="1823.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (70 samples, 1.18%)</title><rect x="916.9" y="1973" width="13.9" height="15.0" fill="rgb(239,66,0)" rx="2" ry="2" />
<text  x="919.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1042.6" y="1573" width="0.2" height="15.0" fill="rgb(251,26,30)" rx="2" ry="2" />
<text  x="1045.65" y="1583.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (13 samples, 0.22%)</title><rect x="537.1" y="1973" width="2.6" height="15.0" fill="rgb(221,128,45)" rx="2" ry="2" />
<text  x="540.13" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="252.9" y="1861" width="0.2" height="15.0" fill="rgb(208,102,13)" rx="2" ry="2" />
<text  x="255.94" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1143.8" y="1893" width="0.2" height="15.0" fill="rgb(214,104,18)" rx="2" ry="2" />
<text  x="1146.79" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="250.2" y="1829" width="0.2" height="15.0" fill="rgb(223,125,34)" rx="2" ry="2" />
<text  x="253.16" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="230.7" y="1861" width="0.6" height="15.0" fill="rgb(221,112,14)" rx="2" ry="2" />
<text  x="233.73" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4,928 samples, 82.82%)</title><rect x="40.1" y="2053" width="977.4" height="15.0" fill="rgb(227,218,7)" rx="2" ry="2" />
<text  x="43.14" y="2063.5" >[unknown]</text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="333.7" y="1941" width="0.6" height="15.0" fill="rgb(220,227,17)" rx="2" ry="2" />
<text  x="336.66" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (37 samples, 0.62%)</title><rect x="858.6" y="2005" width="7.3" height="15.0" fill="rgb(250,56,53)" rx="2" ry="2" />
<text  x="861.61" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1989" width="0.4" height="15.0" fill="rgb(213,176,38)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="405" width="45.0" height="15.0" fill="rgb(233,229,24)" rx="2" ry="2" />
<text  x="53.85" y="415.5" >[unk..</text>
</g>
<g >
<title>pthread_self@plt (2 samples, 0.03%)</title><rect x="1131.3" y="1957" width="0.4" height="15.0" fill="rgb(247,175,45)" rx="2" ry="2" />
<text  x="1134.30" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="197" width="0.2" height="15.0" fill="rgb(206,188,18)" rx="2" ry="2" />
<text  x="98.67" y="207.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1095.4" y="2021" width="0.2" height="15.0" fill="rgb(237,75,38)" rx="2" ry="2" />
<text  x="1098.40" y="2031.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="306.7" y="1909" width="0.2" height="15.0" fill="rgb(239,101,0)" rx="2" ry="2" />
<text  x="309.69" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (12 samples, 0.20%)</title><rect x="632.1" y="2005" width="2.4" height="15.0" fill="rgb(208,55,9)" rx="2" ry="2" />
<text  x="635.13" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (13 samples, 0.22%)</title><rect x="608.5" y="1973" width="2.6" height="15.0" fill="rgb(214,147,21)" rx="2" ry="2" />
<text  x="611.53" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="798.7" y="1957" width="0.4" height="15.0" fill="rgb(218,48,45)" rx="2" ry="2" />
<text  x="801.72" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="230.7" y="1797" width="0.2" height="15.0" fill="rgb(247,78,25)" rx="2" ry="2" />
<text  x="233.73" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="306.7" y="1893" width="0.2" height="15.0" fill="rgb(236,153,43)" rx="2" ry="2" />
<text  x="309.69" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="12.6" y="2037" width="1.0" height="15.0" fill="rgb(228,106,38)" rx="2" ry="2" />
<text  x="15.58" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1143.8" y="1829" width="0.2" height="15.0" fill="rgb(243,86,41)" rx="2" ry="2" />
<text  x="1146.79" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="392.0" y="1925" width="0.2" height="15.0" fill="rgb(207,61,42)" rx="2" ry="2" />
<text  x="394.96" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (7 samples, 0.12%)</title><rect x="63.9" y="37" width="1.4" height="15.0" fill="rgb(211,182,23)" rx="2" ry="2" />
<text  x="66.94" y="47.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="288.0" y="1685" width="0.2" height="15.0" fill="rgb(241,111,52)" rx="2" ry="2" />
<text  x="291.04" y="1695.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="726.7" y="1909" width="0.4" height="15.0" fill="rgb(229,194,47)" rx="2" ry="2" />
<text  x="729.73" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="580.0" y="1893" width="0.2" height="15.0" fill="rgb(233,56,47)" rx="2" ry="2" />
<text  x="582.97" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="252.9" y="1701" width="0.2" height="15.0" fill="rgb(219,4,5)" rx="2" ry="2" />
<text  x="255.94" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="181.9" y="1733" width="0.2" height="15.0" fill="rgb(226,12,46)" rx="2" ry="2" />
<text  x="184.94" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (1 samples, 0.02%)</title><rect x="183.1" y="2021" width="0.2" height="15.0" fill="rgb(226,191,46)" rx="2" ry="2" />
<text  x="186.13" y="2031.5" ></text>
</g>
<g >
<title>__fdget (17 samples, 0.29%)</title><rect x="298.4" y="1941" width="3.3" height="15.0" fill="rgb(238,23,16)" rx="2" ry="2" />
<text  x="301.36" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="202.4" y="2005" width="0.2" height="15.0" fill="rgb(252,89,24)" rx="2" ry="2" />
<text  x="205.37" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="1071.4" y="1845" width="0.4" height="15.0" fill="rgb(239,67,35)" rx="2" ry="2" />
<text  x="1074.41" y="1855.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="654.9" y="2005" width="0.4" height="15.0" fill="rgb(214,100,43)" rx="2" ry="2" />
<text  x="657.93" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="628.2" y="1957" width="0.6" height="15.0" fill="rgb(228,83,46)" rx="2" ry="2" />
<text  x="631.16" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1909" width="45.2" height="15.0" fill="rgb(206,165,12)" rx="2" ry="2" />
<text  x="53.85" y="1919.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="192.7" y="1973" width="0.2" height="15.0" fill="rgb(220,114,26)" rx="2" ry="2" />
<text  x="195.65" y="1983.5" ></text>
</g>
<g >
<title>__free_pages (2 samples, 0.03%)</title><rect x="1059.3" y="1765" width="0.4" height="15.0" fill="rgb(233,135,51)" rx="2" ry="2" />
<text  x="1062.31" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="543.5" y="1781" width="0.2" height="15.0" fill="rgb(245,56,38)" rx="2" ry="2" />
<text  x="546.48" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="913.9" y="1973" width="1.0" height="15.0" fill="rgb(242,116,25)" rx="2" ry="2" />
<text  x="916.94" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="373.9" y="1909" width="0.2" height="15.0" fill="rgb(215,7,38)" rx="2" ry="2" />
<text  x="376.92" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="584.9" y="2005" width="1.2" height="15.0" fill="rgb(245,22,53)" rx="2" ry="2" />
<text  x="587.93" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (26 samples, 0.44%)</title><rect x="283.1" y="1733" width="5.1" height="15.0" fill="rgb(206,64,24)" rx="2" ry="2" />
<text  x="286.09" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="549" width="45.2" height="15.0" fill="rgb(210,104,3)" rx="2" ry="2" />
<text  x="53.85" y="559.5" >[unk..</text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1034.1" y="1893" width="0.2" height="15.0" fill="rgb(218,94,49)" rx="2" ry="2" />
<text  x="1037.12" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="937.7" y="1925" width="0.2" height="15.0" fill="rgb(248,71,12)" rx="2" ry="2" />
<text  x="940.74" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="235.7" y="1813" width="0.2" height="15.0" fill="rgb(234,62,6)" rx="2" ry="2" />
<text  x="238.69" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (82 samples, 1.38%)</title><rect x="334.5" y="1989" width="16.2" height="15.0" fill="rgb(209,39,32)" rx="2" ry="2" />
<text  x="337.45" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="294.8" y="1733" width="0.2" height="15.0" fill="rgb(241,33,33)" rx="2" ry="2" />
<text  x="297.79" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="230.5" y="1909" width="0.8" height="15.0" fill="rgb(215,30,49)" rx="2" ry="2" />
<text  x="233.53" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="577.4" y="1765" width="0.2" height="15.0" fill="rgb(230,9,1)" rx="2" ry="2" />
<text  x="580.39" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="733.3" y="1925" width="0.6" height="15.0" fill="rgb(230,92,27)" rx="2" ry="2" />
<text  x="736.27" y="1935.5" ></text>
</g>
<g >
<title>tcp_current_mss (13 samples, 0.22%)</title><rect x="293.4" y="1861" width="2.6" height="15.0" fill="rgb(250,102,2)" rx="2" ry="2" />
<text  x="296.40" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="543.5" y="1717" width="0.2" height="15.0" fill="rgb(227,7,41)" rx="2" ry="2" />
<text  x="546.48" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (115 samples, 1.93%)</title><rect x="458.0" y="1989" width="22.8" height="15.0" fill="rgb(224,123,44)" rx="2" ry="2" />
<text  x="461.00" y="1999.5" >f..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="238.1" y="1909" width="0.2" height="15.0" fill="rgb(243,210,0)" rx="2" ry="2" />
<text  x="241.07" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (110 samples, 1.85%)</title><rect x="261.3" y="1717" width="21.8" height="15.0" fill="rgb(233,64,19)" rx="2" ry="2" />
<text  x="264.27" y="1727.5" >d..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (4 samples, 0.07%)</title><rect x="602.6" y="1973" width="0.8" height="15.0" fill="rgb(208,27,36)" rx="2" ry="2" />
<text  x="605.58" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (11 samples, 0.18%)</title><rect x="320.4" y="1941" width="2.2" height="15.0" fill="rgb(242,62,26)" rx="2" ry="2" />
<text  x="323.37" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="84.0" y="53" width="0.4" height="15.0" fill="rgb(244,28,24)" rx="2" ry="2" />
<text  x="86.97" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="95.9" y="309" width="0.2" height="15.0" fill="rgb(244,2,33)" rx="2" ry="2" />
<text  x="98.87" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="176.0" y="1909" width="0.2" height="15.0" fill="rgb(218,205,42)" rx="2" ry="2" />
<text  x="178.99" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.4" y="1925" width="0.8" height="15.0" fill="rgb(254,47,51)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="119.9" y="1941" width="0.2" height="15.0" fill="rgb(219,161,3)" rx="2" ry="2" />
<text  x="122.87" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="297.4" y="1813" width="0.4" height="15.0" fill="rgb(247,60,33)" rx="2" ry="2" />
<text  x="300.36" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="302.9" y="1989" width="0.8" height="15.0" fill="rgb(213,28,19)" rx="2" ry="2" />
<text  x="305.92" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="894.1" y="2005" width="0.2" height="15.0" fill="rgb(236,16,4)" rx="2" ry="2" />
<text  x="897.11" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="301.3" y="1685" width="0.4" height="15.0" fill="rgb(239,95,31)" rx="2" ry="2" />
<text  x="304.33" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (2 samples, 0.03%)</title><rect x="519.5" y="2037" width="0.4" height="15.0" fill="rgb(247,54,39)" rx="2" ry="2" />
<text  x="522.48" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="736.4" y="1957" width="0.2" height="15.0" fill="rgb(240,53,40)" rx="2" ry="2" />
<text  x="739.44" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1072.4" y="1605" width="0.2" height="15.0" fill="rgb(233,27,43)" rx="2" ry="2" />
<text  x="1075.40" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="798.9" y="1781" width="0.2" height="15.0" fill="rgb(238,84,4)" rx="2" ry="2" />
<text  x="801.91" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1059.7" y="1701" width="0.4" height="15.0" fill="rgb(247,52,6)" rx="2" ry="2" />
<text  x="1062.70" y="1711.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1015.5" y="1941" width="0.2" height="15.0" fill="rgb(254,157,19)" rx="2" ry="2" />
<text  x="1018.48" y="1951.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1083.7" y="1461" width="0.2" height="15.0" fill="rgb(230,99,45)" rx="2" ry="2" />
<text  x="1086.70" y="1471.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="95.9" y="133" width="0.2" height="15.0" fill="rgb(224,104,33)" rx="2" ry="2" />
<text  x="98.87" y="143.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (11 samples, 0.18%)</title><rect x="84.4" y="53" width="2.2" height="15.0" fill="rgb(236,85,6)" rx="2" ry="2" />
<text  x="87.37" y="63.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="577.4" y="1781" width="0.2" height="15.0" fill="rgb(210,22,48)" rx="2" ry="2" />
<text  x="580.39" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="311.6" y="1637" width="0.2" height="15.0" fill="rgb(215,117,9)" rx="2" ry="2" />
<text  x="314.64" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="185.9" y="1973" width="0.2" height="15.0" fill="rgb(220,102,1)" rx="2" ry="2" />
<text  x="188.91" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="402.5" y="1989" width="0.6" height="15.0" fill="rgb(232,29,4)" rx="2" ry="2" />
<text  x="405.47" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (8 samples, 0.13%)</title><rect x="380.1" y="1989" width="1.6" height="15.0" fill="rgb(207,90,2)" rx="2" ry="2" />
<text  x="383.06" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (11 samples, 0.18%)</title><rect x="727.1" y="1973" width="2.2" height="15.0" fill="rgb(239,201,52)" rx="2" ry="2" />
<text  x="730.12" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="294.6" y="1797" width="0.4" height="15.0" fill="rgb(207,170,23)" rx="2" ry="2" />
<text  x="297.59" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.6" y="1941" width="0.2" height="15.0" fill="rgb(249,123,17)" rx="2" ry="2" />
<text  x="630.57" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="390.4" y="1925" width="0.2" height="15.0" fill="rgb(227,55,18)" rx="2" ry="2" />
<text  x="393.38" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="590.5" y="1989" width="0.2" height="15.0" fill="rgb(205,35,0)" rx="2" ry="2" />
<text  x="593.48" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="543.3" y="1909" width="0.2" height="15.0" fill="rgb(235,208,45)" rx="2" ry="2" />
<text  x="546.28" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="290.2" y="1797" width="0.6" height="15.0" fill="rgb(227,144,31)" rx="2" ry="2" />
<text  x="293.23" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1093.2" y="1973" width="0.4" height="15.0" fill="rgb(206,168,36)" rx="2" ry="2" />
<text  x="1096.22" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="298.2" y="1861" width="0.2" height="15.0" fill="rgb(222,134,8)" rx="2" ry="2" />
<text  x="301.16" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1145.6" y="1877" width="0.2" height="15.0" fill="rgb(229,122,39)" rx="2" ry="2" />
<text  x="1148.58" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="382.2" y="2005" width="0.6" height="15.0" fill="rgb(221,127,46)" rx="2" ry="2" />
<text  x="385.25" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1,010 samples, 16.97%)</title><rect x="654.5" y="2037" width="200.3" height="15.0" fill="rgb(238,116,7)" rx="2" ry="2" />
<text  x="657.54" y="2047.5" >facebook::memcache::thrift..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="258.3" y="1589" width="0.2" height="15.0" fill="rgb(242,40,32)" rx="2" ry="2" />
<text  x="261.30" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1083.7" y="1653" width="0.2" height="15.0" fill="rgb(209,28,37)" rx="2" ry="2" />
<text  x="1086.70" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1059.7" y="1813" width="0.4" height="15.0" fill="rgb(233,13,30)" rx="2" ry="2" />
<text  x="1062.70" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1105.1" y="1941" width="0.2" height="15.0" fill="rgb(249,71,50)" rx="2" ry="2" />
<text  x="1108.12" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="883.8" y="2037" width="0.2" height="15.0" fill="rgb(220,32,23)" rx="2" ry="2" />
<text  x="886.79" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="515.7" y="2021" width="0.2" height="15.0" fill="rgb(209,125,13)" rx="2" ry="2" />
<text  x="518.71" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1073.6" y="1813" width="0.4" height="15.0" fill="rgb(240,176,33)" rx="2" ry="2" />
<text  x="1076.59" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (3 samples, 0.05%)</title><rect x="578.2" y="1957" width="0.6" height="15.0" fill="rgb(237,186,48)" rx="2" ry="2" />
<text  x="581.18" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (3 samples, 0.05%)</title><rect x="653.9" y="2037" width="0.6" height="15.0" fill="rgb(245,58,48)" rx="2" ry="2" />
<text  x="656.94" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="190.7" y="1989" width="0.2" height="15.0" fill="rgb(232,196,18)" rx="2" ry="2" />
<text  x="193.67" y="1999.5" ></text>
</g>
<g >
<title>_copy_to_iter (6 samples, 0.10%)</title><rect x="1079.3" y="1909" width="1.2" height="15.0" fill="rgb(212,101,33)" rx="2" ry="2" />
<text  x="1082.34" y="1919.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.03%)</title><rect x="1083.7" y="1829" width="0.4" height="15.0" fill="rgb(206,134,35)" rx="2" ry="2" />
<text  x="1086.70" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="166.9" y="1973" width="0.6" height="15.0" fill="rgb(244,120,19)" rx="2" ry="2" />
<text  x="169.87" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="294.8" y="1669" width="0.2" height="15.0" fill="rgb(222,78,8)" rx="2" ry="2" />
<text  x="297.79" y="1679.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="95.9" y="117" width="0.2" height="15.0" fill="rgb(251,224,39)" rx="2" ry="2" />
<text  x="98.87" y="127.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1042.6" y="1669" width="0.2" height="15.0" fill="rgb(237,223,24)" rx="2" ry="2" />
<text  x="1045.65" y="1679.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="1078.7" y="1909" width="0.6" height="15.0" fill="rgb(252,120,30)" rx="2" ry="2" />
<text  x="1081.74" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="366.2" y="1925" width="0.2" height="15.0" fill="rgb(247,102,23)" rx="2" ry="2" />
<text  x="369.18" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="597" width="45.2" height="15.0" fill="rgb(234,139,1)" rx="2" ry="2" />
<text  x="53.85" y="607.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="857.8" y="1989" width="0.8" height="15.0" fill="rgb(212,198,18)" rx="2" ry="2" />
<text  x="860.82" y="1999.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="12.6" y="1925" width="1.0" height="15.0" fill="rgb(231,182,50)" rx="2" ry="2" />
<text  x="15.58" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="724.9" y="1909" width="0.4" height="15.0" fill="rgb(234,148,16)" rx="2" ry="2" />
<text  x="727.94" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1059.7" y="1829" width="0.4" height="15.0" fill="rgb(247,62,12)" rx="2" ry="2" />
<text  x="1062.70" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="213.7" y="1893" width="0.2" height="15.0" fill="rgb(223,217,29)" rx="2" ry="2" />
<text  x="216.67" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="311.0" y="1877" width="0.2" height="15.0" fill="rgb(206,215,19)" rx="2" ry="2" />
<text  x="314.05" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="643.6" y="2005" width="2.0" height="15.0" fill="rgb(209,143,51)" rx="2" ry="2" />
<text  x="646.63" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="310.3" y="1765" width="0.2" height="15.0" fill="rgb(222,51,48)" rx="2" ry="2" />
<text  x="313.26" y="1775.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1187.8" y="1893" width="0.8" height="15.0" fill="rgb(254,117,9)" rx="2" ry="2" />
<text  x="1190.82" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1102.9" y="1989" width="0.2" height="15.0" fill="rgb(233,67,22)" rx="2" ry="2" />
<text  x="1105.94" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 0.10%)</title><rect x="361.4" y="1941" width="1.2" height="15.0" fill="rgb(233,74,25)" rx="2" ry="2" />
<text  x="364.42" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="683.1" y="1893" width="0.6" height="15.0" fill="rgb(252,38,24)" rx="2" ry="2" />
<text  x="686.10" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="576.8" y="1781" width="0.2" height="15.0" fill="rgb(216,129,17)" rx="2" ry="2" />
<text  x="579.80" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="1016.5" y="1989" width="0.8" height="15.0" fill="rgb(214,92,10)" rx="2" ry="2" />
<text  x="1019.47" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="476.2" y="1909" width="1.0" height="15.0" fill="rgb(228,102,44)" rx="2" ry="2" />
<text  x="479.25" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="579.4" y="1813" width="0.4" height="15.0" fill="rgb(244,22,2)" rx="2" ry="2" />
<text  x="582.37" y="1823.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_cpu (1 samples, 0.02%)</title><rect x="174.8" y="1797" width="0.2" height="15.0" fill="rgb(229,32,15)" rx="2" ry="2" />
<text  x="177.80" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="596.6" y="1973" width="0.8" height="15.0" fill="rgb(232,24,21)" rx="2" ry="2" />
<text  x="599.63" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1082.9" y="1893" width="0.2" height="15.0" fill="rgb(221,229,10)" rx="2" ry="2" />
<text  x="1085.91" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2 samples, 0.03%)</title><rect x="675.2" y="1925" width="0.4" height="15.0" fill="rgb(222,133,42)" rx="2" ry="2" />
<text  x="678.16" y="1935.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="1083.7" y="1765" width="0.2" height="15.0" fill="rgb(211,16,17)" rx="2" ry="2" />
<text  x="1086.70" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (18 samples, 0.30%)</title><rect x="1069.8" y="1877" width="3.6" height="15.0" fill="rgb(238,59,34)" rx="2" ry="2" />
<text  x="1072.82" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="91.7" y="37" width="0.4" height="15.0" fill="rgb(245,142,19)" rx="2" ry="2" />
<text  x="94.71" y="47.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (3 samples, 0.05%)</title><rect x="321.8" y="1909" width="0.6" height="15.0" fill="rgb(230,38,50)" rx="2" ry="2" />
<text  x="324.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1065.9" y="1605" width="0.2" height="15.0" fill="rgb(247,226,19)" rx="2" ry="2" />
<text  x="1068.85" y="1615.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1065.9" y="1573" width="0.2" height="15.0" fill="rgb(239,139,11)" rx="2" ry="2" />
<text  x="1068.85" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (8 samples, 0.13%)</title><rect x="815.2" y="2005" width="1.6" height="15.0" fill="rgb(209,161,33)" rx="2" ry="2" />
<text  x="818.18" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="302.9" y="1941" width="0.8" height="15.0" fill="rgb(220,31,54)" rx="2" ry="2" />
<text  x="305.92" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="251.9" y="1845" width="0.2" height="15.0" fill="rgb(250,145,26)" rx="2" ry="2" />
<text  x="254.95" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="18.1" y="1925" width="0.4" height="15.0" fill="rgb(213,78,37)" rx="2" ry="2" />
<text  x="21.13" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.08%)</title><rect x="577.2" y="1877" width="1.0" height="15.0" fill="rgb(248,122,20)" rx="2" ry="2" />
<text  x="580.19" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.6" y="1877" width="0.8" height="15.0" fill="rgb(236,169,20)" rx="2" ry="2" />
<text  x="14.59" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1072.4" y="1573" width="0.2" height="15.0" fill="rgb(239,119,50)" rx="2" ry="2" />
<text  x="1075.40" y="1583.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="237.9" y="1909" width="0.2" height="15.0" fill="rgb(213,211,8)" rx="2" ry="2" />
<text  x="240.87" y="1919.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="301.9" y="1717" width="0.2" height="15.0" fill="rgb(230,182,13)" rx="2" ry="2" />
<text  x="304.93" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="309.1" y="1781" width="0.2" height="15.0" fill="rgb(223,18,34)" rx="2" ry="2" />
<text  x="312.07" y="1791.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.6" y="1829" width="0.8" height="15.0" fill="rgb(217,92,15)" rx="2" ry="2" />
<text  x="14.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="821" width="45.2" height="15.0" fill="rgb(242,216,6)" rx="2" ry="2" />
<text  x="53.85" y="831.5" >[unk..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="175.0" y="1877" width="0.4" height="15.0" fill="rgb(247,115,22)" rx="2" ry="2" />
<text  x="178.00" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1103.9" y="1973" width="0.2" height="15.0" fill="rgb(243,215,6)" rx="2" ry="2" />
<text  x="1106.93" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="356.5" y="1941" width="1.2" height="15.0" fill="rgb(222,52,47)" rx="2" ry="2" />
<text  x="359.46" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="577.6" y="1845" width="0.6" height="15.0" fill="rgb(225,37,5)" rx="2" ry="2" />
<text  x="580.59" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="333.3" y="1973" width="0.4" height="15.0" fill="rgb(223,84,45)" rx="2" ry="2" />
<text  x="336.26" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (2 samples, 0.03%)</title><rect x="200.4" y="1941" width="0.4" height="15.0" fill="rgb(237,46,39)" rx="2" ry="2" />
<text  x="203.39" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="878.6" y="2021" width="0.6" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="881.64" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1143.8" y="1877" width="0.2" height="15.0" fill="rgb(250,127,36)" rx="2" ry="2" />
<text  x="1146.79" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="1042.3" y="1845" width="0.7" height="15.0" fill="rgb(235,132,27)" rx="2" ry="2" />
<text  x="1045.25" y="1855.5" ></text>
</g>
<g >
<title>skb_free_head (2 samples, 0.03%)</title><rect x="1038.9" y="1893" width="0.4" height="15.0" fill="rgb(245,222,2)" rx="2" ry="2" />
<text  x="1041.88" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="374.1" y="1925" width="0.2" height="15.0" fill="rgb(214,63,1)" rx="2" ry="2" />
<text  x="377.11" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (58 samples, 0.97%)</title><rect x="918.9" y="1957" width="11.5" height="15.0" fill="rgb(206,40,22)" rx="2" ry="2" />
<text  x="921.90" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="442.9" y="2005" width="0.2" height="15.0" fill="rgb(243,29,23)" rx="2" ry="2" />
<text  x="445.93" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="155.4" y="1941" width="0.2" height="15.0" fill="rgb(223,129,48)" rx="2" ry="2" />
<text  x="158.37" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="470.9" y="1909" width="0.2" height="15.0" fill="rgb(229,66,25)" rx="2" ry="2" />
<text  x="473.89" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="120.1" y="1957" width="0.2" height="15.0" fill="rgb(205,118,20)" rx="2" ry="2" />
<text  x="123.07" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="297.4" y="1861" width="0.4" height="15.0" fill="rgb(252,50,20)" rx="2" ry="2" />
<text  x="300.36" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="95.7" y="149" width="0.2" height="15.0" fill="rgb(225,127,29)" rx="2" ry="2" />
<text  x="98.67" y="159.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="1083.7" y="1813" width="0.4" height="15.0" fill="rgb(220,211,27)" rx="2" ry="2" />
<text  x="1086.70" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (16 samples, 0.27%)</title><rect x="185.3" y="2005" width="3.2" height="15.0" fill="rgb(238,121,27)" rx="2" ry="2" />
<text  x="188.31" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (24 samples, 0.40%)</title><rect x="443.9" y="1989" width="4.8" height="15.0" fill="rgb(217,63,52)" rx="2" ry="2" />
<text  x="446.92" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1072.4" y="1845" width="0.2" height="15.0" fill="rgb(235,95,43)" rx="2" ry="2" />
<text  x="1075.40" y="1855.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="949.2" y="1877" width="0.2" height="15.0" fill="rgb(247,196,27)" rx="2" ry="2" />
<text  x="952.24" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="50.9" y="101" width="44.6" height="15.0" fill="rgb(236,202,38)" rx="2" ry="2" />
<text  x="53.85" y="111.5" >[unk..</text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="39.5" y="1701" width="0.4" height="15.0" fill="rgb(249,125,11)" rx="2" ry="2" />
<text  x="42.55" y="1711.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="723.0" y="1893" width="0.2" height="15.0" fill="rgb(215,9,32)" rx="2" ry="2" />
<text  x="725.96" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="583.5" y="1941" width="0.6" height="15.0" fill="rgb(225,149,14)" rx="2" ry="2" />
<text  x="586.54" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="579.4" y="1845" width="0.4" height="15.0" fill="rgb(250,56,49)" rx="2" ry="2" />
<text  x="582.37" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1749" width="45.2" height="15.0" fill="rgb(205,61,48)" rx="2" ry="2" />
<text  x="53.85" y="1759.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.24%)</title><rect x="595.2" y="2005" width="2.8" height="15.0" fill="rgb(226,80,27)" rx="2" ry="2" />
<text  x="598.24" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (143 samples, 2.40%)</title><rect x="259.9" y="1765" width="28.3" height="15.0" fill="rgb(232,133,3)" rx="2" ry="2" />
<text  x="262.88" y="1775.5" >ip..</text>
</g>
<g >
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="583.9" y="1717" width="0.2" height="15.0" fill="rgb(253,52,29)" rx="2" ry="2" />
<text  x="586.94" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="724.5" y="1909" width="0.2" height="15.0" fill="rgb(235,120,2)" rx="2" ry="2" />
<text  x="727.54" y="1919.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1187.8" y="2005" width="0.8" height="15.0" fill="rgb(233,212,7)" rx="2" ry="2" />
<text  x="1190.82" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (21 samples, 0.35%)</title><rect x="1013.1" y="2037" width="4.2" height="15.0" fill="rgb(254,32,22)" rx="2" ry="2" />
<text  x="1016.10" y="2047.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="246.8" y="1861" width="0.2" height="15.0" fill="rgb(209,191,14)" rx="2" ry="2" />
<text  x="249.79" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.45%)</title><rect x="586.1" y="2005" width="5.4" height="15.0" fill="rgb(240,172,7)" rx="2" ry="2" />
<text  x="589.12" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="50.9" y="37" width="0.2" height="15.0" fill="rgb(213,216,1)" rx="2" ry="2" />
<text  x="53.85" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1072.4" y="1653" width="0.2" height="15.0" fill="rgb(213,142,9)" rx="2" ry="2" />
<text  x="1075.40" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="865.2" y="1925" width="0.2" height="15.0" fill="rgb(236,44,29)" rx="2" ry="2" />
<text  x="868.15" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1173" width="45.2" height="15.0" fill="rgb(227,148,25)" rx="2" ry="2" />
<text  x="53.85" y="1183.5" >[unk..</text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.3" y="1989" width="0.2" height="15.0" fill="rgb(227,217,3)" rx="2" ry="2" />
<text  x="940.34" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb (176 samples, 2.96%)</title><rect x="1032.9" y="1925" width="34.9" height="15.0" fill="rgb(245,126,18)" rx="2" ry="2" />
<text  x="1035.93" y="1935.5" >__..</text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="1150.7" y="2053" width="0.2" height="15.0" fill="rgb(247,171,28)" rx="2" ry="2" />
<text  x="1153.73" y="2063.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="297.8" y="1925" width="0.4" height="15.0" fill="rgb(207,227,9)" rx="2" ry="2" />
<text  x="300.76" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="258.3" y="1781" width="0.2" height="15.0" fill="rgb(226,21,19)" rx="2" ry="2" />
<text  x="261.30" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="186.1" y="1973" width="1.8" height="15.0" fill="rgb(209,69,51)" rx="2" ry="2" />
<text  x="189.11" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="235.7" y="1845" width="0.2" height="15.0" fill="rgb(252,183,20)" rx="2" ry="2" />
<text  x="238.69" y="1855.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="258.3" y="1493" width="0.2" height="15.0" fill="rgb(231,212,0)" rx="2" ry="2" />
<text  x="261.30" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="202.4" y="1813" width="0.2" height="15.0" fill="rgb(211,180,39)" rx="2" ry="2" />
<text  x="205.37" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="197.6" y="1941" width="0.4" height="15.0" fill="rgb(253,220,43)" rx="2" ry="2" />
<text  x="200.61" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1147.0" y="1957" width="0.2" height="15.0" fill="rgb(232,106,0)" rx="2" ry="2" />
<text  x="1149.96" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1072.4" y="1637" width="0.2" height="15.0" fill="rgb(218,3,19)" rx="2" ry="2" />
<text  x="1075.40" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="581.8" y="1845" width="0.2" height="15.0" fill="rgb(215,10,2)" rx="2" ry="2" />
<text  x="584.75" y="1855.5" ></text>
</g>
<g >
<title>std::function&lt;void  (7 samples, 0.12%)</title><rect x="393.4" y="2005" width="1.3" height="15.0" fill="rgb(218,72,41)" rx="2" ry="2" />
<text  x="396.35" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="294.6" y="1765" width="0.4" height="15.0" fill="rgb(236,179,11)" rx="2" ry="2" />
<text  x="297.59" y="1775.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="296.0" y="1925" width="0.2" height="15.0" fill="rgb(222,204,5)" rx="2" ry="2" />
<text  x="298.98" y="1935.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="698.0" y="1893" width="0.2" height="15.0" fill="rgb(250,30,41)" rx="2" ry="2" />
<text  x="700.97" y="1903.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1034.3" y="1797" width="0.2" height="15.0" fill="rgb(218,88,27)" rx="2" ry="2" />
<text  x="1037.32" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="95.1" y="53" width="0.4" height="15.0" fill="rgb(228,194,26)" rx="2" ry="2" />
<text  x="98.08" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="577.8" y="1717" width="0.2" height="15.0" fill="rgb(229,142,24)" rx="2" ry="2" />
<text  x="580.79" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="311.2" y="1877" width="0.6" height="15.0" fill="rgb(238,88,49)" rx="2" ry="2" />
<text  x="314.25" y="1887.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="388.8" y="1925" width="0.2" height="15.0" fill="rgb(227,42,28)" rx="2" ry="2" />
<text  x="391.79" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (4 samples, 0.07%)</title><rect x="960.3" y="1877" width="0.8" height="15.0" fill="rgb(234,46,3)" rx="2" ry="2" />
<text  x="963.35" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1861" width="0.2" height="15.0" fill="rgb(244,59,54)" rx="2" ry="2" />
<text  x="1085.91" y="1871.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1071.4" y="1797" width="0.4" height="15.0" fill="rgb(212,36,51)" rx="2" ry="2" />
<text  x="1074.41" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (84 samples, 1.41%)</title><rect x="778.7" y="1973" width="16.6" height="15.0" fill="rgb(222,48,2)" rx="2" ry="2" />
<text  x="781.69" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="288.2" y="1781" width="0.2" height="15.0" fill="rgb(206,115,43)" rx="2" ry="2" />
<text  x="291.24" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="581.8" y="1893" width="0.2" height="15.0" fill="rgb(221,208,9)" rx="2" ry="2" />
<text  x="584.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="190.7" y="1813" width="0.2" height="15.0" fill="rgb(244,112,33)" rx="2" ry="2" />
<text  x="193.67" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="656.1" y="1989" width="1.4" height="15.0" fill="rgb(237,0,43)" rx="2" ry="2" />
<text  x="659.12" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="909.0" y="1989" width="0.2" height="15.0" fill="rgb(231,169,23)" rx="2" ry="2" />
<text  x="911.98" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="309.1" y="1797" width="0.2" height="15.0" fill="rgb(229,120,51)" rx="2" ry="2" />
<text  x="312.07" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="114.1" y="1957" width="0.2" height="15.0" fill="rgb(213,176,22)" rx="2" ry="2" />
<text  x="117.12" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (16 samples, 0.27%)</title><rect x="1106.1" y="2053" width="3.2" height="15.0" fill="rgb(239,179,49)" rx="2" ry="2" />
<text  x="1109.11" y="2063.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.6" y="1845" width="0.8" height="15.0" fill="rgb(214,53,0)" rx="2" ry="2" />
<text  x="14.59" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1477" width="45.2" height="15.0" fill="rgb(217,138,35)" rx="2" ry="2" />
<text  x="53.85" y="1487.5" >[unk..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="352.5" y="1973" width="0.2" height="15.0" fill="rgb(210,177,40)" rx="2" ry="2" />
<text  x="355.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="50.9" y="117" width="44.6" height="15.0" fill="rgb(209,194,36)" rx="2" ry="2" />
<text  x="53.85" y="127.5" >[unk..</text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="239.1" y="1781" width="0.2" height="15.0" fill="rgb(239,35,19)" rx="2" ry="2" />
<text  x="242.06" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="95.9" y="149" width="0.2" height="15.0" fill="rgb(236,78,53)" rx="2" ry="2" />
<text  x="98.87" y="159.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1877" width="45.2" height="15.0" fill="rgb(207,134,0)" rx="2" ry="2" />
<text  x="53.85" y="1887.5" >[unk..</text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="936.5" y="1893" width="0.2" height="15.0" fill="rgb(239,88,35)" rx="2" ry="2" />
<text  x="939.55" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="591.5" y="2021" width="6.5" height="15.0" fill="rgb(205,143,14)" rx="2" ry="2" />
<text  x="594.47" y="2031.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (46 samples, 0.77%)</title><rect x="1074.0" y="1925" width="9.1" height="15.0" fill="rgb(214,148,30)" rx="2" ry="2" />
<text  x="1076.98" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="357" width="45.0" height="15.0" fill="rgb(240,127,17)" rx="2" ry="2" />
<text  x="53.85" y="367.5" >[unk..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1159.7" y="1957" width="0.2" height="15.0" fill="rgb(248,21,27)" rx="2" ry="2" />
<text  x="1162.66" y="1967.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1089.5" y="2053" width="0.2" height="15.0" fill="rgb(221,94,48)" rx="2" ry="2" />
<text  x="1092.45" y="2063.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="1010.1" y="2037" width="0.2" height="15.0" fill="rgb(213,195,23)" rx="2" ry="2" />
<text  x="1013.12" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="670.0" y="1925" width="0.2" height="15.0" fill="rgb(217,87,19)" rx="2" ry="2" />
<text  x="673.01" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1019.6" y="2037" width="0.2" height="15.0" fill="rgb(215,29,40)" rx="2" ry="2" />
<text  x="1022.64" y="2047.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="13.4" y="1829" width="0.2" height="15.0" fill="rgb(247,51,16)" rx="2" ry="2" />
<text  x="16.37" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1701" width="0.2" height="15.0" fill="rgb(251,184,4)" rx="2" ry="2" />
<text  x="238.69" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="311.0" y="1861" width="0.2" height="15.0" fill="rgb(240,191,7)" rx="2" ry="2" />
<text  x="314.05" y="1871.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="306.7" y="1925" width="0.2" height="15.0" fill="rgb(225,154,5)" rx="2" ry="2" />
<text  x="309.69" y="1935.5" ></text>
</g>
<g >
<title>__alloc_skb (8 samples, 0.13%)</title><rect x="254.7" y="1861" width="1.6" height="15.0" fill="rgb(230,210,37)" rx="2" ry="2" />
<text  x="257.73" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="579.8" y="1957" width="0.2" height="15.0" fill="rgb(215,95,32)" rx="2" ry="2" />
<text  x="582.77" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1077" width="45.2" height="15.0" fill="rgb(210,176,51)" rx="2" ry="2" />
<text  x="53.85" y="1087.5" >[unk..</text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="854.8" y="2005" width="0.2" height="15.0" fill="rgb(210,148,3)" rx="2" ry="2" />
<text  x="857.84" y="2015.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(241,135,33)" rx="2" ry="2" />
<text  x="15.38" y="2079.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="866.1" y="2005" width="0.2" height="15.0" fill="rgb(235,225,38)" rx="2" ry="2" />
<text  x="869.14" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (40 samples, 0.67%)</title><rect x="955.4" y="1909" width="7.9" height="15.0" fill="rgb(237,222,10)" rx="2" ry="2" />
<text  x="958.39" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="301.7" y="1941" width="0.2" height="15.0" fill="rgb(246,5,25)" rx="2" ry="2" />
<text  x="304.73" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.5" y="101" width="0.2" height="15.0" fill="rgb(231,84,5)" rx="2" ry="2" />
<text  x="98.48" y="111.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="255.3" y="1653" width="0.2" height="15.0" fill="rgb(222,56,38)" rx="2" ry="2" />
<text  x="258.32" y="1663.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="261.9" y="1397" width="0.2" height="15.0" fill="rgb(244,30,53)" rx="2" ry="2" />
<text  x="264.87" y="1407.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (28 samples, 0.47%)</title><rect x="443.1" y="2005" width="5.6" height="15.0" fill="rgb(250,48,21)" rx="2" ry="2" />
<text  x="446.13" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (6 samples, 0.10%)</title><rect x="345.2" y="1941" width="1.1" height="15.0" fill="rgb(217,175,2)" rx="2" ry="2" />
<text  x="348.16" y="1951.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, long, std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;folly::FunctionScheduler::RunTimeOrder&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(242,202,0)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="584.5" y="2021" width="1.6" height="15.0" fill="rgb(214,87,16)" rx="2" ry="2" />
<text  x="587.53" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (2 samples, 0.03%)</title><rect x="303.3" y="1829" width="0.4" height="15.0" fill="rgb(246,157,11)" rx="2" ry="2" />
<text  x="306.31" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="543.3" y="1877" width="0.2" height="15.0" fill="rgb(209,130,10)" rx="2" ry="2" />
<text  x="546.28" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="577.8" y="1797" width="0.4" height="15.0" fill="rgb(220,67,0)" rx="2" ry="2" />
<text  x="580.79" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (2 samples, 0.03%)</title><rect x="1103.1" y="1989" width="0.4" height="15.0" fill="rgb(235,71,29)" rx="2" ry="2" />
<text  x="1106.14" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="730.1" y="1941" width="0.6" height="15.0" fill="rgb(241,98,45)" rx="2" ry="2" />
<text  x="733.10" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (7 samples, 0.12%)</title><rect x="54.2" y="37" width="1.4" height="15.0" fill="rgb(222,162,48)" rx="2" ry="2" />
<text  x="57.23" y="47.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="981" width="45.2" height="15.0" fill="rgb(235,50,20)" rx="2" ry="2" />
<text  x="53.85" y="991.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1143.8" y="1989" width="0.2" height="15.0" fill="rgb(241,94,44)" rx="2" ry="2" />
<text  x="1146.79" y="1999.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="230.7" y="1701" width="0.2" height="15.0" fill="rgb(220,96,5)" rx="2" ry="2" />
<text  x="233.73" y="1711.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(241,119,19)" rx="2" ry="2" />
<text  x="15.38" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="288.4" y="1749" width="0.6" height="15.0" fill="rgb(222,120,17)" rx="2" ry="2" />
<text  x="291.44" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1365" width="45.2" height="15.0" fill="rgb(250,27,15)" rx="2" ry="2" />
<text  x="53.85" y="1375.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="294.8" y="1701" width="0.2" height="15.0" fill="rgb(249,89,36)" rx="2" ry="2" />
<text  x="297.79" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="310.1" y="1845" width="0.4" height="15.0" fill="rgb(220,48,5)" rx="2" ry="2" />
<text  x="313.06" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.08%)</title><rect x="577.2" y="1893" width="1.0" height="15.0" fill="rgb(242,94,14)" rx="2" ry="2" />
<text  x="580.19" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (107 samples, 1.80%)</title><rect x="459.6" y="1973" width="21.2" height="15.0" fill="rgb(222,1,4)" rx="2" ry="2" />
<text  x="462.59" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (31 samples, 0.52%)</title><rect x="872.5" y="2037" width="6.1" height="15.0" fill="rgb(248,209,39)" rx="2" ry="2" />
<text  x="875.49" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="581.8" y="1909" width="0.2" height="15.0" fill="rgb(247,218,3)" rx="2" ry="2" />
<text  x="584.75" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="568.3" y="1989" width="0.2" height="15.0" fill="rgb(231,103,10)" rx="2" ry="2" />
<text  x="571.27" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1333" width="45.2" height="15.0" fill="rgb(211,178,33)" rx="2" ry="2" />
<text  x="53.85" y="1343.5" >[unk..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="253.1" y="1701" width="0.2" height="15.0" fill="rgb(205,34,16)" rx="2" ry="2" />
<text  x="256.14" y="1711.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="577.4" y="1685" width="0.2" height="15.0" fill="rgb(222,184,21)" rx="2" ry="2" />
<text  x="580.39" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="256.1" y="1781" width="0.2" height="15.0" fill="rgb(212,206,47)" rx="2" ry="2" />
<text  x="259.11" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="353.1" y="1989" width="0.4" height="15.0" fill="rgb(216,112,50)" rx="2" ry="2" />
<text  x="356.09" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (2 samples, 0.03%)</title><rect x="201.0" y="1957" width="0.4" height="15.0" fill="rgb(223,97,47)" rx="2" ry="2" />
<text  x="203.98" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1059.7" y="1733" width="0.4" height="15.0" fill="rgb(244,66,27)" rx="2" ry="2" />
<text  x="1062.70" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (25 samples, 0.42%)</title><rect x="435.6" y="2005" width="5.0" height="15.0" fill="rgb(207,197,42)" rx="2" ry="2" />
<text  x="438.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="557.2" y="1989" width="0.2" height="15.0" fill="rgb(211,97,43)" rx="2" ry="2" />
<text  x="560.16" y="1999.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (3 samples, 0.05%)</title><rect x="150.6" y="1925" width="0.6" height="15.0" fill="rgb(245,16,2)" rx="2" ry="2" />
<text  x="153.61" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (50 samples, 0.84%)</title><rect x="40.1" y="2037" width="10.0" height="15.0" fill="rgb(210,43,14)" rx="2" ry="2" />
<text  x="43.14" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="336.8" y="1973" width="0.2" height="15.0" fill="rgb(230,140,47)" rx="2" ry="2" />
<text  x="339.83" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (31 samples, 0.52%)</title><rect x="367.2" y="1925" width="6.1" height="15.0" fill="rgb(245,108,13)" rx="2" ry="2" />
<text  x="370.17" y="1935.5" ></text>
</g>
<g >
<title>jump_fcontext (131 samples, 2.20%)</title><rect x="973.4" y="2005" width="26.0" height="15.0" fill="rgb(234,24,17)" rx="2" ry="2" />
<text  x="976.44" y="2015.5" >j..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="295.6" y="1717" width="0.2" height="15.0" fill="rgb(238,200,34)" rx="2" ry="2" />
<text  x="298.58" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1084.9" y="1877" width="0.2" height="15.0" fill="rgb(227,112,19)" rx="2" ry="2" />
<text  x="1087.89" y="1887.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.6" y="1957" width="0.8" height="15.0" fill="rgb(207,41,36)" rx="2" ry="2" />
<text  x="14.59" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1084.9" y="1861" width="0.2" height="15.0" fill="rgb(243,215,44)" rx="2" ry="2" />
<text  x="1087.89" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="652.0" y="2005" width="0.6" height="15.0" fill="rgb(254,122,19)" rx="2" ry="2" />
<text  x="654.96" y="2015.5" ></text>
</g>
<g >
<title>__fget_light (17 samples, 0.29%)</title><rect x="298.4" y="1925" width="3.3" height="15.0" fill="rgb(224,22,46)" rx="2" ry="2" />
<text  x="301.36" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="757" width="45.2" height="15.0" fill="rgb(250,48,34)" rx="2" ry="2" />
<text  x="53.85" y="767.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1059.9" y="1605" width="0.2" height="15.0" fill="rgb(251,11,26)" rx="2" ry="2" />
<text  x="1062.90" y="1615.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1105.1" y="2021" width="0.2" height="15.0" fill="rgb(249,2,44)" rx="2" ry="2" />
<text  x="1108.12" y="2031.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="73.7" y="37" width="0.4" height="15.0" fill="rgb(239,217,29)" rx="2" ry="2" />
<text  x="76.66" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1037.9" y="1845" width="0.2" height="15.0" fill="rgb(249,183,30)" rx="2" ry="2" />
<text  x="1040.89" y="1855.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="267.6" y="1445" width="0.6" height="15.0" fill="rgb(234,104,42)" rx="2" ry="2" />
<text  x="270.62" y="1455.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1072.4" y="1829" width="0.2" height="15.0" fill="rgb(251,217,22)" rx="2" ry="2" />
<text  x="1075.40" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (6 samples, 0.10%)</title><rect x="501.8" y="2005" width="1.2" height="15.0" fill="rgb(239,184,21)" rx="2" ry="2" />
<text  x="504.83" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="854.4" y="2005" width="0.2" height="15.0" fill="rgb(237,152,37)" rx="2" ry="2" />
<text  x="857.44" y="2015.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="1009.7" y="2037" width="0.4" height="15.0" fill="rgb(211,190,16)" rx="2" ry="2" />
<text  x="1012.73" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (11 samples, 0.18%)</title><rect x="1013.5" y="2005" width="2.2" height="15.0" fill="rgb(225,61,34)" rx="2" ry="2" />
<text  x="1016.50" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="288.0" y="1669" width="0.2" height="15.0" fill="rgb(251,155,4)" rx="2" ry="2" />
<text  x="291.04" y="1679.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="324.3" y="1957" width="0.2" height="15.0" fill="rgb(225,158,28)" rx="2" ry="2" />
<text  x="327.34" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (11 samples, 0.18%)</title><rect x="517.3" y="2037" width="2.2" height="15.0" fill="rgb(219,100,18)" rx="2" ry="2" />
<text  x="520.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (206 samples, 3.46%)</title><rect x="410.8" y="2021" width="40.9" height="15.0" fill="rgb(247,50,47)" rx="2" ry="2" />
<text  x="413.80" y="2031.5" >[un..</text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="326.5" y="1957" width="0.6" height="15.0" fill="rgb(240,156,41)" rx="2" ry="2" />
<text  x="329.52" y="1967.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (323 samples, 5.43%)</title><rect x="1024.0" y="1989" width="64.1" height="15.0" fill="rgb(220,103,1)" rx="2" ry="2" />
<text  x="1027.01" y="1999.5" >SYSC_re..</text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="1187.8" y="1973" width="0.8" height="15.0" fill="rgb(254,181,51)" rx="2" ry="2" />
<text  x="1190.82" y="1983.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="250.4" y="1861" width="0.4" height="15.0" fill="rgb(227,210,15)" rx="2" ry="2" />
<text  x="253.36" y="1871.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="389.8" y="1925" width="0.2" height="15.0" fill="rgb(216,36,22)" rx="2" ry="2" />
<text  x="392.78" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="237.7" y="1925" width="0.2" height="15.0" fill="rgb(219,48,17)" rx="2" ry="2" />
<text  x="240.67" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="81.4" y="37" width="0.2" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="84.39" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="858.2" y="1957" width="0.4" height="15.0" fill="rgb(252,210,9)" rx="2" ry="2" />
<text  x="861.21" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1095.4" y="1877" width="0.2" height="15.0" fill="rgb(251,11,5)" rx="2" ry="2" />
<text  x="1098.40" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (5 samples, 0.08%)</title><rect x="323.3" y="1925" width="1.0" height="15.0" fill="rgb(223,39,1)" rx="2" ry="2" />
<text  x="326.34" y="1935.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="254.9" y="1797" width="0.2" height="15.0" fill="rgb(244,39,36)" rx="2" ry="2" />
<text  x="257.92" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1086.7" y="1877" width="0.2" height="15.0" fill="rgb(219,102,10)" rx="2" ry="2" />
<text  x="1089.68" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="93.7" y="53" width="0.6" height="15.0" fill="rgb(229,115,12)" rx="2" ry="2" />
<text  x="96.69" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1065.9" y="1797" width="0.2" height="15.0" fill="rgb(226,25,25)" rx="2" ry="2" />
<text  x="1068.85" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="654.7" y="1957" width="0.2" height="15.0" fill="rgb(216,23,37)" rx="2" ry="2" />
<text  x="657.74" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1143.8" y="1909" width="0.2" height="15.0" fill="rgb(214,90,0)" rx="2" ry="2" />
<text  x="1146.79" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="252.9" y="1733" width="0.2" height="15.0" fill="rgb(219,216,10)" rx="2" ry="2" />
<text  x="255.94" y="1743.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="292.6" y="1813" width="0.2" height="15.0" fill="rgb(246,214,17)" rx="2" ry="2" />
<text  x="295.61" y="1823.5" ></text>
</g>
<g >
<title>_itoa_word (3 samples, 0.05%)</title><rect x="1089.8" y="2037" width="0.6" height="15.0" fill="rgb(233,200,27)" rx="2" ry="2" />
<text  x="1092.85" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="635.9" y="2005" width="0.2" height="15.0" fill="rgb(240,90,44)" rx="2" ry="2" />
<text  x="638.90" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (3 samples, 0.05%)</title><rect x="878.6" y="2037" width="0.6" height="15.0" fill="rgb(233,189,17)" rx="2" ry="2" />
<text  x="881.64" y="2047.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1102.7" y="1973" width="0.2" height="15.0" fill="rgb(234,151,13)" rx="2" ry="2" />
<text  x="1105.74" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (21 samples, 0.35%)</title><rect x="732.3" y="1957" width="4.1" height="15.0" fill="rgb(251,105,7)" rx="2" ry="2" />
<text  x="735.28" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (259 samples, 4.35%)</title><rect x="451.7" y="2021" width="51.3" height="15.0" fill="rgb(224,107,12)" rx="2" ry="2" />
<text  x="454.66" y="2031.5" >[unkn..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="200.6" y="1797" width="0.2" height="15.0" fill="rgb(212,123,29)" rx="2" ry="2" />
<text  x="203.58" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (26 samples, 0.44%)</title><rect x="368.0" y="1893" width="5.1" height="15.0" fill="rgb(217,153,32)" rx="2" ry="2" />
<text  x="370.97" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="197.2" y="1989" width="0.2" height="15.0" fill="rgb(241,159,22)" rx="2" ry="2" />
<text  x="200.21" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="19.3" y="1989" width="0.8" height="15.0" fill="rgb(235,137,15)" rx="2" ry="2" />
<text  x="22.32" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::runLoopCallback (1 samples, 0.02%)</title><rect x="174.6" y="1925" width="0.2" height="15.0" fill="rgb(224,104,29)" rx="2" ry="2" />
<text  x="177.61" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="586.7" y="1989" width="0.2" height="15.0" fill="rgb(226,103,41)" rx="2" ry="2" />
<text  x="589.71" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="656.7" y="1973" width="0.8" height="15.0" fill="rgb(229,119,54)" rx="2" ry="2" />
<text  x="659.72" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="311.8" y="1893" width="0.2" height="15.0" fill="rgb(216,183,38)" rx="2" ry="2" />
<text  x="314.84" y="1903.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="49.9" y="1973" width="0.2" height="15.0" fill="rgb(214,106,42)" rx="2" ry="2" />
<text  x="52.86" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1143.8" y="1957" width="0.2" height="15.0" fill="rgb(213,145,50)" rx="2" ry="2" />
<text  x="1146.79" y="1967.5" ></text>
</g>
<g >
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="39.0" y="1813" width="0.2" height="15.0" fill="rgb(225,184,54)" rx="2" ry="2" />
<text  x="41.95" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="1146.2" y="2005" width="0.4" height="15.0" fill="rgb(227,98,19)" rx="2" ry="2" />
<text  x="1149.17" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="95.9" y="261" width="0.2" height="15.0" fill="rgb(211,198,42)" rx="2" ry="2" />
<text  x="98.87" y="271.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="576.8" y="1893" width="0.2" height="15.0" fill="rgb(244,218,24)" rx="2" ry="2" />
<text  x="579.80" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (5 samples, 0.08%)</title><rect x="286.7" y="1653" width="0.9" height="15.0" fill="rgb(242,41,32)" rx="2" ry="2" />
<text  x="289.66" y="1663.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (33 samples, 0.55%)</title><rect x="114.3" y="1989" width="6.6" height="15.0" fill="rgb(210,19,36)" rx="2" ry="2" />
<text  x="117.32" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="582.0" y="1909" width="0.2" height="15.0" fill="rgb(209,143,4)" rx="2" ry="2" />
<text  x="584.95" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="173.2" y="1925" width="1.4" height="15.0" fill="rgb(205,143,29)" rx="2" ry="2" />
<text  x="176.22" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="184.1" y="2021" width="0.2" height="15.0" fill="rgb(244,78,52)" rx="2" ry="2" />
<text  x="187.12" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (24 samples, 0.40%)</title><rect x="817.4" y="2005" width="4.7" height="15.0" fill="rgb(210,41,16)" rx="2" ry="2" />
<text  x="820.36" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="200.0" y="1909" width="0.2" height="15.0" fill="rgb(242,115,1)" rx="2" ry="2" />
<text  x="202.99" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1269" width="45.2" height="15.0" fill="rgb(247,151,36)" rx="2" ry="2" />
<text  x="53.85" y="1279.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="589.5" y="1909" width="0.2" height="15.0" fill="rgb(233,155,54)" rx="2" ry="2" />
<text  x="592.49" y="1919.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="308.5" y="1973" width="0.2" height="15.0" fill="rgb(228,136,21)" rx="2" ry="2" />
<text  x="311.47" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1042.6" y="1653" width="0.2" height="15.0" fill="rgb(222,35,18)" rx="2" ry="2" />
<text  x="1045.65" y="1663.5" ></text>
</g>
<g >
<title>ep_poll (19 samples, 0.32%)</title><rect x="308.7" y="1973" width="3.7" height="15.0" fill="rgb(209,171,31)" rx="2" ry="2" />
<text  x="311.67" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="91.7" y="69" width="2.6" height="15.0" fill="rgb(249,44,35)" rx="2" ry="2" />
<text  x="94.71" y="79.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="91.5" y="37" width="0.2" height="15.0" fill="rgb(253,77,50)" rx="2" ry="2" />
<text  x="94.51" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="306.7" y="2005" width="0.2" height="15.0" fill="rgb(240,113,40)" rx="2" ry="2" />
<text  x="309.69" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="579.0" y="1941" width="0.8" height="15.0" fill="rgb(206,85,13)" rx="2" ry="2" />
<text  x="581.98" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="156.0" y="1941" width="1.0" height="15.0" fill="rgb(250,78,44)" rx="2" ry="2" />
<text  x="158.96" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1065.9" y="1669" width="0.2" height="15.0" fill="rgb(214,82,47)" rx="2" ry="2" />
<text  x="1068.85" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="392.6" y="1957" width="0.2" height="15.0" fill="rgb(238,159,16)" rx="2" ry="2" />
<text  x="395.56" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1159.9" y="2021" width="0.2" height="15.0" fill="rgb(215,25,54)" rx="2" ry="2" />
<text  x="1162.86" y="2031.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="19.9" y="1973" width="0.2" height="15.0" fill="rgb(234,95,45)" rx="2" ry="2" />
<text  x="22.92" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (3 samples, 0.05%)</title><rect x="51.1" y="37" width="0.5" height="15.0" fill="rgb(224,200,25)" rx="2" ry="2" />
<text  x="54.05" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="564.1" y="1989" width="0.2" height="15.0" fill="rgb(215,203,53)" rx="2" ry="2" />
<text  x="567.10" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="91.7" y="53" width="2.0" height="15.0" fill="rgb(210,58,28)" rx="2" ry="2" />
<text  x="94.71" y="63.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="1130.5" y="1973" width="1.4" height="15.0" fill="rgb(233,53,17)" rx="2" ry="2" />
<text  x="1133.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1765" width="45.2" height="15.0" fill="rgb(213,194,47)" rx="2" ry="2" />
<text  x="53.85" y="1775.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="576.0" y="1925" width="0.2" height="15.0" fill="rgb(242,172,16)" rx="2" ry="2" />
<text  x="579.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (42 samples, 0.71%)</title><rect x="524.0" y="1973" width="8.4" height="15.0" fill="rgb(210,129,43)" rx="2" ry="2" />
<text  x="527.04" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="190.7" y="1957" width="0.2" height="15.0" fill="rgb(235,215,49)" rx="2" ry="2" />
<text  x="193.67" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="213.7" y="1685" width="0.2" height="15.0" fill="rgb(233,56,53)" rx="2" ry="2" />
<text  x="216.67" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="673.4" y="1893" width="0.2" height="15.0" fill="rgb(224,154,38)" rx="2" ry="2" />
<text  x="676.38" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="95.9" y="357" width="0.2" height="15.0" fill="rgb(224,101,11)" rx="2" ry="2" />
<text  x="98.87" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="236.7" y="1813" width="0.2" height="15.0" fill="rgb(246,155,43)" rx="2" ry="2" />
<text  x="239.68" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="213.7" y="1829" width="0.2" height="15.0" fill="rgb(232,137,17)" rx="2" ry="2" />
<text  x="216.67" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (48 samples, 0.81%)</title><rect x="385.2" y="2037" width="9.5" height="15.0" fill="rgb(238,46,19)" rx="2" ry="2" />
<text  x="388.22" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="198.8" y="1845" width="0.2" height="15.0" fill="rgb(247,146,7)" rx="2" ry="2" />
<text  x="201.80" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1059.7" y="1765" width="0.4" height="15.0" fill="rgb(206,200,5)" rx="2" ry="2" />
<text  x="1062.70" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (101 samples, 1.70%)</title><rect x="263.1" y="1573" width="20.0" height="15.0" fill="rgb(231,48,13)" rx="2" ry="2" />
<text  x="266.06" y="1583.5" ></text>
</g>
<g >
<title>ip_output (143 samples, 2.40%)</title><rect x="259.9" y="1781" width="28.3" height="15.0" fill="rgb(231,68,28)" rx="2" ry="2" />
<text  x="262.88" y="1791.5" >ip..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="577.4" y="1701" width="0.2" height="15.0" fill="rgb(239,133,13)" rx="2" ry="2" />
<text  x="580.39" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (5 samples, 0.08%)</title><rect x="644.6" y="1989" width="1.0" height="15.0" fill="rgb(207,41,48)" rx="2" ry="2" />
<text  x="647.62" y="1999.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (20 samples, 0.34%)</title><rect x="932.8" y="1941" width="3.9" height="15.0" fill="rgb(222,169,46)" rx="2" ry="2" />
<text  x="935.78" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="798.7" y="1893" width="0.4" height="15.0" fill="rgb(228,69,36)" rx="2" ry="2" />
<text  x="801.72" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="576.8" y="1925" width="0.2" height="15.0" fill="rgb(232,199,28)" rx="2" ry="2" />
<text  x="579.80" y="1935.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="879.4" y="2037" width="0.2" height="15.0" fill="rgb(250,52,28)" rx="2" ry="2" />
<text  x="882.43" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (3 samples, 0.05%)</title><rect x="194.0" y="1925" width="0.6" height="15.0" fill="rgb(206,209,32)" rx="2" ry="2" />
<text  x="197.04" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="865.2" y="1893" width="0.2" height="15.0" fill="rgb(214,114,50)" rx="2" ry="2" />
<text  x="868.15" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="532.8" y="1989" width="0.2" height="15.0" fill="rgb(210,39,3)" rx="2" ry="2" />
<text  x="535.77" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="197.4" y="1957" width="0.6" height="15.0" fill="rgb(239,37,31)" rx="2" ry="2" />
<text  x="200.41" y="1967.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (9 samples, 0.15%)</title><rect x="320.6" y="1925" width="1.8" height="15.0" fill="rgb(212,224,51)" rx="2" ry="2" />
<text  x="323.57" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="1042.3" y="1877" width="0.7" height="15.0" fill="rgb(237,118,45)" rx="2" ry="2" />
<text  x="1045.25" y="1887.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="577.4" y="1845" width="0.2" height="15.0" fill="rgb(216,80,29)" rx="2" ry="2" />
<text  x="580.39" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="798.7" y="1925" width="0.4" height="15.0" fill="rgb(246,104,7)" rx="2" ry="2" />
<text  x="801.72" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="297.4" y="1845" width="0.4" height="15.0" fill="rgb(246,28,29)" rx="2" ry="2" />
<text  x="300.36" y="1855.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="1015.5" y="1829" width="0.2" height="15.0" fill="rgb(218,123,0)" rx="2" ry="2" />
<text  x="1018.48" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (5 samples, 0.08%)</title><rect x="634.9" y="2005" width="1.0" height="15.0" fill="rgb(222,167,18)" rx="2" ry="2" />
<text  x="637.90" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="358.6" y="1973" width="0.2" height="15.0" fill="rgb(231,114,50)" rx="2" ry="2" />
<text  x="361.65" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="202.4" y="1829" width="0.2" height="15.0" fill="rgb(232,217,43)" rx="2" ry="2" />
<text  x="205.37" y="1839.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="260.5" y="1749" width="0.2" height="15.0" fill="rgb(254,87,5)" rx="2" ry="2" />
<text  x="263.48" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="577.8" y="1733" width="0.2" height="15.0" fill="rgb(223,170,44)" rx="2" ry="2" />
<text  x="580.79" y="1743.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (3 samples, 0.05%)</title><rect x="1059.1" y="1813" width="0.6" height="15.0" fill="rgb(251,19,49)" rx="2" ry="2" />
<text  x="1062.11" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="93.9" y="37" width="0.4" height="15.0" fill="rgb(242,199,37)" rx="2" ry="2" />
<text  x="96.89" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="258.3" y="1541" width="0.2" height="15.0" fill="rgb(235,173,19)" rx="2" ry="2" />
<text  x="261.30" y="1551.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="373.7" y="1877" width="0.2" height="15.0" fill="rgb(245,120,12)" rx="2" ry="2" />
<text  x="376.72" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="329.3" y="1957" width="0.4" height="15.0" fill="rgb(234,26,4)" rx="2" ry="2" />
<text  x="332.29" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1072.4" y="1685" width="0.2" height="15.0" fill="rgb(209,97,43)" rx="2" ry="2" />
<text  x="1075.40" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="310.1" y="1893" width="0.4" height="15.0" fill="rgb(211,113,35)" rx="2" ry="2" />
<text  x="313.06" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (35 samples, 0.59%)</title><rect x="485.8" y="1973" width="6.9" height="15.0" fill="rgb(254,227,34)" rx="2" ry="2" />
<text  x="488.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_send_ack (3 samples, 0.05%)</title><rect x="1083.5" y="1909" width="0.6" height="15.0" fill="rgb(240,128,45)" rx="2" ry="2" />
<text  x="1086.50" y="1919.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="95.7" y="85" width="0.2" height="15.0" fill="rgb(216,209,37)" rx="2" ry="2" />
<text  x="98.67" y="95.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="252.9" y="1813" width="0.2" height="15.0" fill="rgb(242,34,32)" rx="2" ry="2" />
<text  x="255.94" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (11 samples, 0.18%)</title><rect x="854.8" y="2037" width="2.2" height="15.0" fill="rgb(208,117,30)" rx="2" ry="2" />
<text  x="857.84" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="309.1" y="1717" width="0.2" height="15.0" fill="rgb(219,143,19)" rx="2" ry="2" />
<text  x="312.07" y="1727.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="198.8" y="1669" width="0.2" height="15.0" fill="rgb(247,40,33)" rx="2" ry="2" />
<text  x="201.80" y="1679.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="95.7" y="69" width="0.2" height="15.0" fill="rgb(225,6,52)" rx="2" ry="2" />
<text  x="98.67" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (131 samples, 2.20%)</title><rect x="828.3" y="2005" width="25.9" height="15.0" fill="rgb(227,215,49)" rx="2" ry="2" />
<text  x="831.27" y="2015.5" >f..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="295.6" y="1765" width="0.2" height="15.0" fill="rgb(210,56,45)" rx="2" ry="2" />
<text  x="298.58" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1029" width="45.2" height="15.0" fill="rgb(241,216,39)" rx="2" ry="2" />
<text  x="53.85" y="1039.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (16 samples, 0.27%)</title><rect x="1100.6" y="2021" width="3.1" height="15.0" fill="rgb(216,74,44)" rx="2" ry="2" />
<text  x="1103.56" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="309.1" y="1845" width="0.2" height="15.0" fill="rgb(239,228,25)" rx="2" ry="2" />
<text  x="312.07" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (159 samples, 2.67%)</title><rect x="1115.4" y="2021" width="31.6" height="15.0" fill="rgb(234,73,29)" rx="2" ry="2" />
<text  x="1118.43" y="2031.5" >fo..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (7 samples, 0.12%)</title><rect x="565.3" y="1989" width="1.4" height="15.0" fill="rgb(229,177,32)" rx="2" ry="2" />
<text  x="568.29" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="597.4" y="1973" width="0.6" height="15.0" fill="rgb(225,207,52)" rx="2" ry="2" />
<text  x="600.42" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="581.8" y="1765" width="0.2" height="15.0" fill="rgb(234,107,30)" rx="2" ry="2" />
<text  x="584.75" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (211 samples, 3.55%)</title><rect x="683.7" y="1925" width="41.8" height="15.0" fill="rgb(229,171,13)" rx="2" ry="2" />
<text  x="686.69" y="1935.5" >fol..</text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (4 samples, 0.07%)</title><rect x="879.6" y="2037" width="0.8" height="15.0" fill="rgb(241,105,29)" rx="2" ry="2" />
<text  x="882.63" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="292.2" y="1749" width="0.2" height="15.0" fill="rgb(223,167,47)" rx="2" ry="2" />
<text  x="295.21" y="1759.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="12.6" y="1845" width="1.0" height="15.0" fill="rgb(209,222,18)" rx="2" ry="2" />
<text  x="15.58" y="1855.5" ></text>
</g>
<g >
<title>sock_sendmsg (302 samples, 5.08%)</title><rect x="238.3" y="1941" width="59.9" height="15.0" fill="rgb(231,202,43)" rx="2" ry="2" />
<text  x="241.27" y="1951.5" >sock_s..</text>
</g>
<g >
<title>skb_release_all (148 samples, 2.49%)</title><rect x="1038.1" y="1909" width="29.3" height="15.0" fill="rgb(240,191,40)" rx="2" ry="2" />
<text  x="1041.09" y="1919.5" >sk..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="198.6" y="2021" width="0.2" height="15.0" fill="rgb(228,168,0)" rx="2" ry="2" />
<text  x="201.60" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1397" width="45.2" height="15.0" fill="rgb(223,22,49)" rx="2" ry="2" />
<text  x="53.85" y="1407.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (28 samples, 0.47%)</title><rect x="15.0" y="2005" width="5.5" height="15.0" fill="rgb(228,151,28)" rx="2" ry="2" />
<text  x="17.96" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="240.6" y="1861" width="0.2" height="15.0" fill="rgb(222,148,0)" rx="2" ry="2" />
<text  x="243.65" y="1871.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (16 samples, 0.27%)</title><rect x="289.4" y="1829" width="3.2" height="15.0" fill="rgb(248,30,54)" rx="2" ry="2" />
<text  x="292.43" y="1839.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="798.9" y="1717" width="0.2" height="15.0" fill="rgb(209,116,48)" rx="2" ry="2" />
<text  x="801.91" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="306.7" y="2021" width="0.2" height="15.0" fill="rgb(236,138,42)" rx="2" ry="2" />
<text  x="309.69" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="196.0" y="1957" width="0.8" height="15.0" fill="rgb(215,182,1)" rx="2" ry="2" />
<text  x="199.02" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="733.9" y="1925" width="0.2" height="15.0" fill="rgb(241,8,10)" rx="2" ry="2" />
<text  x="736.87" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="1861" width="0.2" height="15.0" fill="rgb(211,213,12)" rx="2" ry="2" />
<text  x="1037.32" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (388 samples, 6.52%)</title><rect x="660.3" y="1989" width="76.9" height="15.0" fill="rgb(205,64,15)" rx="2" ry="2" />
<text  x="663.29" y="1999.5" >folly::f..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="96.7" y="1973" width="0.2" height="15.0" fill="rgb(211,155,50)" rx="2" ry="2" />
<text  x="99.67" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="190.7" y="1797" width="0.2" height="15.0" fill="rgb(231,197,10)" rx="2" ry="2" />
<text  x="193.67" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="583.7" y="1829" width="0.4" height="15.0" fill="rgb(227,58,8)" rx="2" ry="2" />
<text  x="586.74" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="411.0" y="2005" width="0.8" height="15.0" fill="rgb(222,52,41)" rx="2" ry="2" />
<text  x="414.00" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (146 samples, 2.45%)</title><rect x="937.7" y="1957" width="29.0" height="15.0" fill="rgb(254,46,53)" rx="2" ry="2" />
<text  x="940.74" y="1967.5" >fo..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="311.6" y="1717" width="0.2" height="15.0" fill="rgb(208,206,33)" rx="2" ry="2" />
<text  x="314.64" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="303.1" y="1909" width="0.6" height="15.0" fill="rgb(248,118,51)" rx="2" ry="2" />
<text  x="306.12" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1159.9" y="1989" width="0.2" height="15.0" fill="rgb(233,218,8)" rx="2" ry="2" />
<text  x="1162.86" y="1999.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (25 samples, 0.42%)</title><rect x="319.4" y="1957" width="4.9" height="15.0" fill="rgb(247,5,32)" rx="2" ry="2" />
<text  x="322.38" y="1967.5" ></text>
</g>
<g >
<title>malloc (28 samples, 0.47%)</title><rect x="1183.1" y="2053" width="5.5" height="15.0" fill="rgb(225,191,47)" rx="2" ry="2" />
<text  x="1186.06" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="543.5" y="1893" width="0.2" height="15.0" fill="rgb(251,16,21)" rx="2" ry="2" />
<text  x="546.48" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1093.4" y="1845" width="0.2" height="15.0" fill="rgb(211,28,51)" rx="2" ry="2" />
<text  x="1096.42" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="278.3" y="1381" width="1.2" height="15.0" fill="rgb(247,46,0)" rx="2" ry="2" />
<text  x="281.33" y="1391.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="895.9" y="2005" width="0.4" height="15.0" fill="rgb(228,60,29)" rx="2" ry="2" />
<text  x="898.89" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="226.0" y="1973" width="0.2" height="15.0" fill="rgb(208,153,9)" rx="2" ry="2" />
<text  x="228.97" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="237.7" y="1909" width="0.2" height="15.0" fill="rgb(241,52,51)" rx="2" ry="2" />
<text  x="240.67" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="973.0" y="2005" width="0.4" height="15.0" fill="rgb(240,117,24)" rx="2" ry="2" />
<text  x="976.04" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="718.2" y="1861" width="0.2" height="15.0" fill="rgb(223,191,31)" rx="2" ry="2" />
<text  x="721.20" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.6" y="1909" width="0.8" height="15.0" fill="rgb(228,221,4)" rx="2" ry="2" />
<text  x="14.59" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="250.2" y="1685" width="0.2" height="15.0" fill="rgb(207,198,27)" rx="2" ry="2" />
<text  x="253.16" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="294.6" y="1829" width="0.4" height="15.0" fill="rgb(227,175,5)" rx="2" ry="2" />
<text  x="297.59" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="237.7" y="1829" width="0.2" height="15.0" fill="rgb(205,142,18)" rx="2" ry="2" />
<text  x="240.67" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="238.1" y="1845" width="0.2" height="15.0" fill="rgb(217,69,45)" rx="2" ry="2" />
<text  x="241.07" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="388.0" y="1973" width="0.2" height="15.0" fill="rgb(226,133,4)" rx="2" ry="2" />
<text  x="391.00" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="195.6" y="1941" width="0.2" height="15.0" fill="rgb(245,208,51)" rx="2" ry="2" />
<text  x="198.63" y="1951.5" ></text>
</g>
<g >
<title>kfree (4 samples, 0.07%)</title><rect x="237.1" y="1941" width="0.8" height="15.0" fill="rgb(251,111,20)" rx="2" ry="2" />
<text  x="240.08" y="1951.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1147.2" y="1829" width="0.2" height="15.0" fill="rgb(244,192,13)" rx="2" ry="2" />
<text  x="1150.16" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="300.9" y="1845" width="0.8" height="15.0" fill="rgb(239,70,42)" rx="2" ry="2" />
<text  x="303.93" y="1855.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="200.8" y="1909" width="0.2" height="15.0" fill="rgb(223,161,24)" rx="2" ry="2" />
<text  x="203.78" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="798.9" y="1845" width="0.2" height="15.0" fill="rgb(238,61,41)" rx="2" ry="2" />
<text  x="801.91" y="1855.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="719.6" y="1877" width="0.4" height="15.0" fill="rgb(205,72,16)" rx="2" ry="2" />
<text  x="722.59" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1093.2" y="2005" width="0.4" height="15.0" fill="rgb(232,197,9)" rx="2" ry="2" />
<text  x="1096.22" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="402.5" y="1749" width="0.2" height="15.0" fill="rgb(235,219,26)" rx="2" ry="2" />
<text  x="405.47" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="294.6" y="1845" width="0.4" height="15.0" fill="rgb(213,155,37)" rx="2" ry="2" />
<text  x="297.59" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="253.1" y="1685" width="0.2" height="15.0" fill="rgb(223,40,7)" rx="2" ry="2" />
<text  x="256.14" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="583.5" y="1973" width="0.6" height="15.0" fill="rgb(233,151,17)" rx="2" ry="2" />
<text  x="586.54" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="96.7" y="1749" width="0.2" height="15.0" fill="rgb(225,96,54)" rx="2" ry="2" />
<text  x="99.67" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="198.8" y="1781" width="0.2" height="15.0" fill="rgb(228,171,14)" rx="2" ry="2" />
<text  x="201.80" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="186.3" y="1941" width="1.4" height="15.0" fill="rgb(253,9,6)" rx="2" ry="2" />
<text  x="189.31" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="261" width="45.0" height="15.0" fill="rgb(240,122,7)" rx="2" ry="2" />
<text  x="53.85" y="271.5" >[unk..</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="577.4" y="1637" width="0.2" height="15.0" fill="rgb(252,157,23)" rx="2" ry="2" />
<text  x="580.39" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="491.7" y="1957" width="1.0" height="15.0" fill="rgb(237,185,11)" rx="2" ry="2" />
<text  x="494.72" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (42 samples, 0.71%)</title><rect x="643.6" y="2037" width="8.4" height="15.0" fill="rgb(231,125,21)" rx="2" ry="2" />
<text  x="646.63" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="729.9" y="1941" width="0.2" height="15.0" fill="rgb(254,59,46)" rx="2" ry="2" />
<text  x="732.90" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="174.8" y="1845" width="0.2" height="15.0" fill="rgb(216,160,46)" rx="2" ry="2" />
<text  x="177.80" y="1855.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="835.4" y="1973" width="1.0" height="15.0" fill="rgb(254,49,50)" rx="2" ry="2" />
<text  x="838.41" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1765" width="0.2" height="15.0" fill="rgb(250,17,0)" rx="2" ry="2" />
<text  x="216.67" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (4 samples, 0.07%)</title><rect x="933.6" y="1909" width="0.8" height="15.0" fill="rgb(253,103,27)" rx="2" ry="2" />
<text  x="936.57" y="1919.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (6 samples, 0.10%)</title><rect x="346.7" y="1973" width="1.2" height="15.0" fill="rgb(223,216,32)" rx="2" ry="2" />
<text  x="349.75" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="166.3" y="1989" width="0.2" height="15.0" fill="rgb(224,25,33)" rx="2" ry="2" />
<text  x="169.28" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1147.2" y="1893" width="0.2" height="15.0" fill="rgb(246,193,34)" rx="2" ry="2" />
<text  x="1150.16" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="543.5" y="1925" width="0.2" height="15.0" fill="rgb(208,91,54)" rx="2" ry="2" />
<text  x="546.48" y="1935.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="175.0" y="1893" width="0.4" height="15.0" fill="rgb(240,180,53)" rx="2" ry="2" />
<text  x="178.00" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="581.8" y="1829" width="0.2" height="15.0" fill="rgb(231,105,36)" rx="2" ry="2" />
<text  x="584.75" y="1839.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="236.5" y="1861" width="0.2" height="15.0" fill="rgb(241,80,13)" rx="2" ry="2" />
<text  x="239.48" y="1871.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(242,178,18)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="373.5" y="1909" width="0.4" height="15.0" fill="rgb(223,3,54)" rx="2" ry="2" />
<text  x="376.52" y="1919.5" ></text>
</g>
<g >
<title>sys_sendmsg (357 samples, 6.00%)</title><rect x="231.3" y="1989" width="70.8" height="15.0" fill="rgb(218,196,30)" rx="2" ry="2" />
<text  x="234.32" y="1999.5" >sys_send..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="581.8" y="1797" width="0.2" height="15.0" fill="rgb(252,115,32)" rx="2" ry="2" />
<text  x="584.75" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="741" width="45.2" height="15.0" fill="rgb(205,216,29)" rx="2" ry="2" />
<text  x="53.85" y="751.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="244.2" y="1717" width="0.2" height="15.0" fill="rgb(211,53,4)" rx="2" ry="2" />
<text  x="247.22" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="733.7" y="1909" width="0.2" height="15.0" fill="rgb(207,46,32)" rx="2" ry="2" />
<text  x="736.67" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="312.2" y="1909" width="0.2" height="15.0" fill="rgb(223,227,6)" rx="2" ry="2" />
<text  x="315.24" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="95.9" y="373" width="0.2" height="15.0" fill="rgb(238,172,45)" rx="2" ry="2" />
<text  x="98.87" y="383.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="410.8" y="2005" width="0.2" height="15.0" fill="rgb(230,14,43)" rx="2" ry="2" />
<text  x="413.80" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="50.9" y="133" width="44.6" height="15.0" fill="rgb(211,105,27)" rx="2" ry="2" />
<text  x="53.85" y="143.5" >[unk..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1093.4" y="1925" width="0.2" height="15.0" fill="rgb(222,50,8)" rx="2" ry="2" />
<text  x="1096.42" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="91.3" y="37" width="0.2" height="15.0" fill="rgb(209,61,6)" rx="2" ry="2" />
<text  x="94.31" y="47.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="199.8" y="1861" width="0.2" height="15.0" fill="rgb(248,191,16)" rx="2" ry="2" />
<text  x="202.79" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="709" width="45.2" height="15.0" fill="rgb(235,228,27)" rx="2" ry="2" />
<text  x="53.85" y="719.5" >[unk..</text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="151.2" y="1925" width="0.4" height="15.0" fill="rgb(239,212,30)" rx="2" ry="2" />
<text  x="154.20" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="472.7" y="1909" width="0.2" height="15.0" fill="rgb(221,207,20)" rx="2" ry="2" />
<text  x="475.68" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="333.1" y="1909" width="0.2" height="15.0" fill="rgb(238,37,20)" rx="2" ry="2" />
<text  x="336.06" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="358.8" y="1973" width="0.2" height="15.0" fill="rgb(224,40,38)" rx="2" ry="2" />
<text  x="361.84" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="295.4" y="1797" width="0.2" height="15.0" fill="rgb(252,125,31)" rx="2" ry="2" />
<text  x="298.38" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="301.1" y="1813" width="0.6" height="15.0" fill="rgb(208,146,8)" rx="2" ry="2" />
<text  x="304.13" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1973" width="0.4" height="15.0" fill="rgb(242,53,11)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="213.7" y="1941" width="0.2" height="15.0" fill="rgb(237,138,24)" rx="2" ry="2" />
<text  x="216.67" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (15 samples, 0.25%)</title><rect x="949.4" y="1877" width="3.0" height="15.0" fill="rgb(238,112,28)" rx="2" ry="2" />
<text  x="952.44" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.65%)</title><rect x="50.9" y="53" width="19.4" height="15.0" fill="rgb(229,156,5)" rx="2" ry="2" />
<text  x="53.85" y="63.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="581.4" y="1941" width="0.2" height="15.0" fill="rgb(213,102,39)" rx="2" ry="2" />
<text  x="584.36" y="1951.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="402.7" y="1733" width="0.4" height="15.0" fill="rgb(251,141,9)" rx="2" ry="2" />
<text  x="405.67" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="373.3" y="1941" width="0.2" height="15.0" fill="rgb(232,120,3)" rx="2" ry="2" />
<text  x="376.32" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1131.1" y="1861" width="0.2" height="15.0" fill="rgb(252,43,22)" rx="2" ry="2" />
<text  x="1134.10" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="374.3" y="1957" width="0.2" height="15.0" fill="rgb(209,117,28)" rx="2" ry="2" />
<text  x="377.31" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (7 samples, 0.12%)</title><rect x="38.8" y="1861" width="1.3" height="15.0" fill="rgb(235,24,15)" rx="2" ry="2" />
<text  x="41.76" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (11 samples, 0.18%)</title><rect x="188.7" y="2021" width="2.2" height="15.0" fill="rgb(220,222,40)" rx="2" ry="2" />
<text  x="191.69" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="261.9" y="1413" width="0.2" height="15.0" fill="rgb(234,126,43)" rx="2" ry="2" />
<text  x="264.87" y="1423.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (2 samples, 0.03%)</title><rect x="452.3" y="1989" width="0.3" height="15.0" fill="rgb(253,180,16)" rx="2" ry="2" />
<text  x="455.25" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (2 samples, 0.03%)</title><rect x="677.9" y="1941" width="0.4" height="15.0" fill="rgb(207,177,9)" rx="2" ry="2" />
<text  x="680.94" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="817.2" y="2005" width="0.2" height="15.0" fill="rgb(245,156,48)" rx="2" ry="2" />
<text  x="820.16" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (3 samples, 0.05%)</title><rect x="1169.8" y="2053" width="0.6" height="15.0" fill="rgb(219,78,1)" rx="2" ry="2" />
<text  x="1172.77" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="579.0" y="1925" width="0.8" height="15.0" fill="rgb(241,52,41)" rx="2" ry="2" />
<text  x="581.98" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="190.7" y="1941" width="0.2" height="15.0" fill="rgb(213,52,15)" rx="2" ry="2" />
<text  x="193.67" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="18.7" y="1957" width="0.6" height="15.0" fill="rgb(248,173,23)" rx="2" ry="2" />
<text  x="21.73" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (7 samples, 0.12%)</title><rect x="882.4" y="2037" width="1.4" height="15.0" fill="rgb(245,6,43)" rx="2" ry="2" />
<text  x="885.41" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="588.7" y="1909" width="0.4" height="15.0" fill="rgb(229,61,3)" rx="2" ry="2" />
<text  x="591.70" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1095.4" y="1925" width="0.2" height="15.0" fill="rgb(220,147,10)" rx="2" ry="2" />
<text  x="1098.40" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1032.7" y="1925" width="0.2" height="15.0" fill="rgb(245,7,46)" rx="2" ry="2" />
<text  x="1035.73" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="933" width="45.2" height="15.0" fill="rgb(249,184,49)" rx="2" ry="2" />
<text  x="53.85" y="943.5" >[unk..</text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1073.6" y="1909" width="0.4" height="15.0" fill="rgb(241,36,26)" rx="2" ry="2" />
<text  x="1076.59" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (16 samples, 0.27%)</title><rect x="868.1" y="2005" width="3.2" height="15.0" fill="rgb(215,101,53)" rx="2" ry="2" />
<text  x="871.13" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="286.1" y="1669" width="0.2" height="15.0" fill="rgb(210,29,23)" rx="2" ry="2" />
<text  x="289.06" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10 samples, 0.17%)</title><rect x="928.4" y="1941" width="2.0" height="15.0" fill="rgb(250,145,51)" rx="2" ry="2" />
<text  x="931.42" y="1951.5" ></text>
</g>
<g >
<title>kfree (84 samples, 1.41%)</title><rect x="1043.4" y="1861" width="16.7" height="15.0" fill="rgb(222,88,0)" rx="2" ry="2" />
<text  x="1046.44" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="288.4" y="1797" width="0.6" height="15.0" fill="rgb(246,98,29)" rx="2" ry="2" />
<text  x="291.44" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="871.5" y="2005" width="0.2" height="15.0" fill="rgb(244,66,53)" rx="2" ry="2" />
<text  x="874.50" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1162.4" y="2053" width="0.2" height="15.0" fill="rgb(236,28,12)" rx="2" ry="2" />
<text  x="1165.43" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="581.8" y="1701" width="0.2" height="15.0" fill="rgb(213,224,25)" rx="2" ry="2" />
<text  x="584.75" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="387.0" y="1973" width="1.0" height="15.0" fill="rgb(233,94,16)" rx="2" ry="2" />
<text  x="390.01" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="896.5" y="2005" width="0.2" height="15.0" fill="rgb(205,125,53)" rx="2" ry="2" />
<text  x="899.49" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="576.8" y="1733" width="0.2" height="15.0" fill="rgb(213,39,22)" rx="2" ry="2" />
<text  x="579.80" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (7 samples, 0.12%)</title><rect x="880.6" y="2037" width="1.4" height="15.0" fill="rgb(206,174,11)" rx="2" ry="2" />
<text  x="883.62" y="2047.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="1143.8" y="1637" width="0.2" height="15.0" fill="rgb(250,130,1)" rx="2" ry="2" />
<text  x="1146.79" y="1647.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (3 samples, 0.05%)</title><rect x="254.9" y="1845" width="0.6" height="15.0" fill="rgb(248,49,9)" rx="2" ry="2" />
<text  x="257.92" y="1855.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1187.8" y="2037" width="0.8" height="15.0" fill="rgb(224,60,50)" rx="2" ry="2" />
<text  x="1190.82" y="2047.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="402.7" y="1749" width="0.4" height="15.0" fill="rgb(254,189,40)" rx="2" ry="2" />
<text  x="405.67" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1042.6" y="1685" width="0.2" height="15.0" fill="rgb(234,220,53)" rx="2" ry="2" />
<text  x="1045.65" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6 samples, 0.10%)</title><rect x="326.1" y="1973" width="1.2" height="15.0" fill="rgb(249,65,48)" rx="2" ry="2" />
<text  x="329.12" y="1983.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (15 samples, 0.25%)</title><rect x="234.1" y="1941" width="3.0" height="15.0" fill="rgb(212,100,53)" rx="2" ry="2" />
<text  x="237.10" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="241.0" y="1813" width="0.2" height="15.0" fill="rgb(226,189,9)" rx="2" ry="2" />
<text  x="244.04" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="194.6" y="1989" width="0.4" height="15.0" fill="rgb(242,65,8)" rx="2" ry="2" />
<text  x="197.64" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1073.6" y="1637" width="0.2" height="15.0" fill="rgb(219,31,36)" rx="2" ry="2" />
<text  x="1076.59" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (4 samples, 0.07%)</title><rect x="822.1" y="2005" width="0.8" height="15.0" fill="rgb(229,159,6)" rx="2" ry="2" />
<text  x="825.12" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="872.1" y="2037" width="0.4" height="15.0" fill="rgb(218,183,50)" rx="2" ry="2" />
<text  x="875.09" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1072.4" y="1749" width="0.2" height="15.0" fill="rgb(223,105,31)" rx="2" ry="2" />
<text  x="1075.40" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1065.9" y="1845" width="0.2" height="15.0" fill="rgb(226,139,5)" rx="2" ry="2" />
<text  x="1068.85" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="190.7" y="1909" width="0.2" height="15.0" fill="rgb(240,47,22)" rx="2" ry="2" />
<text  x="193.67" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="255.5" y="1765" width="0.2" height="15.0" fill="rgb(213,143,1)" rx="2" ry="2" />
<text  x="258.52" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="77.0" y="37" width="2.2" height="15.0" fill="rgb(230,104,33)" rx="2" ry="2" />
<text  x="80.03" y="47.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="200.2" y="1941" width="0.2" height="15.0" fill="rgb(225,164,9)" rx="2" ry="2" />
<text  x="203.19" y="1951.5" ></text>
</g>
<g >
<title>free (34 samples, 0.57%)</title><rect x="1000.0" y="2037" width="6.8" height="15.0" fill="rgb(238,38,20)" rx="2" ry="2" />
<text  x="1003.01" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="1073.6" y="1669" width="0.4" height="15.0" fill="rgb(231,187,25)" rx="2" ry="2" />
<text  x="1076.59" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (342 samples, 5.75%)</title><rect x="1020.2" y="2021" width="67.9" height="15.0" fill="rgb(228,2,34)" rx="2" ry="2" />
<text  x="1023.24" y="2031.5" >do_sysc..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.07%)</title><rect x="1189.0" y="2053" width="0.8" height="15.0" fill="rgb(215,193,48)" rx="2" ry="2" />
<text  x="1192.01" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="387.4" y="1957" width="0.4" height="15.0" fill="rgb(219,20,27)" rx="2" ry="2" />
<text  x="390.40" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="295.6" y="1669" width="0.2" height="15.0" fill="rgb(218,120,15)" rx="2" ry="2" />
<text  x="298.58" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="173.4" y="1909" width="1.2" height="15.0" fill="rgb(216,147,39)" rx="2" ry="2" />
<text  x="176.42" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="10.6" y="1829" width="0.6" height="15.0" fill="rgb(207,140,17)" rx="2" ry="2" />
<text  x="13.59" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (260 samples, 4.37%)</title><rect x="675.6" y="1973" width="51.5" height="15.0" fill="rgb(223,139,4)" rx="2" ry="2" />
<text  x="678.56" y="1983.5" >folly..</text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1065.9" y="1589" width="0.2" height="15.0" fill="rgb(235,114,34)" rx="2" ry="2" />
<text  x="1068.85" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="659.9" y="1957" width="0.2" height="15.0" fill="rgb(240,228,18)" rx="2" ry="2" />
<text  x="662.89" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="798.7" y="1909" width="0.4" height="15.0" fill="rgb(232,184,13)" rx="2" ry="2" />
<text  x="801.72" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1068.2" y="1925" width="0.4" height="15.0" fill="rgb(226,207,4)" rx="2" ry="2" />
<text  x="1071.23" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1159.9" y="1957" width="0.2" height="15.0" fill="rgb(245,55,44)" rx="2" ry="2" />
<text  x="1162.86" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="303.1" y="1893" width="0.6" height="15.0" fill="rgb(231,190,51)" rx="2" ry="2" />
<text  x="306.12" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="580.0" y="1909" width="0.2" height="15.0" fill="rgb(235,56,41)" rx="2" ry="2" />
<text  x="582.97" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (7 samples, 0.12%)</title><rect x="38.8" y="1893" width="1.3" height="15.0" fill="rgb(217,58,19)" rx="2" ry="2" />
<text  x="41.76" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="866.3" y="2005" width="0.4" height="15.0" fill="rgb(234,12,50)" rx="2" ry="2" />
<text  x="869.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (4 samples, 0.07%)</title><rect x="374.9" y="2037" width="0.8" height="15.0" fill="rgb(224,173,28)" rx="2" ry="2" />
<text  x="377.91" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="672.2" y="1925" width="0.6" height="15.0" fill="rgb(235,81,26)" rx="2" ry="2" />
<text  x="675.19" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="235.7" y="1749" width="0.2" height="15.0" fill="rgb(224,0,28)" rx="2" ry="2" />
<text  x="238.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (662 samples, 11.13%)</title><rect x="50.9" y="2021" width="131.2" height="15.0" fill="rgb(235,59,38)" rx="2" ry="2" />
<text  x="53.85" y="2031.5" >[unknown]</text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="301.1" y="1749" width="0.2" height="15.0" fill="rgb(238,91,52)" rx="2" ry="2" />
<text  x="304.13" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1637" width="0.2" height="15.0" fill="rgb(218,188,54)" rx="2" ry="2" />
<text  x="238.69" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="213.9" y="2021" width="0.4" height="15.0" fill="rgb(225,204,7)" rx="2" ry="2" />
<text  x="216.87" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="310.3" y="1781" width="0.2" height="15.0" fill="rgb(241,32,44)" rx="2" ry="2" />
<text  x="313.26" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="732.1" y="1957" width="0.2" height="15.0" fill="rgb(224,50,45)" rx="2" ry="2" />
<text  x="735.08" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="351.7" y="1973" width="0.2" height="15.0" fill="rgb(235,128,21)" rx="2" ry="2" />
<text  x="354.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (3 samples, 0.05%)</title><rect x="394.7" y="2037" width="0.6" height="15.0" fill="rgb(240,85,45)" rx="2" ry="2" />
<text  x="397.74" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="238.1" y="1797" width="0.2" height="15.0" fill="rgb(229,26,12)" rx="2" ry="2" />
<text  x="241.07" y="1807.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="261.5" y="1397" width="0.2" height="15.0" fill="rgb(210,227,41)" rx="2" ry="2" />
<text  x="264.47" y="1407.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="402.5" y="1909" width="0.6" height="15.0" fill="rgb(215,152,4)" rx="2" ry="2" />
<text  x="405.47" y="1919.5" ></text>
</g>
<g >
<title>skb_free_head (86 samples, 1.45%)</title><rect x="1043.0" y="1877" width="17.1" height="15.0" fill="rgb(216,153,21)" rx="2" ry="2" />
<text  x="1046.05" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="303.1" y="1861" width="0.6" height="15.0" fill="rgb(223,32,28)" rx="2" ry="2" />
<text  x="306.12" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::dataBufferDestructor&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="937.5" y="1989" width="0.2" height="15.0" fill="rgb(225,226,27)" rx="2" ry="2" />
<text  x="940.54" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1084.9" y="1765" width="0.2" height="15.0" fill="rgb(235,155,1)" rx="2" ry="2" />
<text  x="1087.89" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="239.1" y="1829" width="0.2" height="15.0" fill="rgb(243,56,1)" rx="2" ry="2" />
<text  x="242.06" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="865.2" y="1877" width="0.2" height="15.0" fill="rgb(209,170,11)" rx="2" ry="2" />
<text  x="868.15" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="185.1" y="2005" width="0.2" height="15.0" fill="rgb(217,156,5)" rx="2" ry="2" />
<text  x="188.12" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="373.9" y="1893" width="0.2" height="15.0" fill="rgb(227,126,32)" rx="2" ry="2" />
<text  x="376.92" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (2 samples, 0.03%)</title><rect x="652.2" y="1989" width="0.4" height="15.0" fill="rgb(237,2,8)" rx="2" ry="2" />
<text  x="655.16" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (13 samples, 0.22%)</title><rect x="37.6" y="2037" width="2.5" height="15.0" fill="rgb(234,26,28)" rx="2" ry="2" />
<text  x="40.57" y="2047.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="629.0" y="2005" width="0.2" height="15.0" fill="rgb(221,31,7)" rx="2" ry="2" />
<text  x="631.95" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1146.0" y="1989" width="0.2" height="15.0" fill="rgb(229,60,0)" rx="2" ry="2" />
<text  x="1148.97" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1068.2" y="1909" width="0.2" height="15.0" fill="rgb(222,105,11)" rx="2" ry="2" />
<text  x="1071.23" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1095.4" y="1973" width="0.2" height="15.0" fill="rgb(237,93,34)" rx="2" ry="2" />
<text  x="1098.40" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1093.4" y="1909" width="0.2" height="15.0" fill="rgb(226,201,34)" rx="2" ry="2" />
<text  x="1096.42" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="241.0" y="1621" width="0.2" height="15.0" fill="rgb(236,190,50)" rx="2" ry="2" />
<text  x="244.04" y="1631.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="93.7" y="37" width="0.2" height="15.0" fill="rgb(215,225,42)" rx="2" ry="2" />
<text  x="96.69" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="589.9" y="1909" width="0.2" height="15.0" fill="rgb(228,23,30)" rx="2" ry="2" />
<text  x="592.89" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (4 samples, 0.07%)</title><rect x="51.8" y="37" width="0.8" height="15.0" fill="rgb(244,138,28)" rx="2" ry="2" />
<text  x="54.85" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (11 samples, 0.18%)</title><rect x="86.6" y="37" width="2.1" height="15.0" fill="rgb(208,213,38)" rx="2" ry="2" />
<text  x="89.55" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (27 samples, 0.45%)</title><rect x="586.1" y="2037" width="5.4" height="15.0" fill="rgb(208,8,11)" rx="2" ry="2" />
<text  x="589.12" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="576.8" y="1813" width="0.2" height="15.0" fill="rgb(253,76,42)" rx="2" ry="2" />
<text  x="579.80" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1095.4" y="2005" width="0.2" height="15.0" fill="rgb(221,98,3)" rx="2" ry="2" />
<text  x="1098.40" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="303.1" y="1925" width="0.6" height="15.0" fill="rgb(233,54,45)" rx="2" ry="2" />
<text  x="306.12" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (11 samples, 0.18%)</title><rect x="813.0" y="2005" width="2.2" height="15.0" fill="rgb(212,116,52)" rx="2" ry="2" />
<text  x="815.99" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="936.7" y="1941" width="0.2" height="15.0" fill="rgb(215,50,9)" rx="2" ry="2" />
<text  x="939.75" y="1951.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9 samples, 0.15%)</title><rect x="286.3" y="1685" width="1.7" height="15.0" fill="rgb(214,27,44)" rx="2" ry="2" />
<text  x="289.26" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (535 samples, 8.99%)</title><rect x="893.3" y="2037" width="106.1" height="15.0" fill="rgb(220,165,28)" rx="2" ry="2" />
<text  x="896.31" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1095.4" y="1893" width="0.2" height="15.0" fill="rgb(205,28,5)" rx="2" ry="2" />
<text  x="1098.40" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (14 samples, 0.24%)</title><rect x="587.7" y="1973" width="2.8" height="15.0" fill="rgb(205,118,0)" rx="2" ry="2" />
<text  x="590.70" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1131.9" y="1957" width="0.2" height="15.0" fill="rgb(243,106,32)" rx="2" ry="2" />
<text  x="1134.89" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1159.9" y="1877" width="0.2" height="15.0" fill="rgb(215,9,48)" rx="2" ry="2" />
<text  x="1162.86" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="244.2" y="1813" width="0.2" height="15.0" fill="rgb(235,55,35)" rx="2" ry="2" />
<text  x="247.22" y="1823.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="1187.8" y="1989" width="0.8" height="15.0" fill="rgb(234,71,22)" rx="2" ry="2" />
<text  x="1190.82" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="188.5" y="2005" width="0.2" height="15.0" fill="rgb(224,50,20)" rx="2" ry="2" />
<text  x="191.49" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="255.3" y="1669" width="0.2" height="15.0" fill="rgb(223,215,24)" rx="2" ry="2" />
<text  x="258.32" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="376.3" y="2037" width="0.2" height="15.0" fill="rgb(227,158,8)" rx="2" ry="2" />
<text  x="379.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="325" width="45.0" height="15.0" fill="rgb(249,133,35)" rx="2" ry="2" />
<text  x="53.85" y="335.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (26 samples, 0.44%)</title><rect x="558.9" y="1957" width="5.2" height="15.0" fill="rgb(225,22,13)" rx="2" ry="2" />
<text  x="561.95" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="12.6" y="2053" width="1.0" height="15.0" fill="rgb(247,86,28)" rx="2" ry="2" />
<text  x="15.58" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="96.7" y="1733" width="0.2" height="15.0" fill="rgb(235,147,29)" rx="2" ry="2" />
<text  x="99.67" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1095.4" y="1845" width="0.2" height="15.0" fill="rgb(231,171,26)" rx="2" ry="2" />
<text  x="1098.40" y="1855.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1073.8" y="1637" width="0.2" height="15.0" fill="rgb(243,121,5)" rx="2" ry="2" />
<text  x="1076.78" y="1647.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1039.1" y="1733" width="0.2" height="15.0" fill="rgb(229,188,50)" rx="2" ry="2" />
<text  x="1042.08" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="798.9" y="1813" width="0.2" height="15.0" fill="rgb(214,99,44)" rx="2" ry="2" />
<text  x="801.91" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg (289 samples, 4.86%)</title><rect x="238.7" y="1909" width="57.3" height="15.0" fill="rgb(251,7,36)" rx="2" ry="2" />
<text  x="241.66" y="1919.5" >tcp_se..</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="231.1" y="1797" width="0.2" height="15.0" fill="rgb(220,188,26)" rx="2" ry="2" />
<text  x="234.13" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (29 samples, 0.49%)</title><rect x="318.8" y="1989" width="5.7" height="15.0" fill="rgb(226,25,7)" rx="2" ry="2" />
<text  x="321.78" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="49.9" y="2021" width="0.2" height="15.0" fill="rgb(228,168,4)" rx="2" ry="2" />
<text  x="52.86" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="917" width="45.2" height="15.0" fill="rgb(211,5,50)" rx="2" ry="2" />
<text  x="53.85" y="927.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="200.6" y="1893" width="0.2" height="15.0" fill="rgb(236,169,53)" rx="2" ry="2" />
<text  x="203.58" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="970.1" y="1957" width="0.4" height="15.0" fill="rgb(245,12,12)" rx="2" ry="2" />
<text  x="973.06" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="1016.9" y="1957" width="0.4" height="15.0" fill="rgb(233,176,35)" rx="2" ry="2" />
<text  x="1019.87" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="301.3" y="1717" width="0.4" height="15.0" fill="rgb(211,103,12)" rx="2" ry="2" />
<text  x="304.33" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="198.8" y="1893" width="0.2" height="15.0" fill="rgb(232,174,17)" rx="2" ry="2" />
<text  x="201.80" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1039.1" y="1797" width="0.2" height="15.0" fill="rgb(249,14,19)" rx="2" ry="2" />
<text  x="1042.08" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="402.5" y="1973" width="0.6" height="15.0" fill="rgb(208,213,7)" rx="2" ry="2" />
<text  x="405.47" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="239.1" y="1877" width="0.2" height="15.0" fill="rgb(219,169,16)" rx="2" ry="2" />
<text  x="242.06" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="171.4" y="1989" width="0.2" height="15.0" fill="rgb(223,47,48)" rx="2" ry="2" />
<text  x="174.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (18 samples, 0.30%)</title><rect x="1069.8" y="1893" width="3.6" height="15.0" fill="rgb(234,227,43)" rx="2" ry="2" />
<text  x="1072.82" y="1903.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (9 samples, 0.15%)</title><rect x="342.4" y="1941" width="1.8" height="15.0" fill="rgb(245,192,40)" rx="2" ry="2" />
<text  x="345.38" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="311.2" y="1797" width="0.6" height="15.0" fill="rgb(225,131,0)" rx="2" ry="2" />
<text  x="314.25" y="1807.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(238,83,28)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1084.9" y="1909" width="0.2" height="15.0" fill="rgb(250,82,7)" rx="2" ry="2" />
<text  x="1087.89" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="962.7" y="1893" width="0.4" height="15.0" fill="rgb(251,51,8)" rx="2" ry="2" />
<text  x="965.73" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="367.0" y="1893" width="0.2" height="15.0" fill="rgb(253,108,48)" rx="2" ry="2" />
<text  x="369.97" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1072.4" y="1669" width="0.2" height="15.0" fill="rgb(224,184,2)" rx="2" ry="2" />
<text  x="1075.40" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="288.6" y="1733" width="0.4" height="15.0" fill="rgb(246,93,36)" rx="2" ry="2" />
<text  x="291.64" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="590.9" y="1957" width="0.4" height="15.0" fill="rgb(208,75,5)" rx="2" ry="2" />
<text  x="593.88" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="581.4" y="1957" width="0.2" height="15.0" fill="rgb(233,106,5)" rx="2" ry="2" />
<text  x="584.36" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="579.6" y="1669" width="0.2" height="15.0" fill="rgb(231,31,47)" rx="2" ry="2" />
<text  x="582.57" y="1679.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (4 samples, 0.07%)</title><rect x="1072.6" y="1861" width="0.8" height="15.0" fill="rgb(230,143,10)" rx="2" ry="2" />
<text  x="1075.59" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="226.0" y="2005" width="0.2" height="15.0" fill="rgb(230,95,51)" rx="2" ry="2" />
<text  x="228.97" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (3 samples, 0.05%)</title><rect x="312.4" y="2037" width="0.6" height="15.0" fill="rgb(236,210,3)" rx="2" ry="2" />
<text  x="315.44" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="864.0" y="1973" width="1.4" height="15.0" fill="rgb(232,0,49)" rx="2" ry="2" />
<text  x="866.96" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="290.2" y="1781" width="0.6" height="15.0" fill="rgb(209,27,1)" rx="2" ry="2" />
<text  x="293.23" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="94.3" y="37" width="0.2" height="15.0" fill="rgb(251,210,18)" rx="2" ry="2" />
<text  x="97.29" y="47.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1131.1" y="1845" width="0.2" height="15.0" fill="rgb(215,59,29)" rx="2" ry="2" />
<text  x="1134.10" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="725.5" y="1909" width="0.2" height="15.0" fill="rgb(250,219,34)" rx="2" ry="2" />
<text  x="728.54" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1093.4" y="1829" width="0.2" height="15.0" fill="rgb(225,32,13)" rx="2" ry="2" />
<text  x="1096.42" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (173 samples, 2.91%)</title><rect x="602.0" y="2037" width="34.3" height="15.0" fill="rgb(215,200,26)" rx="2" ry="2" />
<text  x="604.98" y="2047.5" >fa..</text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="301.1" y="1765" width="0.2" height="15.0" fill="rgb(252,130,5)" rx="2" ry="2" />
<text  x="304.13" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="306.7" y="1957" width="0.2" height="15.0" fill="rgb(219,114,2)" rx="2" ry="2" />
<text  x="309.69" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="239.1" y="1845" width="0.2" height="15.0" fill="rgb(220,228,33)" rx="2" ry="2" />
<text  x="242.06" y="1855.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="388.8" y="1941" width="0.2" height="15.0" fill="rgb(213,96,9)" rx="2" ry="2" />
<text  x="391.79" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="374.5" y="2021" width="0.2" height="15.0" fill="rgb(237,13,22)" rx="2" ry="2" />
<text  x="377.51" y="2031.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.6" y="1893" width="0.8" height="15.0" fill="rgb(227,117,12)" rx="2" ry="2" />
<text  x="14.59" y="1903.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (9 samples, 0.15%)</title><rect x="290.8" y="1813" width="1.8" height="15.0" fill="rgb(212,105,45)" rx="2" ry="2" />
<text  x="293.82" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="638.7" y="2021" width="0.4" height="15.0" fill="rgb(251,11,30)" rx="2" ry="2" />
<text  x="641.67" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (8 samples, 0.13%)</title><rect x="174.8" y="1925" width="1.6" height="15.0" fill="rgb(227,226,35)" rx="2" ry="2" />
<text  x="177.80" y="1935.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.4" y="1941" width="0.8" height="15.0" fill="rgb(251,169,30)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="652.0" y="2037" width="1.3" height="15.0" fill="rgb(243,223,43)" rx="2" ry="2" />
<text  x="654.96" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="581.8" y="1957" width="0.2" height="15.0" fill="rgb(231,172,7)" rx="2" ry="2" />
<text  x="584.75" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="330.9" y="1941" width="0.2" height="15.0" fill="rgb(246,210,26)" rx="2" ry="2" />
<text  x="333.88" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="375.7" y="2037" width="0.2" height="15.0" fill="rgb(227,184,47)" rx="2" ry="2" />
<text  x="378.70" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (146 samples, 2.45%)</title><rect x="937.7" y="1973" width="29.0" height="15.0" fill="rgb(211,154,20)" rx="2" ry="2" />
<text  x="940.74" y="1983.5" >fo..</text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="475.9" y="1909" width="0.3" height="15.0" fill="rgb(238,23,17)" rx="2" ry="2" />
<text  x="478.85" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="357.5" y="1909" width="0.2" height="15.0" fill="rgb(227,126,25)" rx="2" ry="2" />
<text  x="360.46" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="226.0" y="1877" width="0.2" height="15.0" fill="rgb(210,165,39)" rx="2" ry="2" />
<text  x="228.97" y="1887.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="577.8" y="1637" width="0.2" height="15.0" fill="rgb(241,56,19)" rx="2" ry="2" />
<text  x="580.79" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1065.9" y="1637" width="0.2" height="15.0" fill="rgb(253,63,15)" rx="2" ry="2" />
<text  x="1068.85" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1084.9" y="1781" width="0.2" height="15.0" fill="rgb(237,203,23)" rx="2" ry="2" />
<text  x="1087.89" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1034.3" y="1813" width="0.2" height="15.0" fill="rgb(222,96,8)" rx="2" ry="2" />
<text  x="1037.32" y="1823.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(238,139,25)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="18.3" y="1909" width="0.2" height="15.0" fill="rgb(249,112,45)" rx="2" ry="2" />
<text  x="21.33" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="254.5" y="1845" width="0.2" height="15.0" fill="rgb(250,65,53)" rx="2" ry="2" />
<text  x="257.53" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="295.6" y="1749" width="0.2" height="15.0" fill="rgb(237,43,44)" rx="2" ry="2" />
<text  x="298.58" y="1759.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1067.8" y="1925" width="0.2" height="15.0" fill="rgb(231,81,20)" rx="2" ry="2" />
<text  x="1070.84" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="235.7" y="1653" width="0.2" height="15.0" fill="rgb(213,127,4)" rx="2" ry="2" />
<text  x="238.69" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="200.4" y="1893" width="0.2" height="15.0" fill="rgb(247,48,45)" rx="2" ry="2" />
<text  x="203.39" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1042.6" y="1637" width="0.2" height="15.0" fill="rgb(238,82,39)" rx="2" ry="2" />
<text  x="1045.65" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="75.0" y="37" width="0.2" height="15.0" fill="rgb(214,44,7)" rx="2" ry="2" />
<text  x="78.05" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="588.3" y="1957" width="2.0" height="15.0" fill="rgb(214,25,43)" rx="2" ry="2" />
<text  x="591.30" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="485.2" y="1973" width="0.4" height="15.0" fill="rgb(222,41,42)" rx="2" ry="2" />
<text  x="488.17" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (110 samples, 1.85%)</title><rect x="261.3" y="1685" width="21.8" height="15.0" fill="rgb(211,5,43)" rx="2" ry="2" />
<text  x="264.27" y="1695.5" >_..</text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="39.5" y="1717" width="0.4" height="15.0" fill="rgb(209,207,25)" rx="2" ry="2" />
<text  x="42.55" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (2 samples, 0.03%)</title><rect x="374.5" y="2037" width="0.4" height="15.0" fill="rgb(209,187,11)" rx="2" ry="2" />
<text  x="377.51" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (9 samples, 0.15%)</title><rect x="89.9" y="69" width="1.8" height="15.0" fill="rgb(211,218,41)" rx="2" ry="2" />
<text  x="92.92" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="532.4" y="1989" width="0.2" height="15.0" fill="rgb(215,145,9)" rx="2" ry="2" />
<text  x="535.37" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (9 samples, 0.15%)</title><rect x="192.9" y="1973" width="1.7" height="15.0" fill="rgb(209,149,20)" rx="2" ry="2" />
<text  x="195.85" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (30 samples, 0.50%)</title><rect x="730.7" y="1973" width="5.9" height="15.0" fill="rgb(230,44,8)" rx="2" ry="2" />
<text  x="733.69" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1781" width="0.2" height="15.0" fill="rgb(232,226,35)" rx="2" ry="2" />
<text  x="216.67" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="181.9" y="1893" width="0.2" height="15.0" fill="rgb(242,12,27)" rx="2" ry="2" />
<text  x="184.94" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (8 samples, 0.13%)</title><rect x="286.5" y="1669" width="1.5" height="15.0" fill="rgb(239,119,26)" rx="2" ry="2" />
<text  x="289.46" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (8 samples, 0.13%)</title><rect x="261.5" y="1557" width="1.6" height="15.0" fill="rgb(252,78,38)" rx="2" ry="2" />
<text  x="264.47" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="17.1" y="1957" width="0.4" height="15.0" fill="rgb(230,63,51)" rx="2" ry="2" />
<text  x="20.14" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (380 samples, 6.39%)</title><rect x="226.8" y="2005" width="75.3" height="15.0" fill="rgb(249,159,3)" rx="2" ry="2" />
<text  x="229.76" y="2015.5" >do_sysca..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (11 samples, 0.18%)</title><rect x="720.0" y="1893" width="2.2" height="15.0" fill="rgb(243,201,1)" rx="2" ry="2" />
<text  x="722.98" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="38.6" y="1941" width="0.2" height="15.0" fill="rgb(253,176,42)" rx="2" ry="2" />
<text  x="41.56" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="576.8" y="1749" width="0.2" height="15.0" fill="rgb(222,72,36)" rx="2" ry="2" />
<text  x="579.80" y="1759.5" ></text>
</g>
<g >
<title>skb_release_all (59 samples, 0.99%)</title><rect x="268.2" y="1445" width="11.7" height="15.0" fill="rgb(205,221,37)" rx="2" ry="2" />
<text  x="271.21" y="1455.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1086.7" y="1909" width="0.2" height="15.0" fill="rgb(207,82,16)" rx="2" ry="2" />
<text  x="1089.68" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="576.4" y="1925" width="0.2" height="15.0" fill="rgb(235,104,23)" rx="2" ry="2" />
<text  x="579.40" y="1935.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="239.1" y="1861" width="0.2" height="15.0" fill="rgb(232,160,38)" rx="2" ry="2" />
<text  x="242.06" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="298.2" y="1845" width="0.2" height="15.0" fill="rgb(210,188,32)" rx="2" ry="2" />
<text  x="301.16" y="1855.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="230.9" y="1797" width="0.2" height="15.0" fill="rgb(240,214,28)" rx="2" ry="2" />
<text  x="233.93" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="11.4" y="2021" width="1.0" height="15.0" fill="rgb(251,169,38)" rx="2" ry="2" />
<text  x="14.39" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1131.1" y="1909" width="0.2" height="15.0" fill="rgb(252,72,12)" rx="2" ry="2" />
<text  x="1134.10" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="255.3" y="1765" width="0.2" height="15.0" fill="rgb(254,223,22)" rx="2" ry="2" />
<text  x="258.32" y="1775.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="723.9" y="1893" width="0.2" height="15.0" fill="rgb(214,115,39)" rx="2" ry="2" />
<text  x="726.95" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="235.7" y="1621" width="0.2" height="15.0" fill="rgb(211,147,35)" rx="2" ry="2" />
<text  x="238.69" y="1631.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="262.3" y="1445" width="0.2" height="15.0" fill="rgb(233,147,25)" rx="2" ry="2" />
<text  x="265.26" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1131.1" y="1829" width="0.2" height="15.0" fill="rgb(228,0,16)" rx="2" ry="2" />
<text  x="1134.10" y="1839.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="372.9" y="1877" width="0.2" height="15.0" fill="rgb(238,208,30)" rx="2" ry="2" />
<text  x="375.92" y="1887.5" ></text>
</g>
<g >
<title>skb_release_data (105 samples, 1.76%)</title><rect x="1039.3" y="1893" width="20.8" height="15.0" fill="rgb(247,28,44)" rx="2" ry="2" />
<text  x="1042.28" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="186.5" y="1925" width="0.2" height="15.0" fill="rgb(211,221,17)" rx="2" ry="2" />
<text  x="189.50" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1065.9" y="1653" width="0.2" height="15.0" fill="rgb(217,37,51)" rx="2" ry="2" />
<text  x="1068.85" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="96.7" y="1621" width="0.2" height="15.0" fill="rgb(221,188,44)" rx="2" ry="2" />
<text  x="99.67" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="311.6" y="1781" width="0.2" height="15.0" fill="rgb(205,73,48)" rx="2" ry="2" />
<text  x="314.64" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="173.6" y="1877" width="0.4" height="15.0" fill="rgb(216,111,48)" rx="2" ry="2" />
<text  x="176.61" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="341.6" y="1957" width="0.2" height="15.0" fill="rgb(239,203,39)" rx="2" ry="2" />
<text  x="344.59" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="17.1" y="1925" width="0.4" height="15.0" fill="rgb(213,59,13)" rx="2" ry="2" />
<text  x="20.14" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="1103.9" y="2021" width="0.4" height="15.0" fill="rgb(212,128,13)" rx="2" ry="2" />
<text  x="1106.93" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="391.8" y="1893" width="0.2" height="15.0" fill="rgb(241,115,19)" rx="2" ry="2" />
<text  x="394.76" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="318.4" y="1989" width="0.2" height="15.0" fill="rgb(222,6,45)" rx="2" ry="2" />
<text  x="321.39" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1189" width="45.2" height="15.0" fill="rgb(215,116,15)" rx="2" ry="2" />
<text  x="53.85" y="1199.5" >[unk..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="549.4" y="1877" width="0.2" height="15.0" fill="rgb(219,130,40)" rx="2" ry="2" />
<text  x="552.43" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (88 samples, 1.48%)</title><rect x="702.5" y="1893" width="17.5" height="15.0" fill="rgb(212,96,42)" rx="2" ry="2" />
<text  x="705.53" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1413" width="45.2" height="15.0" fill="rgb(220,48,43)" rx="2" ry="2" />
<text  x="53.85" y="1423.5" >[unk..</text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="372.3" y="1845" width="0.2" height="15.0" fill="rgb(205,147,23)" rx="2" ry="2" />
<text  x="375.33" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="298.2" y="1909" width="0.2" height="15.0" fill="rgb(212,181,43)" rx="2" ry="2" />
<text  x="301.16" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="303.7" y="2021" width="0.2" height="15.0" fill="rgb(205,28,17)" rx="2" ry="2" />
<text  x="306.71" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="173.0" y="1861" width="0.2" height="15.0" fill="rgb(221,147,10)" rx="2" ry="2" />
<text  x="176.02" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="543.9" y="1989" width="0.2" height="15.0" fill="rgb(227,205,10)" rx="2" ry="2" />
<text  x="546.88" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (45 samples, 0.76%)</title><rect x="1095.6" y="2053" width="8.9" height="15.0" fill="rgb(220,78,25)" rx="2" ry="2" />
<text  x="1098.60" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="253.1" y="1813" width="0.2" height="15.0" fill="rgb(218,21,51)" rx="2" ry="2" />
<text  x="256.14" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="364.8" y="2005" width="0.2" height="15.0" fill="rgb(218,215,36)" rx="2" ry="2" />
<text  x="367.79" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1717" width="45.2" height="15.0" fill="rgb(246,114,12)" rx="2" ry="2" />
<text  x="53.85" y="1727.5" >[unk..</text>
</g>
<g >
<title>__clock_gettime (34 samples, 0.57%)</title><rect x="217.4" y="2037" width="6.8" height="15.0" fill="rgb(246,147,15)" rx="2" ry="2" />
<text  x="220.44" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="543.5" y="1765" width="0.2" height="15.0" fill="rgb(237,106,27)" rx="2" ry="2" />
<text  x="546.48" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (8 samples, 0.13%)</title><rect x="117.3" y="1925" width="1.6" height="15.0" fill="rgb(224,75,14)" rx="2" ry="2" />
<text  x="120.29" y="1935.5" ></text>
</g>
<g >
<title>__release_sock (22 samples, 0.37%)</title><rect x="1069.0" y="1909" width="4.4" height="15.0" fill="rgb(213,101,21)" rx="2" ry="2" />
<text  x="1072.03" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.08%)</title><rect x="577.2" y="1941" width="1.0" height="15.0" fill="rgb(206,189,19)" rx="2" ry="2" />
<text  x="580.19" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (2 samples, 0.03%)</title><rect x="39.5" y="1765" width="0.4" height="15.0" fill="rgb(233,23,45)" rx="2" ry="2" />
<text  x="42.55" y="1775.5" ></text>
</g>
<g >
<title>tcp_send_mss (14 samples, 0.24%)</title><rect x="293.2" y="1877" width="2.8" height="15.0" fill="rgb(214,209,37)" rx="2" ry="2" />
<text  x="296.20" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="262.3" y="1429" width="0.2" height="15.0" fill="rgb(218,198,20)" rx="2" ry="2" />
<text  x="265.26" y="1439.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1038.5" y="1893" width="0.4" height="15.0" fill="rgb(250,196,30)" rx="2" ry="2" />
<text  x="1041.48" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="213.7" y="1861" width="0.2" height="15.0" fill="rgb(209,18,37)" rx="2" ry="2" />
<text  x="216.67" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="188.3" y="1973" width="0.2" height="15.0" fill="rgb(214,32,30)" rx="2" ry="2" />
<text  x="191.29" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="581.0" y="1973" width="0.2" height="15.0" fill="rgb(236,115,26)" rx="2" ry="2" />
<text  x="583.96" y="1983.5" ></text>
</g>
<g >
<title>free (27 samples, 0.45%)</title><rect x="204.2" y="2021" width="5.3" height="15.0" fill="rgb(213,187,7)" rx="2" ry="2" />
<text  x="207.15" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="473.7" y="1925" width="0.2" height="15.0" fill="rgb(207,34,41)" rx="2" ry="2" />
<text  x="476.67" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="442.5" y="2005" width="0.4" height="15.0" fill="rgb(246,56,37)" rx="2" ry="2" />
<text  x="445.53" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (8 samples, 0.13%)</title><rect x="261.5" y="1621" width="1.6" height="15.0" fill="rgb(232,189,4)" rx="2" ry="2" />
<text  x="264.47" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (535 samples, 8.99%)</title><rect x="893.3" y="2021" width="106.1" height="15.0" fill="rgb(253,202,43)" rx="2" ry="2" />
<text  x="896.31" y="2031.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="672.8" y="1925" width="0.2" height="15.0" fill="rgb(249,80,6)" rx="2" ry="2" />
<text  x="675.78" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="286.1" y="1637" width="0.2" height="15.0" fill="rgb(221,143,53)" rx="2" ry="2" />
<text  x="289.06" y="1647.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="578.6" y="1925" width="0.2" height="15.0" fill="rgb(249,53,43)" rx="2" ry="2" />
<text  x="581.58" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="189.9" y="2005" width="0.8" height="15.0" fill="rgb(224,85,2)" rx="2" ry="2" />
<text  x="192.88" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="590.7" y="1989" width="0.6" height="15.0" fill="rgb(243,96,13)" rx="2" ry="2" />
<text  x="593.68" y="1999.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1083.9" y="1781" width="0.2" height="15.0" fill="rgb(228,3,40)" rx="2" ry="2" />
<text  x="1086.90" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (101 samples, 1.70%)</title><rect x="263.1" y="1605" width="20.0" height="15.0" fill="rgb(220,100,48)" rx="2" ry="2" />
<text  x="266.06" y="1615.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="532.2" y="1941" width="0.2" height="15.0" fill="rgb(221,38,24)" rx="2" ry="2" />
<text  x="535.17" y="1951.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="532.2" y="1877" width="0.2" height="15.0" fill="rgb(206,198,30)" rx="2" ry="2" />
<text  x="535.17" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="599.2" y="2005" width="0.4" height="15.0" fill="rgb(238,121,44)" rx="2" ry="2" />
<text  x="602.21" y="2015.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (4 samples, 0.07%)</title><rect x="50.1" y="2021" width="0.8" height="15.0" fill="rgb(213,52,9)" rx="2" ry="2" />
<text  x="53.06" y="2031.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1039.1" y="1765" width="0.2" height="15.0" fill="rgb(228,106,43)" rx="2" ry="2" />
<text  x="1042.08" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1103.9" y="2005" width="0.2" height="15.0" fill="rgb(225,154,49)" rx="2" ry="2" />
<text  x="1106.93" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="302.9" y="2005" width="0.8" height="15.0" fill="rgb(215,184,7)" rx="2" ry="2" />
<text  x="305.92" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="95.9" y="101" width="0.2" height="15.0" fill="rgb(220,104,34)" rx="2" ry="2" />
<text  x="98.87" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="181.9" y="1861" width="0.2" height="15.0" fill="rgb(209,10,40)" rx="2" ry="2" />
<text  x="184.94" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="583.7" y="1813" width="0.4" height="15.0" fill="rgb(236,116,30)" rx="2" ry="2" />
<text  x="586.74" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="95.5" y="69" width="0.2" height="15.0" fill="rgb(227,226,49)" rx="2" ry="2" />
<text  x="98.48" y="79.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="402.5" y="1845" width="0.6" height="15.0" fill="rgb(241,126,22)" rx="2" ry="2" />
<text  x="405.47" y="1855.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="292.6" y="1829" width="0.2" height="15.0" fill="rgb(231,195,37)" rx="2" ry="2" />
<text  x="295.61" y="1839.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="349.5" y="1957" width="0.2" height="15.0" fill="rgb(242,28,2)" rx="2" ry="2" />
<text  x="352.52" y="1967.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="651.8" y="2005" width="0.2" height="15.0" fill="rgb(222,199,27)" rx="2" ry="2" />
<text  x="654.76" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (3 samples, 0.05%)</title><rect x="338.0" y="1957" width="0.6" height="15.0" fill="rgb(235,222,6)" rx="2" ry="2" />
<text  x="341.02" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="298.2" y="1893" width="0.2" height="15.0" fill="rgb(217,22,22)" rx="2" ry="2" />
<text  x="301.16" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1143.8" y="1813" width="0.2" height="15.0" fill="rgb(251,27,39)" rx="2" ry="2" />
<text  x="1146.79" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="387.0" y="1941" width="0.4" height="15.0" fill="rgb(251,93,52)" rx="2" ry="2" />
<text  x="390.01" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="447.9" y="1973" width="0.8" height="15.0" fill="rgb(225,110,21)" rx="2" ry="2" />
<text  x="450.89" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="311.0" y="1845" width="0.2" height="15.0" fill="rgb(212,10,0)" rx="2" ry="2" />
<text  x="314.05" y="1855.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1059.1" y="1797" width="0.2" height="15.0" fill="rgb(237,13,8)" rx="2" ry="2" />
<text  x="1062.11" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="290.2" y="1813" width="0.6" height="15.0" fill="rgb(248,50,22)" rx="2" ry="2" />
<text  x="293.23" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="202.4" y="1941" width="0.2" height="15.0" fill="rgb(241,28,33)" rx="2" ry="2" />
<text  x="205.37" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="253.1" y="1733" width="0.2" height="15.0" fill="rgb(212,155,16)" rx="2" ry="2" />
<text  x="256.14" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="543.3" y="1925" width="0.2" height="15.0" fill="rgb(247,125,54)" rx="2" ry="2" />
<text  x="546.28" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (7 samples, 0.12%)</title><rect x="670.4" y="1925" width="1.4" height="15.0" fill="rgb(216,13,39)" rx="2" ry="2" />
<text  x="673.40" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (138 samples, 2.32%)</title><rect x="260.9" y="1749" width="27.3" height="15.0" fill="rgb(248,6,46)" rx="2" ry="2" />
<text  x="263.87" y="1759.5" >i..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="725.9" y="1925" width="1.2" height="15.0" fill="rgb(236,7,17)" rx="2" ry="2" />
<text  x="728.93" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="190.7" y="1925" width="0.2" height="15.0" fill="rgb(211,147,15)" rx="2" ry="2" />
<text  x="193.67" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="200.6" y="1909" width="0.2" height="15.0" fill="rgb(228,180,26)" rx="2" ry="2" />
<text  x="203.58" y="1919.5" ></text>
</g>
<g >
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="258.5" y="1813" width="0.4" height="15.0" fill="rgb(252,42,46)" rx="2" ry="2" />
<text  x="261.49" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="509.8" y="2021" width="0.2" height="15.0" fill="rgb(222,27,23)" rx="2" ry="2" />
<text  x="512.76" y="2031.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="577.8" y="1669" width="0.2" height="15.0" fill="rgb(247,139,32)" rx="2" ry="2" />
<text  x="580.79" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="235.7" y="1765" width="0.2" height="15.0" fill="rgb(252,141,42)" rx="2" ry="2" />
<text  x="238.69" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="238.1" y="1861" width="0.2" height="15.0" fill="rgb(237,12,9)" rx="2" ry="2" />
<text  x="241.07" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="576.2" y="1925" width="0.2" height="15.0" fill="rgb(251,8,25)" rx="2" ry="2" />
<text  x="579.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="853" width="45.2" height="15.0" fill="rgb(250,52,51)" rx="2" ry="2" />
<text  x="53.85" y="863.5" >[unk..</text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt;::begin (1 samples, 0.02%)</title><rect x="10.2" y="1925" width="0.2" height="15.0" fill="rgb(215,40,13)" rx="2" ry="2" />
<text  x="13.20" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="356.9" y="1925" width="0.8" height="15.0" fill="rgb(211,163,15)" rx="2" ry="2" />
<text  x="359.86" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="311.6" y="1733" width="0.2" height="15.0" fill="rgb(254,62,10)" rx="2" ry="2" />
<text  x="314.64" y="1743.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="235.5" y="1893" width="0.4" height="15.0" fill="rgb(242,94,6)" rx="2" ry="2" />
<text  x="238.49" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1042.6" y="1589" width="0.2" height="15.0" fill="rgb(207,99,40)" rx="2" ry="2" />
<text  x="1045.65" y="1599.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="295.4" y="1829" width="0.2" height="15.0" fill="rgb(244,42,32)" rx="2" ry="2" />
<text  x="298.38" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1084.9" y="1893" width="0.2" height="15.0" fill="rgb(233,197,36)" rx="2" ry="2" />
<text  x="1087.89" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1541" width="45.2" height="15.0" fill="rgb(230,211,38)" rx="2" ry="2" />
<text  x="53.85" y="1551.5" >[unk..</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="543.5" y="1653" width="0.2" height="15.0" fill="rgb(236,30,40)" rx="2" ry="2" />
<text  x="546.48" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="378.7" y="2005" width="3.0" height="15.0" fill="rgb(234,51,54)" rx="2" ry="2" />
<text  x="381.68" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="96.7" y="1845" width="0.2" height="15.0" fill="rgb(216,194,13)" rx="2" ry="2" />
<text  x="99.67" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="394.3" y="1973" width="0.2" height="15.0" fill="rgb(217,217,8)" rx="2" ry="2" />
<text  x="397.34" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="311.6" y="1701" width="0.2" height="15.0" fill="rgb(248,51,25)" rx="2" ry="2" />
<text  x="314.64" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="255.3" y="1557" width="0.2" height="15.0" fill="rgb(215,1,4)" rx="2" ry="2" />
<text  x="258.32" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="290.4" y="1669" width="0.4" height="15.0" fill="rgb(217,220,32)" rx="2" ry="2" />
<text  x="293.42" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="309.1" y="1877" width="0.2" height="15.0" fill="rgb(241,190,23)" rx="2" ry="2" />
<text  x="312.07" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="301.1" y="1797" width="0.6" height="15.0" fill="rgb(226,129,38)" rx="2" ry="2" />
<text  x="304.13" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1605" width="45.2" height="15.0" fill="rgb(252,158,17)" rx="2" ry="2" />
<text  x="53.85" y="1615.5" >[unk..</text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1059.7" y="1749" width="0.4" height="15.0" fill="rgb(231,141,44)" rx="2" ry="2" />
<text  x="1062.70" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="241.0" y="1701" width="0.2" height="15.0" fill="rgb(214,186,23)" rx="2" ry="2" />
<text  x="244.04" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="94.3" y="53" width="0.2" height="15.0" fill="rgb(247,11,48)" rx="2" ry="2" />
<text  x="97.29" y="63.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="212.9" y="2021" width="0.6" height="15.0" fill="rgb(254,121,54)" rx="2" ry="2" />
<text  x="215.88" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (4 samples, 0.07%)</title><rect x="894.3" y="2005" width="0.8" height="15.0" fill="rgb(212,191,6)" rx="2" ry="2" />
<text  x="897.31" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="301.3" y="1749" width="0.4" height="15.0" fill="rgb(236,3,39)" rx="2" ry="2" />
<text  x="304.33" y="1759.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1009.5" y="2037" width="0.2" height="15.0" fill="rgb(206,120,53)" rx="2" ry="2" />
<text  x="1012.53" y="2047.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1083.7" y="1493" width="0.2" height="15.0" fill="rgb(218,2,16)" rx="2" ry="2" />
<text  x="1086.70" y="1503.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="309.1" y="1813" width="0.2" height="15.0" fill="rgb(235,79,30)" rx="2" ry="2" />
<text  x="312.07" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (13 samples, 0.22%)</title><rect x="152.8" y="1941" width="2.6" height="15.0" fill="rgb(205,115,23)" rx="2" ry="2" />
<text  x="155.79" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (6 samples, 0.10%)</title><rect x="469.1" y="1925" width="1.2" height="15.0" fill="rgb(237,29,46)" rx="2" ry="2" />
<text  x="472.11" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1073.6" y="1845" width="0.4" height="15.0" fill="rgb(237,221,3)" rx="2" ry="2" />
<text  x="1076.59" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="198.8" y="1701" width="0.2" height="15.0" fill="rgb(248,76,37)" rx="2" ry="2" />
<text  x="201.80" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="394.9" y="2005" width="0.4" height="15.0" fill="rgb(240,138,36)" rx="2" ry="2" />
<text  x="397.94" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="590.7" y="1973" width="0.6" height="15.0" fill="rgb(211,14,13)" rx="2" ry="2" />
<text  x="593.68" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="566.7" y="1989" width="0.4" height="15.0" fill="rgb(220,83,36)" rx="2" ry="2" />
<text  x="569.68" y="1999.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.25%)</title><rect x="209.7" y="2021" width="3.0" height="15.0" fill="rgb(207,30,50)" rx="2" ry="2" />
<text  x="212.71" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="120.3" y="1973" width="0.6" height="15.0" fill="rgb(217,69,29)" rx="2" ry="2" />
<text  x="123.27" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="627.8" y="1973" width="1.0" height="15.0" fill="rgb(241,184,20)" rx="2" ry="2" />
<text  x="630.76" y="1983.5" ></text>
</g>
<g >
<title>__libc_sendmsg (412 samples, 6.92%)</title><rect x="224.2" y="2037" width="81.7" height="15.0" fill="rgb(217,143,4)" rx="2" ry="2" />
<text  x="227.18" y="2047.5" >__libc_se..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="816.4" y="1957" width="0.4" height="15.0" fill="rgb(212,185,17)" rx="2" ry="2" />
<text  x="819.37" y="1967.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="262.3" y="1381" width="0.2" height="15.0" fill="rgb(224,24,48)" rx="2" ry="2" />
<text  x="265.26" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1669" width="45.2" height="15.0" fill="rgb(217,162,24)" rx="2" ry="2" />
<text  x="53.85" y="1679.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="235.7" y="1733" width="0.2" height="15.0" fill="rgb(249,83,3)" rx="2" ry="2" />
<text  x="238.69" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (6 samples, 0.10%)</title><rect x="261.5" y="1509" width="1.2" height="15.0" fill="rgb(228,199,18)" rx="2" ry="2" />
<text  x="264.47" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="244.2" y="1845" width="0.2" height="15.0" fill="rgb(205,103,2)" rx="2" ry="2" />
<text  x="247.22" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="238.1" y="1893" width="0.2" height="15.0" fill="rgb(209,111,14)" rx="2" ry="2" />
<text  x="241.07" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.9" y="405" width="0.2" height="15.0" fill="rgb(242,47,6)" rx="2" ry="2" />
<text  x="98.87" y="415.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="295.6" y="1685" width="0.2" height="15.0" fill="rgb(222,99,48)" rx="2" ry="2" />
<text  x="298.58" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="724.1" y="1909" width="0.4" height="15.0" fill="rgb(227,84,29)" rx="2" ry="2" />
<text  x="727.15" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="328.3" y="1973" width="0.2" height="15.0" fill="rgb(220,207,0)" rx="2" ry="2" />
<text  x="331.30" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="474.7" y="1925" width="0.4" height="15.0" fill="rgb(223,13,37)" rx="2" ry="2" />
<text  x="477.66" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="311.2" y="1845" width="0.6" height="15.0" fill="rgb(229,125,14)" rx="2" ry="2" />
<text  x="314.25" y="1855.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="628.8" y="1989" width="0.2" height="15.0" fill="rgb(231,204,27)" rx="2" ry="2" />
<text  x="631.76" y="1999.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="883.4" y="1957" width="0.4" height="15.0" fill="rgb(219,155,8)" rx="2" ry="2" />
<text  x="886.40" y="1967.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1059.3" y="1733" width="0.2" height="15.0" fill="rgb(210,25,18)" rx="2" ry="2" />
<text  x="1062.31" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="11.4" y="1957" width="0.2" height="15.0" fill="rgb(241,120,47)" rx="2" ry="2" />
<text  x="14.39" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="236.7" y="1797" width="0.2" height="15.0" fill="rgb(251,21,18)" rx="2" ry="2" />
<text  x="239.68" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="543.5" y="1829" width="0.2" height="15.0" fill="rgb(240,38,54)" rx="2" ry="2" />
<text  x="546.48" y="1839.5" ></text>
</g>
<g >
<title>skb_release_data (57 samples, 0.96%)</title><rect x="268.2" y="1429" width="11.3" height="15.0" fill="rgb(228,141,1)" rx="2" ry="2" />
<text  x="271.21" y="1439.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1081.7" y="1877" width="0.4" height="15.0" fill="rgb(225,71,47)" rx="2" ry="2" />
<text  x="1084.72" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1083.7" y="1509" width="0.2" height="15.0" fill="rgb(235,77,18)" rx="2" ry="2" />
<text  x="1086.70" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (22 samples, 0.37%)</title><rect x="698.2" y="1893" width="4.3" height="15.0" fill="rgb(230,113,16)" rx="2" ry="2" />
<text  x="701.17" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="311.6" y="1653" width="0.2" height="15.0" fill="rgb(250,34,29)" rx="2" ry="2" />
<text  x="314.64" y="1663.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="288.4" y="1733" width="0.2" height="15.0" fill="rgb(252,44,8)" rx="2" ry="2" />
<text  x="291.44" y="1743.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="306.3" y="2037" width="0.6" height="15.0" fill="rgb(227,54,50)" rx="2" ry="2" />
<text  x="309.29" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1039.1" y="1813" width="0.2" height="15.0" fill="rgb(231,194,3)" rx="2" ry="2" />
<text  x="1042.08" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (13 samples, 0.22%)</title><rect x="445.3" y="1973" width="2.6" height="15.0" fill="rgb(234,153,26)" rx="2" ry="2" />
<text  x="448.31" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="294.6" y="1781" width="0.4" height="15.0" fill="rgb(226,76,54)" rx="2" ry="2" />
<text  x="297.59" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="202.4" y="1765" width="0.2" height="15.0" fill="rgb(205,3,9)" rx="2" ry="2" />
<text  x="205.37" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="199.0" y="1925" width="1.2" height="15.0" fill="rgb(237,19,46)" rx="2" ry="2" />
<text  x="202.00" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1145.6" y="1797" width="0.2" height="15.0" fill="rgb(224,205,36)" rx="2" ry="2" />
<text  x="1148.58" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (2 samples, 0.03%)</title><rect x="201.4" y="2021" width="0.4" height="15.0" fill="rgb(243,84,50)" rx="2" ry="2" />
<text  x="204.38" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1102.5" y="1989" width="0.4" height="15.0" fill="rgb(237,215,43)" rx="2" ry="2" />
<text  x="1105.54" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="310.3" y="1797" width="0.2" height="15.0" fill="rgb(227,146,54)" rx="2" ry="2" />
<text  x="313.26" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="966.1" y="1925" width="0.2" height="15.0" fill="rgb(246,188,52)" rx="2" ry="2" />
<text  x="969.10" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="252.9" y="1781" width="0.2" height="15.0" fill="rgb(207,13,26)" rx="2" ry="2" />
<text  x="255.94" y="1791.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="577.4" y="1829" width="0.2" height="15.0" fill="rgb(253,187,47)" rx="2" ry="2" />
<text  x="580.39" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="213.7" y="1973" width="0.2" height="15.0" fill="rgb(232,59,10)" rx="2" ry="2" />
<text  x="216.67" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="303.1" y="1877" width="0.6" height="15.0" fill="rgb(254,29,31)" rx="2" ry="2" />
<text  x="306.12" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="200.0" y="1893" width="0.2" height="15.0" fill="rgb(230,1,32)" rx="2" ry="2" />
<text  x="202.99" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="371.9" y="1845" width="0.4" height="15.0" fill="rgb(231,3,7)" rx="2" ry="2" />
<text  x="374.93" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (7 samples, 0.12%)</title><rect x="729.3" y="1973" width="1.4" height="15.0" fill="rgb(217,184,16)" rx="2" ry="2" />
<text  x="732.30" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="301.3" y="1733" width="0.4" height="15.0" fill="rgb(208,71,12)" rx="2" ry="2" />
<text  x="304.33" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1042.5" y="1797" width="0.5" height="15.0" fill="rgb(215,146,8)" rx="2" ry="2" />
<text  x="1045.45" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1013" width="45.2" height="15.0" fill="rgb(234,43,25)" rx="2" ry="2" />
<text  x="53.85" y="1023.5" >[unk..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="294.8" y="1749" width="0.2" height="15.0" fill="rgb(209,72,25)" rx="2" ry="2" />
<text  x="297.79" y="1759.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="655.3" y="2005" width="0.2" height="15.0" fill="rgb(235,8,53)" rx="2" ry="2" />
<text  x="658.33" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="345.0" y="1941" width="0.2" height="15.0" fill="rgb(246,32,14)" rx="2" ry="2" />
<text  x="347.96" y="1951.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="1089.1" y="2053" width="0.4" height="15.0" fill="rgb(248,82,23)" rx="2" ry="2" />
<text  x="1092.06" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1147.2" y="1909" width="0.2" height="15.0" fill="rgb(235,215,12)" rx="2" ry="2" />
<text  x="1150.16" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="477.8" y="1925" width="0.2" height="15.0" fill="rgb(216,179,11)" rx="2" ry="2" />
<text  x="480.84" y="1935.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (17 samples, 0.29%)</title><rect x="247.0" y="1861" width="3.4" height="15.0" fill="rgb(207,6,30)" rx="2" ry="2" />
<text  x="249.99" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="477.4" y="1925" width="0.2" height="15.0" fill="rgb(236,70,4)" rx="2" ry="2" />
<text  x="480.44" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="96.7" y="1925" width="0.2" height="15.0" fill="rgb(237,187,11)" rx="2" ry="2" />
<text  x="99.67" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="241.0" y="1845" width="0.2" height="15.0" fill="rgb(236,134,44)" rx="2" ry="2" />
<text  x="244.04" y="1855.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="1083.5" y="1845" width="0.2" height="15.0" fill="rgb(251,67,43)" rx="2" ry="2" />
<text  x="1086.50" y="1855.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (18 samples, 0.30%)</title><rect x="298.4" y="1957" width="3.5" height="15.0" fill="rgb(254,195,22)" rx="2" ry="2" />
<text  x="301.36" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (8 samples, 0.13%)</title><rect x="261.5" y="1605" width="1.6" height="15.0" fill="rgb(235,137,16)" rx="2" ry="2" />
<text  x="264.47" y="1615.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="392.4" y="1941" width="0.2" height="15.0" fill="rgb(242,221,52)" rx="2" ry="2" />
<text  x="395.36" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2021" width="0.4" height="15.0" fill="rgb(230,168,30)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (356 samples, 5.98%)</title><rect x="737.4" y="2005" width="70.6" height="15.0" fill="rgb(223,165,23)" rx="2" ry="2" />
<text  x="740.44" y="2015.5" >faceboo..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="114.1" y="1925" width="0.2" height="15.0" fill="rgb(235,38,8)" rx="2" ry="2" />
<text  x="117.12" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="230.7" y="1893" width="0.6" height="15.0" fill="rgb(212,15,37)" rx="2" ry="2" />
<text  x="233.73" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="549.4" y="1893" width="0.2" height="15.0" fill="rgb(234,225,30)" rx="2" ry="2" />
<text  x="552.43" y="1903.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1069.4" y="1893" width="0.2" height="15.0" fill="rgb(226,136,22)" rx="2" ry="2" />
<text  x="1072.42" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="659.9" y="1989" width="0.2" height="15.0" fill="rgb(243,195,44)" rx="2" ry="2" />
<text  x="662.89" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1159.9" y="2037" width="0.2" height="15.0" fill="rgb(238,140,39)" rx="2" ry="2" />
<text  x="1162.86" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="198.8" y="1877" width="0.2" height="15.0" fill="rgb(205,7,37)" rx="2" ry="2" />
<text  x="201.80" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1065.9" y="1685" width="0.2" height="15.0" fill="rgb(234,163,4)" rx="2" ry="2" />
<text  x="1068.85" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="354.3" y="1989" width="0.2" height="15.0" fill="rgb(236,117,36)" rx="2" ry="2" />
<text  x="357.28" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="301.3" y="1653" width="0.4" height="15.0" fill="rgb(246,3,30)" rx="2" ry="2" />
<text  x="304.33" y="1663.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="870.5" y="1973" width="0.8" height="15.0" fill="rgb(207,2,38)" rx="2" ry="2" />
<text  x="873.51" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="858.2" y="1909" width="0.4" height="15.0" fill="rgb(223,146,12)" rx="2" ry="2" />
<text  x="861.21" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="626.6" y="1973" width="1.2" height="15.0" fill="rgb(222,161,8)" rx="2" ry="2" />
<text  x="629.57" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="402.9" y="1701" width="0.2" height="15.0" fill="rgb(241,66,8)" rx="2" ry="2" />
<text  x="405.87" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="50.9" y="165" width="44.6" height="15.0" fill="rgb(207,31,28)" rx="2" ry="2" />
<text  x="53.85" y="175.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="258.3" y="1573" width="0.2" height="15.0" fill="rgb(238,61,51)" rx="2" ry="2" />
<text  x="261.30" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1059.7" y="1781" width="0.4" height="15.0" fill="rgb(223,46,40)" rx="2" ry="2" />
<text  x="1062.70" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (7 samples, 0.12%)</title><rect x="322.9" y="1941" width="1.4" height="15.0" fill="rgb(213,169,28)" rx="2" ry="2" />
<text  x="325.95" y="1951.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="311.4" y="1781" width="0.2" height="15.0" fill="rgb(227,135,37)" rx="2" ry="2" />
<text  x="314.45" y="1791.5" ></text>
</g>
<g >
<title>iov_iter_advance (7 samples, 0.12%)</title><rect x="250.8" y="1861" width="1.3" height="15.0" fill="rgb(215,72,4)" rx="2" ry="2" />
<text  x="253.76" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (52 samples, 0.87%)</title><rect x="571.8" y="1989" width="10.4" height="15.0" fill="rgb(254,4,32)" rx="2" ry="2" />
<text  x="574.84" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (11 samples, 0.18%)</title><rect x="537.5" y="1957" width="2.2" height="15.0" fill="rgb(242,102,49)" rx="2" ry="2" />
<text  x="540.53" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="645" width="45.2" height="15.0" fill="rgb(225,192,22)" rx="2" ry="2" />
<text  x="53.85" y="655.5" >[unk..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="584.1" y="2005" width="0.4" height="15.0" fill="rgb(227,121,5)" rx="2" ry="2" />
<text  x="587.13" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="1071.0" y="1861" width="0.4" height="15.0" fill="rgb(250,67,1)" rx="2" ry="2" />
<text  x="1074.01" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1131.1" y="1797" width="0.2" height="15.0" fill="rgb(210,73,7)" rx="2" ry="2" />
<text  x="1134.10" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="718.4" y="1877" width="0.4" height="15.0" fill="rgb(224,125,23)" rx="2" ry="2" />
<text  x="721.40" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (9 samples, 0.15%)</title><rect x="17.5" y="1973" width="1.8" height="15.0" fill="rgb(248,172,36)" rx="2" ry="2" />
<text  x="20.54" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1159.7" y="1941" width="0.2" height="15.0" fill="rgb(223,13,15)" rx="2" ry="2" />
<text  x="1162.66" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="12.4" y="2037" width="0.2" height="15.0" fill="rgb(225,21,7)" rx="2" ry="2" />
<text  x="15.38" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="394.5" y="1973" width="0.2" height="15.0" fill="rgb(227,226,33)" rx="2" ry="2" />
<text  x="397.54" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="580.0" y="1877" width="0.2" height="15.0" fill="rgb(209,33,19)" rx="2" ry="2" />
<text  x="582.97" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="295.6" y="1701" width="0.2" height="15.0" fill="rgb(225,58,46)" rx="2" ry="2" />
<text  x="298.58" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="583.7" y="1877" width="0.4" height="15.0" fill="rgb(229,101,38)" rx="2" ry="2" />
<text  x="586.74" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (26 samples, 0.44%)</title><rect x="452.8" y="1989" width="5.2" height="15.0" fill="rgb(216,97,15)" rx="2" ry="2" />
<text  x="455.85" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="340.6" y="1957" width="1.0" height="15.0" fill="rgb(248,213,51)" rx="2" ry="2" />
<text  x="343.60" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="580.0" y="1829" width="0.2" height="15.0" fill="rgb(222,2,52)" rx="2" ry="2" />
<text  x="582.97" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="213.7" y="1957" width="0.2" height="15.0" fill="rgb(215,125,18)" rx="2" ry="2" />
<text  x="216.67" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1147.2" y="1925" width="0.2" height="15.0" fill="rgb(221,108,2)" rx="2" ry="2" />
<text  x="1150.16" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="865.2" y="1941" width="0.2" height="15.0" fill="rgb(205,215,25)" rx="2" ry="2" />
<text  x="868.15" y="1951.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="226.0" y="1909" width="0.2" height="15.0" fill="rgb(236,145,30)" rx="2" ry="2" />
<text  x="228.97" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (8 samples, 0.13%)</title><rect x="376.9" y="2005" width="1.6" height="15.0" fill="rgb(241,97,46)" rx="2" ry="2" />
<text  x="379.89" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="195.2" y="1941" width="0.4" height="15.0" fill="rgb(223,146,51)" rx="2" ry="2" />
<text  x="198.23" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="725.7" y="1925" width="0.2" height="15.0" fill="rgb(231,13,46)" rx="2" ry="2" />
<text  x="728.73" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (101 samples, 1.70%)</title><rect x="263.1" y="1525" width="20.0" height="15.0" fill="rgb(226,62,32)" rx="2" ry="2" />
<text  x="266.06" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1145.6" y="1973" width="0.2" height="15.0" fill="rgb(212,18,50)" rx="2" ry="2" />
<text  x="1148.58" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="735.3" y="1925" width="0.2" height="15.0" fill="rgb(225,63,7)" rx="2" ry="2" />
<text  x="738.25" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1143.8" y="1733" width="0.2" height="15.0" fill="rgb(208,151,14)" rx="2" ry="2" />
<text  x="1146.79" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="865.2" y="1909" width="0.2" height="15.0" fill="rgb(208,12,0)" rx="2" ry="2" />
<text  x="868.15" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1104.1" y="2005" width="0.2" height="15.0" fill="rgb(232,184,19)" rx="2" ry="2" />
<text  x="1107.13" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="392.8" y="1989" width="0.2" height="15.0" fill="rgb(218,134,7)" rx="2" ry="2" />
<text  x="395.76" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="517" width="45.2" height="15.0" fill="rgb(241,189,53)" rx="2" ry="2" />
<text  x="53.85" y="527.5" >[unk..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1525" width="45.2" height="15.0" fill="rgb(221,4,44)" rx="2" ry="2" />
<text  x="53.85" y="1535.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (5 samples, 0.08%)</title><rect x="556.2" y="1989" width="1.0" height="15.0" fill="rgb(237,215,43)" rx="2" ry="2" />
<text  x="559.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (4 samples, 0.07%)</title><rect x="63.0" y="37" width="0.7" height="15.0" fill="rgb(233,162,4)" rx="2" ry="2" />
<text  x="65.95" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="203.8" y="2021" width="0.2" height="15.0" fill="rgb(251,163,16)" rx="2" ry="2" />
<text  x="206.76" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="244.2" y="1685" width="0.2" height="15.0" fill="rgb(242,31,23)" rx="2" ry="2" />
<text  x="247.22" y="1695.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="1018.5" y="2037" width="1.1" height="15.0" fill="rgb(227,63,2)" rx="2" ry="2" />
<text  x="1021.45" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="857.8" y="2005" width="0.8" height="15.0" fill="rgb(206,52,34)" rx="2" ry="2" />
<text  x="860.82" y="2015.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="202.4" y="1733" width="0.2" height="15.0" fill="rgb(244,74,38)" rx="2" ry="2" />
<text  x="205.37" y="1743.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="226.0" y="1893" width="0.2" height="15.0" fill="rgb(238,174,28)" rx="2" ry="2" />
<text  x="228.97" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (5 samples, 0.08%)</title><rect x="855.0" y="2005" width="1.0" height="15.0" fill="rgb(223,192,8)" rx="2" ry="2" />
<text  x="858.04" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1173.3" y="2053" width="0.2" height="15.0" fill="rgb(240,17,19)" rx="2" ry="2" />
<text  x="1176.34" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1059.7" y="1653" width="0.4" height="15.0" fill="rgb(205,198,16)" rx="2" ry="2" />
<text  x="1062.70" y="1663.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1017.5" y="2053" width="0.2" height="15.0" fill="rgb(222,29,44)" rx="2" ry="2" />
<text  x="1020.46" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="268.0" y="1429" width="0.2" height="15.0" fill="rgb(226,42,35)" rx="2" ry="2" />
<text  x="271.01" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="174.4" y="1893" width="0.2" height="15.0" fill="rgb(230,104,37)" rx="2" ry="2" />
<text  x="177.41" y="1903.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1068.6" y="1925" width="0.2" height="15.0" fill="rgb(206,68,8)" rx="2" ry="2" />
<text  x="1071.63" y="1935.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.02%)</title><rect x="289.0" y="1797" width="0.2" height="15.0" fill="rgb(214,216,52)" rx="2" ry="2" />
<text  x="292.04" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="855.8" y="1973" width="0.2" height="15.0" fill="rgb(251,69,9)" rx="2" ry="2" />
<text  x="858.83" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="235.7" y="1797" width="0.2" height="15.0" fill="rgb(227,171,25)" rx="2" ry="2" />
<text  x="238.69" y="1807.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="684.3" y="1909" width="0.2" height="15.0" fill="rgb(225,9,40)" rx="2" ry="2" />
<text  x="687.29" y="1919.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="94.5" y="69" width="0.2" height="15.0" fill="rgb(230,22,4)" rx="2" ry="2" />
<text  x="97.48" y="79.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="549.4" y="1909" width="0.2" height="15.0" fill="rgb(214,143,20)" rx="2" ry="2" />
<text  x="552.43" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (10 samples, 0.17%)</title><rect x="1100.6" y="2005" width="1.9" height="15.0" fill="rgb(212,109,5)" rx="2" ry="2" />
<text  x="1103.56" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1131.9" y="1989" width="0.2" height="15.0" fill="rgb(214,100,3)" rx="2" ry="2" />
<text  x="1134.89" y="1999.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="532.2" y="1861" width="0.2" height="15.0" fill="rgb(211,160,53)" rx="2" ry="2" />
<text  x="535.17" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="190.7" y="1877" width="0.2" height="15.0" fill="rgb(230,58,18)" rx="2" ry="2" />
<text  x="193.67" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="301.9" y="1797" width="0.2" height="15.0" fill="rgb(236,186,9)" rx="2" ry="2" />
<text  x="304.93" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1102.9" y="1941" width="0.2" height="15.0" fill="rgb(240,118,35)" rx="2" ry="2" />
<text  x="1105.94" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="310.1" y="1797" width="0.2" height="15.0" fill="rgb(249,78,51)" rx="2" ry="2" />
<text  x="313.06" y="1807.5" ></text>
</g>
<g >
<title>tcp_ack (100 samples, 1.68%)</title><rect x="263.1" y="1493" width="19.8" height="15.0" fill="rgb(252,27,4)" rx="2" ry="2" />
<text  x="266.06" y="1503.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="261.5" y="1413" width="0.2" height="15.0" fill="rgb(218,90,9)" rx="2" ry="2" />
<text  x="264.47" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="579.4" y="1829" width="0.4" height="15.0" fill="rgb(251,57,48)" rx="2" ry="2" />
<text  x="582.37" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="252.9" y="1605" width="0.2" height="15.0" fill="rgb(220,159,23)" rx="2" ry="2" />
<text  x="255.94" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="340.8" y="1941" width="0.8" height="15.0" fill="rgb(220,180,52)" rx="2" ry="2" />
<text  x="343.80" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="181.9" y="1717" width="0.2" height="15.0" fill="rgb(233,122,46)" rx="2" ry="2" />
<text  x="184.94" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1065.9" y="1733" width="0.2" height="15.0" fill="rgb(208,133,52)" rx="2" ry="2" />
<text  x="1068.85" y="1743.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (28 samples, 0.47%)</title><rect x="218.6" y="2021" width="5.6" height="15.0" fill="rgb(221,99,21)" rx="2" ry="2" />
<text  x="221.63" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="217.0" y="2021" width="0.4" height="15.0" fill="rgb(225,30,20)" rx="2" ry="2" />
<text  x="220.05" y="2031.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="1073.6" y="1653" width="0.4" height="15.0" fill="rgb(218,62,35)" rx="2" ry="2" />
<text  x="1076.59" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (2 samples, 0.03%)</title><rect x="69.1" y="37" width="0.4" height="15.0" fill="rgb(249,27,0)" rx="2" ry="2" />
<text  x="72.10" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="120.3" y="1957" width="0.6" height="15.0" fill="rgb(233,187,2)" rx="2" ry="2" />
<text  x="123.27" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="119.1" y="1973" width="0.2" height="15.0" fill="rgb(222,182,24)" rx="2" ry="2" />
<text  x="122.08" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1071.4" y="1829" width="0.4" height="15.0" fill="rgb(242,51,6)" rx="2" ry="2" />
<text  x="1074.41" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1082.9" y="1797" width="0.2" height="15.0" fill="rgb(238,36,42)" rx="2" ry="2" />
<text  x="1085.91" y="1807.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="1087.5" y="1973" width="0.6" height="15.0" fill="rgb(215,172,5)" rx="2" ry="2" />
<text  x="1090.47" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="670.6" y="1909" width="0.2" height="15.0" fill="rgb(225,201,49)" rx="2" ry="2" />
<text  x="673.60" y="1919.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="95.7" y="53" width="0.2" height="15.0" fill="rgb(237,6,0)" rx="2" ry="2" />
<text  x="98.67" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="292.2" y="1669" width="0.2" height="15.0" fill="rgb(230,197,38)" rx="2" ry="2" />
<text  x="295.21" y="1679.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1177.3" y="2037" width="0.2" height="15.0" fill="rgb(214,13,27)" rx="2" ry="2" />
<text  x="1180.31" y="2047.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1039.1" y="1781" width="0.2" height="15.0" fill="rgb(221,203,9)" rx="2" ry="2" />
<text  x="1042.08" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="611.1" y="1973" width="1.0" height="15.0" fill="rgb(249,58,17)" rx="2" ry="2" />
<text  x="614.11" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="69.5" y="37" width="0.2" height="15.0" fill="rgb(228,89,54)" rx="2" ry="2" />
<text  x="72.50" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="95.9" y="293" width="0.2" height="15.0" fill="rgb(237,209,42)" rx="2" ry="2" />
<text  x="98.87" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="173.0" y="1877" width="0.2" height="15.0" fill="rgb(206,184,51)" rx="2" ry="2" />
<text  x="176.02" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1573" width="45.2" height="15.0" fill="rgb(225,224,15)" rx="2" ry="2" />
<text  x="53.85" y="1583.5" >[unk..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (23 samples, 0.39%)</title><rect x="803.5" y="1989" width="4.5" height="15.0" fill="rgb(254,227,11)" rx="2" ry="2" />
<text  x="806.48" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="172.2" y="1909" width="0.2" height="15.0" fill="rgb(249,83,46)" rx="2" ry="2" />
<text  x="175.23" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (180 samples, 3.03%)</title><rect x="50.9" y="69" width="35.7" height="15.0" fill="rgb(224,68,28)" rx="2" ry="2" />
<text  x="53.85" y="79.5" >[un..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1105.1" y="1973" width="0.2" height="15.0" fill="rgb(230,149,51)" rx="2" ry="2" />
<text  x="1108.12" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="311.6" y="1749" width="0.2" height="15.0" fill="rgb(241,132,17)" rx="2" ry="2" />
<text  x="314.64" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (4 samples, 0.07%)</title><rect x="338.6" y="1957" width="0.8" height="15.0" fill="rgb(239,139,41)" rx="2" ry="2" />
<text  x="341.62" y="1967.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="967.1" y="1989" width="0.2" height="15.0" fill="rgb(212,163,31)" rx="2" ry="2" />
<text  x="970.09" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="333.7" y="1989" width="0.8" height="15.0" fill="rgb(250,206,13)" rx="2" ry="2" />
<text  x="336.66" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (3 samples, 0.05%)</title><rect x="313.4" y="2037" width="0.6" height="15.0" fill="rgb(221,190,44)" rx="2" ry="2" />
<text  x="316.43" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="198.8" y="1797" width="0.2" height="15.0" fill="rgb(221,104,9)" rx="2" ry="2" />
<text  x="201.80" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="93.3" y="37" width="0.4" height="15.0" fill="rgb(207,153,41)" rx="2" ry="2" />
<text  x="96.29" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="543.5" y="1845" width="0.2" height="15.0" fill="rgb(220,210,17)" rx="2" ry="2" />
<text  x="546.48" y="1855.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1159.7" y="1973" width="0.2" height="15.0" fill="rgb(206,109,5)" rx="2" ry="2" />
<text  x="1162.66" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="577.8" y="1749" width="0.2" height="15.0" fill="rgb(220,113,34)" rx="2" ry="2" />
<text  x="580.79" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="95.9" y="37" width="0.2" height="15.0" fill="rgb(216,166,10)" rx="2" ry="2" />
<text  x="98.87" y="47.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1083.7" y="1749" width="0.2" height="15.0" fill="rgb(210,63,27)" rx="2" ry="2" />
<text  x="1086.70" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="213.7" y="1909" width="0.2" height="15.0" fill="rgb(208,31,11)" rx="2" ry="2" />
<text  x="216.67" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="295.6" y="1813" width="0.2" height="15.0" fill="rgb(228,200,19)" rx="2" ry="2" />
<text  x="298.58" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="515.7" y="2005" width="0.2" height="15.0" fill="rgb(228,62,50)" rx="2" ry="2" />
<text  x="518.71" y="2015.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="1093.4" y="1765" width="0.2" height="15.0" fill="rgb(237,150,42)" rx="2" ry="2" />
<text  x="1096.42" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="297.4" y="1829" width="0.4" height="15.0" fill="rgb(239,3,23)" rx="2" ry="2" />
<text  x="300.36" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="255.3" y="1733" width="0.2" height="15.0" fill="rgb(215,161,7)" rx="2" ry="2" />
<text  x="258.32" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="402.5" y="1957" width="0.6" height="15.0" fill="rgb(220,112,38)" rx="2" ry="2" />
<text  x="405.47" y="1967.5" ></text>
</g>
<g >
<title>update_vsyscall (1 samples, 0.02%)</title><rect x="1082.9" y="1749" width="0.2" height="15.0" fill="rgb(225,132,34)" rx="2" ry="2" />
<text  x="1085.91" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1095.4" y="1989" width="0.2" height="15.0" fill="rgb(251,212,8)" rx="2" ry="2" />
<text  x="1098.40" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1131.1" y="1957" width="0.2" height="15.0" fill="rgb(227,78,28)" rx="2" ry="2" />
<text  x="1134.10" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="174.8" y="1877" width="0.2" height="15.0" fill="rgb(252,210,4)" rx="2" ry="2" />
<text  x="177.80" y="1887.5" ></text>
</g>
<g >
<title>tcp_write_xmit (184 samples, 3.09%)</title><rect x="256.5" y="1845" width="36.5" height="15.0" fill="rgb(233,10,51)" rx="2" ry="2" />
<text  x="259.51" y="1855.5" >tcp..</text>
</g>
<g >
<title>tcp_v4_rcv (101 samples, 1.70%)</title><rect x="263.1" y="1541" width="20.0" height="15.0" fill="rgb(211,44,24)" rx="2" ry="2" />
<text  x="266.06" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (3 samples, 0.05%)</title><rect x="199.4" y="1909" width="0.6" height="15.0" fill="rgb(248,58,20)" rx="2" ry="2" />
<text  x="202.39" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="483.2" y="1957" width="1.6" height="15.0" fill="rgb(227,134,47)" rx="2" ry="2" />
<text  x="486.19" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (7 samples, 0.12%)</title><rect x="390.6" y="1909" width="1.4" height="15.0" fill="rgb(252,80,48)" rx="2" ry="2" />
<text  x="393.57" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (31 samples, 0.52%)</title><rect x="367.2" y="1941" width="6.1" height="15.0" fill="rgb(247,150,24)" rx="2" ry="2" />
<text  x="370.17" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.7" y="245" width="0.2" height="15.0" fill="rgb(238,100,39)" rx="2" ry="2" />
<text  x="98.67" y="255.5" ></text>
</g>
<g >
<title>dst_release (27 samples, 0.45%)</title><rect x="1060.7" y="1877" width="5.4" height="15.0" fill="rgb(235,190,22)" rx="2" ry="2" />
<text  x="1063.70" y="1887.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="230.5" y="1829" width="0.2" height="15.0" fill="rgb(238,39,5)" rx="2" ry="2" />
<text  x="233.53" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1095.4" y="1861" width="0.2" height="15.0" fill="rgb(224,0,33)" rx="2" ry="2" />
<text  x="1098.40" y="1871.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="798.9" y="1733" width="0.2" height="15.0" fill="rgb(226,91,26)" rx="2" ry="2" />
<text  x="801.91" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="297.6" y="1733" width="0.2" height="15.0" fill="rgb(217,169,6)" rx="2" ry="2" />
<text  x="300.56" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="373.1" y="1877" width="0.2" height="15.0" fill="rgb(237,106,7)" rx="2" ry="2" />
<text  x="376.12" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="309.1" y="1749" width="0.2" height="15.0" fill="rgb(219,197,41)" rx="2" ry="2" />
<text  x="312.07" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="235.7" y="1605" width="0.2" height="15.0" fill="rgb(243,46,22)" rx="2" ry="2" />
<text  x="238.69" y="1615.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1188.6" y="2021" width="0.4" height="15.0" fill="rgb(245,221,41)" rx="2" ry="2" />
<text  x="1191.61" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="543.5" y="1957" width="0.2" height="15.0" fill="rgb(245,224,25)" rx="2" ry="2" />
<text  x="546.48" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="579.6" y="1685" width="0.2" height="15.0" fill="rgb(240,153,0)" rx="2" ry="2" />
<text  x="582.57" y="1695.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="263.1" y="1477" width="0.2" height="15.0" fill="rgb(229,42,6)" rx="2" ry="2" />
<text  x="266.06" y="1487.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="289.0" y="1813" width="0.2" height="15.0" fill="rgb(236,123,16)" rx="2" ry="2" />
<text  x="292.04" y="1823.5" ></text>
</g>
<g >
<title>ep_send_events_proc (19 samples, 0.32%)</title><rect x="308.7" y="1941" width="3.7" height="15.0" fill="rgb(222,162,7)" rx="2" ry="2" />
<text  x="311.67" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="581.4" y="1909" width="0.2" height="15.0" fill="rgb(205,161,54)" rx="2" ry="2" />
<text  x="584.36" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (111 samples, 1.87%)</title><rect x="261.1" y="1733" width="22.0" height="15.0" fill="rgb(239,166,15)" rx="2" ry="2" />
<text  x="264.07" y="1743.5" >_..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="1016.5" y="1973" width="0.8" height="15.0" fill="rgb(206,158,8)" rx="2" ry="2" />
<text  x="1019.47" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="584.7" y="2005" width="0.2" height="15.0" fill="rgb(242,178,37)" rx="2" ry="2" />
<text  x="587.73" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1237" width="45.2" height="15.0" fill="rgb(209,142,23)" rx="2" ry="2" />
<text  x="53.85" y="1247.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (43 samples, 0.72%)</title><rect x="572.4" y="1973" width="8.6" height="15.0" fill="rgb(225,228,41)" rx="2" ry="2" />
<text  x="575.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="181.9" y="1765" width="0.2" height="15.0" fill="rgb(236,68,29)" rx="2" ry="2" />
<text  x="184.94" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1143.8" y="1973" width="0.2" height="15.0" fill="rgb(241,198,16)" rx="2" ry="2" />
<text  x="1146.79" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="292.0" y="1749" width="0.2" height="15.0" fill="rgb(215,186,0)" rx="2" ry="2" />
<text  x="295.01" y="1759.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (7 samples, 0.12%)</title><rect x="253.3" y="1877" width="1.4" height="15.0" fill="rgb(209,78,54)" rx="2" ry="2" />
<text  x="256.34" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (26 samples, 0.44%)</title><rect x="544.5" y="1989" width="5.1" height="15.0" fill="rgb(224,74,14)" rx="2" ry="2" />
<text  x="547.47" y="1999.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="254.5" y="1733" width="0.2" height="15.0" fill="rgb(227,42,10)" rx="2" ry="2" />
<text  x="257.53" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="250.2" y="1653" width="0.2" height="15.0" fill="rgb(237,227,7)" rx="2" ry="2" />
<text  x="253.16" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="581.8" y="1813" width="0.2" height="15.0" fill="rgb(227,194,43)" rx="2" ry="2" />
<text  x="584.75" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="866.7" y="2005" width="1.0" height="15.0" fill="rgb(207,72,37)" rx="2" ry="2" />
<text  x="869.74" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (29 samples, 0.49%)</title><rect x="327.9" y="1989" width="5.8" height="15.0" fill="rgb(231,99,30)" rx="2" ry="2" />
<text  x="330.91" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_sync_single (1 samples, 0.02%)</title><rect x="174.8" y="1781" width="0.2" height="15.0" fill="rgb(211,24,26)" rx="2" ry="2" />
<text  x="177.80" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="17.1" y="1973" width="0.4" height="15.0" fill="rgb(233,203,43)" rx="2" ry="2" />
<text  x="20.14" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1012.9" y="2021" width="0.2" height="15.0" fill="rgb(243,4,14)" rx="2" ry="2" />
<text  x="1015.90" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (6 samples, 0.10%)</title><rect x="15.6" y="1941" width="1.1" height="15.0" fill="rgb(242,142,10)" rx="2" ry="2" />
<text  x="18.55" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="17.1" y="1941" width="0.4" height="15.0" fill="rgb(252,114,1)" rx="2" ry="2" />
<text  x="20.14" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (19 samples, 0.32%)</title><rect x="540.1" y="1989" width="3.8" height="15.0" fill="rgb(230,74,43)" rx="2" ry="2" />
<text  x="543.11" y="1999.5" ></text>
</g>
<g >
<title>kfree (8 samples, 0.13%)</title><rect x="277.9" y="1397" width="1.6" height="15.0" fill="rgb(215,38,23)" rx="2" ry="2" />
<text  x="280.93" y="1407.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (4 samples, 0.07%)</title><rect x="216.3" y="2021" width="0.7" height="15.0" fill="rgb(209,30,41)" rx="2" ry="2" />
<text  x="219.25" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (3 samples, 0.05%)</title><rect x="586.9" y="1989" width="0.6" height="15.0" fill="rgb(220,22,53)" rx="2" ry="2" />
<text  x="589.91" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="440.6" y="2005" width="1.9" height="15.0" fill="rgb(253,203,19)" rx="2" ry="2" />
<text  x="443.55" y="2015.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="402.5" y="1717" width="0.2" height="15.0" fill="rgb(232,95,46)" rx="2" ry="2" />
<text  x="405.47" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="589.1" y="1925" width="0.6" height="15.0" fill="rgb(217,153,35)" rx="2" ry="2" />
<text  x="592.09" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="576.8" y="1701" width="0.2" height="15.0" fill="rgb(248,204,16)" rx="2" ry="2" />
<text  x="579.80" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="11.4" y="2037" width="1.0" height="15.0" fill="rgb(227,163,10)" rx="2" ry="2" />
<text  x="14.39" y="2047.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (184 samples, 3.09%)</title><rect x="256.5" y="1861" width="36.5" height="15.0" fill="rgb(245,160,42)" rx="2" ry="2" />
<text  x="259.51" y="1871.5" >__t..</text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="963.1" y="1893" width="0.2" height="15.0" fill="rgb(223,169,40)" rx="2" ry="2" />
<text  x="966.12" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (13 samples, 0.22%)</title><rect x="809.8" y="2005" width="2.6" height="15.0" fill="rgb(234,120,46)" rx="2" ry="2" />
<text  x="812.82" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (19 samples, 0.32%)</title><rect x="360.2" y="1973" width="3.8" height="15.0" fill="rgb(236,18,7)" rx="2" ry="2" />
<text  x="363.23" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (7 samples, 0.12%)</title><rect x="942.7" y="1909" width="1.4" height="15.0" fill="rgb(206,209,29)" rx="2" ry="2" />
<text  x="945.70" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (18 samples, 0.30%)</title><rect x="1034.5" y="1893" width="3.6" height="15.0" fill="rgb(229,49,23)" rx="2" ry="2" />
<text  x="1037.52" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="96.7" y="1877" width="0.2" height="15.0" fill="rgb(226,2,41)" rx="2" ry="2" />
<text  x="99.67" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1147.2" y="1973" width="0.2" height="15.0" fill="rgb(220,163,34)" rx="2" ry="2" />
<text  x="1150.16" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="241.0" y="1669" width="0.2" height="15.0" fill="rgb(228,44,50)" rx="2" ry="2" />
<text  x="244.04" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (101 samples, 1.70%)</title><rect x="263.1" y="1637" width="20.0" height="15.0" fill="rgb(227,203,27)" rx="2" ry="2" />
<text  x="266.06" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1083.7" y="1669" width="0.2" height="15.0" fill="rgb(241,169,35)" rx="2" ry="2" />
<text  x="1086.70" y="1679.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="311.2" y="1749" width="0.2" height="15.0" fill="rgb(226,168,10)" rx="2" ry="2" />
<text  x="314.25" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (6 samples, 0.10%)</title><rect x="382.8" y="2005" width="1.2" height="15.0" fill="rgb(212,201,37)" rx="2" ry="2" />
<text  x="385.84" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="306.7" y="1941" width="0.2" height="15.0" fill="rgb(228,85,46)" rx="2" ry="2" />
<text  x="309.69" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1086.7" y="1893" width="0.2" height="15.0" fill="rgb(244,17,38)" rx="2" ry="2" />
<text  x="1089.68" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="239.1" y="1765" width="0.2" height="15.0" fill="rgb(225,126,12)" rx="2" ry="2" />
<text  x="242.06" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1381" width="45.2" height="15.0" fill="rgb(230,158,46)" rx="2" ry="2" />
<text  x="53.85" y="1391.5" >[unk..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="226.0" y="1941" width="0.2" height="15.0" fill="rgb(230,218,0)" rx="2" ry="2" />
<text  x="228.97" y="1951.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="95.9" y="53" width="0.2" height="15.0" fill="rgb(247,162,34)" rx="2" ry="2" />
<text  x="98.87" y="63.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="350.5" y="1973" width="0.2" height="15.0" fill="rgb(211,83,38)" rx="2" ry="2" />
<text  x="353.51" y="1983.5" ></text>
</g>
<g >
<title>vfprintf (5 samples, 0.08%)</title><rect x="1090.4" y="2037" width="1.0" height="15.0" fill="rgb(235,181,32)" rx="2" ry="2" />
<text  x="1093.44" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="236.7" y="1861" width="0.2" height="15.0" fill="rgb(218,33,15)" rx="2" ry="2" />
<text  x="239.68" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1015.5" y="1973" width="0.2" height="15.0" fill="rgb(239,70,6)" rx="2" ry="2" />
<text  x="1018.48" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (2 samples, 0.03%)</title><rect x="340.2" y="1957" width="0.4" height="15.0" fill="rgb(243,154,53)" rx="2" ry="2" />
<text  x="343.20" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (5 samples, 0.08%)</title><rect x="564.3" y="1989" width="1.0" height="15.0" fill="rgb(208,149,33)" rx="2" ry="2" />
<text  x="567.30" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (252 samples, 4.24%)</title><rect x="451.7" y="2005" width="49.9" height="15.0" fill="rgb(229,146,4)" rx="2" ry="2" />
<text  x="454.66" y="2015.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="50.9" y="229" width="44.8" height="15.0" fill="rgb(207,229,8)" rx="2" ry="2" />
<text  x="53.85" y="239.5" >[unk..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="581.8" y="1877" width="0.2" height="15.0" fill="rgb(247,91,10)" rx="2" ry="2" />
<text  x="584.75" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="173.4" y="1845" width="0.2" height="15.0" fill="rgb(214,94,21)" rx="2" ry="2" />
<text  x="176.42" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="50.9" y="197" width="44.8" height="15.0" fill="rgb(234,18,8)" rx="2" ry="2" />
<text  x="53.85" y="207.5" >[unk..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="230.7" y="1781" width="0.2" height="15.0" fill="rgb(232,126,54)" rx="2" ry="2" />
<text  x="233.73" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (27 samples, 0.45%)</title><rect x="151.8" y="1957" width="5.4" height="15.0" fill="rgb(206,88,27)" rx="2" ry="2" />
<text  x="154.80" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="230.7" y="1733" width="0.2" height="15.0" fill="rgb(238,17,2)" rx="2" ry="2" />
<text  x="233.73" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="237.7" y="1893" width="0.2" height="15.0" fill="rgb(246,86,3)" rx="2" ry="2" />
<text  x="240.67" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1059.7" y="1685" width="0.4" height="15.0" fill="rgb(233,88,0)" rx="2" ry="2" />
<text  x="1062.70" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="865.2" y="1957" width="0.2" height="15.0" fill="rgb(229,229,7)" rx="2" ry="2" />
<text  x="868.15" y="1967.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(249,28,23)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="218.4" y="2021" width="0.2" height="15.0" fill="rgb(209,55,35)" rx="2" ry="2" />
<text  x="221.43" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="576.8" y="1877" width="0.2" height="15.0" fill="rgb(252,62,51)" rx="2" ry="2" />
<text  x="579.80" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="672.8" y="1941" width="0.8" height="15.0" fill="rgb(242,0,39)" rx="2" ry="2" />
<text  x="675.78" y="1951.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="250.2" y="1637" width="0.2" height="15.0" fill="rgb(234,220,2)" rx="2" ry="2" />
<text  x="253.16" y="1647.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="175.4" y="1893" width="0.6" height="15.0" fill="rgb(218,80,35)" rx="2" ry="2" />
<text  x="178.40" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1037.9" y="1861" width="0.2" height="15.0" fill="rgb(206,43,52)" rx="2" ry="2" />
<text  x="1040.89" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="258.3" y="1669" width="0.2" height="15.0" fill="rgb(244,207,39)" rx="2" ry="2" />
<text  x="261.30" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (12 samples, 0.20%)</title><rect x="934.4" y="1909" width="2.3" height="15.0" fill="rgb(230,14,20)" rx="2" ry="2" />
<text  x="937.37" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="295.6" y="1781" width="0.2" height="15.0" fill="rgb(208,75,54)" rx="2" ry="2" />
<text  x="298.58" y="1791.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (4 samples, 0.07%)</title><rect x="349.7" y="1957" width="0.8" height="15.0" fill="rgb(218,97,8)" rx="2" ry="2" />
<text  x="352.72" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (3 samples, 0.05%)</title><rect x="580.0" y="1925" width="0.6" height="15.0" fill="rgb(242,155,50)" rx="2" ry="2" />
<text  x="582.97" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="258.3" y="1653" width="0.2" height="15.0" fill="rgb(219,36,34)" rx="2" ry="2" />
<text  x="261.30" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="290.6" y="1653" width="0.2" height="15.0" fill="rgb(217,175,32)" rx="2" ry="2" />
<text  x="293.62" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1093.2" y="1989" width="0.4" height="15.0" fill="rgb(212,186,0)" rx="2" ry="2" />
<text  x="1096.22" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (7 samples, 0.12%)</title><rect x="79.6" y="37" width="1.4" height="15.0" fill="rgb(239,132,9)" rx="2" ry="2" />
<text  x="82.61" y="47.5" ></text>
</g>
<g >
<title>sock_poll (14 samples, 0.24%)</title><rect x="309.3" y="1909" width="2.7" height="15.0" fill="rgb(211,42,4)" rx="2" ry="2" />
<text  x="312.26" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="262.3" y="1413" width="0.2" height="15.0" fill="rgb(225,227,4)" rx="2" ry="2" />
<text  x="265.26" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (2 samples, 0.03%)</title><rect x="262.7" y="1541" width="0.4" height="15.0" fill="rgb(207,115,26)" rx="2" ry="2" />
<text  x="265.66" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1102.1" y="1989" width="0.2" height="15.0" fill="rgb(244,31,28)" rx="2" ry="2" />
<text  x="1105.14" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (273 samples, 4.59%)</title><rect x="745.0" y="1989" width="54.1" height="15.0" fill="rgb(249,5,46)" rx="2" ry="2" />
<text  x="747.97" y="1999.5" >folly..</text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1091.4" y="2053" width="0.2" height="15.0" fill="rgb(241,166,25)" rx="2" ry="2" />
<text  x="1094.44" y="2063.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="160.5" y="1957" width="1.0" height="15.0" fill="rgb(241,35,47)" rx="2" ry="2" />
<text  x="163.52" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1042.6" y="1701" width="0.4" height="15.0" fill="rgb(217,54,45)" rx="2" ry="2" />
<text  x="1045.65" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1083.7" y="1733" width="0.2" height="15.0" fill="rgb(226,87,29)" rx="2" ry="2" />
<text  x="1086.70" y="1743.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="930.8" y="1973" width="0.6" height="15.0" fill="rgb(207,56,24)" rx="2" ry="2" />
<text  x="933.80" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="879.2" y="2037" width="0.2" height="15.0" fill="rgb(216,47,14)" rx="2" ry="2" />
<text  x="882.23" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="584.5" y="2005" width="0.2" height="15.0" fill="rgb(234,201,39)" rx="2" ry="2" />
<text  x="587.53" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="198.8" y="1829" width="0.2" height="15.0" fill="rgb(251,202,51)" rx="2" ry="2" />
<text  x="201.80" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="301.9" y="1957" width="0.2" height="15.0" fill="rgb(218,40,4)" rx="2" ry="2" />
<text  x="304.93" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1131.7" y="1957" width="0.2" height="15.0" fill="rgb(248,223,10)" rx="2" ry="2" />
<text  x="1134.69" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="333.1" y="1925" width="0.2" height="15.0" fill="rgb(236,107,51)" rx="2" ry="2" />
<text  x="336.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="310.3" y="1669" width="0.2" height="15.0" fill="rgb(211,155,6)" rx="2" ry="2" />
<text  x="313.26" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (34 samples, 0.57%)</title><rect x="56.2" y="37" width="6.8" height="15.0" fill="rgb(222,14,53)" rx="2" ry="2" />
<text  x="59.21" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1179.9" y="2021" width="0.2" height="15.0" fill="rgb(218,190,42)" rx="2" ry="2" />
<text  x="1182.89" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="677" width="45.2" height="15.0" fill="rgb(247,212,51)" rx="2" ry="2" />
<text  x="53.85" y="687.5" >[unk..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="260.9" y="1733" width="0.2" height="15.0" fill="rgb(220,216,51)" rx="2" ry="2" />
<text  x="263.87" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (17 samples, 0.29%)</title><rect x="115.7" y="1973" width="3.4" height="15.0" fill="rgb(247,55,26)" rx="2" ry="2" />
<text  x="118.70" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="606.1" y="1941" width="0.4" height="15.0" fill="rgb(240,85,6)" rx="2" ry="2" />
<text  x="609.15" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="50.9" y="245" width="44.8" height="15.0" fill="rgb(227,8,44)" rx="2" ry="2" />
<text  x="53.85" y="255.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (253 samples, 4.25%)</title><rect x="314.8" y="2021" width="50.2" height="15.0" fill="rgb(208,203,9)" rx="2" ry="2" />
<text  x="317.82" y="2031.5" >folly..</text>
</g>
<g >
<title>folly::fibers::Fiber::resume (77 samples, 1.29%)</title><rect x="1128.7" y="2005" width="15.3" height="15.0" fill="rgb(207,90,13)" rx="2" ry="2" />
<text  x="1131.72" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (14 samples, 0.24%)</title><rect x="967.7" y="1989" width="2.8" height="15.0" fill="rgb(233,117,50)" rx="2" ry="2" />
<text  x="970.68" y="1999.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (3 samples, 0.05%)</title><rect x="359.0" y="1989" width="0.6" height="15.0" fill="rgb(207,119,26)" rx="2" ry="2" />
<text  x="362.04" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (13 samples, 0.22%)</title><rect x="37.6" y="2021" width="2.5" height="15.0" fill="rgb(254,142,39)" rx="2" ry="2" />
<text  x="40.57" y="2031.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1087.1" y="1941" width="0.4" height="15.0" fill="rgb(254,125,49)" rx="2" ry="2" />
<text  x="1090.07" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="311.2" y="1829" width="0.6" height="15.0" fill="rgb(248,1,9)" rx="2" ry="2" />
<text  x="314.25" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="244.2" y="1653" width="0.2" height="15.0" fill="rgb(219,108,32)" rx="2" ry="2" />
<text  x="247.22" y="1663.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="12.6" y="1941" width="1.0" height="15.0" fill="rgb(227,127,50)" rx="2" ry="2" />
<text  x="15.58" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1637" width="45.2" height="15.0" fill="rgb(228,66,20)" rx="2" ry="2" />
<text  x="53.85" y="1647.5" >[unk..</text>
</g>
<g >
<title>irq_exit (5 samples, 0.08%)</title><rect x="577.2" y="1909" width="1.0" height="15.0" fill="rgb(253,30,30)" rx="2" ry="2" />
<text  x="580.19" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="931.2" y="1957" width="0.2" height="15.0" fill="rgb(253,37,49)" rx="2" ry="2" />
<text  x="934.19" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="472.9" y="1909" width="0.8" height="15.0" fill="rgb(221,11,19)" rx="2" ry="2" />
<text  x="475.88" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1082.1" y="1893" width="0.6" height="15.0" fill="rgb(251,68,52)" rx="2" ry="2" />
<text  x="1085.11" y="1903.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="532.2" y="1909" width="0.2" height="15.0" fill="rgb(211,127,54)" rx="2" ry="2" />
<text  x="535.17" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="652.6" y="2021" width="0.7" height="15.0" fill="rgb(205,100,38)" rx="2" ry="2" />
<text  x="655.55" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="255.3" y="1781" width="0.2" height="15.0" fill="rgb(251,182,26)" rx="2" ry="2" />
<text  x="258.32" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="1131.9" y="1925" width="0.2" height="15.0" fill="rgb(251,222,3)" rx="2" ry="2" />
<text  x="1134.89" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="724.7" y="1909" width="0.2" height="15.0" fill="rgb(216,152,10)" rx="2" ry="2" />
<text  x="727.74" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="673.0" y="1925" width="0.6" height="15.0" fill="rgb(220,93,54)" rx="2" ry="2" />
<text  x="675.98" y="1935.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1159.7" y="1909" width="0.2" height="15.0" fill="rgb(229,80,21)" rx="2" ry="2" />
<text  x="1162.66" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="180.2" y="2005" width="0.2" height="15.0" fill="rgb(227,54,25)" rx="2" ry="2" />
<text  x="183.16" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="230.5" y="1861" width="0.2" height="15.0" fill="rgb(216,83,27)" rx="2" ry="2" />
<text  x="233.53" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="12.6" y="1861" width="1.0" height="15.0" fill="rgb(224,154,21)" rx="2" ry="2" />
<text  x="15.58" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (173 samples, 2.91%)</title><rect x="602.0" y="2021" width="34.3" height="15.0" fill="rgb(207,89,2)" rx="2" ry="2" />
<text  x="604.98" y="2031.5" >[u..</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="311.6" y="1573" width="0.2" height="15.0" fill="rgb(231,114,53)" rx="2" ry="2" />
<text  x="314.64" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="119.3" y="1957" width="0.8" height="15.0" fill="rgb(219,70,24)" rx="2" ry="2" />
<text  x="122.27" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="327.3" y="1973" width="0.6" height="15.0" fill="rgb(235,145,49)" rx="2" ry="2" />
<text  x="330.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="869" width="45.2" height="15.0" fill="rgb(232,149,24)" rx="2" ry="2" />
<text  x="53.85" y="879.5" >[unk..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1159.7" y="2037" width="0.2" height="15.0" fill="rgb(225,210,11)" rx="2" ry="2" />
<text  x="1162.66" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1143.8" y="1845" width="0.2" height="15.0" fill="rgb(240,30,50)" rx="2" ry="2" />
<text  x="1146.79" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (6 samples, 0.10%)</title><rect x="174.8" y="1909" width="1.2" height="15.0" fill="rgb(223,70,31)" rx="2" ry="2" />
<text  x="177.80" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="50.9" y="213" width="44.8" height="15.0" fill="rgb(227,217,42)" rx="2" ry="2" />
<text  x="53.85" y="223.5" >[unk..</text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="882.0" y="2037" width="0.2" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" />
<text  x="885.01" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="577.8" y="1781" width="0.4" height="15.0" fill="rgb(245,149,38)" rx="2" ry="2" />
<text  x="580.79" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (4 samples, 0.07%)</title><rect x="201.8" y="2021" width="0.8" height="15.0" fill="rgb(251,145,37)" rx="2" ry="2" />
<text  x="204.77" y="2031.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="312.2" y="1781" width="0.2" height="15.0" fill="rgb(240,220,16)" rx="2" ry="2" />
<text  x="315.24" y="1791.5" ></text>
</g>
<g >
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1067.0" y="1893" width="0.4" height="15.0" fill="rgb(223,87,1)" rx="2" ry="2" />
<text  x="1070.04" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="290.2" y="1733" width="0.6" height="15.0" fill="rgb(224,163,42)" rx="2" ry="2" />
<text  x="293.23" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="250.2" y="1813" width="0.2" height="15.0" fill="rgb(234,210,33)" rx="2" ry="2" />
<text  x="253.16" y="1823.5" ></text>
</g>
<g >
<title>copyin (5 samples, 0.08%)</title><rect x="252.1" y="1877" width="1.0" height="15.0" fill="rgb(229,215,12)" rx="2" ry="2" />
<text  x="255.15" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1159.9" y="1861" width="0.2" height="15.0" fill="rgb(212,226,29)" rx="2" ry="2" />
<text  x="1162.86" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="309.1" y="1733" width="0.2" height="15.0" fill="rgb(210,161,24)" rx="2" ry="2" />
<text  x="312.07" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="295.6" y="1653" width="0.2" height="15.0" fill="rgb(244,82,54)" rx="2" ry="2" />
<text  x="298.58" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1073.6" y="1701" width="0.4" height="15.0" fill="rgb(207,176,43)" rx="2" ry="2" />
<text  x="1076.59" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (12 samples, 0.20%)</title><rect x="822.9" y="2005" width="2.4" height="15.0" fill="rgb(216,200,8)" rx="2" ry="2" />
<text  x="825.91" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="181.9" y="1973" width="0.2" height="15.0" fill="rgb(215,18,26)" rx="2" ry="2" />
<text  x="184.94" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="79.2" y="37" width="0.2" height="15.0" fill="rgb(233,72,17)" rx="2" ry="2" />
<text  x="82.21" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="56.0" y="37" width="0.2" height="15.0" fill="rgb(220,66,4)" rx="2" ry="2" />
<text  x="59.01" y="47.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="212.7" y="2021" width="0.2" height="15.0" fill="rgb(224,33,14)" rx="2" ry="2" />
<text  x="215.68" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="39.9" y="1845" width="0.2" height="15.0" fill="rgb(249,85,1)" rx="2" ry="2" />
<text  x="42.95" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="549.4" y="1957" width="0.2" height="15.0" fill="rgb(216,103,11)" rx="2" ry="2" />
<text  x="552.43" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="238.1" y="1813" width="0.2" height="15.0" fill="rgb(239,221,5)" rx="2" ry="2" />
<text  x="241.07" y="1823.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="402.9" y="1685" width="0.2" height="15.0" fill="rgb(237,187,23)" rx="2" ry="2" />
<text  x="405.87" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (2 samples, 0.03%)</title><rect x="544.1" y="1989" width="0.4" height="15.0" fill="rgb(214,148,11)" rx="2" ry="2" />
<text  x="547.07" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.08%)</title><rect x="577.2" y="1925" width="1.0" height="15.0" fill="rgb(232,90,37)" rx="2" ry="2" />
<text  x="580.19" y="1935.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="230.5" y="1845" width="0.2" height="15.0" fill="rgb(228,210,38)" rx="2" ry="2" />
<text  x="233.53" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="580.0" y="1845" width="0.2" height="15.0" fill="rgb(213,126,4)" rx="2" ry="2" />
<text  x="582.97" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.18%)</title><rect x="475.1" y="1925" width="2.1" height="15.0" fill="rgb(240,108,31)" rx="2" ry="2" />
<text  x="478.06" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="854.6" y="2005" width="0.2" height="15.0" fill="rgb(220,95,46)" rx="2" ry="2" />
<text  x="857.64" y="2015.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1087.3" y="1909" width="0.2" height="15.0" fill="rgb(231,186,34)" rx="2" ry="2" />
<text  x="1090.27" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="169.6" y="1941" width="0.2" height="15.0" fill="rgb(214,63,50)" rx="2" ry="2" />
<text  x="172.65" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="576.8" y="1765" width="0.2" height="15.0" fill="rgb(243,209,20)" rx="2" ry="2" />
<text  x="579.80" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="367.0" y="1877" width="0.2" height="15.0" fill="rgb(205,121,29)" rx="2" ry="2" />
<text  x="369.97" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1039.1" y="1861" width="0.2" height="15.0" fill="rgb(237,110,12)" rx="2" ry="2" />
<text  x="1042.08" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (5 samples, 0.08%)</title><rect x="580.0" y="1957" width="1.0" height="15.0" fill="rgb(246,9,20)" rx="2" ry="2" />
<text  x="582.97" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (88 samples, 1.48%)</title><rect x="134.1" y="1957" width="17.5" height="15.0" fill="rgb(252,55,32)" rx="2" ry="2" />
<text  x="137.15" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="202.4" y="1749" width="0.2" height="15.0" fill="rgb(248,67,36)" rx="2" ry="2" />
<text  x="205.37" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="370.1" y="1845" width="0.2" height="15.0" fill="rgb(207,191,40)" rx="2" ry="2" />
<text  x="373.15" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="195.0" y="1973" width="1.8" height="15.0" fill="rgb(230,191,49)" rx="2" ry="2" />
<text  x="198.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="871.3" y="2021" width="0.4" height="15.0" fill="rgb(232,158,39)" rx="2" ry="2" />
<text  x="874.30" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="290.4" y="1701" width="0.4" height="15.0" fill="rgb(226,51,39)" rx="2" ry="2" />
<text  x="293.42" y="1711.5" ></text>
</g>
<g >
<title>ip_local_out (147 samples, 2.47%)</title><rect x="259.3" y="1797" width="29.1" height="15.0" fill="rgb(222,36,48)" rx="2" ry="2" />
<text  x="262.29" y="1807.5" >ip..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="288.8" y="1653" width="0.2" height="15.0" fill="rgb(240,92,33)" rx="2" ry="2" />
<text  x="291.84" y="1663.5" ></text>
</g>
<g >
<title>copy_page_to_iter (13 samples, 0.22%)</title><rect x="1080.5" y="1909" width="2.6" height="15.0" fill="rgb(230,108,33)" rx="2" ry="2" />
<text  x="1083.53" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="670.2" y="1925" width="0.2" height="15.0" fill="rgb(248,117,35)" rx="2" ry="2" />
<text  x="673.21" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="586.1" y="1989" width="0.4" height="15.0" fill="rgb(240,15,2)" rx="2" ry="2" />
<text  x="589.12" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="120.9" y="1989" width="0.4" height="15.0" fill="rgb(223,195,0)" rx="2" ry="2" />
<text  x="123.86" y="1999.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (9 samples, 0.15%)</title><rect x="1089.7" y="2053" width="1.7" height="15.0" fill="rgb(216,184,52)" rx="2" ry="2" />
<text  x="1092.65" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1095.4" y="1941" width="0.2" height="15.0" fill="rgb(231,109,34)" rx="2" ry="2" />
<text  x="1098.40" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="255.3" y="1589" width="0.2" height="15.0" fill="rgb(240,92,13)" rx="2" ry="2" />
<text  x="258.32" y="1599.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1159.7" y="2005" width="0.2" height="15.0" fill="rgb(238,19,13)" rx="2" ry="2" />
<text  x="1162.66" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="594.6" y="2005" width="0.6" height="15.0" fill="rgb(245,102,35)" rx="2" ry="2" />
<text  x="597.65" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="961.5" y="1893" width="0.2" height="15.0" fill="rgb(219,85,54)" rx="2" ry="2" />
<text  x="964.54" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="322.4" y="1925" width="0.2" height="15.0" fill="rgb(253,165,39)" rx="2" ry="2" />
<text  x="325.35" y="1935.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="213.7" y="1717" width="0.2" height="15.0" fill="rgb(243,42,29)" rx="2" ry="2" />
<text  x="216.67" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="238.1" y="1877" width="0.2" height="15.0" fill="rgb(238,41,36)" rx="2" ry="2" />
<text  x="241.07" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="181.9" y="1989" width="0.2" height="15.0" fill="rgb(223,18,15)" rx="2" ry="2" />
<text  x="184.94" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="254.5" y="1829" width="0.2" height="15.0" fill="rgb(232,117,41)" rx="2" ry="2" />
<text  x="257.53" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1095.4" y="1957" width="0.2" height="15.0" fill="rgb(253,75,45)" rx="2" ry="2" />
<text  x="1098.40" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1059.7" y="1797" width="0.4" height="15.0" fill="rgb(238,184,44)" rx="2" ry="2" />
<text  x="1062.70" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="357.1" y="1909" width="0.4" height="15.0" fill="rgb(231,18,37)" rx="2" ry="2" />
<text  x="360.06" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (4 samples, 0.07%)</title><rect x="893.3" y="2005" width="0.8" height="15.0" fill="rgb(247,69,5)" rx="2" ry="2" />
<text  x="896.31" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="241.0" y="1717" width="0.2" height="15.0" fill="rgb(223,122,34)" rx="2" ry="2" />
<text  x="244.04" y="1727.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (5 samples, 0.08%)</title><rect x="349.5" y="1973" width="1.0" height="15.0" fill="rgb(221,51,44)" rx="2" ry="2" />
<text  x="352.52" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="292.2" y="1685" width="0.2" height="15.0" fill="rgb(254,205,52)" rx="2" ry="2" />
<text  x="295.21" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="173.4" y="1861" width="0.2" height="15.0" fill="rgb(229,153,41)" rx="2" ry="2" />
<text  x="176.42" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="95.5" y="85" width="0.2" height="15.0" fill="rgb(216,169,35)" rx="2" ry="2" />
<text  x="98.48" y="95.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1083.7" y="1605" width="0.2" height="15.0" fill="rgb(216,117,6)" rx="2" ry="2" />
<text  x="1086.70" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1073.4" y="1909" width="0.2" height="15.0" fill="rgb(205,165,51)" rx="2" ry="2" />
<text  x="1076.39" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1065.9" y="1813" width="0.2" height="15.0" fill="rgb(212,69,34)" rx="2" ry="2" />
<text  x="1068.85" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="301.3" y="1765" width="0.4" height="15.0" fill="rgb(244,213,18)" rx="2" ry="2" />
<text  x="304.33" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (12 samples, 0.20%)</title><rect x="700.2" y="1877" width="2.3" height="15.0" fill="rgb(248,220,17)" rx="2" ry="2" />
<text  x="703.15" y="1887.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (275 samples, 4.62%)</title><rect x="241.4" y="1893" width="54.6" height="15.0" fill="rgb(228,34,36)" rx="2" ry="2" />
<text  x="244.44" y="1903.5" >tcp_s..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (15 samples, 0.25%)</title><rect x="324.9" y="1989" width="3.0" height="15.0" fill="rgb(233,54,16)" rx="2" ry="2" />
<text  x="327.93" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc (5 samples, 0.08%)</title><rect x="235.9" y="1893" width="1.0" height="15.0" fill="rgb(239,214,30)" rx="2" ry="2" />
<text  x="238.89" y="1903.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="577.4" y="1813" width="0.2" height="15.0" fill="rgb(254,19,33)" rx="2" ry="2" />
<text  x="580.39" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="155.0" y="1925" width="0.4" height="15.0" fill="rgb(219,168,45)" rx="2" ry="2" />
<text  x="157.97" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (12 samples, 0.20%)</title><rect x="168.5" y="1973" width="2.3" height="15.0" fill="rgb(241,214,28)" rx="2" ry="2" />
<text  x="171.46" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="173.4" y="1877" width="0.2" height="15.0" fill="rgb(232,26,5)" rx="2" ry="2" />
<text  x="176.42" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="258.3" y="1525" width="0.2" height="15.0" fill="rgb(222,115,43)" rx="2" ry="2" />
<text  x="261.30" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.18%)</title><rect x="854.8" y="2021" width="2.2" height="15.0" fill="rgb(233,140,9)" rx="2" ry="2" />
<text  x="857.84" y="2031.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="96.7" y="1701" width="0.2" height="15.0" fill="rgb(212,92,40)" rx="2" ry="2" />
<text  x="99.67" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="198.8" y="1909" width="0.2" height="15.0" fill="rgb(214,78,9)" rx="2" ry="2" />
<text  x="201.80" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="194.0" y="1941" width="0.6" height="15.0" fill="rgb(212,220,25)" rx="2" ry="2" />
<text  x="197.04" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="167.1" y="1957" width="0.2" height="15.0" fill="rgb(209,133,26)" rx="2" ry="2" />
<text  x="170.07" y="1967.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1067.4" y="1909" width="0.4" height="15.0" fill="rgb(212,223,5)" rx="2" ry="2" />
<text  x="1070.44" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (6 samples, 0.10%)</title><rect x="15.6" y="1989" width="1.1" height="15.0" fill="rgb(214,35,40)" rx="2" ry="2" />
<text  x="18.55" y="1999.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="114.1" y="1845" width="0.2" height="15.0" fill="rgb(246,6,4)" rx="2" ry="2" />
<text  x="117.12" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1073.6" y="1877" width="0.4" height="15.0" fill="rgb(209,22,34)" rx="2" ry="2" />
<text  x="1076.59" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="580.8" y="1909" width="0.2" height="15.0" fill="rgb(224,193,49)" rx="2" ry="2" />
<text  x="583.76" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.6" y="1957" width="0.2" height="15.0" fill="rgb(249,199,39)" rx="2" ry="2" />
<text  x="630.57" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="195.6" y="1957" width="0.2" height="15.0" fill="rgb(246,11,10)" rx="2" ry="2" />
<text  x="198.63" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="261.7" y="1445" width="0.2" height="15.0" fill="rgb(214,44,13)" rx="2" ry="2" />
<text  x="264.67" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (1 samples, 0.02%)</title><rect x="172.8" y="1941" width="0.2" height="15.0" fill="rgb(254,128,43)" rx="2" ry="2" />
<text  x="175.82" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="157.2" y="1957" width="1.1" height="15.0" fill="rgb(214,2,38)" rx="2" ry="2" />
<text  x="160.15" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(235,37,7)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="202.4" y="1957" width="0.2" height="15.0" fill="rgb(244,52,30)" rx="2" ry="2" />
<text  x="205.37" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="478.0" y="1925" width="1.0" height="15.0" fill="rgb(244,200,44)" rx="2" ry="2" />
<text  x="481.03" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1093.4" y="1813" width="0.2" height="15.0" fill="rgb(245,186,45)" rx="2" ry="2" />
<text  x="1096.42" y="1823.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="262.1" y="1445" width="0.2" height="15.0" fill="rgb(248,43,29)" rx="2" ry="2" />
<text  x="265.06" y="1455.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="298.2" y="1941" width="0.2" height="15.0" fill="rgb(212,116,32)" rx="2" ry="2" />
<text  x="301.16" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="226.0" y="1829" width="0.2" height="15.0" fill="rgb(221,165,35)" rx="2" ry="2" />
<text  x="228.97" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (2 samples, 0.03%)</title><rect x="599.6" y="2005" width="0.4" height="15.0" fill="rgb(209,139,2)" rx="2" ry="2" />
<text  x="602.60" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.18%)</title><rect x="38.0" y="1973" width="2.1" height="15.0" fill="rgb(241,132,51)" rx="2" ry="2" />
<text  x="40.96" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="297.6" y="1781" width="0.2" height="15.0" fill="rgb(219,169,52)" rx="2" ry="2" />
<text  x="300.56" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="543.5" y="1797" width="0.2" height="15.0" fill="rgb(254,105,38)" rx="2" ry="2" />
<text  x="546.48" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="580.4" y="1877" width="0.2" height="15.0" fill="rgb(239,78,44)" rx="2" ry="2" />
<text  x="583.37" y="1887.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="1086.9" y="1957" width="0.6" height="15.0" fill="rgb(210,10,34)" rx="2" ry="2" />
<text  x="1089.87" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="1016.3" y="1989" width="0.2" height="15.0" fill="rgb(238,35,1)" rx="2" ry="2" />
<text  x="1019.27" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="312.2" y="1893" width="0.2" height="15.0" fill="rgb(243,189,35)" rx="2" ry="2" />
<text  x="315.24" y="1903.5" ></text>
</g>
<g >
<title>__free_slab (2 samples, 0.03%)</title><rect x="1059.3" y="1781" width="0.4" height="15.0" fill="rgb(245,99,54)" rx="2" ry="2" />
<text  x="1062.31" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="392.6" y="1973" width="0.2" height="15.0" fill="rgb(253,7,52)" rx="2" ry="2" />
<text  x="395.56" y="1983.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="293.0" y="1877" width="0.2" height="15.0" fill="rgb(228,138,15)" rx="2" ry="2" />
<text  x="296.00" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="387.6" y="1941" width="0.2" height="15.0" fill="rgb(217,176,46)" rx="2" ry="2" />
<text  x="390.60" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="95.9" y="277" width="0.2" height="15.0" fill="rgb(206,125,37)" rx="2" ry="2" />
<text  x="98.87" y="287.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="12.6" y="1973" width="1.0" height="15.0" fill="rgb(245,207,27)" rx="2" ry="2" />
<text  x="15.58" y="1983.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="448.7" y="2005" width="3.0" height="15.0" fill="rgb(242,140,49)" rx="2" ry="2" />
<text  x="451.68" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1071.2" y="1813" width="0.2" height="15.0" fill="rgb(220,64,5)" rx="2" ry="2" />
<text  x="1074.21" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="723.6" y="1893" width="0.3" height="15.0" fill="rgb(241,182,16)" rx="2" ry="2" />
<text  x="726.55" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="659.9" y="1973" width="0.2" height="15.0" fill="rgb(228,229,27)" rx="2" ry="2" />
<text  x="662.89" y="1983.5" ></text>
</g>
<g >
<title>mod_timer (4 samples, 0.07%)</title><rect x="291.6" y="1765" width="0.8" height="15.0" fill="rgb(209,136,25)" rx="2" ry="2" />
<text  x="294.61" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1143.8" y="1797" width="0.2" height="15.0" fill="rgb(254,65,53)" rx="2" ry="2" />
<text  x="1146.79" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1131.1" y="1877" width="0.2" height="15.0" fill="rgb(247,74,31)" rx="2" ry="2" />
<text  x="1134.10" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (3 samples, 0.05%)</title><rect x="331.1" y="1957" width="0.6" height="15.0" fill="rgb(247,112,5)" rx="2" ry="2" />
<text  x="334.08" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="808.0" y="1989" width="0.2" height="15.0" fill="rgb(252,146,32)" rx="2" ry="2" />
<text  x="811.04" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="798.9" y="1765" width="0.2" height="15.0" fill="rgb(222,197,29)" rx="2" ry="2" />
<text  x="801.91" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="258.3" y="1797" width="0.2" height="15.0" fill="rgb(213,118,49)" rx="2" ry="2" />
<text  x="261.30" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="543.3" y="1893" width="0.2" height="15.0" fill="rgb(210,94,42)" rx="2" ry="2" />
<text  x="546.28" y="1903.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="19.7" y="1941" width="0.2" height="15.0" fill="rgb(213,64,54)" rx="2" ry="2" />
<text  x="22.72" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1024.6" y="1941" width="0.2" height="15.0" fill="rgb(234,47,37)" rx="2" ry="2" />
<text  x="1027.60" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="120.7" y="1941" width="0.2" height="15.0" fill="rgb(210,31,42)" rx="2" ry="2" />
<text  x="123.66" y="1951.5" ></text>
</g>
<g >
<title>inet_recvmsg (314 samples, 5.28%)</title><rect x="1024.6" y="1957" width="62.3" height="15.0" fill="rgb(249,149,50)" rx="2" ry="2" />
<text  x="1027.60" y="1967.5" >inet_r..</text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="51.6" y="37" width="0.2" height="15.0" fill="rgb(250,174,16)" rx="2" ry="2" />
<text  x="54.65" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (1 samples, 0.02%)</title><rect x="174.6" y="1909" width="0.2" height="15.0" fill="rgb(246,110,34)" rx="2" ry="2" />
<text  x="177.61" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="931.6" y="1973" width="0.2" height="15.0" fill="rgb(241,19,19)" rx="2" ry="2" />
<text  x="934.59" y="1983.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="12.6" y="1957" width="1.0" height="15.0" fill="rgb(206,194,41)" rx="2" ry="2" />
<text  x="15.58" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (5 samples, 0.08%)</title><rect x="465.7" y="1941" width="1.0" height="15.0" fill="rgb(238,139,10)" rx="2" ry="2" />
<text  x="468.74" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="255.3" y="1605" width="0.2" height="15.0" fill="rgb(236,166,21)" rx="2" ry="2" />
<text  x="258.32" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (7 samples, 0.12%)</title><rect x="725.7" y="1941" width="1.4" height="15.0" fill="rgb(237,52,6)" rx="2" ry="2" />
<text  x="728.73" y="1951.5" ></text>
</g>
<g >
<title>trigger_dyntick_cpu.isra.35 (1 samples, 0.02%)</title><rect x="292.4" y="1765" width="0.2" height="15.0" fill="rgb(239,118,6)" rx="2" ry="2" />
<text  x="295.41" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="581.8" y="1861" width="0.2" height="15.0" fill="rgb(227,173,9)" rx="2" ry="2" />
<text  x="584.75" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="190.7" y="1861" width="0.2" height="15.0" fill="rgb(249,182,4)" rx="2" ry="2" />
<text  x="193.67" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="241.0" y="1797" width="0.2" height="15.0" fill="rgb(244,41,49)" rx="2" ry="2" />
<text  x="244.04" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (260 samples, 4.37%)</title><rect x="314.2" y="2037" width="51.6" height="15.0" fill="rgb(223,196,18)" rx="2" ry="2" />
<text  x="317.22" y="2047.5" >faceb..</text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="239.1" y="1893" width="1.3" height="15.0" fill="rgb(223,85,42)" rx="2" ry="2" />
<text  x="242.06" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="200.6" y="1861" width="0.2" height="15.0" fill="rgb(251,172,14)" rx="2" ry="2" />
<text  x="203.58" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="52.6" y="37" width="1.0" height="15.0" fill="rgb(225,173,18)" rx="2" ry="2" />
<text  x="55.64" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1159.7" y="1989" width="0.2" height="15.0" fill="rgb(234,85,48)" rx="2" ry="2" />
<text  x="1162.66" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="581.4" y="1781" width="0.2" height="15.0" fill="rgb(224,163,47)" rx="2" ry="2" />
<text  x="584.36" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="256.1" y="1765" width="0.2" height="15.0" fill="rgb(219,198,20)" rx="2" ry="2" />
<text  x="259.11" y="1775.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1159.7" y="1893" width="0.2" height="15.0" fill="rgb(209,195,12)" rx="2" ry="2" />
<text  x="1162.66" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="252.9" y="1765" width="0.2" height="15.0" fill="rgb(241,194,27)" rx="2" ry="2" />
<text  x="255.94" y="1775.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="95.9" y="85" width="0.2" height="15.0" fill="rgb(239,131,50)" rx="2" ry="2" />
<text  x="98.87" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1072.4" y="1717" width="0.2" height="15.0" fill="rgb(248,39,36)" rx="2" ry="2" />
<text  x="1075.40" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="722.2" y="1893" width="0.8" height="15.0" fill="rgb(206,9,34)" rx="2" ry="2" />
<text  x="725.16" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="402.5" y="2005" width="0.6" height="15.0" fill="rgb(215,36,4)" rx="2" ry="2" />
<text  x="405.47" y="2015.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="1083.9" y="1701" width="0.2" height="15.0" fill="rgb(246,13,30)" rx="2" ry="2" />
<text  x="1086.90" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="896.3" y="2005" width="0.2" height="15.0" fill="rgb(240,20,10)" rx="2" ry="2" />
<text  x="899.29" y="2015.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="659.9" y="1877" width="0.2" height="15.0" fill="rgb(239,182,43)" rx="2" ry="2" />
<text  x="662.89" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="313.0" y="2037" width="0.2" height="15.0" fill="rgb(217,60,35)" rx="2" ry="2" />
<text  x="316.03" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="73.3" y="37" width="0.4" height="15.0" fill="rgb(250,124,42)" rx="2" ry="2" />
<text  x="76.26" y="47.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="310.3" y="1653" width="0.2" height="15.0" fill="rgb(209,227,12)" rx="2" ry="2" />
<text  x="313.26" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1059.7" y="1637" width="0.4" height="15.0" fill="rgb(244,73,53)" rx="2" ry="2" />
<text  x="1062.70" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="916.1" y="1957" width="0.8" height="15.0" fill="rgb(221,229,32)" rx="2" ry="2" />
<text  x="919.12" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="585.7" y="1989" width="0.4" height="15.0" fill="rgb(248,108,30)" rx="2" ry="2" />
<text  x="588.72" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (5 samples, 0.08%)</title><rect x="577.2" y="1861" width="1.0" height="15.0" fill="rgb(212,229,25)" rx="2" ry="2" />
<text  x="580.19" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="289.2" y="1829" width="0.2" height="15.0" fill="rgb(251,160,4)" rx="2" ry="2" />
<text  x="292.23" y="1839.5" ></text>
</g>
<g >
<title>sched_clock_cpu (8 samples, 0.13%)</title><rect x="1085.1" y="1909" width="1.6" height="15.0" fill="rgb(240,88,44)" rx="2" ry="2" />
<text  x="1088.09" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="176.2" y="1909" width="0.2" height="15.0" fill="rgb(224,38,28)" rx="2" ry="2" />
<text  x="179.19" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (8 samples, 0.13%)</title><rect x="222.6" y="2005" width="1.6" height="15.0" fill="rgb(254,144,28)" rx="2" ry="2" />
<text  x="225.60" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="581.8" y="1749" width="0.2" height="15.0" fill="rgb(217,22,41)" rx="2" ry="2" />
<text  x="584.75" y="1759.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="255.3" y="1541" width="0.2" height="15.0" fill="rgb(208,217,12)" rx="2" ry="2" />
<text  x="258.32" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="880.2" y="2021" width="0.2" height="15.0" fill="rgb(254,178,47)" rx="2" ry="2" />
<text  x="883.23" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="258.3" y="1557" width="0.2" height="15.0" fill="rgb(225,166,54)" rx="2" ry="2" />
<text  x="261.30" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="292.2" y="1701" width="0.2" height="15.0" fill="rgb(216,204,30)" rx="2" ry="2" />
<text  x="295.21" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="384.0" y="2005" width="0.8" height="15.0" fill="rgb(211,99,48)" rx="2" ry="2" />
<text  x="387.03" y="2015.5" ></text>
</g>
<g >
<title>sock_rfree (5 samples, 0.08%)</title><rect x="1066.1" y="1877" width="0.9" height="15.0" fill="rgb(211,12,44)" rx="2" ry="2" />
<text  x="1069.05" y="1887.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="303.9" y="2021" width="0.2" height="15.0" fill="rgb(223,128,2)" rx="2" ry="2" />
<text  x="306.91" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1042.6" y="1621" width="0.2" height="15.0" fill="rgb(227,177,26)" rx="2" ry="2" />
<text  x="1045.65" y="1631.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::bitsPerBlock (2 samples, 0.03%)</title><rect x="349.1" y="1941" width="0.4" height="15.0" fill="rgb(231,103,35)" rx="2" ry="2" />
<text  x="352.13" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="95.9" y="197" width="0.2" height="15.0" fill="rgb(244,86,26)" rx="2" ry="2" />
<text  x="98.87" y="207.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="390.2" y="1909" width="0.2" height="15.0" fill="rgb(233,12,39)" rx="2" ry="2" />
<text  x="393.18" y="1919.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="452.6" y="1989" width="0.2" height="15.0" fill="rgb(231,77,18)" rx="2" ry="2" />
<text  x="455.65" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="346.3" y="1941" width="0.4" height="15.0" fill="rgb(221,29,10)" rx="2" ry="2" />
<text  x="349.35" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (4 samples, 0.07%)</title><rect x="89.9" y="37" width="0.8" height="15.0" fill="rgb(216,136,16)" rx="2" ry="2" />
<text  x="92.92" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="301.9" y="1749" width="0.2" height="15.0" fill="rgb(210,132,34)" rx="2" ry="2" />
<text  x="304.93" y="1759.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="283.9" y="1685" width="0.2" height="15.0" fill="rgb(236,4,47)" rx="2" ry="2" />
<text  x="286.88" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="583.5" y="1925" width="0.6" height="15.0" fill="rgb(224,168,9)" rx="2" ry="2" />
<text  x="586.54" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1159.7" y="2021" width="0.2" height="15.0" fill="rgb(211,149,17)" rx="2" ry="2" />
<text  x="1162.66" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="579.4" y="1717" width="0.4" height="15.0" fill="rgb(210,89,33)" rx="2" ry="2" />
<text  x="582.37" y="1727.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (2 samples, 0.03%)</title><rect x="350.1" y="1941" width="0.4" height="15.0" fill="rgb(243,122,39)" rx="2" ry="2" />
<text  x="353.12" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (5 samples, 0.08%)</title><rect x="366.2" y="1941" width="1.0" height="15.0" fill="rgb(230,46,49)" rx="2" ry="2" />
<text  x="369.18" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="10.4" y="2053" width="0.8" height="15.0" fill="rgb(206,28,48)" rx="2" ry="2" />
<text  x="13.40" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="250.2" y="1669" width="0.2" height="15.0" fill="rgb(243,122,8)" rx="2" ry="2" />
<text  x="253.16" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1093.4" y="1877" width="0.2" height="15.0" fill="rgb(217,26,17)" rx="2" ry="2" />
<text  x="1096.42" y="1887.5" ></text>
</g>
<g >
<title>all (5,950 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(236,146,23)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="182.7" y="2021" width="0.2" height="15.0" fill="rgb(206,146,40)" rx="2" ry="2" />
<text  x="185.74" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="515.9" y="2021" width="0.2" height="15.0" fill="rgb(222,125,17)" rx="2" ry="2" />
<text  x="518.91" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="578.2" y="1941" width="0.6" height="15.0" fill="rgb(205,146,45)" rx="2" ry="2" />
<text  x="581.18" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="815.6" y="1989" width="1.2" height="15.0" fill="rgb(241,146,14)" rx="2" ry="2" />
<text  x="818.57" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="200.8" y="1893" width="0.2" height="15.0" fill="rgb(207,46,46)" rx="2" ry="2" />
<text  x="203.78" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="188.3" y="1989" width="0.2" height="15.0" fill="rgb(232,181,35)" rx="2" ry="2" />
<text  x="191.29" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="241.0" y="1861" width="0.2" height="15.0" fill="rgb(240,126,52)" rx="2" ry="2" />
<text  x="244.04" y="1871.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(248,12,17)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="798.9" y="1861" width="0.2" height="15.0" fill="rgb(246,51,1)" rx="2" ry="2" />
<text  x="801.91" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="96.7" y="1893" width="0.2" height="15.0" fill="rgb(230,65,1)" rx="2" ry="2" />
<text  x="99.67" y="1903.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (9 samples, 0.15%)</title><rect x="215.7" y="2037" width="1.7" height="15.0" fill="rgb(236,20,22)" rx="2" ry="2" />
<text  x="218.66" y="2047.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::iterator_adaptor (1 samples, 0.02%)</title><rect x="348.9" y="1941" width="0.2" height="15.0" fill="rgb(252,196,9)" rx="2" ry="2" />
<text  x="351.93" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="581.4" y="1925" width="0.2" height="15.0" fill="rgb(207,214,16)" rx="2" ry="2" />
<text  x="584.36" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1131.1" y="1813" width="0.2" height="15.0" fill="rgb(212,151,35)" rx="2" ry="2" />
<text  x="1134.10" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="1188.6" y="2053" width="0.4" height="15.0" fill="rgb(252,2,54)" rx="2" ry="2" />
<text  x="1191.61" y="2063.5" ></text>
</g>
<g >
<title>__fget (15 samples, 0.25%)</title><rect x="298.8" y="1909" width="2.9" height="15.0" fill="rgb(252,69,45)" rx="2" ry="2" />
<text  x="301.75" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="261.9" y="1461" width="0.4" height="15.0" fill="rgb(231,91,8)" rx="2" ry="2" />
<text  x="264.87" y="1471.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="580.6" y="1909" width="0.2" height="15.0" fill="rgb(212,79,26)" rx="2" ry="2" />
<text  x="583.56" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="533" width="45.2" height="15.0" fill="rgb(205,195,47)" rx="2" ry="2" />
<text  x="53.85" y="543.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.7" y="229" width="0.2" height="15.0" fill="rgb(214,45,0)" rx="2" ry="2" />
<text  x="98.67" y="239.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (206 samples, 3.46%)</title><rect x="410.8" y="2037" width="40.9" height="15.0" fill="rgb(211,149,29)" rx="2" ry="2" />
<text  x="413.80" y="2047.5" >fac..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="1144.2" y="2005" width="0.6" height="15.0" fill="rgb(252,11,11)" rx="2" ry="2" />
<text  x="1147.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="644.4" y="1989" width="0.2" height="15.0" fill="rgb(215,51,10)" rx="2" ry="2" />
<text  x="647.42" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1104.3" y="2037" width="0.2" height="15.0" fill="rgb(226,108,2)" rx="2" ry="2" />
<text  x="1107.33" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (67 samples, 1.13%)</title><rect x="662.3" y="1973" width="13.3" height="15.0" fill="rgb(230,170,15)" rx="2" ry="2" />
<text  x="665.27" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="577.8" y="1685" width="0.2" height="15.0" fill="rgb(219,52,51)" rx="2" ry="2" />
<text  x="580.79" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="514.5" y="2005" width="0.2" height="15.0" fill="rgb(249,102,9)" rx="2" ry="2" />
<text  x="517.52" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="226.0" y="1845" width="0.2" height="15.0" fill="rgb(237,104,35)" rx="2" ry="2" />
<text  x="228.97" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="174.8" y="1829" width="0.2" height="15.0" fill="rgb(226,31,47)" rx="2" ry="2" />
<text  x="177.80" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1147.2" y="2005" width="0.2" height="15.0" fill="rgb(253,189,24)" rx="2" ry="2" />
<text  x="1150.16" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="581.4" y="1829" width="0.2" height="15.0" fill="rgb(246,21,39)" rx="2" ry="2" />
<text  x="584.36" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (3 samples, 0.05%)</title><rect x="878.6" y="2005" width="0.6" height="15.0" fill="rgb(214,177,20)" rx="2" ry="2" />
<text  x="881.64" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1102.3" y="1989" width="0.2" height="15.0" fill="rgb(218,126,23)" rx="2" ry="2" />
<text  x="1105.34" y="1999.5" ></text>
</g>
<g >
<title>std::current_exception@plt (1 samples, 0.02%)</title><rect x="725.3" y="1909" width="0.2" height="15.0" fill="rgb(209,82,30)" rx="2" ry="2" />
<text  x="728.34" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="288.8" y="1637" width="0.2" height="15.0" fill="rgb(250,39,38)" rx="2" ry="2" />
<text  x="291.84" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="829.5" y="1989" width="0.2" height="15.0" fill="rgb(252,49,3)" rx="2" ry="2" />
<text  x="832.46" y="1999.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="999.4" y="2037" width="0.6" height="15.0" fill="rgb(233,93,12)" rx="2" ry="2" />
<text  x="1002.42" y="2047.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="255.1" y="1797" width="0.2" height="15.0" fill="rgb(232,204,3)" rx="2" ry="2" />
<text  x="258.12" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="157.0" y="1941" width="0.2" height="15.0" fill="rgb(241,31,41)" rx="2" ry="2" />
<text  x="159.95" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="198.8" y="1765" width="0.2" height="15.0" fill="rgb(225,136,13)" rx="2" ry="2" />
<text  x="201.80" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="235.7" y="1861" width="0.2" height="15.0" fill="rgb(249,227,51)" rx="2" ry="2" />
<text  x="238.69" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="164.5" y="1973" width="0.6" height="15.0" fill="rgb(227,6,31)" rx="2" ry="2" />
<text  x="167.49" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="241.0" y="1877" width="0.2" height="15.0" fill="rgb(232,228,49)" rx="2" ry="2" />
<text  x="244.04" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="172.2" y="1925" width="0.2" height="15.0" fill="rgb(211,48,40)" rx="2" ry="2" />
<text  x="175.23" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="629" width="45.2" height="15.0" fill="rgb(231,152,23)" rx="2" ry="2" />
<text  x="53.85" y="639.5" >[unk..</text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="539.5" y="1941" width="0.2" height="15.0" fill="rgb(223,160,3)" rx="2" ry="2" />
<text  x="542.51" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="638.7" y="2005" width="0.2" height="15.0" fill="rgb(232,76,24)" rx="2" ry="2" />
<text  x="641.67" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="543.3" y="1957" width="0.2" height="15.0" fill="rgb(242,226,41)" rx="2" ry="2" />
<text  x="546.28" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1159.9" y="2005" width="0.2" height="15.0" fill="rgb(229,187,19)" rx="2" ry="2" />
<text  x="1162.86" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="170.4" y="1957" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="173.44" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="290.6" y="1589" width="0.2" height="15.0" fill="rgb(233,7,48)" rx="2" ry="2" />
<text  x="293.62" y="1599.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="213.7" y="1621" width="0.2" height="15.0" fill="rgb(228,190,32)" rx="2" ry="2" />
<text  x="216.67" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="466.7" y="1941" width="0.4" height="15.0" fill="rgb(207,162,22)" rx="2" ry="2" />
<text  x="469.73" y="1951.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="213.7" y="1669" width="0.2" height="15.0" fill="rgb(249,197,20)" rx="2" ry="2" />
<text  x="216.67" y="1679.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="301.3" y="1605" width="0.2" height="15.0" fill="rgb(236,70,54)" rx="2" ry="2" />
<text  x="304.33" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="290.6" y="1573" width="0.2" height="15.0" fill="rgb(243,170,40)" rx="2" ry="2" />
<text  x="293.62" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="253.1" y="1637" width="0.2" height="15.0" fill="rgb(227,185,49)" rx="2" ry="2" />
<text  x="256.14" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1105.1" y="2005" width="0.2" height="15.0" fill="rgb(224,103,0)" rx="2" ry="2" />
<text  x="1108.12" y="2015.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1082.9" y="1765" width="0.2" height="15.0" fill="rgb(223,208,45)" rx="2" ry="2" />
<text  x="1085.91" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (47 samples, 0.79%)</title><rect x="884.0" y="2037" width="9.3" height="15.0" fill="rgb(230,22,22)" rx="2" ry="2" />
<text  x="886.99" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="95.9" y="229" width="0.2" height="15.0" fill="rgb(205,32,34)" rx="2" ry="2" />
<text  x="98.87" y="239.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="159.3" y="1957" width="0.2" height="15.0" fill="rgb(247,125,21)" rx="2" ry="2" />
<text  x="162.33" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (27 samples, 0.45%)</title><rect x="319.2" y="1973" width="5.3" height="15.0" fill="rgb(220,9,43)" rx="2" ry="2" />
<text  x="322.18" y="1983.5" ></text>
</g>
<g >
<title>kfree (4 samples, 0.07%)</title><rect x="1041.5" y="1877" width="0.8" height="15.0" fill="rgb(219,85,46)" rx="2" ry="2" />
<text  x="1044.46" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="55.6" y="37" width="0.4" height="15.0" fill="rgb(253,196,23)" rx="2" ry="2" />
<text  x="58.61" y="47.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="373.5" y="1941" width="0.6" height="15.0" fill="rgb(236,128,0)" rx="2" ry="2" />
<text  x="376.52" y="1951.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="96.1" y="1989" width="0.2" height="15.0" fill="rgb(239,181,16)" rx="2" ry="2" />
<text  x="99.07" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="173.6" y="1893" width="0.4" height="15.0" fill="rgb(228,157,33)" rx="2" ry="2" />
<text  x="176.61" y="1903.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (7 samples, 0.12%)</title><rect x="348.1" y="1957" width="1.4" height="15.0" fill="rgb(235,63,53)" rx="2" ry="2" />
<text  x="351.13" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="583.7" y="1669" width="0.2" height="15.0" fill="rgb(209,221,46)" rx="2" ry="2" />
<text  x="586.74" y="1679.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="213.7" y="1653" width="0.2" height="15.0" fill="rgb(253,69,50)" rx="2" ry="2" />
<text  x="216.67" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (4 samples, 0.07%)</title><rect x="434.8" y="2005" width="0.8" height="15.0" fill="rgb(241,116,41)" rx="2" ry="2" />
<text  x="437.80" y="2015.5" ></text>
</g>
<g >
<title>rb_erase (13 samples, 0.22%)</title><rect x="279.9" y="1461" width="2.6" height="15.0" fill="rgb(239,11,39)" rx="2" ry="2" />
<text  x="282.91" y="1471.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="86.0" y="37" width="0.6" height="15.0" fill="rgb(241,44,21)" rx="2" ry="2" />
<text  x="88.96" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="252.9" y="1829" width="0.2" height="15.0" fill="rgb(223,112,8)" rx="2" ry="2" />
<text  x="255.94" y="1839.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="659.9" y="1909" width="0.2" height="15.0" fill="rgb(228,65,54)" rx="2" ry="2" />
<text  x="662.89" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="882.4" y="2005" width="1.4" height="15.0" fill="rgb(216,67,38)" rx="2" ry="2" />
<text  x="885.41" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (22 samples, 0.37%)</title><rect x="948.2" y="1909" width="4.4" height="15.0" fill="rgb(254,117,7)" rx="2" ry="2" />
<text  x="951.25" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="301.9" y="1877" width="0.2" height="15.0" fill="rgb(243,93,21)" rx="2" ry="2" />
<text  x="304.93" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="344.2" y="1957" width="0.2" height="15.0" fill="rgb(226,99,1)" rx="2" ry="2" />
<text  x="347.17" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="95.5" y="53" width="0.2" height="15.0" fill="rgb(243,97,43)" rx="2" ry="2" />
<text  x="98.48" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="895.5" y="2005" width="0.2" height="15.0" fill="rgb(222,223,48)" rx="2" ry="2" />
<text  x="898.50" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="195.8" y="1957" width="0.2" height="15.0" fill="rgb(214,175,0)" rx="2" ry="2" />
<text  x="198.83" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="192.5" y="1973" width="0.2" height="15.0" fill="rgb(206,228,38)" rx="2" ry="2" />
<text  x="195.45" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="639.1" y="2021" width="3.3" height="15.0" fill="rgb(210,85,22)" rx="2" ry="2" />
<text  x="642.07" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="333.7" y="1973" width="0.8" height="15.0" fill="rgb(223,48,23)" rx="2" ry="2" />
<text  x="336.66" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (344 samples, 5.78%)</title><rect x="1019.8" y="2037" width="68.3" height="15.0" fill="rgb(218,44,19)" rx="2" ry="2" />
<text  x="1022.84" y="2047.5" >entry_S..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="669.6" y="1941" width="0.2" height="15.0" fill="rgb(237,142,11)" rx="2" ry="2" />
<text  x="672.61" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="290.6" y="1605" width="0.2" height="15.0" fill="rgb(246,58,48)" rx="2" ry="2" />
<text  x="293.62" y="1615.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="19.7" y="1957" width="0.2" height="15.0" fill="rgb(226,156,52)" rx="2" ry="2" />
<text  x="22.72" y="1967.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="262.5" y="1461" width="0.2" height="15.0" fill="rgb(238,154,46)" rx="2" ry="2" />
<text  x="265.46" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13 samples, 0.22%)</title><rect x="198.8" y="2005" width="2.6" height="15.0" fill="rgb(243,37,34)" rx="2" ry="2" />
<text  x="201.80" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="114.1" y="1989" width="0.2" height="15.0" fill="rgb(211,20,34)" rx="2" ry="2" />
<text  x="117.12" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (8 samples, 0.13%)</title><rect x="117.3" y="1941" width="1.6" height="15.0" fill="rgb(245,224,36)" rx="2" ry="2" />
<text  x="120.29" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="301.9" y="1733" width="0.2" height="15.0" fill="rgb(252,146,16)" rx="2" ry="2" />
<text  x="304.93" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="18.1" y="1957" width="0.4" height="15.0" fill="rgb(212,22,24)" rx="2" ry="2" />
<text  x="21.13" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="543.5" y="1813" width="0.2" height="15.0" fill="rgb(244,187,10)" rx="2" ry="2" />
<text  x="546.48" y="1823.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="1087.1" y="1925" width="0.4" height="15.0" fill="rgb(234,83,0)" rx="2" ry="2" />
<text  x="1090.07" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="253.1" y="1621" width="0.2" height="15.0" fill="rgb(217,177,4)" rx="2" ry="2" />
<text  x="256.14" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (72 samples, 1.21%)</title><rect x="857.0" y="2037" width="14.3" height="15.0" fill="rgb(248,55,51)" rx="2" ry="2" />
<text  x="860.02" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (7 samples, 0.12%)</title><rect x="38.8" y="1877" width="1.3" height="15.0" fill="rgb(241,226,53)" rx="2" ry="2" />
<text  x="41.76" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="573.6" y="1957" width="0.4" height="15.0" fill="rgb(225,105,27)" rx="2" ry="2" />
<text  x="576.62" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="519.9" y="2037" width="0.4" height="15.0" fill="rgb(227,225,27)" rx="2" ry="2" />
<text  x="522.88" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="543.5" y="1733" width="0.2" height="15.0" fill="rgb(218,200,39)" rx="2" ry="2" />
<text  x="546.48" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (22 samples, 0.37%)</title><rect x="388.2" y="1973" width="4.4" height="15.0" fill="rgb(228,62,6)" rx="2" ry="2" />
<text  x="391.19" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="95.9" y="341" width="0.2" height="15.0" fill="rgb(233,149,41)" rx="2" ry="2" />
<text  x="98.87" y="351.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="301.3" y="1701" width="0.4" height="15.0" fill="rgb(229,213,40)" rx="2" ry="2" />
<text  x="304.33" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1145.6" y="1893" width="0.2" height="15.0" fill="rgb(248,221,43)" rx="2" ry="2" />
<text  x="1148.58" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="256.1" y="1829" width="0.2" height="15.0" fill="rgb(214,125,5)" rx="2" ry="2" />
<text  x="259.11" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="359.6" y="1989" width="0.2" height="15.0" fill="rgb(231,176,40)" rx="2" ry="2" />
<text  x="362.64" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="1877" width="0.2" height="15.0" fill="rgb(229,14,41)" rx="2" ry="2" />
<text  x="1037.32" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="583.5" y="1989" width="0.6" height="15.0" fill="rgb(227,47,16)" rx="2" ry="2" />
<text  x="586.54" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1147.0" y="1925" width="0.2" height="15.0" fill="rgb(248,39,46)" rx="2" ry="2" />
<text  x="1149.96" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="627.6" y="1909" width="0.2" height="15.0" fill="rgb(221,2,46)" rx="2" ry="2" />
<text  x="630.57" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.12%)</title><rect x="329.7" y="1957" width="1.4" height="15.0" fill="rgb(246,123,7)" rx="2" ry="2" />
<text  x="332.69" y="1967.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (6 samples, 0.10%)</title><rect x="345.2" y="1925" width="1.1" height="15.0" fill="rgb(222,69,1)" rx="2" ry="2" />
<text  x="348.16" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="20.5" y="2005" width="0.2" height="15.0" fill="rgb(217,64,20)" rx="2" ry="2" />
<text  x="23.51" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="297.6" y="1717" width="0.2" height="15.0" fill="rgb(244,225,51)" rx="2" ry="2" />
<text  x="300.56" y="1727.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1015.5" y="1861" width="0.2" height="15.0" fill="rgb(214,11,35)" rx="2" ry="2" />
<text  x="1018.48" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="581.4" y="1893" width="0.2" height="15.0" fill="rgb(235,17,24)" rx="2" ry="2" />
<text  x="584.36" y="1903.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (4 samples, 0.07%)</title><rect x="347.1" y="1957" width="0.8" height="15.0" fill="rgb(249,140,11)" rx="2" ry="2" />
<text  x="350.14" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (112 samples, 1.88%)</title><rect x="909.2" y="1989" width="22.2" height="15.0" fill="rgb(245,165,46)" rx="2" ry="2" />
<text  x="912.18" y="1999.5" >f..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="290.6" y="1637" width="0.2" height="15.0" fill="rgb(209,33,47)" rx="2" ry="2" />
<text  x="293.62" y="1647.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="95.7" y="117" width="0.2" height="15.0" fill="rgb(220,63,48)" rx="2" ry="2" />
<text  x="98.67" y="127.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="286.1" y="1653" width="0.2" height="15.0" fill="rgb(239,83,50)" rx="2" ry="2" />
<text  x="289.06" y="1663.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(216,58,0)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="970.5" y="1973" width="0.2" height="15.0" fill="rgb(239,198,40)" rx="2" ry="2" />
<text  x="973.46" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1086.7" y="1861" width="0.2" height="15.0" fill="rgb(220,160,23)" rx="2" ry="2" />
<text  x="1089.68" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.80%)</title><rect x="50.9" y="181" width="44.8" height="15.0" fill="rgb(231,68,49)" rx="2" ry="2" />
<text  x="53.85" y="191.5" >[unk..</text>
</g>
<g >
<title>_cond_resched (3 samples, 0.05%)</title><rect x="1081.5" y="1893" width="0.6" height="15.0" fill="rgb(227,27,38)" rx="2" ry="2" />
<text  x="1084.52" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="310.1" y="1813" width="0.4" height="15.0" fill="rgb(253,169,13)" rx="2" ry="2" />
<text  x="313.06" y="1823.5" ></text>
</g>
<g >
<title>skb_release_head_state (35 samples, 0.59%)</title><rect x="1060.1" y="1893" width="6.9" height="15.0" fill="rgb(249,171,54)" rx="2" ry="2" />
<text  x="1063.10" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="674.8" y="1909" width="0.4" height="15.0" fill="rgb(226,137,37)" rx="2" ry="2" />
<text  x="677.77" y="1919.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="627.6" y="1893" width="0.2" height="15.0" fill="rgb(230,109,28)" rx="2" ry="2" />
<text  x="630.57" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (4 samples, 0.07%)</title><rect x="580.0" y="1941" width="0.8" height="15.0" fill="rgb(237,73,17)" rx="2" ry="2" />
<text  x="582.97" y="1951.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="10.4" y="1989" width="0.8" height="15.0" fill="rgb(208,47,20)" rx="2" ry="2" />
<text  x="13.40" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="253.1" y="1669" width="0.2" height="15.0" fill="rgb(230,71,41)" rx="2" ry="2" />
<text  x="256.14" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="244.2" y="1669" width="0.2" height="15.0" fill="rgb(229,128,51)" rx="2" ry="2" />
<text  x="247.22" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="543.3" y="1941" width="0.2" height="15.0" fill="rgb(206,61,44)" rx="2" ry="2" />
<text  x="546.28" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_atr_compute_sig_hash_82599 (1 samples, 0.02%)</title><rect x="287.4" y="1637" width="0.2" height="15.0" fill="rgb(222,222,30)" rx="2" ry="2" />
<text  x="290.45" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="65.3" y="37" width="1.0" height="15.0" fill="rgb(213,211,49)" rx="2" ry="2" />
<text  x="68.33" y="47.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (66 samples, 1.11%)</title><rect x="662.5" y="1957" width="13.1" height="15.0" fill="rgb(227,167,22)" rx="2" ry="2" />
<text  x="665.47" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="302.9" y="1973" width="0.8" height="15.0" fill="rgb(221,36,20)" rx="2" ry="2" />
<text  x="305.92" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="581.4" y="1845" width="0.2" height="15.0" fill="rgb(212,87,44)" rx="2" ry="2" />
<text  x="584.36" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="580.8" y="1877" width="0.2" height="15.0" fill="rgb(227,26,14)" rx="2" ry="2" />
<text  x="583.76" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1073.6" y="1717" width="0.4" height="15.0" fill="rgb(235,108,50)" rx="2" ry="2" />
<text  x="1076.59" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (4 samples, 0.07%)</title><rect x="1171.2" y="2053" width="0.8" height="15.0" fill="rgb(254,114,20)" rx="2" ry="2" />
<text  x="1174.16" y="2063.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1131.1" y="1733" width="0.2" height="15.0" fill="rgb(245,130,7)" rx="2" ry="2" />
<text  x="1134.10" y="1743.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="1082.9" y="1781" width="0.2" height="15.0" fill="rgb(224,132,42)" rx="2" ry="2" />
<text  x="1085.91" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="580.8" y="1925" width="0.2" height="15.0" fill="rgb(224,90,18)" rx="2" ry="2" />
<text  x="583.76" y="1935.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="1957" width="0.4" height="15.0" fill="rgb(222,30,52)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="230.5" y="1941" width="0.8" height="15.0" fill="rgb(232,62,21)" rx="2" ry="2" />
<text  x="233.53" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="96.7" y="1685" width="0.2" height="15.0" fill="rgb(221,119,43)" rx="2" ry="2" />
<text  x="99.67" y="1695.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (8 samples, 0.13%)</title><rect x="1015.7" y="2005" width="1.6" height="15.0" fill="rgb(243,68,41)" rx="2" ry="2" />
<text  x="1018.68" y="2015.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (5 samples, 0.08%)</title><rect x="1083.1" y="1925" width="1.0" height="15.0" fill="rgb(230,167,15)" rx="2" ry="2" />
<text  x="1086.11" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="252.9" y="1669" width="0.2" height="15.0" fill="rgb(239,70,11)" rx="2" ry="2" />
<text  x="255.94" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="583.5" y="1957" width="0.6" height="15.0" fill="rgb(227,61,25)" rx="2" ry="2" />
<text  x="586.54" y="1967.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="1073.2" y="1845" width="0.2" height="15.0" fill="rgb(235,113,3)" rx="2" ry="2" />
<text  x="1076.19" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1065.9" y="1861" width="0.2" height="15.0" fill="rgb(211,162,31)" rx="2" ry="2" />
<text  x="1068.85" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1159.9" y="1813" width="0.2" height="15.0" fill="rgb(211,72,33)" rx="2" ry="2" />
<text  x="1162.86" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="1143.2" y="1989" width="0.6" height="15.0" fill="rgb(215,222,43)" rx="2" ry="2" />
<text  x="1146.20" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="854.6" y="2021" width="0.2" height="15.0" fill="rgb(207,139,7)" rx="2" ry="2" />
<text  x="857.64" y="2031.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="283.9" y="1669" width="0.2" height="15.0" fill="rgb(236,137,34)" rx="2" ry="2" />
<text  x="286.88" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="167.5" y="1957" width="0.2" height="15.0" fill="rgb(205,161,10)" rx="2" ry="2" />
<text  x="170.47" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1065.9" y="1749" width="0.2" height="15.0" fill="rgb(249,55,21)" rx="2" ry="2" />
<text  x="1068.85" y="1759.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="308.5" y="1957" width="0.2" height="15.0" fill="rgb(206,184,25)" rx="2" ry="2" />
<text  x="311.47" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (2 samples, 0.03%)</title><rect x="184.3" y="2021" width="0.4" height="15.0" fill="rgb(228,6,6)" rx="2" ry="2" />
<text  x="187.32" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1145.6" y="1765" width="0.2" height="15.0" fill="rgb(237,132,22)" rx="2" ry="2" />
<text  x="1148.58" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="583.5" y="1909" width="0.6" height="15.0" fill="rgb(221,28,41)" rx="2" ry="2" />
<text  x="586.54" y="1919.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1084.9" y="1717" width="0.2" height="15.0" fill="rgb(222,44,3)" rx="2" ry="2" />
<text  x="1087.89" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="202.4" y="1989" width="0.2" height="15.0" fill="rgb(254,228,20)" rx="2" ry="2" />
<text  x="205.37" y="1999.5" ></text>
</g>
<g >
<title>free (7 samples, 0.12%)</title><rect x="1181.7" y="2053" width="1.4" height="15.0" fill="rgb(241,69,8)" rx="2" ry="2" />
<text  x="1184.67" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="673.2" y="1909" width="0.4" height="15.0" fill="rgb(218,11,20)" rx="2" ry="2" />
<text  x="676.18" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="202.4" y="1877" width="0.2" height="15.0" fill="rgb(211,139,42)" rx="2" ry="2" />
<text  x="205.37" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="372.5" y="1861" width="0.2" height="15.0" fill="rgb(227,100,51)" rx="2" ry="2" />
<text  x="375.53" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (55 samples, 0.92%)</title><rect x="1132.3" y="1989" width="10.9" height="15.0" fill="rgb(206,46,0)" rx="2" ry="2" />
<text  x="1135.29" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="198.8" y="1861" width="0.2" height="15.0" fill="rgb(212,59,3)" rx="2" ry="2" />
<text  x="201.80" y="1871.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="567.9" y="1989" width="0.4" height="15.0" fill="rgb(231,69,8)" rx="2" ry="2" />
<text  x="570.87" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (8 samples, 0.13%)</title><rect x="584.5" y="2037" width="1.6" height="15.0" fill="rgb(227,165,48)" rx="2" ry="2" />
<text  x="587.53" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="311.6" y="1557" width="0.2" height="15.0" fill="rgb(232,2,20)" rx="2" ry="2" />
<text  x="314.64" y="1567.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="195.2" y="1957" width="0.4" height="15.0" fill="rgb(209,25,42)" rx="2" ry="2" />
<text  x="198.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1095.4" y="1813" width="0.2" height="15.0" fill="rgb(216,53,44)" rx="2" ry="2" />
<text  x="1098.40" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="244.2" y="1637" width="0.2" height="15.0" fill="rgb(248,0,39)" rx="2" ry="2" />
<text  x="247.22" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (9 samples, 0.15%)</title><rect x="604.8" y="1973" width="1.7" height="15.0" fill="rgb(211,85,22)" rx="2" ry="2" />
<text  x="607.76" y="1983.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (13 samples, 0.22%)</title><rect x="234.5" y="1909" width="2.6" height="15.0" fill="rgb(242,27,36)" rx="2" ry="2" />
<text  x="237.50" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="725" width="45.2" height="15.0" fill="rgb(244,192,33)" rx="2" ry="2" />
<text  x="53.85" y="735.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (33 samples, 0.55%)</title><rect x="591.5" y="2037" width="6.5" height="15.0" fill="rgb(238,166,13)" rx="2" ry="2" />
<text  x="594.47" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="298.2" y="1957" width="0.2" height="15.0" fill="rgb(206,123,52)" rx="2" ry="2" />
<text  x="301.16" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="230.5" y="1925" width="0.8" height="15.0" fill="rgb(254,147,18)" rx="2" ry="2" />
<text  x="233.53" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="914.9" y="1973" width="0.2" height="15.0" fill="rgb(212,58,44)" rx="2" ry="2" />
<text  x="917.93" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="310.1" y="1829" width="0.4" height="15.0" fill="rgb(231,125,36)" rx="2" ry="2" />
<text  x="313.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="202.4" y="1781" width="0.2" height="15.0" fill="rgb(237,73,52)" rx="2" ry="2" />
<text  x="205.37" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="238.1" y="1781" width="0.2" height="15.0" fill="rgb(208,57,22)" rx="2" ry="2" />
<text  x="241.07" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1131.1" y="1925" width="0.2" height="15.0" fill="rgb(247,34,39)" rx="2" ry="2" />
<text  x="1134.10" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="583.7" y="1861" width="0.4" height="15.0" fill="rgb(218,110,25)" rx="2" ry="2" />
<text  x="586.74" y="1871.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="12.6" y="1989" width="1.0" height="15.0" fill="rgb(229,135,13)" rx="2" ry="2" />
<text  x="15.58" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1084.9" y="1845" width="0.2" height="15.0" fill="rgb(244,153,8)" rx="2" ry="2" />
<text  x="1087.89" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1084.9" y="1749" width="0.2" height="15.0" fill="rgb(221,32,0)" rx="2" ry="2" />
<text  x="1087.89" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="18.9" y="1909" width="0.4" height="15.0" fill="rgb(249,194,38)" rx="2" ry="2" />
<text  x="21.92" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (14 samples, 0.24%)</title><rect x="952.6" y="1909" width="2.8" height="15.0" fill="rgb(232,15,6)" rx="2" ry="2" />
<text  x="955.61" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (21 samples, 0.35%)</title><rect x="944.1" y="1909" width="4.1" height="15.0" fill="rgb(248,128,42)" rx="2" ry="2" />
<text  x="947.08" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(215,90,31)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1131.1" y="1749" width="0.2" height="15.0" fill="rgb(244,88,52)" rx="2" ry="2" />
<text  x="1134.10" y="1759.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1015.5" y="1957" width="0.2" height="15.0" fill="rgb(241,4,13)" rx="2" ry="2" />
<text  x="1018.48" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="241.0" y="1733" width="0.2" height="15.0" fill="rgb(243,196,18)" rx="2" ry="2" />
<text  x="244.04" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="252.9" y="1653" width="0.2" height="15.0" fill="rgb(241,12,11)" rx="2" ry="2" />
<text  x="255.94" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1445" width="45.2" height="15.0" fill="rgb(218,205,43)" rx="2" ry="2" />
<text  x="53.85" y="1455.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (24 samples, 0.40%)</title><rect x="1176.9" y="2053" width="4.8" height="15.0" fill="rgb(246,208,29)" rx="2" ry="2" />
<text  x="1179.91" y="2063.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="241.0" y="1893" width="0.2" height="15.0" fill="rgb(216,218,45)" rx="2" ry="2" />
<text  x="244.04" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="482.2" y="1973" width="2.6" height="15.0" fill="rgb(243,78,8)" rx="2" ry="2" />
<text  x="485.20" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="255.3" y="1701" width="0.2" height="15.0" fill="rgb(230,28,11)" rx="2" ry="2" />
<text  x="258.32" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="485.6" y="1973" width="0.2" height="15.0" fill="rgb(226,143,32)" rx="2" ry="2" />
<text  x="488.57" y="1983.5" ></text>
</g>
<g >
<title>tcp_grow_window.isra.24 (1 samples, 0.02%)</title><rect x="290.6" y="1525" width="0.2" height="15.0" fill="rgb(246,174,48)" rx="2" ry="2" />
<text  x="293.62" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="118.9" y="1941" width="0.2" height="15.0" fill="rgb(205,229,47)" rx="2" ry="2" />
<text  x="121.88" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="253.1" y="1797" width="0.2" height="15.0" fill="rgb(222,148,13)" rx="2" ry="2" />
<text  x="256.14" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="213.7" y="1845" width="0.2" height="15.0" fill="rgb(225,119,36)" rx="2" ry="2" />
<text  x="216.67" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="94.7" y="69" width="0.8" height="15.0" fill="rgb(219,56,49)" rx="2" ry="2" />
<text  x="97.68" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="166.5" y="1957" width="0.4" height="15.0" fill="rgb(253,127,31)" rx="2" ry="2" />
<text  x="169.47" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="613" width="45.2" height="15.0" fill="rgb(218,72,51)" rx="2" ry="2" />
<text  x="53.85" y="623.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="288.8" y="1621" width="0.2" height="15.0" fill="rgb(211,197,50)" rx="2" ry="2" />
<text  x="291.84" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1157" width="45.2" height="15.0" fill="rgb(246,219,11)" rx="2" ry="2" />
<text  x="53.85" y="1167.5" >[unk..</text>
</g>
<g >
<title>tcp_rcv_established (4 samples, 0.07%)</title><rect x="39.2" y="1781" width="0.7" height="15.0" fill="rgb(240,211,51)" rx="2" ry="2" />
<text  x="42.15" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (4 samples, 0.07%)</title><rect x="1170.4" y="2053" width="0.8" height="15.0" fill="rgb(232,202,21)" rx="2" ry="2" />
<text  x="1173.37" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="191.9" y="2005" width="0.2" height="15.0" fill="rgb(239,5,30)" rx="2" ry="2" />
<text  x="194.86" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="190.7" y="1845" width="0.2" height="15.0" fill="rgb(206,105,53)" rx="2" ry="2" />
<text  x="193.67" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1128.3" y="2005" width="0.2" height="15.0" fill="rgb(254,18,18)" rx="2" ry="2" />
<text  x="1131.32" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="174.6" y="1893" width="0.2" height="15.0" fill="rgb(221,13,52)" rx="2" ry="2" />
<text  x="177.61" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="367.0" y="1909" width="0.2" height="15.0" fill="rgb(221,26,15)" rx="2" ry="2" />
<text  x="369.97" y="1919.5" ></text>
</g>
<g >
<title>__sys_sendmsg (356 samples, 5.98%)</title><rect x="231.3" y="1973" width="70.6" height="15.0" fill="rgb(231,168,47)" rx="2" ry="2" />
<text  x="234.32" y="1983.5" >__sys_s..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="543.5" y="1861" width="0.2" height="15.0" fill="rgb(205,23,24)" rx="2" ry="2" />
<text  x="546.48" y="1871.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="196.8" y="1973" width="0.4" height="15.0" fill="rgb(232,149,31)" rx="2" ry="2" />
<text  x="199.82" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="366.8" y="1909" width="0.2" height="15.0" fill="rgb(220,15,20)" rx="2" ry="2" />
<text  x="369.78" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1059.9" y="1621" width="0.2" height="15.0" fill="rgb(240,125,19)" rx="2" ry="2" />
<text  x="1062.90" y="1631.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="197.4" y="1973" width="0.6" height="15.0" fill="rgb(245,64,43)" rx="2" ry="2" />
<text  x="200.41" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="96.7" y="1989" width="0.2" height="15.0" fill="rgb(233,133,11)" rx="2" ry="2" />
<text  x="99.67" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="310.3" y="1733" width="0.2" height="15.0" fill="rgb(245,166,26)" rx="2" ry="2" />
<text  x="313.26" y="1743.5" ></text>
</g>
<g >
<title>rb_last (1 samples, 0.02%)</title><rect x="627.6" y="1813" width="0.2" height="15.0" fill="rgb(250,223,27)" rx="2" ry="2" />
<text  x="630.57" y="1823.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (6 samples, 0.10%)</title><rect x="15.6" y="1973" width="1.1" height="15.0" fill="rgb(222,53,29)" rx="2" ry="2" />
<text  x="18.55" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (7 samples, 0.12%)</title><rect x="622.4" y="1973" width="1.4" height="15.0" fill="rgb(230,36,11)" rx="2" ry="2" />
<text  x="625.41" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1145.6" y="1781" width="0.2" height="15.0" fill="rgb(235,62,30)" rx="2" ry="2" />
<text  x="1148.58" y="1791.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="12.6" y="2005" width="1.0" height="15.0" fill="rgb(210,39,9)" rx="2" ry="2" />
<text  x="15.58" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="309.1" y="1829" width="0.2" height="15.0" fill="rgb(252,45,42)" rx="2" ry="2" />
<text  x="312.07" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="244.2" y="1829" width="0.2" height="15.0" fill="rgb(227,147,13)" rx="2" ry="2" />
<text  x="247.22" y="1839.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (17 samples, 0.29%)</title><rect x="86.6" y="69" width="3.3" height="15.0" fill="rgb(251,41,15)" rx="2" ry="2" />
<text  x="89.55" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="933.0" y="1925" width="0.2" height="15.0" fill="rgb(240,98,26)" rx="2" ry="2" />
<text  x="935.98" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (15 samples, 0.25%)</title><rect x="587.5" y="1989" width="3.0" height="15.0" fill="rgb(219,139,7)" rx="2" ry="2" />
<text  x="590.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="437" width="45.0" height="15.0" fill="rgb(211,216,27)" rx="2" ry="2" />
<text  x="53.85" y="447.5" >[unk..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="252.9" y="1797" width="0.2" height="15.0" fill="rgb(254,73,47)" rx="2" ry="2" />
<text  x="255.94" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="10.4" y="2021" width="0.8" height="15.0" fill="rgb(235,222,10)" rx="2" ry="2" />
<text  x="13.40" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (5 samples, 0.08%)</title><rect x="1160.3" y="2053" width="0.9" height="15.0" fill="rgb(221,126,15)" rx="2" ry="2" />
<text  x="1163.25" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="192.1" y="2005" width="0.2" height="15.0" fill="rgb(239,26,24)" rx="2" ry="2" />
<text  x="195.06" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (15 samples, 0.25%)</title><rect x="70.3" y="37" width="3.0" height="15.0" fill="rgb(250,109,1)" rx="2" ry="2" />
<text  x="73.29" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="961.1" y="1877" width="0.4" height="15.0" fill="rgb(226,98,40)" rx="2" ry="2" />
<text  x="964.14" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.74%)</title><rect x="365.8" y="1989" width="8.7" height="15.0" fill="rgb(207,89,5)" rx="2" ry="2" />
<text  x="368.78" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="602.0" y="1973" width="0.6" height="15.0" fill="rgb(211,169,52)" rx="2" ry="2" />
<text  x="604.98" y="1983.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1159.7" y="1925" width="0.2" height="15.0" fill="rgb(254,213,24)" rx="2" ry="2" />
<text  x="1162.66" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6 samples, 0.10%)</title><rect x="393.5" y="1989" width="1.2" height="15.0" fill="rgb(250,158,30)" rx="2" ry="2" />
<text  x="396.55" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="95.5" y="133" width="0.2" height="15.0" fill="rgb(216,206,43)" rx="2" ry="2" />
<text  x="98.48" y="143.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="70.1" y="37" width="0.2" height="15.0" fill="rgb(237,202,39)" rx="2" ry="2" />
<text  x="73.09" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (1 samples, 0.02%)</title><rect x="532.6" y="1989" width="0.2" height="15.0" fill="rgb(238,192,6)" rx="2" ry="2" />
<text  x="535.57" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="252.9" y="1621" width="0.2" height="15.0" fill="rgb(239,63,11)" rx="2" ry="2" />
<text  x="255.94" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="256.1" y="1797" width="0.2" height="15.0" fill="rgb(226,100,5)" rx="2" ry="2" />
<text  x="259.11" y="1807.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="311.2" y="1765" width="0.2" height="15.0" fill="rgb(252,162,43)" rx="2" ry="2" />
<text  x="314.25" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="288.4" y="1765" width="0.6" height="15.0" fill="rgb(220,202,34)" rx="2" ry="2" />
<text  x="291.44" y="1775.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="236.9" y="1893" width="0.2" height="15.0" fill="rgb(224,89,47)" rx="2" ry="2" />
<text  x="239.88" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (2 samples, 0.03%)</title><rect x="1083.7" y="1845" width="0.4" height="15.0" fill="rgb(247,131,10)" rx="2" ry="2" />
<text  x="1086.70" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="612.1" y="1973" width="2.8" height="15.0" fill="rgb(233,224,10)" rx="2" ry="2" />
<text  x="615.10" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="970.5" y="1989" width="0.2" height="15.0" fill="rgb(221,82,2)" rx="2" ry="2" />
<text  x="973.46" y="1999.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (7 samples, 0.12%)</title><rect x="214.3" y="2037" width="1.4" height="15.0" fill="rgb(215,228,37)" rx="2" ry="2" />
<text  x="217.27" y="2047.5" ></text>
</g>
<g >
<title>import_iovec (13 samples, 0.22%)</title><rect x="234.5" y="1925" width="2.6" height="15.0" fill="rgb(211,10,51)" rx="2" ry="2" />
<text  x="237.50" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="181.9" y="1829" width="0.2" height="15.0" fill="rgb(220,85,28)" rx="2" ry="2" />
<text  x="184.94" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="230.5" y="1973" width="0.8" height="15.0" fill="rgb(247,84,22)" rx="2" ry="2" />
<text  x="233.53" y="1983.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (19 samples, 0.32%)</title><rect x="308.7" y="1957" width="3.7" height="15.0" fill="rgb(241,86,26)" rx="2" ry="2" />
<text  x="311.67" y="1967.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="261.5" y="1461" width="0.2" height="15.0" fill="rgb(253,156,41)" rx="2" ry="2" />
<text  x="264.47" y="1471.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1015.5" y="1893" width="0.2" height="15.0" fill="rgb(229,2,42)" rx="2" ry="2" />
<text  x="1018.48" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="867.7" y="2005" width="0.4" height="15.0" fill="rgb(250,84,17)" rx="2" ry="2" />
<text  x="870.73" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1093.4" y="1797" width="0.2" height="15.0" fill="rgb(254,43,45)" rx="2" ry="2" />
<text  x="1096.42" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1072.4" y="1589" width="0.2" height="15.0" fill="rgb(216,2,49)" rx="2" ry="2" />
<text  x="1075.40" y="1599.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="1187.8" y="2021" width="0.8" height="15.0" fill="rgb(240,7,36)" rx="2" ry="2" />
<text  x="1190.82" y="2031.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1015.5" y="1877" width="0.2" height="15.0" fill="rgb(229,107,6)" rx="2" ry="2" />
<text  x="1018.48" y="1887.5" ></text>
</g>
<g >
<title>discard_slab (2 samples, 0.03%)</title><rect x="1059.3" y="1797" width="0.4" height="15.0" fill="rgb(251,7,0)" rx="2" ry="2" />
<text  x="1062.31" y="1807.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="543.5" y="1685" width="0.2" height="15.0" fill="rgb(208,67,29)" rx="2" ry="2" />
<text  x="546.48" y="1695.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="303.7" y="2005" width="0.2" height="15.0" fill="rgb(231,173,7)" rx="2" ry="2" />
<text  x="306.71" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="964.7" y="1909" width="0.8" height="15.0" fill="rgb(211,149,6)" rx="2" ry="2" />
<text  x="967.71" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (46 samples, 0.77%)</title><rect x="1150.9" y="2053" width="9.2" height="15.0" fill="rgb(211,171,10)" rx="2" ry="2" />
<text  x="1153.93" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="262.3" y="1365" width="0.2" height="15.0" fill="rgb(244,148,52)" rx="2" ry="2" />
<text  x="265.26" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="187.1" y="1909" width="0.6" height="15.0" fill="rgb(207,83,17)" rx="2" ry="2" />
<text  x="190.10" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (14 samples, 0.24%)</title><rect x="488.9" y="1957" width="2.8" height="15.0" fill="rgb(251,195,36)" rx="2" ry="2" />
<text  x="491.94" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="235.7" y="1717" width="0.2" height="15.0" fill="rgb(210,209,34)" rx="2" ry="2" />
<text  x="238.69" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="387.8" y="1957" width="0.2" height="15.0" fill="rgb(236,196,7)" rx="2" ry="2" />
<text  x="390.80" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="262.9" y="1525" width="0.2" height="15.0" fill="rgb(245,13,9)" rx="2" ry="2" />
<text  x="265.86" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="202.4" y="1909" width="0.2" height="15.0" fill="rgb(253,166,50)" rx="2" ry="2" />
<text  x="205.37" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="262.3" y="1397" width="0.2" height="15.0" fill="rgb(205,212,35)" rx="2" ry="2" />
<text  x="265.26" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="300.9" y="1893" width="0.8" height="15.0" fill="rgb(246,224,19)" rx="2" ry="2" />
<text  x="303.93" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1145.6" y="1925" width="0.2" height="15.0" fill="rgb(232,116,8)" rx="2" ry="2" />
<text  x="1148.58" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="301.3" y="1589" width="0.2" height="15.0" fill="rgb(254,44,45)" rx="2" ry="2" />
<text  x="304.33" y="1599.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (57 samples, 0.96%)</title><rect x="521.1" y="1989" width="11.3" height="15.0" fill="rgb(231,153,28)" rx="2" ry="2" />
<text  x="524.07" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="310.3" y="1685" width="0.2" height="15.0" fill="rgb(251,23,47)" rx="2" ry="2" />
<text  x="313.26" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="10.2" y="1909" width="0.2" height="15.0" fill="rgb(220,94,19)" rx="2" ry="2" />
<text  x="13.20" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="96.7" y="1797" width="0.2" height="15.0" fill="rgb(229,171,6)" rx="2" ry="2" />
<text  x="99.67" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="543.5" y="1909" width="0.2" height="15.0" fill="rgb(238,224,44)" rx="2" ry="2" />
<text  x="546.48" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="808.2" y="1989" width="1.4" height="15.0" fill="rgb(243,216,42)" rx="2" ry="2" />
<text  x="811.24" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="312.2" y="1861" width="0.2" height="15.0" fill="rgb(233,11,46)" rx="2" ry="2" />
<text  x="315.24" y="1871.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="577.6" y="1829" width="0.2" height="15.0" fill="rgb(235,0,25)" rx="2" ry="2" />
<text  x="580.59" y="1839.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1079.1" y="1893" width="0.2" height="15.0" fill="rgb(249,55,53)" rx="2" ry="2" />
<text  x="1082.14" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="579.4" y="1733" width="0.4" height="15.0" fill="rgb(244,66,49)" rx="2" ry="2" />
<text  x="582.37" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="226.0" y="1989" width="0.2" height="15.0" fill="rgb(248,189,41)" rx="2" ry="2" />
<text  x="228.97" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="255.3" y="1813" width="0.2" height="15.0" fill="rgb(214,137,48)" rx="2" ry="2" />
<text  x="258.32" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="286.1" y="1621" width="0.2" height="15.0" fill="rgb(244,27,6)" rx="2" ry="2" />
<text  x="289.06" y="1631.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (9 samples, 0.15%)</title><rect x="915.1" y="1973" width="1.8" height="15.0" fill="rgb(246,83,45)" rx="2" ry="2" />
<text  x="918.13" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (35 samples, 0.59%)</title><rect x="615.5" y="1973" width="6.9" height="15.0" fill="rgb(209,13,3)" rx="2" ry="2" />
<text  x="618.47" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (7 samples, 0.12%)</title><rect x="38.8" y="1941" width="1.3" height="15.0" fill="rgb(217,209,2)" rx="2" ry="2" />
<text  x="41.76" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="312.2" y="1829" width="0.2" height="15.0" fill="rgb(236,132,24)" rx="2" ry="2" />
<text  x="315.24" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="389" width="45.0" height="15.0" fill="rgb(247,10,45)" rx="2" ry="2" />
<text  x="53.85" y="399.5" >[unk..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (6 samples, 0.10%)</title><rect x="166.5" y="1989" width="1.2" height="15.0" fill="rgb(246,19,24)" rx="2" ry="2" />
<text  x="169.47" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="250.2" y="1733" width="0.2" height="15.0" fill="rgb(232,215,24)" rx="2" ry="2" />
<text  x="253.16" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (32 samples, 0.54%)</title><rect x="557.8" y="1973" width="6.3" height="15.0" fill="rgb(250,173,53)" rx="2" ry="2" />
<text  x="560.76" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="198.8" y="1685" width="0.2" height="15.0" fill="rgb(216,163,3)" rx="2" ry="2" />
<text  x="201.80" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="605.4" y="1957" width="1.1" height="15.0" fill="rgb(232,157,16)" rx="2" ry="2" />
<text  x="608.35" y="1967.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="936.2" y="1893" width="0.3" height="15.0" fill="rgb(208,135,9)" rx="2" ry="2" />
<text  x="939.15" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1147.2" y="2037" width="0.2" height="15.0" fill="rgb(213,184,9)" rx="2" ry="2" />
<text  x="1150.16" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::readDataAvailable (1 samples, 0.02%)</title><rect x="15.2" y="1989" width="0.2" height="15.0" fill="rgb(216,51,7)" rx="2" ry="2" />
<text  x="18.16" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="532.2" y="1925" width="0.2" height="15.0" fill="rgb(222,226,33)" rx="2" ry="2" />
<text  x="535.17" y="1935.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="282.9" y="1493" width="0.2" height="15.0" fill="rgb(250,12,51)" rx="2" ry="2" />
<text  x="285.89" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 0.71%)</title><rect x="643.6" y="2021" width="8.4" height="15.0" fill="rgb(224,64,9)" rx="2" ry="2" />
<text  x="646.63" y="2031.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="532.2" y="1845" width="0.2" height="15.0" fill="rgb(222,197,29)" rx="2" ry="2" />
<text  x="535.17" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="255.3" y="1717" width="0.2" height="15.0" fill="rgb(234,181,37)" rx="2" ry="2" />
<text  x="258.32" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (251 samples, 4.22%)</title><rect x="677.3" y="1957" width="49.8" height="15.0" fill="rgb(246,196,13)" rx="2" ry="2" />
<text  x="680.34" y="1967.5" >folly..</text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="735.5" y="1941" width="0.3" height="15.0" fill="rgb(212,51,7)" rx="2" ry="2" />
<text  x="738.45" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="373.1" y="1909" width="0.2" height="15.0" fill="rgb(212,6,31)" rx="2" ry="2" />
<text  x="376.12" y="1919.5" ></text>
</g>
<g >
<title>release_sock (24 samples, 0.40%)</title><rect x="1068.8" y="1925" width="4.8" height="15.0" fill="rgb(205,161,18)" rx="2" ry="2" />
<text  x="1071.83" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="637.5" y="2037" width="0.2" height="15.0" fill="rgb(235,100,36)" rx="2" ry="2" />
<text  x="640.48" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="588.7" y="1925" width="0.4" height="15.0" fill="rgb(227,162,42)" rx="2" ry="2" />
<text  x="591.70" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="628.0" y="1957" width="0.2" height="15.0" fill="rgb(249,193,40)" rx="2" ry="2" />
<text  x="630.96" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1145.6" y="1941" width="0.2" height="15.0" fill="rgb(225,112,26)" rx="2" ry="2" />
<text  x="1148.58" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="75.2" y="37" width="0.2" height="15.0" fill="rgb(226,94,27)" rx="2" ry="2" />
<text  x="78.25" y="47.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (2 samples, 0.03%)</title><rect x="10.0" y="2053" width="0.4" height="15.0" fill="rgb(221,212,2)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>free (9 samples, 0.15%)</title><rect x="180.4" y="2005" width="1.7" height="15.0" fill="rgb(254,59,19)" rx="2" ry="2" />
<text  x="183.36" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1073.6" y="1781" width="0.4" height="15.0" fill="rgb(232,47,1)" rx="2" ry="2" />
<text  x="1076.59" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (101 samples, 1.70%)</title><rect x="263.1" y="1621" width="20.0" height="15.0" fill="rgb(225,211,21)" rx="2" ry="2" />
<text  x="266.06" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="253.1" y="1877" width="0.2" height="15.0" fill="rgb(245,57,41)" rx="2" ry="2" />
<text  x="256.14" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (19 samples, 0.32%)</title><rect x="172.6" y="1957" width="3.8" height="15.0" fill="rgb(243,34,28)" rx="2" ry="2" />
<text  x="175.62" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="563.7" y="1941" width="0.4" height="15.0" fill="rgb(217,180,45)" rx="2" ry="2" />
<text  x="566.71" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2005" width="0.4" height="15.0" fill="rgb(238,25,54)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="173.0" y="1909" width="0.2" height="15.0" fill="rgb(242,174,39)" rx="2" ry="2" />
<text  x="176.02" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="288.4" y="1781" width="0.6" height="15.0" fill="rgb(253,164,19)" rx="2" ry="2" />
<text  x="291.44" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="288.8" y="1717" width="0.2" height="15.0" fill="rgb(205,89,10)" rx="2" ry="2" />
<text  x="291.84" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="250.2" y="1765" width="0.2" height="15.0" fill="rgb(208,103,11)" rx="2" ry="2" />
<text  x="253.16" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="236.7" y="1845" width="0.2" height="15.0" fill="rgb(225,159,26)" rx="2" ry="2" />
<text  x="239.68" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="364.0" y="1989" width="0.8" height="15.0" fill="rgb(216,100,40)" rx="2" ry="2" />
<text  x="367.00" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1877" width="0.2" height="15.0" fill="rgb(247,0,26)" rx="2" ry="2" />
<text  x="1085.91" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="255.3" y="1573" width="0.2" height="15.0" fill="rgb(226,106,6)" rx="2" ry="2" />
<text  x="258.32" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="583.7" y="1845" width="0.4" height="15.0" fill="rgb(235,177,16)" rx="2" ry="2" />
<text  x="586.74" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="627.6" y="1877" width="0.2" height="15.0" fill="rgb(227,220,32)" rx="2" ry="2" />
<text  x="630.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1509" width="45.2" height="15.0" fill="rgb(223,98,21)" rx="2" ry="2" />
<text  x="53.85" y="1519.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1128.5" y="2005" width="0.2" height="15.0" fill="rgb(252,58,41)" rx="2" ry="2" />
<text  x="1131.52" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="857.0" y="2005" width="0.8" height="15.0" fill="rgb(228,15,19)" rx="2" ry="2" />
<text  x="860.02" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="237.7" y="1861" width="0.2" height="15.0" fill="rgb(241,104,19)" rx="2" ry="2" />
<text  x="240.67" y="1871.5" ></text>
</g>
<g >
<title>cpu_load_update_active (1 samples, 0.02%)</title><rect x="1034.3" y="1781" width="0.2" height="15.0" fill="rgb(243,31,22)" rx="2" ry="2" />
<text  x="1037.32" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="189.9" y="1989" width="0.8" height="15.0" fill="rgb(247,111,15)" rx="2" ry="2" />
<text  x="192.88" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="288.4" y="1813" width="0.6" height="15.0" fill="rgb(247,168,1)" rx="2" ry="2" />
<text  x="291.44" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="576.6" y="1941" width="0.4" height="15.0" fill="rgb(232,45,53)" rx="2" ry="2" />
<text  x="579.60" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1039.1" y="1829" width="0.2" height="15.0" fill="rgb(239,225,27)" rx="2" ry="2" />
<text  x="1042.08" y="1839.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (12 samples, 0.20%)</title><rect x="344.4" y="1973" width="2.3" height="15.0" fill="rgb(213,61,12)" rx="2" ry="2" />
<text  x="347.37" y="1983.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="259.1" y="1797" width="0.2" height="15.0" fill="rgb(227,73,12)" rx="2" ry="2" />
<text  x="262.09" y="1807.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="236.7" y="1877" width="0.2" height="15.0" fill="rgb(246,160,44)" rx="2" ry="2" />
<text  x="239.68" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (259 samples, 4.35%)</title><rect x="451.7" y="2037" width="51.3" height="15.0" fill="rgb(244,31,0)" rx="2" ry="2" />
<text  x="454.66" y="2047.5" >faceb..</text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.1" y="1957" width="0.2" height="15.0" fill="rgb(235,138,10)" rx="2" ry="2" />
<text  x="940.14" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="969.9" y="1957" width="0.2" height="15.0" fill="rgb(249,61,39)" rx="2" ry="2" />
<text  x="972.87" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (22 samples, 0.37%)</title><rect x="411.8" y="2005" width="4.4" height="15.0" fill="rgb(236,142,19)" rx="2" ry="2" />
<text  x="414.79" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1072.4" y="1765" width="0.2" height="15.0" fill="rgb(206,172,42)" rx="2" ry="2" />
<text  x="1075.40" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1093" width="45.2" height="15.0" fill="rgb(223,144,22)" rx="2" ry="2" />
<text  x="53.85" y="1103.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="39.2" y="1813" width="0.7" height="15.0" fill="rgb(218,49,47)" rx="2" ry="2" />
<text  x="42.15" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="1042.3" y="1829" width="0.7" height="15.0" fill="rgb(237,182,3)" rx="2" ry="2" />
<text  x="1045.25" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="200.6" y="1877" width="0.2" height="15.0" fill="rgb(234,138,49)" rx="2" ry="2" />
<text  x="203.58" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1143.8" y="1781" width="0.2" height="15.0" fill="rgb(235,207,28)" rx="2" ry="2" />
<text  x="1146.79" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="583.7" y="1733" width="0.4" height="15.0" fill="rgb(206,155,16)" rx="2" ry="2" />
<text  x="586.74" y="1743.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="309.1" y="1701" width="0.2" height="15.0" fill="rgb(229,138,45)" rx="2" ry="2" />
<text  x="312.07" y="1711.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="244.2" y="1861" width="0.2" height="15.0" fill="rgb(229,49,24)" rx="2" ry="2" />
<text  x="247.22" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="254.5" y="1765" width="0.2" height="15.0" fill="rgb(233,156,43)" rx="2" ry="2" />
<text  x="257.53" y="1775.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="81.2" y="37" width="0.2" height="15.0" fill="rgb(228,118,41)" rx="2" ry="2" />
<text  x="84.20" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1143.8" y="1861" width="0.2" height="15.0" fill="rgb(243,154,25)" rx="2" ry="2" />
<text  x="1146.79" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1034.3" y="1893" width="0.2" height="15.0" fill="rgb(227,100,7)" rx="2" ry="2" />
<text  x="1037.32" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="193.8" y="1941" width="0.2" height="15.0" fill="rgb(227,89,46)" rx="2" ry="2" />
<text  x="196.84" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (101 samples, 1.70%)</title><rect x="263.1" y="1589" width="20.0" height="15.0" fill="rgb(244,175,23)" rx="2" ry="2" />
<text  x="266.06" y="1599.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1177.1" y="2037" width="0.2" height="15.0" fill="rgb(218,24,53)" rx="2" ry="2" />
<text  x="1180.11" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="812.4" y="2005" width="0.6" height="15.0" fill="rgb(244,136,38)" rx="2" ry="2" />
<text  x="815.40" y="2015.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="880.4" y="2037" width="0.2" height="15.0" fill="rgb(222,21,24)" rx="2" ry="2" />
<text  x="883.42" y="2047.5" ></text>
</g>
<g >
<title>sys_sendmsg (3 samples, 0.05%)</title><rect x="302.1" y="2005" width="0.6" height="15.0" fill="rgb(221,146,49)" rx="2" ry="2" />
<text  x="305.12" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="322.6" y="1941" width="0.3" height="15.0" fill="rgb(246,124,10)" rx="2" ry="2" />
<text  x="325.55" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (2 samples, 0.03%)</title><rect x="723.2" y="1893" width="0.4" height="15.0" fill="rgb(237,171,19)" rx="2" ry="2" />
<text  x="726.16" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="580.8" y="1893" width="0.2" height="15.0" fill="rgb(248,97,14)" rx="2" ry="2" />
<text  x="583.76" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="471.3" y="1909" width="0.2" height="15.0" fill="rgb(211,92,24)" rx="2" ry="2" />
<text  x="474.29" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="576.6" y="1925" width="0.2" height="15.0" fill="rgb(211,43,32)" rx="2" ry="2" />
<text  x="579.60" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (7 samples, 0.12%)</title><rect x="390.6" y="1925" width="1.4" height="15.0" fill="rgb(233,78,3)" rx="2" ry="2" />
<text  x="393.57" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="96.7" y="1957" width="0.2" height="15.0" fill="rgb(213,59,50)" rx="2" ry="2" />
<text  x="99.67" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1083.7" y="1637" width="0.2" height="15.0" fill="rgb(221,144,50)" rx="2" ry="2" />
<text  x="1086.70" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (4 samples, 0.07%)</title><rect x="339.4" y="1957" width="0.8" height="15.0" fill="rgb(224,34,38)" rx="2" ry="2" />
<text  x="342.41" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="258.3" y="1749" width="0.2" height="15.0" fill="rgb(217,115,2)" rx="2" ry="2" />
<text  x="261.30" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="855.6" y="1989" width="0.4" height="15.0" fill="rgb(208,217,4)" rx="2" ry="2" />
<text  x="858.63" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (3 samples, 0.05%)</title><rect x="197.4" y="1989" width="0.6" height="15.0" fill="rgb(218,119,37)" rx="2" ry="2" />
<text  x="200.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="895.1" y="2005" width="0.4" height="15.0" fill="rgb(205,200,1)" rx="2" ry="2" />
<text  x="898.10" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1095.4" y="1829" width="0.2" height="15.0" fill="rgb(237,15,28)" rx="2" ry="2" />
<text  x="1098.40" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="255.3" y="1637" width="0.2" height="15.0" fill="rgb(238,221,29)" rx="2" ry="2" />
<text  x="258.32" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (828 samples, 13.92%)</title><rect x="50.1" y="2037" width="164.2" height="15.0" fill="rgb(234,10,7)" rx="2" ry="2" />
<text  x="53.06" y="2047.5" >[unknown]</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="255.5" y="1797" width="0.2" height="15.0" fill="rgb(249,66,31)" rx="2" ry="2" />
<text  x="258.52" y="1807.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9 samples, 0.15%)</title><rect x="1011.1" y="2037" width="1.8" height="15.0" fill="rgb(228,90,44)" rx="2" ry="2" />
<text  x="1014.12" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="239.1" y="1797" width="0.2" height="15.0" fill="rgb(224,94,53)" rx="2" ry="2" />
<text  x="242.06" y="1807.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="577.4" y="1797" width="0.2" height="15.0" fill="rgb(208,43,32)" rx="2" ry="2" />
<text  x="580.39" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="314.0" y="2037" width="0.2" height="15.0" fill="rgb(223,144,51)" rx="2" ry="2" />
<text  x="317.02" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="467.1" y="1941" width="0.2" height="15.0" fill="rgb(216,54,40)" rx="2" ry="2" />
<text  x="470.13" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="169.6" y="1925" width="0.2" height="15.0" fill="rgb(242,60,4)" rx="2" ry="2" />
<text  x="172.65" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="402.5" y="1797" width="0.6" height="15.0" fill="rgb(254,154,26)" rx="2" ry="2" />
<text  x="405.47" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="295.6" y="1733" width="0.2" height="15.0" fill="rgb(233,66,34)" rx="2" ry="2" />
<text  x="298.58" y="1743.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="114.1" y="1861" width="0.2" height="15.0" fill="rgb(232,145,48)" rx="2" ry="2" />
<text  x="117.12" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (4 samples, 0.07%)</title><rect x="380.9" y="1957" width="0.8" height="15.0" fill="rgb(238,193,14)" rx="2" ry="2" />
<text  x="383.86" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="578.8" y="1957" width="0.2" height="15.0" fill="rgb(207,47,48)" rx="2" ry="2" />
<text  x="581.78" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (3 samples, 0.05%)</title><rect x="717.6" y="1861" width="0.6" height="15.0" fill="rgb(222,122,42)" rx="2" ry="2" />
<text  x="720.60" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="255.9" y="1829" width="0.2" height="15.0" fill="rgb(215,145,24)" rx="2" ry="2" />
<text  x="258.92" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1103.3" y="1941" width="0.2" height="15.0" fill="rgb(222,191,21)" rx="2" ry="2" />
<text  x="1106.33" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="297.6" y="1701" width="0.2" height="15.0" fill="rgb(241,94,37)" rx="2" ry="2" />
<text  x="300.56" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (101 samples, 1.70%)</title><rect x="263.1" y="1509" width="20.0" height="15.0" fill="rgb(250,49,0)" rx="2" ry="2" />
<text  x="266.06" y="1519.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="226.0" y="2021" width="0.2" height="15.0" fill="rgb(247,181,6)" rx="2" ry="2" />
<text  x="228.97" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="174.0" y="1893" width="0.4" height="15.0" fill="rgb(213,122,53)" rx="2" ry="2" />
<text  x="177.01" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="871.3" y="2005" width="0.2" height="15.0" fill="rgb(231,55,16)" rx="2" ry="2" />
<text  x="874.30" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="421" width="45.0" height="15.0" fill="rgb(235,123,47)" rx="2" ry="2" />
<text  x="53.85" y="431.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="288.8" y="1669" width="0.2" height="15.0" fill="rgb(205,70,10)" rx="2" ry="2" />
<text  x="291.84" y="1679.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="970.7" y="1989" width="0.2" height="15.0" fill="rgb(221,46,22)" rx="2" ry="2" />
<text  x="973.66" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="230.7" y="1717" width="0.2" height="15.0" fill="rgb(231,181,14)" rx="2" ry="2" />
<text  x="233.73" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="250.2" y="1749" width="0.2" height="15.0" fill="rgb(244,179,49)" rx="2" ry="2" />
<text  x="253.16" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="213.3" y="2005" width="0.2" height="15.0" fill="rgb(253,8,38)" rx="2" ry="2" />
<text  x="216.28" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="251.9" y="1813" width="0.2" height="15.0" fill="rgb(230,106,37)" rx="2" ry="2" />
<text  x="254.95" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="239.3" y="1877" width="1.1" height="15.0" fill="rgb(253,222,10)" rx="2" ry="2" />
<text  x="242.26" y="1887.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="303.3" y="1813" width="0.4" height="15.0" fill="rgb(241,145,41)" rx="2" ry="2" />
<text  x="306.31" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="474.1" y="1925" width="0.6" height="15.0" fill="rgb(211,139,48)" rx="2" ry="2" />
<text  x="477.07" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="310.3" y="1717" width="0.2" height="15.0" fill="rgb(251,116,19)" rx="2" ry="2" />
<text  x="313.26" y="1727.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1083.7" y="1781" width="0.2" height="15.0" fill="rgb(232,141,27)" rx="2" ry="2" />
<text  x="1086.70" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="312.2" y="1845" width="0.2" height="15.0" fill="rgb(254,63,43)" rx="2" ry="2" />
<text  x="315.24" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="202.4" y="1797" width="0.2" height="15.0" fill="rgb(235,181,44)" rx="2" ry="2" />
<text  x="205.37" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="581.8" y="1925" width="0.2" height="15.0" fill="rgb(253,130,25)" rx="2" ry="2" />
<text  x="584.75" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (34 samples, 0.57%)</title><rect x="165.1" y="2005" width="6.7" height="15.0" fill="rgb(243,8,28)" rx="2" ry="2" />
<text  x="168.09" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1072.4" y="1621" width="0.2" height="15.0" fill="rgb(230,98,21)" rx="2" ry="2" />
<text  x="1075.40" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="49.9" y="2005" width="0.2" height="15.0" fill="rgb(235,160,50)" rx="2" ry="2" />
<text  x="52.86" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1349" width="45.2" height="15.0" fill="rgb(226,77,24)" rx="2" ry="2" />
<text  x="53.85" y="1359.5" >[unk..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="167.5" y="1973" width="0.2" height="15.0" fill="rgb(226,226,47)" rx="2" ry="2" />
<text  x="170.47" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="1103.1" y="1973" width="0.4" height="15.0" fill="rgb(235,132,29)" rx="2" ry="2" />
<text  x="1106.14" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="659.9" y="1941" width="0.2" height="15.0" fill="rgb(215,54,29)" rx="2" ry="2" />
<text  x="662.89" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1143.8" y="1669" width="0.2" height="15.0" fill="rgb(220,75,3)" rx="2" ry="2" />
<text  x="1146.79" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="312.2" y="1813" width="0.2" height="15.0" fill="rgb(243,175,10)" rx="2" ry="2" />
<text  x="315.24" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.35%)</title><rect x="308.3" y="2005" width="4.1" height="15.0" fill="rgb(254,101,11)" rx="2" ry="2" />
<text  x="311.27" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="624.2" y="1973" width="0.2" height="15.0" fill="rgb(230,15,47)" rx="2" ry="2" />
<text  x="627.19" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="642.4" y="2037" width="0.4" height="15.0" fill="rgb(226,158,51)" rx="2" ry="2" />
<text  x="645.44" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (17 samples, 0.29%)</title><rect x="795.3" y="1973" width="3.4" height="15.0" fill="rgb(223,165,9)" rx="2" ry="2" />
<text  x="798.34" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1621" width="45.2" height="15.0" fill="rgb(237,15,6)" rx="2" ry="2" />
<text  x="53.85" y="1631.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="402.5" y="1877" width="0.6" height="15.0" fill="rgb(205,215,17)" rx="2" ry="2" />
<text  x="405.47" y="1887.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="577.4" y="1621" width="0.2" height="15.0" fill="rgb(251,63,24)" rx="2" ry="2" />
<text  x="580.39" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1065.9" y="1765" width="0.2" height="15.0" fill="rgb(208,104,22)" rx="2" ry="2" />
<text  x="1068.85" y="1775.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1145.6" y="1733" width="0.2" height="15.0" fill="rgb(250,146,43)" rx="2" ry="2" />
<text  x="1148.58" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1147.0" y="2005" width="0.2" height="15.0" fill="rgb(251,144,33)" rx="2" ry="2" />
<text  x="1149.96" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="295.4" y="1765" width="0.2" height="15.0" fill="rgb(227,140,17)" rx="2" ry="2" />
<text  x="298.38" y="1775.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="972.8" y="1989" width="0.2" height="15.0" fill="rgb(238,168,18)" rx="2" ry="2" />
<text  x="975.84" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="543.5" y="1973" width="0.2" height="15.0" fill="rgb(241,120,21)" rx="2" ry="2" />
<text  x="546.48" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="170.6" y="1957" width="0.2" height="15.0" fill="rgb(243,122,36)" rx="2" ry="2" />
<text  x="173.64" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="253.1" y="1845" width="0.2" height="15.0" fill="rgb(221,72,5)" rx="2" ry="2" />
<text  x="256.14" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="636.3" y="2037" width="0.2" height="15.0" fill="rgb(250,21,33)" rx="2" ry="2" />
<text  x="639.29" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="188.5" y="1989" width="0.2" height="15.0" fill="rgb(229,210,30)" rx="2" ry="2" />
<text  x="191.49" y="1999.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="1187.8" y="1925" width="0.8" height="15.0" fill="rgb(237,27,37)" rx="2" ry="2" />
<text  x="1190.82" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.74%)</title><rect x="365.8" y="2021" width="8.7" height="15.0" fill="rgb(222,152,17)" rx="2" ry="2" />
<text  x="368.78" y="2031.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="261.5" y="1429" width="0.2" height="15.0" fill="rgb(213,60,29)" rx="2" ry="2" />
<text  x="264.47" y="1439.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1073.6" y="1893" width="0.4" height="15.0" fill="rgb(229,31,23)" rx="2" ry="2" />
<text  x="1076.59" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (9 samples, 0.15%)</title><rect x="192.9" y="1989" width="1.7" height="15.0" fill="rgb(249,74,38)" rx="2" ry="2" />
<text  x="195.85" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="230.7" y="1765" width="0.2" height="15.0" fill="rgb(239,159,39)" rx="2" ry="2" />
<text  x="233.73" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="470.1" y="1909" width="0.2" height="15.0" fill="rgb(205,194,21)" rx="2" ry="2" />
<text  x="473.10" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="262.3" y="1461" width="0.2" height="15.0" fill="rgb(244,213,33)" rx="2" ry="2" />
<text  x="265.26" y="1471.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="12.6" y="1909" width="1.0" height="15.0" fill="rgb(232,209,18)" rx="2" ry="2" />
<text  x="15.58" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="583.7" y="1893" width="0.4" height="15.0" fill="rgb(254,202,45)" rx="2" ry="2" />
<text  x="586.74" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1083.7" y="1557" width="0.2" height="15.0" fill="rgb(234,5,39)" rx="2" ry="2" />
<text  x="1086.70" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (83 samples, 1.39%)</title><rect x="607.3" y="1989" width="16.5" height="15.0" fill="rgb(222,111,44)" rx="2" ry="2" />
<text  x="610.34" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (29 samples, 0.49%)</title><rect x="15.0" y="2021" width="5.7" height="15.0" fill="rgb(225,136,36)" rx="2" ry="2" />
<text  x="17.96" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="682.7" y="1909" width="1.0" height="15.0" fill="rgb(224,180,9)" rx="2" ry="2" />
<text  x="685.70" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="301.3" y="1781" width="0.4" height="15.0" fill="rgb(243,56,36)" rx="2" ry="2" />
<text  x="304.33" y="1791.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (3 samples, 0.05%)</title><rect x="701.9" y="1861" width="0.6" height="15.0" fill="rgb(244,50,34)" rx="2" ry="2" />
<text  x="704.94" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (9 samples, 0.15%)</title><rect x="1130.1" y="1989" width="1.8" height="15.0" fill="rgb(239,159,53)" rx="2" ry="2" />
<text  x="1133.11" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="856.4" y="1989" width="0.6" height="15.0" fill="rgb(242,59,34)" rx="2" ry="2" />
<text  x="859.43" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="251.9" y="1781" width="0.2" height="15.0" fill="rgb(243,133,19)" rx="2" ry="2" />
<text  x="254.95" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="614.9" y="1973" width="0.2" height="15.0" fill="rgb(254,10,28)" rx="2" ry="2" />
<text  x="617.87" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="624.6" y="1989" width="3.2" height="15.0" fill="rgb(238,114,41)" rx="2" ry="2" />
<text  x="627.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1461" width="45.2" height="15.0" fill="rgb(218,159,21)" rx="2" ry="2" />
<text  x="53.85" y="1471.5" >[unk..</text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="388.6" y="1957" width="0.4" height="15.0" fill="rgb(216,92,54)" rx="2" ry="2" />
<text  x="391.59" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="451.7" y="1989" width="0.6" height="15.0" fill="rgb(224,186,53)" rx="2" ry="2" />
<text  x="454.66" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="253.1" y="1781" width="0.2" height="15.0" fill="rgb(243,202,8)" rx="2" ry="2" />
<text  x="256.14" y="1791.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1082.9" y="1813" width="0.2" height="15.0" fill="rgb(244,80,22)" rx="2" ry="2" />
<text  x="1085.91" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="392.2" y="1925" width="0.2" height="15.0" fill="rgb(249,204,3)" rx="2" ry="2" />
<text  x="395.16" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1131.1" y="1941" width="0.2" height="15.0" fill="rgb(240,149,47)" rx="2" ry="2" />
<text  x="1134.10" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (18 samples, 0.30%)</title><rect x="552.0" y="1989" width="3.6" height="15.0" fill="rgb(229,126,0)" rx="2" ry="2" />
<text  x="555.01" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (320 samples, 5.38%)</title><rect x="521.1" y="2037" width="63.4" height="15.0" fill="rgb(243,1,46)" rx="2" ry="2" />
<text  x="524.07" y="2047.5" >facebo..</text>
</g>
<g >
<title>std::pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(253,157,52)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="798.9" y="1749" width="0.2" height="15.0" fill="rgb(229,89,51)" rx="2" ry="2" />
<text  x="801.91" y="1759.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="301.3" y="1621" width="0.4" height="15.0" fill="rgb(205,70,49)" rx="2" ry="2" />
<text  x="304.33" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="244.2" y="1621" width="0.2" height="15.0" fill="rgb(245,197,41)" rx="2" ry="2" />
<text  x="247.22" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="586.5" y="1989" width="0.2" height="15.0" fill="rgb(248,15,32)" rx="2" ry="2" />
<text  x="589.51" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="1176.3" y="2053" width="0.6" height="15.0" fill="rgb(219,127,43)" rx="2" ry="2" />
<text  x="1179.32" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="365.6" y="2021" width="0.2" height="15.0" fill="rgb(240,211,5)" rx="2" ry="2" />
<text  x="368.59" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="18.3" y="1893" width="0.2" height="15.0" fill="rgb(211,155,26)" rx="2" ry="2" />
<text  x="21.33" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="295.6" y="1797" width="0.2" height="15.0" fill="rgb(234,106,41)" rx="2" ry="2" />
<text  x="298.58" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="514.7" y="2005" width="0.6" height="15.0" fill="rgb(205,182,15)" rx="2" ry="2" />
<text  x="517.72" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="171.4" y="1973" width="0.2" height="15.0" fill="rgb(244,81,39)" rx="2" ry="2" />
<text  x="174.43" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="865.4" y="1973" width="0.1" height="15.0" fill="rgb(226,133,24)" rx="2" ry="2" />
<text  x="868.35" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (30 samples, 0.50%)</title><rect x="404.9" y="2037" width="5.9" height="15.0" fill="rgb(247,126,30)" rx="2" ry="2" />
<text  x="407.85" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (8 samples, 0.13%)</title><rect x="186.1" y="1957" width="1.6" height="15.0" fill="rgb(209,58,10)" rx="2" ry="2" />
<text  x="189.11" y="1967.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="230.5" y="1877" width="0.2" height="15.0" fill="rgb(216,50,11)" rx="2" ry="2" />
<text  x="233.53" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="251.9" y="1797" width="0.2" height="15.0" fill="rgb(240,102,4)" rx="2" ry="2" />
<text  x="254.95" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (17 samples, 0.29%)</title><rect x="1147.4" y="2053" width="3.3" height="15.0" fill="rgb(239,64,39)" rx="2" ry="2" />
<text  x="1150.36" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1020.0" y="2021" width="0.2" height="15.0" fill="rgb(219,9,18)" rx="2" ry="2" />
<text  x="1023.04" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="37.6" y="2005" width="0.2" height="15.0" fill="rgb(241,90,0)" rx="2" ry="2" />
<text  x="40.57" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="481.8" y="1973" width="0.2" height="15.0" fill="rgb(251,68,29)" rx="2" ry="2" />
<text  x="484.80" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (6 samples, 0.10%)</title><rect x="351.9" y="1989" width="1.2" height="15.0" fill="rgb(212,192,9)" rx="2" ry="2" />
<text  x="354.90" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (76 samples, 1.28%)</title><rect x="1045.0" y="1845" width="15.1" height="15.0" fill="rgb(239,140,5)" rx="2" ry="2" />
<text  x="1048.03" y="1855.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1188.8" y="2005" width="0.2" height="15.0" fill="rgb(239,151,32)" rx="2" ry="2" />
<text  x="1191.81" y="2015.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="241.2" y="1893" width="0.2" height="15.0" fill="rgb(242,152,42)" rx="2" ry="2" />
<text  x="244.24" y="1903.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="244.0" y="1877" width="0.4" height="15.0" fill="rgb(231,157,40)" rx="2" ry="2" />
<text  x="247.02" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="241.0" y="1749" width="0.2" height="15.0" fill="rgb(238,13,1)" rx="2" ry="2" />
<text  x="244.04" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="583.7" y="1797" width="0.4" height="15.0" fill="rgb(240,86,47)" rx="2" ry="2" />
<text  x="586.74" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1105.1" y="1957" width="0.2" height="15.0" fill="rgb(230,134,6)" rx="2" ry="2" />
<text  x="1108.12" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="583.7" y="1717" width="0.2" height="15.0" fill="rgb(240,156,49)" rx="2" ry="2" />
<text  x="586.74" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="252.9" y="1749" width="0.2" height="15.0" fill="rgb(222,200,32)" rx="2" ry="2" />
<text  x="255.94" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="184.7" y="2005" width="0.2" height="15.0" fill="rgb(217,66,38)" rx="2" ry="2" />
<text  x="187.72" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="290.2" y="1749" width="0.6" height="15.0" fill="rgb(244,178,0)" rx="2" ry="2" />
<text  x="293.23" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="390.0" y="1925" width="0.4" height="15.0" fill="rgb(227,94,50)" rx="2" ry="2" />
<text  x="392.98" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="948.8" y="1877" width="0.4" height="15.0" fill="rgb(220,53,51)" rx="2" ry="2" />
<text  x="951.84" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="352.3" y="1973" width="0.2" height="15.0" fill="rgb(224,47,8)" rx="2" ry="2" />
<text  x="355.30" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (6 samples, 0.10%)</title><rect x="92.1" y="37" width="1.2" height="15.0" fill="rgb(208,185,34)" rx="2" ry="2" />
<text  x="95.10" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (18 samples, 0.30%)</title><rect x="389.0" y="1957" width="3.6" height="15.0" fill="rgb(229,61,24)" rx="2" ry="2" />
<text  x="391.99" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="181.9" y="1701" width="0.2" height="15.0" fill="rgb(234,24,0)" rx="2" ry="2" />
<text  x="184.94" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1065.9" y="1701" width="0.2" height="15.0" fill="rgb(248,71,19)" rx="2" ry="2" />
<text  x="1068.85" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="581.8" y="1717" width="0.2" height="15.0" fill="rgb(236,52,40)" rx="2" ry="2" />
<text  x="584.75" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="255.3" y="1749" width="0.2" height="15.0" fill="rgb(228,32,38)" rx="2" ry="2" />
<text  x="258.32" y="1759.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="261.7" y="1461" width="0.2" height="15.0" fill="rgb(249,79,14)" rx="2" ry="2" />
<text  x="264.67" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (74 samples, 1.24%)</title><rect x="416.4" y="2005" width="14.6" height="15.0" fill="rgb(225,179,16)" rx="2" ry="2" />
<text  x="419.36" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (2 samples, 0.03%)</title><rect x="198.2" y="2021" width="0.4" height="15.0" fill="rgb(219,165,37)" rx="2" ry="2" />
<text  x="201.21" y="2031.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="576.0" y="1909" width="0.2" height="15.0" fill="rgb(251,104,46)" rx="2" ry="2" />
<text  x="579.00" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1073.6" y="1861" width="0.4" height="15.0" fill="rgb(208,206,31)" rx="2" ry="2" />
<text  x="1076.59" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1132.1" y="1989" width="0.2" height="15.0" fill="rgb(239,123,50)" rx="2" ry="2" />
<text  x="1135.09" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="581.4" y="1861" width="0.2" height="15.0" fill="rgb(231,154,28)" rx="2" ry="2" />
<text  x="584.36" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1061" width="45.2" height="15.0" fill="rgb(233,45,29)" rx="2" ry="2" />
<text  x="53.85" y="1071.5" >[unk..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="885" width="45.2" height="15.0" fill="rgb(221,188,2)" rx="2" ry="2" />
<text  x="53.85" y="895.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="450.5" y="1973" width="1.2" height="15.0" fill="rgb(241,92,32)" rx="2" ry="2" />
<text  x="453.47" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="555.6" y="1989" width="0.2" height="15.0" fill="rgb(240,97,49)" rx="2" ry="2" />
<text  x="558.58" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.18%)</title><rect x="185.7" y="1989" width="2.2" height="15.0" fill="rgb(206,61,16)" rx="2" ry="2" />
<text  x="188.71" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="729.3" y="1957" width="1.4" height="15.0" fill="rgb(237,134,21)" rx="2" ry="2" />
<text  x="732.30" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1180.9" y="2021" width="0.8" height="15.0" fill="rgb(240,96,0)" rx="2" ry="2" />
<text  x="1183.88" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="244.2" y="1765" width="0.2" height="15.0" fill="rgb(241,1,12)" rx="2" ry="2" />
<text  x="247.22" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="244.2" y="1781" width="0.2" height="15.0" fill="rgb(229,186,0)" rx="2" ry="2" />
<text  x="247.22" y="1791.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="659.9" y="1925" width="0.2" height="15.0" fill="rgb(219,227,18)" rx="2" ry="2" />
<text  x="662.89" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="402.5" y="1861" width="0.6" height="15.0" fill="rgb(235,207,54)" rx="2" ry="2" />
<text  x="405.47" y="1871.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="114.1" y="1941" width="0.2" height="15.0" fill="rgb(214,117,8)" rx="2" ry="2" />
<text  x="117.12" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="213.3" y="1989" width="0.2" height="15.0" fill="rgb(242,73,39)" rx="2" ry="2" />
<text  x="216.28" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="10.4" y="2005" width="0.8" height="15.0" fill="rgb(251,18,50)" rx="2" ry="2" />
<text  x="13.40" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (4 samples, 0.07%)</title><rect x="599.2" y="2037" width="0.8" height="15.0" fill="rgb(217,122,33)" rx="2" ry="2" />
<text  x="602.21" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (21 samples, 0.35%)</title><rect x="172.2" y="1989" width="4.2" height="15.0" fill="rgb(211,170,35)" rx="2" ry="2" />
<text  x="175.23" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1068.4" y="1909" width="0.2" height="15.0" fill="rgb(222,87,53)" rx="2" ry="2" />
<text  x="1071.43" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="968.7" y="1973" width="1.8" height="15.0" fill="rgb(225,4,28)" rx="2" ry="2" />
<text  x="971.68" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1073.6" y="1829" width="0.4" height="15.0" fill="rgb(217,166,43)" rx="2" ry="2" />
<text  x="1076.59" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="258.3" y="1701" width="0.2" height="15.0" fill="rgb(251,112,37)" rx="2" ry="2" />
<text  x="261.30" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1065.9" y="1621" width="0.2" height="15.0" fill="rgb(241,89,1)" rx="2" ry="2" />
<text  x="1068.85" y="1631.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="235.7" y="1589" width="0.2" height="15.0" fill="rgb(217,64,37)" rx="2" ry="2" />
<text  x="238.69" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="66.3" y="37" width="1.0" height="15.0" fill="rgb(253,182,50)" rx="2" ry="2" />
<text  x="69.32" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="579.4" y="1749" width="0.4" height="15.0" fill="rgb(246,165,26)" rx="2" ry="2" />
<text  x="582.37" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="181.9" y="1877" width="0.2" height="15.0" fill="rgb(215,13,43)" rx="2" ry="2" />
<text  x="184.94" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="404.7" y="2037" width="0.2" height="15.0" fill="rgb(249,88,24)" rx="2" ry="2" />
<text  x="407.66" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="773" width="45.2" height="15.0" fill="rgb(235,215,35)" rx="2" ry="2" />
<text  x="53.85" y="783.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="577.8" y="1701" width="0.2" height="15.0" fill="rgb(215,133,30)" rx="2" ry="2" />
<text  x="580.79" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="825.3" y="2005" width="0.4" height="15.0" fill="rgb(208,173,12)" rx="2" ry="2" />
<text  x="828.29" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="963.3" y="1909" width="1.2" height="15.0" fill="rgb(230,7,27)" rx="2" ry="2" />
<text  x="966.32" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (10 samples, 0.17%)</title><rect x="970.9" y="1989" width="1.9" height="15.0" fill="rgb(237,74,47)" rx="2" ry="2" />
<text  x="973.86" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1145.6" y="1909" width="0.2" height="15.0" fill="rgb(253,50,44)" rx="2" ry="2" />
<text  x="1148.58" y="1919.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="306.1" y="2037" width="0.2" height="15.0" fill="rgb(230,141,24)" rx="2" ry="2" />
<text  x="309.09" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1084.9" y="1813" width="0.2" height="15.0" fill="rgb(220,211,39)" rx="2" ry="2" />
<text  x="1087.89" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (19 samples, 0.32%)</title><rect x="896.7" y="2005" width="3.8" height="15.0" fill="rgb(246,117,47)" rx="2" ry="2" />
<text  x="899.69" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1043.2" y="1861" width="0.2" height="15.0" fill="rgb(215,42,52)" rx="2" ry="2" />
<text  x="1046.24" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="516.1" y="2021" width="0.6" height="15.0" fill="rgb(240,10,24)" rx="2" ry="2" />
<text  x="519.11" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="199.2" y="1909" width="0.2" height="15.0" fill="rgb(214,60,17)" rx="2" ry="2" />
<text  x="202.20" y="1919.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="259.7" y="1781" width="0.2" height="15.0" fill="rgb(214,132,52)" rx="2" ry="2" />
<text  x="262.68" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="403.3" y="2037" width="0.2" height="15.0" fill="rgb(210,216,24)" rx="2" ry="2" />
<text  x="406.27" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="485" width="45.2" height="15.0" fill="rgb(212,222,41)" rx="2" ry="2" />
<text  x="53.85" y="495.5" >[unk..</text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1068.0" y="1925" width="0.2" height="15.0" fill="rgb(253,93,25)" rx="2" ry="2" />
<text  x="1071.03" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="582.0" y="1925" width="0.2" height="15.0" fill="rgb(217,180,32)" rx="2" ry="2" />
<text  x="584.95" y="1935.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1083.9" y="1749" width="0.2" height="15.0" fill="rgb(220,69,15)" rx="2" ry="2" />
<text  x="1086.90" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (17 samples, 0.29%)</title><rect x="639.1" y="2037" width="3.3" height="15.0" fill="rgb(248,85,6)" rx="2" ry="2" />
<text  x="642.07" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1147.2" y="1877" width="0.2" height="15.0" fill="rgb(206,42,13)" rx="2" ry="2" />
<text  x="1150.16" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (5 samples, 0.08%)</title><rect x="637.7" y="2037" width="1.0" height="15.0" fill="rgb(220,10,30)" rx="2" ry="2" />
<text  x="640.68" y="2047.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="1187.8" y="1957" width="0.8" height="15.0" fill="rgb(218,43,40)" rx="2" ry="2" />
<text  x="1190.82" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (7 samples, 0.12%)</title><rect x="38.8" y="1925" width="1.3" height="15.0" fill="rgb(235,38,48)" rx="2" ry="2" />
<text  x="41.76" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (69 samples, 1.16%)</title><rect x="503.0" y="2037" width="13.7" height="15.0" fill="rgb(217,39,7)" rx="2" ry="2" />
<text  x="506.02" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.9" y="421" width="0.2" height="15.0" fill="rgb(242,199,32)" rx="2" ry="2" />
<text  x="98.87" y="431.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1083.9" y="1717" width="0.2" height="15.0" fill="rgb(217,50,12)" rx="2" ry="2" />
<text  x="1086.90" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="295.8" y="1845" width="0.2" height="15.0" fill="rgb(215,106,22)" rx="2" ry="2" />
<text  x="298.78" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="90.7" y="37" width="0.2" height="15.0" fill="rgb(246,121,2)" rx="2" ry="2" />
<text  x="93.72" y="47.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="402.5" y="1733" width="0.2" height="15.0" fill="rgb(226,203,22)" rx="2" ry="2" />
<text  x="405.47" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="670.0" y="1909" width="0.2" height="15.0" fill="rgb(252,22,20)" rx="2" ry="2" />
<text  x="673.01" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (205 samples, 3.45%)</title><rect x="121.3" y="1989" width="40.6" height="15.0" fill="rgb(236,167,44)" rx="2" ry="2" />
<text  x="124.26" y="1999.5" >fol..</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1039.1" y="1749" width="0.2" height="15.0" fill="rgb(208,100,0)" rx="2" ry="2" />
<text  x="1042.08" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="966.5" y="1925" width="0.2" height="15.0" fill="rgb(237,81,45)" rx="2" ry="2" />
<text  x="969.49" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="200.4" y="1925" width="0.4" height="15.0" fill="rgb(240,199,16)" rx="2" ry="2" />
<text  x="203.39" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="825.7" y="2005" width="0.4" height="15.0" fill="rgb(229,32,54)" rx="2" ry="2" />
<text  x="828.69" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="402.5" y="1781" width="0.6" height="15.0" fill="rgb(231,137,49)" rx="2" ry="2" />
<text  x="405.47" y="1791.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="967.5" y="1989" width="0.2" height="15.0" fill="rgb(230,110,32)" rx="2" ry="2" />
<text  x="970.49" y="1999.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="549.4" y="1845" width="0.2" height="15.0" fill="rgb(214,113,37)" rx="2" ry="2" />
<text  x="552.43" y="1855.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1034.3" y="1845" width="0.2" height="15.0" fill="rgb(233,67,29)" rx="2" ry="2" />
<text  x="1037.32" y="1855.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="1145.8" y="2005" width="0.4" height="15.0" fill="rgb(217,43,10)" rx="2" ry="2" />
<text  x="1148.77" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="10.4" y="2037" width="0.8" height="15.0" fill="rgb(236,167,24)" rx="2" ry="2" />
<text  x="13.40" y="2047.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1069.4" y="1877" width="0.2" height="15.0" fill="rgb(243,12,5)" rx="2" ry="2" />
<text  x="1072.42" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (398 samples, 6.69%)</title><rect x="658.5" y="2005" width="78.9" height="15.0" fill="rgb(224,34,6)" rx="2" ry="2" />
<text  x="661.50" y="2015.5" >facebook:..</text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="290.6" y="1541" width="0.2" height="15.0" fill="rgb(237,63,15)" rx="2" ry="2" />
<text  x="293.62" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1221" width="45.2" height="15.0" fill="rgb(228,94,30)" rx="2" ry="2" />
<text  x="53.85" y="1231.5" >[unk..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="393.2" y="1989" width="0.2" height="15.0" fill="rgb(247,80,27)" rx="2" ry="2" />
<text  x="396.15" y="1999.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (8 samples, 0.13%)</title><rect x="826.7" y="2005" width="1.6" height="15.0" fill="rgb(212,89,29)" rx="2" ry="2" />
<text  x="829.68" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="577.8" y="1653" width="0.2" height="15.0" fill="rgb(235,25,33)" rx="2" ry="2" />
<text  x="580.79" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="199.6" y="1893" width="0.4" height="15.0" fill="rgb(214,170,3)" rx="2" ry="2" />
<text  x="202.59" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="824.1" y="1989" width="1.2" height="15.0" fill="rgb(247,201,4)" rx="2" ry="2" />
<text  x="827.10" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="261.7" y="1429" width="0.2" height="15.0" fill="rgb(224,145,51)" rx="2" ry="2" />
<text  x="264.67" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (344 samples, 5.78%)</title><rect x="96.9" y="2005" width="68.2" height="15.0" fill="rgb(229,126,44)" rx="2" ry="2" />
<text  x="99.86" y="2015.5" >faceboo..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1685" width="45.2" height="15.0" fill="rgb(205,1,28)" rx="2" ry="2" />
<text  x="53.85" y="1695.5" >[unk..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="181.9" y="1925" width="0.2" height="15.0" fill="rgb(224,142,6)" rx="2" ry="2" />
<text  x="184.94" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (32 samples, 0.54%)</title><rect x="14.4" y="2037" width="6.3" height="15.0" fill="rgb(213,187,21)" rx="2" ry="2" />
<text  x="17.36" y="2047.5" ></text>
</g>
<g >
<title>__kfree_skb (63 samples, 1.06%)</title><rect x="267.4" y="1461" width="12.5" height="15.0" fill="rgb(253,102,44)" rx="2" ry="2" />
<text  x="270.42" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (1 samples, 0.02%)</title><rect x="623.8" y="1973" width="0.2" height="15.0" fill="rgb(225,45,5)" rx="2" ry="2" />
<text  x="626.80" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (366 samples, 6.15%)</title><rect x="900.5" y="2005" width="72.5" height="15.0" fill="rgb(248,92,8)" rx="2" ry="2" />
<text  x="903.45" y="2015.5" >folly::f..</text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="230.7" y="1813" width="0.6" height="15.0" fill="rgb(253,222,47)" rx="2" ry="2" />
<text  x="233.73" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (6 samples, 0.10%)</title><rect x="674.0" y="1925" width="1.2" height="15.0" fill="rgb(253,182,25)" rx="2" ry="2" />
<text  x="676.97" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.05%)</title><rect x="402.5" y="1765" width="0.6" height="15.0" fill="rgb(254,79,53)" rx="2" ry="2" />
<text  x="405.47" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (9 samples, 0.15%)</title><rect x="592.9" y="2005" width="1.7" height="15.0" fill="rgb(205,91,48)" rx="2" ry="2" />
<text  x="595.86" y="2015.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="967.3" y="1989" width="0.2" height="15.0" fill="rgb(247,159,52)" rx="2" ry="2" />
<text  x="970.29" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (19 samples, 0.32%)</title><rect x="850.5" y="1973" width="3.7" height="15.0" fill="rgb(254,215,32)" rx="2" ry="2" />
<text  x="853.48" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="577.4" y="1749" width="0.2" height="15.0" fill="rgb(213,151,8)" rx="2" ry="2" />
<text  x="580.39" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1925" width="45.2" height="15.0" fill="rgb(213,152,34)" rx="2" ry="2" />
<text  x="53.85" y="1935.5" >[unk..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="356.3" y="1941" width="0.2" height="15.0" fill="rgb(235,120,20)" rx="2" ry="2" />
<text  x="359.27" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="324.7" y="1989" width="0.2" height="15.0" fill="rgb(207,209,16)" rx="2" ry="2" />
<text  x="327.73" y="1999.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="1082.7" y="1893" width="0.2" height="15.0" fill="rgb(207,109,36)" rx="2" ry="2" />
<text  x="1085.71" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1150.5" y="2005" width="0.2" height="15.0" fill="rgb(221,48,50)" rx="2" ry="2" />
<text  x="1153.53" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="213.7" y="1925" width="0.2" height="15.0" fill="rgb(233,150,8)" rx="2" ry="2" />
<text  x="216.67" y="1935.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="798.7" y="1861" width="0.2" height="15.0" fill="rgb(243,184,53)" rx="2" ry="2" />
<text  x="801.72" y="1871.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1159.9" y="1749" width="0.2" height="15.0" fill="rgb(219,197,10)" rx="2" ry="2" />
<text  x="1162.86" y="1759.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1059.3" y="1749" width="0.2" height="15.0" fill="rgb(239,180,12)" rx="2" ry="2" />
<text  x="1062.31" y="1759.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (11 samples, 0.18%)</title><rect x="386.0" y="1989" width="2.2" height="15.0" fill="rgb(227,38,46)" rx="2" ry="2" />
<text  x="389.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1159.9" y="1797" width="0.2" height="15.0" fill="rgb(224,147,20)" rx="2" ry="2" />
<text  x="1162.86" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (3 samples, 0.05%)</title><rect x="168.9" y="1941" width="0.5" height="15.0" fill="rgb(218,101,19)" rx="2" ry="2" />
<text  x="171.85" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1253" width="45.2" height="15.0" fill="rgb(253,85,6)" rx="2" ry="2" />
<text  x="53.85" y="1263.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="671.0" y="1909" width="0.8" height="15.0" fill="rgb(215,186,8)" rx="2" ry="2" />
<text  x="674.00" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="90.9" y="37" width="0.4" height="15.0" fill="rgb(212,76,46)" rx="2" ry="2" />
<text  x="93.91" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (4 samples, 0.07%)</title><rect x="1102.9" y="2005" width="0.8" height="15.0" fill="rgb(250,16,4)" rx="2" ry="2" />
<text  x="1105.94" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="327.1" y="1957" width="0.2" height="15.0" fill="rgb(254,211,0)" rx="2" ry="2" />
<text  x="330.11" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1147.2" y="1957" width="0.2" height="15.0" fill="rgb(234,176,19)" rx="2" ry="2" />
<text  x="1150.16" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="590.3" y="1957" width="0.2" height="15.0" fill="rgb(212,132,43)" rx="2" ry="2" />
<text  x="593.28" y="1967.5" ></text>
</g>
<g >
<title>sys_epoll_wait (20 samples, 0.34%)</title><rect x="308.5" y="1989" width="3.9" height="15.0" fill="rgb(229,210,3)" rx="2" ry="2" />
<text  x="311.47" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.45%)</title><rect x="602.0" y="1989" width="5.3" height="15.0" fill="rgb(220,223,2)" rx="2" ry="2" />
<text  x="604.98" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1093.4" y="1861" width="0.2" height="15.0" fill="rgb(247,71,17)" rx="2" ry="2" />
<text  x="1096.42" y="1871.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="11.4" y="1973" width="1.0" height="15.0" fill="rgb(236,221,7)" rx="2" ry="2" />
<text  x="14.39" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="300.9" y="1829" width="0.8" height="15.0" fill="rgb(213,216,29)" rx="2" ry="2" />
<text  x="303.93" y="1839.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="114.1" y="1877" width="0.2" height="15.0" fill="rgb(233,94,45)" rx="2" ry="2" />
<text  x="117.12" y="1887.5" ></text>
</g>
<g >
<title>mcrouter (5,932 samples, 99.70%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(243,205,22)" rx="2" ry="2" />
<text  x="16.57" y="2079.5" >mcrouter</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="655.5" y="2005" width="2.0" height="15.0" fill="rgb(226,5,35)" rx="2" ry="2" />
<text  x="658.53" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (178 samples, 2.99%)</title><rect x="126.2" y="1973" width="35.3" height="15.0" fill="rgb(234,24,30)" rx="2" ry="2" />
<text  x="129.22" y="1983.5" >fo..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="581.4" y="1813" width="0.2" height="15.0" fill="rgb(250,70,13)" rx="2" ry="2" />
<text  x="584.36" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="310.3" y="1749" width="0.2" height="15.0" fill="rgb(227,31,43)" rx="2" ry="2" />
<text  x="313.26" y="1759.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="659.9" y="1893" width="0.2" height="15.0" fill="rgb(219,188,47)" rx="2" ry="2" />
<text  x="662.89" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1065.9" y="1717" width="0.2" height="15.0" fill="rgb(224,226,18)" rx="2" ry="2" />
<text  x="1068.85" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (10 samples, 0.17%)</title><rect x="176.8" y="2005" width="2.0" height="15.0" fill="rgb(215,89,5)" rx="2" ry="2" />
<text  x="179.79" y="2015.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="606.5" y="1973" width="0.8" height="15.0" fill="rgb(223,34,15)" rx="2" ry="2" />
<text  x="609.54" y="1983.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="287.8" y="1653" width="0.2" height="15.0" fill="rgb(223,143,11)" rx="2" ry="2" />
<text  x="290.85" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="237.7" y="1877" width="0.2" height="15.0" fill="rgb(245,26,32)" rx="2" ry="2" />
<text  x="240.67" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="69.7" y="37" width="0.2" height="15.0" fill="rgb(254,21,4)" rx="2" ry="2" />
<text  x="72.69" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1147.2" y="2021" width="0.2" height="15.0" fill="rgb(222,134,30)" rx="2" ry="2" />
<text  x="1150.16" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="95.7" y="133" width="0.2" height="15.0" fill="rgb(239,87,3)" rx="2" ry="2" />
<text  x="98.67" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1083.7" y="1717" width="0.2" height="15.0" fill="rgb(208,124,52)" rx="2" ry="2" />
<text  x="1086.70" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.15%)</title><rect x="588.5" y="1941" width="1.8" height="15.0" fill="rgb(228,158,24)" rx="2" ry="2" />
<text  x="591.50" y="1951.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="549.4" y="1861" width="0.2" height="15.0" fill="rgb(210,6,43)" rx="2" ry="2" />
<text  x="552.43" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="615.1" y="1973" width="0.4" height="15.0" fill="rgb(251,141,0)" rx="2" ry="2" />
<text  x="618.07" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="1102.3" y="1957" width="0.2" height="15.0" fill="rgb(221,197,15)" rx="2" ry="2" />
<text  x="1105.34" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1083.7" y="1573" width="0.2" height="15.0" fill="rgb(218,199,49)" rx="2" ry="2" />
<text  x="1086.70" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="365.4" y="2021" width="0.2" height="15.0" fill="rgb(212,126,28)" rx="2" ry="2" />
<text  x="368.39" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1042.6" y="1765" width="0.4" height="15.0" fill="rgb(244,83,24)" rx="2" ry="2" />
<text  x="1045.65" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (239 samples, 4.02%)</title><rect x="678.3" y="1941" width="47.4" height="15.0" fill="rgb(235,153,38)" rx="2" ry="2" />
<text  x="681.34" y="1951.5" >foll..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.5" y="117" width="0.2" height="15.0" fill="rgb(240,149,28)" rx="2" ry="2" />
<text  x="98.48" y="127.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1187.8" y="1909" width="0.8" height="15.0" fill="rgb(217,51,49)" rx="2" ry="2" />
<text  x="1190.82" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1084.9" y="1797" width="0.2" height="15.0" fill="rgb(212,199,14)" rx="2" ry="2" />
<text  x="1087.89" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1073.6" y="1685" width="0.4" height="15.0" fill="rgb(250,121,0)" rx="2" ry="2" />
<text  x="1076.59" y="1695.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (45 samples, 0.76%)</title><rect x="492.7" y="1989" width="8.9" height="15.0" fill="rgb(229,132,46)" rx="2" ry="2" />
<text  x="495.71" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="477.2" y="1925" width="0.2" height="15.0" fill="rgb(220,7,35)" rx="2" ry="2" />
<text  x="480.24" y="1935.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1059.9" y="1557" width="0.2" height="15.0" fill="rgb(206,74,53)" rx="2" ry="2" />
<text  x="1062.90" y="1567.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="353.5" y="1989" width="0.2" height="15.0" fill="rgb(239,69,22)" rx="2" ry="2" />
<text  x="356.49" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1845" width="45.2" height="15.0" fill="rgb(243,22,4)" rx="2" ry="2" />
<text  x="53.85" y="1855.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="479.4" y="1957" width="0.2" height="15.0" fill="rgb(238,109,12)" rx="2" ry="2" />
<text  x="482.42" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="297.6" y="1685" width="0.2" height="15.0" fill="rgb(231,40,2)" rx="2" ry="2" />
<text  x="300.56" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (101 samples, 1.70%)</title><rect x="263.1" y="1557" width="20.0" height="15.0" fill="rgb(215,123,19)" rx="2" ry="2" />
<text  x="266.06" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="805" width="45.2" height="15.0" fill="rgb(220,81,3)" rx="2" ry="2" />
<text  x="53.85" y="815.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="309.1" y="1909" width="0.2" height="15.0" fill="rgb(253,176,47)" rx="2" ry="2" />
<text  x="312.07" y="1919.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1015.5" y="1845" width="0.2" height="15.0" fill="rgb(236,17,4)" rx="2" ry="2" />
<text  x="1018.48" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="837" width="45.2" height="15.0" fill="rgb(205,220,15)" rx="2" ry="2" />
<text  x="53.85" y="847.5" >[unk..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1073.4" y="1893" width="0.2" height="15.0" fill="rgb(224,64,6)" rx="2" ry="2" />
<text  x="1076.39" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="302.7" y="2021" width="0.2" height="15.0" fill="rgb(220,164,39)" rx="2" ry="2" />
<text  x="305.72" y="2031.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1088.1" y="2037" width="0.2" height="15.0" fill="rgb(251,0,7)" rx="2" ry="2" />
<text  x="1091.06" y="2047.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (163 samples, 2.74%)</title><rect x="256.9" y="1829" width="32.3" height="15.0" fill="rgb(241,1,7)" rx="2" ry="2" />
<text  x="259.91" y="1839.5" >__..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1957" width="45.2" height="15.0" fill="rgb(245,216,22)" rx="2" ry="2" />
<text  x="53.85" y="1967.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="629.2" y="2005" width="2.3" height="15.0" fill="rgb(246,209,20)" rx="2" ry="2" />
<text  x="632.15" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="306.9" y="2037" width="0.6" height="15.0" fill="rgb(241,210,39)" rx="2" ry="2" />
<text  x="309.88" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="200.8" y="1941" width="0.2" height="15.0" fill="rgb(243,49,4)" rx="2" ry="2" />
<text  x="203.78" y="1951.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="577.8" y="1621" width="0.2" height="15.0" fill="rgb(237,64,48)" rx="2" ry="2" />
<text  x="580.79" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="416.2" y="2005" width="0.2" height="15.0" fill="rgb(220,25,52)" rx="2" ry="2" />
<text  x="419.16" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="737.0" y="1973" width="0.2" height="15.0" fill="rgb(221,168,24)" rx="2" ry="2" />
<text  x="740.04" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (3 samples, 0.05%)</title><rect x="1083.5" y="1893" width="0.6" height="15.0" fill="rgb(235,11,34)" rx="2" ry="2" />
<text  x="1086.50" y="1903.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="200.6" y="1765" width="0.2" height="15.0" fill="rgb(238,36,25)" rx="2" ry="2" />
<text  x="203.58" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="151.6" y="1957" width="0.2" height="15.0" fill="rgb(227,149,2)" rx="2" ry="2" />
<text  x="154.60" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1072.4" y="1557" width="0.2" height="15.0" fill="rgb(218,199,50)" rx="2" ry="2" />
<text  x="1075.40" y="1567.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="96.7" y="1717" width="0.2" height="15.0" fill="rgb(221,71,43)" rx="2" ry="2" />
<text  x="99.67" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (21 samples, 0.35%)</title><rect x="172.2" y="1973" width="4.2" height="15.0" fill="rgb(235,206,16)" rx="2" ry="2" />
<text  x="175.23" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (21 samples, 0.35%)</title><rect x="284.1" y="1701" width="4.1" height="15.0" fill="rgb(235,223,18)" rx="2" ry="2" />
<text  x="287.08" y="1711.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="226.0" y="1957" width="0.2" height="15.0" fill="rgb(207,120,30)" rx="2" ry="2" />
<text  x="228.97" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1073.6" y="1925" width="0.4" height="15.0" fill="rgb(242,67,4)" rx="2" ry="2" />
<text  x="1076.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1653" width="45.2" height="15.0" fill="rgb(248,67,1)" rx="2" ry="2" />
<text  x="53.85" y="1663.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (31 samples, 0.52%)</title><rect x="645.6" y="2005" width="6.2" height="15.0" fill="rgb(234,150,15)" rx="2" ry="2" />
<text  x="648.61" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (34 samples, 0.57%)</title><rect x="557.4" y="1989" width="6.7" height="15.0" fill="rgb(215,58,6)" rx="2" ry="2" />
<text  x="560.36" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="480.6" y="1957" width="0.2" height="15.0" fill="rgb(217,108,34)" rx="2" ry="2" />
<text  x="483.61" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="230.5" y="1989" width="0.8" height="15.0" fill="rgb(225,112,8)" rx="2" ry="2" />
<text  x="233.53" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1143.8" y="1653" width="0.2" height="15.0" fill="rgb(230,22,31)" rx="2" ry="2" />
<text  x="1146.79" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="290.4" y="1685" width="0.4" height="15.0" fill="rgb(218,44,1)" rx="2" ry="2" />
<text  x="293.42" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="693" width="45.2" height="15.0" fill="rgb(239,143,4)" rx="2" ry="2" />
<text  x="53.85" y="703.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="798.7" y="1973" width="0.4" height="15.0" fill="rgb(227,31,36)" rx="2" ry="2" />
<text  x="801.72" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1557" width="45.2" height="15.0" fill="rgb(234,145,44)" rx="2" ry="2" />
<text  x="53.85" y="1567.5" >[unk..</text>
</g>
<g >
<title>folly::EventBase::loopBody (13 samples, 0.22%)</title><rect x="198.8" y="1973" width="2.6" height="15.0" fill="rgb(213,155,48)" rx="2" ry="2" />
<text  x="201.80" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="374.7" y="2021" width="0.2" height="15.0" fill="rgb(249,167,5)" rx="2" ry="2" />
<text  x="377.71" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1147.0" y="1973" width="0.2" height="15.0" fill="rgb(207,207,2)" rx="2" ry="2" />
<text  x="1149.96" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1159.9" y="1893" width="0.2" height="15.0" fill="rgb(242,12,35)" rx="2" ry="2" />
<text  x="1162.86" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (2 samples, 0.03%)</title><rect x="1174.5" y="2053" width="0.4" height="15.0" fill="rgb(241,21,29)" rx="2" ry="2" />
<text  x="1177.53" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (71 samples, 1.19%)</title><rect x="836.4" y="1973" width="14.1" height="15.0" fill="rgb(229,76,14)" rx="2" ry="2" />
<text  x="839.40" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (192 samples, 3.23%)</title><rect x="1109.3" y="2053" width="38.1" height="15.0" fill="rgb(228,163,40)" rx="2" ry="2" />
<text  x="1112.28" y="2063.5" >fac..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="465.5" y="1941" width="0.2" height="15.0" fill="rgb(226,25,20)" rx="2" ry="2" />
<text  x="468.54" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (9 samples, 0.15%)</title><rect x="1148.9" y="2021" width="1.8" height="15.0" fill="rgb(243,8,18)" rx="2" ry="2" />
<text  x="1151.95" y="2031.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="261.9" y="1445" width="0.2" height="15.0" fill="rgb(222,122,46)" rx="2" ry="2" />
<text  x="264.87" y="1455.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1131.1" y="1765" width="0.2" height="15.0" fill="rgb(240,198,47)" rx="2" ry="2" />
<text  x="1134.10" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1141" width="45.2" height="15.0" fill="rgb(210,65,35)" rx="2" ry="2" />
<text  x="53.85" y="1151.5" >[unk..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (386 samples, 6.49%)</title><rect x="226.2" y="2021" width="76.5" height="15.0" fill="rgb(208,141,52)" rx="2" ry="2" />
<text  x="229.17" y="2031.5" >entry_SY..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="174.8" y="1861" width="0.2" height="15.0" fill="rgb(227,177,27)" rx="2" ry="2" />
<text  x="177.80" y="1871.5" ></text>
</g>
<g >
<title>inet_sendmsg (290 samples, 4.87%)</title><rect x="238.5" y="1925" width="57.5" height="15.0" fill="rgb(205,148,26)" rx="2" ry="2" />
<text  x="241.46" y="1935.5" >inet_s..</text>
</g>
<g >
<title>tcp_event_data_recv (4 samples, 0.07%)</title><rect x="1071.8" y="1861" width="0.8" height="15.0" fill="rgb(220,149,16)" rx="2" ry="2" />
<text  x="1074.80" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1147.2" y="1845" width="0.2" height="15.0" fill="rgb(238,83,7)" rx="2" ry="2" />
<text  x="1150.16" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="364.8" y="1989" width="0.2" height="15.0" fill="rgb(242,189,31)" rx="2" ry="2" />
<text  x="367.79" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="590.1" y="1925" width="0.2" height="15.0" fill="rgb(236,209,32)" rx="2" ry="2" />
<text  x="593.08" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="624.0" y="1973" width="0.2" height="15.0" fill="rgb(216,113,18)" rx="2" ry="2" />
<text  x="627.00" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (3 samples, 0.05%)</title><rect x="381.7" y="2005" width="0.5" height="15.0" fill="rgb(222,11,24)" rx="2" ry="2" />
<text  x="384.65" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (5 samples, 0.08%)</title><rect x="472.7" y="1925" width="1.0" height="15.0" fill="rgb(220,180,52)" rx="2" ry="2" />
<text  x="475.68" y="1935.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="583.7" y="1653" width="0.2" height="15.0" fill="rgb(251,87,34)" rx="2" ry="2" />
<text  x="586.74" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1147.0" y="1941" width="0.2" height="15.0" fill="rgb(248,14,38)" rx="2" ry="2" />
<text  x="1149.96" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (6 samples, 0.10%)</title><rect x="179.0" y="2005" width="1.2" height="15.0" fill="rgb(222,63,22)" rx="2" ry="2" />
<text  x="181.97" y="2015.5" ></text>
</g>
<g >
<title>sys_recvfrom (323 samples, 5.43%)</title><rect x="1024.0" y="2005" width="64.1" height="15.0" fill="rgb(238,190,16)" rx="2" ry="2" />
<text  x="1027.01" y="2015.5" >sys_rec..</text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1861" width="45.2" height="15.0" fill="rgb(230,19,33)" rx="2" ry="2" />
<text  x="53.85" y="1871.5" >[unk..</text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="204.0" y="2021" width="0.2" height="15.0" fill="rgb(235,193,36)" rx="2" ry="2" />
<text  x="206.96" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="94.5" y="37" width="0.2" height="15.0" fill="rgb(240,119,11)" rx="2" ry="2" />
<text  x="97.48" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1159.9" y="1909" width="0.2" height="15.0" fill="rgb(233,115,38)" rx="2" ry="2" />
<text  x="1162.86" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="333.1" y="1941" width="0.2" height="15.0" fill="rgb(245,37,1)" rx="2" ry="2" />
<text  x="336.06" y="1951.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="311.6" y="1605" width="0.2" height="15.0" fill="rgb(214,46,21)" rx="2" ry="2" />
<text  x="314.64" y="1615.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1042.6" y="1605" width="0.2" height="15.0" fill="rgb(220,107,10)" rx="2" ry="2" />
<text  x="1045.65" y="1615.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="576.0" y="1941" width="0.2" height="15.0" fill="rgb(215,130,52)" rx="2" ry="2" />
<text  x="579.00" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.10%)</title><rect x="38.8" y="1829" width="1.1" height="15.0" fill="rgb(241,37,53)" rx="2" ry="2" />
<text  x="41.76" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (12 samples, 0.20%)</title><rect x="37.8" y="2005" width="2.3" height="15.0" fill="rgb(242,193,34)" rx="2" ry="2" />
<text  x="40.76" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1105.1" y="2037" width="0.2" height="15.0" fill="rgb(245,56,28)" rx="2" ry="2" />
<text  x="1108.12" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (110 samples, 1.85%)</title><rect x="261.3" y="1669" width="21.8" height="15.0" fill="rgb(249,76,9)" rx="2" ry="2" />
<text  x="264.27" y="1679.5" >n..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="575.8" y="1941" width="0.2" height="15.0" fill="rgb(230,8,18)" rx="2" ry="2" />
<text  x="578.81" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="482.0" y="1973" width="0.2" height="15.0" fill="rgb(226,180,51)" rx="2" ry="2" />
<text  x="485.00" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (2 samples, 0.03%)</title><rect x="187.9" y="1989" width="0.4" height="15.0" fill="rgb(218,229,23)" rx="2" ry="2" />
<text  x="190.89" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1083.7" y="1429" width="0.2" height="15.0" fill="rgb(231,169,36)" rx="2" ry="2" />
<text  x="1086.70" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.45%)</title><rect x="586.1" y="2021" width="5.4" height="15.0" fill="rgb(211,101,16)" rx="2" ry="2" />
<text  x="589.12" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="213.7" y="1701" width="0.2" height="15.0" fill="rgb(210,87,34)" rx="2" ry="2" />
<text  x="216.67" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (35 samples, 0.59%)</title><rect x="191.3" y="2021" width="6.9" height="15.0" fill="rgb(246,1,42)" rx="2" ry="2" />
<text  x="194.26" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="237.7" y="1845" width="0.2" height="15.0" fill="rgb(215,102,25)" rx="2" ry="2" />
<text  x="240.67" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="297.4" y="1797" width="0.4" height="15.0" fill="rgb(238,170,45)" rx="2" ry="2" />
<text  x="300.36" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="96.7" y="1829" width="0.2" height="15.0" fill="rgb(211,98,12)" rx="2" ry="2" />
<text  x="99.67" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="449.7" y="1989" width="0.2" height="15.0" fill="rgb(254,82,12)" rx="2" ry="2" />
<text  x="452.67" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1781" width="45.2" height="15.0" fill="rgb(213,117,29)" rx="2" ry="2" />
<text  x="53.85" y="1791.5" >[unk..</text>
</g>
<g >
<title>[libjemalloc.so.1] (98 samples, 1.65%)</title><rect x="20.7" y="2053" width="19.4" height="15.0" fill="rgb(253,107,46)" rx="2" ry="2" />
<text  x="23.71" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="598.8" y="2037" width="0.4" height="15.0" fill="rgb(223,128,50)" rx="2" ry="2" />
<text  x="601.81" y="2047.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="230.5" y="1893" width="0.2" height="15.0" fill="rgb(249,86,32)" rx="2" ry="2" />
<text  x="233.53" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1144.0" y="2005" width="0.2" height="15.0" fill="rgb(230,146,18)" rx="2" ry="2" />
<text  x="1146.99" y="2015.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.03%)</title><rect x="312.0" y="1925" width="0.4" height="15.0" fill="rgb(224,125,50)" rx="2" ry="2" />
<text  x="315.04" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="258.3" y="1733" width="0.2" height="15.0" fill="rgb(246,159,4)" rx="2" ry="2" />
<text  x="261.30" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="855.8" y="1957" width="0.2" height="15.0" fill="rgb(227,227,3)" rx="2" ry="2" />
<text  x="858.83" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="1161.6" y="2053" width="0.2" height="15.0" fill="rgb(245,188,3)" rx="2" ry="2" />
<text  x="1164.64" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (17 samples, 0.29%)</title><rect x="173.0" y="1941" width="3.4" height="15.0" fill="rgb(243,73,21)" rx="2" ry="2" />
<text  x="176.02" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="202.4" y="1925" width="0.2" height="15.0" fill="rgb(219,49,53)" rx="2" ry="2" />
<text  x="205.37" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1015.5" y="1925" width="0.2" height="15.0" fill="rgb(218,120,30)" rx="2" ry="2" />
<text  x="1018.48" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="293" width="45.0" height="15.0" fill="rgb(211,208,34)" rx="2" ry="2" />
<text  x="53.85" y="303.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="198.8" y="1941" width="1.4" height="15.0" fill="rgb(232,173,30)" rx="2" ry="2" />
<text  x="201.80" y="1951.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="279.3" y="1365" width="0.2" height="15.0" fill="rgb(230,80,41)" rx="2" ry="2" />
<text  x="282.32" y="1375.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="261.7" y="1397" width="0.2" height="15.0" fill="rgb(216,110,21)" rx="2" ry="2" />
<text  x="264.67" y="1407.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (7 samples, 0.12%)</title><rect x="296.4" y="1909" width="1.4" height="15.0" fill="rgb(243,125,2)" rx="2" ry="2" />
<text  x="299.37" y="1919.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (18 samples, 0.30%)</title><rect x="933.2" y="1925" width="3.5" height="15.0" fill="rgb(229,86,32)" rx="2" ry="2" />
<text  x="936.18" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="551.4" y="1973" width="0.4" height="15.0" fill="rgb(215,189,45)" rx="2" ry="2" />
<text  x="554.41" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_active_ (10 samples, 0.17%)</title><rect x="1091.6" y="2053" width="2.0" height="15.0" fill="rgb(228,115,37)" rx="2" ry="2" />
<text  x="1094.63" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="241.0" y="1765" width="0.2" height="15.0" fill="rgb(205,12,6)" rx="2" ry="2" />
<text  x="244.04" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="634.7" y="2005" width="0.2" height="15.0" fill="rgb(205,164,8)" rx="2" ry="2" />
<text  x="637.71" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="237.9" y="1893" width="0.2" height="15.0" fill="rgb(242,64,47)" rx="2" ry="2" />
<text  x="240.87" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (160 samples, 2.69%)</title><rect x="1115.4" y="2037" width="31.8" height="15.0" fill="rgb(210,12,22)" rx="2" ry="2" />
<text  x="1118.43" y="2047.5" >fo..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="581.4" y="1797" width="0.2" height="15.0" fill="rgb(244,96,19)" rx="2" ry="2" />
<text  x="584.36" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="253.1" y="1717" width="0.2" height="15.0" fill="rgb(230,139,20)" rx="2" ry="2" />
<text  x="256.14" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (69 samples, 1.16%)</title><rect x="568.5" y="2005" width="13.7" height="15.0" fill="rgb(232,119,27)" rx="2" ry="2" />
<text  x="571.47" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="255.3" y="1621" width="0.2" height="15.0" fill="rgb(254,123,36)" rx="2" ry="2" />
<text  x="258.32" y="1631.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1103.9" y="1989" width="0.2" height="15.0" fill="rgb(210,20,32)" rx="2" ry="2" />
<text  x="1106.93" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="253.1" y="1749" width="0.2" height="15.0" fill="rgb(235,144,23)" rx="2" ry="2" />
<text  x="256.14" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="174.8" y="1893" width="0.2" height="15.0" fill="rgb(235,152,28)" rx="2" ry="2" />
<text  x="177.80" y="1903.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="301.1" y="1781" width="0.2" height="15.0" fill="rgb(219,165,24)" rx="2" ry="2" />
<text  x="304.13" y="1791.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="579.6" y="1653" width="0.2" height="15.0" fill="rgb(217,100,21)" rx="2" ry="2" />
<text  x="582.57" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="338.4" y="1941" width="0.2" height="15.0" fill="rgb(250,168,10)" rx="2" ry="2" />
<text  x="341.42" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1159.9" y="1925" width="0.2" height="15.0" fill="rgb(215,73,49)" rx="2" ry="2" />
<text  x="1162.86" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="394.7" y="2021" width="0.6" height="15.0" fill="rgb(236,108,53)" rx="2" ry="2" />
<text  x="397.74" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="965" width="45.2" height="15.0" fill="rgb(242,109,15)" rx="2" ry="2" />
<text  x="53.85" y="975.5" >[unk..</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="578.0" y="1749" width="0.2" height="15.0" fill="rgb(221,164,19)" rx="2" ry="2" />
<text  x="580.99" y="1759.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (19 samples, 0.32%)</title><rect x="948.6" y="1893" width="3.8" height="15.0" fill="rgb(254,205,35)" rx="2" ry="2" />
<text  x="951.65" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="69.9" y="37" width="0.2" height="15.0" fill="rgb(223,76,19)" rx="2" ry="2" />
<text  x="72.89" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="301.9" y="1893" width="0.2" height="15.0" fill="rgb(222,11,14)" rx="2" ry="2" />
<text  x="304.93" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="581.4" y="1877" width="0.2" height="15.0" fill="rgb(212,153,36)" rx="2" ry="2" />
<text  x="584.36" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1973" width="45.2" height="15.0" fill="rgb(245,116,30)" rx="2" ry="2" />
<text  x="53.85" y="1983.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="190.7" y="2005" width="0.2" height="15.0" fill="rgb(205,111,39)" rx="2" ry="2" />
<text  x="193.67" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1429" width="45.2" height="15.0" fill="rgb(215,216,34)" rx="2" ry="2" />
<text  x="53.85" y="1439.5" >[unk..</text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="402.5" y="2021" width="0.6" height="15.0" fill="rgb(206,127,20)" rx="2" ry="2" />
<text  x="405.47" y="2031.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1082.9" y="1829" width="0.2" height="15.0" fill="rgb(238,155,48)" rx="2" ry="2" />
<text  x="1085.91" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1159.9" y="1781" width="0.2" height="15.0" fill="rgb(232,35,26)" rx="2" ry="2" />
<text  x="1162.86" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (28 samples, 0.47%)</title><rect x="931.8" y="1973" width="5.5" height="15.0" fill="rgb(235,176,20)" rx="2" ry="2" />
<text  x="934.79" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="250.2" y="1797" width="0.2" height="15.0" fill="rgb(208,181,38)" rx="2" ry="2" />
<text  x="253.16" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="882.8" y="1989" width="1.0" height="15.0" fill="rgb(243,25,44)" rx="2" ry="2" />
<text  x="885.80" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="578.2" y="1925" width="0.2" height="15.0" fill="rgb(230,78,15)" rx="2" ry="2" />
<text  x="581.18" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1150.5" y="1989" width="0.2" height="15.0" fill="rgb(223,200,18)" rx="2" ry="2" />
<text  x="1153.53" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="402.5" y="1941" width="0.6" height="15.0" fill="rgb(249,144,39)" rx="2" ry="2" />
<text  x="405.47" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="244.2" y="1733" width="0.2" height="15.0" fill="rgb(228,25,48)" rx="2" ry="2" />
<text  x="247.22" y="1743.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="965.5" y="1909" width="0.6" height="15.0" fill="rgb(241,131,41)" rx="2" ry="2" />
<text  x="968.50" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="930.4" y="1957" width="0.4" height="15.0" fill="rgb(205,67,52)" rx="2" ry="2" />
<text  x="933.40" y="1967.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="318.6" y="1989" width="0.2" height="15.0" fill="rgb(214,169,17)" rx="2" ry="2" />
<text  x="321.58" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="290.2" y="1765" width="0.6" height="15.0" fill="rgb(219,207,42)" rx="2" ry="2" />
<text  x="293.23" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (15 samples, 0.25%)</title><rect x="958.6" y="1893" width="2.9" height="15.0" fill="rgb(249,172,21)" rx="2" ry="2" />
<text  x="961.56" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="582.0" y="1893" width="0.2" height="15.0" fill="rgb(230,85,36)" rx="2" ry="2" />
<text  x="584.95" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 4.02%)</title><rect x="521.1" y="2005" width="47.4" height="15.0" fill="rgb(215,83,17)" rx="2" ry="2" />
<text  x="524.07" y="2015.5" >[unk..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="202.4" y="1893" width="0.2" height="15.0" fill="rgb(217,87,38)" rx="2" ry="2" />
<text  x="205.37" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1072.4" y="1733" width="0.2" height="15.0" fill="rgb(247,146,54)" rx="2" ry="2" />
<text  x="1075.40" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="798.7" y="1877" width="0.4" height="15.0" fill="rgb(253,227,34)" rx="2" ry="2" />
<text  x="801.72" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="168.7" y="1957" width="0.7" height="15.0" fill="rgb(247,93,15)" rx="2" ry="2" />
<text  x="171.66" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (19 samples, 0.32%)</title><rect x="1177.9" y="2037" width="3.8" height="15.0" fill="rgb(238,31,53)" rx="2" ry="2" />
<text  x="1180.90" y="2047.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="654.7" y="1973" width="0.2" height="15.0" fill="rgb(228,24,32)" rx="2" ry="2" />
<text  x="657.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="74.1" y="37" width="0.9" height="15.0" fill="rgb(246,93,33)" rx="2" ry="2" />
<text  x="77.06" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="244.2" y="1701" width="0.2" height="15.0" fill="rgb(249,5,2)" rx="2" ry="2" />
<text  x="247.22" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="373.1" y="1893" width="0.2" height="15.0" fill="rgb(254,163,17)" rx="2" ry="2" />
<text  x="376.12" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="182.7" y="2005" width="0.2" height="15.0" fill="rgb(243,107,25)" rx="2" ry="2" />
<text  x="185.74" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="701.7" y="1861" width="0.2" height="15.0" fill="rgb(250,10,16)" rx="2" ry="2" />
<text  x="704.74" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="250.2" y="1845" width="0.2" height="15.0" fill="rgb(216,208,49)" rx="2" ry="2" />
<text  x="253.16" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="301.9" y="1813" width="0.2" height="15.0" fill="rgb(206,78,43)" rx="2" ry="2" />
<text  x="304.93" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="1104.5" y="2053" width="0.4" height="15.0" fill="rgb(206,122,2)" rx="2" ry="2" />
<text  x="1107.52" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="579.6" y="1701" width="0.2" height="15.0" fill="rgb(222,182,10)" rx="2" ry="2" />
<text  x="582.57" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1105.1" y="1989" width="0.2" height="15.0" fill="rgb(249,18,26)" rx="2" ry="2" />
<text  x="1108.12" y="1999.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="312.2" y="1797" width="0.2" height="15.0" fill="rgb(247,149,3)" rx="2" ry="2" />
<text  x="315.24" y="1807.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="258.3" y="1509" width="0.2" height="15.0" fill="rgb(235,229,32)" rx="2" ry="2" />
<text  x="261.30" y="1519.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="39.9" y="1813" width="0.2" height="15.0" fill="rgb(233,156,45)" rx="2" ry="2" />
<text  x="42.95" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="798.7" y="1941" width="0.4" height="15.0" fill="rgb(242,46,47)" rx="2" ry="2" />
<text  x="801.72" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="379.9" y="1989" width="0.2" height="15.0" fill="rgb(236,221,39)" rx="2" ry="2" />
<text  x="382.87" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="959.9" y="1877" width="0.4" height="15.0" fill="rgb(219,68,48)" rx="2" ry="2" />
<text  x="962.95" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="576.4" y="1941" width="0.2" height="15.0" fill="rgb(205,57,38)" rx="2" ry="2" />
<text  x="579.40" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="543.7" y="1957" width="0.2" height="15.0" fill="rgb(248,148,25)" rx="2" ry="2" />
<text  x="546.68" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="213.7" y="1989" width="0.2" height="15.0" fill="rgb(243,123,29)" rx="2" ry="2" />
<text  x="216.67" y="1999.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="725.5" y="1925" width="0.2" height="15.0" fill="rgb(234,108,42)" rx="2" ry="2" />
<text  x="728.54" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="294.6" y="1813" width="0.4" height="15.0" fill="rgb(237,82,43)" rx="2" ry="2" />
<text  x="297.59" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (1 samples, 0.02%)</title><rect x="378.5" y="2005" width="0.2" height="15.0" fill="rgb(237,34,44)" rx="2" ry="2" />
<text  x="381.48" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="356.1" y="1957" width="0.2" height="15.0" fill="rgb(233,109,8)" rx="2" ry="2" />
<text  x="359.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="604.0" y="1973" width="0.6" height="15.0" fill="rgb(250,195,35)" rx="2" ry="2" />
<text  x="606.97" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="479.0" y="1925" width="0.4" height="15.0" fill="rgb(215,65,46)" rx="2" ry="2" />
<text  x="482.03" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="577.0" y="1941" width="0.2" height="15.0" fill="rgb(233,183,17)" rx="2" ry="2" />
<text  x="579.99" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="306.7" y="1989" width="0.2" height="15.0" fill="rgb(230,23,15)" rx="2" ry="2" />
<text  x="309.69" y="1999.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="39.2" y="1765" width="0.2" height="15.0" fill="rgb(237,192,38)" rx="2" ry="2" />
<text  x="42.15" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="181.9" y="1813" width="0.2" height="15.0" fill="rgb(223,68,44)" rx="2" ry="2" />
<text  x="184.94" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="213.7" y="2005" width="0.2" height="15.0" fill="rgb(211,136,10)" rx="2" ry="2" />
<text  x="216.67" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (5 samples, 0.08%)</title><rect x="734.5" y="1941" width="1.0" height="15.0" fill="rgb(252,172,42)" rx="2" ry="2" />
<text  x="737.46" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="200.6" y="1781" width="0.2" height="15.0" fill="rgb(213,49,0)" rx="2" ry="2" />
<text  x="203.58" y="1791.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.6" y="1925" width="0.8" height="15.0" fill="rgb(220,95,36)" rx="2" ry="2" />
<text  x="14.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.21%)</title><rect x="857.0" y="2021" width="14.3" height="15.0" fill="rgb(219,112,11)" rx="2" ry="2" />
<text  x="860.02" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1145.6" y="1861" width="0.2" height="15.0" fill="rgb(238,158,29)" rx="2" ry="2" />
<text  x="1148.58" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="393.0" y="2005" width="0.2" height="15.0" fill="rgb(217,148,43)" rx="2" ry="2" />
<text  x="395.95" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="261.7" y="1413" width="0.2" height="15.0" fill="rgb(230,52,8)" rx="2" ry="2" />
<text  x="264.67" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1159.9" y="1941" width="0.2" height="15.0" fill="rgb(235,225,42)" rx="2" ry="2" />
<text  x="1162.86" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (2 samples, 0.03%)</title><rect x="10.0" y="2037" width="0.4" height="15.0" fill="rgb(226,200,2)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (1 samples, 0.02%)</title><rect x="178.8" y="2005" width="0.2" height="15.0" fill="rgb(247,17,45)" rx="2" ry="2" />
<text  x="181.77" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (36 samples, 0.61%)</title><rect x="711.3" y="1877" width="7.1" height="15.0" fill="rgb(238,176,21)" rx="2" ry="2" />
<text  x="714.26" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="75.4" y="37" width="0.6" height="15.0" fill="rgb(218,208,24)" rx="2" ry="2" />
<text  x="78.45" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="202.4" y="1861" width="0.2" height="15.0" fill="rgb(224,31,34)" rx="2" ry="2" />
<text  x="205.37" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (2 samples, 0.03%)</title><rect x="520.3" y="2037" width="0.4" height="15.0" fill="rgb(215,40,24)" rx="2" ry="2" />
<text  x="523.28" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (11 samples, 0.18%)</title><rect x="370.3" y="1861" width="2.2" height="15.0" fill="rgb(230,215,45)" rx="2" ry="2" />
<text  x="373.35" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="241.0" y="1781" width="0.2" height="15.0" fill="rgb(206,9,36)" rx="2" ry="2" />
<text  x="244.04" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="96.7" y="1941" width="0.2" height="15.0" fill="rgb(227,152,13)" rx="2" ry="2" />
<text  x="99.67" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (8 samples, 0.13%)</title><rect x="331.7" y="1973" width="1.6" height="15.0" fill="rgb(243,215,14)" rx="2" ry="2" />
<text  x="334.67" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="1173.5" y="2053" width="0.2" height="15.0" fill="rgb(226,54,23)" rx="2" ry="2" />
<text  x="1176.54" y="2063.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="583.7" y="1701" width="0.2" height="15.0" fill="rgb(228,223,45)" rx="2" ry="2" />
<text  x="586.74" y="1711.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(251,210,35)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="865.9" y="2005" width="0.2" height="15.0" fill="rgb(254,107,48)" rx="2" ry="2" />
<text  x="868.95" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="549.4" y="1973" width="0.2" height="15.0" fill="rgb(240,6,54)" rx="2" ry="2" />
<text  x="552.43" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="159.5" y="1957" width="1.0" height="15.0" fill="rgb(227,148,4)" rx="2" ry="2" />
<text  x="162.53" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (3 samples, 0.05%)</title><rect x="1083.5" y="1861" width="0.6" height="15.0" fill="rgb(240,8,29)" rx="2" ry="2" />
<text  x="1086.50" y="1871.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="297.6" y="1669" width="0.2" height="15.0" fill="rgb(216,158,1)" rx="2" ry="2" />
<text  x="300.56" y="1679.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="303.1" y="1845" width="0.2" height="15.0" fill="rgb(218,225,27)" rx="2" ry="2" />
<text  x="306.12" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="393.2" y="2005" width="0.2" height="15.0" fill="rgb(229,194,0)" rx="2" ry="2" />
<text  x="396.15" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1059.7" y="1669" width="0.4" height="15.0" fill="rgb(215,24,28)" rx="2" ry="2" />
<text  x="1062.70" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="577.8" y="1829" width="0.4" height="15.0" fill="rgb(247,100,26)" rx="2" ry="2" />
<text  x="580.79" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1131.1" y="1781" width="0.2" height="15.0" fill="rgb(223,215,30)" rx="2" ry="2" />
<text  x="1134.10" y="1791.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="577.4" y="1653" width="0.2" height="15.0" fill="rgb(219,4,23)" rx="2" ry="2" />
<text  x="580.39" y="1663.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="18.5" y="1957" width="0.2" height="15.0" fill="rgb(240,39,37)" rx="2" ry="2" />
<text  x="21.53" y="1967.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="226.0" y="1925" width="0.2" height="15.0" fill="rgb(232,77,12)" rx="2" ry="2" />
<text  x="228.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1045" width="45.2" height="15.0" fill="rgb(239,80,0)" rx="2" ry="2" />
<text  x="53.85" y="1055.5" >[unk..</text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="1102.3" y="1973" width="0.2" height="15.0" fill="rgb(232,207,13)" rx="2" ry="2" />
<text  x="1105.34" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1147.2" y="1989" width="0.2" height="15.0" fill="rgb(254,24,26)" rx="2" ry="2" />
<text  x="1150.16" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (9 samples, 0.15%)</title><rect x="67.3" y="37" width="1.8" height="15.0" fill="rgb(225,157,18)" rx="2" ry="2" />
<text  x="70.31" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1093.2" y="2037" width="0.4" height="15.0" fill="rgb(226,125,52)" rx="2" ry="2" />
<text  x="1096.22" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="298.2" y="1925" width="0.2" height="15.0" fill="rgb(218,17,6)" rx="2" ry="2" />
<text  x="301.16" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (142 samples, 2.39%)</title><rect x="937.9" y="1925" width="28.2" height="15.0" fill="rgb(248,30,44)" rx="2" ry="2" />
<text  x="940.94" y="1935.5" >f..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="471.1" y="1909" width="0.2" height="15.0" fill="rgb(241,49,14)" rx="2" ry="2" />
<text  x="474.09" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="172.4" y="1925" width="0.2" height="15.0" fill="rgb(206,55,25)" rx="2" ry="2" />
<text  x="175.42" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="581.8" y="1781" width="0.2" height="15.0" fill="rgb(240,202,52)" rx="2" ry="2" />
<text  x="584.75" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="295.6" y="1829" width="0.2" height="15.0" fill="rgb(253,171,44)" rx="2" ry="2" />
<text  x="298.58" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="324.5" y="1989" width="0.2" height="15.0" fill="rgb(243,120,13)" rx="2" ry="2" />
<text  x="327.53" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="294.8" y="1653" width="0.2" height="15.0" fill="rgb(220,77,17)" rx="2" ry="2" />
<text  x="297.79" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="190.7" y="1973" width="0.2" height="15.0" fill="rgb(216,115,8)" rx="2" ry="2" />
<text  x="193.67" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="213.7" y="1749" width="0.2" height="15.0" fill="rgb(208,203,51)" rx="2" ry="2" />
<text  x="216.67" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1093.2" y="2021" width="0.4" height="15.0" fill="rgb(221,160,34)" rx="2" ry="2" />
<text  x="1096.22" y="2031.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="1037.5" y="1861" width="0.4" height="15.0" fill="rgb(225,59,39)" rx="2" ry="2" />
<text  x="1040.49" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (7 samples, 0.12%)</title><rect x="38.8" y="1909" width="1.3" height="15.0" fill="rgb(222,104,36)" rx="2" ry="2" />
<text  x="41.76" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (81 samples, 1.36%)</title><rect x="463.4" y="1957" width="16.0" height="15.0" fill="rgb(226,56,14)" rx="2" ry="2" />
<text  x="466.36" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="580.0" y="1861" width="0.2" height="15.0" fill="rgb(217,139,28)" rx="2" ry="2" />
<text  x="582.97" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (2 samples, 0.03%)</title><rect x="365.0" y="2021" width="0.4" height="15.0" fill="rgb(254,156,14)" rx="2" ry="2" />
<text  x="367.99" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1072.4" y="1797" width="0.2" height="15.0" fill="rgb(205,206,49)" rx="2" ry="2" />
<text  x="1075.40" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="357.7" y="1957" width="0.4" height="15.0" fill="rgb(222,49,7)" rx="2" ry="2" />
<text  x="360.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1143.8" y="1765" width="0.2" height="15.0" fill="rgb(228,111,24)" rx="2" ry="2" />
<text  x="1146.79" y="1775.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1059.5" y="1749" width="0.2" height="15.0" fill="rgb(254,42,26)" rx="2" ry="2" />
<text  x="1062.51" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="95.9" y="325" width="0.2" height="15.0" fill="rgb(207,131,20)" rx="2" ry="2" />
<text  x="98.87" y="335.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="375.9" y="2037" width="0.4" height="15.0" fill="rgb(242,53,29)" rx="2" ry="2" />
<text  x="378.90" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="254.5" y="1797" width="0.2" height="15.0" fill="rgb(248,223,6)" rx="2" ry="2" />
<text  x="257.53" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="300.9" y="1877" width="0.8" height="15.0" fill="rgb(225,109,28)" rx="2" ry="2" />
<text  x="303.93" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="736.8" y="1957" width="0.2" height="15.0" fill="rgb(206,218,2)" rx="2" ry="2" />
<text  x="739.84" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="309.1" y="1893" width="0.2" height="15.0" fill="rgb(209,216,29)" rx="2" ry="2" />
<text  x="312.07" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1102.5" y="2005" width="0.4" height="15.0" fill="rgb(239,168,29)" rx="2" ry="2" />
<text  x="1105.54" y="2015.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="1187.8" y="1861" width="0.8" height="15.0" fill="rgb(209,202,31)" rx="2" ry="2" />
<text  x="1190.82" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (34 samples, 0.57%)</title><rect x="533.0" y="1989" width="6.7" height="15.0" fill="rgb(228,97,54)" rx="2" ry="2" />
<text  x="535.97" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="95.5" y="149" width="0.2" height="15.0" fill="rgb(207,53,23)" rx="2" ry="2" />
<text  x="98.48" y="159.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="816.0" y="1973" width="0.8" height="15.0" fill="rgb(216,104,31)" rx="2" ry="2" />
<text  x="818.97" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="213.7" y="1733" width="0.2" height="15.0" fill="rgb(218,80,36)" rx="2" ry="2" />
<text  x="216.67" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="373.7" y="1893" width="0.2" height="15.0" fill="rgb(235,60,1)" rx="2" ry="2" />
<text  x="376.72" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="477.6" y="1941" width="0.2" height="15.0" fill="rgb(245,13,47)" rx="2" ry="2" />
<text  x="480.64" y="1951.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="634.5" y="2005" width="0.2" height="15.0" fill="rgb(211,155,41)" rx="2" ry="2" />
<text  x="637.51" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="18.1" y="1941" width="0.4" height="15.0" fill="rgb(209,227,38)" rx="2" ry="2" />
<text  x="21.13" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="311.2" y="1813" width="0.6" height="15.0" fill="rgb(205,221,46)" rx="2" ry="2" />
<text  x="314.25" y="1823.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="543.5" y="1701" width="0.2" height="15.0" fill="rgb(210,122,32)" rx="2" ry="2" />
<text  x="546.48" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1095.4" y="1781" width="0.2" height="15.0" fill="rgb(249,105,24)" rx="2" ry="2" />
<text  x="1098.40" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1317" width="45.2" height="15.0" fill="rgb(227,76,31)" rx="2" ry="2" />
<text  x="53.85" y="1327.5" >[unk..</text>
</g>
<g >
<title>std::swap&lt;void  (3 samples, 0.05%)</title><rect x="735.8" y="1941" width="0.6" height="15.0" fill="rgb(240,38,41)" rx="2" ry="2" />
<text  x="738.85" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="579.4" y="1781" width="0.4" height="15.0" fill="rgb(215,24,18)" rx="2" ry="2" />
<text  x="582.37" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="292.8" y="1829" width="0.2" height="15.0" fill="rgb(233,19,16)" rx="2" ry="2" />
<text  x="295.80" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="96.7" y="1765" width="0.2" height="15.0" fill="rgb(248,146,14)" rx="2" ry="2" />
<text  x="99.67" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="623.8" y="1989" width="0.8" height="15.0" fill="rgb(244,81,30)" rx="2" ry="2" />
<text  x="626.80" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="966.3" y="1925" width="0.2" height="15.0" fill="rgb(210,102,16)" rx="2" ry="2" />
<text  x="969.30" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;&amp;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;&amp;, char const  (1 samples, 0.02%)</title><rect x="313.2" y="2037" width="0.2" height="15.0" fill="rgb(210,139,16)" rx="2" ry="2" />
<text  x="316.23" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1093.4" y="1941" width="0.2" height="15.0" fill="rgb(219,39,10)" rx="2" ry="2" />
<text  x="1096.42" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="854.2" y="2005" width="0.2" height="15.0" fill="rgb(246,67,10)" rx="2" ry="2" />
<text  x="857.25" y="2015.5" ></text>
</g>
<g >
<title>tcp_recvmsg (313 samples, 5.26%)</title><rect x="1024.8" y="1941" width="62.1" height="15.0" fill="rgb(250,205,28)" rx="2" ry="2" />
<text  x="1027.80" y="1951.5" >tcp_re..</text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="209.1" y="1989" width="0.4" height="15.0" fill="rgb(207,186,24)" rx="2" ry="2" />
<text  x="212.11" y="1999.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="581.8" y="1669" width="0.2" height="15.0" fill="rgb(218,183,28)" rx="2" ry="2" />
<text  x="584.75" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="310.3" y="1701" width="0.2" height="15.0" fill="rgb(249,145,27)" rx="2" ry="2" />
<text  x="313.26" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="258.3" y="1621" width="0.2" height="15.0" fill="rgb(231,200,40)" rx="2" ry="2" />
<text  x="261.30" y="1631.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="605.2" y="1957" width="0.2" height="15.0" fill="rgb(213,24,20)" rx="2" ry="2" />
<text  x="608.16" y="1967.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="291.4" y="1765" width="0.2" height="15.0" fill="rgb(223,70,37)" rx="2" ry="2" />
<text  x="294.42" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (6 samples, 0.10%)</title><rect x="261.5" y="1477" width="1.2" height="15.0" fill="rgb(223,93,1)" rx="2" ry="2" />
<text  x="264.47" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (13 samples, 0.22%)</title><rect x="1084.1" y="1925" width="2.6" height="15.0" fill="rgb(213,16,3)" rx="2" ry="2" />
<text  x="1087.10" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="473.9" y="1925" width="0.2" height="15.0" fill="rgb(220,130,29)" rx="2" ry="2" />
<text  x="476.87" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="549.4" y="1925" width="0.2" height="15.0" fill="rgb(244,219,36)" rx="2" ry="2" />
<text  x="552.43" y="1935.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="261.9" y="1365" width="0.2" height="15.0" fill="rgb(223,93,16)" rx="2" ry="2" />
<text  x="264.87" y="1375.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1083.7" y="1589" width="0.2" height="15.0" fill="rgb(235,227,29)" rx="2" ry="2" />
<text  x="1086.70" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 5.38%)</title><rect x="521.1" y="2021" width="63.4" height="15.0" fill="rgb(216,212,26)" rx="2" ry="2" />
<text  x="524.07" y="2031.5" >[unkno..</text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (69 samples, 1.16%)</title><rect x="137.9" y="1941" width="13.7" height="15.0" fill="rgb(236,208,0)" rx="2" ry="2" />
<text  x="140.92" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1143.8" y="1925" width="0.2" height="15.0" fill="rgb(246,84,39)" rx="2" ry="2" />
<text  x="1146.79" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="595.4" y="1989" width="2.6" height="15.0" fill="rgb(215,150,47)" rx="2" ry="2" />
<text  x="598.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="603.6" y="1973" width="0.4" height="15.0" fill="rgb(212,155,39)" rx="2" ry="2" />
<text  x="606.57" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="256.1" y="1813" width="0.2" height="15.0" fill="rgb(228,82,13)" rx="2" ry="2" />
<text  x="259.11" y="1823.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="301.9" y="1973" width="0.2" height="15.0" fill="rgb(250,30,2)" rx="2" ry="2" />
<text  x="304.93" y="1983.5" ></text>
</g>
<g >
<title>___sys_sendmsg (333 samples, 5.60%)</title><rect x="232.1" y="1957" width="66.1" height="15.0" fill="rgb(251,129,1)" rx="2" ry="2" />
<text  x="235.12" y="1967.5" >___sys_..</text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="240.8" y="1893" width="0.2" height="15.0" fill="rgb(235,86,47)" rx="2" ry="2" />
<text  x="243.84" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="241.0" y="1685" width="0.2" height="15.0" fill="rgb(233,134,3)" rx="2" ry="2" />
<text  x="244.04" y="1695.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="296.4" y="1893" width="1.4" height="15.0" fill="rgb(205,157,32)" rx="2" ry="2" />
<text  x="299.37" y="1903.5" ></text>
</g>
<g >
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="295.0" y="1845" width="0.8" height="15.0" fill="rgb(210,130,27)" rx="2" ry="2" />
<text  x="297.98" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="258.3" y="1605" width="0.2" height="15.0" fill="rgb(252,174,33)" rx="2" ry="2" />
<text  x="261.30" y="1615.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="18.5" y="1941" width="0.2" height="15.0" fill="rgb(229,78,34)" rx="2" ry="2" />
<text  x="21.53" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (44 samples, 0.74%)</title><rect x="365.8" y="2037" width="8.7" height="15.0" fill="rgb(228,10,16)" rx="2" ry="2" />
<text  x="368.78" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (6 samples, 0.10%)</title><rect x="403.5" y="2037" width="1.2" height="15.0" fill="rgb(236,198,17)" rx="2" ry="2" />
<text  x="406.47" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (6 samples, 0.10%)</title><rect x="362.6" y="1941" width="1.2" height="15.0" fill="rgb(236,110,11)" rx="2" ry="2" />
<text  x="365.61" y="1951.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="213.7" y="1637" width="0.2" height="15.0" fill="rgb(251,179,37)" rx="2" ry="2" />
<text  x="216.67" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="172.6" y="1941" width="0.2" height="15.0" fill="rgb(243,145,24)" rx="2" ry="2" />
<text  x="175.62" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="551.8" y="1989" width="0.2" height="15.0" fill="rgb(225,120,31)" rx="2" ry="2" />
<text  x="554.81" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="96.7" y="1909" width="0.2" height="15.0" fill="rgb(216,64,3)" rx="2" ry="2" />
<text  x="99.67" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1103.7" y="2021" width="0.2" height="15.0" fill="rgb(209,13,5)" rx="2" ry="2" />
<text  x="1106.73" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="364.8" y="1973" width="0.2" height="15.0" fill="rgb(247,116,9)" rx="2" ry="2" />
<text  x="367.79" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="309.1" y="1765" width="0.2" height="15.0" fill="rgb(213,108,41)" rx="2" ry="2" />
<text  x="312.07" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="309.1" y="1861" width="0.2" height="15.0" fill="rgb(238,121,28)" rx="2" ry="2" />
<text  x="312.07" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="331.9" y="1957" width="0.4" height="15.0" fill="rgb(209,71,43)" rx="2" ry="2" />
<text  x="334.87" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="639.1" y="2005" width="2.7" height="15.0" fill="rgb(249,35,29)" rx="2" ry="2" />
<text  x="642.07" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="1071.2" y="1845" width="0.2" height="15.0" fill="rgb(227,84,15)" rx="2" ry="2" />
<text  x="1074.21" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="235.7" y="1685" width="0.2" height="15.0" fill="rgb(228,166,6)" rx="2" ry="2" />
<text  x="238.69" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="327.3" y="1957" width="0.6" height="15.0" fill="rgb(210,60,27)" rx="2" ry="2" />
<text  x="330.31" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="187.7" y="1957" width="0.2" height="15.0" fill="rgb(253,202,49)" rx="2" ry="2" />
<text  x="190.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="341" width="45.0" height="15.0" fill="rgb(250,151,36)" rx="2" ry="2" />
<text  x="53.85" y="351.5" >[unk..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="119.3" y="1973" width="1.0" height="15.0" fill="rgb(207,66,47)" rx="2" ry="2" />
<text  x="122.27" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1039.1" y="1877" width="0.2" height="15.0" fill="rgb(245,33,13)" rx="2" ry="2" />
<text  x="1042.08" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="95.1" y="37" width="0.4" height="15.0" fill="rgb(245,90,30)" rx="2" ry="2" />
<text  x="98.08" y="47.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1941" width="45.2" height="15.0" fill="rgb(247,196,41)" rx="2" ry="2" />
<text  x="53.85" y="1951.5" >[unk..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="636.1" y="2005" width="0.2" height="15.0" fill="rgb(251,79,43)" rx="2" ry="2" />
<text  x="639.09" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="172.4" y="1909" width="0.2" height="15.0" fill="rgb(249,199,52)" rx="2" ry="2" />
<text  x="175.42" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="581" width="45.2" height="15.0" fill="rgb(239,195,2)" rx="2" ry="2" />
<text  x="53.85" y="591.5" >[unk..</text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="402.7" y="1717" width="0.4" height="15.0" fill="rgb(214,186,18)" rx="2" ry="2" />
<text  x="405.67" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="18.9" y="1893" width="0.4" height="15.0" fill="rgb(239,208,48)" rx="2" ry="2" />
<text  x="21.92" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="295.4" y="1813" width="0.2" height="15.0" fill="rgb(223,27,9)" rx="2" ry="2" />
<text  x="298.38" y="1823.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (2 samples, 0.03%)</title><rect x="10.0" y="1941" width="0.4" height="15.0" fill="rgb(243,217,5)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="240.4" y="1893" width="0.4" height="15.0" fill="rgb(211,58,16)" rx="2" ry="2" />
<text  x="243.45" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="298.2" y="1877" width="0.2" height="15.0" fill="rgb(225,215,17)" rx="2" ry="2" />
<text  x="301.16" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="1144.8" y="2005" width="0.8" height="15.0" fill="rgb(224,129,41)" rx="2" ry="2" />
<text  x="1147.78" y="2015.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1145.6" y="1717" width="0.2" height="15.0" fill="rgb(230,52,17)" rx="2" ry="2" />
<text  x="1148.58" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="577.8" y="1765" width="0.4" height="15.0" fill="rgb(252,107,16)" rx="2" ry="2" />
<text  x="580.79" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.32%)</title><rect x="1013.5" y="2021" width="3.8" height="15.0" fill="rgb(214,0,37)" rx="2" ry="2" />
<text  x="1016.50" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (10 samples, 0.17%)</title><rect x="600.0" y="2037" width="2.0" height="15.0" fill="rgb(205,23,1)" rx="2" ry="2" />
<text  x="603.00" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="94.7" y="85" width="0.8" height="15.0" fill="rgb(229,57,54)" rx="2" ry="2" />
<text  x="97.68" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (12 samples, 0.20%)</title><rect x="431.8" y="2005" width="2.4" height="15.0" fill="rgb(230,196,23)" rx="2" ry="2" />
<text  x="434.83" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (227 samples, 3.82%)</title><rect x="50.9" y="373" width="45.0" height="15.0" fill="rgb(212,114,40)" rx="2" ry="2" />
<text  x="53.85" y="383.5" >[unk..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (10 samples, 0.17%)</title><rect x="342.2" y="1957" width="2.0" height="15.0" fill="rgb(231,209,25)" rx="2" ry="2" />
<text  x="345.18" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="172.2" y="1893" width="0.2" height="15.0" fill="rgb(236,24,31)" rx="2" ry="2" />
<text  x="175.23" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (23 samples, 0.39%)</title><rect x="368.2" y="1877" width="4.5" height="15.0" fill="rgb(252,40,40)" rx="2" ry="2" />
<text  x="371.16" y="1887.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="1130.1" y="1973" width="0.4" height="15.0" fill="rgb(211,116,26)" rx="2" ry="2" />
<text  x="1133.11" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="213.7" y="1797" width="0.2" height="15.0" fill="rgb(212,198,15)" rx="2" ry="2" />
<text  x="216.67" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (7 samples, 0.12%)</title><rect x="356.3" y="1957" width="1.4" height="15.0" fill="rgb(254,217,34)" rx="2" ry="2" />
<text  x="359.27" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="19.5" y="1957" width="0.2" height="15.0" fill="rgb(238,111,33)" rx="2" ry="2" />
<text  x="22.52" y="1967.5" ></text>
</g>
<g >
<title>tcp_grow_window.isra.24 (1 samples, 0.02%)</title><rect x="282.9" y="1477" width="0.2" height="15.0" fill="rgb(206,164,41)" rx="2" ry="2" />
<text  x="285.89" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="339.0" y="1941" width="0.4" height="15.0" fill="rgb(225,47,30)" rx="2" ry="2" />
<text  x="342.01" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="734.1" y="1941" width="0.2" height="15.0" fill="rgb(214,67,39)" rx="2" ry="2" />
<text  x="737.06" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (22 samples, 0.37%)</title><rect x="146.2" y="1925" width="4.4" height="15.0" fill="rgb(254,2,46)" rx="2" ry="2" />
<text  x="149.25" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="901" width="45.2" height="15.0" fill="rgb(247,135,1)" rx="2" ry="2" />
<text  x="53.85" y="911.5" >[unk..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="829.7" y="1989" width="1.1" height="15.0" fill="rgb(213,13,17)" rx="2" ry="2" />
<text  x="832.65" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="515.3" y="2005" width="0.4" height="15.0" fill="rgb(214,43,1)" rx="2" ry="2" />
<text  x="518.32" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (14 samples, 0.24%)</title><rect x="510.0" y="2021" width="2.7" height="15.0" fill="rgb(222,114,48)" rx="2" ry="2" />
<text  x="512.96" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="595.2" y="1989" width="0.2" height="15.0" fill="rgb(212,15,36)" rx="2" ry="2" />
<text  x="598.24" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="636.7" y="2037" width="0.8" height="15.0" fill="rgb(223,150,18)" rx="2" ry="2" />
<text  x="639.69" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="434.2" y="2005" width="0.6" height="15.0" fill="rgb(230,147,7)" rx="2" ry="2" />
<text  x="437.21" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="181.9" y="1797" width="0.2" height="15.0" fill="rgb(230,204,22)" rx="2" ry="2" />
<text  x="184.94" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1145.6" y="2005" width="0.2" height="15.0" fill="rgb(246,147,47)" rx="2" ry="2" />
<text  x="1148.58" y="2015.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="868.9" y="1973" width="0.2" height="15.0" fill="rgb(239,118,10)" rx="2" ry="2" />
<text  x="871.92" y="1983.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1083.7" y="1477" width="0.2" height="15.0" fill="rgb(227,62,5)" rx="2" ry="2" />
<text  x="1086.70" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="176.4" y="2005" width="0.4" height="15.0" fill="rgb(219,97,1)" rx="2" ry="2" />
<text  x="179.39" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="340.8" y="1925" width="0.8" height="15.0" fill="rgb(242,161,8)" rx="2" ry="2" />
<text  x="343.80" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="301.9" y="1781" width="0.2" height="15.0" fill="rgb(230,105,8)" rx="2" ry="2" />
<text  x="304.93" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="261.5" y="1445" width="0.2" height="15.0" fill="rgb(238,4,16)" rx="2" ry="2" />
<text  x="264.47" y="1455.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="94.7" y="53" width="0.4" height="15.0" fill="rgb(250,74,28)" rx="2" ry="2" />
<text  x="97.68" y="63.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="654.7" y="2005" width="0.2" height="15.0" fill="rgb(213,99,51)" rx="2" ry="2" />
<text  x="657.74" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="880.0" y="2021" width="0.2" height="15.0" fill="rgb(214,81,2)" rx="2" ry="2" />
<text  x="883.03" y="2031.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.20%)</title><rect x="1006.8" y="2037" width="2.3" height="15.0" fill="rgb(210,229,43)" rx="2" ry="2" />
<text  x="1009.75" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="443.5" y="1989" width="0.4" height="15.0" fill="rgb(208,133,23)" rx="2" ry="2" />
<text  x="446.53" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="949" width="45.2" height="15.0" fill="rgb(222,167,25)" rx="2" ry="2" />
<text  x="53.85" y="959.5" >[unk..</text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="167.3" y="1957" width="0.2" height="15.0" fill="rgb(243,214,6)" rx="2" ry="2" />
<text  x="170.27" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="589.9" y="1925" width="0.2" height="15.0" fill="rgb(233,44,29)" rx="2" ry="2" />
<text  x="592.89" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="235.7" y="1829" width="0.2" height="15.0" fill="rgb(252,19,48)" rx="2" ry="2" />
<text  x="238.69" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (12 samples, 0.20%)</title><rect x="911.6" y="1973" width="2.3" height="15.0" fill="rgb(249,143,3)" rx="2" ry="2" />
<text  x="914.56" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (6 samples, 0.10%)</title><rect x="15.6" y="1957" width="1.1" height="15.0" fill="rgb(226,139,2)" rx="2" ry="2" />
<text  x="18.55" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="882.4" y="2021" width="1.4" height="15.0" fill="rgb(208,126,41)" rx="2" ry="2" />
<text  x="885.41" y="2031.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1089.7" y="2037" width="0.1" height="15.0" fill="rgb(238,62,50)" rx="2" ry="2" />
<text  x="1092.65" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="576.2" y="1941" width="0.2" height="15.0" fill="rgb(242,55,36)" rx="2" ry="2" />
<text  x="579.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="1104.9" y="2053" width="0.4" height="15.0" fill="rgb(217,203,24)" rx="2" ry="2" />
<text  x="1107.92" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="583.7" y="1781" width="0.4" height="15.0" fill="rgb(251,214,17)" rx="2" ry="2" />
<text  x="586.74" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="181.9" y="1749" width="0.2" height="15.0" fill="rgb(216,96,27)" rx="2" ry="2" />
<text  x="184.94" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="240.4" y="1877" width="0.4" height="15.0" fill="rgb(250,100,37)" rx="2" ry="2" />
<text  x="243.45" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="661" width="45.2" height="15.0" fill="rgb(232,77,1)" rx="2" ry="2" />
<text  x="53.85" y="671.5" >[unk..</text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="402.5" y="1925" width="0.6" height="15.0" fill="rgb(217,153,47)" rx="2" ry="2" />
<text  x="405.47" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="193.4" y="1957" width="0.2" height="15.0" fill="rgb(236,225,47)" rx="2" ry="2" />
<text  x="196.45" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="174.8" y="1813" width="0.2" height="15.0" fill="rgb(232,82,13)" rx="2" ry="2" />
<text  x="177.80" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (4 samples, 0.07%)</title><rect x="366.4" y="1925" width="0.8" height="15.0" fill="rgb(229,70,31)" rx="2" ry="2" />
<text  x="369.38" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="576.8" y="1829" width="0.2" height="15.0" fill="rgb(244,59,19)" rx="2" ry="2" />
<text  x="579.80" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (44 samples, 0.74%)</title><rect x="365.8" y="1973" width="8.7" height="15.0" fill="rgb(250,38,15)" rx="2" ry="2" />
<text  x="368.78" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1147.2" y="1941" width="0.2" height="15.0" fill="rgb(206,177,33)" rx="2" ry="2" />
<text  x="1150.16" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1059.3" y="1717" width="0.2" height="15.0" fill="rgb(247,154,48)" rx="2" ry="2" />
<text  x="1062.31" y="1727.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.07%)</title><rect x="1088.3" y="2037" width="0.8" height="15.0" fill="rgb(246,33,13)" rx="2" ry="2" />
<text  x="1091.26" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="200.6" y="1845" width="0.2" height="15.0" fill="rgb(238,34,49)" rx="2" ry="2" />
<text  x="203.58" y="1855.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="1079.5" y="1893" width="1.0" height="15.0" fill="rgb(207,153,49)" rx="2" ry="2" />
<text  x="1082.54" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (14 samples, 0.24%)</title><rect x="355.3" y="1973" width="2.8" height="15.0" fill="rgb(215,165,11)" rx="2" ry="2" />
<text  x="358.27" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="895.7" y="2005" width="0.2" height="15.0" fill="rgb(247,136,43)" rx="2" ry="2" />
<text  x="898.69" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="580.6" y="1925" width="0.2" height="15.0" fill="rgb(253,172,15)" rx="2" ry="2" />
<text  x="583.56" y="1935.5" ></text>
</g>
<g >
<title>process_backlog (101 samples, 1.70%)</title><rect x="263.1" y="1653" width="20.0" height="15.0" fill="rgb(229,12,6)" rx="2" ry="2" />
<text  x="266.06" y="1663.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="39.5" y="1749" width="0.4" height="15.0" fill="rgb(217,153,48)" rx="2" ry="2" />
<text  x="42.55" y="1759.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="301.1" y="1733" width="0.2" height="15.0" fill="rgb(208,150,15)" rx="2" ry="2" />
<text  x="304.13" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (11 samples, 0.18%)</title><rect x="386.0" y="2005" width="2.2" height="15.0" fill="rgb(244,87,48)" rx="2" ry="2" />
<text  x="389.01" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="252.9" y="1685" width="0.2" height="15.0" fill="rgb(218,193,9)" rx="2" ry="2" />
<text  x="255.94" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (23 samples, 0.39%)</title><rect x="337.2" y="1973" width="4.6" height="15.0" fill="rgb(240,101,24)" rx="2" ry="2" />
<text  x="340.23" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="237.9" y="1925" width="0.4" height="15.0" fill="rgb(232,27,15)" rx="2" ry="2" />
<text  x="240.87" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="576.4" y="1909" width="0.2" height="15.0" fill="rgb(237,125,38)" rx="2" ry="2" />
<text  x="579.40" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1012.9" y="2037" width="0.2" height="15.0" fill="rgb(234,45,47)" rx="2" ry="2" />
<text  x="1015.90" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="882.2" y="2037" width="0.2" height="15.0" fill="rgb(247,130,47)" rx="2" ry="2" />
<text  x="885.21" y="2047.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="501.6" y="2005" width="0.2" height="15.0" fill="rgb(207,8,38)" rx="2" ry="2" />
<text  x="504.63" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="591.3" y="1989" width="0.2" height="15.0" fill="rgb(233,209,17)" rx="2" ry="2" />
<text  x="594.27" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1145.6" y="1829" width="0.2" height="15.0" fill="rgb(208,192,14)" rx="2" ry="2" />
<text  x="1148.58" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1059.7" y="1717" width="0.4" height="15.0" fill="rgb(235,128,35)" rx="2" ry="2" />
<text  x="1062.70" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="306.7" y="1973" width="0.2" height="15.0" fill="rgb(248,124,46)" rx="2" ry="2" />
<text  x="309.69" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="388.2" y="2005" width="4.8" height="15.0" fill="rgb(230,106,24)" rx="2" ry="2" />
<text  x="391.19" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_loss_probe (1 samples, 0.02%)</title><rect x="627.6" y="1829" width="0.2" height="15.0" fill="rgb(216,63,7)" rx="2" ry="2" />
<text  x="630.57" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (23 samples, 0.39%)</title><rect x="1099.8" y="2037" width="4.5" height="15.0" fill="rgb(220,148,13)" rx="2" ry="2" />
<text  x="1102.76" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (8 samples, 0.13%)</title><rect x="261.5" y="1589" width="1.6" height="15.0" fill="rgb(248,53,43)" rx="2" ry="2" />
<text  x="264.47" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (229 samples, 3.85%)</title><rect x="50.9" y="2005" width="45.4" height="15.0" fill="rgb(209,25,0)" rx="2" ry="2" />
<text  x="53.85" y="2015.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="591.5" y="2005" width="1.4" height="15.0" fill="rgb(219,167,21)" rx="2" ry="2" />
<text  x="594.47" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="302.9" y="2021" width="0.8" height="15.0" fill="rgb(240,132,27)" rx="2" ry="2" />
<text  x="305.92" y="2031.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (15 samples, 0.25%)</title><rect x="309.1" y="1925" width="2.9" height="15.0" fill="rgb(217,204,1)" rx="2" ry="2" />
<text  x="312.07" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(233,162,54)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="255.7" y="1829" width="0.2" height="15.0" fill="rgb(229,34,9)" rx="2" ry="2" />
<text  x="258.72" y="1839.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="12.6" y="1877" width="1.0" height="15.0" fill="rgb(213,149,27)" rx="2" ry="2" />
<text  x="15.58" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1145.6" y="1957" width="0.2" height="15.0" fill="rgb(219,217,36)" rx="2" ry="2" />
<text  x="1148.58" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="94.5" y="53" width="0.2" height="15.0" fill="rgb(250,99,49)" rx="2" ry="2" />
<text  x="97.48" y="63.5" ></text>
</g>
<g >
<title>sock_recvmsg (318 samples, 5.34%)</title><rect x="1024.4" y="1973" width="63.1" height="15.0" fill="rgb(246,109,37)" rx="2" ry="2" />
<text  x="1027.40" y="1983.5" >sock_r..</text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="54.0" y="37" width="0.2" height="15.0" fill="rgb(224,79,16)" rx="2" ry="2" />
<text  x="57.03" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (8 samples, 0.13%)</title><rect x="808.0" y="2005" width="1.6" height="15.0" fill="rgb(248,159,54)" rx="2" ry="2" />
<text  x="811.04" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="89.9" y="53" width="1.8" height="15.0" fill="rgb(215,161,48)" rx="2" ry="2" />
<text  x="92.92" y="63.5" ></text>
</g>
<g >
<title>kfree_skbmem (25 samples, 0.42%)</title><rect x="1033.1" y="1909" width="5.0" height="15.0" fill="rgb(205,9,35)" rx="2" ry="2" />
<text  x="1036.13" y="1919.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="170.8" y="1973" width="0.6" height="15.0" fill="rgb(247,183,49)" rx="2" ry="2" />
<text  x="173.84" y="1983.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="10.4" y="1973" width="0.8" height="15.0" fill="rgb(208,48,35)" rx="2" ry="2" />
<text  x="13.40" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (26 samples, 0.44%)</title><rect x="283.1" y="1717" width="5.1" height="15.0" fill="rgb(222,203,53)" rx="2" ry="2" />
<text  x="286.09" y="1727.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="577.4" y="1669" width="0.2" height="15.0" fill="rgb(228,216,23)" rx="2" ry="2" />
<text  x="580.39" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.18%)</title><rect x="195.0" y="1989" width="2.2" height="15.0" fill="rgb(228,44,41)" rx="2" ry="2" />
<text  x="198.03" y="1999.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="252.9" y="1573" width="0.2" height="15.0" fill="rgb(207,99,31)" rx="2" ry="2" />
<text  x="255.94" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="311.2" y="1861" width="0.6" height="15.0" fill="rgb(205,27,19)" rx="2" ry="2" />
<text  x="314.25" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="258.3" y="1637" width="0.2" height="15.0" fill="rgb(227,200,22)" rx="2" ry="2" />
<text  x="261.30" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="252.9" y="1637" width="0.2" height="15.0" fill="rgb(243,25,41)" rx="2" ry="2" />
<text  x="255.94" y="1647.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="39.9" y="1829" width="0.2" height="15.0" fill="rgb(238,196,21)" rx="2" ry="2" />
<text  x="42.95" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="290.6" y="1621" width="0.2" height="15.0" fill="rgb(205,79,47)" rx="2" ry="2" />
<text  x="293.62" y="1631.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="948.4" y="1893" width="0.2" height="15.0" fill="rgb(222,25,31)" rx="2" ry="2" />
<text  x="951.45" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (29 samples, 0.49%)</title><rect x="397.3" y="2037" width="5.8" height="15.0" fill="rgb(231,32,36)" rx="2" ry="2" />
<text  x="400.32" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="244.2" y="1749" width="0.2" height="15.0" fill="rgb(220,159,4)" rx="2" ry="2" />
<text  x="247.22" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="19.1" y="1877" width="0.2" height="15.0" fill="rgb(222,110,44)" rx="2" ry="2" />
<text  x="22.12" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="96.7" y="1861" width="0.2" height="15.0" fill="rgb(223,150,46)" rx="2" ry="2" />
<text  x="99.67" y="1871.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="543.7" y="1973" width="0.2" height="15.0" fill="rgb(224,31,16)" rx="2" ry="2" />
<text  x="546.68" y="1983.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="95.7" y="101" width="0.2" height="15.0" fill="rgb(209,189,43)" rx="2" ry="2" />
<text  x="98.67" y="111.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="684.1" y="1909" width="0.2" height="15.0" fill="rgb(213,124,33)" rx="2" ry="2" />
<text  x="687.09" y="1919.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (2 samples, 0.03%)</title><rect x="393.7" y="1957" width="0.4" height="15.0" fill="rgb(239,227,0)" rx="2" ry="2" />
<text  x="396.75" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (9 samples, 0.15%)</title><rect x="1148.9" y="2037" width="1.8" height="15.0" fill="rgb(230,111,38)" rx="2" ry="2" />
<text  x="1151.95" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1109" width="45.2" height="15.0" fill="rgb(205,225,6)" rx="2" ry="2" />
<text  x="53.85" y="1119.5" >[unk..</text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1086.7" y="1925" width="0.2" height="15.0" fill="rgb(250,124,9)" rx="2" ry="2" />
<text  x="1089.68" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1187.8" y="1877" width="0.8" height="15.0" fill="rgb(254,64,33)" rx="2" ry="2" />
<text  x="1190.82" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1,008 samples, 16.94%)</title><rect x="654.7" y="2021" width="199.9" height="15.0" fill="rgb(243,17,21)" rx="2" ry="2" />
<text  x="657.74" y="2031.5" >[unknown]</text>
</g>
<g >
<title>ixgbe_poll (8 samples, 0.13%)</title><rect x="261.5" y="1653" width="1.6" height="15.0" fill="rgb(254,44,22)" rx="2" ry="2" />
<text  x="264.47" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="388.0" y="1957" width="0.2" height="15.0" fill="rgb(228,73,18)" rx="2" ry="2" />
<text  x="391.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (44 samples, 0.74%)</title><rect x="376.5" y="2021" width="8.7" height="15.0" fill="rgb(222,159,43)" rx="2" ry="2" />
<text  x="379.49" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="252.9" y="1845" width="0.2" height="15.0" fill="rgb(250,44,48)" rx="2" ry="2" />
<text  x="255.94" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1733" width="45.2" height="15.0" fill="rgb(220,151,19)" rx="2" ry="2" />
<text  x="53.85" y="1743.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="1105.3" y="2053" width="0.6" height="15.0" fill="rgb(214,204,14)" rx="2" ry="2" />
<text  x="1108.32" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (20 samples, 0.34%)</title><rect x="480.8" y="1989" width="4.0" height="15.0" fill="rgb(241,14,30)" rx="2" ry="2" />
<text  x="483.81" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="604.6" y="1973" width="0.2" height="15.0" fill="rgb(227,173,10)" rx="2" ry="2" />
<text  x="607.56" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="394.7" y="2005" width="0.2" height="15.0" fill="rgb(218,125,7)" rx="2" ry="2" />
<text  x="397.74" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (10 samples, 0.17%)</title><rect x="1093.6" y="2053" width="2.0" height="15.0" fill="rgb(240,10,25)" rx="2" ry="2" />
<text  x="1096.62" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="173.4" y="1893" width="0.2" height="15.0" fill="rgb(232,64,7)" rx="2" ry="2" />
<text  x="176.42" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (21 samples, 0.35%)</title><rect x="172.2" y="2005" width="4.2" height="15.0" fill="rgb(239,56,28)" rx="2" ry="2" />
<text  x="175.23" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1143.8" y="1685" width="0.2" height="15.0" fill="rgb(214,179,10)" rx="2" ry="2" />
<text  x="1146.79" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="255.5" y="1845" width="0.6" height="15.0" fill="rgb(252,136,28)" rx="2" ry="2" />
<text  x="258.52" y="1855.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="567.1" y="1989" width="0.6" height="15.0" fill="rgb(223,201,49)" rx="2" ry="2" />
<text  x="570.08" y="1999.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="39.7" y="1685" width="0.2" height="15.0" fill="rgb(242,36,40)" rx="2" ry="2" />
<text  x="42.75" y="1695.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="322.2" y="1893" width="0.2" height="15.0" fill="rgb(251,30,3)" rx="2" ry="2" />
<text  x="325.15" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1084.9" y="1829" width="0.2" height="15.0" fill="rgb(242,111,52)" rx="2" ry="2" />
<text  x="1087.89" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="576.8" y="1845" width="0.2" height="15.0" fill="rgb(208,37,47)" rx="2" ry="2" />
<text  x="579.80" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="598.6" y="2037" width="0.2" height="15.0" fill="rgb(233,42,11)" rx="2" ry="2" />
<text  x="601.61" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1083.9" y="1733" width="0.2" height="15.0" fill="rgb(246,68,4)" rx="2" ry="2" />
<text  x="1086.90" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (4 samples, 0.07%)</title><rect x="183.3" y="2021" width="0.8" height="15.0" fill="rgb(250,141,22)" rx="2" ry="2" />
<text  x="186.33" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="169.8" y="1941" width="0.4" height="15.0" fill="rgb(213,28,3)" rx="2" ry="2" />
<text  x="172.85" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="95.9" y="245" width="0.2" height="15.0" fill="rgb(214,146,31)" rx="2" ry="2" />
<text  x="98.87" y="255.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1893" width="45.2" height="15.0" fill="rgb(208,25,51)" rx="2" ry="2" />
<text  x="53.85" y="1903.5" >[unk..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="798.9" y="1829" width="0.2" height="15.0" fill="rgb(240,100,48)" rx="2" ry="2" />
<text  x="801.91" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (3 samples, 0.05%)</title><rect x="641.8" y="2005" width="0.6" height="15.0" fill="rgb(235,141,42)" rx="2" ry="2" />
<text  x="644.85" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="199.8" y="1877" width="0.2" height="15.0" fill="rgb(254,62,38)" rx="2" ry="2" />
<text  x="202.79" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="543.5" y="1941" width="0.2" height="15.0" fill="rgb(225,32,13)" rx="2" ry="2" />
<text  x="546.48" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (16 samples, 0.27%)</title><rect x="360.6" y="1957" width="3.2" height="15.0" fill="rgb(242,191,18)" rx="2" ry="2" />
<text  x="363.63" y="1967.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (2 samples, 0.03%)</title><rect x="307.5" y="2037" width="0.4" height="15.0" fill="rgb(242,169,2)" rx="2" ry="2" />
<text  x="310.48" y="2047.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="226.0" y="1861" width="0.2" height="15.0" fill="rgb(228,138,46)" rx="2" ry="2" />
<text  x="228.97" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (5 samples, 0.08%)</title><rect x="332.3" y="1957" width="1.0" height="15.0" fill="rgb(243,196,38)" rx="2" ry="2" />
<text  x="335.27" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="627.6" y="1861" width="0.2" height="15.0" fill="rgb(206,127,49)" rx="2" ry="2" />
<text  x="630.57" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="19.3" y="1973" width="0.6" height="15.0" fill="rgb(224,130,32)" rx="2" ry="2" />
<text  x="22.32" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (2 samples, 0.03%)</title><rect x="172.2" y="1957" width="0.4" height="15.0" fill="rgb(235,181,28)" rx="2" ry="2" />
<text  x="175.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="230.7" y="1749" width="0.2" height="15.0" fill="rgb(245,85,33)" rx="2" ry="2" />
<text  x="233.73" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="181.9" y="1957" width="0.2" height="15.0" fill="rgb(214,24,11)" rx="2" ry="2" />
<text  x="184.94" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1143.8" y="1749" width="0.2" height="15.0" fill="rgb(249,60,40)" rx="2" ry="2" />
<text  x="1146.79" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="186.7" y="1925" width="1.0" height="15.0" fill="rgb(218,213,8)" rx="2" ry="2" />
<text  x="189.70" y="1935.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="11.4" y="2005" width="1.0" height="15.0" fill="rgb(236,5,51)" rx="2" ry="2" />
<text  x="14.39" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (45 samples, 0.76%)</title><rect x="385.8" y="2021" width="8.9" height="15.0" fill="rgb(249,95,25)" rx="2" ry="2" />
<text  x="388.82" y="2031.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1009.1" y="2037" width="0.4" height="15.0" fill="rgb(252,203,38)" rx="2" ry="2" />
<text  x="1012.13" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="184.9" y="2005" width="0.2" height="15.0" fill="rgb(231,93,0)" rx="2" ry="2" />
<text  x="187.92" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="867.9" y="1989" width="0.2" height="15.0" fill="rgb(208,153,6)" rx="2" ry="2" />
<text  x="870.93" y="1999.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (3 samples, 0.05%)</title><rect x="96.3" y="2005" width="0.6" height="15.0" fill="rgb(237,136,35)" rx="2" ry="2" />
<text  x="99.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="184.7" y="2021" width="0.4" height="15.0" fill="rgb(230,107,3)" rx="2" ry="2" />
<text  x="187.72" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="190.9" y="2021" width="0.4" height="15.0" fill="rgb(253,59,38)" rx="2" ry="2" />
<text  x="193.87" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="636.5" y="2037" width="0.2" height="15.0" fill="rgb(238,183,16)" rx="2" ry="2" />
<text  x="639.49" y="2047.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1143.8" y="1701" width="0.2" height="15.0" fill="rgb(220,160,44)" rx="2" ry="2" />
<text  x="1146.79" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="202.4" y="1845" width="0.2" height="15.0" fill="rgb(224,122,9)" rx="2" ry="2" />
<text  x="205.37" y="1855.5" ></text>
</g>
<g >
<title>__slab_free (9 samples, 0.15%)</title><rect x="1036.3" y="1877" width="1.8" height="15.0" fill="rgb(242,198,36)" rx="2" ry="2" />
<text  x="1039.30" y="1887.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1147.0" y="2021" width="0.2" height="15.0" fill="rgb(212,206,45)" rx="2" ry="2" />
<text  x="1149.96" y="2031.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="567.7" y="1989" width="0.2" height="15.0" fill="rgb(252,185,15)" rx="2" ry="2" />
<text  x="570.67" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (13 samples, 0.22%)</title><rect x="198.8" y="1989" width="2.6" height="15.0" fill="rgb(241,25,4)" rx="2" ry="2" />
<text  x="201.80" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1093.2" y="1957" width="0.4" height="15.0" fill="rgb(217,2,52)" rx="2" ry="2" />
<text  x="1096.22" y="1967.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="254.9" y="1813" width="0.4" height="15.0" fill="rgb(227,76,27)" rx="2" ry="2" />
<text  x="257.92" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="582.0" y="1957" width="0.2" height="15.0" fill="rgb(235,174,33)" rx="2" ry="2" />
<text  x="584.95" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="339.8" y="1941" width="0.4" height="15.0" fill="rgb(209,123,7)" rx="2" ry="2" />
<text  x="342.81" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="580.4" y="1893" width="0.2" height="15.0" fill="rgb(254,175,3)" rx="2" ry="2" />
<text  x="583.37" y="1903.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="311.2" y="1781" width="0.2" height="15.0" fill="rgb(245,139,11)" rx="2" ry="2" />
<text  x="314.25" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="367.2" y="1909" width="5.9" height="15.0" fill="rgb(253,79,42)" rx="2" ry="2" />
<text  x="370.17" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="576.8" y="1909" width="0.2" height="15.0" fill="rgb(239,113,47)" rx="2" ry="2" />
<text  x="579.80" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="163.5" y="1973" width="1.0" height="15.0" fill="rgb(210,217,45)" rx="2" ry="2" />
<text  x="166.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (5 samples, 0.08%)</title><rect x="856.0" y="2005" width="1.0" height="15.0" fill="rgb(242,26,6)" rx="2" ry="2" />
<text  x="859.03" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1989" width="45.2" height="15.0" fill="rgb(232,67,21)" rx="2" ry="2" />
<text  x="53.85" y="1999.5" >[unk..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="241.0" y="1829" width="0.2" height="15.0" fill="rgb(228,25,1)" rx="2" ry="2" />
<text  x="244.04" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (4 samples, 0.07%)</title><rect x="542.7" y="1973" width="0.8" height="15.0" fill="rgb(230,200,42)" rx="2" ry="2" />
<text  x="545.69" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (6 samples, 0.10%)</title><rect x="261.5" y="1493" width="1.2" height="15.0" fill="rgb(226,160,23)" rx="2" ry="2" />
<text  x="264.47" y="1503.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="627.6" y="1845" width="0.2" height="15.0" fill="rgb(226,68,51)" rx="2" ry="2" />
<text  x="630.57" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="250.2" y="1781" width="0.2" height="15.0" fill="rgb(244,227,26)" rx="2" ry="2" />
<text  x="253.16" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1131.1" y="1893" width="0.2" height="15.0" fill="rgb(217,22,44)" rx="2" ry="2" />
<text  x="1134.10" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="370.1" y="1861" width="0.2" height="15.0" fill="rgb(229,103,53)" rx="2" ry="2" />
<text  x="373.15" y="1871.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (12 samples, 0.20%)</title><rect x="681.3" y="1925" width="2.4" height="15.0" fill="rgb(251,191,3)" rx="2" ry="2" />
<text  x="684.31" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="238.1" y="1829" width="0.2" height="15.0" fill="rgb(225,97,14)" rx="2" ry="2" />
<text  x="241.07" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="789" width="45.2" height="15.0" fill="rgb(229,197,11)" rx="2" ry="2" />
<text  x="53.85" y="799.5" >[unk..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1145.6" y="1989" width="0.2" height="15.0" fill="rgb(208,121,45)" rx="2" ry="2" />
<text  x="1148.58" y="1999.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="543.5" y="1621" width="0.2" height="15.0" fill="rgb(251,77,36)" rx="2" ry="2" />
<text  x="546.48" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="301.9" y="1909" width="0.2" height="15.0" fill="rgb(253,11,46)" rx="2" ry="2" />
<text  x="304.93" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1143.8" y="1941" width="0.2" height="15.0" fill="rgb(242,227,38)" rx="2" ry="2" />
<text  x="1146.79" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="167.7" y="1989" width="3.7" height="15.0" fill="rgb(206,217,27)" rx="2" ry="2" />
<text  x="170.66" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1145.6" y="1813" width="0.2" height="15.0" fill="rgb(250,18,26)" rx="2" ry="2" />
<text  x="1148.58" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="255.3" y="1797" width="0.2" height="15.0" fill="rgb(229,78,12)" rx="2" ry="2" />
<text  x="258.32" y="1807.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (99 samples, 1.66%)</title><rect x="263.3" y="1477" width="19.6" height="15.0" fill="rgb(223,106,29)" rx="2" ry="2" />
<text  x="266.25" y="1487.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="893.1" y="2021" width="0.2" height="15.0" fill="rgb(241,21,24)" rx="2" ry="2" />
<text  x="896.12" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="94.7" y="37" width="0.4" height="15.0" fill="rgb(231,68,32)" rx="2" ry="2" />
<text  x="97.68" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1103.5" y="1989" width="0.2" height="15.0" fill="rgb(220,91,21)" rx="2" ry="2" />
<text  x="1106.53" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (30 samples, 0.50%)</title><rect x="931.4" y="1989" width="5.9" height="15.0" fill="rgb(240,54,42)" rx="2" ry="2" />
<text  x="934.39" y="1999.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.02%)</title><rect x="95.7" y="37" width="0.2" height="15.0" fill="rgb(212,64,49)" rx="2" ry="2" />
<text  x="98.67" y="47.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="258.9" y="1813" width="0.2" height="15.0" fill="rgb(219,169,24)" rx="2" ry="2" />
<text  x="261.89" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="511.5" y="2005" width="1.0" height="15.0" fill="rgb(247,220,0)" rx="2" ry="2" />
<text  x="514.55" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (44 samples, 0.74%)</title><rect x="376.5" y="2037" width="8.7" height="15.0" fill="rgb(239,137,38)" rx="2" ry="2" />
<text  x="379.49" y="2047.5" ></text>
</g>
<g >
<title>sk_reset_timer (8 samples, 0.13%)</title><rect x="291.0" y="1781" width="1.6" height="15.0" fill="rgb(207,187,31)" rx="2" ry="2" />
<text  x="294.02" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (2 samples, 0.03%)</title><rect x="966.7" y="1989" width="0.4" height="15.0" fill="rgb(216,180,50)" rx="2" ry="2" />
<text  x="969.69" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="581.2" y="1973" width="0.2" height="15.0" fill="rgb(212,164,1)" rx="2" ry="2" />
<text  x="584.16" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="49.9" y="1989" width="0.2" height="15.0" fill="rgb(249,227,38)" rx="2" ry="2" />
<text  x="52.86" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (22 samples, 0.37%)</title><rect x="799.1" y="1989" width="4.4" height="15.0" fill="rgb(208,46,42)" rx="2" ry="2" />
<text  x="802.11" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="579.4" y="1861" width="0.4" height="15.0" fill="rgb(239,75,52)" rx="2" ry="2" />
<text  x="582.37" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (9 samples, 0.15%)</title><rect x="449.9" y="1989" width="1.8" height="15.0" fill="rgb(225,22,14)" rx="2" ry="2" />
<text  x="452.87" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (12 samples, 0.20%)</title><rect x="470.3" y="1925" width="2.4" height="15.0" fill="rgb(234,46,5)" rx="2" ry="2" />
<text  x="473.30" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="826.1" y="2005" width="0.6" height="15.0" fill="rgb(228,195,38)" rx="2" ry="2" />
<text  x="829.08" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="17.1" y="1909" width="0.2" height="15.0" fill="rgb(229,191,12)" rx="2" ry="2" />
<text  x="20.14" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="202.4" y="1973" width="0.2" height="15.0" fill="rgb(229,192,44)" rx="2" ry="2" />
<text  x="205.37" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="358.1" y="1973" width="0.3" height="15.0" fill="rgb(223,211,2)" rx="2" ry="2" />
<text  x="361.05" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="543.5" y="1877" width="0.2" height="15.0" fill="rgb(211,219,9)" rx="2" ry="2" />
<text  x="546.48" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (2 samples, 0.03%)</title><rect x="171.8" y="2005" width="0.4" height="15.0" fill="rgb(219,8,4)" rx="2" ry="2" />
<text  x="174.83" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.15%)</title><rect x="304.1" y="2021" width="1.8" height="15.0" fill="rgb(219,191,14)" rx="2" ry="2" />
<text  x="307.11" y="2031.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (39 samples, 0.66%)</title><rect x="244.4" y="1877" width="7.7" height="15.0" fill="rgb(213,89,1)" rx="2" ry="2" />
<text  x="247.41" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="253.1" y="1765" width="0.2" height="15.0" fill="rgb(220,149,20)" rx="2" ry="2" />
<text  x="256.14" y="1775.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="334.3" y="1957" width="0.2" height="15.0" fill="rgb(231,210,47)" rx="2" ry="2" />
<text  x="337.25" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="384.8" y="2005" width="0.4" height="15.0" fill="rgb(243,106,54)" rx="2" ry="2" />
<text  x="387.82" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="858.2" y="1941" width="0.4" height="15.0" fill="rgb(206,27,15)" rx="2" ry="2" />
<text  x="861.21" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (8 samples, 0.13%)</title><rect x="261.5" y="1573" width="1.6" height="15.0" fill="rgb(210,222,10)" rx="2" ry="2" />
<text  x="264.47" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="230.7" y="1845" width="0.6" height="15.0" fill="rgb(228,9,51)" rx="2" ry="2" />
<text  x="233.73" y="1855.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="308.5" y="1941" width="0.2" height="15.0" fill="rgb(230,225,11)" rx="2" ry="2" />
<text  x="311.47" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="301.9" y="1845" width="0.2" height="15.0" fill="rgb(216,207,21)" rx="2" ry="2" />
<text  x="304.93" y="1855.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="734.3" y="1941" width="0.2" height="15.0" fill="rgb(241,168,33)" rx="2" ry="2" />
<text  x="737.26" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="311.6" y="1669" width="0.2" height="15.0" fill="rgb(240,13,35)" rx="2" ry="2" />
<text  x="314.64" y="1679.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.6" y="1829" width="0.8" height="15.0" fill="rgb(231,141,26)" rx="2" ry="2" />
<text  x="15.58" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1034.3" y="1829" width="0.2" height="15.0" fill="rgb(249,154,22)" rx="2" ry="2" />
<text  x="1037.32" y="1839.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.6" y="1941" width="0.8" height="15.0" fill="rgb(236,212,43)" rx="2" ry="2" />
<text  x="14.59" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1084.9" y="1733" width="0.2" height="15.0" fill="rgb(232,223,0)" rx="2" ry="2" />
<text  x="1087.89" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1125" width="45.2" height="15.0" fill="rgb(208,147,39)" rx="2" ry="2" />
<text  x="53.85" y="1135.5" >[unk..</text>
</g>
<g >
<title>[unknown] (225 samples, 3.78%)</title><rect x="50.9" y="149" width="44.6" height="15.0" fill="rgb(252,190,6)" rx="2" ry="2" />
<text  x="53.85" y="159.5" >[unk..</text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="196.4" y="1941" width="0.2" height="15.0" fill="rgb(211,120,31)" rx="2" ry="2" />
<text  x="199.42" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1015.5" y="1909" width="0.2" height="15.0" fill="rgb(205,111,44)" rx="2" ry="2" />
<text  x="1018.48" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="337.0" y="1973" width="0.2" height="15.0" fill="rgb(207,98,32)" rx="2" ry="2" />
<text  x="340.03" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="964.5" y="1909" width="0.2" height="15.0" fill="rgb(209,102,52)" rx="2" ry="2" />
<text  x="967.51" y="1919.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="12.6" y="1893" width="1.0" height="15.0" fill="rgb(253,166,3)" rx="2" ry="2" />
<text  x="15.58" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="94.3" y="69" width="0.2" height="15.0" fill="rgb(236,81,50)" rx="2" ry="2" />
<text  x="97.29" y="79.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="952.4" y="1893" width="0.2" height="15.0" fill="rgb(218,87,50)" rx="2" ry="2" />
<text  x="955.41" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1102.9" y="1957" width="0.2" height="15.0" fill="rgb(247,29,36)" rx="2" ry="2" />
<text  x="1105.94" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (15 samples, 0.25%)</title><rect x="669.8" y="1941" width="3.0" height="15.0" fill="rgb(212,51,12)" rx="2" ry="2" />
<text  x="672.81" y="1951.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="231.1" y="1781" width="0.2" height="15.0" fill="rgb(245,115,16)" rx="2" ry="2" />
<text  x="234.13" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="631.5" y="2005" width="0.6" height="15.0" fill="rgb(228,114,52)" rx="2" ry="2" />
<text  x="634.53" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="173.0" y="1925" width="0.2" height="15.0" fill="rgb(243,78,35)" rx="2" ry="2" />
<text  x="176.02" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="798.9" y="1797" width="0.2" height="15.0" fill="rgb(247,54,52)" rx="2" ry="2" />
<text  x="801.91" y="1807.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (8 samples, 0.13%)</title><rect x="254.7" y="1877" width="1.6" height="15.0" fill="rgb(224,152,27)" rx="2" ry="2" />
<text  x="257.73" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1813" width="45.2" height="15.0" fill="rgb(235,36,1)" rx="2" ry="2" />
<text  x="53.85" y="1823.5" >[unk..</text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="252.9" y="1589" width="0.2" height="15.0" fill="rgb(226,167,37)" rx="2" ry="2" />
<text  x="255.94" y="1599.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (34 samples, 0.57%)</title><rect x="858.8" y="1989" width="6.7" height="15.0" fill="rgb(219,93,27)" rx="2" ry="2" />
<text  x="861.81" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="175.4" y="1877" width="0.6" height="15.0" fill="rgb(234,171,30)" rx="2" ry="2" />
<text  x="178.40" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1180.1" y="2021" width="0.8" height="15.0" fill="rgb(242,219,31)" rx="2" ry="2" />
<text  x="1183.08" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="372.7" y="1877" width="0.2" height="15.0" fill="rgb(248,33,10)" rx="2" ry="2" />
<text  x="375.73" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="580.8" y="1941" width="0.2" height="15.0" fill="rgb(239,224,36)" rx="2" ry="2" />
<text  x="583.76" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (146 samples, 2.45%)</title><rect x="937.7" y="1989" width="29.0" height="15.0" fill="rgb(254,142,45)" rx="2" ry="2" />
<text  x="940.74" y="1999.5" >fo..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="671.8" y="1925" width="0.4" height="15.0" fill="rgb(216,219,39)" rx="2" ry="2" />
<text  x="674.79" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (4 samples, 0.07%)</title><rect x="465.9" y="1925" width="0.8" height="15.0" fill="rgb(246,162,36)" rx="2" ry="2" />
<text  x="468.94" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="918.3" y="1957" width="0.6" height="15.0" fill="rgb(227,64,17)" rx="2" ry="2" />
<text  x="921.30" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="200.6" y="1829" width="0.2" height="15.0" fill="rgb(254,169,24)" rx="2" ry="2" />
<text  x="203.58" y="1839.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1024.4" y="1957" width="0.2" height="15.0" fill="rgb(222,72,31)" rx="2" ry="2" />
<text  x="1027.40" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="583.5" y="1893" width="0.2" height="15.0" fill="rgb(221,226,24)" rx="2" ry="2" />
<text  x="586.54" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (12 samples, 0.20%)</title><rect x="81.6" y="37" width="2.4" height="15.0" fill="rgb(229,43,54)" rx="2" ry="2" />
<text  x="84.59" y="47.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1188.6" y="2037" width="0.4" height="15.0" fill="rgb(209,166,36)" rx="2" ry="2" />
<text  x="1191.61" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="237.9" y="1941" width="0.4" height="15.0" fill="rgb(244,41,36)" rx="2" ry="2" />
<text  x="240.87" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="224.8" y="2021" width="1.2" height="15.0" fill="rgb(250,94,43)" rx="2" ry="2" />
<text  x="227.78" y="2031.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="358.4" y="1989" width="0.6" height="15.0" fill="rgb(219,16,52)" rx="2" ry="2" />
<text  x="361.45" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="543.5" y="1669" width="0.2" height="15.0" fill="rgb(250,210,33)" rx="2" ry="2" />
<text  x="546.48" y="1679.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="376.5" y="2005" width="0.4" height="15.0" fill="rgb(238,147,18)" rx="2" ry="2" />
<text  x="379.49" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1589" width="45.2" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="53.85" y="1599.5" >[unk..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="581.8" y="1973" width="0.2" height="15.0" fill="rgb(210,6,35)" rx="2" ry="2" />
<text  x="584.75" y="1983.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="170.2" y="1941" width="0.2" height="15.0" fill="rgb(225,180,12)" rx="2" ry="2" />
<text  x="173.24" y="1951.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="936.9" y="1941" width="0.2" height="15.0" fill="rgb(242,25,21)" rx="2" ry="2" />
<text  x="939.94" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1083.7" y="1621" width="0.2" height="15.0" fill="rgb(205,91,51)" rx="2" ry="2" />
<text  x="1086.70" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1145.6" y="1845" width="0.2" height="15.0" fill="rgb(254,43,6)" rx="2" ry="2" />
<text  x="1148.58" y="1855.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (8 samples, 0.13%)</title><rect x="1057.5" y="1829" width="1.6" height="15.0" fill="rgb(224,174,41)" rx="2" ry="2" />
<text  x="1060.52" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (3 samples, 0.05%)</title><rect x="598.0" y="2037" width="0.6" height="15.0" fill="rgb(246,209,45)" rx="2" ry="2" />
<text  x="601.02" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (2 samples, 0.03%)</title><rect x="520.7" y="2037" width="0.4" height="15.0" fill="rgb(213,108,21)" rx="2" ry="2" />
<text  x="523.67" y="2047.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1083.7" y="1445" width="0.2" height="15.0" fill="rgb(245,170,48)" rx="2" ry="2" />
<text  x="1086.70" y="1455.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="282.7" y="1461" width="0.2" height="15.0" fill="rgb(239,42,9)" rx="2" ry="2" />
<text  x="285.69" y="1471.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="39.4" y="1765" width="0.1" height="15.0" fill="rgb(246,29,50)" rx="2" ry="2" />
<text  x="42.35" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="581.4" y="1765" width="0.2" height="15.0" fill="rgb(246,129,38)" rx="2" ry="2" />
<text  x="584.36" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="579.0" y="1909" width="0.8" height="15.0" fill="rgb(232,79,39)" rx="2" ry="2" />
<text  x="581.98" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="592.7" y="1989" width="0.2" height="15.0" fill="rgb(247,131,36)" rx="2" ry="2" />
<text  x="595.66" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="250.2" y="1717" width="0.2" height="15.0" fill="rgb(213,75,24)" rx="2" ry="2" />
<text  x="253.16" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="627.8" y="1989" width="1.0" height="15.0" fill="rgb(244,141,13)" rx="2" ry="2" />
<text  x="630.76" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (4 samples, 0.07%)</title><rect x="642.8" y="2037" width="0.8" height="15.0" fill="rgb(241,221,37)" rx="2" ry="2" />
<text  x="645.84" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="402.5" y="1829" width="0.6" height="15.0" fill="rgb(248,32,10)" rx="2" ry="2" />
<text  x="405.47" y="1839.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="733.5" y="1909" width="0.2" height="15.0" fill="rgb(214,73,45)" rx="2" ry="2" />
<text  x="736.47" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1042.6" y="1749" width="0.4" height="15.0" fill="rgb(246,6,46)" rx="2" ry="2" />
<text  x="1045.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="654.7" y="1989" width="0.2" height="15.0" fill="rgb(219,206,51)" rx="2" ry="2" />
<text  x="657.74" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="997" width="45.2" height="15.0" fill="rgb(248,127,11)" rx="2" ry="2" />
<text  x="53.85" y="1007.5" >[unk..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="301.9" y="1765" width="0.2" height="15.0" fill="rgb(225,15,0)" rx="2" ry="2" />
<text  x="304.93" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="311.6" y="1621" width="0.2" height="15.0" fill="rgb(207,74,31)" rx="2" ry="2" />
<text  x="314.64" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.9" y="389" width="0.2" height="15.0" fill="rgb(233,84,33)" rx="2" ry="2" />
<text  x="98.87" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="166.7" y="1925" width="0.2" height="15.0" fill="rgb(234,193,52)" rx="2" ry="2" />
<text  x="169.67" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="855.2" y="1989" width="0.4" height="15.0" fill="rgb(242,182,6)" rx="2" ry="2" />
<text  x="858.24" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="402.5" y="1813" width="0.6" height="15.0" fill="rgb(221,17,27)" rx="2" ry="2" />
<text  x="405.47" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="1177.5" y="2037" width="0.4" height="15.0" fill="rgb(227,34,18)" rx="2" ry="2" />
<text  x="1180.51" y="2047.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (17 samples, 0.29%)</title><rect x="70.3" y="53" width="3.4" height="15.0" fill="rgb(217,135,16)" rx="2" ry="2" />
<text  x="73.29" y="63.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="301.3" y="1637" width="0.4" height="15.0" fill="rgb(236,92,33)" rx="2" ry="2" />
<text  x="304.33" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="255.5" y="1749" width="0.2" height="15.0" fill="rgb(227,128,39)" rx="2" ry="2" />
<text  x="258.52" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (36 samples, 0.61%)</title><rect x="1162.6" y="2053" width="7.2" height="15.0" fill="rgb(220,14,2)" rx="2" ry="2" />
<text  x="1165.63" y="2063.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="581.4" y="1749" width="0.2" height="15.0" fill="rgb(242,128,24)" rx="2" ry="2" />
<text  x="584.36" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="155.6" y="1941" width="0.4" height="15.0" fill="rgb(251,64,36)" rx="2" ry="2" />
<text  x="158.57" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="116.5" y="1941" width="0.8" height="15.0" fill="rgb(216,169,26)" rx="2" ry="2" />
<text  x="119.50" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1147.2" y="1861" width="0.2" height="15.0" fill="rgb(207,80,40)" rx="2" ry="2" />
<text  x="1150.16" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="295.4" y="1781" width="0.2" height="15.0" fill="rgb(231,151,32)" rx="2" ry="2" />
<text  x="298.38" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="581.4" y="1973" width="0.2" height="15.0" fill="rgb(238,49,36)" rx="2" ry="2" />
<text  x="584.36" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.13%)</title><rect x="284.7" y="1685" width="1.6" height="15.0" fill="rgb(219,84,33)" rx="2" ry="2" />
<text  x="287.67" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="253.1" y="1829" width="0.2" height="15.0" fill="rgb(228,45,34)" rx="2" ry="2" />
<text  x="256.14" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="200.4" y="1909" width="0.2" height="15.0" fill="rgb(246,50,13)" rx="2" ry="2" />
<text  x="203.39" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="576.8" y="1685" width="0.2" height="15.0" fill="rgb(232,0,18)" rx="2" ry="2" />
<text  x="579.80" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (16 samples, 0.27%)</title><rect x="328.5" y="1973" width="3.2" height="15.0" fill="rgb(226,147,44)" rx="2" ry="2" />
<text  x="331.50" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="346.2" y="1909" width="0.1" height="15.0" fill="rgb(225,139,14)" rx="2" ry="2" />
<text  x="349.15" y="1919.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (4 samples, 0.07%)</title><rect x="913.1" y="1957" width="0.8" height="15.0" fill="rgb(212,129,6)" rx="2" ry="2" />
<text  x="916.15" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="200.0" y="1877" width="0.2" height="15.0" fill="rgb(205,173,28)" rx="2" ry="2" />
<text  x="202.99" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="181.9" y="1909" width="0.2" height="15.0" fill="rgb(219,177,27)" rx="2" ry="2" />
<text  x="184.94" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (228 samples, 3.83%)</title><rect x="50.9" y="1701" width="45.2" height="15.0" fill="rgb(224,58,12)" rx="2" ry="2" />
<text  x="53.85" y="1711.5" >[unk..</text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="301.5" y="1605" width="0.2" height="15.0" fill="rgb(244,146,47)" rx="2" ry="2" />
<text  x="304.53" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="311.6" y="1685" width="0.2" height="15.0" fill="rgb(239,58,16)" rx="2" ry="2" />
<text  x="314.64" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (5 samples, 0.08%)</title><rect x="479.6" y="1957" width="1.0" height="15.0" fill="rgb(237,35,35)" rx="2" ry="2" />
<text  x="482.62" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="96.7" y="1653" width="0.2" height="15.0" fill="rgb(218,170,31)" rx="2" ry="2" />
<text  x="99.67" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="250.2" y="1701" width="0.2" height="15.0" fill="rgb(252,153,21)" rx="2" ry="2" />
<text  x="253.16" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="18.9" y="1925" width="0.4" height="15.0" fill="rgb(221,31,32)" rx="2" ry="2" />
<text  x="21.92" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="576.8" y="1717" width="0.2" height="15.0" fill="rgb(220,32,51)" rx="2" ry="2" />
<text  x="579.80" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1095.4" y="2037" width="0.2" height="15.0" fill="rgb(227,156,1)" rx="2" ry="2" />
<text  x="1098.40" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="53.6" y="37" width="0.2" height="15.0" fill="rgb(219,202,43)" rx="2" ry="2" />
<text  x="56.63" y="47.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (8 samples, 0.13%)</title><rect x="347.9" y="1973" width="1.6" height="15.0" fill="rgb(248,11,50)" rx="2" ry="2" />
<text  x="350.94" y="1983.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="1087.5" y="1957" width="0.6" height="15.0" fill="rgb(223,14,44)" rx="2" ry="2" />
<text  x="1090.47" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (13 samples, 0.22%)</title><rect x="198.8" y="2021" width="2.6" height="15.0" fill="rgb(206,161,24)" rx="2" ry="2" />
<text  x="201.80" y="2031.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="95.7" y="165" width="0.2" height="15.0" fill="rgb(242,173,32)" rx="2" ry="2" />
<text  x="98.67" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1082.9" y="1845" width="0.2" height="15.0" fill="rgb(233,61,18)" rx="2" ry="2" />
<text  x="1085.91" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1145.6" y="1749" width="0.2" height="15.0" fill="rgb(222,169,15)" rx="2" ry="2" />
<text  x="1148.58" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="718.8" y="1877" width="0.6" height="15.0" fill="rgb(227,66,19)" rx="2" ry="2" />
<text  x="721.79" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (1 samples, 0.02%)</title><rect x="624.4" y="1973" width="0.2" height="15.0" fill="rgb(207,129,19)" rx="2" ry="2" />
<text  x="627.39" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.20%)</title><rect x="37.8" y="1989" width="2.3" height="15.0" fill="rgb(226,37,28)" rx="2" ry="2" />
<text  x="40.76" y="1999.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="865.2" y="1861" width="0.2" height="15.0" fill="rgb(240,151,19)" rx="2" ry="2" />
<text  x="868.15" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="84.0" y="37" width="0.4" height="15.0" fill="rgb(236,168,4)" rx="2" ry="2" />
<text  x="86.97" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (200 samples, 3.36%)</title><rect x="684.5" y="1909" width="39.6" height="15.0" fill="rgb(244,4,11)" rx="2" ry="2" />
<text  x="687.48" y="1919.5" >fol..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (3 samples, 0.05%)</title><rect x="154.4" y="1925" width="0.6" height="15.0" fill="rgb(205,224,22)" rx="2" ry="2" />
<text  x="157.38" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (9 samples, 0.15%)</title><rect x="290.8" y="1797" width="1.8" height="15.0" fill="rgb(228,63,7)" rx="2" ry="2" />
<text  x="293.82" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (4 samples, 0.07%)</title><rect x="1010.3" y="2037" width="0.8" height="15.0" fill="rgb(243,16,16)" rx="2" ry="2" />
<text  x="1013.32" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="581.8" y="1941" width="0.2" height="15.0" fill="rgb(225,180,38)" rx="2" ry="2" />
<text  x="584.75" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="301.9" y="1941" width="0.2" height="15.0" fill="rgb(239,28,12)" rx="2" ry="2" />
<text  x="304.93" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="961.7" y="1893" width="1.0" height="15.0" fill="rgb(238,119,27)" rx="2" ry="2" />
<text  x="964.73" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1143.8" y="1621" width="0.2" height="15.0" fill="rgb(208,30,51)" rx="2" ry="2" />
<text  x="1146.79" y="1631.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1102.9" y="1973" width="0.2" height="15.0" fill="rgb(240,12,19)" rx="2" ry="2" />
<text  x="1105.94" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (8 samples, 0.13%)</title><rect x="261.5" y="1637" width="1.6" height="15.0" fill="rgb(245,176,4)" rx="2" ry="2" />
<text  x="264.47" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="579.4" y="1765" width="0.4" height="15.0" fill="rgb(207,4,30)" rx="2" ry="2" />
<text  x="582.37" y="1775.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="260.7" y="1749" width="0.2" height="15.0" fill="rgb(234,170,31)" rx="2" ry="2" />
<text  x="263.68" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.10%)</title><rect x="261.5" y="1525" width="1.2" height="15.0" fill="rgb(219,121,49)" rx="2" ry="2" />
<text  x="264.47" y="1535.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="352.7" y="1973" width="0.4" height="15.0" fill="rgb(217,48,37)" rx="2" ry="2" />
<text  x="355.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1012.9" y="2005" width="0.2" height="15.0" fill="rgb(217,3,35)" rx="2" ry="2" />
<text  x="1015.90" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="158.3" y="1957" width="1.0" height="15.0" fill="rgb(248,219,43)" rx="2" ry="2" />
<text  x="161.34" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="325.9" y="1973" width="0.2" height="15.0" fill="rgb(219,117,43)" rx="2" ry="2" />
<text  x="328.92" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="251.9" y="1829" width="0.2" height="15.0" fill="rgb(208,40,27)" rx="2" ry="2" />
<text  x="254.95" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1159.9" y="1973" width="0.2" height="15.0" fill="rgb(235,45,14)" rx="2" ry="2" />
<text  x="1162.86" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="95.5" y="37" width="0.2" height="15.0" fill="rgb(227,113,50)" rx="2" ry="2" />
<text  x="98.48" y="47.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="736.6" y="1973" width="0.4" height="15.0" fill="rgb(216,193,20)" rx="2" ry="2" />
<text  x="739.64" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="200.6" y="1813" width="0.2" height="15.0" fill="rgb(211,33,14)" rx="2" ry="2" />
<text  x="203.58" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="577.8" y="1813" width="0.4" height="15.0" fill="rgb(252,58,31)" rx="2" ry="2" />
<text  x="580.79" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.37%)</title><rect x="308.1" y="2021" width="4.3" height="15.0" fill="rgb(206,92,47)" rx="2" ry="2" />
<text  x="311.07" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="302.9" y="1957" width="0.8" height="15.0" fill="rgb(242,115,48)" rx="2" ry="2" />
<text  x="305.92" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="577.4" y="1733" width="0.2" height="15.0" fill="rgb(254,158,3)" rx="2" ry="2" />
<text  x="580.39" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="1161.2" y="2053" width="0.4" height="15.0" fill="rgb(207,150,44)" rx="2" ry="2" />
<text  x="1164.24" y="2063.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="230.7" y="1877" width="0.6" height="15.0" fill="rgb(244,18,27)" rx="2" ry="2" />
<text  x="233.73" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (21 samples, 0.35%)</title><rect x="359.8" y="1989" width="4.2" height="15.0" fill="rgb(215,227,6)" rx="2" ry="2" />
<text  x="362.84" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="303.3" y="1845" width="0.4" height="15.0" fill="rgb(250,22,50)" rx="2" ry="2" />
<text  x="306.31" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (11 samples, 0.18%)</title><rect x="198.8" y="1957" width="2.2" height="15.0" fill="rgb(215,13,41)" rx="2" ry="2" />
<text  x="201.80" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="193.6" y="1957" width="1.0" height="15.0" fill="rgb(210,104,52)" rx="2" ry="2" />
<text  x="196.64" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="239.1" y="1813" width="0.2" height="15.0" fill="rgb(251,77,20)" rx="2" ry="2" />
<text  x="242.06" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="292.2" y="1733" width="0.2" height="15.0" fill="rgb(241,59,27)" rx="2" ry="2" />
<text  x="295.21" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="258.3" y="1717" width="0.2" height="15.0" fill="rgb(212,193,33)" rx="2" ry="2" />
<text  x="261.30" y="1727.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="209.5" y="2021" width="0.2" height="15.0" fill="rgb(251,92,41)" rx="2" ry="2" />
<text  x="212.51" y="2031.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="254.5" y="1717" width="0.2" height="15.0" fill="rgb(242,218,35)" rx="2" ry="2" />
<text  x="257.53" y="1727.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="532.2" y="1957" width="0.2" height="15.0" fill="rgb(245,164,32)" rx="2" ry="2" />
<text  x="535.17" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="292.2" y="1717" width="0.2" height="15.0" fill="rgb(243,101,34)" rx="2" ry="2" />
<text  x="295.21" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (42 samples, 0.71%)</title><rect x="366.0" y="1957" width="8.3" height="15.0" fill="rgb(225,64,8)" rx="2" ry="2" />
<text  x="368.98" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="95.7" y="213" width="0.2" height="15.0" fill="rgb(233,77,25)" rx="2" ry="2" />
<text  x="98.67" y="223.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="516.7" y="2037" width="0.6" height="15.0" fill="rgb(234,218,50)" rx="2" ry="2" />
<text  x="519.71" y="2047.5" ></text>
</g>
<g >
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="1059.1" y="1829" width="0.6" height="15.0" fill="rgb(227,159,17)" rx="2" ry="2" />
<text  x="1062.11" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="290.6" y="1557" width="0.2" height="15.0" fill="rgb(209,78,14)" rx="2" ry="2" />
<text  x="293.62" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1160.1" y="2053" width="0.2" height="15.0" fill="rgb(207,30,33)" rx="2" ry="2" />
<text  x="1163.05" y="2063.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="363.8" y="1957" width="0.2" height="15.0" fill="rgb(248,45,46)" rx="2" ry="2" />
<text  x="366.80" y="1967.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="576.6" y="1909" width="0.2" height="15.0" fill="rgb(252,48,42)" rx="2" ry="2" />
<text  x="579.60" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1073.6" y="1733" width="0.4" height="15.0" fill="rgb(229,196,39)" rx="2" ry="2" />
<text  x="1076.59" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="12.6" y="2021" width="1.0" height="15.0" fill="rgb(216,146,6)" rx="2" ry="2" />
<text  x="15.58" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="403.1" y="2037" width="0.2" height="15.0" fill="rgb(226,116,8)" rx="2" ry="2" />
<text  x="406.07" y="2047.5" ></text>
</g>
</g>
</svg>
