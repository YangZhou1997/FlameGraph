<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="344.6" y="1845" width="0.2" height="15.0" fill="rgb(215,210,1)" rx="2" ry="2" />
<text  x="347.56" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="485" width="39.3" height="15.0" fill="rgb(239,97,29)" rx="2" ry="2" />
<text  x="54.45" y="495.5" >[un..</text>
</g>
<g >
<title>folly::Function&lt;void  (11 samples, 0.18%)</title><rect x="905.4" y="1909" width="2.2" height="15.0" fill="rgb(211,31,10)" rx="2" ry="2" />
<text  x="908.41" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (119 samples, 2.00%)</title><rect x="785.6" y="2005" width="23.6" height="15.0" fill="rgb(237,58,42)" rx="2" ry="2" />
<text  x="788.63" y="2015.5" >f..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="834.0" y="2005" width="0.2" height="15.0" fill="rgb(231,12,6)" rx="2" ry="2" />
<text  x="837.02" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="812.6" y="1989" width="0.2" height="15.0" fill="rgb(225,19,28)" rx="2" ry="2" />
<text  x="815.60" y="1999.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="176.0" y="1941" width="0.2" height="15.0" fill="rgb(211,2,36)" rx="2" ry="2" />
<text  x="178.99" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="308.1" y="1957" width="0.6" height="15.0" fill="rgb(214,60,47)" rx="2" ry="2" />
<text  x="311.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="75.0" y="37" width="2.0" height="15.0" fill="rgb(206,144,6)" rx="2" ry="2" />
<text  x="78.05" y="47.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="869" width="39.3" height="15.0" fill="rgb(211,186,45)" rx="2" ry="2" />
<text  x="54.45" y="879.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="345.4" y="1941" width="0.2" height="15.0" fill="rgb(230,17,2)" rx="2" ry="2" />
<text  x="348.36" y="1951.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (16 samples, 0.27%)</title><rect x="226.8" y="1877" width="3.1" height="15.0" fill="rgb(254,27,15)" rx="2" ry="2" />
<text  x="229.76" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.22%)</title><rect x="107.6" y="1973" width="2.6" height="15.0" fill="rgb(229,176,1)" rx="2" ry="2" />
<text  x="110.57" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="880.2" y="1925" width="0.2" height="15.0" fill="rgb(205,6,32)" rx="2" ry="2" />
<text  x="883.23" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="152.8" y="1973" width="1.0" height="15.0" fill="rgb(213,109,20)" rx="2" ry="2" />
<text  x="155.79" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (2 samples, 0.03%)</title><rect x="775.1" y="2005" width="0.4" height="15.0" fill="rgb(236,210,0)" rx="2" ry="2" />
<text  x="778.12" y="2015.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="658.1" y="1893" width="0.2" height="15.0" fill="rgb(215,153,54)" rx="2" ry="2" />
<text  x="661.11" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="365.6" y="2005" width="0.2" height="15.0" fill="rgb(241,88,6)" rx="2" ry="2" />
<text  x="368.59" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (6 samples, 0.10%)</title><rect x="448.9" y="1909" width="1.2" height="15.0" fill="rgb(206,141,24)" rx="2" ry="2" />
<text  x="451.88" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="307.5" y="1925" width="0.2" height="15.0" fill="rgb(247,203,2)" rx="2" ry="2" />
<text  x="310.48" y="1935.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="837.8" y="1957" width="0.4" height="15.0" fill="rgb(212,46,3)" rx="2" ry="2" />
<text  x="840.78" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (13 samples, 0.22%)</title><rect x="821.1" y="2005" width="2.6" height="15.0" fill="rgb(238,221,53)" rx="2" ry="2" />
<text  x="824.13" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="972.8" y="1989" width="1.0" height="15.0" fill="rgb(245,131,40)" rx="2" ry="2" />
<text  x="975.84" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (90 samples, 1.51%)</title><rect x="625.4" y="1973" width="17.8" height="15.0" fill="rgb(253,110,11)" rx="2" ry="2" />
<text  x="628.38" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="345.6" y="1941" width="0.4" height="15.0" fill="rgb(209,8,42)" rx="2" ry="2" />
<text  x="348.56" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (17 samples, 0.29%)</title><rect x="1086.3" y="1701" width="3.4" height="15.0" fill="rgb(219,194,33)" rx="2" ry="2" />
<text  x="1089.28" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="179.4" y="1925" width="1.4" height="15.0" fill="rgb(232,61,28)" rx="2" ry="2" />
<text  x="182.36" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (603 samples, 10.13%)</title><rect x="977.6" y="2021" width="119.6" height="15.0" fill="rgb(229,150,35)" rx="2" ry="2" />
<text  x="980.60" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="287.4" y="1957" width="0.2" height="15.0" fill="rgb(222,58,39)" rx="2" ry="2" />
<text  x="290.45" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1135.1" y="1973" width="0.2" height="15.0" fill="rgb(238,219,47)" rx="2" ry="2" />
<text  x="1138.07" y="1983.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="606.1" y="1909" width="0.2" height="15.0" fill="rgb(227,204,43)" rx="2" ry="2" />
<text  x="609.15" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1131.7" y="2005" width="0.2" height="15.0" fill="rgb(245,209,22)" rx="2" ry="2" />
<text  x="1134.69" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="607.3" y="1989" width="0.4" height="15.0" fill="rgb(208,155,20)" rx="2" ry="2" />
<text  x="610.34" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.42%)</title><rect x="968.9" y="2021" width="4.9" height="15.0" fill="rgb(225,226,16)" rx="2" ry="2" />
<text  x="971.87" y="2031.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="593.9" y="2005" width="0.2" height="15.0" fill="rgb(242,114,3)" rx="2" ry="2" />
<text  x="596.85" y="2015.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="955.0" y="1845" width="0.2" height="15.0" fill="rgb(207,223,1)" rx="2" ry="2" />
<text  x="957.99" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="359.4" y="1925" width="0.6" height="15.0" fill="rgb(244,226,18)" rx="2" ry="2" />
<text  x="362.44" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.18%)</title><rect x="166.9" y="1973" width="2.2" height="15.0" fill="rgb(211,125,38)" rx="2" ry="2" />
<text  x="169.87" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (187 samples, 3.14%)</title><rect x="648.0" y="1909" width="37.1" height="15.0" fill="rgb(221,17,40)" rx="2" ry="2" />
<text  x="650.99" y="1919.5" >fol..</text>
</g>
<g >
<title>skb_clone (13 samples, 0.22%)</title><rect x="259.9" y="1813" width="2.6" height="15.0" fill="rgb(253,225,0)" rx="2" ry="2" />
<text  x="262.88" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (19 samples, 0.32%)</title><rect x="767.6" y="1989" width="3.7" height="15.0" fill="rgb(222,113,24)" rx="2" ry="2" />
<text  x="770.58" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (126 samples, 2.12%)</title><rect x="568.7" y="2005" width="25.0" height="15.0" fill="rgb(225,130,52)" rx="2" ry="2" />
<text  x="571.67" y="2015.5" >[..</text>
</g>
<g >
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="982.8" y="1941" width="0.2" height="15.0" fill="rgb(239,69,24)" rx="2" ry="2" />
<text  x="985.76" y="1951.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="593.3" y="1989" width="0.4" height="15.0" fill="rgb(216,161,38)" rx="2" ry="2" />
<text  x="596.26" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="154.0" y="1973" width="0.4" height="15.0" fill="rgb(247,84,18)" rx="2" ry="2" />
<text  x="156.98" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="82.8" y="37" width="0.2" height="15.0" fill="rgb(236,95,40)" rx="2" ry="2" />
<text  x="85.78" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="880.2" y="1909" width="0.2" height="15.0" fill="rgb(230,42,10)" rx="2" ry="2" />
<text  x="883.23" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1477" width="39.3" height="15.0" fill="rgb(239,143,46)" rx="2" ry="2" />
<text  x="54.45" y="1487.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="614.9" y="2005" width="1.2" height="15.0" fill="rgb(208,61,47)" rx="2" ry="2" />
<text  x="617.87" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="789" width="39.3" height="15.0" fill="rgb(242,225,21)" rx="2" ry="2" />
<text  x="54.45" y="799.5" >[un..</text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="923.7" y="1893" width="0.2" height="15.0" fill="rgb(220,179,6)" rx="2" ry="2" />
<text  x="926.66" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="88.1" y="85" width="0.2" height="15.0" fill="rgb(254,54,15)" rx="2" ry="2" />
<text  x="91.14" y="95.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (5 samples, 0.08%)</title><rect x="265.0" y="1797" width="1.0" height="15.0" fill="rgb(231,116,39)" rx="2" ry="2" />
<text  x="268.04" y="1807.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="228.7" y="1749" width="0.2" height="15.0" fill="rgb(211,191,31)" rx="2" ry="2" />
<text  x="231.75" y="1759.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1094.8" y="1877" width="0.2" height="15.0" fill="rgb(245,204,9)" rx="2" ry="2" />
<text  x="1097.81" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="77.2" y="37" width="0.6" height="15.0" fill="rgb(254,80,36)" rx="2" ry="2" />
<text  x="80.23" y="47.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="365.2" y="2021" width="1.0" height="15.0" fill="rgb(213,36,29)" rx="2" ry="2" />
<text  x="368.19" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="931.4" y="1973" width="0.2" height="15.0" fill="rgb(208,83,44)" rx="2" ry="2" />
<text  x="934.39" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (31 samples, 0.52%)</title><rect x="15.2" y="2021" width="6.1" height="15.0" fill="rgb(234,219,31)" rx="2" ry="2" />
<text  x="18.16" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="697.0" y="1973" width="0.2" height="15.0" fill="rgb(243,116,34)" rx="2" ry="2" />
<text  x="699.98" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1113.6" y="1957" width="0.2" height="15.0" fill="rgb(231,2,0)" rx="2" ry="2" />
<text  x="1116.65" y="1967.5" ></text>
</g>
<g >
<title>sock_rfree (4 samples, 0.07%)</title><rect x="1039.7" y="1893" width="0.8" height="15.0" fill="rgb(219,137,35)" rx="2" ry="2" />
<text  x="1042.67" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="322.9" y="1973" width="0.2" height="15.0" fill="rgb(211,68,51)" rx="2" ry="2" />
<text  x="325.95" y="1983.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="87.7" y="69" width="0.4" height="15.0" fill="rgb(246,187,44)" rx="2" ry="2" />
<text  x="90.74" y="79.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.56%)</title><rect x="51.4" y="53" width="18.5" height="15.0" fill="rgb(206,47,3)" rx="2" ry="2" />
<text  x="54.45" y="63.5" ></text>
</g>
<g >
<title>__libc_recv (619 samples, 10.40%)</title><rect x="975.8" y="2053" width="122.8" height="15.0" fill="rgb(219,25,10)" rx="2" ry="2" />
<text  x="978.82" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="262.9" y="1813" width="0.4" height="15.0" fill="rgb(219,88,10)" rx="2" ry="2" />
<text  x="265.86" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="1188.6" y="2053" width="0.6" height="15.0" fill="rgb(221,95,1)" rx="2" ry="2" />
<text  x="1191.61" y="2063.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="213.3" y="1893" width="1.2" height="15.0" fill="rgb(233,66,48)" rx="2" ry="2" />
<text  x="216.28" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (234 samples, 3.93%)</title><rect x="426.7" y="2005" width="46.4" height="15.0" fill="rgb(232,189,38)" rx="2" ry="2" />
<text  x="429.67" y="2015.5" >[unk..</text>
</g>
<g >
<title>tcp_rcv_established (95 samples, 1.60%)</title><rect x="234.7" y="1509" width="18.8" height="15.0" fill="rgb(205,227,25)" rx="2" ry="2" />
<text  x="237.70" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="356.1" y="1973" width="0.4" height="15.0" fill="rgb(220,221,14)" rx="2" ry="2" />
<text  x="359.07" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="361.8" y="1925" width="0.2" height="15.0" fill="rgb(213,68,24)" rx="2" ry="2" />
<text  x="364.82" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="997" width="39.3" height="15.0" fill="rgb(210,51,49)" rx="2" ry="2" />
<text  x="54.45" y="1007.5" >[un..</text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="253.1" y="1413" width="0.4" height="15.0" fill="rgb(237,31,15)" rx="2" ry="2" />
<text  x="256.14" y="1423.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (2 samples, 0.03%)</title><rect x="353.3" y="2005" width="0.4" height="15.0" fill="rgb(248,78,2)" rx="2" ry="2" />
<text  x="356.29" y="2015.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1098.6" y="2053" width="0.2" height="15.0" fill="rgb(241,162,26)" rx="2" ry="2" />
<text  x="1101.57" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="352.7" y="1973" width="0.2" height="15.0" fill="rgb(239,206,16)" rx="2" ry="2" />
<text  x="355.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (4 samples, 0.07%)</title><rect x="566.5" y="2037" width="0.8" height="15.0" fill="rgb(253,219,29)" rx="2" ry="2" />
<text  x="569.48" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="180.6" y="1893" width="0.2" height="15.0" fill="rgb(254,30,28)" rx="2" ry="2" />
<text  x="183.55" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="680.5" y="1861" width="0.6" height="15.0" fill="rgb(244,67,35)" rx="2" ry="2" />
<text  x="683.52" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(208,78,49)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr@plt (1 samples, 0.02%)</title><rect x="687.1" y="1909" width="0.2" height="15.0" fill="rgb(217,201,40)" rx="2" ry="2" />
<text  x="690.06" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="542.3" y="1941" width="0.6" height="15.0" fill="rgb(233,72,19)" rx="2" ry="2" />
<text  x="545.29" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (4 samples, 0.07%)</title><rect x="16.1" y="1957" width="0.8" height="15.0" fill="rgb(206,22,53)" rx="2" ry="2" />
<text  x="19.15" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (385 samples, 6.47%)</title><rect x="621.2" y="2005" width="76.4" height="15.0" fill="rgb(227,212,51)" rx="2" ry="2" />
<text  x="624.22" y="2015.5" >facebook..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="688.6" y="1909" width="0.4" height="15.0" fill="rgb(253,2,14)" rx="2" ry="2" />
<text  x="691.65" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="16.1" y="1973" width="0.8" height="15.0" fill="rgb(216,101,34)" rx="2" ry="2" />
<text  x="19.15" y="1983.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="658.5" y="1797" width="0.2" height="15.0" fill="rgb(218,105,7)" rx="2" ry="2" />
<text  x="661.50" y="1807.5" ></text>
</g>
<g >
<title>folly::Optional&lt;facebook::memcache::McServerRequestContext&gt;::emplace&lt;facebook::memcache::McServerRequestContext&gt; (1 samples, 0.02%)</title><rect x="535.5" y="1989" width="0.2" height="15.0" fill="rgb(218,67,43)" rx="2" ry="2" />
<text  x="538.55" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="302.9" y="1941" width="0.2" height="15.0" fill="rgb(249,147,21)" rx="2" ry="2" />
<text  x="305.92" y="1951.5" ></text>
</g>
<g >
<title>sock_rfree (8 samples, 0.13%)</title><rect x="1038.1" y="1877" width="1.6" height="15.0" fill="rgb(226,222,27)" rx="2" ry="2" />
<text  x="1041.09" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (25 samples, 0.42%)</title><rect x="527.0" y="1941" width="5.0" height="15.0" fill="rgb(244,180,23)" rx="2" ry="2" />
<text  x="530.02" y="1951.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(235,213,54)" rx="2" ry="2" />
<text  x="14.19" y="2079.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (13 samples, 0.22%)</title><rect x="316.8" y="1973" width="2.6" height="15.0" fill="rgb(228,31,16)" rx="2" ry="2" />
<text  x="319.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1621" width="39.3" height="15.0" fill="rgb(218,134,14)" rx="2" ry="2" />
<text  x="54.45" y="1631.5" >[un..</text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="531.8" y="1845" width="0.2" height="15.0" fill="rgb(243,21,12)" rx="2" ry="2" />
<text  x="534.78" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1040.7" y="1925" width="0.2" height="15.0" fill="rgb(248,64,25)" rx="2" ry="2" />
<text  x="1043.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="360.4" y="1909" width="1.0" height="15.0" fill="rgb(216,47,38)" rx="2" ry="2" />
<text  x="363.43" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="85.0" y="37" width="0.4" height="15.0" fill="rgb(254,37,28)" rx="2" ry="2" />
<text  x="87.96" y="47.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="805" width="39.3" height="15.0" fill="rgb(219,40,19)" rx="2" ry="2" />
<text  x="54.45" y="815.5" >[un..</text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="473.1" y="2005" width="1.0" height="15.0" fill="rgb(220,108,20)" rx="2" ry="2" />
<text  x="476.08" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="646.8" y="1909" width="0.2" height="15.0" fill="rgb(253,31,7)" rx="2" ry="2" />
<text  x="649.80" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="545.9" y="1845" width="0.2" height="15.0" fill="rgb(250,152,50)" rx="2" ry="2" />
<text  x="548.86" y="1855.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="696.2" y="1925" width="0.2" height="15.0" fill="rgb(214,224,18)" rx="2" ry="2" />
<text  x="699.18" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="72.3" y="37" width="0.2" height="15.0" fill="rgb(227,31,43)" rx="2" ry="2" />
<text  x="75.27" y="47.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="296.2" y="1957" width="0.8" height="15.0" fill="rgb(250,136,25)" rx="2" ry="2" />
<text  x="299.17" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (6 samples, 0.10%)</title><rect x="633.9" y="1909" width="1.2" height="15.0" fill="rgb(227,85,37)" rx="2" ry="2" />
<text  x="636.91" y="1919.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(221,25,40)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="642.4" y="1957" width="0.8" height="15.0" fill="rgb(252,66,39)" rx="2" ry="2" />
<text  x="645.44" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="685.3" y="1909" width="0.4" height="15.0" fill="rgb(227,176,38)" rx="2" ry="2" />
<text  x="688.28" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (3 samples, 0.05%)</title><rect x="317.2" y="1941" width="0.6" height="15.0" fill="rgb(208,47,47)" rx="2" ry="2" />
<text  x="320.20" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="598.8" y="2005" width="0.2" height="15.0" fill="rgb(223,133,12)" rx="2" ry="2" />
<text  x="601.81" y="2015.5" ></text>
</g>
<g >
<title>skb_release_all (38 samples, 0.64%)</title><rect x="241.4" y="1445" width="7.6" height="15.0" fill="rgb(218,126,1)" rx="2" ry="2" />
<text  x="244.44" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(242,123,22)" rx="2" ry="2" />
<text  x="14.19" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (372 samples, 6.25%)</title><rect x="697.6" y="2005" width="73.7" height="15.0" fill="rgb(241,55,27)" rx="2" ry="2" />
<text  x="700.57" y="2015.5" >facebook..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="179.8" y="1893" width="0.2" height="15.0" fill="rgb(251,120,25)" rx="2" ry="2" />
<text  x="182.76" y="1903.5" ></text>
</g>
<g >
<title>ip_output (61 samples, 1.03%)</title><rect x="1078.7" y="1829" width="12.1" height="15.0" fill="rgb(225,55,53)" rx="2" ry="2" />
<text  x="1081.74" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="901" width="39.3" height="15.0" fill="rgb(221,80,7)" rx="2" ry="2" />
<text  x="54.45" y="911.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1113.8" y="2005" width="0.2" height="15.0" fill="rgb(243,175,24)" rx="2" ry="2" />
<text  x="1116.85" y="2015.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="278.5" y="1973" width="0.2" height="15.0" fill="rgb(209,36,10)" rx="2" ry="2" />
<text  x="281.52" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (12 samples, 0.20%)</title><rect x="1149.1" y="2021" width="2.4" height="15.0" fill="rgb(216,148,13)" rx="2" ry="2" />
<text  x="1152.15" y="2031.5" ></text>
</g>
<g >
<title>__sys_sendmsg (333 samples, 5.60%)</title><rect x="207.7" y="1973" width="66.1" height="15.0" fill="rgb(227,80,13)" rx="2" ry="2" />
<text  x="210.72" y="1983.5" >__sys_s..</text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (1 samples, 0.02%)</title><rect x="315.8" y="1925" width="0.2" height="15.0" fill="rgb(243,188,46)" rx="2" ry="2" />
<text  x="318.81" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1085.1" y="1637" width="0.2" height="15.0" fill="rgb(228,118,20)" rx="2" ry="2" />
<text  x="1088.09" y="1647.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="175.4" y="1957" width="0.2" height="15.0" fill="rgb(248,8,13)" rx="2" ry="2" />
<text  x="178.40" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="777.9" y="2005" width="0.2" height="15.0" fill="rgb(246,160,12)" rx="2" ry="2" />
<text  x="780.89" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (161 samples, 2.71%)</title><rect x="1115.6" y="2053" width="32.0" height="15.0" fill="rgb(235,130,34)" rx="2" ry="2" />
<text  x="1118.63" y="2063.5" >fa..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="932.2" y="1957" width="0.8" height="15.0" fill="rgb(227,109,24)" rx="2" ry="2" />
<text  x="935.18" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1557" width="39.3" height="15.0" fill="rgb(246,227,10)" rx="2" ry="2" />
<text  x="54.45" y="1567.5" >[un..</text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1092.8" y="1861" width="0.2" height="15.0" fill="rgb(232,176,49)" rx="2" ry="2" />
<text  x="1095.82" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="228.7" y="1813" width="0.4" height="15.0" fill="rgb(211,199,14)" rx="2" ry="2" />
<text  x="231.75" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (2 samples, 0.03%)</title><rect x="183.5" y="2021" width="0.4" height="15.0" fill="rgb(244,182,12)" rx="2" ry="2" />
<text  x="186.53" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (14 samples, 0.24%)</title><rect x="690.4" y="1973" width="2.8" height="15.0" fill="rgb(239,211,6)" rx="2" ry="2" />
<text  x="693.43" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (3 samples, 0.05%)</title><rect x="1113.3" y="1989" width="0.5" height="15.0" fill="rgb(218,177,39)" rx="2" ry="2" />
<text  x="1116.25" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="549.2" y="1845" width="0.2" height="15.0" fill="rgb(234,193,12)" rx="2" ry="2" />
<text  x="552.23" y="1855.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="617.7" y="1957" width="0.1" height="15.0" fill="rgb(252,153,4)" rx="2" ry="2" />
<text  x="620.65" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1045" width="39.3" height="15.0" fill="rgb(249,153,34)" rx="2" ry="2" />
<text  x="54.45" y="1055.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareUpdateLike (2 samples, 0.03%)</title><rect x="165.3" y="2021" width="0.4" height="15.0" fill="rgb(222,5,43)" rx="2" ry="2" />
<text  x="168.28" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="1114.6" y="2053" width="0.2" height="15.0" fill="rgb(219,87,32)" rx="2" ry="2" />
<text  x="1117.64" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (6 samples, 0.10%)</title><rect x="1104.5" y="2053" width="1.2" height="15.0" fill="rgb(248,59,43)" rx="2" ry="2" />
<text  x="1107.52" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (19 samples, 0.32%)</title><rect x="896.5" y="1909" width="3.8" height="15.0" fill="rgb(225,2,25)" rx="2" ry="2" />
<text  x="899.49" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="68.5" y="37" width="0.2" height="15.0" fill="rgb(220,103,20)" rx="2" ry="2" />
<text  x="71.50" y="47.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="563.1" y="1909" width="0.2" height="15.0" fill="rgb(216,212,40)" rx="2" ry="2" />
<text  x="566.11" y="1919.5" ></text>
</g>
<g >
<title>free (8 samples, 0.13%)</title><rect x="161.7" y="2005" width="1.6" height="15.0" fill="rgb(254,151,26)" rx="2" ry="2" />
<text  x="164.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (251 samples, 4.22%)</title><rect x="286.5" y="2037" width="49.7" height="15.0" fill="rgb(207,13,16)" rx="2" ry="2" />
<text  x="289.46" y="2047.5" >faceb..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1381" width="39.3" height="15.0" fill="rgb(232,84,1)" rx="2" ry="2" />
<text  x="54.45" y="1391.5" >[un..</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (5 samples, 0.08%)</title><rect x="834.8" y="2037" width="1.0" height="15.0" fill="rgb(223,34,5)" rx="2" ry="2" />
<text  x="837.81" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.6" y="1893" width="0.8" height="15.0" fill="rgb(217,229,31)" rx="2" ry="2" />
<text  x="14.59" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (19 samples, 0.32%)</title><rect x="1177.7" y="2037" width="3.8" height="15.0" fill="rgb(252,196,5)" rx="2" ry="2" />
<text  x="1180.70" y="2047.5" ></text>
</g>
<g >
<title>tcp_poll (8 samples, 0.13%)</title><rect x="282.5" y="1893" width="1.6" height="15.0" fill="rgb(224,45,29)" rx="2" ry="2" />
<text  x="285.49" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::ScopeGuardImplBase (1 samples, 0.02%)</title><rect x="183.3" y="1893" width="0.2" height="15.0" fill="rgb(224,75,35)" rx="2" ry="2" />
<text  x="186.33" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="178.6" y="1957" width="0.2" height="15.0" fill="rgb(224,222,53)" rx="2" ry="2" />
<text  x="181.57" y="1967.5" ></text>
</g>
<g >
<title>skb_entail (2 samples, 0.03%)</title><rect x="229.9" y="1877" width="0.4" height="15.0" fill="rgb(220,164,7)" rx="2" ry="2" />
<text  x="232.94" y="1887.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="234.9" y="1493" width="0.2" height="15.0" fill="rgb(238,206,35)" rx="2" ry="2" />
<text  x="237.89" y="1503.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="183.1" y="1925" width="0.2" height="15.0" fill="rgb(232,127,4)" rx="2" ry="2" />
<text  x="186.13" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="455.6" y="1909" width="0.4" height="15.0" fill="rgb(249,41,46)" rx="2" ry="2" />
<text  x="458.62" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="851.9" y="2005" width="0.8" height="15.0" fill="rgb(214,91,24)" rx="2" ry="2" />
<text  x="854.87" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (5 samples, 0.08%)</title><rect x="975.8" y="2037" width="1.0" height="15.0" fill="rgb(237,79,6)" rx="2" ry="2" />
<text  x="978.82" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="84.0" y="37" width="0.4" height="15.0" fill="rgb(233,15,18)" rx="2" ry="2" />
<text  x="86.97" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="423.7" y="1973" width="0.4" height="15.0" fill="rgb(231,202,10)" rx="2" ry="2" />
<text  x="426.69" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (73 samples, 1.23%)</title><rect x="127.6" y="1957" width="14.5" height="15.0" fill="rgb(213,175,9)" rx="2" ry="2" />
<text  x="130.60" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="88.1" y="37" width="0.2" height="15.0" fill="rgb(241,119,2)" rx="2" ry="2" />
<text  x="91.14" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="557.8" y="1957" width="0.2" height="15.0" fill="rgb(244,33,23)" rx="2" ry="2" />
<text  x="560.76" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (15 samples, 0.25%)</title><rect x="636.5" y="1941" width="3.0" height="15.0" fill="rgb(223,21,42)" rx="2" ry="2" />
<text  x="639.49" y="1951.5" ></text>
</g>
<g >
<title>mod_node_page_state (1 samples, 0.02%)</title><rect x="1023.0" y="1765" width="0.2" height="15.0" fill="rgb(221,151,30)" rx="2" ry="2" />
<text  x="1026.02" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="52.8" y="37" width="0.6" height="15.0" fill="rgb(213,14,30)" rx="2" ry="2" />
<text  x="55.84" y="47.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="322.6" y="1973" width="0.1" height="15.0" fill="rgb(232,38,45)" rx="2" ry="2" />
<text  x="325.55" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="414.0" y="1973" width="0.2" height="15.0" fill="rgb(221,192,20)" rx="2" ry="2" />
<text  x="416.98" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="982.4" y="1957" width="0.2" height="15.0" fill="rgb(208,85,45)" rx="2" ry="2" />
<text  x="985.36" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1079.9" y="1781" width="0.4" height="15.0" fill="rgb(229,80,0)" rx="2" ry="2" />
<text  x="1082.93" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="638.3" y="1925" width="1.2" height="15.0" fill="rgb(217,157,32)" rx="2" ry="2" />
<text  x="641.28" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="564.1" y="1989" width="2.4" height="15.0" fill="rgb(217,97,13)" rx="2" ry="2" />
<text  x="567.10" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="1089.1" y="1685" width="0.2" height="15.0" fill="rgb(239,67,15)" rx="2" ry="2" />
<text  x="1092.06" y="1695.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="252.9" y="1477" width="0.2" height="15.0" fill="rgb(232,213,2)" rx="2" ry="2" />
<text  x="255.94" y="1487.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="544.9" y="1941" width="0.4" height="15.0" fill="rgb(224,57,15)" rx="2" ry="2" />
<text  x="547.87" y="1951.5" ></text>
</g>
<g >
<title>ksize (8 samples, 0.13%)</title><rect x="1073.0" y="1861" width="1.6" height="15.0" fill="rgb(208,148,40)" rx="2" ry="2" />
<text  x="1075.99" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="905.2" y="1829" width="0.2" height="15.0" fill="rgb(250,224,39)" rx="2" ry="2" />
<text  x="908.21" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1180.7" y="2021" width="0.8" height="15.0" fill="rgb(230,187,41)" rx="2" ry="2" />
<text  x="1183.68" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="556.6" y="1925" width="0.4" height="15.0" fill="rgb(220,68,37)" rx="2" ry="2" />
<text  x="559.57" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_mss (14 samples, 0.24%)</title><rect x="267.2" y="1877" width="2.8" height="15.0" fill="rgb(207,12,50)" rx="2" ry="2" />
<text  x="270.22" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="338.2" y="1909" width="0.2" height="15.0" fill="rgb(222,93,26)" rx="2" ry="2" />
<text  x="341.22" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="177.6" y="1941" width="0.2" height="15.0" fill="rgb(221,79,49)" rx="2" ry="2" />
<text  x="180.58" y="1951.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="212.5" y="1941" width="0.6" height="15.0" fill="rgb(241,78,45)" rx="2" ry="2" />
<text  x="215.48" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="351.3" y="1989" width="0.2" height="15.0" fill="rgb(244,58,43)" rx="2" ry="2" />
<text  x="354.31" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (95 samples, 1.60%)</title><rect x="234.7" y="1557" width="18.8" height="15.0" fill="rgb(245,52,33)" rx="2" ry="2" />
<text  x="237.70" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="618.0" y="1957" width="0.4" height="15.0" fill="rgb(208,36,41)" rx="2" ry="2" />
<text  x="621.05" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="18.5" y="1957" width="0.4" height="15.0" fill="rgb(220,50,37)" rx="2" ry="2" />
<text  x="21.53" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="933.2" y="1973" width="0.2" height="15.0" fill="rgb(205,177,24)" rx="2" ry="2" />
<text  x="936.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="568.1" y="2005" width="0.2" height="15.0" fill="rgb(217,18,16)" rx="2" ry="2" />
<text  x="571.07" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="345.4" y="1909" width="0.2" height="15.0" fill="rgb(232,184,47)" rx="2" ry="2" />
<text  x="348.36" y="1919.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1045.2" y="1829" width="0.2" height="15.0" fill="rgb(235,159,27)" rx="2" ry="2" />
<text  x="1048.23" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="351.5" y="1989" width="1.4" height="15.0" fill="rgb(237,12,51)" rx="2" ry="2" />
<text  x="354.51" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (19 samples, 0.32%)</title><rect x="174.0" y="2005" width="3.8" height="15.0" fill="rgb(237,9,30)" rx="2" ry="2" />
<text  x="177.01" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (3 samples, 0.05%)</title><rect x="852.7" y="2005" width="0.6" height="15.0" fill="rgb(210,208,52)" rx="2" ry="2" />
<text  x="855.66" y="2015.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="273.8" y="2005" width="0.2" height="15.0" fill="rgb(218,72,10)" rx="2" ry="2" />
<text  x="276.76" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (37 samples, 0.62%)</title><rect x="607.3" y="2037" width="7.4" height="15.0" fill="rgb(224,31,26)" rx="2" ry="2" />
<text  x="610.34" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="519.5" y="1989" width="0.6" height="15.0" fill="rgb(205,115,20)" rx="2" ry="2" />
<text  x="522.48" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="581" width="39.3" height="15.0" fill="rgb(228,52,10)" rx="2" ry="2" />
<text  x="54.45" y="591.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (229 samples, 3.85%)</title><rect x="644.0" y="1957" width="45.4" height="15.0" fill="rgb(243,80,42)" rx="2" ry="2" />
<text  x="647.03" y="1967.5" >foll..</text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="193.6" y="2021" width="0.2" height="15.0" fill="rgb(226,69,30)" rx="2" ry="2" />
<text  x="196.64" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="549.2" y="1925" width="0.2" height="15.0" fill="rgb(242,110,23)" rx="2" ry="2" />
<text  x="552.23" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="297.0" y="1989" width="0.6" height="15.0" fill="rgb(223,48,50)" rx="2" ry="2" />
<text  x="299.97" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="773" width="39.3" height="15.0" fill="rgb(249,5,31)" rx="2" ry="2" />
<text  x="54.45" y="783.5" >[un..</text>
</g>
<g >
<title>ixgbe_xmit_frame (10 samples, 0.17%)</title><rect x="257.3" y="1669" width="2.0" height="15.0" fill="rgb(233,19,42)" rx="2" ry="2" />
<text  x="260.30" y="1679.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="228.7" y="1781" width="0.2" height="15.0" fill="rgb(232,191,33)" rx="2" ry="2" />
<text  x="231.75" y="1791.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="955.0" y="1765" width="0.2" height="15.0" fill="rgb(250,86,1)" rx="2" ry="2" />
<text  x="957.99" y="1775.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="658.3" y="1877" width="0.4" height="15.0" fill="rgb(245,127,30)" rx="2" ry="2" />
<text  x="661.31" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="21.1" y="2005" width="0.2" height="15.0" fill="rgb(236,204,50)" rx="2" ry="2" />
<text  x="24.11" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (4 samples, 0.07%)</title><rect x="156.0" y="1957" width="0.8" height="15.0" fill="rgb(244,215,31)" rx="2" ry="2" />
<text  x="158.96" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="269.4" y="1781" width="0.2" height="15.0" fill="rgb(220,200,13)" rx="2" ry="2" />
<text  x="272.40" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="88.3" y="37" width="1.8" height="15.0" fill="rgb(210,187,10)" rx="2" ry="2" />
<text  x="91.34" y="47.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (3 samples, 0.05%)</title><rect x="1022.6" y="1813" width="0.6" height="15.0" fill="rgb(216,78,53)" rx="2" ry="2" />
<text  x="1025.62" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (10 samples, 0.17%)</title><rect x="1133.3" y="1989" width="2.0" height="15.0" fill="rgb(247,114,22)" rx="2" ry="2" />
<text  x="1136.28" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1749" width="39.3" height="15.0" fill="rgb(253,118,16)" rx="2" ry="2" />
<text  x="54.45" y="1759.5" >[un..</text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(223,153,27)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(246,175,54)" rx="2" ry="2" />
<text  x="14.19" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (4 samples, 0.07%)</title><rect x="545.5" y="1941" width="0.8" height="15.0" fill="rgb(253,117,27)" rx="2" ry="2" />
<text  x="548.46" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="921.9" y="1893" width="0.2" height="15.0" fill="rgb(206,2,41)" rx="2" ry="2" />
<text  x="924.87" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="556.0" y="1925" width="0.2" height="15.0" fill="rgb(243,72,23)" rx="2" ry="2" />
<text  x="558.97" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (3 samples, 0.05%)</title><rect x="335.4" y="2021" width="0.6" height="15.0" fill="rgb(226,79,7)" rx="2" ry="2" />
<text  x="338.44" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (11 samples, 0.18%)</title><rect x="317.2" y="1957" width="2.2" height="15.0" fill="rgb(222,43,48)" rx="2" ry="2" />
<text  x="320.20" y="1967.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.6" y="2005" width="0.8" height="15.0" fill="rgb(219,8,39)" rx="2" ry="2" />
<text  x="14.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (316 samples, 5.31%)</title><rect x="488.3" y="2037" width="62.7" height="15.0" fill="rgb(210,91,39)" rx="2" ry="2" />
<text  x="491.35" y="2047.5" >facebo..</text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="544.9" y="1909" width="0.2" height="15.0" fill="rgb(231,69,26)" rx="2" ry="2" />
<text  x="547.87" y="1919.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="72.7" y="37" width="0.2" height="15.0" fill="rgb(206,102,44)" rx="2" ry="2" />
<text  x="75.67" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="63.9" y="37" width="1.4" height="15.0" fill="rgb(236,62,6)" rx="2" ry="2" />
<text  x="66.94" y="47.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1941" width="39.3" height="15.0" fill="rgb(253,111,21)" rx="2" ry="2" />
<text  x="54.45" y="1951.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (11 samples, 0.18%)</title><rect x="915.1" y="1909" width="2.2" height="15.0" fill="rgb(210,71,13)" rx="2" ry="2" />
<text  x="918.13" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="922.7" y="1893" width="0.2" height="15.0" fill="rgb(240,94,1)" rx="2" ry="2" />
<text  x="925.67" y="1903.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="69.7" y="37" width="0.2" height="15.0" fill="rgb(211,25,47)" rx="2" ry="2" />
<text  x="72.69" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="812.0" y="2005" width="0.4" height="15.0" fill="rgb(219,74,13)" rx="2" ry="2" />
<text  x="815.00" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.07%)</title><rect x="1097.8" y="2037" width="0.8" height="15.0" fill="rgb(238,135,21)" rx="2" ry="2" />
<text  x="1100.78" y="2047.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(234,24,33)" rx="2" ry="2" />
<text  x="15.38" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="548.6" y="1909" width="0.2" height="15.0" fill="rgb(220,130,31)" rx="2" ry="2" />
<text  x="551.64" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="508.4" y="1941" width="0.2" height="15.0" fill="rgb(235,219,33)" rx="2" ry="2" />
<text  x="511.38" y="1951.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="12.6" y="2005" width="1.0" height="15.0" fill="rgb(227,63,34)" rx="2" ry="2" />
<text  x="15.58" y="2015.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="905.2" y="1861" width="0.2" height="15.0" fill="rgb(237,73,33)" rx="2" ry="2" />
<text  x="908.21" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="12.6" y="2037" width="1.0" height="15.0" fill="rgb(227,176,24)" rx="2" ry="2" />
<text  x="15.58" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (23 samples, 0.39%)</title><rect x="542.9" y="1957" width="4.5" height="15.0" fill="rgb(240,120,39)" rx="2" ry="2" />
<text  x="545.88" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="269.4" y="1765" width="0.2" height="15.0" fill="rgb(244,196,24)" rx="2" ry="2" />
<text  x="272.40" y="1775.5" ></text>
</g>
<g >
<title>ip_send_check (7 samples, 0.12%)</title><rect x="1077.4" y="1813" width="1.3" height="15.0" fill="rgb(215,27,23)" rx="2" ry="2" />
<text  x="1080.35" y="1823.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (278 samples, 4.67%)</title><rect x="214.9" y="1893" width="55.1" height="15.0" fill="rgb(245,16,54)" rx="2" ry="2" />
<text  x="217.86" y="1903.5" >tcp_s..</text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="804.3" y="1845" width="0.8" height="15.0" fill="rgb(216,116,42)" rx="2" ry="2" />
<text  x="807.27" y="1855.5" ></text>
</g>
<g >
<title>__fget (12 samples, 0.20%)</title><rect x="271.2" y="1909" width="2.4" height="15.0" fill="rgb(224,36,23)" rx="2" ry="2" />
<text  x="274.19" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1089.7" y="1733" width="0.1" height="15.0" fill="rgb(241,75,5)" rx="2" ry="2" />
<text  x="1092.65" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="437" width="39.3" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text  x="54.45" y="447.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="112.1" y="1989" width="0.2" height="15.0" fill="rgb(229,19,32)" rx="2" ry="2" />
<text  x="115.13" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="693" width="39.3" height="15.0" fill="rgb(206,111,30)" rx="2" ry="2" />
<text  x="54.45" y="703.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="557.4" y="1973" width="0.4" height="15.0" fill="rgb(210,28,34)" rx="2" ry="2" />
<text  x="560.36" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="1147.0" y="1989" width="0.6" height="15.0" fill="rgb(232,108,54)" rx="2" ry="2" />
<text  x="1149.96" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="171.8" y="2005" width="0.6" height="15.0" fill="rgb(248,23,11)" rx="2" ry="2" />
<text  x="174.83" y="2015.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="259.3" y="1669" width="0.2" height="15.0" fill="rgb(212,137,48)" rx="2" ry="2" />
<text  x="262.29" y="1679.5" ></text>
</g>
<g >
<title>__kfree_skb (251 samples, 4.22%)</title><rect x="990.9" y="1925" width="49.8" height="15.0" fill="rgb(248,216,41)" rx="2" ry="2" />
<text  x="993.89" y="1935.5" >__kfr..</text>
</g>
<g >
<title>folly::RequestContext::saveContext (3 samples, 0.05%)</title><rect x="322.6" y="1989" width="0.5" height="15.0" fill="rgb(243,72,47)" rx="2" ry="2" />
<text  x="325.55" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="567.9" y="2021" width="0.4" height="15.0" fill="rgb(251,153,37)" rx="2" ry="2" />
<text  x="570.87" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="214.7" y="1861" width="0.2" height="15.0" fill="rgb(248,180,0)" rx="2" ry="2" />
<text  x="217.67" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (83 samples, 1.39%)</title><rect x="626.0" y="1957" width="16.4" height="15.0" fill="rgb(232,212,23)" rx="2" ry="2" />
<text  x="628.98" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="11.2" y="1973" width="0.2" height="15.0" fill="rgb(253,206,39)" rx="2" ry="2" />
<text  x="14.19" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="1115.0" y="2053" width="0.2" height="15.0" fill="rgb(216,113,23)" rx="2" ry="2" />
<text  x="1118.04" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::release (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(219,228,10)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="265.8" y="1733" width="0.2" height="15.0" fill="rgb(249,84,31)" rx="2" ry="2" />
<text  x="268.83" y="1743.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="658.3" y="1845" width="0.2" height="15.0" fill="rgb(210,198,6)" rx="2" ry="2" />
<text  x="661.31" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="343.8" y="1845" width="0.2" height="15.0" fill="rgb(225,217,33)" rx="2" ry="2" />
<text  x="346.77" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="603.0" y="2005" width="3.3" height="15.0" fill="rgb(238,37,35)" rx="2" ry="2" />
<text  x="605.97" y="2015.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="531.8" y="1877" width="0.2" height="15.0" fill="rgb(242,167,44)" rx="2" ry="2" />
<text  x="534.78" y="1887.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="223.8" y="1861" width="0.2" height="15.0" fill="rgb(220,66,28)" rx="2" ry="2" />
<text  x="226.79" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (3 samples, 0.05%)</title><rect x="641.8" y="1925" width="0.6" height="15.0" fill="rgb(207,114,18)" rx="2" ry="2" />
<text  x="644.85" y="1935.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (53 samples, 0.89%)</title><rect x="488.3" y="1989" width="10.6" height="15.0" fill="rgb(211,65,50)" rx="2" ry="2" />
<text  x="491.35" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (8 samples, 0.13%)</title><rect x="771.3" y="2005" width="1.6" height="15.0" fill="rgb(217,115,7)" rx="2" ry="2" />
<text  x="774.35" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="658.5" y="1845" width="0.2" height="15.0" fill="rgb(249,68,40)" rx="2" ry="2" />
<text  x="661.50" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="144.7" y="1941" width="0.2" height="15.0" fill="rgb(235,228,29)" rx="2" ry="2" />
<text  x="147.66" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="1113.1" y="1973" width="0.2" height="15.0" fill="rgb(240,168,45)" rx="2" ry="2" />
<text  x="1116.05" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="426.3" y="1957" width="0.4" height="15.0" fill="rgb(235,206,25)" rx="2" ry="2" />
<text  x="429.27" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="287.4" y="2005" width="0.2" height="15.0" fill="rgb(205,88,24)" rx="2" ry="2" />
<text  x="290.45" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="174.4" y="1957" width="0.2" height="15.0" fill="rgb(253,64,41)" rx="2" ry="2" />
<text  x="177.41" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (33 samples, 0.55%)</title><rect x="196.4" y="2037" width="6.6" height="15.0" fill="rgb(253,24,30)" rx="2" ry="2" />
<text  x="199.42" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (7 samples, 0.12%)</title><rect x="366.2" y="2037" width="1.4" height="15.0" fill="rgb(254,47,26)" rx="2" ry="2" />
<text  x="369.18" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="922.1" y="1893" width="0.4" height="15.0" fill="rgb(240,84,47)" rx="2" ry="2" />
<text  x="925.07" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="572.4" y="1941" width="0.6" height="15.0" fill="rgb(216,190,53)" rx="2" ry="2" />
<text  x="575.43" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="11.6" y="2053" width="0.8" height="15.0" fill="rgb(215,32,23)" rx="2" ry="2" />
<text  x="14.59" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="1151.5" y="2053" width="0.4" height="15.0" fill="rgb(208,126,33)" rx="2" ry="2" />
<text  x="1154.53" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="573.0" y="1941" width="0.4" height="15.0" fill="rgb(208,134,1)" rx="2" ry="2" />
<text  x="576.03" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="929.4" y="1925" width="0.2" height="15.0" fill="rgb(206,209,49)" rx="2" ry="2" />
<text  x="932.41" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (12 samples, 0.20%)</title><rect x="560.9" y="2005" width="2.4" height="15.0" fill="rgb(241,120,50)" rx="2" ry="2" />
<text  x="563.93" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="949" width="39.3" height="15.0" fill="rgb(249,0,52)" rx="2" ry="2" />
<text  x="54.45" y="959.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="148.4" y="1973" width="0.6" height="15.0" fill="rgb(247,212,6)" rx="2" ry="2" />
<text  x="151.43" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="269.4" y="1813" width="0.2" height="15.0" fill="rgb(235,80,21)" rx="2" ry="2" />
<text  x="272.40" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (9 samples, 0.15%)</title><rect x="324.5" y="1973" width="1.8" height="15.0" fill="rgb(217,74,20)" rx="2" ry="2" />
<text  x="327.53" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="157.5" y="1989" width="0.2" height="15.0" fill="rgb(220,58,52)" rx="2" ry="2" />
<text  x="160.55" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="557.2" y="1941" width="0.2" height="15.0" fill="rgb(254,126,7)" rx="2" ry="2" />
<text  x="560.16" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="547.4" y="1941" width="1.2" height="15.0" fill="rgb(232,42,10)" rx="2" ry="2" />
<text  x="550.45" y="1951.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="207.5" y="1909" width="0.2" height="15.0" fill="rgb(250,25,9)" rx="2" ry="2" />
<text  x="210.53" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="810.6" y="1957" width="0.4" height="15.0" fill="rgb(207,196,16)" rx="2" ry="2" />
<text  x="813.62" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.29%)</title><rect x="603.0" y="2021" width="3.3" height="15.0" fill="rgb(236,12,2)" rx="2" ry="2" />
<text  x="605.97" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="451.1" y="1909" width="0.6" height="15.0" fill="rgb(245,174,21)" rx="2" ry="2" />
<text  x="454.06" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.1" y="1925" width="0.2" height="15.0" fill="rgb(208,6,29)" rx="2" ry="2" />
<text  x="123.07" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (24 samples, 0.40%)</title><rect x="340.2" y="1877" width="4.8" height="15.0" fill="rgb(237,91,52)" rx="2" ry="2" />
<text  x="343.20" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="575.8" y="1973" width="2.6" height="15.0" fill="rgb(218,42,6)" rx="2" ry="2" />
<text  x="578.81" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="19.1" y="1957" width="0.2" height="15.0" fill="rgb(223,108,5)" rx="2" ry="2" />
<text  x="22.12" y="1967.5" ></text>
</g>
<g >
<title>ip_output (127 samples, 2.13%)</title><rect x="234.3" y="1781" width="25.2" height="15.0" fill="rgb(234,28,7)" rx="2" ry="2" />
<text  x="237.30" y="1791.5" >i..</text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (11 samples, 0.18%)</title><rect x="303.7" y="1973" width="2.2" height="15.0" fill="rgb(206,24,32)" rx="2" ry="2" />
<text  x="306.71" y="1983.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="1047.6" y="1845" width="0.2" height="15.0" fill="rgb(237,54,4)" rx="2" ry="2" />
<text  x="1050.61" y="1855.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1048.2" y="1925" width="0.2" height="15.0" fill="rgb(228,42,32)" rx="2" ry="2" />
<text  x="1051.20" y="1935.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.6" y="1989" width="0.8" height="15.0" fill="rgb(234,70,53)" rx="2" ry="2" />
<text  x="14.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::readDataAvailable (1 samples, 0.02%)</title><rect x="1114.4" y="2053" width="0.2" height="15.0" fill="rgb(251,141,6)" rx="2" ry="2" />
<text  x="1117.44" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1589" width="39.3" height="15.0" fill="rgb(239,88,8)" rx="2" ry="2" />
<text  x="54.45" y="1599.5" >[un..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="683.7" y="1893" width="0.6" height="15.0" fill="rgb(229,156,18)" rx="2" ry="2" />
<text  x="686.69" y="1903.5" ></text>
</g>
<g >
<title>sock_def_readable (7 samples, 0.12%)</title><rect x="1045.4" y="1861" width="1.4" height="15.0" fill="rgb(225,104,20)" rx="2" ry="2" />
<text  x="1048.43" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="17.7" y="1925" width="0.2" height="15.0" fill="rgb(218,75,28)" rx="2" ry="2" />
<text  x="20.73" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="183.3" y="1941" width="0.2" height="15.0" fill="rgb(211,160,30)" rx="2" ry="2" />
<text  x="186.33" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (6 samples, 0.10%)</title><rect x="974.6" y="2053" width="1.2" height="15.0" fill="rgb(241,207,37)" rx="2" ry="2" />
<text  x="977.63" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="620.6" y="1973" width="0.2" height="15.0" fill="rgb(251,174,6)" rx="2" ry="2" />
<text  x="623.63" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (20 samples, 0.34%)</title><rect x="153.8" y="2005" width="3.9" height="15.0" fill="rgb(231,75,24)" rx="2" ry="2" />
<text  x="156.78" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="606.9" y="2037" width="0.4" height="15.0" fill="rgb(206,113,15)" rx="2" ry="2" />
<text  x="609.94" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (1 samples, 0.02%)</title><rect x="836.6" y="2037" width="0.2" height="15.0" fill="rgb(249,214,34)" rx="2" ry="2" />
<text  x="839.59" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (25 samples, 0.42%)</title><rect x="968.9" y="2037" width="4.9" height="15.0" fill="rgb(220,138,53)" rx="2" ry="2" />
<text  x="971.87" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="685.1" y="1909" width="0.2" height="15.0" fill="rgb(226,100,17)" rx="2" ry="2" />
<text  x="688.08" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="535.1" y="1989" width="0.4" height="15.0" fill="rgb(212,228,34)" rx="2" ry="2" />
<text  x="538.15" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="333.9" y="1989" width="0.4" height="15.0" fill="rgb(220,154,3)" rx="2" ry="2" />
<text  x="336.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (2 samples, 0.03%)</title><rect x="59.8" y="37" width="0.4" height="15.0" fill="rgb(208,42,6)" rx="2" ry="2" />
<text  x="62.78" y="47.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="436.0" y="1957" width="0.2" height="15.0" fill="rgb(240,108,51)" rx="2" ry="2" />
<text  x="438.99" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="295.4" y="1893" width="0.4" height="15.0" fill="rgb(233,41,18)" rx="2" ry="2" />
<text  x="298.38" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="88.3" y="85" width="2.4" height="15.0" fill="rgb(209,126,14)" rx="2" ry="2" />
<text  x="91.34" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="334.8" y="1925" width="0.6" height="15.0" fill="rgb(238,35,44)" rx="2" ry="2" />
<text  x="337.85" y="1935.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1022.8" y="1733" width="0.2" height="15.0" fill="rgb(222,83,30)" rx="2" ry="2" />
<text  x="1025.82" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (20 samples, 0.34%)</title><rect x="1085.7" y="1717" width="4.0" height="15.0" fill="rgb(235,204,33)" rx="2" ry="2" />
<text  x="1088.68" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="619.0" y="2005" width="2.0" height="15.0" fill="rgb(240,55,24)" rx="2" ry="2" />
<text  x="622.04" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1113.6" y="1973" width="0.2" height="15.0" fill="rgb(210,39,0)" rx="2" ry="2" />
<text  x="1116.65" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="12.6" y="1925" width="1.0" height="15.0" fill="rgb(223,54,26)" rx="2" ry="2" />
<text  x="15.58" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="51.4" y="37" width="1.0" height="15.0" fill="rgb(245,226,0)" rx="2" ry="2" />
<text  x="54.45" y="47.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="573.4" y="1973" width="0.4" height="15.0" fill="rgb(254,22,19)" rx="2" ry="2" />
<text  x="576.43" y="1983.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1085.1" y="1669" width="0.2" height="15.0" fill="rgb(213,68,32)" rx="2" ry="2" />
<text  x="1088.09" y="1679.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.4" y="1925" width="0.8" height="15.0" fill="rgb(212,59,36)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (26 samples, 0.44%)</title><rect x="357.5" y="1973" width="5.1" height="15.0" fill="rgb(231,146,29)" rx="2" ry="2" />
<text  x="360.46" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (8 samples, 0.13%)</title><rect x="203.0" y="2021" width="1.6" height="15.0" fill="rgb(244,195,28)" rx="2" ry="2" />
<text  x="205.96" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="325.3" y="1941" width="0.8" height="15.0" fill="rgb(216,122,16)" rx="2" ry="2" />
<text  x="328.33" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (1 samples, 0.02%)</title><rect x="602.8" y="2037" width="0.2" height="15.0" fill="rgb(232,224,2)" rx="2" ry="2" />
<text  x="605.78" y="2047.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="12.6" y="2053" width="1.0" height="15.0" fill="rgb(233,63,47)" rx="2" ry="2" />
<text  x="15.58" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (7 samples, 0.12%)</title><rect x="823.7" y="2037" width="1.4" height="15.0" fill="rgb(247,226,14)" rx="2" ry="2" />
<text  x="826.70" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="545.3" y="1925" width="0.2" height="15.0" fill="rgb(251,149,51)" rx="2" ry="2" />
<text  x="548.26" y="1935.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="898.7" y="1877" width="0.2" height="15.0" fill="rgb(231,94,25)" rx="2" ry="2" />
<text  x="901.67" y="1887.5" ></text>
</g>
<g >
<title>kfree_skbmem (74 samples, 1.24%)</title><rect x="991.1" y="1909" width="14.7" height="15.0" fill="rgb(231,132,24)" rx="2" ry="2" />
<text  x="994.09" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="689.4" y="1957" width="0.2" height="15.0" fill="rgb(254,163,0)" rx="2" ry="2" />
<text  x="692.44" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="337.8" y="1893" width="0.4" height="15.0" fill="rgb(205,203,16)" rx="2" ry="2" />
<text  x="340.82" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="522.7" y="1989" width="0.2" height="15.0" fill="rgb(250,60,42)" rx="2" ry="2" />
<text  x="525.66" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="291.4" y="1989" width="0.2" height="15.0" fill="rgb(244,43,44)" rx="2" ry="2" />
<text  x="294.42" y="1999.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (12 samples, 0.20%)</title><rect x="210.1" y="1941" width="2.4" height="15.0" fill="rgb(221,220,8)" rx="2" ry="2" />
<text  x="213.10" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="84.0" y="53" width="1.4" height="15.0" fill="rgb(243,8,7)" rx="2" ry="2" />
<text  x="86.97" y="63.5" ></text>
</g>
<g >
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="253.1" y="1477" width="0.4" height="15.0" fill="rgb(243,212,36)" rx="2" ry="2" />
<text  x="256.14" y="1487.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="834.2" y="2037" width="0.2" height="15.0" fill="rgb(242,225,30)" rx="2" ry="2" />
<text  x="837.22" y="2047.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="141.5" y="1909" width="0.4" height="15.0" fill="rgb(250,208,50)" rx="2" ry="2" />
<text  x="144.49" y="1919.5" ></text>
</g>
<g >
<title>free (23 samples, 0.39%)</title><rect x="186.1" y="2021" width="4.6" height="15.0" fill="rgb(233,85,35)" rx="2" ry="2" />
<text  x="189.11" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="546.9" y="1893" width="0.1" height="15.0" fill="rgb(206,146,52)" rx="2" ry="2" />
<text  x="549.85" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="303.5" y="1973" width="0.2" height="15.0" fill="rgb(246,39,41)" rx="2" ry="2" />
<text  x="306.51" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (35 samples, 0.59%)</title><rect x="14.4" y="2037" width="6.9" height="15.0" fill="rgb(223,43,9)" rx="2" ry="2" />
<text  x="17.36" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="156.2" y="1925" width="0.2" height="15.0" fill="rgb(239,22,23)" rx="2" ry="2" />
<text  x="159.16" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="594.1" y="2005" width="1.7" height="15.0" fill="rgb(240,111,17)" rx="2" ry="2" />
<text  x="597.05" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (90 samples, 1.51%)</title><rect x="439.8" y="1973" width="17.8" height="15.0" fill="rgb(231,200,33)" rx="2" ry="2" />
<text  x="442.76" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="1080.9" y="1733" width="0.6" height="15.0" fill="rgb(247,35,5)" rx="2" ry="2" />
<text  x="1083.92" y="1743.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="331.5" y="1941" width="0.2" height="15.0" fill="rgb(222,92,49)" rx="2" ry="2" />
<text  x="334.48" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="376.7" y="2005" width="0.2" height="15.0" fill="rgb(211,154,25)" rx="2" ry="2" />
<text  x="379.69" y="2015.5" ></text>
</g>
<g >
<title>malloc (14 samples, 0.24%)</title><rect x="190.9" y="2021" width="2.7" height="15.0" fill="rgb(254,177,22)" rx="2" ry="2" />
<text  x="193.87" y="2031.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="212.1" y="1893" width="0.2" height="15.0" fill="rgb(210,62,46)" rx="2" ry="2" />
<text  x="215.09" y="1903.5" ></text>
</g>
<g >
<title>skb_release_data (34 samples, 0.57%)</title><rect x="241.6" y="1429" width="6.8" height="15.0" fill="rgb(227,93,52)" rx="2" ry="2" />
<text  x="244.64" y="1439.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="687.5" y="1909" width="0.2" height="15.0" fill="rgb(214,185,47)" rx="2" ry="2" />
<text  x="690.46" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="1072.8" y="1845" width="0.2" height="15.0" fill="rgb(205,109,48)" rx="2" ry="2" />
<text  x="1075.79" y="1855.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="259.3" y="1685" width="0.2" height="15.0" fill="rgb(223,192,14)" rx="2" ry="2" />
<text  x="262.29" y="1695.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="647.6" y="1909" width="0.4" height="15.0" fill="rgb(230,90,26)" rx="2" ry="2" />
<text  x="650.60" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="461.6" y="1973" width="0.2" height="15.0" fill="rgb(234,136,14)" rx="2" ry="2" />
<text  x="464.57" y="1983.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="606.1" y="1877" width="0.2" height="15.0" fill="rgb(212,61,32)" rx="2" ry="2" />
<text  x="609.15" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="17.7" y="1909" width="0.2" height="15.0" fill="rgb(209,99,19)" rx="2" ry="2" />
<text  x="20.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1605" width="39.3" height="15.0" fill="rgb(251,123,14)" rx="2" ry="2" />
<text  x="54.45" y="1615.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash@plt (1 samples, 0.02%)</title><rect x="973.8" y="2037" width="0.2" height="15.0" fill="rgb(246,144,37)" rx="2" ry="2" />
<text  x="976.83" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (6 samples, 0.10%)</title><rect x="823.7" y="2005" width="1.2" height="15.0" fill="rgb(218,140,12)" rx="2" ry="2" />
<text  x="826.70" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="1005.8" y="1909" width="0.4" height="15.0" fill="rgb(212,96,24)" rx="2" ry="2" />
<text  x="1008.76" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="181.1" y="1909" width="0.6" height="15.0" fill="rgb(216,203,35)" rx="2" ry="2" />
<text  x="184.15" y="1919.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (3 samples, 0.05%)</title><rect x="1095.0" y="1925" width="0.6" height="15.0" fill="rgb(251,13,45)" rx="2" ry="2" />
<text  x="1098.01" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="453" width="39.3" height="15.0" fill="rgb(211,122,33)" rx="2" ry="2" />
<text  x="54.45" y="463.5" >[un..</text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="614.7" y="2021" width="1.4" height="15.0" fill="rgb(251,139,40)" rx="2" ry="2" />
<text  x="617.68" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (8 samples, 0.13%)</title><rect x="687.9" y="1941" width="1.5" height="15.0" fill="rgb(254,126,34)" rx="2" ry="2" />
<text  x="690.86" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (6 samples, 0.10%)</title><rect x="639.5" y="1941" width="1.2" height="15.0" fill="rgb(222,138,20)" rx="2" ry="2" />
<text  x="642.47" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1765" width="39.3" height="15.0" fill="rgb(247,72,43)" rx="2" ry="2" />
<text  x="54.45" y="1775.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="444.3" y="1941" width="0.4" height="15.0" fill="rgb(213,41,25)" rx="2" ry="2" />
<text  x="447.32" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="142.5" y="1893" width="0.2" height="15.0" fill="rgb(243,199,12)" rx="2" ry="2" />
<text  x="145.48" y="1903.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="226.6" y="1845" width="0.2" height="15.0" fill="rgb(248,113,34)" rx="2" ry="2" />
<text  x="229.56" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="120.1" y="1893" width="0.2" height="15.0" fill="rgb(238,151,4)" rx="2" ry="2" />
<text  x="123.07" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (567 samples, 9.53%)</title><rect x="50.9" y="2021" width="112.4" height="15.0" fill="rgb(214,151,46)" rx="2" ry="2" />
<text  x="53.85" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (14 samples, 0.24%)</title><rect x="323.9" y="1989" width="2.8" height="15.0" fill="rgb(245,172,19)" rx="2" ry="2" />
<text  x="326.94" y="1999.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.05%)</title><rect x="163.5" y="2021" width="0.6" height="15.0" fill="rgb(245,15,5)" rx="2" ry="2" />
<text  x="166.50" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (134 samples, 2.25%)</title><rect x="233.3" y="1813" width="26.6" height="15.0" fill="rgb(229,123,50)" rx="2" ry="2" />
<text  x="236.31" y="1823.5" >i..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="451.3" y="1893" width="0.4" height="15.0" fill="rgb(230,84,27)" rx="2" ry="2" />
<text  x="454.26" y="1903.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="550.8" y="2005" width="0.2" height="15.0" fill="rgb(254,4,50)" rx="2" ry="2" />
<text  x="553.82" y="2015.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.12%)</title><rect x="962.7" y="2037" width="1.4" height="15.0" fill="rgb(233,210,22)" rx="2" ry="2" />
<text  x="965.73" y="2047.5" ></text>
</g>
<g >
<title>__fget_light (12 samples, 0.20%)</title><rect x="271.2" y="1925" width="2.4" height="15.0" fill="rgb(239,95,43)" rx="2" ry="2" />
<text  x="274.19" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10 samples, 0.17%)</title><rect x="255.1" y="1685" width="2.0" height="15.0" fill="rgb(242,24,1)" rx="2" ry="2" />
<text  x="258.12" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (3 samples, 0.05%)</title><rect x="900.7" y="1989" width="0.5" height="15.0" fill="rgb(233,5,38)" rx="2" ry="2" />
<text  x="903.65" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="168.1" y="1925" width="0.2" height="15.0" fill="rgb(226,29,51)" rx="2" ry="2" />
<text  x="171.06" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (12 samples, 0.20%)</title><rect x="1149.1" y="2037" width="2.4" height="15.0" fill="rgb(226,149,14)" rx="2" ry="2" />
<text  x="1152.15" y="2047.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="19.1" y="1941" width="0.2" height="15.0" fill="rgb(248,123,11)" rx="2" ry="2" />
<text  x="22.12" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="175.0" y="1941" width="0.4" height="15.0" fill="rgb(228,105,48)" rx="2" ry="2" />
<text  x="178.00" y="1951.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1045.2" y="1861" width="0.2" height="15.0" fill="rgb(214,32,43)" rx="2" ry="2" />
<text  x="1048.23" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="193.8" y="2021" width="0.2" height="15.0" fill="rgb(210,166,22)" rx="2" ry="2" />
<text  x="196.84" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="450.7" y="1925" width="0.2" height="15.0" fill="rgb(212,7,54)" rx="2" ry="2" />
<text  x="453.67" y="1935.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="898.9" y="1877" width="0.6" height="15.0" fill="rgb(216,168,24)" rx="2" ry="2" />
<text  x="901.87" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="13.4" y="1845" width="0.2" height="15.0" fill="rgb(208,79,16)" rx="2" ry="2" />
<text  x="16.37" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="293" width="39.3" height="15.0" fill="rgb(218,3,31)" rx="2" ry="2" />
<text  x="54.45" y="303.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (14 samples, 0.24%)</title><rect x="447.3" y="1925" width="2.8" height="15.0" fill="rgb(242,157,27)" rx="2" ry="2" />
<text  x="450.29" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="548.2" y="1925" width="0.2" height="15.0" fill="rgb(220,204,34)" rx="2" ry="2" />
<text  x="551.24" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="646.0" y="1925" width="1.0" height="15.0" fill="rgb(247,5,50)" rx="2" ry="2" />
<text  x="649.01" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="505.8" y="1973" width="0.2" height="15.0" fill="rgb(211,210,50)" rx="2" ry="2" />
<text  x="508.80" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.03%)</title><rect x="305.5" y="1957" width="0.4" height="15.0" fill="rgb(246,118,4)" rx="2" ry="2" />
<text  x="308.50" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="85.4" y="69" width="2.3" height="15.0" fill="rgb(219,53,12)" rx="2" ry="2" />
<text  x="88.36" y="79.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (9 samples, 0.15%)</title><rect x="326.9" y="1989" width="1.8" height="15.0" fill="rgb(241,36,45)" rx="2" ry="2" />
<text  x="329.91" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="325.3" y="1925" width="0.8" height="15.0" fill="rgb(218,154,35)" rx="2" ry="2" />
<text  x="328.33" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="50.9" y="2005" width="0.2" height="15.0" fill="rgb(207,228,33)" rx="2" ry="2" />
<text  x="53.85" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="820.5" y="2005" width="0.2" height="15.0" fill="rgb(227,91,7)" rx="2" ry="2" />
<text  x="823.53" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="178.8" y="1893" width="0.4" height="15.0" fill="rgb(243,114,46)" rx="2" ry="2" />
<text  x="181.77" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (8 samples, 0.13%)</title><rect x="333.9" y="2005" width="1.5" height="15.0" fill="rgb(238,103,26)" rx="2" ry="2" />
<text  x="336.86" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (7 samples, 0.12%)</title><rect x="317.8" y="1941" width="1.4" height="15.0" fill="rgb(251,27,3)" rx="2" ry="2" />
<text  x="320.79" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="166.3" y="2005" width="0.2" height="15.0" fill="rgb(221,12,11)" rx="2" ry="2" />
<text  x="169.28" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="317.0" y="1957" width="0.2" height="15.0" fill="rgb(235,216,21)" rx="2" ry="2" />
<text  x="320.00" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="450.1" y="1925" width="0.6" height="15.0" fill="rgb(236,155,3)" rx="2" ry="2" />
<text  x="453.07" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="777.3" y="1989" width="0.6" height="15.0" fill="rgb(224,175,51)" rx="2" ry="2" />
<text  x="780.30" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="161.1" y="2005" width="0.6" height="15.0" fill="rgb(224,198,24)" rx="2" ry="2" />
<text  x="164.12" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="17.7" y="1893" width="0.2" height="15.0" fill="rgb(210,44,16)" rx="2" ry="2" />
<text  x="20.73" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="695.4" y="1941" width="0.2" height="15.0" fill="rgb(240,89,19)" rx="2" ry="2" />
<text  x="698.39" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (2 samples, 0.03%)</title><rect x="52.4" y="37" width="0.4" height="15.0" fill="rgb(229,38,19)" rx="2" ry="2" />
<text  x="55.44" y="47.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="414.0" y="1877" width="0.2" height="15.0" fill="rgb(237,82,47)" rx="2" ry="2" />
<text  x="416.98" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (8 samples, 0.13%)</title><rect x="480.0" y="2021" width="1.6" height="15.0" fill="rgb(251,187,10)" rx="2" ry="2" />
<text  x="483.02" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="606.1" y="1925" width="0.2" height="15.0" fill="rgb(229,92,35)" rx="2" ry="2" />
<text  x="609.15" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="269.8" y="1845" width="0.2" height="15.0" fill="rgb(227,183,15)" rx="2" ry="2" />
<text  x="272.80" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="693.4" y="1957" width="0.4" height="15.0" fill="rgb(225,156,49)" rx="2" ry="2" />
<text  x="696.41" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="77.0" y="37" width="0.2" height="15.0" fill="rgb(228,147,24)" rx="2" ry="2" />
<text  x="80.03" y="47.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="414.0" y="1989" width="0.2" height="15.0" fill="rgb(225,165,30)" rx="2" ry="2" />
<text  x="416.98" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (14 samples, 0.24%)</title><rect x="299.1" y="1973" width="2.8" height="15.0" fill="rgb(253,108,16)" rx="2" ry="2" />
<text  x="302.15" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="812.4" y="2005" width="0.4" height="15.0" fill="rgb(251,153,20)" rx="2" ry="2" />
<text  x="815.40" y="2015.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="212.3" y="1893" width="0.2" height="15.0" fill="rgb(240,49,29)" rx="2" ry="2" />
<text  x="215.29" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1237" width="39.3" height="15.0" fill="rgb(236,96,12)" rx="2" ry="2" />
<text  x="54.45" y="1247.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="174.2" y="1989" width="0.4" height="15.0" fill="rgb(231,14,7)" rx="2" ry="2" />
<text  x="177.21" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="484.0" y="2021" width="0.6" height="15.0" fill="rgb(241,187,24)" rx="2" ry="2" />
<text  x="486.98" y="2031.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="593.7" y="2005" width="0.2" height="15.0" fill="rgb(222,54,47)" rx="2" ry="2" />
<text  x="596.65" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="426.7" y="1989" width="0.6" height="15.0" fill="rgb(238,41,12)" rx="2" ry="2" />
<text  x="429.67" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="12.6" y="1845" width="0.8" height="15.0" fill="rgb(251,5,35)" rx="2" ry="2" />
<text  x="15.58" y="1855.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.02%)</title><rect x="253.7" y="1669" width="0.2" height="15.0" fill="rgb(239,212,37)" rx="2" ry="2" />
<text  x="256.73" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="181" width="39.3" height="15.0" fill="rgb(222,130,9)" rx="2" ry="2" />
<text  x="54.45" y="191.5" >[un..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="175.6" y="1989" width="0.8" height="15.0" fill="rgb(207,88,27)" rx="2" ry="2" />
<text  x="178.60" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (5 samples, 0.08%)</title><rect x="587.7" y="1973" width="1.0" height="15.0" fill="rgb(245,190,20)" rx="2" ry="2" />
<text  x="590.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="603.0" y="1989" width="0.6" height="15.0" fill="rgb(215,42,31)" rx="2" ry="2" />
<text  x="605.97" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1179.7" y="2021" width="1.0" height="15.0" fill="rgb(245,174,46)" rx="2" ry="2" />
<text  x="1182.69" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="546.7" y="1909" width="0.3" height="15.0" fill="rgb(228,6,46)" rx="2" ry="2" />
<text  x="549.65" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (16 samples, 0.27%)</title><rect x="16.9" y="1989" width="3.2" height="15.0" fill="rgb(252,203,21)" rx="2" ry="2" />
<text  x="19.94" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="348.5" y="2005" width="4.4" height="15.0" fill="rgb(212,174,27)" rx="2" ry="2" />
<text  x="351.53" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="366.0" y="2005" width="0.2" height="15.0" fill="rgb(251,160,33)" rx="2" ry="2" />
<text  x="368.98" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="181.5" y="1893" width="0.2" height="15.0" fill="rgb(247,139,14)" rx="2" ry="2" />
<text  x="184.55" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (2 samples, 0.03%)</title><rect x="695.6" y="1941" width="0.4" height="15.0" fill="rgb(231,146,17)" rx="2" ry="2" />
<text  x="698.59" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (10 samples, 0.17%)</title><rect x="170.4" y="2021" width="2.0" height="15.0" fill="rgb(213,53,17)" rx="2" ry="2" />
<text  x="173.44" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="169.1" y="1989" width="0.7" height="15.0" fill="rgb(253,63,14)" rx="2" ry="2" />
<text  x="172.05" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (9 samples, 0.15%)</title><rect x="853.3" y="2005" width="1.7" height="15.0" fill="rgb(236,141,43)" rx="2" ry="2" />
<text  x="856.25" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="20.7" y="1957" width="0.2" height="15.0" fill="rgb(239,217,36)" rx="2" ry="2" />
<text  x="23.71" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1113.6" y="1941" width="0.2" height="15.0" fill="rgb(246,60,24)" rx="2" ry="2" />
<text  x="1116.65" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (2 samples, 0.03%)</title><rect x="608.7" y="1989" width="0.4" height="15.0" fill="rgb(206,202,38)" rx="2" ry="2" />
<text  x="611.73" y="1999.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1090.6" y="1797" width="0.2" height="15.0" fill="rgb(248,144,45)" rx="2" ry="2" />
<text  x="1093.64" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="339.2" y="1909" width="6.0" height="15.0" fill="rgb(248,156,8)" rx="2" ry="2" />
<text  x="342.21" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="606.1" y="1941" width="0.2" height="15.0" fill="rgb(224,224,41)" rx="2" ry="2" />
<text  x="609.15" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (29 samples, 0.49%)</title><rect x="1042.1" y="1893" width="5.7" height="15.0" fill="rgb(230,87,52)" rx="2" ry="2" />
<text  x="1045.05" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="838.2" y="2005" width="0.2" height="15.0" fill="rgb(247,83,7)" rx="2" ry="2" />
<text  x="841.18" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="87.1" y="37" width="0.2" height="15.0" fill="rgb(231,142,32)" rx="2" ry="2" />
<text  x="90.15" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="973.0" y="1973" width="0.8" height="15.0" fill="rgb(253,191,38)" rx="2" ry="2" />
<text  x="976.04" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (8 samples, 0.13%)</title><rect x="659.7" y="1877" width="1.6" height="15.0" fill="rgb(220,5,53)" rx="2" ry="2" />
<text  x="662.69" y="1887.5" ></text>
</g>
<g >
<title>ip_queue_xmit (76 samples, 1.28%)</title><rect x="1076.4" y="1861" width="15.0" height="15.0" fill="rgb(205,104,54)" rx="2" ry="2" />
<text  x="1079.36" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="170.2" y="2021" width="0.2" height="15.0" fill="rgb(252,185,23)" rx="2" ry="2" />
<text  x="173.24" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="172.4" y="2021" width="0.2" height="15.0" fill="rgb(206,8,7)" rx="2" ry="2" />
<text  x="175.42" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="976.8" y="2037" width="0.2" height="15.0" fill="rgb(209,172,42)" rx="2" ry="2" />
<text  x="979.81" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="90.1" y="53" width="0.6" height="15.0" fill="rgb(220,49,13)" rx="2" ry="2" />
<text  x="93.12" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="772.5" y="1973" width="0.4" height="15.0" fill="rgb(225,182,10)" rx="2" ry="2" />
<text  x="775.54" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="546.1" y="1909" width="0.2" height="15.0" fill="rgb(232,156,31)" rx="2" ry="2" />
<text  x="549.06" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="436.0" y="1973" width="0.2" height="15.0" fill="rgb(207,11,0)" rx="2" ry="2" />
<text  x="438.99" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="621.0" y="2005" width="0.2" height="15.0" fill="rgb(240,120,34)" rx="2" ry="2" />
<text  x="624.02" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="228.7" y="1765" width="0.2" height="15.0" fill="rgb(237,108,32)" rx="2" ry="2" />
<text  x="231.75" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="169.8" y="2021" width="0.2" height="15.0" fill="rgb(230,35,40)" rx="2" ry="2" />
<text  x="172.85" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="111.7" y="1989" width="0.2" height="15.0" fill="rgb(214,70,29)" rx="2" ry="2" />
<text  x="114.74" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="414.6" y="2005" width="2.2" height="15.0" fill="rgb(218,31,20)" rx="2" ry="2" />
<text  x="417.57" y="2015.5" ></text>
</g>
<g >
<title>iov_iter_advance (6 samples, 0.10%)</title><rect x="224.0" y="1861" width="1.2" height="15.0" fill="rgb(223,62,44)" rx="2" ry="2" />
<text  x="226.99" y="1871.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="273.6" y="1941" width="0.2" height="15.0" fill="rgb(224,18,14)" rx="2" ry="2" />
<text  x="276.57" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="274.0" y="2021" width="0.2" height="15.0" fill="rgb(221,11,26)" rx="2" ry="2" />
<text  x="276.96" y="2031.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="905.2" y="1813" width="0.2" height="15.0" fill="rgb(245,211,44)" rx="2" ry="2" />
<text  x="908.21" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="813.4" y="1909" width="0.2" height="15.0" fill="rgb(205,38,37)" rx="2" ry="2" />
<text  x="816.39" y="1919.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1133.3" y="1973" width="0.2" height="15.0" fill="rgb(232,35,12)" rx="2" ry="2" />
<text  x="1136.28" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18 samples, 0.30%)</title><rect x="1081.7" y="1733" width="3.6" height="15.0" fill="rgb(223,160,18)" rx="2" ry="2" />
<text  x="1084.72" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="197" width="39.3" height="15.0" fill="rgb(226,166,47)" rx="2" ry="2" />
<text  x="54.45" y="207.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (15 samples, 0.25%)</title><rect x="458.0" y="1989" width="3.0" height="15.0" fill="rgb(239,7,28)" rx="2" ry="2" />
<text  x="461.00" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="851.7" y="2005" width="0.2" height="15.0" fill="rgb(225,229,13)" rx="2" ry="2" />
<text  x="854.67" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="69.5" y="37" width="0.2" height="15.0" fill="rgb(239,188,10)" rx="2" ry="2" />
<text  x="72.50" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="54.0" y="37" width="0.4" height="15.0" fill="rgb(209,130,25)" rx="2" ry="2" />
<text  x="57.03" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (13 samples, 0.22%)</title><rect x="506.0" y="1973" width="2.6" height="15.0" fill="rgb(239,153,2)" rx="2" ry="2" />
<text  x="509.00" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="687.9" y="1925" width="0.2" height="15.0" fill="rgb(254,224,17)" rx="2" ry="2" />
<text  x="690.86" y="1935.5" ></text>
</g>
<g >
<title>tcp_recvmsg (569 samples, 9.56%)</title><rect x="983.0" y="1941" width="112.8" height="15.0" fill="rgb(239,225,24)" rx="2" ry="2" />
<text  x="985.95" y="1951.5" >tcp_recvmsg</text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="804.3" y="1909" width="0.8" height="15.0" fill="rgb(228,115,52)" rx="2" ry="2" />
<text  x="807.27" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (2 samples, 0.03%)</title><rect x="1161.2" y="2053" width="0.4" height="15.0" fill="rgb(249,33,16)" rx="2" ry="2" />
<text  x="1164.24" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="563.1" y="1973" width="0.2" height="15.0" fill="rgb(231,157,19)" rx="2" ry="2" />
<text  x="566.11" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (4 samples, 0.07%)</title><rect x="347.3" y="2005" width="0.8" height="15.0" fill="rgb(223,214,7)" rx="2" ry="2" />
<text  x="350.34" y="2015.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="1007.0" y="1893" width="0.1" height="15.0" fill="rgb(224,132,6)" rx="2" ry="2" />
<text  x="1009.95" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (2 samples, 0.03%)</title><rect x="660.9" y="1861" width="0.4" height="15.0" fill="rgb(222,85,32)" rx="2" ry="2" />
<text  x="663.88" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.20%)</title><rect x="452.3" y="1925" width="2.3" height="15.0" fill="rgb(254,34,35)" rx="2" ry="2" />
<text  x="455.25" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (49 samples, 0.82%)</title><rect x="444.9" y="1941" width="9.7" height="15.0" fill="rgb(250,56,46)" rx="2" ry="2" />
<text  x="447.91" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="305.9" y="1957" width="0.6" height="15.0" fill="rgb(241,177,23)" rx="2" ry="2" />
<text  x="308.89" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (58 samples, 0.97%)</title><rect x="838.8" y="2037" width="11.5" height="15.0" fill="rgb(245,215,36)" rx="2" ry="2" />
<text  x="841.78" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="568.7" y="1973" width="0.6" height="15.0" fill="rgb(208,173,21)" rx="2" ry="2" />
<text  x="571.67" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="155.6" y="1957" width="0.4" height="15.0" fill="rgb(230,160,18)" rx="2" ry="2" />
<text  x="158.57" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="497.9" y="1893" width="0.2" height="15.0" fill="rgb(243,21,40)" rx="2" ry="2" />
<text  x="500.87" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (1 samples, 0.02%)</title><rect x="178.4" y="1973" width="0.2" height="15.0" fill="rgb(247,112,44)" rx="2" ry="2" />
<text  x="181.37" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="955.0" y="1829" width="0.2" height="15.0" fill="rgb(240,38,39)" rx="2" ry="2" />
<text  x="957.99" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="537.1" y="1989" width="0.2" height="15.0" fill="rgb(205,66,34)" rx="2" ry="2" />
<text  x="540.13" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="325.3" y="1909" width="0.4" height="15.0" fill="rgb(205,96,4)" rx="2" ry="2" />
<text  x="328.33" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="677" width="39.3" height="15.0" fill="rgb(254,73,50)" rx="2" ry="2" />
<text  x="54.45" y="687.5" >[un..</text>
</g>
<g >
<title>__free_pages (2 samples, 0.03%)</title><rect x="1022.6" y="1765" width="0.4" height="15.0" fill="rgb(235,168,49)" rx="2" ry="2" />
<text  x="1025.62" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (36 samples, 0.61%)</title><rect x="501.4" y="1989" width="7.2" height="15.0" fill="rgb(206,58,52)" rx="2" ry="2" />
<text  x="504.44" y="1999.5" ></text>
</g>
<g >
<title>tcp_current_mss (13 samples, 0.22%)</title><rect x="267.4" y="1861" width="2.6" height="15.0" fill="rgb(212,67,41)" rx="2" ry="2" />
<text  x="270.42" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="110.9" y="1973" width="0.8" height="15.0" fill="rgb(247,92,45)" rx="2" ry="2" />
<text  x="113.94" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1141" width="39.3" height="15.0" fill="rgb(213,118,11)" rx="2" ry="2" />
<text  x="54.45" y="1151.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (127 samples, 2.13%)</title><rect x="1122.4" y="2021" width="25.2" height="15.0" fill="rgb(223,62,6)" rx="2" ry="2" />
<text  x="1125.37" y="2031.5" >f..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="563.1" y="1941" width="0.2" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="566.11" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="12.6" y="2021" width="1.0" height="15.0" fill="rgb(210,128,38)" rx="2" ry="2" />
<text  x="15.58" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (6 samples, 0.10%)</title><rect x="416.8" y="2005" width="1.1" height="15.0" fill="rgb(227,75,22)" rx="2" ry="2" />
<text  x="419.75" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (4 samples, 0.07%)</title><rect x="632.5" y="1925" width="0.8" height="15.0" fill="rgb(211,45,4)" rx="2" ry="2" />
<text  x="635.52" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (1 samples, 0.02%)</title><rect x="369.4" y="2037" width="0.2" height="15.0" fill="rgb(226,91,33)" rx="2" ry="2" />
<text  x="372.35" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="448.7" y="1909" width="0.2" height="15.0" fill="rgb(205,179,54)" rx="2" ry="2" />
<text  x="451.68" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="185.3" y="2021" width="0.2" height="15.0" fill="rgb(221,133,21)" rx="2" ry="2" />
<text  x="188.31" y="2031.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="1077.0" y="1845" width="0.2" height="15.0" fill="rgb(219,8,6)" rx="2" ry="2" />
<text  x="1079.96" y="1855.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="955.2" y="2005" width="0.2" height="15.0" fill="rgb(220,51,12)" rx="2" ry="2" />
<text  x="958.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (18 samples, 0.30%)</title><rect x="166.3" y="2021" width="3.5" height="15.0" fill="rgb(215,163,5)" rx="2" ry="2" />
<text  x="169.28" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="316.6" y="1973" width="0.2" height="15.0" fill="rgb(250,164,20)" rx="2" ry="2" />
<text  x="319.60" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="638.9" y="1893" width="0.4" height="15.0" fill="rgb(242,104,18)" rx="2" ry="2" />
<text  x="641.87" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="835.8" y="2037" width="0.8" height="15.0" fill="rgb(231,162,32)" rx="2" ry="2" />
<text  x="838.80" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="483.8" y="2021" width="0.2" height="15.0" fill="rgb(253,59,14)" rx="2" ry="2" />
<text  x="486.78" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="692.8" y="1941" width="0.4" height="15.0" fill="rgb(212,79,6)" rx="2" ry="2" />
<text  x="695.81" y="1951.5" ></text>
</g>
<g >
<title>sock_sendmsg (293 samples, 4.92%)</title><rect x="213.1" y="1941" width="58.1" height="15.0" fill="rgb(239,176,24)" rx="2" ry="2" />
<text  x="216.08" y="1951.5" >sock_s..</text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="832.2" y="2037" width="0.2" height="15.0" fill="rgb(230,226,38)" rx="2" ry="2" />
<text  x="835.23" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="174.8" y="1957" width="0.6" height="15.0" fill="rgb(218,23,9)" rx="2" ry="2" />
<text  x="177.80" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="546.7" y="1893" width="0.2" height="15.0" fill="rgb(254,151,54)" rx="2" ry="2" />
<text  x="549.65" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="597" width="39.3" height="15.0" fill="rgb(233,75,29)" rx="2" ry="2" />
<text  x="54.45" y="607.5" >[un..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="483.0" y="2005" width="0.4" height="15.0" fill="rgb(246,205,50)" rx="2" ry="2" />
<text  x="485.99" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (24 samples, 0.40%)</title><rect x="107.0" y="1989" width="4.7" height="15.0" fill="rgb(230,78,26)" rx="2" ry="2" />
<text  x="109.98" y="1999.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (119 samples, 2.00%)</title><rect x="1048.4" y="1925" width="23.6" height="15.0" fill="rgb(213,166,27)" rx="2" ry="2" />
<text  x="1051.40" y="1935.5" >s..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1701" width="39.3" height="15.0" fill="rgb(248,117,8)" rx="2" ry="2" />
<text  x="54.45" y="1711.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (3 samples, 0.05%)</title><rect x="617.3" y="2037" width="0.5" height="15.0" fill="rgb(235,157,51)" rx="2" ry="2" />
<text  x="620.25" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="166.1" y="2021" width="0.2" height="15.0" fill="rgb(235,198,49)" rx="2" ry="2" />
<text  x="169.08" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (8 samples, 0.13%)</title><rect x="158.9" y="2005" width="1.6" height="15.0" fill="rgb(210,213,13)" rx="2" ry="2" />
<text  x="161.94" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.66%)</title><rect x="551.8" y="2021" width="7.7" height="15.0" fill="rgb(225,22,35)" rx="2" ry="2" />
<text  x="554.81" y="2031.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (1 samples, 0.02%)</title><rect x="269.4" y="1717" width="0.2" height="15.0" fill="rgb(217,184,10)" rx="2" ry="2" />
<text  x="272.40" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="688.1" y="1925" width="1.3" height="15.0" fill="rgb(231,65,54)" rx="2" ry="2" />
<text  x="691.05" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (6 samples, 0.10%)</title><rect x="499.3" y="1989" width="1.1" height="15.0" fill="rgb(220,130,42)" rx="2" ry="2" />
<text  x="502.25" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="1095.8" y="1973" width="1.4" height="15.0" fill="rgb(249,79,20)" rx="2" ry="2" />
<text  x="1098.80" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="175.6" y="1973" width="0.8" height="15.0" fill="rgb(222,116,38)" rx="2" ry="2" />
<text  x="178.60" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="342.8" y="1845" width="0.4" height="15.0" fill="rgb(219,71,26)" rx="2" ry="2" />
<text  x="345.78" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="74.7" y="37" width="0.3" height="15.0" fill="rgb(238,94,14)" rx="2" ry="2" />
<text  x="77.65" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="547.8" y="1925" width="0.4" height="15.0" fill="rgb(221,25,5)" rx="2" ry="2" />
<text  x="550.84" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="785.0" y="2005" width="0.2" height="15.0" fill="rgb(213,53,14)" rx="2" ry="2" />
<text  x="788.03" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (3 samples, 0.05%)</title><rect x="1172.0" y="2053" width="0.5" height="15.0" fill="rgb(227,21,30)" rx="2" ry="2" />
<text  x="1174.95" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (201 samples, 3.38%)</title><rect x="51.1" y="2005" width="39.8" height="15.0" fill="rgb(214,161,47)" rx="2" ry="2" />
<text  x="54.05" y="2015.5" >[un..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (55 samples, 0.92%)</title><rect x="1135.7" y="1989" width="10.9" height="15.0" fill="rgb(232,219,19)" rx="2" ry="2" />
<text  x="1138.66" y="1999.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1092.8" y="1845" width="0.2" height="15.0" fill="rgb(254,163,16)" rx="2" ry="2" />
<text  x="1095.82" y="1855.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="804.3" y="1941" width="0.8" height="15.0" fill="rgb(248,62,41)" rx="2" ry="2" />
<text  x="807.27" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="923.9" y="1909" width="2.7" height="15.0" fill="rgb(221,48,13)" rx="2" ry="2" />
<text  x="926.86" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="457.6" y="1989" width="0.4" height="15.0" fill="rgb(224,188,45)" rx="2" ry="2" />
<text  x="460.61" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="544.9" y="1925" width="0.2" height="15.0" fill="rgb(249,23,38)" rx="2" ry="2" />
<text  x="547.87" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="955.0" y="1813" width="0.2" height="15.0" fill="rgb(222,136,14)" rx="2" ry="2" />
<text  x="957.99" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="65.3" y="37" width="1.2" height="15.0" fill="rgb(220,209,11)" rx="2" ry="2" />
<text  x="68.33" y="47.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1085.1" y="1605" width="0.2" height="15.0" fill="rgb(251,204,17)" rx="2" ry="2" />
<text  x="1088.09" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="549.2" y="1893" width="0.2" height="15.0" fill="rgb(242,21,30)" rx="2" ry="2" />
<text  x="552.23" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="442.7" y="1957" width="0.2" height="15.0" fill="rgb(221,6,28)" rx="2" ry="2" />
<text  x="445.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (7 samples, 0.12%)</title><rect x="84.0" y="69" width="1.4" height="15.0" fill="rgb(223,169,9)" rx="2" ry="2" />
<text  x="86.97" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (95 samples, 1.60%)</title><rect x="234.7" y="1621" width="18.8" height="15.0" fill="rgb(221,222,27)" rx="2" ry="2" />
<text  x="237.70" y="1631.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="834.0" y="2037" width="0.2" height="15.0" fill="rgb(250,118,4)" rx="2" ry="2" />
<text  x="837.02" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="353.7" y="2005" width="0.8" height="15.0" fill="rgb(253,153,21)" rx="2" ry="2" />
<text  x="356.69" y="2015.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="618.8" y="2005" width="0.2" height="15.0" fill="rgb(219,151,43)" rx="2" ry="2" />
<text  x="621.84" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="87.3" y="37" width="0.4" height="15.0" fill="rgb(239,199,35)" rx="2" ry="2" />
<text  x="90.34" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="170.0" y="2005" width="0.2" height="15.0" fill="rgb(245,51,39)" rx="2" ry="2" />
<text  x="173.04" y="2015.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (24 samples, 0.40%)</title><rect x="895.5" y="1941" width="4.8" height="15.0" fill="rgb(228,100,54)" rx="2" ry="2" />
<text  x="898.50" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (9 samples, 0.15%)</title><rect x="633.3" y="1925" width="1.8" height="15.0" fill="rgb(214,180,37)" rx="2" ry="2" />
<text  x="636.32" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="286.3" y="2037" width="0.2" height="15.0" fill="rgb(220,217,31)" rx="2" ry="2" />
<text  x="289.26" y="2047.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="804.3" y="1925" width="0.8" height="15.0" fill="rgb(254,55,33)" rx="2" ry="2" />
<text  x="807.27" y="1935.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (14 samples, 0.24%)</title><rect x="69.9" y="53" width="2.8" height="15.0" fill="rgb(241,49,34)" rx="2" ry="2" />
<text  x="72.89" y="63.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1099.4" y="2037" width="0.2" height="15.0" fill="rgb(226,67,6)" rx="2" ry="2" />
<text  x="1102.37" y="2047.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="253.7" y="1685" width="0.2" height="15.0" fill="rgb(226,71,22)" rx="2" ry="2" />
<text  x="256.73" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (3 samples, 0.05%)</title><rect x="598.2" y="2005" width="0.6" height="15.0" fill="rgb(211,192,11)" rx="2" ry="2" />
<text  x="601.22" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="10.2" y="1957" width="1.0" height="15.0" fill="rgb(207,19,12)" rx="2" ry="2" />
<text  x="13.20" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="364.8" y="1973" width="0.2" height="15.0" fill="rgb(239,221,51)" rx="2" ry="2" />
<text  x="367.79" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="302.5" y="1957" width="0.6" height="15.0" fill="rgb(250,31,0)" rx="2" ry="2" />
<text  x="305.52" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (110 samples, 1.85%)</title><rect x="1072.0" y="1909" width="21.8" height="15.0" fill="rgb(247,0,16)" rx="2" ry="2" />
<text  x="1075.00" y="1919.5" >t..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1094.6" y="1909" width="0.2" height="15.0" fill="rgb(223,36,48)" rx="2" ry="2" />
<text  x="1097.61" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (91 samples, 1.53%)</title><rect x="235.1" y="1493" width="18.0" height="15.0" fill="rgb(248,177,25)" rx="2" ry="2" />
<text  x="238.09" y="1503.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="905.2" y="1797" width="0.2" height="15.0" fill="rgb(235,86,1)" rx="2" ry="2" />
<text  x="908.21" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="10.2" y="2037" width="1.0" height="15.0" fill="rgb(244,208,6)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1493" width="39.3" height="15.0" fill="rgb(224,225,0)" rx="2" ry="2" />
<text  x="54.45" y="1503.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (317 samples, 5.33%)</title><rect x="90.9" y="2005" width="62.9" height="15.0" fill="rgb(221,47,24)" rx="2" ry="2" />
<text  x="93.91" y="2015.5" >facebo..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (39 samples, 0.66%)</title><rect x="465.3" y="1989" width="7.8" height="15.0" fill="rgb(241,24,52)" rx="2" ry="2" />
<text  x="468.34" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="362.0" y="1925" width="0.4" height="15.0" fill="rgb(210,0,36)" rx="2" ry="2" />
<text  x="365.02" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.20%)</title><rect x="166.7" y="1989" width="2.4" height="15.0" fill="rgb(248,9,28)" rx="2" ry="2" />
<text  x="169.67" y="1999.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1022.8" y="1749" width="0.2" height="15.0" fill="rgb(222,77,29)" rx="2" ry="2" />
<text  x="1025.82" y="1759.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="497.9" y="1877" width="0.2" height="15.0" fill="rgb(249,212,3)" rx="2" ry="2" />
<text  x="500.87" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="344.0" y="1845" width="0.2" height="15.0" fill="rgb(236,202,21)" rx="2" ry="2" />
<text  x="346.97" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="812.8" y="2005" width="0.8" height="15.0" fill="rgb(253,19,36)" rx="2" ry="2" />
<text  x="815.80" y="2015.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="333.3" y="2005" width="0.4" height="15.0" fill="rgb(222,194,41)" rx="2" ry="2" />
<text  x="336.26" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (95 samples, 1.60%)</title><rect x="234.7" y="1589" width="18.8" height="15.0" fill="rgb(210,139,45)" rx="2" ry="2" />
<text  x="237.70" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="599.0" y="2037" width="0.6" height="15.0" fill="rgb(229,227,51)" rx="2" ry="2" />
<text  x="602.01" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (4 samples, 0.07%)</title><rect x="184.5" y="2021" width="0.8" height="15.0" fill="rgb(228,54,4)" rx="2" ry="2" />
<text  x="187.52" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="684.7" y="1893" width="0.2" height="15.0" fill="rgb(242,74,2)" rx="2" ry="2" />
<text  x="687.68" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (59 samples, 0.99%)</title><rect x="1078.9" y="1797" width="11.7" height="15.0" fill="rgb(225,38,39)" rx="2" ry="2" />
<text  x="1081.94" y="1807.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="931.0" y="1989" width="0.2" height="15.0" fill="rgb(213,165,23)" rx="2" ry="2" />
<text  x="933.99" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (10 samples, 0.17%)</title><rect x="1072.6" y="1877" width="2.0" height="15.0" fill="rgb(205,122,43)" rx="2" ry="2" />
<text  x="1075.59" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (41 samples, 0.69%)</title><rect x="524.0" y="1989" width="8.2" height="15.0" fill="rgb(227,149,25)" rx="2" ry="2" />
<text  x="527.04" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="342.8" y="1861" width="0.4" height="15.0" fill="rgb(254,85,41)" rx="2" ry="2" />
<text  x="345.78" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (4 samples, 0.07%)</title><rect x="552.2" y="1989" width="0.8" height="15.0" fill="rgb(210,226,49)" rx="2" ry="2" />
<text  x="555.21" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1397" width="39.3" height="15.0" fill="rgb(247,146,15)" rx="2" ry="2" />
<text  x="54.45" y="1407.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="823.5" y="1973" width="0.2" height="15.0" fill="rgb(215,30,45)" rx="2" ry="2" />
<text  x="826.51" y="1983.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(245,201,38)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="831.8" y="2037" width="0.4" height="15.0" fill="rgb(230,28,41)" rx="2" ry="2" />
<text  x="834.84" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (84 samples, 1.41%)</title><rect x="382.6" y="2005" width="16.7" height="15.0" fill="rgb(214,183,39)" rx="2" ry="2" />
<text  x="385.64" y="2015.5" ></text>
</g>
<g >
<title>tcp_push (183 samples, 3.08%)</title><rect x="230.5" y="1877" width="36.3" height="15.0" fill="rgb(230,62,15)" rx="2" ry="2" />
<text  x="233.53" y="1887.5" >tcp..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="501.0" y="1989" width="0.4" height="15.0" fill="rgb(248,40,53)" rx="2" ry="2" />
<text  x="504.04" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="613" width="39.3" height="15.0" fill="rgb(250,166,37)" rx="2" ry="2" />
<text  x="54.45" y="623.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="824.9" y="1973" width="0.2" height="15.0" fill="rgb(231,193,26)" rx="2" ry="2" />
<text  x="827.89" y="1983.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="694.4" y="1925" width="0.2" height="15.0" fill="rgb(237,111,24)" rx="2" ry="2" />
<text  x="697.40" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="330.9" y="1957" width="1.6" height="15.0" fill="rgb(217,167,6)" rx="2" ry="2" />
<text  x="333.88" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="174.8" y="1973" width="0.8" height="15.0" fill="rgb(222,124,54)" rx="2" ry="2" />
<text  x="177.80" y="1983.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1094.8" y="1909" width="0.2" height="15.0" fill="rgb(237,41,8)" rx="2" ry="2" />
<text  x="1097.81" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="820.7" y="2005" width="0.2" height="15.0" fill="rgb(248,13,39)" rx="2" ry="2" />
<text  x="823.73" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="819.7" y="1973" width="0.2" height="15.0" fill="rgb(227,165,49)" rx="2" ry="2" />
<text  x="822.74" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="312.2" y="1941" width="0.2" height="15.0" fill="rgb(209,132,23)" rx="2" ry="2" />
<text  x="315.24" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="337.6" y="1877" width="0.2" height="15.0" fill="rgb(229,108,25)" rx="2" ry="2" />
<text  x="340.62" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1085.1" y="1653" width="0.2" height="15.0" fill="rgb(252,122,11)" rx="2" ry="2" />
<text  x="1088.09" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1253" width="39.3" height="15.0" fill="rgb(228,147,29)" rx="2" ry="2" />
<text  x="54.45" y="1263.5" >[un..</text>
</g>
<g >
<title>__release_sock (30 samples, 0.50%)</title><rect x="1041.9" y="1909" width="5.9" height="15.0" fill="rgb(210,72,15)" rx="2" ry="2" />
<text  x="1044.86" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="614.7" y="1989" width="0.2" height="15.0" fill="rgb(213,60,42)" rx="2" ry="2" />
<text  x="617.68" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (52 samples, 0.87%)</title><rect x="354.9" y="2021" width="10.3" height="15.0" fill="rgb(209,121,35)" rx="2" ry="2" />
<text  x="357.88" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="444.7" y="1941" width="0.2" height="15.0" fill="rgb(218,131,13)" rx="2" ry="2" />
<text  x="447.72" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="310.1" y="1973" width="0.2" height="15.0" fill="rgb(234,129,29)" rx="2" ry="2" />
<text  x="313.06" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (144 samples, 2.42%)</title><rect x="901.2" y="1957" width="28.6" height="15.0" fill="rgb(248,15,45)" rx="2" ry="2" />
<text  x="904.25" y="1967.5" >fo..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="697.2" y="1989" width="0.2" height="15.0" fill="rgb(231,174,4)" rx="2" ry="2" />
<text  x="700.18" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (9 samples, 0.15%)</title><rect x="640.7" y="1941" width="1.7" height="15.0" fill="rgb(249,186,26)" rx="2" ry="2" />
<text  x="643.66" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (244 samples, 4.10%)</title><rect x="287.1" y="2021" width="48.3" height="15.0" fill="rgb(240,53,33)" rx="2" ry="2" />
<text  x="290.05" y="2031.5" >foll..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="497.9" y="1925" width="0.2" height="15.0" fill="rgb(245,164,49)" rx="2" ry="2" />
<text  x="500.87" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="322.4" y="1973" width="0.2" height="15.0" fill="rgb(245,197,13)" rx="2" ry="2" />
<text  x="325.35" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="629" width="39.3" height="15.0" fill="rgb(244,193,43)" rx="2" ry="2" />
<text  x="54.45" y="639.5" >[un..</text>
</g>
<g >
<title>epoll_wait (32 samples, 0.54%)</title><rect x="278.5" y="2037" width="6.4" height="15.0" fill="rgb(231,196,30)" rx="2" ry="2" />
<text  x="281.52" y="2047.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (9 samples, 0.15%)</title><rect x="264.2" y="1829" width="1.8" height="15.0" fill="rgb(232,43,28)" rx="2" ry="2" />
<text  x="267.25" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="837.0" y="1989" width="1.2" height="15.0" fill="rgb(249,128,51)" rx="2" ry="2" />
<text  x="839.99" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="517" width="39.3" height="15.0" fill="rgb(241,133,1)" rx="2" ry="2" />
<text  x="54.45" y="527.5" >[un..</text>
</g>
<g >
<title>copyin (5 samples, 0.08%)</title><rect x="225.2" y="1877" width="1.0" height="15.0" fill="rgb(218,141,1)" rx="2" ry="2" />
<text  x="228.18" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (5 samples, 0.08%)</title><rect x="180.8" y="1941" width="0.9" height="15.0" fill="rgb(234,172,41)" rx="2" ry="2" />
<text  x="183.75" y="1951.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="277.1" y="2037" width="0.2" height="15.0" fill="rgb(232,108,33)" rx="2" ry="2" />
<text  x="280.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="645" width="39.3" height="15.0" fill="rgb(234,184,0)" rx="2" ry="2" />
<text  x="54.45" y="655.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="565.1" y="1973" width="0.8" height="15.0" fill="rgb(213,159,45)" rx="2" ry="2" />
<text  x="568.10" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8 samples, 0.13%)</title><rect x="1133.5" y="1973" width="1.6" height="15.0" fill="rgb(253,19,8)" rx="2" ry="2" />
<text  x="1136.48" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="356.7" y="1941" width="0.2" height="15.0" fill="rgb(212,62,42)" rx="2" ry="2" />
<text  x="359.66" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="414.0" y="1941" width="0.2" height="15.0" fill="rgb(229,100,38)" rx="2" ry="2" />
<text  x="416.98" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (205 samples, 3.45%)</title><rect x="647.0" y="1925" width="40.7" height="15.0" fill="rgb(205,224,46)" rx="2" ry="2" />
<text  x="650.00" y="1935.5" >fol..</text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="964.3" y="2037" width="0.4" height="15.0" fill="rgb(246,228,40)" rx="2" ry="2" />
<text  x="967.31" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="892.5" y="1957" width="0.8" height="15.0" fill="rgb(215,61,23)" rx="2" ry="2" />
<text  x="895.52" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (9 samples, 0.15%)</title><rect x="481.6" y="2021" width="1.8" height="15.0" fill="rgb(241,149,14)" rx="2" ry="2" />
<text  x="484.60" y="2031.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="265.8" y="1749" width="0.2" height="15.0" fill="rgb(232,136,26)" rx="2" ry="2" />
<text  x="268.83" y="1759.5" ></text>
</g>
<g >
<title>sys_recvfrom (587 samples, 9.87%)</title><rect x="980.8" y="2005" width="116.4" height="15.0" fill="rgb(235,213,34)" rx="2" ry="2" />
<text  x="983.77" y="2015.5" >sys_recvfrom</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="174.6" y="1973" width="0.2" height="15.0" fill="rgb(246,154,22)" rx="2" ry="2" />
<text  x="177.61" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="1172.5" y="2053" width="0.2" height="15.0" fill="rgb(239,220,44)" rx="2" ry="2" />
<text  x="1175.55" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (4 samples, 0.07%)</title><rect x="195.4" y="2021" width="0.8" height="15.0" fill="rgb(227,207,52)" rx="2" ry="2" />
<text  x="198.43" y="2031.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (31 samples, 0.52%)</title><rect x="196.8" y="2021" width="6.2" height="15.0" fill="rgb(236,38,17)" rx="2" ry="2" />
<text  x="199.82" y="2031.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.6" y="1925" width="0.8" height="15.0" fill="rgb(247,65,34)" rx="2" ry="2" />
<text  x="14.59" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="900.5" y="1957" width="0.2" height="15.0" fill="rgb(251,33,52)" rx="2" ry="2" />
<text  x="903.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1669" width="39.3" height="15.0" fill="rgb(238,35,7)" rx="2" ry="2" />
<text  x="54.45" y="1679.5" >[un..</text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="229.7" y="1845" width="0.2" height="15.0" fill="rgb(226,37,22)" rx="2" ry="2" />
<text  x="232.74" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="545.7" y="1909" width="0.4" height="15.0" fill="rgb(211,79,11)" rx="2" ry="2" />
<text  x="548.66" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1189" width="39.3" height="15.0" fill="rgb(238,196,3)" rx="2" ry="2" />
<text  x="54.45" y="1199.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="586.9" y="1973" width="0.2" height="15.0" fill="rgb(228,179,8)" rx="2" ry="2" />
<text  x="589.91" y="1983.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (2 samples, 0.03%)</title><rect x="319.8" y="1957" width="0.4" height="15.0" fill="rgb(252,16,33)" rx="2" ry="2" />
<text  x="322.77" y="1967.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="933.6" y="1989" width="0.2" height="15.0" fill="rgb(243,100,38)" rx="2" ry="2" />
<text  x="936.57" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="568.3" y="2037" width="0.4" height="15.0" fill="rgb(236,218,26)" rx="2" ry="2" />
<text  x="571.27" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="853" width="39.3" height="15.0" fill="rgb(222,117,23)" rx="2" ry="2" />
<text  x="54.45" y="863.5" >[un..</text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1045.2" y="1845" width="0.2" height="15.0" fill="rgb(211,196,51)" rx="2" ry="2" />
<text  x="1048.23" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="87.7" y="37" width="0.4" height="15.0" fill="rgb(254,12,13)" rx="2" ry="2" />
<text  x="90.74" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (2 samples, 0.03%)</title><rect x="851.3" y="2005" width="0.4" height="15.0" fill="rgb(224,12,52)" rx="2" ry="2" />
<text  x="854.27" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="616.7" y="1989" width="0.6" height="15.0" fill="rgb(241,119,29)" rx="2" ry="2" />
<text  x="619.66" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (9 samples, 0.15%)</title><rect x="781.7" y="2005" width="1.7" height="15.0" fill="rgb(252,156,26)" rx="2" ry="2" />
<text  x="784.66" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1047.8" y="1909" width="0.2" height="15.0" fill="rgb(240,144,34)" rx="2" ry="2" />
<text  x="1050.81" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="169.4" y="1973" width="0.4" height="15.0" fill="rgb(241,111,2)" rx="2" ry="2" />
<text  x="172.45" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="620.8" y="1989" width="0.2" height="15.0" fill="rgb(254,5,13)" rx="2" ry="2" />
<text  x="623.82" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="408.8" y="2005" width="0.2" height="15.0" fill="rgb(218,13,33)" rx="2" ry="2" />
<text  x="411.82" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="41.7" y="2021" width="0.6" height="15.0" fill="rgb(231,3,9)" rx="2" ry="2" />
<text  x="44.73" y="2031.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="971.3" y="2005" width="0.2" height="15.0" fill="rgb(242,51,7)" rx="2" ry="2" />
<text  x="974.25" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.86%)</title><rect x="336.2" y="1989" width="10.1" height="15.0" fill="rgb(248,84,46)" rx="2" ry="2" />
<text  x="339.24" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (4 samples, 0.07%)</title><rect x="679.7" y="1861" width="0.8" height="15.0" fill="rgb(233,5,53)" rx="2" ry="2" />
<text  x="682.72" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="981.8" y="1973" width="0.2" height="15.0" fill="rgb(225,210,31)" rx="2" ry="2" />
<text  x="984.76" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (608 samples, 10.22%)</title><rect x="977.0" y="2037" width="120.6" height="15.0" fill="rgb(251,25,15)" rx="2" ry="2" />
<text  x="980.01" y="2047.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (3 samples, 0.05%)</title><rect x="548.8" y="1941" width="0.6" height="15.0" fill="rgb(215,92,3)" rx="2" ry="2" />
<text  x="551.83" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (130 samples, 2.18%)</title><rect x="233.7" y="1797" width="25.8" height="15.0" fill="rgb(215,83,42)" rx="2" ry="2" />
<text  x="236.70" y="1807.5" >i..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="574.0" y="1989" width="0.2" height="15.0" fill="rgb(237,28,13)" rx="2" ry="2" />
<text  x="577.02" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="968.7" y="2037" width="0.2" height="15.0" fill="rgb(248,35,52)" rx="2" ry="2" />
<text  x="971.68" y="2047.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="230.1" y="1861" width="0.2" height="15.0" fill="rgb(245,51,10)" rx="2" ry="2" />
<text  x="233.13" y="1871.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (4 samples, 0.07%)</title><rect x="270.4" y="1893" width="0.8" height="15.0" fill="rgb(215,107,30)" rx="2" ry="2" />
<text  x="273.39" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="53.6" y="37" width="0.2" height="15.0" fill="rgb(251,82,48)" rx="2" ry="2" />
<text  x="56.63" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="19.5" y="1957" width="0.2" height="15.0" fill="rgb(223,191,17)" rx="2" ry="2" />
<text  x="22.52" y="1967.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="558.0" y="1989" width="0.9" height="15.0" fill="rgb(238,207,44)" rx="2" ry="2" />
<text  x="560.96" y="1999.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="230.3" y="1877" width="0.2" height="15.0" fill="rgb(232,107,27)" rx="2" ry="2" />
<text  x="233.33" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="567.3" y="2037" width="0.6" height="15.0" fill="rgb(241,105,39)" rx="2" ry="2" />
<text  x="570.28" y="2047.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (110 samples, 1.85%)</title><rect x="1072.0" y="1925" width="21.8" height="15.0" fill="rgb(252,224,11)" rx="2" ry="2" />
<text  x="1075.00" y="1935.5" >t..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="690.4" y="1957" width="0.2" height="15.0" fill="rgb(205,223,54)" rx="2" ry="2" />
<text  x="693.43" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="414.0" y="1925" width="0.2" height="15.0" fill="rgb(224,119,48)" rx="2" ry="2" />
<text  x="416.98" y="1935.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="900.3" y="1941" width="0.2" height="15.0" fill="rgb(222,43,18)" rx="2" ry="2" />
<text  x="903.26" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="356.5" y="1957" width="0.2" height="15.0" fill="rgb(210,178,23)" rx="2" ry="2" />
<text  x="359.46" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="785.2" y="2005" width="0.2" height="15.0" fill="rgb(244,197,34)" rx="2" ry="2" />
<text  x="788.23" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.1" y="1957" width="0.2" height="15.0" fill="rgb(207,152,18)" rx="2" ry="2" />
<text  x="123.07" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (3 samples, 0.05%)</title><rect x="144.1" y="1941" width="0.6" height="15.0" fill="rgb(237,208,0)" rx="2" ry="2" />
<text  x="147.06" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="213.3" y="1877" width="1.2" height="15.0" fill="rgb(248,132,46)" rx="2" ry="2" />
<text  x="216.28" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (5 samples, 0.08%)</title><rect x="327.7" y="1957" width="1.0" height="15.0" fill="rgb(226,102,47)" rx="2" ry="2" />
<text  x="330.71" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1925" width="39.3" height="15.0" fill="rgb(211,1,8)" rx="2" ry="2" />
<text  x="54.45" y="1935.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="810.4" y="1973" width="0.6" height="15.0" fill="rgb(206,32,10)" rx="2" ry="2" />
<text  x="813.42" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="771.7" y="1989" width="1.2" height="15.0" fill="rgb(233,68,9)" rx="2" ry="2" />
<text  x="774.74" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(207,31,31)" rx="2" ry="2" />
<text  x="1192.21" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (19 samples, 0.32%)</title><rect x="515.7" y="1989" width="3.8" height="15.0" fill="rgb(208,52,18)" rx="2" ry="2" />
<text  x="518.71" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (4 samples, 0.07%)</title><rect x="548.6" y="1957" width="0.8" height="15.0" fill="rgb(215,115,43)" rx="2" ry="2" />
<text  x="551.64" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="168.3" y="1925" width="0.2" height="15.0" fill="rgb(208,20,39)" rx="2" ry="2" />
<text  x="171.26" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="314.2" y="1941" width="0.4" height="15.0" fill="rgb(211,154,36)" rx="2" ry="2" />
<text  x="317.22" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (4 samples, 0.07%)</title><rect x="644.0" y="1941" width="0.8" height="15.0" fill="rgb(249,145,11)" rx="2" ry="2" />
<text  x="647.03" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1114.0" y="1989" width="0.2" height="15.0" fill="rgb(233,69,1)" rx="2" ry="2" />
<text  x="1117.04" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (9 samples, 0.15%)</title><rect x="88.3" y="53" width="1.8" height="15.0" fill="rgb(248,209,52)" rx="2" ry="2" />
<text  x="91.34" y="63.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="364.2" y="1973" width="0.2" height="15.0" fill="rgb(228,149,3)" rx="2" ry="2" />
<text  x="367.20" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="563.1" y="1925" width="0.2" height="15.0" fill="rgb(214,154,2)" rx="2" ry="2" />
<text  x="566.11" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="20.1" y="1973" width="0.8" height="15.0" fill="rgb(229,7,22)" rx="2" ry="2" />
<text  x="23.11" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1733" width="39.3" height="15.0" fill="rgb(230,21,12)" rx="2" ry="2" />
<text  x="54.45" y="1743.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="452.1" y="1925" width="0.2" height="15.0" fill="rgb(250,50,18)" rx="2" ry="2" />
<text  x="455.05" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="616.1" y="2005" width="1.2" height="15.0" fill="rgb(220,67,8)" rx="2" ry="2" />
<text  x="619.06" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="265.0" y="1781" width="1.0" height="15.0" fill="rgb(251,138,17)" rx="2" ry="2" />
<text  x="268.04" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.1" y="1717" width="0.2" height="15.0" fill="rgb(233,195,24)" rx="2" ry="2" />
<text  x="1088.09" y="1727.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(234,94,16)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="17.7" y="1941" width="0.2" height="15.0" fill="rgb(243,103,51)" rx="2" ry="2" />
<text  x="20.73" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (10 samples, 0.17%)</title><rect x="517.5" y="1973" width="2.0" height="15.0" fill="rgb(225,141,52)" rx="2" ry="2" />
<text  x="520.50" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (10 samples, 0.17%)</title><rect x="314.6" y="1973" width="2.0" height="15.0" fill="rgb(226,181,50)" rx="2" ry="2" />
<text  x="317.62" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="17.7" y="1877" width="0.2" height="15.0" fill="rgb(242,64,14)" rx="2" ry="2" />
<text  x="20.73" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="154.0" y="1957" width="0.4" height="15.0" fill="rgb(248,101,9)" rx="2" ry="2" />
<text  x="156.98" y="1967.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="850.3" y="1989" width="0.2" height="15.0" fill="rgb(220,173,25)" rx="2" ry="2" />
<text  x="853.28" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="480.4" y="2005" width="1.0" height="15.0" fill="rgb(224,166,30)" rx="2" ry="2" />
<text  x="483.41" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="176.2" y="1941" width="0.2" height="15.0" fill="rgb(244,227,2)" rx="2" ry="2" />
<text  x="179.19" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (28 samples, 0.47%)</title><rect x="855.6" y="2005" width="5.6" height="15.0" fill="rgb(210,100,41)" rx="2" ry="2" />
<text  x="858.63" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="813.4" y="1941" width="0.2" height="15.0" fill="rgb(254,94,7)" rx="2" ry="2" />
<text  x="816.39" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="812.8" y="1989" width="0.8" height="15.0" fill="rgb(230,73,8)" rx="2" ry="2" />
<text  x="815.80" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (6 samples, 0.10%)</title><rect x="301.9" y="1973" width="1.2" height="15.0" fill="rgb(242,79,47)" rx="2" ry="2" />
<text  x="304.93" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="531.8" y="1861" width="0.2" height="15.0" fill="rgb(216,182,21)" rx="2" ry="2" />
<text  x="534.78" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="810.2" y="1989" width="1.0" height="15.0" fill="rgb(233,209,23)" rx="2" ry="2" />
<text  x="813.22" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="270.4" y="1909" width="0.8" height="15.0" fill="rgb(205,129,20)" rx="2" ry="2" />
<text  x="273.39" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.13%)</title><rect x="571.8" y="1973" width="1.6" height="15.0" fill="rgb(241,138,35)" rx="2" ry="2" />
<text  x="574.84" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.18%)</title><rect x="108.0" y="1957" width="2.2" height="15.0" fill="rgb(253,193,13)" rx="2" ry="2" />
<text  x="110.97" y="1967.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="1089.3" y="1685" width="0.4" height="15.0" fill="rgb(238,30,38)" rx="2" ry="2" />
<text  x="1092.25" y="1695.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="804.3" y="1813" width="0.8" height="15.0" fill="rgb(247,81,19)" rx="2" ry="2" />
<text  x="807.27" y="1823.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1181.5" y="2053" width="0.4" height="15.0" fill="rgb(230,1,45)" rx="2" ry="2" />
<text  x="1184.47" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="837.8" y="1973" width="0.4" height="15.0" fill="rgb(229,77,4)" rx="2" ry="2" />
<text  x="840.78" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (2 samples, 0.03%)</title><rect x="357.1" y="1973" width="0.4" height="15.0" fill="rgb(249,61,22)" rx="2" ry="2" />
<text  x="360.06" y="1983.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1070.0" y="1893" width="0.2" height="15.0" fill="rgb(224,51,35)" rx="2" ry="2" />
<text  x="1073.02" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="542.1" y="1957" width="0.2" height="15.0" fill="rgb(236,67,32)" rx="2" ry="2" />
<text  x="545.09" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (348 samples, 5.85%)</title><rect x="204.7" y="2005" width="69.1" height="15.0" fill="rgb(244,119,47)" rx="2" ry="2" />
<text  x="207.75" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="930.0" y="1989" width="0.8" height="15.0" fill="rgb(215,223,14)" rx="2" ry="2" />
<text  x="933.00" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (69 samples, 1.16%)</title><rect x="1077.2" y="1845" width="13.6" height="15.0" fill="rgb(241,218,13)" rx="2" ry="2" />
<text  x="1080.16" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (3 samples, 0.05%)</title><rect x="427.3" y="1989" width="0.6" height="15.0" fill="rgb(227,147,26)" rx="2" ry="2" />
<text  x="430.26" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="343.8" y="1829" width="0.2" height="15.0" fill="rgb(212,38,21)" rx="2" ry="2" />
<text  x="346.77" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="813.4" y="1973" width="0.2" height="15.0" fill="rgb(251,197,47)" rx="2" ry="2" />
<text  x="816.39" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (30 samples, 0.50%)</title><rect x="814.0" y="1989" width="5.9" height="15.0" fill="rgb(214,67,4)" rx="2" ry="2" />
<text  x="816.99" y="1999.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="20.1" y="1957" width="0.2" height="15.0" fill="rgb(231,22,36)" rx="2" ry="2" />
<text  x="23.11" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="183.3" y="1925" width="0.2" height="15.0" fill="rgb(238,191,21)" rx="2" ry="2" />
<text  x="186.33" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (10 samples, 0.17%)</title><rect x="354.9" y="2005" width="2.0" height="15.0" fill="rgb(218,132,42)" rx="2" ry="2" />
<text  x="357.88" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="556.8" y="1909" width="0.2" height="15.0" fill="rgb(220,11,5)" rx="2" ry="2" />
<text  x="559.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1171.8" y="2053" width="0.2" height="15.0" fill="rgb(252,74,21)" rx="2" ry="2" />
<text  x="1174.75" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="149.0" y="1973" width="0.6" height="15.0" fill="rgb(244,46,45)" rx="2" ry="2" />
<text  x="152.02" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (35 samples, 0.59%)</title><rect x="429.2" y="1989" width="7.0" height="15.0" fill="rgb(254,13,17)" rx="2" ry="2" />
<text  x="432.25" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (5 samples, 0.08%)</title><rect x="86.7" y="53" width="1.0" height="15.0" fill="rgb(246,118,38)" rx="2" ry="2" />
<text  x="89.75" y="63.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="548.4" y="1925" width="0.2" height="15.0" fill="rgb(228,27,2)" rx="2" ry="2" />
<text  x="551.44" y="1935.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (12 samples, 0.20%)</title><rect x="80.8" y="53" width="2.4" height="15.0" fill="rgb(250,12,50)" rx="2" ry="2" />
<text  x="83.80" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (234 samples, 3.93%)</title><rect x="643.2" y="1973" width="46.4" height="15.0" fill="rgb(213,204,22)" rx="2" ry="2" />
<text  x="646.23" y="1983.5" >foll..</text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="156.6" y="1941" width="0.2" height="15.0" fill="rgb(210,212,18)" rx="2" ry="2" />
<text  x="159.56" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="160.5" y="2005" width="0.2" height="15.0" fill="rgb(206,89,1)" rx="2" ry="2" />
<text  x="163.52" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="253.3" y="1333" width="0.2" height="15.0" fill="rgb(208,220,54)" rx="2" ry="2" />
<text  x="256.34" y="1343.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (3 samples, 0.05%)</title><rect x="546.5" y="1925" width="0.5" height="15.0" fill="rgb(234,197,30)" rx="2" ry="2" />
<text  x="549.45" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (12 samples, 0.20%)</title><rect x="971.5" y="2005" width="2.3" height="15.0" fill="rgb(207,209,26)" rx="2" ry="2" />
<text  x="974.45" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="875.1" y="1973" width="0.8" height="15.0" fill="rgb(225,205,52)" rx="2" ry="2" />
<text  x="878.07" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="592.9" y="1957" width="0.4" height="15.0" fill="rgb(239,70,18)" rx="2" ry="2" />
<text  x="595.86" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="638.7" y="1909" width="0.6" height="15.0" fill="rgb(240,73,1)" rx="2" ry="2" />
<text  x="641.67" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1161.0" y="2053" width="0.2" height="15.0" fill="rgb(240,90,47)" rx="2" ry="2" />
<text  x="1164.05" y="2063.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="77.8" y="37" width="0.2" height="15.0" fill="rgb(247,182,53)" rx="2" ry="2" />
<text  x="80.83" y="47.5" ></text>
</g>
<g >
<title>skb_release_data (86 samples, 1.45%)</title><rect x="1007.3" y="1893" width="17.1" height="15.0" fill="rgb(235,181,45)" rx="2" ry="2" />
<text  x="1010.35" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="182.3" y="1909" width="0.8" height="15.0" fill="rgb(213,157,1)" rx="2" ry="2" />
<text  x="185.34" y="1919.5" ></text>
</g>
<g >
<title>__snprintf_chk@plt (1 samples, 0.02%)</title><rect x="163.3" y="2021" width="0.2" height="15.0" fill="rgb(237,23,39)" rx="2" ry="2" />
<text  x="166.30" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="813.0" y="1909" width="0.4" height="15.0" fill="rgb(243,85,7)" rx="2" ry="2" />
<text  x="815.99" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(221,98,36)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="446.5" y="1925" width="0.8" height="15.0" fill="rgb(211,58,41)" rx="2" ry="2" />
<text  x="449.50" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (12 samples, 0.20%)</title><rect x="336.4" y="1941" width="2.4" height="15.0" fill="rgb(225,211,32)" rx="2" ry="2" />
<text  x="339.43" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="551.0" y="2021" width="0.8" height="15.0" fill="rgb(245,56,31)" rx="2" ry="2" />
<text  x="554.02" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="819.9" y="1989" width="0.4" height="15.0" fill="rgb(245,196,6)" rx="2" ry="2" />
<text  x="822.94" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="534.6" y="1989" width="0.5" height="15.0" fill="rgb(248,102,6)" rx="2" ry="2" />
<text  x="537.55" y="1999.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="278.5" y="1941" width="0.2" height="15.0" fill="rgb(249,117,23)" rx="2" ry="2" />
<text  x="281.52" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="455.0" y="1941" width="1.4" height="15.0" fill="rgb(210,50,6)" rx="2" ry="2" />
<text  x="458.03" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="376.9" y="2005" width="0.2" height="15.0" fill="rgb(252,3,7)" rx="2" ry="2" />
<text  x="379.89" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="263.5" y="1829" width="0.3" height="15.0" fill="rgb(248,223,28)" rx="2" ry="2" />
<text  x="266.45" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (966 samples, 16.24%)</title><rect x="618.0" y="2037" width="191.6" height="15.0" fill="rgb(215,56,19)" rx="2" ry="2" />
<text  x="621.05" y="2047.5" >facebook::memcache::thrif..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (3 samples, 0.05%)</title><rect x="308.1" y="1989" width="0.6" height="15.0" fill="rgb(205,179,35)" rx="2" ry="2" />
<text  x="311.07" y="1999.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="544.9" y="1893" width="0.2" height="15.0" fill="rgb(233,227,8)" rx="2" ry="2" />
<text  x="547.87" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.6" y="2021" width="0.8" height="15.0" fill="rgb(221,161,19)" rx="2" ry="2" />
<text  x="14.59" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (185 samples, 3.11%)</title><rect x="51.4" y="85" width="36.7" height="15.0" fill="rgb(214,157,9)" rx="2" ry="2" />
<text  x="54.45" y="95.5" >[un..</text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1074.6" y="1877" width="0.2" height="15.0" fill="rgb(227,12,40)" rx="2" ry="2" />
<text  x="1077.58" y="1887.5" ></text>
</g>
<g >
<title>discard_slab (3 samples, 0.05%)</title><rect x="1022.6" y="1797" width="0.6" height="15.0" fill="rgb(246,176,27)" rx="2" ry="2" />
<text  x="1025.62" y="1807.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="252.7" y="1461" width="0.2" height="15.0" fill="rgb(243,25,21)" rx="2" ry="2" />
<text  x="255.74" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="84.4" y="37" width="0.2" height="15.0" fill="rgb(214,170,52)" rx="2" ry="2" />
<text  x="87.37" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="451.7" y="1925" width="0.4" height="15.0" fill="rgb(238,73,45)" rx="2" ry="2" />
<text  x="454.66" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="111.3" y="1957" width="0.4" height="15.0" fill="rgb(236,39,15)" rx="2" ry="2" />
<text  x="114.34" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (14 samples, 0.24%)</title><rect x="809.6" y="2037" width="2.8" height="15.0" fill="rgb(211,44,52)" rx="2" ry="2" />
<text  x="812.62" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (304 samples, 5.11%)</title><rect x="704.1" y="1989" width="60.3" height="15.0" fill="rgb(209,73,39)" rx="2" ry="2" />
<text  x="707.12" y="1999.5" >folly:..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="450.9" y="1925" width="0.8" height="15.0" fill="rgb(212,121,20)" rx="2" ry="2" />
<text  x="453.86" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="337.8" y="1877" width="0.2" height="15.0" fill="rgb(232,1,12)" rx="2" ry="2" />
<text  x="340.82" y="1887.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="264.8" y="1813" width="0.2" height="15.0" fill="rgb(245,44,51)" rx="2" ry="2" />
<text  x="267.84" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="229" width="39.3" height="15.0" fill="rgb(238,105,19)" rx="2" ry="2" />
<text  x="54.45" y="239.5" >[un..</text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="83.2" y="69" width="0.8" height="15.0" fill="rgb(236,65,1)" rx="2" ry="2" />
<text  x="86.18" y="79.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="850.3" y="2005" width="0.2" height="15.0" fill="rgb(218,195,11)" rx="2" ry="2" />
<text  x="853.28" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1509" width="39.3" height="15.0" fill="rgb(220,138,35)" rx="2" ry="2" />
<text  x="54.45" y="1519.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (4 samples, 0.07%)</title><rect x="164.5" y="2021" width="0.8" height="15.0" fill="rgb(234,84,36)" rx="2" ry="2" />
<text  x="167.49" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (6 samples, 0.10%)</title><rect x="1045.6" y="1845" width="1.2" height="15.0" fill="rgb(205,8,18)" rx="2" ry="2" />
<text  x="1048.62" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(209,157,24)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (95 samples, 1.60%)</title><rect x="234.7" y="1701" width="18.8" height="15.0" fill="rgb(236,70,30)" rx="2" ry="2" />
<text  x="237.70" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="312.8" y="1941" width="0.6" height="15.0" fill="rgb(207,104,15)" rx="2" ry="2" />
<text  x="315.83" y="1951.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (5 samples, 0.08%)</title><rect x="270.2" y="1925" width="1.0" height="15.0" fill="rgb(228,35,5)" rx="2" ry="2" />
<text  x="273.19" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="337.6" y="1893" width="0.2" height="15.0" fill="rgb(222,159,29)" rx="2" ry="2" />
<text  x="340.62" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (52 samples, 0.87%)</title><rect x="1080.3" y="1765" width="10.3" height="15.0" fill="rgb(249,30,18)" rx="2" ry="2" />
<text  x="1083.33" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="174.0" y="1989" width="0.2" height="15.0" fill="rgb(254,31,12)" rx="2" ry="2" />
<text  x="177.01" y="1999.5" ></text>
</g>
<g >
<title>rb_erase (18 samples, 0.30%)</title><rect x="249.2" y="1461" width="3.5" height="15.0" fill="rgb(216,4,35)" rx="2" ry="2" />
<text  x="252.17" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (24 samples, 0.40%)</title><rect x="54.4" y="37" width="4.8" height="15.0" fill="rgb(225,146,8)" rx="2" ry="2" />
<text  x="57.42" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1097.6" y="2037" width="0.2" height="15.0" fill="rgb(216,206,27)" rx="2" ry="2" />
<text  x="1100.58" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="933.4" y="1989" width="0.2" height="15.0" fill="rgb(219,11,37)" rx="2" ry="2" />
<text  x="936.37" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1893" width="39.3" height="15.0" fill="rgb(213,85,34)" rx="2" ry="2" />
<text  x="54.45" y="1903.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="18.5" y="1941" width="0.4" height="15.0" fill="rgb(209,113,4)" rx="2" ry="2" />
<text  x="21.53" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.13%)</title><rect x="836.8" y="2021" width="1.6" height="15.0" fill="rgb(244,180,38)" rx="2" ry="2" />
<text  x="839.79" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (2 samples, 0.03%)</title><rect x="1160.6" y="2053" width="0.4" height="15.0" fill="rgb(247,39,14)" rx="2" ry="2" />
<text  x="1163.65" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="133" width="39.3" height="15.0" fill="rgb(246,158,23)" rx="2" ry="2" />
<text  x="54.45" y="143.5" >[un..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="658.3" y="1813" width="0.2" height="15.0" fill="rgb(227,6,29)" rx="2" ry="2" />
<text  x="661.31" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="11.6" y="2037" width="0.8" height="15.0" fill="rgb(226,129,25)" rx="2" ry="2" />
<text  x="14.59" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="933.8" y="1989" width="0.6" height="15.0" fill="rgb(253,95,26)" rx="2" ry="2" />
<text  x="936.77" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="83.2" y="37" width="0.4" height="15.0" fill="rgb(241,172,12)" rx="2" ry="2" />
<text  x="86.18" y="47.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="226.4" y="1877" width="0.4" height="15.0" fill="rgb(241,0,51)" rx="2" ry="2" />
<text  x="229.37" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.5" y="1941" width="0.2" height="15.0" fill="rgb(249,7,8)" rx="2" ry="2" />
<text  x="22.52" y="1951.5" ></text>
</g>
<g >
<title>___sys_sendmsg (318 samples, 5.34%)</title><rect x="208.1" y="1957" width="63.1" height="15.0" fill="rgb(236,128,14)" rx="2" ry="2" />
<text  x="211.12" y="1967.5" >___sys..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="314.2" y="1925" width="0.4" height="15.0" fill="rgb(220,26,3)" rx="2" ry="2" />
<text  x="317.22" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (6 samples, 0.10%)</title><rect x="1093.8" y="1925" width="1.2" height="15.0" fill="rgb(223,229,46)" rx="2" ry="2" />
<text  x="1096.82" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="813.4" y="1925" width="0.2" height="15.0" fill="rgb(248,225,3)" rx="2" ry="2" />
<text  x="816.39" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="549.2" y="1909" width="0.2" height="15.0" fill="rgb(235,34,52)" rx="2" ry="2" />
<text  x="552.23" y="1919.5" ></text>
</g>
<g >
<title>process_backlog (95 samples, 1.60%)</title><rect x="234.7" y="1653" width="18.8" height="15.0" fill="rgb(250,203,20)" rx="2" ry="2" />
<text  x="237.70" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="307.3" y="1941" width="0.4" height="15.0" fill="rgb(215,65,32)" rx="2" ry="2" />
<text  x="310.28" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.59%)</title><rect x="559.5" y="2021" width="7.0" height="15.0" fill="rgb(221,137,17)" rx="2" ry="2" />
<text  x="562.54" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="333.7" y="2005" width="0.2" height="15.0" fill="rgb(211,64,6)" rx="2" ry="2" />
<text  x="336.66" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="1045.0" y="1845" width="0.2" height="15.0" fill="rgb(228,84,24)" rx="2" ry="2" />
<text  x="1048.03" y="1855.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="345.0" y="1877" width="0.2" height="15.0" fill="rgb(218,112,15)" rx="2" ry="2" />
<text  x="347.96" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (6 samples, 0.10%)</title><rect x="685.7" y="1909" width="1.2" height="15.0" fill="rgb(212,162,16)" rx="2" ry="2" />
<text  x="688.67" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (40 samples, 0.67%)</title><rect x="400.3" y="2005" width="7.9" height="15.0" fill="rgb(215,113,39)" rx="2" ry="2" />
<text  x="403.29" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="12.6" y="1957" width="1.0" height="15.0" fill="rgb(235,222,0)" rx="2" ry="2" />
<text  x="15.58" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (16 samples, 0.27%)</title><rect x="912.0" y="1909" width="3.1" height="15.0" fill="rgb(233,213,45)" rx="2" ry="2" />
<text  x="914.96" y="1919.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="90.7" y="1989" width="0.2" height="15.0" fill="rgb(250,50,38)" rx="2" ry="2" />
<text  x="93.72" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (23 samples, 0.39%)</title><rect x="511.2" y="1989" width="4.5" height="15.0" fill="rgb(226,78,46)" rx="2" ry="2" />
<text  x="514.15" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="305.3" y="1941" width="0.2" height="15.0" fill="rgb(228,120,50)" rx="2" ry="2" />
<text  x="308.30" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (57 samples, 0.96%)</title><rect x="130.6" y="1941" width="11.3" height="15.0" fill="rgb(219,186,12)" rx="2" ry="2" />
<text  x="133.58" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (142 samples, 2.39%)</title><rect x="120.3" y="1973" width="28.1" height="15.0" fill="rgb(220,4,45)" rx="2" ry="2" />
<text  x="123.27" y="1983.5" >f..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="83.0" y="37" width="0.2" height="15.0" fill="rgb(217,41,23)" rx="2" ry="2" />
<text  x="85.98" y="47.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="149.6" y="1973" width="0.4" height="15.0" fill="rgb(222,99,8)" rx="2" ry="2" />
<text  x="152.62" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="964.1" y="2037" width="0.2" height="15.0" fill="rgb(233,222,32)" rx="2" ry="2" />
<text  x="967.11" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="559.5" y="2005" width="1.4" height="15.0" fill="rgb(214,144,40)" rx="2" ry="2" />
<text  x="562.54" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="110.5" y="1957" width="0.4" height="15.0" fill="rgb(223,107,42)" rx="2" ry="2" />
<text  x="113.55" y="1967.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (34 samples, 0.57%)</title><rect x="42.3" y="2037" width="6.8" height="15.0" fill="rgb(211,3,35)" rx="2" ry="2" />
<text  x="45.33" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (127 samples, 2.13%)</title><rect x="1122.4" y="2037" width="25.2" height="15.0" fill="rgb(225,86,53)" rx="2" ry="2" />
<text  x="1125.37" y="2047.5" >f..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="602.8" y="2021" width="0.2" height="15.0" fill="rgb(208,15,17)" rx="2" ry="2" />
<text  x="605.78" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="933" width="39.3" height="15.0" fill="rgb(227,36,13)" rx="2" ry="2" />
<text  x="54.45" y="943.5" >[un..</text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="190.7" y="2021" width="0.2" height="15.0" fill="rgb(233,207,5)" rx="2" ry="2" />
<text  x="193.67" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="548.6" y="1925" width="0.2" height="15.0" fill="rgb(239,181,20)" rx="2" ry="2" />
<text  x="551.64" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (63 samples, 1.06%)</title><rect x="993.3" y="1877" width="12.5" height="15.0" fill="rgb(225,173,52)" rx="2" ry="2" />
<text  x="996.27" y="1887.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="804.3" y="1957" width="0.8" height="15.0" fill="rgb(236,137,34)" rx="2" ry="2" />
<text  x="807.27" y="1967.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1099.2" y="2053" width="0.2" height="15.0" fill="rgb(234,181,34)" rx="2" ry="2" />
<text  x="1102.17" y="2063.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (6 samples, 0.10%)</title><rect x="1045.6" y="1829" width="1.2" height="15.0" fill="rgb(228,32,46)" rx="2" ry="2" />
<text  x="1048.62" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="332.9" y="1973" width="0.2" height="15.0" fill="rgb(212,152,3)" rx="2" ry="2" />
<text  x="335.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.86%)</title><rect x="336.2" y="2021" width="10.1" height="15.0" fill="rgb(213,3,48)" rx="2" ry="2" />
<text  x="339.24" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="156.2" y="1941" width="0.2" height="15.0" fill="rgb(207,190,51)" rx="2" ry="2" />
<text  x="159.16" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="557.8" y="1989" width="0.2" height="15.0" fill="rgb(211,122,40)" rx="2" ry="2" />
<text  x="560.76" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="809.2" y="2005" width="0.4" height="15.0" fill="rgb(212,182,43)" rx="2" ry="2" />
<text  x="812.23" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="180.2" y="1909" width="0.6" height="15.0" fill="rgb(235,124,29)" rx="2" ry="2" />
<text  x="183.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="414.2" y="2005" width="0.4" height="15.0" fill="rgb(239,106,18)" rx="2" ry="2" />
<text  x="417.17" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="282.3" y="1893" width="0.2" height="15.0" fill="rgb(227,211,26)" rx="2" ry="2" />
<text  x="285.29" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="617.7" y="1973" width="0.1" height="15.0" fill="rgb(213,69,51)" rx="2" ry="2" />
<text  x="620.65" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="110.7" y="1941" width="0.2" height="15.0" fill="rgb(238,46,30)" rx="2" ry="2" />
<text  x="113.75" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (92 samples, 1.55%)</title><rect x="1074.8" y="1877" width="18.2" height="15.0" fill="rgb(234,10,52)" rx="2" ry="2" />
<text  x="1077.78" y="1887.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="347.1" y="2005" width="0.2" height="15.0" fill="rgb(248,112,16)" rx="2" ry="2" />
<text  x="350.14" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="614.7" y="2005" width="0.2" height="15.0" fill="rgb(208,26,42)" rx="2" ry="2" />
<text  x="617.68" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="287.4" y="1941" width="0.2" height="15.0" fill="rgb(214,177,33)" rx="2" ry="2" />
<text  x="290.45" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="901.2" y="1925" width="0.2" height="15.0" fill="rgb(238,115,51)" rx="2" ry="2" />
<text  x="904.25" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (3 samples, 0.05%)</title><rect x="41.7" y="2037" width="0.6" height="15.0" fill="rgb(221,115,31)" rx="2" ry="2" />
<text  x="44.73" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1077" width="39.3" height="15.0" fill="rgb(215,141,48)" rx="2" ry="2" />
<text  x="54.45" y="1087.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="709" width="39.3" height="15.0" fill="rgb(227,23,1)" rx="2" ry="2" />
<text  x="54.45" y="719.5" >[un..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1176.9" y="2037" width="0.8" height="15.0" fill="rgb(242,122,8)" rx="2" ry="2" />
<text  x="1179.91" y="2047.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="658.3" y="1861" width="0.2" height="15.0" fill="rgb(229,23,29)" rx="2" ry="2" />
<text  x="661.31" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1095.6" y="1925" width="0.2" height="15.0" fill="rgb(231,220,52)" rx="2" ry="2" />
<text  x="1098.60" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="348.1" y="2005" width="0.4" height="15.0" fill="rgb(213,193,32)" rx="2" ry="2" />
<text  x="351.13" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="179.6" y="1909" width="0.4" height="15.0" fill="rgb(251,32,17)" rx="2" ry="2" />
<text  x="182.56" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (12 samples, 0.20%)</title><rect x="555.0" y="1973" width="2.4" height="15.0" fill="rgb(237,195,15)" rx="2" ry="2" />
<text  x="557.98" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="549.2" y="1877" width="0.2" height="15.0" fill="rgb(228,69,36)" rx="2" ry="2" />
<text  x="552.23" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (25 samples, 0.42%)</title><rect x="303.1" y="1989" width="5.0" height="15.0" fill="rgb(217,71,2)" rx="2" ry="2" />
<text  x="306.12" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="894.5" y="1989" width="0.2" height="15.0" fill="rgb(244,80,48)" rx="2" ry="2" />
<text  x="897.50" y="1999.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.6" y="1941" width="0.8" height="15.0" fill="rgb(225,165,31)" rx="2" ry="2" />
<text  x="14.59" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="542.5" y="1909" width="0.4" height="15.0" fill="rgb(241,168,26)" rx="2" ry="2" />
<text  x="545.49" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (4 samples, 0.07%)</title><rect x="783.4" y="2005" width="0.8" height="15.0" fill="rgb(228,107,50)" rx="2" ry="2" />
<text  x="786.45" y="2015.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (2 samples, 0.03%)</title><rect x="316.2" y="1957" width="0.4" height="15.0" fill="rgb(207,123,37)" rx="2" ry="2" />
<text  x="319.21" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (30 samples, 0.50%)</title><rect x="894.7" y="1989" width="6.0" height="15.0" fill="rgb(217,29,6)" rx="2" ry="2" />
<text  x="897.70" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="546.7" y="1861" width="0.2" height="15.0" fill="rgb(234,84,28)" rx="2" ry="2" />
<text  x="549.65" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4 samples, 0.07%)</title><rect x="301.1" y="1941" width="0.8" height="15.0" fill="rgb(233,173,46)" rx="2" ry="2" />
<text  x="304.13" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (6 samples, 0.10%)</title><rect x="968.9" y="2005" width="1.2" height="15.0" fill="rgb(245,153,7)" rx="2" ry="2" />
<text  x="971.87" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="332.5" y="1957" width="0.4" height="15.0" fill="rgb(239,16,30)" rx="2" ry="2" />
<text  x="335.47" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1173.1" y="2053" width="0.2" height="15.0" fill="rgb(210,12,16)" rx="2" ry="2" />
<text  x="1176.14" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (1 samples, 0.02%)</title><rect x="19.7" y="1973" width="0.2" height="15.0" fill="rgb(254,21,39)" rx="2" ry="2" />
<text  x="22.72" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="178.8" y="1925" width="0.4" height="15.0" fill="rgb(239,63,14)" rx="2" ry="2" />
<text  x="181.77" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="483.4" y="2021" width="0.4" height="15.0" fill="rgb(244,43,36)" rx="2" ry="2" />
<text  x="486.39" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="497.9" y="1941" width="0.2" height="15.0" fill="rgb(223,215,54)" rx="2" ry="2" />
<text  x="500.87" y="1951.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="472.9" y="1861" width="0.2" height="15.0" fill="rgb(213,163,53)" rx="2" ry="2" />
<text  x="475.88" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="1114.8" y="2053" width="0.2" height="15.0" fill="rgb(230,120,42)" rx="2" ry="2" />
<text  x="1117.84" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (13 samples, 0.22%)</title><rect x="506.0" y="1957" width="2.6" height="15.0" fill="rgb(248,171,37)" rx="2" ry="2" />
<text  x="509.00" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (226 samples, 3.80%)</title><rect x="288.4" y="2005" width="44.9" height="15.0" fill="rgb(231,5,21)" rx="2" ry="2" />
<text  x="291.44" y="2015.5" >foll..</text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(250,156,5)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>tcp_write_xmit (181 samples, 3.04%)</title><rect x="230.9" y="1845" width="35.9" height="15.0" fill="rgb(213,6,45)" rx="2" ry="2" />
<text  x="233.93" y="1855.5" >tcp..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="10.2" y="2021" width="1.0" height="15.0" fill="rgb(212,133,12)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="696.8" y="1925" width="0.2" height="15.0" fill="rgb(231,42,5)" rx="2" ry="2" />
<text  x="699.78" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="551.8" y="1989" width="0.4" height="15.0" fill="rgb(253,31,4)" rx="2" ry="2" />
<text  x="554.81" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (10 samples, 0.17%)</title><rect x="72.7" y="53" width="2.0" height="15.0" fill="rgb(221,169,53)" rx="2" ry="2" />
<text  x="75.67" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="171.8" y="1989" width="0.6" height="15.0" fill="rgb(253,61,28)" rx="2" ry="2" />
<text  x="174.83" y="1999.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="226.6" y="1813" width="0.2" height="15.0" fill="rgb(246,228,39)" rx="2" ry="2" />
<text  x="229.56" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="556.4" y="1925" width="0.2" height="15.0" fill="rgb(232,28,1)" rx="2" ry="2" />
<text  x="559.37" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="694.2" y="1941" width="0.8" height="15.0" fill="rgb(219,191,32)" rx="2" ry="2" />
<text  x="697.20" y="1951.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.6" y="1957" width="0.8" height="15.0" fill="rgb(216,101,4)" rx="2" ry="2" />
<text  x="14.59" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="308.1" y="1941" width="0.6" height="15.0" fill="rgb(254,149,29)" rx="2" ry="2" />
<text  x="311.07" y="1951.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1071.6" y="1893" width="0.4" height="15.0" fill="rgb(227,145,52)" rx="2" ry="2" />
<text  x="1074.60" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="757" width="39.3" height="15.0" fill="rgb(227,36,12)" rx="2" ry="2" />
<text  x="54.45" y="767.5" >[un..</text>
</g>
<g >
<title>__libc_sendmsg (369 samples, 6.20%)</title><rect x="203.0" y="2037" width="73.1" height="15.0" fill="rgb(212,143,33)" rx="2" ry="2" />
<text  x="205.96" y="2047.5" >__libc_s..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (26 samples, 0.44%)</title><rect x="291.8" y="1973" width="5.2" height="15.0" fill="rgb(209,185,21)" rx="2" ry="2" />
<text  x="294.81" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (9 samples, 0.15%)</title><rect x="17.9" y="1973" width="1.8" height="15.0" fill="rgb(232,1,49)" rx="2" ry="2" />
<text  x="20.93" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (4 samples, 0.07%)</title><rect x="153.8" y="1989" width="0.8" height="15.0" fill="rgb(226,210,20)" rx="2" ry="2" />
<text  x="156.78" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="329.1" y="1989" width="0.4" height="15.0" fill="rgb(247,209,12)" rx="2" ry="2" />
<text  x="332.10" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="661" width="39.3" height="15.0" fill="rgb(216,223,42)" rx="2" ry="2" />
<text  x="54.45" y="671.5" >[un..</text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="606.1" y="1893" width="0.2" height="15.0" fill="rgb(213,138,31)" rx="2" ry="2" />
<text  x="609.15" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="787.0" y="1989" width="0.4" height="15.0" fill="rgb(223,26,53)" rx="2" ry="2" />
<text  x="790.02" y="1999.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="834.4" y="2037" width="0.4" height="15.0" fill="rgb(236,210,41)" rx="2" ry="2" />
<text  x="837.41" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="357.5" y="1925" width="0.2" height="15.0" fill="rgb(213,191,43)" rx="2" ry="2" />
<text  x="360.46" y="1935.5" ></text>
</g>
<g >
<title>__memchr_avx2 (4 samples, 0.07%)</title><rect x="276.1" y="2037" width="0.8" height="15.0" fill="rgb(214,63,45)" rx="2" ry="2" />
<text  x="279.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,703 samples, 79.04%)</title><rect x="41.7" y="2053" width="932.7" height="15.0" fill="rgb(225,168,2)" rx="2" ry="2" />
<text  x="44.73" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="325" width="39.3" height="15.0" fill="rgb(250,151,37)" rx="2" ry="2" />
<text  x="54.45" y="335.5" >[un..</text>
</g>
<g >
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="1090.8" y="1845" width="0.6" height="15.0" fill="rgb(251,75,15)" rx="2" ry="2" />
<text  x="1093.84" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="346.3" y="2037" width="0.2" height="15.0" fill="rgb(252,79,47)" rx="2" ry="2" />
<text  x="349.35" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="352.9" y="2005" width="0.2" height="15.0" fill="rgb(235,117,25)" rx="2" ry="2" />
<text  x="355.89" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="556.8" y="1893" width="0.2" height="15.0" fill="rgb(248,170,42)" rx="2" ry="2" />
<text  x="559.77" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="361.6" y="1909" width="0.2" height="15.0" fill="rgb(208,31,35)" rx="2" ry="2" />
<text  x="364.62" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="142.5" y="1941" width="0.2" height="15.0" fill="rgb(206,170,34)" rx="2" ry="2" />
<text  x="145.48" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="850.9" y="2005" width="0.2" height="15.0" fill="rgb(217,57,33)" rx="2" ry="2" />
<text  x="853.87" y="2015.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="207.5" y="1941" width="0.2" height="15.0" fill="rgb(235,6,10)" rx="2" ry="2" />
<text  x="210.53" y="1951.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(234,222,21)" rx="2" ry="2" />
<text  x="15.38" y="2079.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="325.7" y="1909" width="0.4" height="15.0" fill="rgb(249,103,12)" rx="2" ry="2" />
<text  x="328.72" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (10 samples, 0.17%)</title><rect x="919.9" y="1893" width="2.0" height="15.0" fill="rgb(215,204,33)" rx="2" ry="2" />
<text  x="922.89" y="1903.5" ></text>
</g>
<g >
<title>netdev_pick_tx (3 samples, 0.05%)</title><rect x="253.9" y="1701" width="0.6" height="15.0" fill="rgb(215,138,52)" rx="2" ry="2" />
<text  x="256.93" y="1711.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="686.9" y="1909" width="0.2" height="15.0" fill="rgb(243,218,29)" rx="2" ry="2" />
<text  x="689.86" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (5 samples, 0.08%)</title><rect x="615.1" y="1989" width="1.0" height="15.0" fill="rgb(245,125,29)" rx="2" ry="2" />
<text  x="618.07" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="498.9" y="1989" width="0.4" height="15.0" fill="rgb(210,23,44)" rx="2" ry="2" />
<text  x="501.86" y="1999.5" ></text>
</g>
<g >
<title>event_active_nolock_ (3 samples, 0.05%)</title><rect x="41.7" y="2005" width="0.6" height="15.0" fill="rgb(223,13,54)" rx="2" ry="2" />
<text  x="44.73" y="2015.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="269.4" y="1797" width="0.2" height="15.0" fill="rgb(214,207,33)" rx="2" ry="2" />
<text  x="272.40" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="635.1" y="1925" width="1.2" height="15.0" fill="rgb(218,204,48)" rx="2" ry="2" />
<text  x="638.10" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (39 samples, 0.66%)</title><rect x="551.8" y="2037" width="7.7" height="15.0" fill="rgb(231,8,39)" rx="2" ry="2" />
<text  x="554.81" y="2047.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="284.1" y="1893" width="0.8" height="15.0" fill="rgb(249,8,22)" rx="2" ry="2" />
<text  x="287.08" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="689.0" y="1909" width="0.4" height="15.0" fill="rgb(223,19,52)" rx="2" ry="2" />
<text  x="692.05" y="1919.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="253.1" y="1349" width="0.4" height="15.0" fill="rgb(225,28,2)" rx="2" ry="2" />
<text  x="256.14" y="1359.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (7 samples, 0.12%)</title><rect x="836.8" y="2005" width="1.4" height="15.0" fill="rgb(232,156,30)" rx="2" ry="2" />
<text  x="839.79" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (18 samples, 0.30%)</title><rect x="329.5" y="1989" width="3.6" height="15.0" fill="rgb(221,15,46)" rx="2" ry="2" />
<text  x="332.49" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="546.7" y="1877" width="0.2" height="15.0" fill="rgb(206,109,23)" rx="2" ry="2" />
<text  x="549.65" y="1887.5" ></text>
</g>
<g >
<title>sock_poll (22 samples, 0.37%)</title><rect x="280.5" y="1909" width="4.4" height="15.0" fill="rgb(250,62,48)" rx="2" ry="2" />
<text  x="283.51" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="542.5" y="1925" width="0.4" height="15.0" fill="rgb(238,159,42)" rx="2" ry="2" />
<text  x="545.49" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="926.6" y="1909" width="0.2" height="15.0" fill="rgb(247,149,21)" rx="2" ry="2" />
<text  x="929.63" y="1919.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="658.5" y="1813" width="0.2" height="15.0" fill="rgb(241,52,26)" rx="2" ry="2" />
<text  x="661.50" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="921.7" y="1877" width="0.2" height="15.0" fill="rgb(215,168,29)" rx="2" ry="2" />
<text  x="924.67" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.54%)</title><rect x="278.5" y="2021" width="6.4" height="15.0" fill="rgb(251,145,8)" rx="2" ry="2" />
<text  x="281.52" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1973" width="39.3" height="15.0" fill="rgb(231,33,23)" rx="2" ry="2" />
<text  x="54.45" y="1983.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (3 samples, 0.05%)</title><rect x="346.5" y="2037" width="0.6" height="15.0" fill="rgb(209,120,19)" rx="2" ry="2" />
<text  x="349.55" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (5 samples, 0.08%)</title><rect x="553.0" y="1989" width="1.0" height="15.0" fill="rgb(240,207,26)" rx="2" ry="2" />
<text  x="556.00" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (2 samples, 0.03%)</title><rect x="1150.7" y="2005" width="0.4" height="15.0" fill="rgb(246,6,16)" rx="2" ry="2" />
<text  x="1153.73" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="880.2" y="1877" width="0.2" height="15.0" fill="rgb(222,89,12)" rx="2" ry="2" />
<text  x="883.23" y="1887.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="414.0" y="1893" width="0.2" height="15.0" fill="rgb(206,204,22)" rx="2" ry="2" />
<text  x="416.98" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (144 samples, 2.42%)</title><rect x="901.2" y="1989" width="28.6" height="15.0" fill="rgb(208,11,46)" rx="2" ry="2" />
<text  x="904.25" y="1999.5" >fo..</text>
</g>
<g >
<title>ep_item_poll.isra.12 (26 samples, 0.44%)</title><rect x="279.7" y="1925" width="5.2" height="15.0" fill="rgb(214,167,52)" rx="2" ry="2" />
<text  x="282.71" y="1935.5" ></text>
</g>
<g >
<title>put_cpu_partial (4 samples, 0.07%)</title><rect x="1022.4" y="1829" width="0.8" height="15.0" fill="rgb(215,187,9)" rx="2" ry="2" />
<text  x="1025.42" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="68.7" y="37" width="0.8" height="15.0" fill="rgb(254,1,44)" rx="2" ry="2" />
<text  x="71.70" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (57 samples, 0.96%)</title><rect x="538.5" y="2005" width="11.3" height="15.0" fill="rgb(225,89,15)" rx="2" ry="2" />
<text  x="541.52" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="253.1" y="1429" width="0.4" height="15.0" fill="rgb(246,119,22)" rx="2" ry="2" />
<text  x="256.14" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="341" width="39.3" height="15.0" fill="rgb(224,98,5)" rx="2" ry="2" />
<text  x="54.45" y="351.5" >[un..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="472.9" y="1973" width="0.2" height="15.0" fill="rgb(229,114,10)" rx="2" ry="2" />
<text  x="475.88" y="1983.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="472.9" y="1893" width="0.2" height="15.0" fill="rgb(240,37,54)" rx="2" ry="2" />
<text  x="475.88" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="88.3" y="69" width="2.4" height="15.0" fill="rgb(208,62,52)" rx="2" ry="2" />
<text  x="91.34" y="79.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1046.2" y="1797" width="0.4" height="15.0" fill="rgb(217,128,17)" rx="2" ry="2" />
<text  x="1049.22" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="389" width="39.3" height="15.0" fill="rgb(219,88,11)" rx="2" ry="2" />
<text  x="54.45" y="399.5" >[un..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="874.9" y="1957" width="0.2" height="15.0" fill="rgb(245,27,5)" rx="2" ry="2" />
<text  x="877.87" y="1967.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="253.7" y="1637" width="0.2" height="15.0" fill="rgb(227,209,30)" rx="2" ry="2" />
<text  x="256.73" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="524.4" y="1973" width="0.2" height="15.0" fill="rgb(227,209,18)" rx="2" ry="2" />
<text  x="527.44" y="1983.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="316.0" y="1925" width="0.2" height="15.0" fill="rgb(224,124,21)" rx="2" ry="2" />
<text  x="319.01" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (349 samples, 5.87%)</title><rect x="204.7" y="2021" width="69.3" height="15.0" fill="rgb(229,220,10)" rx="2" ry="2" />
<text  x="207.75" y="2031.5" >entry_S..</text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="278.5" y="1957" width="0.2" height="15.0" fill="rgb(206,181,41)" rx="2" ry="2" />
<text  x="281.52" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="414.0" y="1909" width="0.2" height="15.0" fill="rgb(251,129,53)" rx="2" ry="2" />
<text  x="416.98" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="684.3" y="1893" width="0.2" height="15.0" fill="rgb(251,138,33)" rx="2" ry="2" />
<text  x="687.29" y="1903.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (11 samples, 0.18%)</title><rect x="257.1" y="1685" width="2.2" height="15.0" fill="rgb(223,22,46)" rx="2" ry="2" />
<text  x="260.11" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (23 samples, 0.39%)</title><rect x="631.9" y="1941" width="4.6" height="15.0" fill="rgb(234,171,10)" rx="2" ry="2" />
<text  x="634.93" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.24%)</title><rect x="563.7" y="2005" width="2.8" height="15.0" fill="rgb(233,145,16)" rx="2" ry="2" />
<text  x="566.71" y="2015.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="804.3" y="1781" width="0.8" height="15.0" fill="rgb(224,162,51)" rx="2" ry="2" />
<text  x="807.27" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="824.9" y="1957" width="0.2" height="15.0" fill="rgb(228,166,23)" rx="2" ry="2" />
<text  x="827.89" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="338.0" y="1877" width="0.2" height="15.0" fill="rgb(208,184,9)" rx="2" ry="2" />
<text  x="341.02" y="1887.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="235.1" y="1477" width="0.2" height="15.0" fill="rgb(238,10,14)" rx="2" ry="2" />
<text  x="238.09" y="1487.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="687.7" y="1909" width="0.2" height="15.0" fill="rgb(232,109,15)" rx="2" ry="2" />
<text  x="690.66" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1845" width="39.3" height="15.0" fill="rgb(235,86,1)" rx="2" ry="2" />
<text  x="54.45" y="1855.5" >[un..</text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1005.6" y="1861" width="0.2" height="15.0" fill="rgb(217,24,19)" rx="2" ry="2" />
<text  x="1008.56" y="1871.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="214.5" y="1893" width="0.4" height="15.0" fill="rgb(211,39,42)" rx="2" ry="2" />
<text  x="217.47" y="1903.5" ></text>
</g>
<g >
<title>skb_try_coalesce (1 samples, 0.02%)</title><rect x="1047.6" y="1829" width="0.2" height="15.0" fill="rgb(208,177,49)" rx="2" ry="2" />
<text  x="1050.61" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (16 samples, 0.27%)</title><rect x="1111.3" y="2037" width="3.1" height="15.0" fill="rgb(229,192,26)" rx="2" ry="2" />
<text  x="1114.27" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="811.0" y="1973" width="0.2" height="15.0" fill="rgb(235,227,54)" rx="2" ry="2" />
<text  x="814.01" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="483.6" y="2005" width="0.2" height="15.0" fill="rgb(234,211,7)" rx="2" ry="2" />
<text  x="486.59" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="308.1" y="1973" width="0.6" height="15.0" fill="rgb(243,38,0)" rx="2" ry="2" />
<text  x="311.07" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="450.5" y="1909" width="0.2" height="15.0" fill="rgb(209,169,10)" rx="2" ry="2" />
<text  x="453.47" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="213" width="39.3" height="15.0" fill="rgb(206,186,36)" rx="2" ry="2" />
<text  x="54.45" y="223.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="154.2" y="1941" width="0.2" height="15.0" fill="rgb(232,125,31)" rx="2" ry="2" />
<text  x="157.18" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (6 samples, 0.10%)</title><rect x="294.6" y="1909" width="1.2" height="15.0" fill="rgb(213,143,11)" rx="2" ry="2" />
<text  x="297.59" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="932.0" y="1957" width="0.2" height="15.0" fill="rgb(206,80,15)" rx="2" ry="2" />
<text  x="934.99" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (52 samples, 0.87%)</title><rect x="354.9" y="2037" width="10.3" height="15.0" fill="rgb(237,21,28)" rx="2" ry="2" />
<text  x="357.88" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1029" width="39.3" height="15.0" fill="rgb(249,71,11)" rx="2" ry="2" />
<text  x="54.45" y="1039.5" >[un..</text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="253.1" y="1461" width="0.4" height="15.0" fill="rgb(227,198,20)" rx="2" ry="2" />
<text  x="256.14" y="1471.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="181.0" y="1909" width="0.1" height="15.0" fill="rgb(224,57,39)" rx="2" ry="2" />
<text  x="183.95" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (6 samples, 0.10%)</title><rect x="151.6" y="1973" width="1.2" height="15.0" fill="rgb(212,106,33)" rx="2" ry="2" />
<text  x="154.60" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="850.3" y="1973" width="0.2" height="15.0" fill="rgb(205,144,2)" rx="2" ry="2" />
<text  x="853.28" y="1983.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1098.8" y="2053" width="0.2" height="15.0" fill="rgb(253,210,53)" rx="2" ry="2" />
<text  x="1101.77" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McSetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="563.3" y="2005" width="0.4" height="15.0" fill="rgb(229,107,29)" rx="2" ry="2" />
<text  x="566.31" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="618.6" y="2005" width="0.2" height="15.0" fill="rgb(252,73,46)" rx="2" ry="2" />
<text  x="621.64" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="18.7" y="1909" width="0.2" height="15.0" fill="rgb(253,95,22)" rx="2" ry="2" />
<text  x="21.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="501" width="39.3" height="15.0" fill="rgb(212,28,46)" rx="2" ry="2" />
<text  x="54.45" y="511.5" >[un..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.1" y="1701" width="0.2" height="15.0" fill="rgb(245,174,21)" rx="2" ry="2" />
<text  x="1088.09" y="1711.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (15 samples, 0.25%)</title><rect x="965.7" y="2037" width="3.0" height="15.0" fill="rgb(231,61,48)" rx="2" ry="2" />
<text  x="968.70" y="2047.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1048.0" y="1909" width="0.2" height="15.0" fill="rgb(223,170,21)" rx="2" ry="2" />
<text  x="1051.00" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (95 samples, 1.60%)</title><rect x="234.7" y="1573" width="18.8" height="15.0" fill="rgb(211,227,20)" rx="2" ry="2" />
<text  x="237.70" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1573" width="39.3" height="15.0" fill="rgb(245,36,37)" rx="2" ry="2" />
<text  x="54.45" y="1583.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="90.1" y="37" width="0.6" height="15.0" fill="rgb(235,4,1)" rx="2" ry="2" />
<text  x="93.12" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="72.9" y="37" width="1.0" height="15.0" fill="rgb(237,156,32)" rx="2" ry="2" />
<text  x="75.87" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="142.5" y="1909" width="0.2" height="15.0" fill="rgb(228,55,24)" rx="2" ry="2" />
<text  x="145.48" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="1173.3" y="2053" width="1.8" height="15.0" fill="rgb(227,165,32)" rx="2" ry="2" />
<text  x="1176.34" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb (95 samples, 1.60%)</title><rect x="234.7" y="1637" width="18.8" height="15.0" fill="rgb(233,149,17)" rx="2" ry="2" />
<text  x="237.70" y="1647.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1179.5" y="2021" width="0.2" height="15.0" fill="rgb(236,175,31)" rx="2" ry="2" />
<text  x="1182.49" y="2031.5" ></text>
</g>
<g >
<title>release_sock (34 samples, 0.57%)</title><rect x="1041.5" y="1925" width="6.7" height="15.0" fill="rgb(218,46,35)" rx="2" ry="2" />
<text  x="1044.46" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="549.0" y="1925" width="0.2" height="15.0" fill="rgb(239,82,3)" rx="2" ry="2" />
<text  x="552.03" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="554.2" y="1989" width="0.8" height="15.0" fill="rgb(224,156,1)" rx="2" ry="2" />
<text  x="557.19" y="1999.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(209,2,33)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>sys_recvfrom (2 samples, 0.03%)</title><rect x="1097.2" y="2021" width="0.4" height="15.0" fill="rgb(251,152,44)" rx="2" ry="2" />
<text  x="1100.19" y="2031.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="340.0" y="1877" width="0.2" height="15.0" fill="rgb(212,74,20)" rx="2" ry="2" />
<text  x="343.00" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="482.6" y="2005" width="0.4" height="15.0" fill="rgb(205,37,40)" rx="2" ry="2" />
<text  x="485.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="589.1" y="1989" width="2.6" height="15.0" fill="rgb(212,196,35)" rx="2" ry="2" />
<text  x="592.09" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="361.2" y="1893" width="0.2" height="15.0" fill="rgb(239,99,20)" rx="2" ry="2" />
<text  x="364.22" y="1903.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="955.0" y="1925" width="0.2" height="15.0" fill="rgb(231,190,35)" rx="2" ry="2" />
<text  x="957.99" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (1 samples, 0.02%)</title><rect x="508.6" y="1989" width="0.2" height="15.0" fill="rgb(238,83,37)" rx="2" ry="2" />
<text  x="511.57" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="1162.0" y="2053" width="0.2" height="15.0" fill="rgb(243,173,22)" rx="2" ry="2" />
<text  x="1165.04" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="486.0" y="2021" width="0.2" height="15.0" fill="rgb(212,204,26)" rx="2" ry="2" />
<text  x="488.97" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="18.7" y="1925" width="0.2" height="15.0" fill="rgb(217,86,3)" rx="2" ry="2" />
<text  x="21.73" y="1935.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="875.9" y="1973" width="0.6" height="15.0" fill="rgb(210,29,4)" rx="2" ry="2" />
<text  x="878.86" y="1983.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (3 samples, 0.05%)</title><rect x="1147.0" y="2005" width="0.6" height="15.0" fill="rgb(232,154,4)" rx="2" ry="2" />
<text  x="1149.96" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (26 samples, 0.44%)</title><rect x="172.6" y="2021" width="5.2" height="15.0" fill="rgb(207,93,24)" rx="2" ry="2" />
<text  x="175.62" y="2031.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="12.6" y="1989" width="1.0" height="15.0" fill="rgb(223,2,47)" rx="2" ry="2" />
<text  x="15.58" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="18.9" y="1957" width="0.2" height="15.0" fill="rgb(254,174,34)" rx="2" ry="2" />
<text  x="21.92" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="590.9" y="1973" width="0.8" height="15.0" fill="rgb(240,176,48)" rx="2" ry="2" />
<text  x="593.88" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1125" width="39.3" height="15.0" fill="rgb(244,103,45)" rx="2" ry="2" />
<text  x="54.45" y="1135.5" >[un..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="777.5" y="1973" width="0.4" height="15.0" fill="rgb(245,33,7)" rx="2" ry="2" />
<text  x="780.50" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="338.6" y="1893" width="0.2" height="15.0" fill="rgb(247,7,17)" rx="2" ry="2" />
<text  x="341.62" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1172.7" y="2053" width="0.2" height="15.0" fill="rgb(223,56,48)" rx="2" ry="2" />
<text  x="1175.75" y="2063.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (6 samples, 0.10%)</title><rect x="181.9" y="1925" width="1.2" height="15.0" fill="rgb(227,141,36)" rx="2" ry="2" />
<text  x="184.94" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="156.4" y="1941" width="0.2" height="15.0" fill="rgb(247,4,50)" rx="2" ry="2" />
<text  x="159.36" y="1951.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="145.3" y="1941" width="0.4" height="15.0" fill="rgb(205,46,45)" rx="2" ry="2" />
<text  x="148.25" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="1151.3" y="2005" width="0.2" height="15.0" fill="rgb(241,115,50)" rx="2" ry="2" />
<text  x="1154.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (20 samples, 0.34%)</title><rect x="1147.6" y="2053" width="3.9" height="15.0" fill="rgb(210,66,23)" rx="2" ry="2" />
<text  x="1150.56" y="2063.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1040.5" y="1909" width="0.2" height="15.0" fill="rgb(254,26,6)" rx="2" ry="2" />
<text  x="1043.47" y="1919.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (14 samples, 0.24%)</title><rect x="293.0" y="1941" width="2.8" height="15.0" fill="rgb(231,103,37)" rx="2" ry="2" />
<text  x="296.00" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (42 samples, 0.71%)</title><rect x="672.8" y="1877" width="8.3" height="15.0" fill="rgb(247,37,54)" rx="2" ry="2" />
<text  x="675.78" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1637" width="39.3" height="15.0" fill="rgb(211,211,40)" rx="2" ry="2" />
<text  x="54.45" y="1647.5" >[un..</text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1007.1" y="1893" width="0.2" height="15.0" fill="rgb(231,110,53)" rx="2" ry="2" />
<text  x="1010.15" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="357.5" y="1957" width="0.2" height="15.0" fill="rgb(243,202,20)" rx="2" ry="2" />
<text  x="360.46" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 5.31%)</title><rect x="488.3" y="2021" width="62.7" height="15.0" fill="rgb(225,72,21)" rx="2" ry="2" />
<text  x="491.35" y="2031.5" >[unkno..</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="221.0" y="1861" width="0.6" height="15.0" fill="rgb(246,128,30)" rx="2" ry="2" />
<text  x="224.01" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="269.4" y="1829" width="0.2" height="15.0" fill="rgb(242,119,37)" rx="2" ry="2" />
<text  x="272.40" y="1839.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="20.7" y="1941" width="0.2" height="15.0" fill="rgb(212,188,1)" rx="2" ry="2" />
<text  x="23.71" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="83.2" y="53" width="0.8" height="15.0" fill="rgb(219,189,54)" rx="2" ry="2" />
<text  x="86.18" y="63.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="784.2" y="2005" width="0.8" height="15.0" fill="rgb(210,81,29)" rx="2" ry="2" />
<text  x="787.24" y="2015.5" ></text>
</g>
<g >
<title>tcp_established_options (7 samples, 0.12%)</title><rect x="1091.4" y="1861" width="1.4" height="15.0" fill="rgb(247,186,16)" rx="2" ry="2" />
<text  x="1094.44" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (5 samples, 0.08%)</title><rect x="1021.4" y="1829" width="1.0" height="15.0" fill="rgb(246,131,47)" rx="2" ry="2" />
<text  x="1024.43" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="560.5" y="1989" width="0.4" height="15.0" fill="rgb(238,126,29)" rx="2" ry="2" />
<text  x="563.53" y="1999.5" ></text>
</g>
<g >
<title>__condvar_cancel_waiting (1 samples, 0.02%)</title><rect x="11.4" y="2053" width="0.2" height="15.0" fill="rgb(215,222,3)" rx="2" ry="2" />
<text  x="14.39" y="2063.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (1 samples, 0.02%)</title><rect x="319.2" y="1941" width="0.2" height="15.0" fill="rgb(237,82,0)" rx="2" ry="2" />
<text  x="322.18" y="1951.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="472.9" y="1877" width="0.2" height="15.0" fill="rgb(244,16,38)" rx="2" ry="2" />
<text  x="475.88" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (12 samples, 0.20%)</title><rect x="555.0" y="1989" width="2.4" height="15.0" fill="rgb(233,129,40)" rx="2" ry="2" />
<text  x="557.98" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="567.9" y="2005" width="0.2" height="15.0" fill="rgb(219,153,12)" rx="2" ry="2" />
<text  x="570.87" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="894.1" y="1941" width="0.4" height="15.0" fill="rgb(243,73,12)" rx="2" ry="2" />
<text  x="897.11" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="287.4" y="1925" width="0.2" height="15.0" fill="rgb(227,48,48)" rx="2" ry="2" />
<text  x="290.45" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (27 samples, 0.45%)</title><rect x="291.6" y="1989" width="5.4" height="15.0" fill="rgb(243,206,18)" rx="2" ry="2" />
<text  x="294.61" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (3 samples, 0.05%)</title><rect x="1171.2" y="2053" width="0.6" height="15.0" fill="rgb(240,215,37)" rx="2" ry="2" />
<text  x="1174.16" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="811.4" y="1989" width="0.6" height="15.0" fill="rgb(246,197,31)" rx="2" ry="2" />
<text  x="814.41" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="619.4" y="1989" width="1.4" height="15.0" fill="rgb(238,144,19)" rx="2" ry="2" />
<text  x="622.44" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (19 samples, 0.32%)</title><rect x="150.0" y="1989" width="3.8" height="15.0" fill="rgb(219,59,28)" rx="2" ry="2" />
<text  x="153.01" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="253.9" y="1685" width="0.6" height="15.0" fill="rgb(252,163,25)" rx="2" ry="2" />
<text  x="256.93" y="1695.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="617.7" y="2021" width="0.1" height="15.0" fill="rgb(248,130,17)" rx="2" ry="2" />
<text  x="620.65" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="287.4" y="1893" width="0.2" height="15.0" fill="rgb(245,92,18)" rx="2" ry="2" />
<text  x="290.45" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="641.4" y="1909" width="0.4" height="15.0" fill="rgb(230,120,4)" rx="2" ry="2" />
<text  x="644.45" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="880.2" y="1893" width="0.2" height="15.0" fill="rgb(209,96,54)" rx="2" ry="2" />
<text  x="883.23" y="1903.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="230.7" y="1829" width="0.2" height="15.0" fill="rgb(231,51,38)" rx="2" ry="2" />
<text  x="233.73" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="336.0" y="2021" width="0.2" height="15.0" fill="rgb(222,218,2)" rx="2" ry="2" />
<text  x="339.04" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (4 samples, 0.07%)</title><rect x="549.8" y="2005" width="0.8" height="15.0" fill="rgb(222,184,20)" rx="2" ry="2" />
<text  x="552.83" y="2015.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="20.9" y="1973" width="0.2" height="15.0" fill="rgb(242,103,21)" rx="2" ry="2" />
<text  x="23.91" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="970.1" y="2005" width="0.2" height="15.0" fill="rgb(254,101,20)" rx="2" ry="2" />
<text  x="973.06" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="929.8" y="1989" width="0.2" height="15.0" fill="rgb(214,11,7)" rx="2" ry="2" />
<text  x="932.81" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="165" width="39.3" height="15.0" fill="rgb(216,25,24)" rx="2" ry="2" />
<text  x="54.45" y="175.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::increment (1 samples, 0.02%)</title><rect x="313.6" y="1957" width="0.2" height="15.0" fill="rgb(233,176,38)" rx="2" ry="2" />
<text  x="316.63" y="1967.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="1044.8" y="1861" width="0.4" height="15.0" fill="rgb(222,23,45)" rx="2" ry="2" />
<text  x="1047.83" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="345.4" y="1925" width="0.2" height="15.0" fill="rgb(235,22,24)" rx="2" ry="2" />
<text  x="348.36" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="641.3" y="1925" width="0.5" height="15.0" fill="rgb(247,76,14)" rx="2" ry="2" />
<text  x="644.25" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="460.0" y="1957" width="0.8" height="15.0" fill="rgb(222,70,22)" rx="2" ry="2" />
<text  x="462.99" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (51 samples, 0.86%)</title><rect x="336.2" y="2037" width="10.1" height="15.0" fill="rgb(253,149,33)" rx="2" ry="2" />
<text  x="339.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="821" width="39.3" height="15.0" fill="rgb(250,16,38)" rx="2" ry="2" />
<text  x="54.45" y="831.5" >[un..</text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="548.2" y="1909" width="0.2" height="15.0" fill="rgb(212,167,9)" rx="2" ry="2" />
<text  x="551.24" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="549.4" y="1973" width="0.4" height="15.0" fill="rgb(254,19,6)" rx="2" ry="2" />
<text  x="552.43" y="1983.5" ></text>
</g>
<g >
<title>netdev_pick_tx (5 samples, 0.08%)</title><rect x="1080.5" y="1749" width="1.0" height="15.0" fill="rgb(224,33,10)" rx="2" ry="2" />
<text  x="1083.53" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="245" width="39.3" height="15.0" fill="rgb(214,129,35)" rx="2" ry="2" />
<text  x="54.45" y="255.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1445" width="39.3" height="15.0" fill="rgb(248,115,41)" rx="2" ry="2" />
<text  x="54.45" y="1455.5" >[un..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(247,140,47)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="696.0" y="1941" width="0.4" height="15.0" fill="rgb(220,99,5)" rx="2" ry="2" />
<text  x="698.99" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (104 samples, 1.75%)</title><rect x="661.3" y="1893" width="20.6" height="15.0" fill="rgb(240,225,28)" rx="2" ry="2" />
<text  x="664.28" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="616.1" y="2021" width="1.2" height="15.0" fill="rgb(245,140,5)" rx="2" ry="2" />
<text  x="619.06" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="405" width="39.3" height="15.0" fill="rgb(235,99,14)" rx="2" ry="2" />
<text  x="54.45" y="415.5" >[un..</text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="532.6" y="1989" width="0.2" height="15.0" fill="rgb(227,192,22)" rx="2" ry="2" />
<text  x="535.57" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (20 samples, 0.34%)</title><rect x="137.9" y="1925" width="4.0" height="15.0" fill="rgb(233,172,53)" rx="2" ry="2" />
<text  x="140.92" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="230.7" y="1845" width="0.2" height="15.0" fill="rgb(235,68,19)" rx="2" ry="2" />
<text  x="233.73" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="855.0" y="2005" width="0.4" height="15.0" fill="rgb(253,87,52)" rx="2" ry="2" />
<text  x="858.04" y="2015.5" ></text>
</g>
<g >
<title>mcrouter (5,932 samples, 99.70%)</title><rect x="13.6" y="2069" width="1176.4" height="15.0" fill="rgb(211,198,3)" rx="2" ry="2" />
<text  x="16.57" y="2079.5" >mcrouter</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1085.1" y="1685" width="0.2" height="15.0" fill="rgb(223,2,53)" rx="2" ry="2" />
<text  x="1088.09" y="1695.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (8 samples, 0.13%)</title><rect x="294.2" y="1925" width="1.6" height="15.0" fill="rgb(247,128,0)" rx="2" ry="2" />
<text  x="297.19" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (5 samples, 0.08%)</title><rect x="180.8" y="1925" width="0.9" height="15.0" fill="rgb(225,181,13)" rx="2" ry="2" />
<text  x="183.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="277" width="39.3" height="15.0" fill="rgb(227,220,45)" rx="2" ry="2" />
<text  x="54.45" y="287.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (6 samples, 0.10%)</title><rect x="334.3" y="1989" width="1.1" height="15.0" fill="rgb(213,40,5)" rx="2" ry="2" />
<text  x="337.25" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (8 samples, 0.13%)</title><rect x="584.9" y="1973" width="1.6" height="15.0" fill="rgb(248,20,26)" rx="2" ry="2" />
<text  x="587.93" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (35 samples, 0.59%)</title><rect x="559.5" y="2037" width="7.0" height="15.0" fill="rgb(205,29,37)" rx="2" ry="2" />
<text  x="562.54" y="2047.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.6" y="1877" width="0.8" height="15.0" fill="rgb(227,79,25)" rx="2" ry="2" />
<text  x="14.59" y="1887.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1066.2" y="1893" width="0.2" height="15.0" fill="rgb(219,35,52)" rx="2" ry="2" />
<text  x="1069.25" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (160 samples, 2.69%)</title><rect x="51.4" y="69" width="31.8" height="15.0" fill="rgb(206,94,1)" rx="2" ry="2" />
<text  x="54.45" y="79.5" >[u..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="169.3" y="1973" width="0.1" height="15.0" fill="rgb(228,7,6)" rx="2" ry="2" />
<text  x="172.25" y="1983.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.4" y="1941" width="0.8" height="15.0" fill="rgb(207,5,29)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (4 samples, 0.07%)</title><rect x="1089.8" y="1733" width="0.8" height="15.0" fill="rgb(251,156,45)" rx="2" ry="2" />
<text  x="1092.85" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="921.1" y="1877" width="0.4" height="15.0" fill="rgb(219,72,9)" rx="2" ry="2" />
<text  x="924.08" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="174.4" y="1973" width="0.2" height="15.0" fill="rgb(228,59,40)" rx="2" ry="2" />
<text  x="177.41" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="973.2" y="1957" width="0.6" height="15.0" fill="rgb(237,141,44)" rx="2" ry="2" />
<text  x="976.24" y="1967.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="880.2" y="1845" width="0.2" height="15.0" fill="rgb(254,57,21)" rx="2" ry="2" />
<text  x="883.23" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (44 samples, 0.74%)</title><rect x="541.1" y="1989" width="8.7" height="15.0" fill="rgb(219,86,8)" rx="2" ry="2" />
<text  x="544.10" y="1999.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="276.9" y="2037" width="0.2" height="15.0" fill="rgb(213,27,33)" rx="2" ry="2" />
<text  x="279.94" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (2 samples, 0.03%)</title><rect x="439.4" y="1973" width="0.4" height="15.0" fill="rgb(244,81,8)" rx="2" ry="2" />
<text  x="442.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1717" width="39.3" height="15.0" fill="rgb(243,89,41)" rx="2" ry="2" />
<text  x="54.45" y="1727.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (5 samples, 0.08%)</title><rect x="365.2" y="2037" width="1.0" height="15.0" fill="rgb(228,49,9)" rx="2" ry="2" />
<text  x="368.19" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="307.1" y="1941" width="0.2" height="15.0" fill="rgb(240,118,16)" rx="2" ry="2" />
<text  x="310.08" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="88.1" y="53" width="0.2" height="15.0" fill="rgb(215,18,31)" rx="2" ry="2" />
<text  x="91.14" y="63.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1113.6" y="1925" width="0.2" height="15.0" fill="rgb(231,12,7)" rx="2" ry="2" />
<text  x="1116.65" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="109.8" y="1941" width="0.4" height="15.0" fill="rgb(229,126,54)" rx="2" ry="2" />
<text  x="112.75" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="592.1" y="1973" width="1.2" height="15.0" fill="rgb(229,133,41)" rx="2" ry="2" />
<text  x="595.07" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="158.7" y="2005" width="0.2" height="15.0" fill="rgb(233,141,29)" rx="2" ry="2" />
<text  x="161.74" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="549.4" y="1957" width="0.2" height="15.0" fill="rgb(228,84,38)" rx="2" ry="2" />
<text  x="552.43" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="965" width="39.3" height="15.0" fill="rgb(238,102,50)" rx="2" ry="2" />
<text  x="54.45" y="975.5" >[un..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="72.5" y="37" width="0.2" height="15.0" fill="rgb(232,76,41)" rx="2" ry="2" />
<text  x="75.47" y="47.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1909" width="39.3" height="15.0" fill="rgb(243,28,43)" rx="2" ry="2" />
<text  x="54.45" y="1919.5" >[un..</text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="253.1" y="1381" width="0.4" height="15.0" fill="rgb(222,181,36)" rx="2" ry="2" />
<text  x="256.14" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="109.4" y="1925" width="0.4" height="15.0" fill="rgb(244,175,31)" rx="2" ry="2" />
<text  x="112.36" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="658.5" y="1829" width="0.2" height="15.0" fill="rgb(247,133,39)" rx="2" ry="2" />
<text  x="661.50" y="1839.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="497.9" y="1813" width="0.2" height="15.0" fill="rgb(212,59,7)" rx="2" ry="2" />
<text  x="500.87" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (217 samples, 3.65%)</title><rect x="644.8" y="1941" width="43.1" height="15.0" fill="rgb(226,98,28)" rx="2" ry="2" />
<text  x="647.82" y="1951.5" >foll..</text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="12.6" y="1893" width="1.0" height="15.0" fill="rgb(219,219,42)" rx="2" ry="2" />
<text  x="15.58" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="981" width="39.3" height="15.0" fill="rgb(251,35,36)" rx="2" ry="2" />
<text  x="54.45" y="991.5" >[un..</text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="1046.0" y="1813" width="0.6" height="15.0" fill="rgb(207,182,34)" rx="2" ry="2" />
<text  x="1049.02" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="536.7" y="1989" width="0.2" height="15.0" fill="rgb(230,87,45)" rx="2" ry="2" />
<text  x="539.74" y="1999.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="687.7" y="1925" width="0.2" height="15.0" fill="rgb(250,62,48)" rx="2" ry="2" />
<text  x="690.66" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (5 samples, 0.08%)</title><rect x="85.6" y="37" width="1.0" height="15.0" fill="rgb(232,91,31)" rx="2" ry="2" />
<text  x="88.56" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="578.8" y="1973" width="0.2" height="15.0" fill="rgb(207,122,1)" rx="2" ry="2" />
<text  x="581.78" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="87.7" y="53" width="0.4" height="15.0" fill="rgb(225,118,38)" rx="2" ry="2" />
<text  x="90.74" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="811.2" y="2005" width="0.8" height="15.0" fill="rgb(209,180,23)" rx="2" ry="2" />
<text  x="814.21" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="921.5" y="1877" width="0.2" height="15.0" fill="rgb(219,165,17)" rx="2" ry="2" />
<text  x="924.48" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1157" width="39.3" height="15.0" fill="rgb(213,45,6)" rx="2" ry="2" />
<text  x="54.45" y="1167.5" >[un..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="143.9" y="1925" width="0.2" height="15.0" fill="rgb(209,55,23)" rx="2" ry="2" />
<text  x="146.87" y="1935.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="207.5" y="1957" width="0.2" height="15.0" fill="rgb(206,88,46)" rx="2" ry="2" />
<text  x="210.53" y="1967.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="970.5" y="2005" width="0.6" height="15.0" fill="rgb(240,140,26)" rx="2" ry="2" />
<text  x="973.46" y="2015.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="1085.1" y="1621" width="0.2" height="15.0" fill="rgb(250,137,30)" rx="2" ry="2" />
<text  x="1088.09" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (42 samples, 0.71%)</title><rect x="1151.9" y="2053" width="8.4" height="15.0" fill="rgb(229,147,30)" rx="2" ry="2" />
<text  x="1154.92" y="2063.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="259.3" y="1653" width="0.2" height="15.0" fill="rgb(237,132,1)" rx="2" ry="2" />
<text  x="262.29" y="1663.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="617.7" y="1989" width="0.1" height="15.0" fill="rgb(210,209,24)" rx="2" ry="2" />
<text  x="620.65" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (12 samples, 0.20%)</title><rect x="336.4" y="1925" width="2.4" height="15.0" fill="rgb(241,228,19)" rx="2" ry="2" />
<text  x="339.43" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="376.3" y="2005" width="0.4" height="15.0" fill="rgb(205,228,36)" rx="2" ry="2" />
<text  x="379.30" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (24 samples, 0.40%)</title><rect x="1043.0" y="1877" width="4.8" height="15.0" fill="rgb(241,213,22)" rx="2" ry="2" />
<text  x="1046.05" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1317" width="39.3" height="15.0" fill="rgb(215,74,29)" rx="2" ry="2" />
<text  x="54.45" y="1327.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (4 samples, 0.07%)</title><rect x="486.8" y="2037" width="0.8" height="15.0" fill="rgb(211,161,44)" rx="2" ry="2" />
<text  x="489.76" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="455.2" y="1925" width="0.8" height="15.0" fill="rgb(240,48,12)" rx="2" ry="2" />
<text  x="458.23" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (8 samples, 0.13%)</title><rect x="931.4" y="1989" width="1.6" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="934.39" y="1999.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (12 samples, 0.20%)</title><rect x="210.1" y="1909" width="2.4" height="15.0" fill="rgb(228,29,35)" rx="2" ry="2" />
<text  x="213.10" y="1919.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="320.8" y="1957" width="0.4" height="15.0" fill="rgb(251,86,33)" rx="2" ry="2" />
<text  x="323.77" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::get (1 samples, 0.02%)</title><rect x="10.0" y="1877" width="0.2" height="15.0" fill="rgb(237,27,0)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (7 samples, 0.12%)</title><rect x="317.8" y="1925" width="1.4" height="15.0" fill="rgb(243,210,5)" rx="2" ry="2" />
<text  x="320.79" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (30 samples, 0.50%)</title><rect x="253.5" y="1717" width="6.0" height="15.0" fill="rgb(225,168,42)" rx="2" ry="2" />
<text  x="256.54" y="1727.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="145.7" y="1957" width="1.1" height="15.0" fill="rgb(252,83,54)" rx="2" ry="2" />
<text  x="148.65" y="1967.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="226.6" y="1861" width="0.2" height="15.0" fill="rgb(218,28,26)" rx="2" ry="2" />
<text  x="229.56" y="1871.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="175.8" y="1941" width="0.2" height="15.0" fill="rgb(247,203,17)" rx="2" ry="2" />
<text  x="178.79" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="741" width="39.3" height="15.0" fill="rgb(254,46,40)" rx="2" ry="2" />
<text  x="54.45" y="751.5" >[un..</text>
</g>
<g >
<title>[unknown] (530 samples, 8.91%)</title><rect x="850.3" y="2021" width="105.1" height="15.0" fill="rgb(235,57,53)" rx="2" ry="2" />
<text  x="853.28" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(253,10,50)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="535.7" y="1989" width="0.2" height="15.0" fill="rgb(226,70,51)" rx="2" ry="2" />
<text  x="538.74" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="414.0" y="1861" width="0.2" height="15.0" fill="rgb(206,156,52)" rx="2" ry="2" />
<text  x="416.98" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (4 samples, 0.07%)</title><rect x="551.0" y="2037" width="0.8" height="15.0" fill="rgb(208,42,14)" rx="2" ry="2" />
<text  x="554.02" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="689.6" y="1973" width="0.8" height="15.0" fill="rgb(219,177,7)" rx="2" ry="2" />
<text  x="692.64" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="11.6" y="1829" width="0.2" height="15.0" fill="rgb(220,164,50)" rx="2" ry="2" />
<text  x="14.59" y="1839.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="226.2" y="1877" width="0.2" height="15.0" fill="rgb(239,156,34)" rx="2" ry="2" />
<text  x="229.17" y="1887.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="821.9" y="1973" width="0.2" height="15.0" fill="rgb(218,113,19)" rx="2" ry="2" />
<text  x="824.92" y="1983.5" ></text>
</g>
<g >
<title>ep_poll (31 samples, 0.52%)</title><rect x="278.7" y="1973" width="6.2" height="15.0" fill="rgb(210,149,32)" rx="2" ry="2" />
<text  x="281.72" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (4 samples, 0.07%)</title><rect x="110.2" y="1973" width="0.7" height="15.0" fill="rgb(244,158,34)" rx="2" ry="2" />
<text  x="113.15" y="1983.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (4 samples, 0.07%)</title><rect x="1099.6" y="2037" width="0.8" height="15.0" fill="rgb(229,89,45)" rx="2" ry="2" />
<text  x="1102.57" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="824.7" y="1989" width="0.2" height="15.0" fill="rgb(229,20,52)" rx="2" ry="2" />
<text  x="827.70" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (61 samples, 1.03%)</title><rect x="1078.7" y="1813" width="12.1" height="15.0" fill="rgb(214,120,39)" rx="2" ry="2" />
<text  x="1081.74" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="196.2" y="2021" width="0.2" height="15.0" fill="rgb(211,91,19)" rx="2" ry="2" />
<text  x="199.22" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1160.3" y="2053" width="0.3" height="15.0" fill="rgb(228,183,25)" rx="2" ry="2" />
<text  x="1163.25" y="2063.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="547.6" y="1925" width="0.2" height="15.0" fill="rgb(205,153,37)" rx="2" ry="2" />
<text  x="550.64" y="1935.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (2 samples, 0.03%)</title><rect x="328.7" y="1989" width="0.4" height="15.0" fill="rgb(214,161,24)" rx="2" ry="2" />
<text  x="331.70" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="954.8" y="1973" width="0.4" height="15.0" fill="rgb(224,30,26)" rx="2" ry="2" />
<text  x="957.79" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (2 samples, 0.03%)</title><rect x="486.2" y="2037" width="0.4" height="15.0" fill="rgb(236,48,9)" rx="2" ry="2" />
<text  x="489.16" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (24 samples, 0.40%)</title><rect x="1176.7" y="2053" width="4.8" height="15.0" fill="rgb(246,133,37)" rx="2" ry="2" />
<text  x="1179.71" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (68 samples, 1.14%)</title><rect x="442.9" y="1957" width="13.5" height="15.0" fill="rgb(213,20,38)" rx="2" ry="2" />
<text  x="445.93" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (110 samples, 1.85%)</title><rect x="1072.0" y="1893" width="21.8" height="15.0" fill="rgb(230,78,29)" rx="2" ry="2" />
<text  x="1075.00" y="1903.5" >_..</text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="270.0" y="1893" width="0.2" height="15.0" fill="rgb(233,150,11)" rx="2" ry="2" />
<text  x="273.00" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="365.4" y="2005" width="0.2" height="15.0" fill="rgb(242,215,54)" rx="2" ry="2" />
<text  x="368.39" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="658.5" y="1861" width="0.2" height="15.0" fill="rgb(253,17,24)" rx="2" ry="2" />
<text  x="661.50" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (7 samples, 0.12%)</title><rect x="873.7" y="1973" width="1.4" height="15.0" fill="rgb(249,10,39)" rx="2" ry="2" />
<text  x="876.68" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1188.6" y="2021" width="0.6" height="15.0" fill="rgb(254,76,51)" rx="2" ry="2" />
<text  x="1191.61" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="334.5" y="1957" width="0.1" height="15.0" fill="rgb(221,17,28)" rx="2" ry="2" />
<text  x="337.45" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (1 samples, 0.02%)</title><rect x="880.2" y="1797" width="0.2" height="15.0" fill="rgb(206,88,16)" rx="2" ry="2" />
<text  x="883.23" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (7 samples, 0.12%)</title><rect x="596.0" y="2005" width="1.4" height="15.0" fill="rgb(250,201,39)" rx="2" ry="2" />
<text  x="599.03" y="2015.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="563.1" y="1861" width="0.2" height="15.0" fill="rgb(239,21,21)" rx="2" ry="2" />
<text  x="566.11" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="182.7" y="1877" width="0.4" height="15.0" fill="rgb(240,132,37)" rx="2" ry="2" />
<text  x="185.74" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (12 samples, 0.20%)</title><rect x="421.3" y="1973" width="2.4" height="15.0" fill="rgb(252,27,20)" rx="2" ry="2" />
<text  x="424.31" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (3 samples, 0.05%)</title><rect x="637.7" y="1925" width="0.6" height="15.0" fill="rgb(238,188,42)" rx="2" ry="2" />
<text  x="640.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.66%)</title><rect x="347.1" y="2021" width="7.8" height="15.0" fill="rgb(245,91,42)" rx="2" ry="2" />
<text  x="350.14" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="167.7" y="1941" width="1.0" height="15.0" fill="rgb(244,53,29)" rx="2" ry="2" />
<text  x="170.66" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (8 samples, 0.13%)</title><rect x="181.7" y="1941" width="1.6" height="15.0" fill="rgb(254,87,51)" rx="2" ry="2" />
<text  x="184.74" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="229.3" y="1813" width="0.2" height="15.0" fill="rgb(225,53,3)" rx="2" ry="2" />
<text  x="232.34" y="1823.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="146.8" y="1957" width="0.2" height="15.0" fill="rgb(253,103,6)" rx="2" ry="2" />
<text  x="149.84" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="658.3" y="1893" width="0.4" height="15.0" fill="rgb(225,34,9)" rx="2" ry="2" />
<text  x="661.31" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (116 samples, 1.95%)</title><rect x="871.5" y="1989" width="23.0" height="15.0" fill="rgb(207,180,34)" rx="2" ry="2" />
<text  x="874.50" y="1999.5" >f..</text>
</g>
<g >
<title>skb_push (4 samples, 0.07%)</title><rect x="1093.0" y="1877" width="0.8" height="15.0" fill="rgb(239,134,18)" rx="2" ry="2" />
<text  x="1096.02" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (43 samples, 0.72%)</title><rect x="240.4" y="1461" width="8.6" height="15.0" fill="rgb(205,126,36)" rx="2" ry="2" />
<text  x="243.45" y="1471.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="549.6" y="1957" width="0.2" height="15.0" fill="rgb(250,223,1)" rx="2" ry="2" />
<text  x="552.63" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (9 samples, 0.15%)</title><rect x="532.8" y="1989" width="1.8" height="15.0" fill="rgb(209,136,7)" rx="2" ry="2" />
<text  x="535.77" y="1999.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="10.2" y="1989" width="1.0" height="15.0" fill="rgb(224,220,48)" rx="2" ry="2" />
<text  x="13.20" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (7 samples, 0.12%)</title><rect x="176.4" y="1989" width="1.4" height="15.0" fill="rgb(234,144,25)" rx="2" ry="2" />
<text  x="179.39" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (23 samples, 0.39%)</title><rect x="178.8" y="1957" width="4.5" height="15.0" fill="rgb(240,13,54)" rx="2" ry="2" />
<text  x="181.77" y="1967.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="880.2" y="1813" width="0.2" height="15.0" fill="rgb(217,134,21)" rx="2" ry="2" />
<text  x="883.23" y="1823.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="548.0" y="1909" width="0.2" height="15.0" fill="rgb(213,187,47)" rx="2" ry="2" />
<text  x="551.04" y="1919.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="266.8" y="1877" width="0.4" height="15.0" fill="rgb(232,197,34)" rx="2" ry="2" />
<text  x="269.82" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="446.5" y="1909" width="0.2" height="15.0" fill="rgb(234,202,34)" rx="2" ry="2" />
<text  x="449.50" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="508.2" y="1941" width="0.2" height="15.0" fill="rgb(225,126,15)" rx="2" ry="2" />
<text  x="511.18" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (4 samples, 0.07%)</title><rect x="964.9" y="2037" width="0.8" height="15.0" fill="rgb(230,191,53)" rx="2" ry="2" />
<text  x="967.91" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="823.7" y="2021" width="1.4" height="15.0" fill="rgb(219,50,16)" rx="2" ry="2" />
<text  x="826.70" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (25 samples, 0.42%)</title><rect x="419.1" y="1989" width="5.0" height="15.0" fill="rgb(223,45,17)" rx="2" ry="2" />
<text  x="422.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="85.4" y="53" width="1.3" height="15.0" fill="rgb(242,166,36)" rx="2" ry="2" />
<text  x="88.36" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (3 samples, 0.05%)</title><rect x="487.8" y="2037" width="0.5" height="15.0" fill="rgb(235,178,36)" rx="2" ry="2" />
<text  x="490.75" y="2047.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.6" y="1861" width="0.8" height="15.0" fill="rgb(205,22,21)" rx="2" ry="2" />
<text  x="14.59" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1525" width="39.3" height="15.0" fill="rgb(209,131,31)" rx="2" ry="2" />
<text  x="54.45" y="1535.5" >[un..</text>
</g>
<g >
<title>std::function&lt;void  (15 samples, 0.25%)</title><rect x="694.0" y="1957" width="3.0" height="15.0" fill="rgb(226,187,30)" rx="2" ry="2" />
<text  x="697.00" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (144 samples, 2.42%)</title><rect x="901.2" y="1973" width="28.6" height="15.0" fill="rgb(251,209,27)" rx="2" ry="2" />
<text  x="904.25" y="1983.5" >fo..</text>
</g>
<g >
<title>evmap_io_active_ (8 samples, 0.13%)</title><rect x="1102.9" y="2053" width="1.6" height="15.0" fill="rgb(207,3,54)" rx="2" ry="2" />
<text  x="1105.94" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1829" width="39.3" height="15.0" fill="rgb(222,61,39)" rx="2" ry="2" />
<text  x="54.45" y="1839.5" >[un..</text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="269.4" y="1733" width="0.2" height="15.0" fill="rgb(234,212,0)" rx="2" ry="2" />
<text  x="272.40" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="880.0" y="1957" width="0.4" height="15.0" fill="rgb(211,27,40)" rx="2" ry="2" />
<text  x="883.03" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="885" width="39.3" height="15.0" fill="rgb(253,167,20)" rx="2" ry="2" />
<text  x="54.45" y="895.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1205" width="39.3" height="15.0" fill="rgb(228,205,43)" rx="2" ry="2" />
<text  x="54.45" y="1215.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="545.7" y="1925" width="0.6" height="15.0" fill="rgb(205,158,43)" rx="2" ry="2" />
<text  x="548.66" y="1935.5" ></text>
</g>
<g >
<title>malloc (33 samples, 0.55%)</title><rect x="1181.9" y="2053" width="6.5" height="15.0" fill="rgb(216,158,17)" rx="2" ry="2" />
<text  x="1184.87" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1109" width="39.3" height="15.0" fill="rgb(213,215,3)" rx="2" ry="2" />
<text  x="54.45" y="1119.5" >[un..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="563.1" y="1877" width="0.2" height="15.0" fill="rgb(209,87,33)" rx="2" ry="2" />
<text  x="566.11" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (44 samples, 0.74%)</title><rect x="1105.7" y="2053" width="8.7" height="15.0" fill="rgb(229,213,46)" rx="2" ry="2" />
<text  x="1108.71" y="2063.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="804.3" y="1877" width="0.8" height="15.0" fill="rgb(210,129,49)" rx="2" ry="2" />
<text  x="807.27" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="472.9" y="1941" width="0.2" height="15.0" fill="rgb(248,78,41)" rx="2" ry="2" />
<text  x="475.88" y="1951.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="497.9" y="1861" width="0.2" height="15.0" fill="rgb(249,213,10)" rx="2" ry="2" />
<text  x="500.87" y="1871.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (3 samples, 0.05%)</title><rect x="696.4" y="1941" width="0.6" height="15.0" fill="rgb(239,216,31)" rx="2" ry="2" />
<text  x="699.38" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (62 samples, 1.04%)</title><rect x="574.2" y="1989" width="12.3" height="15.0" fill="rgb(211,178,0)" rx="2" ry="2" />
<text  x="577.22" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (12 samples, 0.20%)</title><rect x="1112.1" y="2021" width="2.3" height="15.0" fill="rgb(213,146,43)" rx="2" ry="2" />
<text  x="1115.06" y="2031.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="832.6" y="2037" width="0.2" height="15.0" fill="rgb(206,164,31)" rx="2" ry="2" />
<text  x="835.63" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (9 samples, 0.15%)</title><rect x="681.9" y="1893" width="1.8" height="15.0" fill="rgb(236,146,30)" rx="2" ry="2" />
<text  x="684.91" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="338.6" y="1909" width="0.2" height="15.0" fill="rgb(245,181,50)" rx="2" ry="2" />
<text  x="341.62" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="177.8" y="2021" width="0.2" height="15.0" fill="rgb(226,53,47)" rx="2" ry="2" />
<text  x="180.78" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="11.8" y="1829" width="0.6" height="15.0" fill="rgb(241,27,15)" rx="2" ry="2" />
<text  x="14.78" y="1839.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (8 samples, 0.13%)</title><rect x="1175.1" y="2053" width="1.6" height="15.0" fill="rgb(214,80,15)" rx="2" ry="2" />
<text  x="1178.13" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="183.3" y="1957" width="0.2" height="15.0" fill="rgb(251,100,54)" rx="2" ry="2" />
<text  x="186.33" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="240.4" y="1445" width="1.0" height="15.0" fill="rgb(224,204,37)" rx="2" ry="2" />
<text  x="243.45" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="694.6" y="1925" width="0.4" height="15.0" fill="rgb(242,58,7)" rx="2" ry="2" />
<text  x="697.60" y="1935.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="263.8" y="1829" width="0.2" height="15.0" fill="rgb(252,45,1)" rx="2" ry="2" />
<text  x="266.85" y="1839.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="912.0" y="1893" width="0.2" height="15.0" fill="rgb(223,4,19)" rx="2" ry="2" />
<text  x="914.96" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="408.2" y="2005" width="0.6" height="15.0" fill="rgb(229,110,28)" rx="2" ry="2" />
<text  x="411.23" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (22 samples, 0.37%)</title><rect x="1085.3" y="1733" width="4.4" height="15.0" fill="rgb(254,38,7)" rx="2" ry="2" />
<text  x="1088.29" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (5 samples, 0.08%)</title><rect x="174.6" y="1989" width="1.0" height="15.0" fill="rgb(209,225,19)" rx="2" ry="2" />
<text  x="177.61" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="17.7" y="1957" width="0.2" height="15.0" fill="rgb(254,90,33)" rx="2" ry="2" />
<text  x="20.73" y="1967.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="263.3" y="1829" width="0.2" height="15.0" fill="rgb(216,176,10)" rx="2" ry="2" />
<text  x="266.25" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="311.4" y="1957" width="0.4" height="15.0" fill="rgb(237,201,27)" rx="2" ry="2" />
<text  x="314.45" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="365.2" y="2005" width="0.2" height="15.0" fill="rgb(216,96,17)" rx="2" ry="2" />
<text  x="368.19" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="544.7" y="1941" width="0.2" height="15.0" fill="rgb(249,112,53)" rx="2" ry="2" />
<text  x="547.67" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (31 samples, 0.52%)</title><rect x="369.9" y="2037" width="6.2" height="15.0" fill="rgb(227,208,12)" rx="2" ry="2" />
<text  x="372.95" y="2047.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="424.1" y="2005" width="2.6" height="15.0" fill="rgb(223,1,19)" rx="2" ry="2" />
<text  x="427.09" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="1080.5" y="1733" width="0.4" height="15.0" fill="rgb(245,148,50)" rx="2" ry="2" />
<text  x="1083.53" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (371 samples, 6.24%)</title><rect x="861.2" y="2005" width="73.6" height="15.0" fill="rgb(230,15,37)" rx="2" ry="2" />
<text  x="864.19" y="2015.5" >folly::f..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="354.5" y="2005" width="0.4" height="15.0" fill="rgb(223,196,16)" rx="2" ry="2" />
<text  x="357.48" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="307.7" y="1957" width="0.4" height="15.0" fill="rgb(234,126,10)" rx="2" ry="2" />
<text  x="310.68" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="148.2" y="1957" width="0.2" height="15.0" fill="rgb(230,26,29)" rx="2" ry="2" />
<text  x="151.23" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (16 samples, 0.27%)</title><rect x="778.3" y="2005" width="3.2" height="15.0" fill="rgb(239,37,53)" rx="2" ry="2" />
<text  x="781.29" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (3 samples, 0.05%)</title><rect x="183.9" y="2021" width="0.6" height="15.0" fill="rgb(212,80,0)" rx="2" ry="2" />
<text  x="186.93" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="777.5" y="1957" width="0.4" height="15.0" fill="rgb(225,121,32)" rx="2" ry="2" />
<text  x="780.50" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="637.5" y="1925" width="0.2" height="15.0" fill="rgb(238,199,44)" rx="2" ry="2" />
<text  x="640.48" y="1935.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="697.4" y="1989" width="0.2" height="15.0" fill="rgb(240,19,32)" rx="2" ry="2" />
<text  x="700.37" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.61%)</title><rect x="551.8" y="2005" width="7.1" height="15.0" fill="rgb(235,212,45)" rx="2" ry="2" />
<text  x="554.81" y="2015.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="323.1" y="1989" width="0.2" height="15.0" fill="rgb(235,202,2)" rx="2" ry="2" />
<text  x="326.15" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="617.7" y="2005" width="0.1" height="15.0" fill="rgb(228,201,43)" rx="2" ry="2" />
<text  x="620.65" y="2015.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="1102.5" y="2053" width="0.4" height="15.0" fill="rgb(241,100,27)" rx="2" ry="2" />
<text  x="1105.54" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="209.7" y="1941" width="0.4" height="15.0" fill="rgb(253,21,24)" rx="2" ry="2" />
<text  x="212.71" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="142.5" y="1925" width="0.2" height="15.0" fill="rgb(254,140,29)" rx="2" ry="2" />
<text  x="145.48" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="570.6" y="1973" width="1.0" height="15.0" fill="rgb(241,64,30)" rx="2" ry="2" />
<text  x="573.65" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="414.0" y="1957" width="0.2" height="15.0" fill="rgb(231,69,36)" rx="2" ry="2" />
<text  x="416.98" y="1967.5" ></text>
</g>
<g >
<title>dst_release (62 samples, 1.04%)</title><rect x="1025.8" y="1877" width="12.3" height="15.0" fill="rgb(248,99,7)" rx="2" ry="2" />
<text  x="1028.79" y="1887.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="339.8" y="1893" width="0.4" height="15.0" fill="rgb(247,188,14)" rx="2" ry="2" />
<text  x="342.81" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1046.4" y="1781" width="0.2" height="15.0" fill="rgb(205,16,11)" rx="2" ry="2" />
<text  x="1049.42" y="1791.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="344.8" y="1861" width="0.2" height="15.0" fill="rgb(234,94,7)" rx="2" ry="2" />
<text  x="347.76" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="83.6" y="37" width="0.4" height="15.0" fill="rgb(250,199,38)" rx="2" ry="2" />
<text  x="86.58" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="178.8" y="1909" width="0.4" height="15.0" fill="rgb(215,141,36)" rx="2" ry="2" />
<text  x="181.77" y="1919.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="376.1" y="2005" width="0.2" height="15.0" fill="rgb(244,30,3)" rx="2" ry="2" />
<text  x="379.10" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (57 samples, 0.96%)</title><rect x="812.4" y="2037" width="11.3" height="15.0" fill="rgb(231,6,13)" rx="2" ry="2" />
<text  x="815.40" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (5 samples, 0.08%)</title><rect x="399.3" y="2005" width="1.0" height="15.0" fill="rgb(221,140,16)" rx="2" ry="2" />
<text  x="402.30" y="2015.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(216,27,41)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="297.6" y="1989" width="0.4" height="15.0" fill="rgb(252,163,3)" rx="2" ry="2" />
<text  x="300.56" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (22 samples, 0.37%)</title><rect x="907.6" y="1909" width="4.4" height="15.0" fill="rgb(244,73,46)" rx="2" ry="2" />
<text  x="910.59" y="1919.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="436.0" y="1893" width="0.2" height="15.0" fill="rgb(225,155,8)" rx="2" ry="2" />
<text  x="438.99" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="785.4" y="2005" width="0.2" height="15.0" fill="rgb(229,123,22)" rx="2" ry="2" />
<text  x="788.43" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1685" width="39.3" height="15.0" fill="rgb(228,25,27)" rx="2" ry="2" />
<text  x="54.45" y="1695.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (19 samples, 0.32%)</title><rect x="60.2" y="37" width="3.7" height="15.0" fill="rgb(219,53,35)" rx="2" ry="2" />
<text  x="63.17" y="47.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="1151.1" y="2005" width="0.2" height="15.0" fill="rgb(246,74,18)" rx="2" ry="2" />
<text  x="1154.13" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="68.3" y="37" width="0.2" height="15.0" fill="rgb(237,188,29)" rx="2" ry="2" />
<text  x="71.31" y="47.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="991.9" y="1893" width="0.2" height="15.0" fill="rgb(239,213,28)" rx="2" ry="2" />
<text  x="994.88" y="1903.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="597.4" y="2005" width="0.2" height="15.0" fill="rgb(247,90,38)" rx="2" ry="2" />
<text  x="600.42" y="2015.5" ></text>
</g>
<g >
<title>kfree (62 samples, 1.04%)</title><rect x="1010.9" y="1861" width="12.3" height="15.0" fill="rgb(244,140,6)" rx="2" ry="2" />
<text  x="1013.92" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="82.6" y="37" width="0.2" height="15.0" fill="rgb(214,188,35)" rx="2" ry="2" />
<text  x="85.58" y="47.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="658.3" y="1797" width="0.2" height="15.0" fill="rgb(225,108,24)" rx="2" ry="2" />
<text  x="661.31" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="820.3" y="1989" width="0.2" height="15.0" fill="rgb(206,121,52)" rx="2" ry="2" />
<text  x="823.33" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="149" width="39.3" height="15.0" fill="rgb(224,197,21)" rx="2" ry="2" />
<text  x="54.45" y="159.5" >[un..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="174.8" y="1941" width="0.2" height="15.0" fill="rgb(236,228,36)" rx="2" ry="2" />
<text  x="177.80" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="933.2" y="1957" width="0.2" height="15.0" fill="rgb(211,161,44)" rx="2" ry="2" />
<text  x="936.18" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1188.6" y="2037" width="0.6" height="15.0" fill="rgb(247,221,48)" rx="2" ry="2" />
<text  x="1191.61" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="323.3" y="1989" width="0.2" height="15.0" fill="rgb(216,57,28)" rx="2" ry="2" />
<text  x="326.34" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="968.7" y="2021" width="0.2" height="15.0" fill="rgb(221,229,14)" rx="2" ry="2" />
<text  x="971.68" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 4.29%)</title><rect x="376.1" y="2021" width="50.6" height="15.0" fill="rgb(231,186,33)" rx="2" ry="2" />
<text  x="379.10" y="2031.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="326.3" y="1973" width="0.4" height="15.0" fill="rgb(236,146,40)" rx="2" ry="2" />
<text  x="329.32" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="824.9" y="1989" width="0.2" height="15.0" fill="rgb(212,111,0)" rx="2" ry="2" />
<text  x="827.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1989" width="39.3" height="15.0" fill="rgb(220,221,30)" rx="2" ry="2" />
<text  x="54.45" y="1999.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (11 samples, 0.18%)</title><rect x="772.9" y="2005" width="2.2" height="15.0" fill="rgb(245,108,48)" rx="2" ry="2" />
<text  x="775.93" y="2015.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (16 samples, 0.27%)</title><rect x="1099.4" y="2053" width="3.1" height="15.0" fill="rgb(243,9,10)" rx="2" ry="2" />
<text  x="1102.37" y="2063.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (2 samples, 0.03%)</title><rect x="1072.6" y="1861" width="0.4" height="15.0" fill="rgb(235,97,50)" rx="2" ry="2" />
<text  x="1075.59" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (30 samples, 0.50%)</title><rect x="253.5" y="1733" width="6.0" height="15.0" fill="rgb(217,92,42)" rx="2" ry="2" />
<text  x="256.54" y="1743.5" ></text>
</g>
<g >
<title>[[vdso]] (9 samples, 0.15%)</title><rect x="201.2" y="2005" width="1.8" height="15.0" fill="rgb(250,131,13)" rx="2" ry="2" />
<text  x="204.18" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1146.6" y="2005" width="0.4" height="15.0" fill="rgb(235,168,1)" rx="2" ry="2" />
<text  x="1149.57" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (372 samples, 6.25%)</title><rect x="623.4" y="1989" width="73.8" height="15.0" fill="rgb(208,22,11)" rx="2" ry="2" />
<text  x="626.40" y="1999.5" >folly::f..</text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="681.7" y="1877" width="0.2" height="15.0" fill="rgb(235,45,26)" rx="2" ry="2" />
<text  x="684.71" y="1887.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (4 samples, 0.07%)</title><rect x="331.7" y="1941" width="0.8" height="15.0" fill="rgb(244,31,16)" rx="2" ry="2" />
<text  x="334.67" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="599.6" y="2037" width="0.4" height="15.0" fill="rgb(235,206,17)" rx="2" ry="2" />
<text  x="602.60" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (11 samples, 0.18%)</title><rect x="305.9" y="1973" width="2.2" height="15.0" fill="rgb(207,33,35)" rx="2" ry="2" />
<text  x="308.89" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="80.6" y="37" width="0.2" height="15.0" fill="rgb(205,116,38)" rx="2" ry="2" />
<text  x="83.60" y="47.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1365" width="39.3" height="15.0" fill="rgb(222,168,45)" rx="2" ry="2" />
<text  x="54.45" y="1375.5" >[un..</text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (2 samples, 0.03%)</title><rect x="974.0" y="2037" width="0.4" height="15.0" fill="rgb(248,124,49)" rx="2" ry="2" />
<text  x="977.03" y="2047.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="472.9" y="1925" width="0.2" height="15.0" fill="rgb(217,105,23)" rx="2" ry="2" />
<text  x="475.88" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (3 samples, 0.05%)</title><rect x="59.2" y="37" width="0.6" height="15.0" fill="rgb(241,81,28)" rx="2" ry="2" />
<text  x="62.18" y="47.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="563.1" y="1845" width="0.2" height="15.0" fill="rgb(238,190,7)" rx="2" ry="2" />
<text  x="566.11" y="1855.5" ></text>
</g>
<g >
<title>inet_recvmsg (571 samples, 9.60%)</title><rect x="982.6" y="1957" width="113.2" height="15.0" fill="rgb(240,38,25)" rx="2" ry="2" />
<text  x="985.56" y="1967.5" >inet_recvmsg</text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="955.0" y="1877" width="0.2" height="15.0" fill="rgb(241,7,35)" rx="2" ry="2" />
<text  x="957.99" y="1887.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="551.2" y="2005" width="0.6" height="15.0" fill="rgb(222,164,48)" rx="2" ry="2" />
<text  x="554.21" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="322.7" y="1973" width="0.2" height="15.0" fill="rgb(217,171,14)" rx="2" ry="2" />
<text  x="325.75" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="531.8" y="1925" width="0.2" height="15.0" fill="rgb(216,133,39)" rx="2" ry="2" />
<text  x="534.78" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="20.3" y="1957" width="0.4" height="15.0" fill="rgb(223,70,30)" rx="2" ry="2" />
<text  x="23.31" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="838.4" y="2037" width="0.4" height="15.0" fill="rgb(252,41,26)" rx="2" ry="2" />
<text  x="841.38" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(251,149,24)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="18.7" y="1893" width="0.2" height="15.0" fill="rgb(245,17,29)" rx="2" ry="2" />
<text  x="21.73" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (51 samples, 0.86%)</title><rect x="474.5" y="2037" width="10.1" height="15.0" fill="rgb(245,227,49)" rx="2" ry="2" />
<text  x="477.46" y="2047.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (9 samples, 0.15%)</title><rect x="49.1" y="2021" width="1.8" height="15.0" fill="rgb(227,208,1)" rx="2" ry="2" />
<text  x="52.07" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (6 samples, 0.10%)</title><rect x="15.8" y="1989" width="1.1" height="15.0" fill="rgb(244,16,46)" rx="2" ry="2" />
<text  x="18.75" y="1999.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="287.4" y="1909" width="0.2" height="15.0" fill="rgb(231,7,33)" rx="2" ry="2" />
<text  x="290.45" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (4 samples, 0.07%)</title><rect x="569.3" y="1973" width="0.8" height="15.0" fill="rgb(221,86,11)" rx="2" ry="2" />
<text  x="572.26" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="837" width="39.3" height="15.0" fill="rgb(225,44,21)" rx="2" ry="2" />
<text  x="54.45" y="847.5" >[un..</text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="1090.2" y="1701" width="0.2" height="15.0" fill="rgb(238,108,39)" rx="2" ry="2" />
<text  x="1093.25" y="1711.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="1096.8" y="1957" width="0.4" height="15.0" fill="rgb(250,227,54)" rx="2" ry="2" />
<text  x="1099.79" y="1967.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="228.7" y="1797" width="0.2" height="15.0" fill="rgb(250,5,46)" rx="2" ry="2" />
<text  x="231.75" y="1807.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="175.2" y="1925" width="0.2" height="15.0" fill="rgb(244,124,53)" rx="2" ry="2" />
<text  x="178.20" y="1935.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="218.0" y="1877" width="0.2" height="15.0" fill="rgb(237,66,0)" rx="2" ry="2" />
<text  x="221.04" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="782.3" y="1989" width="1.1" height="15.0" fill="rgb(228,216,16)" rx="2" ry="2" />
<text  x="785.26" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (13 samples, 0.22%)</title><rect x="586.5" y="1989" width="2.6" height="15.0" fill="rgb(243,121,20)" rx="2" ry="2" />
<text  x="589.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="607.3" y="2005" width="1.8" height="15.0" fill="rgb(221,180,53)" rx="2" ry="2" />
<text  x="610.34" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="288.2" y="2005" width="0.2" height="15.0" fill="rgb(213,123,0)" rx="2" ry="2" />
<text  x="291.24" y="2015.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="259.1" y="1653" width="0.2" height="15.0" fill="rgb(221,82,50)" rx="2" ry="2" />
<text  x="262.09" y="1663.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="143.5" y="1925" width="0.4" height="15.0" fill="rgb(206,166,52)" rx="2" ry="2" />
<text  x="146.47" y="1935.5" ></text>
</g>
<g >
<title>vfprintf (11 samples, 0.18%)</title><rect x="1100.4" y="2037" width="2.1" height="15.0" fill="rgb(211,173,9)" rx="2" ry="2" />
<text  x="1103.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="565" width="39.3" height="15.0" fill="rgb(227,206,4)" rx="2" ry="2" />
<text  x="54.45" y="575.5" >[un..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="333.1" y="1989" width="0.2" height="15.0" fill="rgb(244,66,29)" rx="2" ry="2" />
<text  x="336.06" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="606.1" y="1973" width="0.2" height="15.0" fill="rgb(247,74,1)" rx="2" ry="2" />
<text  x="609.15" y="1983.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="269.4" y="1749" width="0.2" height="15.0" fill="rgb(213,143,39)" rx="2" ry="2" />
<text  x="272.40" y="1759.5" ></text>
</g>
<g >
<title>__fdget (12 samples, 0.20%)</title><rect x="271.2" y="1941" width="2.4" height="15.0" fill="rgb(242,112,31)" rx="2" ry="2" />
<text  x="274.19" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (6 samples, 0.10%)</title><rect x="928.2" y="1909" width="1.2" height="15.0" fill="rgb(222,64,53)" rx="2" ry="2" />
<text  x="931.22" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="523.1" y="1989" width="0.3" height="15.0" fill="rgb(207,165,14)" rx="2" ry="2" />
<text  x="526.05" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="117" width="39.3" height="15.0" fill="rgb(243,130,15)" rx="2" ry="2" />
<text  x="54.45" y="127.5" >[un..</text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (39 samples, 0.66%)</title><rect x="13.6" y="2053" width="7.7" height="15.0" fill="rgb(226,132,0)" rx="2" ry="2" />
<text  x="16.57" y="2063.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="563.1" y="1957" width="0.2" height="15.0" fill="rgb(238,50,48)" rx="2" ry="2" />
<text  x="566.11" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="542.5" y="1877" width="0.4" height="15.0" fill="rgb(247,27,6)" rx="2" ry="2" />
<text  x="545.49" y="1887.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="228.9" y="1797" width="0.2" height="15.0" fill="rgb(231,29,29)" rx="2" ry="2" />
<text  x="231.94" y="1807.5" ></text>
</g>
<g >
<title>__zone_watermark_ok (1 samples, 0.02%)</title><rect x="226.6" y="1797" width="0.2" height="15.0" fill="rgb(210,7,8)" rx="2" ry="2" />
<text  x="229.56" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.17%)</title><rect x="555.4" y="1957" width="2.0" height="15.0" fill="rgb(229,133,2)" rx="2" ry="2" />
<text  x="558.38" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="893.7" y="1957" width="0.8" height="15.0" fill="rgb(232,69,31)" rx="2" ry="2" />
<text  x="896.71" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (3 samples, 0.05%)</title><rect x="334.8" y="1941" width="0.6" height="15.0" fill="rgb(219,52,20)" rx="2" ry="2" />
<text  x="337.85" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="955.0" y="1861" width="0.2" height="15.0" fill="rgb(228,153,27)" rx="2" ry="2" />
<text  x="957.99" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="421" width="39.3" height="15.0" fill="rgb(227,94,28)" rx="2" ry="2" />
<text  x="54.45" y="431.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (2 samples, 0.03%)</title><rect x="557.4" y="1989" width="0.4" height="15.0" fill="rgb(246,32,22)" rx="2" ry="2" />
<text  x="560.36" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (24 samples, 0.40%)</title><rect x="759.6" y="1973" width="4.8" height="15.0" fill="rgb(250,69,53)" rx="2" ry="2" />
<text  x="762.65" y="1983.5" ></text>
</g>
<g >
<title>dev_queue_xmit (52 samples, 0.87%)</title><rect x="1080.3" y="1781" width="10.3" height="15.0" fill="rgb(224,58,11)" rx="2" ry="2" />
<text  x="1083.33" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (36 samples, 0.61%)</title><rect x="525.0" y="1957" width="7.2" height="15.0" fill="rgb(245,26,39)" rx="2" ry="2" />
<text  x="528.04" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="19.5" y="1925" width="0.2" height="15.0" fill="rgb(243,182,32)" rx="2" ry="2" />
<text  x="22.52" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="182.7" y="1893" width="0.4" height="15.0" fill="rgb(249,87,36)" rx="2" ry="2" />
<text  x="185.74" y="1903.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="277.3" y="2037" width="0.2" height="15.0" fill="rgb(226,61,30)" rx="2" ry="2" />
<text  x="280.33" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1046.6" y="1813" width="0.2" height="15.0" fill="rgb(225,223,44)" rx="2" ry="2" />
<text  x="1049.62" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="86.6" y="37" width="0.1" height="15.0" fill="rgb(219,89,15)" rx="2" ry="2" />
<text  x="89.55" y="47.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (103 samples, 1.73%)</title><rect x="21.3" y="2053" width="20.4" height="15.0" fill="rgb(254,51,0)" rx="2" ry="2" />
<text  x="24.30" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="463.6" y="1957" width="1.3" height="15.0" fill="rgb(248,33,5)" rx="2" ry="2" />
<text  x="466.56" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="287.6" y="2005" width="0.6" height="15.0" fill="rgb(235,65,25)" rx="2" ry="2" />
<text  x="290.65" y="2015.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="694.8" y="1909" width="0.2" height="15.0" fill="rgb(214,106,19)" rx="2" ry="2" />
<text  x="697.80" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (18 samples, 0.30%)</title><rect x="142.1" y="1957" width="3.6" height="15.0" fill="rgb(235,25,45)" rx="2" ry="2" />
<text  x="145.08" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="820.5" y="1989" width="0.2" height="15.0" fill="rgb(241,63,43)" rx="2" ry="2" />
<text  x="823.53" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1134.9" y="1957" width="0.2" height="15.0" fill="rgb(220,117,6)" rx="2" ry="2" />
<text  x="1137.87" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="482.8" y="1989" width="0.2" height="15.0" fill="rgb(232,194,8)" rx="2" ry="2" />
<text  x="485.79" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="334.3" y="1973" width="1.1" height="15.0" fill="rgb(246,51,32)" rx="2" ry="2" />
<text  x="337.25" y="1983.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="647.4" y="1909" width="0.2" height="15.0" fill="rgb(206,150,39)" rx="2" ry="2" />
<text  x="650.40" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="812.6" y="1973" width="0.2" height="15.0" fill="rgb(240,92,0)" rx="2" ry="2" />
<text  x="815.60" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="311.4" y="1941" width="0.4" height="15.0" fill="rgb(251,145,33)" rx="2" ry="2" />
<text  x="314.45" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (7 samples, 0.12%)</title><rect x="898.1" y="1893" width="1.4" height="15.0" fill="rgb(235,133,0)" rx="2" ry="2" />
<text  x="901.07" y="1903.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (11 samples, 0.18%)</title><rect x="221.6" y="1861" width="2.2" height="15.0" fill="rgb(206,55,53)" rx="2" ry="2" />
<text  x="224.61" y="1871.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="658.3" y="1781" width="0.2" height="15.0" fill="rgb(253,60,33)" rx="2" ry="2" />
<text  x="661.31" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="587.1" y="1973" width="0.4" height="15.0" fill="rgb(233,100,26)" rx="2" ry="2" />
<text  x="590.11" y="1983.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1189.0" y="2005" width="0.2" height="15.0" fill="rgb(233,221,30)" rx="2" ry="2" />
<text  x="1192.01" y="2015.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="658.3" y="1733" width="0.2" height="15.0" fill="rgb(247,223,39)" rx="2" ry="2" />
<text  x="661.31" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (26 samples, 0.44%)</title><rect x="178.4" y="1989" width="5.1" height="15.0" fill="rgb(244,91,36)" rx="2" ry="2" />
<text  x="181.37" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="141.9" y="1941" width="0.2" height="15.0" fill="rgb(214,65,4)" rx="2" ry="2" />
<text  x="144.88" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (2 samples, 0.03%)</title><rect x="253.1" y="1493" width="0.4" height="15.0" fill="rgb(254,122,8)" rx="2" ry="2" />
<text  x="256.14" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (8 samples, 0.13%)</title><rect x="257.5" y="1653" width="1.6" height="15.0" fill="rgb(206,186,48)" rx="2" ry="2" />
<text  x="260.50" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="261" width="39.3" height="15.0" fill="rgb(248,13,23)" rx="2" ry="2" />
<text  x="54.45" y="271.5" >[un..</text>
</g>
<g >
<title>copy_page_to_iter (9 samples, 0.15%)</title><rect x="1070.2" y="1909" width="1.8" height="15.0" fill="rgb(210,44,52)" rx="2" ry="2" />
<text  x="1073.22" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (731 samples, 12.29%)</title><rect x="49.1" y="2037" width="144.9" height="15.0" fill="rgb(250,134,13)" rx="2" ry="2" />
<text  x="52.07" y="2047.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1085.1" y="1589" width="0.2" height="15.0" fill="rgb(228,123,49)" rx="2" ry="2" />
<text  x="1088.09" y="1599.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="617.7" y="1941" width="0.1" height="15.0" fill="rgb(206,150,22)" rx="2" ry="2" />
<text  x="620.65" y="1951.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="497.9" y="1829" width="0.2" height="15.0" fill="rgb(221,183,54)" rx="2" ry="2" />
<text  x="500.87" y="1839.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (4 samples, 0.07%)</title><rect x="319.4" y="1973" width="0.8" height="15.0" fill="rgb(212,208,16)" rx="2" ry="2" />
<text  x="322.38" y="1983.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="1047.2" y="1861" width="0.6" height="15.0" fill="rgb(211,3,9)" rx="2" ry="2" />
<text  x="1050.21" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="556.2" y="1925" width="0.2" height="15.0" fill="rgb(218,179,37)" rx="2" ry="2" />
<text  x="559.17" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1135.3" y="1989" width="0.2" height="15.0" fill="rgb(207,89,54)" rx="2" ry="2" />
<text  x="1138.26" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (7 samples, 0.12%)</title><rect x="142.7" y="1941" width="1.4" height="15.0" fill="rgb(208,92,10)" rx="2" ry="2" />
<text  x="145.68" y="1951.5" ></text>
</g>
<g >
<title>skb_release_all (173 samples, 2.91%)</title><rect x="1006.2" y="1909" width="34.3" height="15.0" fill="rgb(220,147,2)" rx="2" ry="2" />
<text  x="1009.16" y="1919.5" >sk..</text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1134.5" y="1957" width="0.2" height="15.0" fill="rgb(208,114,25)" rx="2" ry="2" />
<text  x="1137.47" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1113.6" y="1909" width="0.2" height="15.0" fill="rgb(214,101,10)" rx="2" ry="2" />
<text  x="1116.65" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (49 samples, 0.82%)</title><rect x="336.2" y="1973" width="9.8" height="15.0" fill="rgb(234,102,19)" rx="2" ry="2" />
<text  x="339.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="850.5" y="2005" width="0.4" height="15.0" fill="rgb(218,104,5)" rx="2" ry="2" />
<text  x="853.48" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="834.4" y="2021" width="0.4" height="15.0" fill="rgb(249,142,9)" rx="2" ry="2" />
<text  x="837.41" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (25 samples, 0.42%)</title><rect x="178.6" y="1973" width="4.9" height="15.0" fill="rgb(248,31,5)" rx="2" ry="2" />
<text  x="181.57" y="1983.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="253.1" y="1365" width="0.4" height="15.0" fill="rgb(239,183,51)" rx="2" ry="2" />
<text  x="256.14" y="1375.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (13 samples, 0.22%)</title><rect x="520.1" y="1989" width="2.6" height="15.0" fill="rgb(237,3,9)" rx="2" ry="2" />
<text  x="523.08" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9 samples, 0.15%)</title><rect x="890.7" y="1941" width="1.8" height="15.0" fill="rgb(243,151,40)" rx="2" ry="2" />
<text  x="893.74" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="531.8" y="1893" width="0.2" height="15.0" fill="rgb(233,30,8)" rx="2" ry="2" />
<text  x="534.78" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (6 samples, 0.10%)</title><rect x="776.7" y="2005" width="1.2" height="15.0" fill="rgb(223,91,33)" rx="2" ry="2" />
<text  x="779.70" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.62%)</title><rect x="607.3" y="2021" width="7.4" height="15.0" fill="rgb(215,196,51)" rx="2" ry="2" />
<text  x="610.34" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (9 samples, 0.15%)</title><rect x="326.9" y="1973" width="1.8" height="15.0" fill="rgb(223,226,22)" rx="2" ry="2" />
<text  x="329.91" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="357" width="39.3" height="15.0" fill="rgb(228,72,14)" rx="2" ry="2" />
<text  x="54.45" y="367.5" >[un..</text>
</g>
<g >
<title>[libjemalloc.so.1] (2 samples, 0.03%)</title><rect x="51.1" y="1989" width="0.3" height="15.0" fill="rgb(215,118,52)" rx="2" ry="2" />
<text  x="54.05" y="1999.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="12.6" y="1973" width="1.0" height="15.0" fill="rgb(232,72,19)" rx="2" ry="2" />
<text  x="15.58" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1541" width="39.3" height="15.0" fill="rgb(246,103,11)" rx="2" ry="2" />
<text  x="54.45" y="1551.5" >[un..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (4 samples, 0.07%)</title><rect x="16.1" y="1941" width="0.8" height="15.0" fill="rgb(235,78,32)" rx="2" ry="2" />
<text  x="19.15" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (8 samples, 0.13%)</title><rect x="809.6" y="2005" width="1.6" height="15.0" fill="rgb(254,28,23)" rx="2" ry="2" />
<text  x="812.62" y="2015.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (35 samples, 0.59%)</title><rect x="218.2" y="1877" width="7.0" height="15.0" fill="rgb(231,72,4)" rx="2" ry="2" />
<text  x="221.24" y="1887.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="536.5" y="1989" width="0.2" height="15.0" fill="rgb(228,59,53)" rx="2" ry="2" />
<text  x="539.54" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="262.7" y="1813" width="0.2" height="15.0" fill="rgb(237,37,52)" rx="2" ry="2" />
<text  x="265.66" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="326.1" y="1957" width="0.2" height="15.0" fill="rgb(231,190,43)" rx="2" ry="2" />
<text  x="329.12" y="1967.5" ></text>
</g>
<g >
<title>tcp_sendmsg (287 samples, 4.82%)</title><rect x="213.3" y="1909" width="56.9" height="15.0" fill="rgb(209,180,32)" rx="2" ry="2" />
<text  x="216.28" y="1919.5" >tcp_se..</text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="974.4" y="2053" width="0.2" height="15.0" fill="rgb(232,21,9)" rx="2" ry="2" />
<text  x="977.43" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="607.7" y="1989" width="0.4" height="15.0" fill="rgb(239,70,32)" rx="2" ry="2" />
<text  x="610.73" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="804.3" y="1861" width="0.8" height="15.0" fill="rgb(216,10,39)" rx="2" ry="2" />
<text  x="807.27" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="167.5" y="1941" width="0.2" height="15.0" fill="rgb(228,181,24)" rx="2" ry="2" />
<text  x="170.47" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::maySend (1 samples, 0.02%)</title><rect x="778.1" y="2005" width="0.2" height="15.0" fill="rgb(252,174,23)" rx="2" ry="2" />
<text  x="781.09" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (43 samples, 0.72%)</title><rect x="1162.2" y="2053" width="8.6" height="15.0" fill="rgb(214,123,12)" rx="2" ry="2" />
<text  x="1165.24" y="2063.5" ></text>
</g>
<g >
<title>std::operator&amp; (5 samples, 0.08%)</title><rect x="456.6" y="1957" width="1.0" height="15.0" fill="rgb(240,188,14)" rx="2" ry="2" />
<text  x="459.62" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="101" width="39.3" height="15.0" fill="rgb(230,193,50)" rx="2" ry="2" />
<text  x="54.45" y="111.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1861" width="39.3" height="15.0" fill="rgb(248,109,13)" rx="2" ry="2" />
<text  x="54.45" y="1871.5" >[un..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (2 samples, 0.03%)</title><rect x="1114.0" y="2005" width="0.4" height="15.0" fill="rgb(213,141,4)" rx="2" ry="2" />
<text  x="1117.04" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="12.6" y="1861" width="1.0" height="15.0" fill="rgb(219,17,9)" rx="2" ry="2" />
<text  x="15.58" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (95 samples, 1.60%)</title><rect x="234.7" y="1541" width="18.8" height="15.0" fill="rgb(222,25,28)" rx="2" ry="2" />
<text  x="237.70" y="1551.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="955.0" y="1781" width="0.2" height="15.0" fill="rgb(211,95,28)" rx="2" ry="2" />
<text  x="957.99" y="1791.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (75 samples, 1.26%)</title><rect x="878.4" y="1973" width="14.9" height="15.0" fill="rgb(211,172,13)" rx="2" ry="2" />
<text  x="881.44" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1022.8" y="1717" width="0.2" height="15.0" fill="rgb(253,121,1)" rx="2" ry="2" />
<text  x="1025.82" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (95 samples, 1.60%)</title><rect x="234.7" y="1605" width="18.8" height="15.0" fill="rgb(229,143,45)" rx="2" ry="2" />
<text  x="237.70" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="1161.6" y="2053" width="0.2" height="15.0" fill="rgb(219,38,38)" rx="2" ry="2" />
<text  x="1164.64" y="2063.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="550.6" y="2005" width="0.2" height="15.0" fill="rgb(250,202,46)" rx="2" ry="2" />
<text  x="553.62" y="2015.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::unlock (1 samples, 0.02%)</title><rect x="571.6" y="1973" width="0.2" height="15.0" fill="rgb(222,109,30)" rx="2" ry="2" />
<text  x="574.64" y="1983.5" ></text>
</g>
<g >
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="248.4" y="1429" width="0.6" height="15.0" fill="rgb(237,55,47)" rx="2" ry="2" />
<text  x="251.38" y="1439.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1040.9" y="1925" width="0.6" height="15.0" fill="rgb(246,96,52)" rx="2" ry="2" />
<text  x="1043.86" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="1170.8" y="2053" width="0.4" height="15.0" fill="rgb(220,27,9)" rx="2" ry="2" />
<text  x="1173.76" y="2063.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="436.0" y="1877" width="0.2" height="15.0" fill="rgb(250,130,19)" rx="2" ry="2" />
<text  x="438.99" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="362.6" y="1989" width="1.4" height="15.0" fill="rgb(221,229,50)" rx="2" ry="2" />
<text  x="365.61" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (13 samples, 0.22%)</title><rect x="78.0" y="37" width="2.6" height="15.0" fill="rgb(224,3,30)" rx="2" ry="2" />
<text  x="81.02" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="324.5" y="1957" width="0.2" height="15.0" fill="rgb(208,132,38)" rx="2" ry="2" />
<text  x="327.53" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (66 samples, 1.11%)</title><rect x="746.6" y="1973" width="13.0" height="15.0" fill="rgb(235,45,23)" rx="2" ry="2" />
<text  x="749.56" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="809.6" y="2021" width="2.8" height="15.0" fill="rgb(245,205,6)" rx="2" ry="2" />
<text  x="812.62" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="545.7" y="1861" width="0.4" height="15.0" fill="rgb(232,0,1)" rx="2" ry="2" />
<text  x="548.66" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="204.6" y="2021" width="0.1" height="15.0" fill="rgb(209,106,49)" rx="2" ry="2" />
<text  x="207.55" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1114.2" y="1989" width="0.2" height="15.0" fill="rgb(246,149,4)" rx="2" ry="2" />
<text  x="1117.24" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="804.3" y="1797" width="0.8" height="15.0" fill="rgb(233,155,44)" rx="2" ry="2" />
<text  x="807.27" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (16 samples, 0.27%)</title><rect x="764.4" y="1989" width="3.2" height="15.0" fill="rgb(208,191,48)" rx="2" ry="2" />
<text  x="767.41" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (2 samples, 0.03%)</title><rect x="896.1" y="1909" width="0.4" height="15.0" fill="rgb(244,43,3)" rx="2" ry="2" />
<text  x="899.09" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="373" width="39.3" height="15.0" fill="rgb(223,116,29)" rx="2" ry="2" />
<text  x="54.45" y="383.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1061" width="39.3" height="15.0" fill="rgb(212,6,49)" rx="2" ry="2" />
<text  x="54.45" y="1071.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (6 samples, 0.10%)</title><rect x="775.5" y="2005" width="1.2" height="15.0" fill="rgb(240,219,34)" rx="2" ry="2" />
<text  x="778.51" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (29 samples, 0.49%)</title><rect x="418.3" y="2005" width="5.8" height="15.0" fill="rgb(242,169,26)" rx="2" ry="2" />
<text  x="421.34" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (24 samples, 0.40%)</title><rect x="357.9" y="1941" width="4.7" height="15.0" fill="rgb(210,85,40)" rx="2" ry="2" />
<text  x="360.85" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (1 samples, 0.02%)</title><rect x="511.0" y="1989" width="0.2" height="15.0" fill="rgb(210,120,2)" rx="2" ry="2" />
<text  x="513.95" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (61 samples, 1.03%)</title><rect x="880.4" y="1957" width="12.1" height="15.0" fill="rgb(214,216,41)" rx="2" ry="2" />
<text  x="883.42" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1653" width="39.3" height="15.0" fill="rgb(223,151,52)" rx="2" ry="2" />
<text  x="54.45" y="1663.5" >[un..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="695.0" y="1941" width="0.4" height="15.0" fill="rgb(251,16,9)" rx="2" ry="2" />
<text  x="697.99" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="142.5" y="1877" width="0.2" height="15.0" fill="rgb(216,77,34)" rx="2" ry="2" />
<text  x="145.48" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="309" width="39.3" height="15.0" fill="rgb(244,211,1)" rx="2" ry="2" />
<text  x="54.45" y="319.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (15 samples, 0.25%)</title><rect x="154.6" y="1989" width="2.9" height="15.0" fill="rgb(216,87,3)" rx="2" ry="2" />
<text  x="157.57" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (8 samples, 0.13%)</title><rect x="66.5" y="37" width="1.6" height="15.0" fill="rgb(214,154,2)" rx="2" ry="2" />
<text  x="69.52" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (32 samples, 0.54%)</title><rect x="338.8" y="1941" width="6.4" height="15.0" fill="rgb(206,65,37)" rx="2" ry="2" />
<text  x="341.81" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="618.4" y="2005" width="0.2" height="15.0" fill="rgb(245,43,7)" rx="2" ry="2" />
<text  x="621.44" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="851.1" y="2005" width="0.2" height="15.0" fill="rgb(224,136,35)" rx="2" ry="2" />
<text  x="854.07" y="2015.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="535.9" y="1989" width="0.6" height="15.0" fill="rgb(230,171,20)" rx="2" ry="2" />
<text  x="538.94" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (46 samples, 0.77%)</title><rect x="1081.5" y="1749" width="9.1" height="15.0" fill="rgb(223,189,49)" rx="2" ry="2" />
<text  x="1084.52" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="443.9" y="1941" width="0.4" height="15.0" fill="rgb(241,207,15)" rx="2" ry="2" />
<text  x="446.92" y="1951.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="472.9" y="1909" width="0.2" height="15.0" fill="rgb(205,53,38)" rx="2" ry="2" />
<text  x="475.88" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (108 samples, 1.82%)</title><rect x="436.2" y="1989" width="21.4" height="15.0" fill="rgb(218,119,7)" rx="2" ry="2" />
<text  x="439.19" y="1999.5" >f..</text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="313.4" y="1957" width="0.2" height="15.0" fill="rgb(234,51,28)" rx="2" ry="2" />
<text  x="316.43" y="1967.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="259.5" y="1797" width="0.4" height="15.0" fill="rgb(237,215,24)" rx="2" ry="2" />
<text  x="262.49" y="1807.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (3 samples, 0.05%)</title><rect x="320.2" y="1973" width="0.6" height="15.0" fill="rgb(254,219,48)" rx="2" ry="2" />
<text  x="323.17" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (141 samples, 2.37%)</title><rect x="901.4" y="1925" width="28.0" height="15.0" fill="rgb(239,151,54)" rx="2" ry="2" />
<text  x="904.45" y="1935.5" >f..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="691.8" y="1941" width="1.0" height="15.0" fill="rgb(237,66,32)" rx="2" ry="2" />
<text  x="694.82" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (15 samples, 0.25%)</title><rect x="912.2" y="1893" width="2.9" height="15.0" fill="rgb(205,82,31)" rx="2" ry="2" />
<text  x="915.15" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="364.0" y="2005" width="0.4" height="15.0" fill="rgb(239,221,33)" rx="2" ry="2" />
<text  x="367.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (7 samples, 0.12%)</title><rect x="427.9" y="1989" width="1.3" height="15.0" fill="rgb(224,147,49)" rx="2" ry="2" />
<text  x="430.86" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (1 samples, 0.02%)</title><rect x="165.7" y="2021" width="0.2" height="15.0" fill="rgb(223,77,7)" rx="2" ry="2" />
<text  x="168.68" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="12.6" y="1909" width="1.0" height="15.0" fill="rgb(208,28,2)" rx="2" ry="2" />
<text  x="15.58" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1006.6" y="1893" width="0.2" height="15.0" fill="rgb(234,212,25)" rx="2" ry="2" />
<text  x="1009.55" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="454.6" y="1941" width="0.4" height="15.0" fill="rgb(214,127,1)" rx="2" ry="2" />
<text  x="457.63" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1161.8" y="2053" width="0.2" height="15.0" fill="rgb(222,118,39)" rx="2" ry="2" />
<text  x="1164.84" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="813.2" y="1877" width="0.2" height="15.0" fill="rgb(227,64,24)" rx="2" ry="2" />
<text  x="816.19" y="1887.5" ></text>
</g>
<g >
<title>__ip_local_out (8 samples, 0.13%)</title><rect x="1077.2" y="1829" width="1.5" height="15.0" fill="rgb(254,114,33)" rx="2" ry="2" />
<text  x="1080.16" y="1839.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="253.7" y="1701" width="0.2" height="15.0" fill="rgb(212,65,19)" rx="2" ry="2" />
<text  x="256.73" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (3 samples, 0.05%)</title><rect x="600.0" y="2037" width="0.6" height="15.0" fill="rgb(212,213,52)" rx="2" ry="2" />
<text  x="603.00" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="602.8" y="2005" width="0.2" height="15.0" fill="rgb(205,29,7)" rx="2" ry="2" />
<text  x="605.78" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (966 samples, 16.24%)</title><rect x="618.0" y="2021" width="191.6" height="15.0" fill="rgb(253,70,8)" rx="2" ry="2" />
<text  x="621.05" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__softirqentry_text_start (95 samples, 1.60%)</title><rect x="234.7" y="1685" width="18.8" height="15.0" fill="rgb(221,213,43)" rx="2" ry="2" />
<text  x="237.70" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="555.8" y="1941" width="0.4" height="15.0" fill="rgb(206,111,11)" rx="2" ry="2" />
<text  x="558.77" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (3 samples, 0.05%)</title><rect x="498.3" y="1973" width="0.6" height="15.0" fill="rgb(217,127,15)" rx="2" ry="2" />
<text  x="501.26" y="1983.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (182 samples, 3.06%)</title><rect x="230.7" y="1861" width="36.1" height="15.0" fill="rgb(241,102,8)" rx="2" ry="2" />
<text  x="233.73" y="1871.5" >__t..</text>
</g>
<g >
<title>__put_page (1 samples, 0.02%)</title><rect x="1006.8" y="1893" width="0.2" height="15.0" fill="rgb(237,153,9)" rx="2" ry="2" />
<text  x="1009.75" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1413" width="39.3" height="15.0" fill="rgb(238,119,10)" rx="2" ry="2" />
<text  x="54.45" y="1423.5" >[un..</text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="320.8" y="1973" width="0.4" height="15.0" fill="rgb(221,61,13)" rx="2" ry="2" />
<text  x="323.77" y="1983.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="229.5" y="1829" width="0.2" height="15.0" fill="rgb(227,39,43)" rx="2" ry="2" />
<text  x="232.54" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="253.1" y="1397" width="0.4" height="15.0" fill="rgb(238,218,52)" rx="2" ry="2" />
<text  x="256.14" y="1407.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (3 samples, 0.05%)</title><rect x="157.7" y="2005" width="0.6" height="15.0" fill="rgb(231,207,17)" rx="2" ry="2" />
<text  x="160.75" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="179.0" y="1861" width="0.2" height="15.0" fill="rgb(219,78,36)" rx="2" ry="2" />
<text  x="181.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1813" width="39.3" height="15.0" fill="rgb(210,134,7)" rx="2" ry="2" />
<text  x="54.45" y="1823.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="178.0" y="2021" width="0.2" height="15.0" fill="rgb(239,0,43)" rx="2" ry="2" />
<text  x="180.98" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="636.3" y="1925" width="0.2" height="15.0" fill="rgb(243,24,6)" rx="2" ry="2" />
<text  x="639.29" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1221" width="39.3" height="15.0" fill="rgb(223,64,44)" rx="2" ry="2" />
<text  x="54.45" y="1231.5" >[un..</text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (8 samples, 0.13%)</title><rect x="314.6" y="1957" width="1.6" height="15.0" fill="rgb(236,156,45)" rx="2" ry="2" />
<text  x="317.62" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (1 samples, 0.02%)</title><rect x="53.8" y="37" width="0.2" height="15.0" fill="rgb(240,6,6)" rx="2" ry="2" />
<text  x="56.83" y="47.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="332.3" y="1925" width="0.2" height="15.0" fill="rgb(216,175,34)" rx="2" ry="2" />
<text  x="335.27" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="725" width="39.3" height="15.0" fill="rgb(236,196,54)" rx="2" ry="2" />
<text  x="54.45" y="735.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1301" width="39.3" height="15.0" fill="rgb(246,91,35)" rx="2" ry="2" />
<text  x="54.45" y="1311.5" >[un..</text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="12.6" y="1877" width="1.0" height="15.0" fill="rgb(211,184,5)" rx="2" ry="2" />
<text  x="15.58" y="1887.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="320.6" y="1957" width="0.2" height="15.0" fill="rgb(239,197,4)" rx="2" ry="2" />
<text  x="323.57" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="179.6" y="1893" width="0.2" height="15.0" fill="rgb(229,188,12)" rx="2" ry="2" />
<text  x="182.56" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (13 samples, 0.22%)</title><rect x="658.7" y="1893" width="2.6" height="15.0" fill="rgb(210,164,41)" rx="2" ry="2" />
<text  x="661.70" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="86.7" y="37" width="0.4" height="15.0" fill="rgb(228,85,39)" rx="2" ry="2" />
<text  x="89.75" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="170.0" y="1989" width="0.2" height="15.0" fill="rgb(240,163,7)" rx="2" ry="2" />
<text  x="173.04" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="298.6" y="1973" width="0.5" height="15.0" fill="rgb(240,50,42)" rx="2" ry="2" />
<text  x="301.55" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="229.3" y="1829" width="0.2" height="15.0" fill="rgb(242,27,30)" rx="2" ry="2" />
<text  x="232.34" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (6 samples, 0.10%)</title><rect x="893.3" y="1973" width="1.2" height="15.0" fill="rgb(226,175,1)" rx="2" ry="2" />
<text  x="896.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (30 samples, 0.50%)</title><rect x="74.7" y="53" width="5.9" height="15.0" fill="rgb(206,82,11)" rx="2" ry="2" />
<text  x="77.65" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="606.3" y="2037" width="0.2" height="15.0" fill="rgb(231,39,51)" rx="2" ry="2" />
<text  x="609.35" y="2047.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="345.8" y="1925" width="0.2" height="15.0" fill="rgb(238,150,22)" rx="2" ry="2" />
<text  x="348.75" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_active_ (2 samples, 0.03%)</title><rect x="284.9" y="2037" width="0.4" height="15.0" fill="rgb(209,30,50)" rx="2" ry="2" />
<text  x="287.87" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (2 samples, 0.03%)</title><rect x="160.7" y="2005" width="0.4" height="15.0" fill="rgb(215,27,18)" rx="2" ry="2" />
<text  x="163.72" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="286.1" y="2037" width="0.2" height="15.0" fill="rgb(206,46,33)" rx="2" ry="2" />
<text  x="289.06" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.13%)</title><rect x="179.2" y="1941" width="1.6" height="15.0" fill="rgb(234,28,36)" rx="2" ry="2" />
<text  x="182.17" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (7 samples, 0.12%)</title><rect x="509.6" y="1973" width="1.4" height="15.0" fill="rgb(208,76,3)" rx="2" ry="2" />
<text  x="512.57" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (13 samples, 0.22%)</title><rect x="614.7" y="2037" width="2.6" height="15.0" fill="rgb(212,115,45)" rx="2" ry="2" />
<text  x="617.68" y="2047.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="207.5" y="1925" width="0.2" height="15.0" fill="rgb(218,207,38)" rx="2" ry="2" />
<text  x="210.53" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="229.1" y="1845" width="0.6" height="15.0" fill="rgb(253,158,5)" rx="2" ry="2" />
<text  x="232.14" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="68.1" y="37" width="0.2" height="15.0" fill="rgb(220,74,30)" rx="2" ry="2" />
<text  x="71.11" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="556.2" y="1909" width="0.2" height="15.0" fill="rgb(243,214,31)" rx="2" ry="2" />
<text  x="559.17" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="207.5" y="1989" width="0.2" height="15.0" fill="rgb(227,154,46)" rx="2" ry="2" />
<text  x="210.53" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (10 samples, 0.17%)</title><rect x="354.9" y="1989" width="2.0" height="15.0" fill="rgb(239,100,11)" rx="2" ry="2" />
<text  x="357.88" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::fibers::LoopController*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="335.0" y="1909" width="0.4" height="15.0" fill="rgb(219,213,11)" rx="2" ry="2" />
<text  x="338.05" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="1172.9" y="2053" width="0.2" height="15.0" fill="rgb(223,36,43)" rx="2" ry="2" />
<text  x="1175.94" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 0.54%)</title><rect x="278.5" y="2005" width="6.4" height="15.0" fill="rgb(214,203,32)" rx="2" ry="2" />
<text  x="281.52" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (4 samples, 0.07%)</title><rect x="899.5" y="1893" width="0.8" height="15.0" fill="rgb(231,76,15)" rx="2" ry="2" />
<text  x="902.46" y="1903.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="598.0" y="2005" width="0.2" height="15.0" fill="rgb(209,6,4)" rx="2" ry="2" />
<text  x="601.02" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="658.5" y="1781" width="0.2" height="15.0" fill="rgb(235,92,29)" rx="2" ry="2" />
<text  x="661.50" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="595.8" y="2005" width="0.2" height="15.0" fill="rgb(213,121,39)" rx="2" ry="2" />
<text  x="598.84" y="2015.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="1096.0" y="1957" width="0.8" height="15.0" fill="rgb(247,208,8)" rx="2" ry="2" />
<text  x="1099.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1781" width="39.3" height="15.0" fill="rgb(251,195,24)" rx="2" ry="2" />
<text  x="54.45" y="1791.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="359.6" y="1909" width="0.4" height="15.0" fill="rgb(234,131,35)" rx="2" ry="2" />
<text  x="362.64" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (35 samples, 0.59%)</title><rect x="813.6" y="2005" width="6.9" height="15.0" fill="rgb(214,83,31)" rx="2" ry="2" />
<text  x="816.59" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="356.7" y="1925" width="0.2" height="15.0" fill="rgb(251,52,18)" rx="2" ry="2" />
<text  x="359.66" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="179.0" y="1877" width="0.2" height="15.0" fill="rgb(226,83,35)" rx="2" ry="2" />
<text  x="181.97" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="84.6" y="37" width="0.4" height="15.0" fill="rgb(245,190,45)" rx="2" ry="2" />
<text  x="87.57" y="47.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="923.3" y="1893" width="0.4" height="15.0" fill="rgb(244,105,21)" rx="2" ry="2" />
<text  x="926.26" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (9 samples, 0.15%)</title><rect x="818.0" y="1973" width="1.7" height="15.0" fill="rgb(251,228,29)" rx="2" ry="2" />
<text  x="820.95" y="1983.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="982.0" y="1973" width="0.2" height="15.0" fill="rgb(233,194,28)" rx="2" ry="2" />
<text  x="984.96" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="80.6" y="53" width="0.2" height="15.0" fill="rgb(212,107,10)" rx="2" ry="2" />
<text  x="83.60" y="63.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (5 samples, 0.08%)</title><rect x="228.2" y="1845" width="0.9" height="15.0" fill="rgb(216,45,3)" rx="2" ry="2" />
<text  x="231.15" y="1855.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="120.1" y="1877" width="0.2" height="15.0" fill="rgb(233,226,49)" rx="2" ry="2" />
<text  x="123.07" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.6" y="1909" width="0.8" height="15.0" fill="rgb(212,22,0)" rx="2" ry="2" />
<text  x="14.59" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1173" width="39.3" height="15.0" fill="rgb(213,129,46)" rx="2" ry="2" />
<text  x="54.45" y="1183.5" >[un..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.24%)</title><rect x="603.6" y="1989" width="2.7" height="15.0" fill="rgb(242,129,1)" rx="2" ry="2" />
<text  x="606.57" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1285" width="39.3" height="15.0" fill="rgb(211,77,31)" rx="2" ry="2" />
<text  x="54.45" y="1295.5" >[un..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (6 samples, 0.10%)</title><rect x="147.0" y="1957" width="1.2" height="15.0" fill="rgb(224,134,45)" rx="2" ry="2" />
<text  x="150.04" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="484.6" y="2037" width="0.6" height="15.0" fill="rgb(229,127,9)" rx="2" ry="2" />
<text  x="487.58" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="356.7" y="1957" width="0.2" height="15.0" fill="rgb(249,65,50)" rx="2" ry="2" />
<text  x="359.66" y="1967.5" ></text>
</g>
<g >
<title>ip_send_check (3 samples, 0.05%)</title><rect x="233.7" y="1765" width="0.6" height="15.0" fill="rgb(245,170,50)" rx="2" ry="2" />
<text  x="236.70" y="1775.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (7 samples, 0.12%)</title><rect x="195.0" y="2037" width="1.4" height="15.0" fill="rgb(228,217,0)" rx="2" ry="2" />
<text  x="198.03" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (1 samples, 0.02%)</title><rect x="554.0" y="1989" width="0.2" height="15.0" fill="rgb(231,60,21)" rx="2" ry="2" />
<text  x="556.99" y="1999.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(232,22,54)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="633.7" y="1909" width="0.2" height="15.0" fill="rgb(224,4,15)" rx="2" ry="2" />
<text  x="636.71" y="1919.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (6 samples, 0.10%)</title><rect x="832.8" y="2037" width="1.2" height="15.0" fill="rgb(244,113,38)" rx="2" ry="2" />
<text  x="835.83" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (29 samples, 0.49%)</title><rect x="894.9" y="1973" width="5.8" height="15.0" fill="rgb(211,47,45)" rx="2" ry="2" />
<text  x="897.90" y="1983.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="658.3" y="1765" width="0.2" height="15.0" fill="rgb(226,72,51)" rx="2" ry="2" />
<text  x="661.31" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="487.6" y="2037" width="0.2" height="15.0" fill="rgb(241,51,47)" rx="2" ry="2" />
<text  x="490.55" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (2 samples, 0.03%)</title><rect x="178.8" y="1941" width="0.4" height="15.0" fill="rgb(243,58,33)" rx="2" ry="2" />
<text  x="181.77" y="1951.5" ></text>
</g>
<g >
<title>std::push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt; &gt; &gt; &gt;, folly::FunctionScheduler::RunTimeOrder&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(216,167,27)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="931.8" y="1973" width="1.2" height="15.0" fill="rgb(238,9,22)" rx="2" ry="2" />
<text  x="934.79" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (22 samples, 0.37%)</title><rect x="291.8" y="1957" width="4.4" height="15.0" fill="rgb(207,62,4)" rx="2" ry="2" />
<text  x="294.81" y="1967.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (587 samples, 9.87%)</title><rect x="980.8" y="1989" width="116.4" height="15.0" fill="rgb(223,181,53)" rx="2" ry="2" />
<text  x="983.77" y="1999.5" >SYSC_recvfrom</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (39 samples, 0.66%)</title><rect x="347.1" y="2037" width="7.8" height="15.0" fill="rgb(232,138,18)" rx="2" ry="2" />
<text  x="350.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 2.57%)</title><rect x="568.7" y="2021" width="30.3" height="15.0" fill="rgb(205,138,47)" rx="2" ry="2" />
<text  x="571.67" y="2031.5" >[u..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="361.4" y="1909" width="0.2" height="15.0" fill="rgb(232,98,41)" rx="2" ry="2" />
<text  x="364.42" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (42 samples, 0.71%)</title><rect x="541.1" y="1973" width="8.3" height="15.0" fill="rgb(243,0,20)" rx="2" ry="2" />
<text  x="544.10" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="934.4" y="1989" width="0.4" height="15.0" fill="rgb(217,20,42)" rx="2" ry="2" />
<text  x="937.37" y="1999.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="545.1" y="1925" width="0.2" height="15.0" fill="rgb(225,8,31)" rx="2" ry="2" />
<text  x="548.07" y="1935.5" ></text>
</g>
<g >
<title>import_iovec (12 samples, 0.20%)</title><rect x="210.1" y="1925" width="2.4" height="15.0" fill="rgb(253,96,15)" rx="2" ry="2" />
<text  x="213.10" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10 samples, 0.17%)</title><rect x="299.9" y="1957" width="2.0" height="15.0" fill="rgb(252,210,30)" rx="2" ry="2" />
<text  x="302.94" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="214.7" y="1877" width="0.2" height="15.0" fill="rgb(236,149,1)" rx="2" ry="2" />
<text  x="217.67" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="549.4" y="1925" width="0.2" height="15.0" fill="rgb(227,126,24)" rx="2" ry="2" />
<text  x="552.43" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="542.3" y="1957" width="0.6" height="15.0" fill="rgb(244,126,10)" rx="2" ry="2" />
<text  x="545.29" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="80.8" y="37" width="1.8" height="15.0" fill="rgb(206,222,7)" rx="2" ry="2" />
<text  x="83.80" y="47.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="955.0" y="1797" width="0.2" height="15.0" fill="rgb(229,112,46)" rx="2" ry="2" />
<text  x="957.99" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(211,93,31)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="253.7" y="1653" width="0.2" height="15.0" fill="rgb(240,22,29)" rx="2" ry="2" />
<text  x="256.73" y="1663.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (4 samples, 0.07%)</title><rect x="266.0" y="1829" width="0.8" height="15.0" fill="rgb(248,62,28)" rx="2" ry="2" />
<text  x="269.03" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="588.7" y="1973" width="0.4" height="15.0" fill="rgb(207,144,12)" rx="2" ry="2" />
<text  x="591.70" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="637.5" y="1909" width="0.2" height="15.0" fill="rgb(214,127,49)" rx="2" ry="2" />
<text  x="640.48" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="618.0" y="2005" width="0.4" height="15.0" fill="rgb(242,152,8)" rx="2" ry="2" />
<text  x="621.05" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="905.2" y="1781" width="0.2" height="15.0" fill="rgb(225,93,27)" rx="2" ry="2" />
<text  x="908.21" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="303.3" y="1973" width="0.2" height="15.0" fill="rgb(244,184,0)" rx="2" ry="2" />
<text  x="306.31" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (16 samples, 0.27%)</title><rect x="329.7" y="1973" width="3.2" height="15.0" fill="rgb(229,113,48)" rx="2" ry="2" />
<text  x="332.69" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (4 samples, 0.07%)</title><rect x="334.6" y="1957" width="0.8" height="15.0" fill="rgb(214,96,1)" rx="2" ry="2" />
<text  x="337.65" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="822.1" y="1973" width="1.4" height="15.0" fill="rgb(239,142,0)" rx="2" ry="2" />
<text  x="825.12" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_free (69 samples, 1.16%)</title><rect x="992.1" y="1893" width="13.7" height="15.0" fill="rgb(215,43,21)" rx="2" ry="2" />
<text  x="995.08" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (95 samples, 1.60%)</title><rect x="234.7" y="1525" width="18.8" height="15.0" fill="rgb(212,175,50)" rx="2" ry="2" />
<text  x="237.70" y="1535.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="207.5" y="1973" width="0.2" height="15.0" fill="rgb(234,116,16)" rx="2" ry="2" />
<text  x="210.53" y="1983.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="804.3" y="1893" width="0.8" height="15.0" fill="rgb(211,113,23)" rx="2" ry="2" />
<text  x="807.27" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (30 samples, 0.50%)</title><rect x="339.2" y="1925" width="6.0" height="15.0" fill="rgb(243,44,7)" rx="2" ry="2" />
<text  x="342.21" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1093" width="39.3" height="15.0" fill="rgb(229,90,14)" rx="2" ry="2" />
<text  x="54.45" y="1103.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (190 samples, 3.19%)</title><rect x="112.3" y="1989" width="37.7" height="15.0" fill="rgb(250,77,38)" rx="2" ry="2" />
<text  x="115.33" y="1999.5" >fol..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="893.5" y="1957" width="0.2" height="15.0" fill="rgb(214,72,6)" rx="2" ry="2" />
<text  x="896.51" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="458.4" y="1973" width="0.2" height="15.0" fill="rgb(251,39,8)" rx="2" ry="2" />
<text  x="461.40" y="1983.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(235,204,39)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="170.0" y="2021" width="0.2" height="15.0" fill="rgb(213,10,18)" rx="2" ry="2" />
<text  x="173.04" y="2031.5" ></text>
</g>
<g >
<title>sys_epoll_wait (32 samples, 0.54%)</title><rect x="278.5" y="1989" width="6.4" height="15.0" fill="rgb(210,145,29)" rx="2" ry="2" />
<text  x="281.52" y="1999.5" ></text>
</g>
<g >
<title>__alloc_skb (16 samples, 0.27%)</title><rect x="226.8" y="1861" width="3.1" height="15.0" fill="rgb(205,160,21)" rx="2" ry="2" />
<text  x="229.76" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (27 samples, 0.45%)</title><rect x="377.1" y="2005" width="5.3" height="15.0" fill="rgb(237,100,45)" rx="2" ry="2" />
<text  x="380.09" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="825.1" y="2037" width="0.2" height="15.0" fill="rgb(231,108,46)" rx="2" ry="2" />
<text  x="828.09" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (18 samples, 0.30%)</title><rect x="461.8" y="1973" width="3.5" height="15.0" fill="rgb(237,97,43)" rx="2" ry="2" />
<text  x="464.77" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="353.1" y="2005" width="0.2" height="15.0" fill="rgb(247,29,23)" rx="2" ry="2" />
<text  x="356.09" y="2015.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="10.2" y="2005" width="1.0" height="15.0" fill="rgb(227,155,21)" rx="2" ry="2" />
<text  x="13.20" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="176.8" y="1957" width="1.0" height="15.0" fill="rgb(225,199,14)" rx="2" ry="2" />
<text  x="179.79" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="448.5" y="1909" width="0.2" height="15.0" fill="rgb(236,191,13)" rx="2" ry="2" />
<text  x="451.48" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="551.0" y="2005" width="0.2" height="15.0" fill="rgb(217,33,30)" rx="2" ry="2" />
<text  x="554.02" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 0.86%)</title><rect x="336.2" y="2005" width="10.1" height="15.0" fill="rgb(231,33,30)" rx="2" ry="2" />
<text  x="339.24" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="168.5" y="1925" width="0.2" height="15.0" fill="rgb(236,194,22)" rx="2" ry="2" />
<text  x="171.46" y="1935.5" ></text>
</g>
<g >
<title>page_frag_free (6 samples, 0.10%)</title><rect x="1023.2" y="1861" width="1.2" height="15.0" fill="rgb(229,125,9)" rx="2" ry="2" />
<text  x="1026.21" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.08%)</title><rect x="556.2" y="1941" width="1.0" height="15.0" fill="rgb(206,73,15)" rx="2" ry="2" />
<text  x="559.17" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="364.0" y="1989" width="0.4" height="15.0" fill="rgb(218,19,34)" rx="2" ry="2" />
<text  x="367.00" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="17.7" y="1973" width="0.2" height="15.0" fill="rgb(253,26,44)" rx="2" ry="2" />
<text  x="20.73" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="606.1" y="1957" width="0.2" height="15.0" fill="rgb(227,47,37)" rx="2" ry="2" />
<text  x="609.15" y="1967.5" ></text>
</g>
<g >
<title>ep_send_events_proc (28 samples, 0.47%)</title><rect x="279.3" y="1941" width="5.6" height="15.0" fill="rgb(250,39,16)" rx="2" ry="2" />
<text  x="282.32" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.07%)</title><rect x="364.4" y="2005" width="0.8" height="15.0" fill="rgb(239,129,51)" rx="2" ry="2" />
<text  x="367.40" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="15.6" y="1989" width="0.2" height="15.0" fill="rgb(253,75,34)" rx="2" ry="2" />
<text  x="18.55" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="420.9" y="1973" width="0.4" height="15.0" fill="rgb(220,72,8)" rx="2" ry="2" />
<text  x="423.92" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1349" width="39.3" height="15.0" fill="rgb(247,80,12)" rx="2" ry="2" />
<text  x="54.45" y="1359.5" >[un..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="955.0" y="1957" width="0.2" height="15.0" fill="rgb(224,70,38)" rx="2" ry="2" />
<text  x="957.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="549" width="39.3" height="15.0" fill="rgb(242,117,39)" rx="2" ry="2" />
<text  x="54.45" y="559.5" >[un..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="690.6" y="1957" width="2.6" height="15.0" fill="rgb(212,40,10)" rx="2" ry="2" />
<text  x="693.63" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="168.1" y="1909" width="0.2" height="15.0" fill="rgb(245,224,9)" rx="2" ry="2" />
<text  x="171.06" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (28 samples, 0.47%)</title><rect x="609.1" y="2005" width="5.6" height="15.0" fill="rgb(236,171,54)" rx="2" ry="2" />
<text  x="612.12" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="834.0" y="2021" width="0.2" height="15.0" fill="rgb(227,19,46)" rx="2" ry="2" />
<text  x="837.02" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="346.0" y="1973" width="0.3" height="15.0" fill="rgb(211,127,38)" rx="2" ry="2" />
<text  x="348.95" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.03%)</title><rect x="538.1" y="1989" width="0.4" height="15.0" fill="rgb(228,49,43)" rx="2" ry="2" />
<text  x="541.12" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="557.8" y="1973" width="0.2" height="15.0" fill="rgb(248,213,14)" rx="2" ry="2" />
<text  x="560.76" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="269.4" y="1845" width="0.2" height="15.0" fill="rgb(221,34,12)" rx="2" ry="2" />
<text  x="272.40" y="1855.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="249.0" y="1461" width="0.2" height="15.0" fill="rgb(233,194,10)" rx="2" ry="2" />
<text  x="251.97" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (22 samples, 0.37%)</title><rect x="310.3" y="1973" width="4.3" height="15.0" fill="rgb(230,4,3)" rx="2" ry="2" />
<text  x="313.26" y="1983.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="573.8" y="1973" width="0.2" height="15.0" fill="rgb(225,36,0)" rx="2" ry="2" />
<text  x="576.82" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="472.9" y="1957" width="0.2" height="15.0" fill="rgb(214,101,19)" rx="2" ry="2" />
<text  x="475.88" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="547.4" y="1957" width="1.2" height="15.0" fill="rgb(254,73,5)" rx="2" ry="2" />
<text  x="550.45" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(207,28,26)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="563.1" y="1989" width="0.2" height="15.0" fill="rgb(213,43,35)" rx="2" ry="2" />
<text  x="566.11" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="364.6" y="1957" width="0.2" height="15.0" fill="rgb(210,225,16)" rx="2" ry="2" />
<text  x="367.59" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="311.8" y="1957" width="0.6" height="15.0" fill="rgb(218,176,11)" rx="2" ry="2" />
<text  x="314.84" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="693.8" y="1957" width="0.2" height="15.0" fill="rgb(253,140,12)" rx="2" ry="2" />
<text  x="696.81" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (30 samples, 0.50%)</title><rect x="15.2" y="2005" width="5.9" height="15.0" fill="rgb(226,61,6)" rx="2" ry="2" />
<text  x="18.16" y="2015.5" ></text>
</g>
<g >
<title>__skb_clone (13 samples, 0.22%)</title><rect x="259.9" y="1797" width="2.6" height="15.0" fill="rgb(235,42,20)" rx="2" ry="2" />
<text  x="262.88" y="1807.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="228.7" y="1733" width="0.2" height="15.0" fill="rgb(218,69,5)" rx="2" ry="2" />
<text  x="231.75" y="1743.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="262.9" y="1797" width="0.4" height="15.0" fill="rgb(210,211,54)" rx="2" ry="2" />
<text  x="265.86" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (2 samples, 0.03%)</title><rect x="17.3" y="1973" width="0.4" height="15.0" fill="rgb(206,69,53)" rx="2" ry="2" />
<text  x="20.34" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (5 samples, 0.08%)</title><rect x="108.8" y="1941" width="1.0" height="15.0" fill="rgb(246,115,44)" rx="2" ry="2" />
<text  x="111.76" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (7 samples, 0.12%)</title><rect x="155.4" y="1973" width="1.4" height="15.0" fill="rgb(217,89,16)" rx="2" ry="2" />
<text  x="158.37" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="19.3" y="1957" width="0.2" height="15.0" fill="rgb(247,179,13)" rx="2" ry="2" />
<text  x="22.32" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (5 samples, 0.08%)</title><rect x="20.1" y="1989" width="1.0" height="15.0" fill="rgb(228,50,27)" rx="2" ry="2" />
<text  x="23.11" y="1999.5" ></text>
</g>
<g >
<title>free (37 samples, 0.62%)</title><rect x="955.4" y="2037" width="7.3" height="15.0" fill="rgb(251,2,35)" rx="2" ry="2" />
<text  x="958.39" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="834.6" y="2005" width="0.2" height="15.0" fill="rgb(211,119,4)" rx="2" ry="2" />
<text  x="837.61" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::makeEmptyScopeGuard (1 samples, 0.02%)</title><rect x="183.3" y="1909" width="0.2" height="15.0" fill="rgb(250,71,44)" rx="2" ry="2" />
<text  x="186.33" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="549.0" y="1909" width="0.2" height="15.0" fill="rgb(205,26,5)" rx="2" ry="2" />
<text  x="552.03" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (13 samples, 0.22%)</title><rect x="271.2" y="1957" width="2.6" height="15.0" fill="rgb(224,189,21)" rx="2" ry="2" />
<text  x="274.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="486.0" y="2037" width="0.2" height="15.0" fill="rgb(249,102,35)" rx="2" ry="2" />
<text  x="488.97" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="606.5" y="2037" width="0.4" height="15.0" fill="rgb(252,136,45)" rx="2" ry="2" />
<text  x="609.54" y="2047.5" ></text>
</g>
<g >
<title>_copy_to_iter (19 samples, 0.32%)</title><rect x="1066.4" y="1909" width="3.8" height="15.0" fill="rgb(244,189,0)" rx="2" ry="2" />
<text  x="1069.45" y="1919.5" ></text>
</g>
<g >
<title>jump_fcontext (103 samples, 1.73%)</title><rect x="934.8" y="2005" width="20.4" height="15.0" fill="rgb(252,206,9)" rx="2" ry="2" />
<text  x="937.76" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="417.9" y="2005" width="0.4" height="15.0" fill="rgb(217,136,26)" rx="2" ry="2" />
<text  x="420.94" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(244,162,43)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="166.1" y="2005" width="0.2" height="15.0" fill="rgb(214,217,6)" rx="2" ry="2" />
<text  x="169.08" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1114.2" y="1973" width="0.2" height="15.0" fill="rgb(251,76,8)" rx="2" ry="2" />
<text  x="1117.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (255 samples, 4.29%)</title><rect x="376.1" y="2037" width="50.6" height="15.0" fill="rgb(229,183,42)" rx="2" ry="2" />
<text  x="379.10" y="2047.5" >faceb..</text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (8 samples, 0.13%)</title><rect x="1112.3" y="2005" width="1.5" height="15.0" fill="rgb(252,110,44)" rx="2" ry="2" />
<text  x="1115.26" y="2015.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="156.8" y="1973" width="0.7" height="15.0" fill="rgb(207,63,34)" rx="2" ry="2" />
<text  x="159.76" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1269" width="39.3" height="15.0" fill="rgb(214,69,24)" rx="2" ry="2" />
<text  x="54.45" y="1279.5" >[un..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="497.9" y="1957" width="0.2" height="15.0" fill="rgb(214,145,44)" rx="2" ry="2" />
<text  x="500.87" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="436.0" y="1941" width="0.2" height="15.0" fill="rgb(238,169,33)" rx="2" ry="2" />
<text  x="438.99" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="1092.6" y="1845" width="0.2" height="15.0" fill="rgb(229,130,10)" rx="2" ry="2" />
<text  x="1095.63" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (8 samples, 0.13%)</title><rect x="591.7" y="1989" width="1.6" height="15.0" fill="rgb(211,53,41)" rx="2" ry="2" />
<text  x="594.67" y="1999.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.6" y="1973" width="0.8" height="15.0" fill="rgb(241,74,14)" rx="2" ry="2" />
<text  x="14.59" y="1983.5" ></text>
</g>
<g >
<title>skb_free_head (68 samples, 1.14%)</title><rect x="1010.9" y="1877" width="13.5" height="15.0" fill="rgb(239,153,17)" rx="2" ry="2" />
<text  x="1013.92" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="85.4" y="37" width="0.2" height="15.0" fill="rgb(226,24,44)" rx="2" ry="2" />
<text  x="88.36" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (33 samples, 0.55%)</title><rect x="917.3" y="1909" width="6.6" height="15.0" fill="rgb(242,121,49)" rx="2" ry="2" />
<text  x="920.31" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="635.7" y="1909" width="0.6" height="15.0" fill="rgb(216,44,1)" rx="2" ry="2" />
<text  x="638.70" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="177.4" y="1941" width="0.2" height="15.0" fill="rgb(234,220,1)" rx="2" ry="2" />
<text  x="180.38" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="565.9" y="1973" width="0.6" height="15.0" fill="rgb(228,131,21)" rx="2" ry="2" />
<text  x="568.89" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="684.9" y="1893" width="0.2" height="15.0" fill="rgb(254,184,11)" rx="2" ry="2" />
<text  x="687.88" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="111.9" y="1989" width="0.2" height="15.0" fill="rgb(234,222,8)" rx="2" ry="2" />
<text  x="114.94" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="971.1" y="2005" width="0.2" height="15.0" fill="rgb(227,91,6)" rx="2" ry="2" />
<text  x="974.06" y="2015.5" ></text>
</g>
<g >
<title>skb_release_head_state (77 samples, 1.29%)</title><rect x="1024.4" y="1893" width="15.3" height="15.0" fill="rgb(218,157,46)" rx="2" ry="2" />
<text  x="1027.40" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="970.3" y="2005" width="0.2" height="15.0" fill="rgb(253,37,12)" rx="2" ry="2" />
<text  x="973.26" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="532.0" y="1941" width="0.2" height="15.0" fill="rgb(207,193,11)" rx="2" ry="2" />
<text  x="534.98" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (530 samples, 8.91%)</title><rect x="850.3" y="2037" width="105.1" height="15.0" fill="rgb(243,131,27)" rx="2" ry="2" />
<text  x="853.28" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="537.5" y="1989" width="0.6" height="15.0" fill="rgb(230,12,40)" rx="2" ry="2" />
<text  x="540.53" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="446.7" y="1909" width="0.6" height="15.0" fill="rgb(239,140,18)" rx="2" ry="2" />
<text  x="449.70" y="1919.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1099.0" y="2053" width="0.2" height="15.0" fill="rgb(217,84,0)" rx="2" ry="2" />
<text  x="1101.97" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="824.9" y="2005" width="0.2" height="15.0" fill="rgb(240,206,19)" rx="2" ry="2" />
<text  x="827.89" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (27 samples, 0.45%)</title><rect x="178.2" y="2005" width="5.3" height="15.0" fill="rgb(244,102,10)" rx="2" ry="2" />
<text  x="181.17" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (4 samples, 0.07%)</title><rect x="546.3" y="1941" width="0.7" height="15.0" fill="rgb(238,115,7)" rx="2" ry="2" />
<text  x="549.26" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="557.0" y="1909" width="0.2" height="15.0" fill="rgb(240,77,32)" rx="2" ry="2" />
<text  x="559.96" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="545.3" y="1941" width="0.2" height="15.0" fill="rgb(216,72,7)" rx="2" ry="2" />
<text  x="548.26" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (26 samples, 0.44%)</title><rect x="298.0" y="1989" width="5.1" height="15.0" fill="rgb(215,145,36)" rx="2" ry="2" />
<text  x="300.96" y="1999.5" ></text>
</g>
<g >
<title>inet_sendmsg (287 samples, 4.82%)</title><rect x="213.3" y="1925" width="56.9" height="15.0" fill="rgb(216,1,34)" rx="2" ry="2" />
<text  x="216.28" y="1935.5" >inet_s..</text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.10%)</title><rect x="304.3" y="1957" width="1.2" height="15.0" fill="rgb(213,13,45)" rx="2" ry="2" />
<text  x="307.31" y="1967.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (18 samples, 0.30%)</title><rect x="1066.4" y="1893" width="3.6" height="15.0" fill="rgb(224,147,27)" rx="2" ry="2" />
<text  x="1069.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="264.0" y="1829" width="0.2" height="15.0" fill="rgb(231,103,26)" rx="2" ry="2" />
<text  x="267.05" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1013" width="39.3" height="15.0" fill="rgb(220,172,31)" rx="2" ry="2" />
<text  x="54.45" y="1023.5" >[un..</text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (26 samples, 0.44%)</title><rect x="895.3" y="1957" width="5.2" height="15.0" fill="rgb(226,177,10)" rx="2" ry="2" />
<text  x="898.30" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1957" width="39.3" height="15.0" fill="rgb(247,208,19)" rx="2" ry="2" />
<text  x="54.45" y="1967.5" >[un..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="812.8" y="1973" width="0.6" height="15.0" fill="rgb(210,9,38)" rx="2" ry="2" />
<text  x="815.80" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (57 samples, 0.96%)</title><rect x="1011.9" y="1845" width="11.3" height="15.0" fill="rgb(207,2,2)" rx="2" ry="2" />
<text  x="1014.91" y="1855.5" ></text>
</g>
<g >
<title>sch_direct_xmit (25 samples, 0.42%)</title><rect x="254.5" y="1701" width="5.0" height="15.0" fill="rgb(225,189,6)" rx="2" ry="2" />
<text  x="257.53" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="323.5" y="1989" width="0.2" height="15.0" fill="rgb(232,170,45)" rx="2" ry="2" />
<text  x="326.54" y="1999.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (89 samples, 1.50%)</title><rect x="235.3" y="1477" width="17.6" height="15.0" fill="rgb(218,103,27)" rx="2" ry="2" />
<text  x="238.29" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (4 samples, 0.07%)</title><rect x="485.2" y="2037" width="0.8" height="15.0" fill="rgb(246,44,6)" rx="2" ry="2" />
<text  x="488.17" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="469" width="39.3" height="15.0" fill="rgb(214,163,21)" rx="2" ry="2" />
<text  x="54.45" y="479.5" >[un..</text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="11.2" y="1989" width="0.2" height="15.0" fill="rgb(236,176,45)" rx="2" ry="2" />
<text  x="14.19" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (4 samples, 0.07%)</title><rect x="409.0" y="2005" width="0.8" height="15.0" fill="rgb(215,129,51)" rx="2" ry="2" />
<text  x="412.02" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="587.5" y="1973" width="0.2" height="15.0" fill="rgb(210,51,38)" rx="2" ry="2" />
<text  x="590.51" y="1983.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (10 samples, 0.17%)</title><rect x="876.5" y="1973" width="1.9" height="15.0" fill="rgb(228,132,30)" rx="2" ry="2" />
<text  x="879.46" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (11 samples, 0.18%)</title><rect x="508.8" y="1989" width="2.2" height="15.0" fill="rgb(215,151,6)" rx="2" ry="2" />
<text  x="511.77" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="639.3" y="1909" width="0.2" height="15.0" fill="rgb(218,180,27)" rx="2" ry="2" />
<text  x="642.27" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="362.4" y="1925" width="0.2" height="15.0" fill="rgb(232,229,53)" rx="2" ry="2" />
<text  x="365.41" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="531.8" y="1909" width="0.2" height="15.0" fill="rgb(249,179,49)" rx="2" ry="2" />
<text  x="534.78" y="1919.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="658.3" y="1749" width="0.2" height="15.0" fill="rgb(223,201,16)" rx="2" ry="2" />
<text  x="661.31" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2005" width="0.2" height="15.0" fill="rgb(232,46,23)" rx="2" ry="2" />
<text  x="14.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (7 samples, 0.12%)</title><rect x="601.4" y="2037" width="1.4" height="15.0" fill="rgb(243,152,32)" rx="2" ry="2" />
<text  x="604.39" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1877" width="39.3" height="15.0" fill="rgb(253,173,48)" rx="2" ry="2" />
<text  x="54.45" y="1887.5" >[un..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="356.3" y="1957" width="0.2" height="15.0" fill="rgb(242,192,14)" rx="2" ry="2" />
<text  x="359.27" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="176.0" y="1957" width="0.4" height="15.0" fill="rgb(229,141,42)" rx="2" ry="2" />
<text  x="178.99" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="357.5" y="1941" width="0.2" height="15.0" fill="rgb(254,18,11)" rx="2" ry="2" />
<text  x="360.46" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="954.8" y="1989" width="0.4" height="15.0" fill="rgb(207,41,35)" rx="2" ry="2" />
<text  x="957.79" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="277.5" y="2037" width="0.2" height="15.0" fill="rgb(216,177,35)" rx="2" ry="2" />
<text  x="280.53" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="557.2" y="1925" width="0.2" height="15.0" fill="rgb(231,81,33)" rx="2" ry="2" />
<text  x="560.16" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="547.0" y="1941" width="0.4" height="15.0" fill="rgb(214,72,52)" rx="2" ry="2" />
<text  x="550.05" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="813.0" y="1925" width="0.4" height="15.0" fill="rgb(208,106,8)" rx="2" ry="2" />
<text  x="815.99" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (3 samples, 0.05%)</title><rect x="570.1" y="1973" width="0.5" height="15.0" fill="rgb(207,3,8)" rx="2" ry="2" />
<text  x="573.05" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (3 samples, 0.05%)</title><rect x="500.4" y="1989" width="0.6" height="15.0" fill="rgb(252,213,30)" rx="2" ry="2" />
<text  x="503.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="165.9" y="2021" width="0.2" height="15.0" fill="rgb(249,61,53)" rx="2" ry="2" />
<text  x="168.88" y="2031.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="658.3" y="1717" width="0.2" height="15.0" fill="rgb(220,4,47)" rx="2" ry="2" />
<text  x="661.31" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (95 samples, 1.60%)</title><rect x="234.7" y="1669" width="18.8" height="15.0" fill="rgb(233,13,19)" rx="2" ry="2" />
<text  x="237.70" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="53.4" y="37" width="0.2" height="15.0" fill="rgb(247,27,42)" rx="2" ry="2" />
<text  x="56.43" y="47.5" ></text>
</g>
<g >
<title>__free_slab (3 samples, 0.05%)</title><rect x="1022.6" y="1781" width="0.6" height="15.0" fill="rgb(236,224,31)" rx="2" ry="2" />
<text  x="1025.62" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="474.1" y="2005" width="0.4" height="15.0" fill="rgb(220,24,26)" rx="2" ry="2" />
<text  x="477.07" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (2 samples, 0.03%)</title><rect x="285.7" y="2037" width="0.4" height="15.0" fill="rgb(241,96,49)" rx="2" ry="2" />
<text  x="288.66" y="2047.5" ></text>
</g>
<g >
<title>folly::Optional&lt;facebook::memcache::McServerRequestContext&gt;::emplace&lt;facebook::memcache::McServerRequestContext&gt; (1 samples, 0.02%)</title><rect x="832.4" y="2037" width="0.2" height="15.0" fill="rgb(222,126,6)" rx="2" ry="2" />
<text  x="835.43" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (48 samples, 0.81%)</title><rect x="336.4" y="1957" width="9.6" height="15.0" fill="rgb(214,97,4)" rx="2" ry="2" />
<text  x="339.43" y="1967.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (4 samples, 0.07%)</title><rect x="277.7" y="2037" width="0.8" height="15.0" fill="rgb(211,187,19)" rx="2" ry="2" />
<text  x="280.73" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (7 samples, 0.12%)</title><rect x="926.8" y="1909" width="1.4" height="15.0" fill="rgb(206,139,1)" rx="2" ry="2" />
<text  x="929.83" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="174.2" y="1957" width="0.2" height="15.0" fill="rgb(241,162,3)" rx="2" ry="2" />
<text  x="177.21" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (8 samples, 0.13%)</title><rect x="343.2" y="1861" width="1.6" height="15.0" fill="rgb(238,55,30)" rx="2" ry="2" />
<text  x="346.18" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (110 samples, 1.85%)</title><rect x="787.4" y="1989" width="21.8" height="15.0" fill="rgb(239,201,9)" rx="2" ry="2" />
<text  x="790.41" y="1999.5" >f..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="563.1" y="1893" width="0.2" height="15.0" fill="rgb(251,6,39)" rx="2" ry="2" />
<text  x="566.11" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="620.0" y="1973" width="0.6" height="15.0" fill="rgb(254,5,16)" rx="2" ry="2" />
<text  x="623.03" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="295.8" y="1941" width="0.4" height="15.0" fill="rgb(250,43,18)" rx="2" ry="2" />
<text  x="298.78" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (7 samples, 0.12%)</title><rect x="321.2" y="1989" width="1.4" height="15.0" fill="rgb(253,199,37)" rx="2" ry="2" />
<text  x="324.16" y="1999.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (23 samples, 0.39%)</title><rect x="895.7" y="1925" width="4.6" height="15.0" fill="rgb(222,224,24)" rx="2" ry="2" />
<text  x="898.69" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="542.5" y="1893" width="0.4" height="15.0" fill="rgb(220,175,18)" rx="2" ry="2" />
<text  x="545.49" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="905.2" y="1845" width="0.2" height="15.0" fill="rgb(230,163,17)" rx="2" ry="2" />
<text  x="908.21" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (27 samples, 0.45%)</title><rect x="178.2" y="2021" width="5.3" height="15.0" fill="rgb(253,31,11)" rx="2" ry="2" />
<text  x="181.17" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="545.7" y="1893" width="0.4" height="15.0" fill="rgb(212,141,48)" rx="2" ry="2" />
<text  x="548.66" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="338.4" y="1909" width="0.2" height="15.0" fill="rgb(216,169,49)" rx="2" ry="2" />
<text  x="341.42" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.07%)</title><rect x="364.4" y="1989" width="0.8" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="367.40" y="1999.5" ></text>
</g>
<g >
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="233.7" y="1781" width="0.6" height="15.0" fill="rgb(252,0,31)" rx="2" ry="2" />
<text  x="236.70" y="1791.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.6" y="1845" width="0.8" height="15.0" fill="rgb(220,129,40)" rx="2" ry="2" />
<text  x="14.59" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (10 samples, 0.17%)</title><rect x="424.7" y="1989" width="2.0" height="15.0" fill="rgb(244,44,4)" rx="2" ry="2" />
<text  x="427.69" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::recv (1 samples, 0.02%)</title><rect x="19.9" y="1973" width="0.2" height="15.0" fill="rgb(239,37,33)" rx="2" ry="2" />
<text  x="22.92" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.1" y="1941" width="0.2" height="15.0" fill="rgb(248,106,3)" rx="2" ry="2" />
<text  x="123.07" y="1951.5" ></text>
</g>
<g >
<title>[mcrouter] (144 samples, 2.42%)</title><rect x="901.2" y="1941" width="28.6" height="15.0" fill="rgb(219,18,44)" rx="2" ry="2" />
<text  x="904.25" y="1951.5" >[m..</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="825.3" y="2037" width="0.6" height="15.0" fill="rgb(226,0,5)" rx="2" ry="2" />
<text  x="828.29" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="144.9" y="1941" width="0.4" height="15.0" fill="rgb(241,175,34)" rx="2" ry="2" />
<text  x="147.86" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.1" y="1973" width="0.2" height="15.0" fill="rgb(239,164,37)" rx="2" ry="2" />
<text  x="123.07" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="813.2" y="1893" width="0.2" height="15.0" fill="rgb(207,206,2)" rx="2" ry="2" />
<text  x="816.19" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="11.2" y="1957" width="0.2" height="15.0" fill="rgb(242,62,40)" rx="2" ry="2" />
<text  x="14.19" y="1967.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="1096.0" y="1925" width="0.8" height="15.0" fill="rgb(241,67,19)" rx="2" ry="2" />
<text  x="1099.00" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="821.3" y="1989" width="2.4" height="15.0" fill="rgb(219,17,21)" rx="2" ry="2" />
<text  x="824.32" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (95 samples, 1.60%)</title><rect x="234.7" y="1733" width="18.8" height="15.0" fill="rgb(238,16,22)" rx="2" ry="2" />
<text  x="237.70" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="813.4" y="1957" width="0.2" height="15.0" fill="rgb(218,207,50)" rx="2" ry="2" />
<text  x="816.39" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1461" width="39.3" height="15.0" fill="rgb(206,187,30)" rx="2" ry="2" />
<text  x="54.45" y="1471.5" >[un..</text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="330.9" y="1941" width="0.6" height="15.0" fill="rgb(225,153,6)" rx="2" ry="2" />
<text  x="333.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.96%)</title><rect x="812.4" y="2021" width="11.3" height="15.0" fill="rgb(252,168,3)" rx="2" ry="2" />
<text  x="815.40" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="185.5" y="2021" width="0.4" height="15.0" fill="rgb(245,35,48)" rx="2" ry="2" />
<text  x="188.51" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (30 samples, 0.50%)</title><rect x="579.0" y="1973" width="5.9" height="15.0" fill="rgb(230,111,39)" rx="2" ry="2" />
<text  x="581.98" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (127 samples, 2.13%)</title><rect x="234.3" y="1749" width="25.2" height="15.0" fill="rgb(242,55,15)" rx="2" ry="2" />
<text  x="237.30" y="1759.5" >i..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (63 samples, 1.06%)</title><rect x="308.7" y="1989" width="12.5" height="15.0" fill="rgb(205,168,21)" rx="2" ry="2" />
<text  x="311.67" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="287.4" y="1973" width="0.2" height="15.0" fill="rgb(206,188,41)" rx="2" ry="2" />
<text  x="290.45" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="931.6" y="1973" width="0.2" height="15.0" fill="rgb(234,14,29)" rx="2" ry="2" />
<text  x="934.59" y="1983.5" ></text>
</g>
<g >
<title>sock_recvmsg (573 samples, 9.63%)</title><rect x="982.2" y="1973" width="113.6" height="15.0" fill="rgb(238,55,25)" rx="2" ry="2" />
<text  x="985.16" y="1983.5" >sock_recvmsg</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1333" width="39.3" height="15.0" fill="rgb(229,74,36)" rx="2" ry="2" />
<text  x="54.45" y="1343.5" >[un..</text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="262.5" y="1813" width="0.2" height="15.0" fill="rgb(238,211,13)" rx="2" ry="2" />
<text  x="265.46" y="1823.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (5 samples, 0.08%)</title><rect x="265.0" y="1813" width="1.0" height="15.0" fill="rgb(210,97,20)" rx="2" ry="2" />
<text  x="268.04" y="1823.5" ></text>
</g>
<g >
<title>mod_timer (5 samples, 0.08%)</title><rect x="265.0" y="1765" width="1.0" height="15.0" fill="rgb(251,78,39)" rx="2" ry="2" />
<text  x="268.04" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (7 samples, 0.12%)</title><rect x="324.7" y="1957" width="1.4" height="15.0" fill="rgb(247,146,20)" rx="2" ry="2" />
<text  x="327.73" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="168.7" y="1957" width="0.4" height="15.0" fill="rgb(248,97,22)" rx="2" ry="2" />
<text  x="171.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="382.4" y="2005" width="0.2" height="15.0" fill="rgb(249,4,15)" rx="2" ry="2" />
<text  x="385.44" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="274.2" y="2021" width="1.9" height="15.0" fill="rgb(225,221,13)" rx="2" ry="2" />
<text  x="277.16" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1429" width="39.3" height="15.0" fill="rgb(240,80,8)" rx="2" ry="2" />
<text  x="54.45" y="1439.5" >[un..</text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="231.5" y="1829" width="0.2" height="15.0" fill="rgb(243,51,39)" rx="2" ry="2" />
<text  x="234.52" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::zero (2 samples, 0.03%)</title><rect x="73.9" y="37" width="0.4" height="15.0" fill="rgb(210,196,25)" rx="2" ry="2" />
<text  x="76.86" y="47.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="228.2" y="1829" width="0.9" height="15.0" fill="rgb(249,111,45)" rx="2" ry="2" />
<text  x="231.15" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="369.2" y="2037" width="0.2" height="15.0" fill="rgb(253,222,22)" rx="2" ry="2" />
<text  x="372.16" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="498.1" y="1973" width="0.2" height="15.0" fill="rgb(219,104,4)" rx="2" ry="2" />
<text  x="501.06" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (28 samples, 0.47%)</title><rect x="357.1" y="1989" width="5.5" height="15.0" fill="rgb(222,55,39)" rx="2" ry="2" />
<text  x="360.06" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="269.6" y="1845" width="0.2" height="15.0" fill="rgb(239,137,11)" rx="2" ry="2" />
<text  x="272.60" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="955.0" y="1909" width="0.2" height="15.0" fill="rgb(241,187,41)" rx="2" ry="2" />
<text  x="957.99" y="1919.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="537.3" y="1989" width="0.2" height="15.0" fill="rgb(228,68,21)" rx="2" ry="2" />
<text  x="540.33" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="533" width="39.3" height="15.0" fill="rgb(215,83,0)" rx="2" ry="2" />
<text  x="54.45" y="543.5" >[un..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (153 samples, 2.57%)</title><rect x="568.7" y="2037" width="30.3" height="15.0" fill="rgb(213,162,38)" rx="2" ry="2" />
<text  x="571.67" y="2047.5" >fa..</text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="880.2" y="1829" width="0.2" height="15.0" fill="rgb(243,7,3)" rx="2" ry="2" />
<text  x="883.23" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;void  (19 samples, 0.32%)</title><rect x="693.2" y="1973" width="3.8" height="15.0" fill="rgb(244,97,31)" rx="2" ry="2" />
<text  x="696.21" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="74.3" y="37" width="0.4" height="15.0" fill="rgb(206,157,25)" rx="2" ry="2" />
<text  x="77.26" y="47.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="1134.7" y="1957" width="0.2" height="15.0" fill="rgb(234,202,50)" rx="2" ry="2" />
<text  x="1137.67" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="253.1" y="1445" width="0.4" height="15.0" fill="rgb(224,17,15)" rx="2" ry="2" />
<text  x="256.14" y="1455.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (9 samples, 0.15%)</title><rect x="360.0" y="1925" width="1.8" height="15.0" fill="rgb(231,177,7)" rx="2" ry="2" />
<text  x="363.03" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (22 samples, 0.37%)</title><rect x="461.0" y="1989" width="4.3" height="15.0" fill="rgb(227,229,32)" rx="2" ry="2" />
<text  x="463.98" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (25 samples, 0.42%)</title><rect x="357.7" y="1957" width="4.9" height="15.0" fill="rgb(216,36,29)" rx="2" ry="2" />
<text  x="360.65" y="1967.5" ></text>
</g>
<g >
<title>all (5,950 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(238,28,5)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>ip_copy_addrs (3 samples, 0.05%)</title><rect x="232.7" y="1813" width="0.6" height="15.0" fill="rgb(248,118,10)" rx="2" ry="2" />
<text  x="235.71" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (8 samples, 0.13%)</title><rect x="367.6" y="2037" width="1.6" height="15.0" fill="rgb(212,143,52)" rx="2" ry="2" />
<text  x="370.57" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output (127 samples, 2.13%)</title><rect x="234.3" y="1765" width="25.2" height="15.0" fill="rgb(215,41,20)" rx="2" ry="2" />
<text  x="237.30" y="1775.5" >i..</text>
</g>
<g >
<title>[unknown] (241 samples, 4.05%)</title><rect x="426.7" y="2021" width="47.8" height="15.0" fill="rgb(216,20,16)" rx="2" ry="2" />
<text  x="429.67" y="2031.5" >[unk..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (17 samples, 0.29%)</title><rect x="166.5" y="2005" width="3.3" height="15.0" fill="rgb(220,15,31)" rx="2" ry="2" />
<text  x="169.47" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="182.1" y="1909" width="0.2" height="15.0" fill="rgb(232,163,53)" rx="2" ry="2" />
<text  x="185.14" y="1919.5" ></text>
</g>
<g >
<title>sys_sendmsg (333 samples, 5.60%)</title><rect x="207.7" y="1989" width="66.1" height="15.0" fill="rgb(216,52,28)" rx="2" ry="2" />
<text  x="210.72" y="1999.5" >sys_sen..</text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (241 samples, 4.05%)</title><rect x="426.7" y="2037" width="47.8" height="15.0" fill="rgb(254,182,6)" rx="2" ry="2" />
<text  x="429.67" y="2047.5" >face..</text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1113.1" y="1989" width="0.2" height="15.0" fill="rgb(214,88,5)" rx="2" ry="2" />
<text  x="1116.05" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="111.5" y="1941" width="0.2" height="15.0" fill="rgb(244,110,32)" rx="2" ry="2" />
<text  x="114.54" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="968.7" y="2005" width="0.2" height="15.0" fill="rgb(226,147,40)" rx="2" ry="2" />
<text  x="971.68" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="905.2" y="1893" width="0.2" height="15.0" fill="rgb(218,154,53)" rx="2" ry="2" />
<text  x="908.21" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="175.8" y="1957" width="0.2" height="15.0" fill="rgb(249,136,28)" rx="2" ry="2" />
<text  x="178.79" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="781.5" y="2005" width="0.2" height="15.0" fill="rgb(251,193,17)" rx="2" ry="2" />
<text  x="784.46" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="557.0" y="1925" width="0.2" height="15.0" fill="rgb(231,184,10)" rx="2" ry="2" />
<text  x="559.96" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (12 samples, 0.20%)</title><rect x="69.9" y="37" width="2.4" height="15.0" fill="rgb(227,93,15)" rx="2" ry="2" />
<text  x="72.89" y="47.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::FunctionScheduler::RepeatFunc, std::default_delete&lt;folly::FunctionScheduler::RepeatFunc&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="10.0" y="1861" width="0.2" height="15.0" fill="rgb(246,104,52)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="532.2" y="1989" width="0.4" height="15.0" fill="rgb(206,12,8)" rx="2" ry="2" />
<text  x="535.17" y="1999.5" ></text>
</g>
<g >
<title>jump_fcontext (2 samples, 0.03%)</title><rect x="681.3" y="1877" width="0.4" height="15.0" fill="rgb(220,205,46)" rx="2" ry="2" />
<text  x="684.31" y="1887.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="436.0" y="1909" width="0.2" height="15.0" fill="rgb(228,106,22)" rx="2" ry="2" />
<text  x="438.99" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="458.6" y="1973" width="0.4" height="15.0" fill="rgb(230,191,11)" rx="2" ry="2" />
<text  x="461.60" y="1983.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="12.6" y="1941" width="1.0" height="15.0" fill="rgb(246,111,17)" rx="2" ry="2" />
<text  x="15.58" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (3 samples, 0.05%)</title><rect x="523.4" y="1989" width="0.6" height="15.0" fill="rgb(206,197,27)" rx="2" ry="2" />
<text  x="526.45" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="606.1" y="1861" width="0.2" height="15.0" fill="rgb(220,197,20)" rx="2" ry="2" />
<text  x="609.15" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="176.6" y="1973" width="1.2" height="15.0" fill="rgb(253,109,34)" rx="2" ry="2" />
<text  x="179.59" y="1983.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="213.1" y="1925" width="0.2" height="15.0" fill="rgb(243,199,5)" rx="2" ry="2" />
<text  x="216.08" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="905.2" y="1909" width="0.2" height="15.0" fill="rgb(212,204,20)" rx="2" ry="2" />
<text  x="908.21" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="608.3" y="1989" width="0.4" height="15.0" fill="rgb(230,199,14)" rx="2" ry="2" />
<text  x="611.33" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="617.8" y="2037" width="0.2" height="15.0" fill="rgb(237,157,30)" rx="2" ry="2" />
<text  x="620.85" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (74 samples, 1.24%)</title><rect x="1131.9" y="2005" width="14.7" height="15.0" fill="rgb(231,84,41)" rx="2" ry="2" />
<text  x="1134.89" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="1081.1" y="1717" width="0.4" height="15.0" fill="rgb(238,213,2)" rx="2" ry="2" />
<text  x="1084.12" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="323.7" y="1989" width="0.2" height="15.0" fill="rgb(233,8,6)" rx="2" ry="2" />
<text  x="326.74" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="549.2" y="1861" width="0.2" height="15.0" fill="rgb(210,132,3)" rx="2" ry="2" />
<text  x="552.23" y="1871.5" ></text>
</g>
<g >
<title>__check_object_size (10 samples, 0.17%)</title><rect x="1064.5" y="1909" width="1.9" height="15.0" fill="rgb(230,203,9)" rx="2" ry="2" />
<text  x="1067.46" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (253 samples, 4.25%)</title><rect x="488.3" y="2005" width="50.2" height="15.0" fill="rgb(231,19,50)" rx="2" ry="2" />
<text  x="491.35" y="2015.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (8 samples, 0.13%)</title><rect x="453.0" y="1909" width="1.6" height="15.0" fill="rgb(221,35,7)" rx="2" ry="2" />
<text  x="456.05" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="600.6" y="2037" width="0.8" height="15.0" fill="rgb(223,224,34)" rx="2" ry="2" />
<text  x="603.59" y="2047.5" ></text>
</g>
<g >
<title>std::thread::id::id (11 samples, 0.18%)</title><rect x="912.9" y="1877" width="2.2" height="15.0" fill="rgb(230,167,37)" rx="2" ry="2" />
<text  x="915.95" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="497.9" y="1909" width="0.2" height="15.0" fill="rgb(208,3,7)" rx="2" ry="2" />
<text  x="500.87" y="1919.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="226.6" y="1829" width="0.2" height="15.0" fill="rgb(242,139,40)" rx="2" ry="2" />
<text  x="229.56" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="464.9" y="1957" width="0.4" height="15.0" fill="rgb(250,216,16)" rx="2" ry="2" />
<text  x="467.94" y="1967.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1076.2" y="1861" width="0.2" height="15.0" fill="rgb(228,128,1)" rx="2" ry="2" />
<text  x="1079.16" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="850.3" y="1957" width="0.2" height="15.0" fill="rgb(218,220,28)" rx="2" ry="2" />
<text  x="853.28" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (8 samples, 0.13%)</title><rect x="836.8" y="2037" width="1.6" height="15.0" fill="rgb(216,100,31)" rx="2" ry="2" />
<text  x="839.79" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="548.6" y="1941" width="0.2" height="15.0" fill="rgb(238,208,31)" rx="2" ry="2" />
<text  x="551.64" y="1951.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="930.8" y="1989" width="0.2" height="15.0" fill="rgb(236,21,20)" rx="2" ry="2" />
<text  x="933.80" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="922.5" y="1893" width="0.2" height="15.0" fill="rgb(205,84,17)" rx="2" ry="2" />
<text  x="925.47" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.13%)</title><rect x="876.9" y="1957" width="1.5" height="15.0" fill="rgb(244,82,41)" rx="2" ry="2" />
<text  x="879.85" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="545.7" y="1877" width="0.4" height="15.0" fill="rgb(213,107,24)" rx="2" ry="2" />
<text  x="548.66" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="905.2" y="1877" width="0.2" height="15.0" fill="rgb(216,38,36)" rx="2" ry="2" />
<text  x="908.21" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (1 samples, 0.02%)</title><rect x="486.6" y="2037" width="0.2" height="15.0" fill="rgb(211,129,35)" rx="2" ry="2" />
<text  x="489.56" y="2047.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="536.9" y="1989" width="0.2" height="15.0" fill="rgb(228,224,27)" rx="2" ry="2" />
<text  x="539.93" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="608.1" y="1989" width="0.2" height="15.0" fill="rgb(244,120,20)" rx="2" ry="2" />
<text  x="611.13" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="1046.8" y="1861" width="0.4" height="15.0" fill="rgb(214,21,6)" rx="2" ry="2" />
<text  x="1049.81" y="1871.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="684.5" y="1893" width="0.2" height="15.0" fill="rgb(224,121,48)" rx="2" ry="2" />
<text  x="687.48" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="345.2" y="1941" width="0.2" height="15.0" fill="rgb(247,49,1)" rx="2" ry="2" />
<text  x="348.16" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="1797" width="39.3" height="15.0" fill="rgb(233,49,48)" rx="2" ry="2" />
<text  x="54.45" y="1807.5" >[un..</text>
</g>
<g >
<title>[unknown] (198 samples, 3.33%)</title><rect x="51.4" y="917" width="39.3" height="15.0" fill="rgb(212,100,48)" rx="2" ry="2" />
<text  x="54.45" y="927.5" >[un..</text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.6" y="1829" width="0.8" height="15.0" fill="rgb(240,190,18)" rx="2" ry="2" />
<text  x="15.58" y="1839.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="436.0" y="1925" width="0.2" height="15.0" fill="rgb(237,185,43)" rx="2" ry="2" />
<text  x="438.99" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="571.8" y="1957" width="1.6" height="15.0" fill="rgb(232,198,1)" rx="2" ry="2" />
<text  x="574.84" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="356.5" y="1973" width="0.4" height="15.0" fill="rgb(232,45,20)" rx="2" ry="2" />
<text  x="359.46" y="1983.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="497.9" y="1845" width="0.2" height="15.0" fill="rgb(230,13,52)" rx="2" ry="2" />
<text  x="500.87" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.45%)</title><rect x="568.7" y="1989" width="5.3" height="15.0" fill="rgb(233,132,41)" rx="2" ry="2" />
<text  x="571.67" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="456.4" y="1957" width="0.2" height="15.0" fill="rgb(223,118,9)" rx="2" ry="2" />
<text  x="459.42" y="1967.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="687.3" y="1909" width="0.2" height="15.0" fill="rgb(220,225,24)" rx="2" ry="2" />
<text  x="690.26" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (36 samples, 0.61%)</title><rect x="356.9" y="2005" width="7.1" height="15.0" fill="rgb(212,84,20)" rx="2" ry="2" />
<text  x="359.86" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="922.9" y="1893" width="0.4" height="15.0" fill="rgb(249,100,50)" rx="2" ry="2" />
<text  x="925.86" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="295.8" y="1925" width="0.4" height="15.0" fill="rgb(219,81,29)" rx="2" ry="2" />
<text  x="298.78" y="1935.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="657.9" y="1893" width="0.2" height="15.0" fill="rgb(229,22,27)" rx="2" ry="2" />
<text  x="660.91" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="522.9" y="1989" width="0.2" height="15.0" fill="rgb(252,178,43)" rx="2" ry="2" />
<text  x="525.85" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="324.3" y="1973" width="0.2" height="15.0" fill="rgb(250,153,16)" rx="2" ry="2" />
<text  x="327.34" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="483.6" y="1989" width="0.2" height="15.0" fill="rgb(206,142,52)" rx="2" ry="2" />
<text  x="486.59" y="1999.5" ></text>
</g>
<g >
<title>sk_reset_timer (4 samples, 0.07%)</title><rect x="266.0" y="1813" width="0.8" height="15.0" fill="rgb(226,125,38)" rx="2" ry="2" />
<text  x="269.03" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="578.4" y="1973" width="0.4" height="15.0" fill="rgb(249,101,4)" rx="2" ry="2" />
<text  x="581.38" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="181.1" y="1893" width="0.4" height="15.0" fill="rgb(220,148,49)" rx="2" ry="2" />
<text  x="184.15" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.07%)</title><rect x="1096.0" y="1941" width="0.8" height="15.0" fill="rgb(233,82,28)" rx="2" ry="2" />
<text  x="1099.00" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (2 samples, 0.03%)</title><rect x="567.9" y="2037" width="0.4" height="15.0" fill="rgb(229,132,49)" rx="2" ry="2" />
<text  x="570.87" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="369.6" y="2037" width="0.3" height="15.0" fill="rgb(212,51,31)" rx="2" ry="2" />
<text  x="372.55" y="2047.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="955.0" y="1893" width="0.2" height="15.0" fill="rgb(245,191,11)" rx="2" ry="2" />
<text  x="957.99" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (7 samples, 0.12%)</title><rect x="425.3" y="1973" width="1.4" height="15.0" fill="rgb(246,134,53)" rx="2" ry="2" />
<text  x="428.28" y="1983.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="111.7" y="1973" width="0.2" height="15.0" fill="rgb(247,227,49)" rx="2" ry="2" />
<text  x="114.74" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="549.4" y="1941" width="0.2" height="15.0" fill="rgb(233,51,27)" rx="2" ry="2" />
<text  x="552.43" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (2 samples, 0.03%)</title><rect x="933.0" y="1989" width="0.4" height="15.0" fill="rgb(216,71,51)" rx="2" ry="2" />
<text  x="935.98" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (159 samples, 2.67%)</title><rect x="231.7" y="1829" width="31.6" height="15.0" fill="rgb(205,81,29)" rx="2" ry="2" />
<text  x="234.72" y="1839.5" >__..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="409.8" y="2005" width="4.4" height="15.0" fill="rgb(239,208,49)" rx="2" ry="2" />
<text  x="412.81" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (21 samples, 0.35%)</title><rect x="805.1" y="1973" width="4.1" height="15.0" fill="rgb(232,213,17)" rx="2" ry="2" />
<text  x="808.06" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (6 samples, 0.10%)</title><rect x="574.6" y="1973" width="1.2" height="15.0" fill="rgb(205,175,18)" rx="2" ry="2" />
<text  x="577.62" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="880.2" y="1941" width="0.2" height="15.0" fill="rgb(240,186,11)" rx="2" ry="2" />
<text  x="883.23" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="313.8" y="1957" width="0.8" height="15.0" fill="rgb(239,188,45)" rx="2" ry="2" />
<text  x="316.83" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="855.4" y="2005" width="0.2" height="15.0" fill="rgb(212,125,16)" rx="2" ry="2" />
<text  x="858.44" y="2015.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="10.2" y="1973" width="1.0" height="15.0" fill="rgb(222,64,47)" rx="2" ry="2" />
<text  x="13.20" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="658.3" y="1829" width="0.2" height="15.0" fill="rgb(228,44,6)" rx="2" ry="2" />
<text  x="661.31" y="1839.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (7 samples, 0.12%)</title><rect x="314.8" y="1941" width="1.4" height="15.0" fill="rgb(206,106,40)" rx="2" ry="2" />
<text  x="317.82" y="1951.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="804.3" y="1829" width="0.8" height="15.0" fill="rgb(205,228,23)" rx="2" ry="2" />
<text  x="807.27" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="880.2" y="1861" width="0.2" height="15.0" fill="rgb(249,199,10)" rx="2" ry="2" />
<text  x="883.23" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="88.1" y="69" width="0.2" height="15.0" fill="rgb(241,15,4)" rx="2" ry="2" />
<text  x="91.14" y="79.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="618.0" y="1973" width="0.4" height="15.0" fill="rgb(250,133,42)" rx="2" ry="2" />
<text  x="621.05" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="166.1" y="1989" width="0.2" height="15.0" fill="rgb(216,187,38)" rx="2" ry="2" />
<text  x="169.08" y="1999.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (31 samples, 0.52%)</title><rect x="278.7" y="1957" width="6.2" height="15.0" fill="rgb(220,32,40)" rx="2" ry="2" />
<text  x="281.72" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="563.9" y="1989" width="0.2" height="15.0" fill="rgb(208,71,20)" rx="2" ry="2" />
<text  x="566.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="618.0" y="1989" width="0.4" height="15.0" fill="rgb(215,213,17)" rx="2" ry="2" />
<text  x="621.05" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="481.4" y="2005" width="0.2" height="15.0" fill="rgb(225,124,50)" rx="2" ry="2" />
<text  x="484.41" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="820.9" y="2005" width="0.2" height="15.0" fill="rgb(244,214,12)" rx="2" ry="2" />
<text  x="823.93" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="344.2" y="1845" width="0.4" height="15.0" fill="rgb(207,78,53)" rx="2" ry="2" />
<text  x="347.17" y="1855.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (95 samples, 1.60%)</title><rect x="234.7" y="1717" width="18.8" height="15.0" fill="rgb(250,126,49)" rx="2" ry="2" />
<text  x="237.70" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="167.3" y="1957" width="1.4" height="15.0" fill="rgb(218,65,40)" rx="2" ry="2" />
<text  x="170.27" y="1967.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="120.1" y="1909" width="0.2" height="15.0" fill="rgb(230,212,40)" rx="2" ry="2" />
<text  x="123.07" y="1919.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="597.6" y="2005" width="0.4" height="15.0" fill="rgb(249,43,0)" rx="2" ry="2" />
<text  x="600.62" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="180.0" y="1909" width="0.2" height="15.0" fill="rgb(242,77,51)" rx="2" ry="2" />
<text  x="182.96" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (2 samples, 0.03%)</title><rect x="211.7" y="1893" width="0.4" height="15.0" fill="rgb(222,194,44)" rx="2" ry="2" />
<text  x="214.69" y="1903.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="1090.4" y="1701" width="0.2" height="15.0" fill="rgb(219,102,18)" rx="2" ry="2" />
<text  x="1093.44" y="1711.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (4 samples, 0.07%)</title><rect x="870.7" y="1989" width="0.8" height="15.0" fill="rgb(220,200,53)" rx="2" ry="2" />
<text  x="873.71" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="287.4" y="1989" width="0.2" height="15.0" fill="rgb(242,60,54)" rx="2" ry="2" />
<text  x="290.45" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="812.8" y="1941" width="0.6" height="15.0" fill="rgb(222,73,18)" rx="2" ry="2" />
<text  x="815.80" y="1951.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1094.8" y="1893" width="0.2" height="15.0" fill="rgb(224,63,0)" rx="2" ry="2" />
<text  x="1097.81" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="364.6" y="1973" width="0.2" height="15.0" fill="rgb(216,148,13)" rx="2" ry="2" />
<text  x="367.59" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="365.8" y="2005" width="0.2" height="15.0" fill="rgb(232,136,32)" rx="2" ry="2" />
<text  x="368.78" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="929.6" y="1925" width="0.2" height="15.0" fill="rgb(250,228,25)" rx="2" ry="2" />
<text  x="932.61" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="326.7" y="1989" width="0.2" height="15.0" fill="rgb(226,168,3)" rx="2" ry="2" />
<text  x="329.72" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="302.3" y="1957" width="0.2" height="15.0" fill="rgb(246,227,12)" rx="2" ry="2" />
<text  x="305.32" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="955.0" y="1941" width="0.2" height="15.0" fill="rgb(252,206,39)" rx="2" ry="2" />
<text  x="957.99" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (2 samples, 0.03%)</title><rect x="285.3" y="2037" width="0.4" height="15.0" fill="rgb(221,23,12)" rx="2" ry="2" />
<text  x="288.27" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="681.1" y="1877" width="0.2" height="15.0" fill="rgb(250,8,21)" rx="2" ry="2" />
<text  x="684.11" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="180.6" y="1877" width="0.2" height="15.0" fill="rgb(217,153,23)" rx="2" ry="2" />
<text  x="183.55" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="174.2" y="1973" width="0.2" height="15.0" fill="rgb(228,52,19)" rx="2" ry="2" />
<text  x="177.21" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="620.8" y="1973" width="0.2" height="15.0" fill="rgb(252,114,3)" rx="2" ry="2" />
<text  x="623.82" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="110.0" y="1925" width="0.2" height="15.0" fill="rgb(215,63,22)" rx="2" ry="2" />
<text  x="112.95" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="185.9" y="2021" width="0.2" height="15.0" fill="rgb(254,12,13)" rx="2" ry="2" />
<text  x="188.91" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="812.8" y="1957" width="0.6" height="15.0" fill="rgb(221,27,26)" rx="2" ry="2" />
<text  x="815.80" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="931.2" y="1989" width="0.2" height="15.0" fill="rgb(241,202,40)" rx="2" ry="2" />
<text  x="934.19" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="158.3" y="2005" width="0.4" height="15.0" fill="rgb(239,92,4)" rx="2" ry="2" />
<text  x="161.34" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1188.4" y="2053" width="0.2" height="15.0" fill="rgb(238,62,1)" rx="2" ry="2" />
<text  x="1191.41" y="2063.5" ></text>
</g>
<g >
<title>validate_xmit_skb (4 samples, 0.07%)</title><rect x="1089.8" y="1717" width="0.8" height="15.0" fill="rgb(221,3,24)" rx="2" ry="2" />
<text  x="1092.85" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="460.8" y="1957" width="0.2" height="15.0" fill="rgb(211,119,6)" rx="2" ry="2" />
<text  x="463.78" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (6 samples, 0.10%)</title><rect x="306.5" y="1957" width="1.2" height="15.0" fill="rgb(211,80,22)" rx="2" ry="2" />
<text  x="309.49" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="456.0" y="1925" width="0.4" height="15.0" fill="rgb(213,165,4)" rx="2" ry="2" />
<text  x="459.02" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="337.4" y="1909" width="0.8" height="15.0" fill="rgb(213,196,21)" rx="2" ry="2" />
<text  x="340.43" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (38 samples, 0.64%)</title><rect x="490.5" y="1973" width="7.6" height="15.0" fill="rgb(245,172,34)" rx="2" ry="2" />
<text  x="493.53" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="164.1" y="2021" width="0.4" height="15.0" fill="rgb(218,65,8)" rx="2" ry="2" />
<text  x="167.09" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (25 samples, 0.42%)</title><rect x="340.2" y="1893" width="5.0" height="15.0" fill="rgb(206,204,43)" rx="2" ry="2" />
<text  x="343.20" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (30 samples, 0.50%)</title><rect x="825.9" y="2037" width="5.9" height="15.0" fill="rgb(247,165,10)" rx="2" ry="2" />
<text  x="828.89" y="2047.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="964.7" y="2037" width="0.2" height="15.0" fill="rgb(245,6,29)" rx="2" ry="2" />
<text  x="967.71" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (17 samples, 0.29%)</title><rect x="603.0" y="2037" width="3.3" height="15.0" fill="rgb(250,37,43)" rx="2" ry="2" />
<text  x="605.97" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="558.9" y="2005" width="0.6" height="15.0" fill="rgb(225,36,42)" rx="2" ry="2" />
<text  x="561.95" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2021" width="0.2" height="15.0" fill="rgb(213,115,17)" rx="2" ry="2" />
<text  x="14.19" y="2031.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="365.0" y="1973" width="0.2" height="15.0" fill="rgb(224,210,23)" rx="2" ry="2" />
<text  x="367.99" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="174.6" y="1957" width="0.2" height="15.0" fill="rgb(232,151,11)" rx="2" ry="2" />
<text  x="177.61" y="1967.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (5 samples, 0.08%)</title><rect x="194.0" y="2037" width="1.0" height="15.0" fill="rgb(229,48,2)" rx="2" ry="2" />
<text  x="197.04" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1135.5" y="1989" width="0.2" height="15.0" fill="rgb(241,104,3)" rx="2" ry="2" />
<text  x="1138.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (2 samples, 0.03%)</title><rect x="1115.2" y="2053" width="0.4" height="15.0" fill="rgb(219,167,45)" rx="2" ry="2" />
<text  x="1118.23" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (64 samples, 1.08%)</title><rect x="792.4" y="1973" width="12.7" height="15.0" fill="rgb(222,107,2)" rx="2" ry="2" />
<text  x="795.37" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="557.6" y="1957" width="0.2" height="15.0" fill="rgb(242,102,15)" rx="2" ry="2" />
<text  x="560.56" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (10 samples, 0.17%)</title><rect x="459.0" y="1973" width="2.0" height="15.0" fill="rgb(241,111,43)" rx="2" ry="2" />
<text  x="461.99" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (38 samples, 0.64%)</title><rect x="524.6" y="1973" width="7.6" height="15.0" fill="rgb(241,96,49)" rx="2" ry="2" />
<text  x="527.64" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="154.4" y="1973" width="0.2" height="15.0" fill="rgb(251,217,5)" rx="2" ry="2" />
<text  x="157.38" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (5 samples, 0.08%)</title><rect x="312.4" y="1957" width="1.0" height="15.0" fill="rgb(229,5,11)" rx="2" ry="2" />
<text  x="315.44" y="1967.5" ></text>
</g>
</g>
</svg>
