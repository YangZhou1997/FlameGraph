<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="894.2" y="1893" width="0.2" height="15.0" fill="rgb(219,86,33)" rx="2" ry="2" />
<text  x="897.15" y="1903.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="999.8" y="1941" width="0.6" height="15.0" fill="rgb(244,105,42)" rx="2" ry="2" />
<text  x="1002.81" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="215.7" y="1877" width="0.2" height="15.0" fill="rgb(222,52,30)" rx="2" ry="2" />
<text  x="218.74" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="890.6" y="1717" width="0.2" height="15.0" fill="rgb(232,47,53)" rx="2" ry="2" />
<text  x="893.56" y="1727.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="14.6" y="1829" width="0.8" height="15.0" fill="rgb(246,56,5)" rx="2" ry="2" />
<text  x="17.59" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (2 samples, 0.03%)</title><rect x="644.4" y="2005" width="0.4" height="15.0" fill="rgb(235,207,54)" rx="2" ry="2" />
<text  x="647.36" y="2015.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="397.4" y="1877" width="0.4" height="15.0" fill="rgb(250,208,36)" rx="2" ry="2" />
<text  x="400.35" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (2 samples, 0.03%)</title><rect x="1112.4" y="1493" width="0.4" height="15.0" fill="rgb(250,104,17)" rx="2" ry="2" />
<text  x="1115.45" y="1503.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="153.1" y="1765" width="0.2" height="15.0" fill="rgb(237,219,20)" rx="2" ry="2" />
<text  x="156.14" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (1 samples, 0.02%)</title><rect x="970.5" y="2037" width="0.2" height="15.0" fill="rgb(228,220,19)" rx="2" ry="2" />
<text  x="973.51" y="2047.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="812.6" y="1653" width="0.2" height="15.0" fill="rgb(235,32,34)" rx="2" ry="2" />
<text  x="815.62" y="1663.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="774.1" y="1669" width="0.2" height="15.0" fill="rgb(246,221,24)" rx="2" ry="2" />
<text  x="777.14" y="1679.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="886.0" y="1621" width="0.2" height="15.0" fill="rgb(225,167,30)" rx="2" ry="2" />
<text  x="888.98" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="138.4" y="1861" width="0.2" height="15.0" fill="rgb(235,119,27)" rx="2" ry="2" />
<text  x="141.39" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (3 samples, 0.05%)</title><rect x="896.1" y="1957" width="0.6" height="15.0" fill="rgb(226,45,0)" rx="2" ry="2" />
<text  x="899.15" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="832.2" y="1621" width="0.2" height="15.0" fill="rgb(221,198,32)" rx="2" ry="2" />
<text  x="835.15" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="924.7" y="1893" width="0.2" height="15.0" fill="rgb(246,57,52)" rx="2" ry="2" />
<text  x="927.65" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="131.2" y="1973" width="0.2" height="15.0" fill="rgb(226,83,38)" rx="2" ry="2" />
<text  x="134.21" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (64 samples, 1.08%)</title><rect x="1149.5" y="1989" width="12.8" height="15.0" fill="rgb(220,179,4)" rx="2" ry="2" />
<text  x="1152.53" y="1999.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1573" width="0.2" height="15.0" fill="rgb(221,226,25)" rx="2" ry="2" />
<text  x="906.32" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="743.6" y="1765" width="0.2" height="15.0" fill="rgb(253,226,23)" rx="2" ry="2" />
<text  x="746.64" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (13 samples, 0.22%)</title><rect x="881.2" y="1941" width="2.6" height="15.0" fill="rgb(233,126,22)" rx="2" ry="2" />
<text  x="884.19" y="1951.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="409.1" y="1493" width="0.2" height="15.0" fill="rgb(234,29,32)" rx="2" ry="2" />
<text  x="412.11" y="1503.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="68.8" y="1861" width="0.8" height="15.0" fill="rgb(238,76,46)" rx="2" ry="2" />
<text  x="71.81" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="228.1" y="1813" width="0.2" height="15.0" fill="rgb(235,84,42)" rx="2" ry="2" />
<text  x="231.10" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="61.0" y="1829" width="0.2" height="15.0" fill="rgb(215,210,45)" rx="2" ry="2" />
<text  x="64.04" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="691.4" y="1621" width="0.2" height="15.0" fill="rgb(235,31,5)" rx="2" ry="2" />
<text  x="694.41" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="530.9" y="1925" width="0.2" height="15.0" fill="rgb(247,41,6)" rx="2" ry="2" />
<text  x="533.92" y="1935.5" ></text>
</g>
<g >
<title>SYSC_getpeername (3 samples, 0.05%)</title><rect x="704.4" y="1829" width="0.6" height="15.0" fill="rgb(224,4,46)" rx="2" ry="2" />
<text  x="707.36" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="61.4" y="1829" width="0.2" height="15.0" fill="rgb(252,71,49)" rx="2" ry="2" />
<text  x="64.43" y="1839.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="92.7" y="2037" width="0.2" height="15.0" fill="rgb(222,49,13)" rx="2" ry="2" />
<text  x="95.73" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="136.6" y="1925" width="0.4" height="15.0" fill="rgb(210,34,32)" rx="2" ry="2" />
<text  x="139.59" y="1935.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="800.9" y="1509" width="0.2" height="15.0" fill="rgb(232,176,47)" rx="2" ry="2" />
<text  x="803.85" y="1519.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="903.3" y="1621" width="0.2" height="15.0" fill="rgb(237,85,21)" rx="2" ry="2" />
<text  x="906.32" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="138.6" y="1797" width="0.2" height="15.0" fill="rgb(237,78,50)" rx="2" ry="2" />
<text  x="141.59" y="1807.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="493.4" y="1925" width="0.4" height="15.0" fill="rgb(253,229,50)" rx="2" ry="2" />
<text  x="496.44" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="945.2" y="2005" width="1.0" height="15.0" fill="rgb(211,173,3)" rx="2" ry="2" />
<text  x="948.19" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="320.2" y="1621" width="0.2" height="15.0" fill="rgb(210,187,41)" rx="2" ry="2" />
<text  x="323.20" y="1631.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="965.7" y="2005" width="0.2" height="15.0" fill="rgb(237,196,0)" rx="2" ry="2" />
<text  x="968.72" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="286.5" y="1733" width="0.2" height="15.0" fill="rgb(232,210,43)" rx="2" ry="2" />
<text  x="289.51" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="840.3" y="1829" width="0.2" height="15.0" fill="rgb(207,11,25)" rx="2" ry="2" />
<text  x="843.33" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (6 samples, 0.10%)</title><rect x="930.4" y="1877" width="1.2" height="15.0" fill="rgb(230,22,1)" rx="2" ry="2" />
<text  x="933.44" y="1887.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="460.3" y="1909" width="0.2" height="15.0" fill="rgb(229,149,42)" rx="2" ry="2" />
<text  x="463.35" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="342.1" y="1925" width="0.4" height="15.0" fill="rgb(234,157,52)" rx="2" ry="2" />
<text  x="345.13" y="1935.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="849.1" y="1893" width="0.2" height="15.0" fill="rgb(212,180,46)" rx="2" ry="2" />
<text  x="852.10" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="212.7" y="1893" width="0.2" height="15.0" fill="rgb(245,207,49)" rx="2" ry="2" />
<text  x="215.75" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="246.2" y="1813" width="0.2" height="15.0" fill="rgb(214,79,39)" rx="2" ry="2" />
<text  x="249.24" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="141.4" y="1893" width="0.8" height="15.0" fill="rgb(248,107,5)" rx="2" ry="2" />
<text  x="144.38" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="137.0" y="1925" width="0.2" height="15.0" fill="rgb(254,48,46)" rx="2" ry="2" />
<text  x="139.99" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="289.5" y="1733" width="0.2" height="15.0" fill="rgb(205,103,38)" rx="2" ry="2" />
<text  x="292.50" y="1743.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="70.2" y="1877" width="0.2" height="15.0" fill="rgb(218,218,41)" rx="2" ry="2" />
<text  x="73.21" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="99.3" y="1637" width="17.0" height="15.0" fill="rgb(248,79,15)" rx="2" ry="2" />
<text  x="102.31" y="1647.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="236.5" y="1909" width="0.2" height="15.0" fill="rgb(213,45,25)" rx="2" ry="2" />
<text  x="239.47" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="890.6" y="1877" width="0.2" height="15.0" fill="rgb(227,161,2)" rx="2" ry="2" />
<text  x="893.56" y="1887.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (15 samples, 0.25%)</title><rect x="290.3" y="1717" width="3.0" height="15.0" fill="rgb(214,69,29)" rx="2" ry="2" />
<text  x="293.30" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="886.0" y="1829" width="0.2" height="15.0" fill="rgb(239,98,29)" rx="2" ry="2" />
<text  x="888.98" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="903.5" y="1989" width="0.2" height="15.0" fill="rgb(206,208,7)" rx="2" ry="2" />
<text  x="906.52" y="1999.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (2 samples, 0.03%)</title><rect x="963.9" y="2005" width="0.4" height="15.0" fill="rgb(225,41,37)" rx="2" ry="2" />
<text  x="966.93" y="2015.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="438.8" y="1989" width="0.4" height="15.0" fill="rgb(241,226,49)" rx="2" ry="2" />
<text  x="441.82" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="691.2" y="1845" width="0.4" height="15.0" fill="rgb(208,74,5)" rx="2" ry="2" />
<text  x="694.21" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="957.7" y="1877" width="0.2" height="15.0" fill="rgb(239,218,47)" rx="2" ry="2" />
<text  x="960.75" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="596.3" y="1813" width="0.2" height="15.0" fill="rgb(221,10,3)" rx="2" ry="2" />
<text  x="599.31" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="501" width="14.2" height="15.0" fill="rgb(223,19,11)" rx="2" ry="2" />
<text  x="103.11" y="511.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.5" y="1973" width="0.2" height="15.0" fill="rgb(235,81,17)" rx="2" ry="2" />
<text  x="101.51" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (88 samples, 1.49%)</title><rect x="65.0" y="1973" width="17.6" height="15.0" fill="rgb(232,60,11)" rx="2" ry="2" />
<text  x="68.02" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="74.8" y="1941" width="0.2" height="15.0" fill="rgb(220,145,52)" rx="2" ry="2" />
<text  x="77.79" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="284.9" y="1797" width="0.2" height="15.0" fill="rgb(242,212,24)" rx="2" ry="2" />
<text  x="287.91" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="863.3" y="1989" width="0.2" height="15.0" fill="rgb(241,105,37)" rx="2" ry="2" />
<text  x="866.25" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (56 samples, 0.95%)</title><rect x="601.5" y="1973" width="11.2" height="15.0" fill="rgb(242,167,46)" rx="2" ry="2" />
<text  x="604.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (1 samples, 0.02%)</title><rect x="136.4" y="1941" width="0.2" height="15.0" fill="rgb(253,49,47)" rx="2" ry="2" />
<text  x="139.39" y="1951.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="405.5" y="1909" width="0.2" height="15.0" fill="rgb(231,14,10)" rx="2" ry="2" />
<text  x="408.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1099.1" y="1909" width="0.2" height="15.0" fill="rgb(249,9,2)" rx="2" ry="2" />
<text  x="1102.09" y="1919.5" ></text>
</g>
<g >
<title>sys_getpeername (3 samples, 0.05%)</title><rect x="704.4" y="1845" width="0.6" height="15.0" fill="rgb(251,147,17)" rx="2" ry="2" />
<text  x="707.36" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1098.1" y="1877" width="0.2" height="15.0" fill="rgb(237,75,12)" rx="2" ry="2" />
<text  x="1101.10" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1172.7" y="1973" width="0.2" height="15.0" fill="rgb(223,165,47)" rx="2" ry="2" />
<text  x="1175.66" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="190.2" y="1925" width="0.2" height="15.0" fill="rgb(231,229,19)" rx="2" ry="2" />
<text  x="193.22" y="1935.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="1112.6" y="1445" width="0.2" height="15.0" fill="rgb(213,31,28)" rx="2" ry="2" />
<text  x="1115.65" y="1455.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="189.8" y="1733" width="0.2" height="15.0" fill="rgb(234,98,26)" rx="2" ry="2" />
<text  x="192.82" y="1743.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="989.4" y="1893" width="0.2" height="15.0" fill="rgb(228,46,1)" rx="2" ry="2" />
<text  x="992.45" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1749" width="0.2" height="15.0" fill="rgb(236,37,46)" rx="2" ry="2" />
<text  x="906.32" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="915.7" y="1989" width="0.2" height="15.0" fill="rgb(220,14,52)" rx="2" ry="2" />
<text  x="918.68" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (41 samples, 0.69%)</title><rect x="1112.8" y="1589" width="8.2" height="15.0" fill="rgb(205,177,24)" rx="2" ry="2" />
<text  x="1115.85" y="1599.5" ></text>
</g>
<g >
<title>release_sock (10 samples, 0.17%)</title><rect x="1097.3" y="1925" width="2.0" height="15.0" fill="rgb(225,30,54)" rx="2" ry="2" />
<text  x="1100.30" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (51 samples, 0.86%)</title><rect x="602.1" y="1941" width="10.2" height="15.0" fill="rgb(253,137,2)" rx="2" ry="2" />
<text  x="605.09" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="694.0" y="1845" width="0.4" height="15.0" fill="rgb(233,182,21)" rx="2" ry="2" />
<text  x="697.00" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="704.2" y="1797" width="0.2" height="15.0" fill="rgb(214,51,35)" rx="2" ry="2" />
<text  x="707.16" y="1807.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="692.4" y="1877" width="1.0" height="15.0" fill="rgb(224,149,25)" rx="2" ry="2" />
<text  x="695.40" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (2 samples, 0.03%)</title><rect x="29.9" y="1989" width="0.4" height="15.0" fill="rgb(243,193,23)" rx="2" ry="2" />
<text  x="32.94" y="1999.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.03%)</title><rect x="1032.3" y="2053" width="0.4" height="15.0" fill="rgb(246,100,19)" rx="2" ry="2" />
<text  x="1035.31" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="878.6" y="1893" width="0.2" height="15.0" fill="rgb(244,43,9)" rx="2" ry="2" />
<text  x="881.60" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="190.2" y="2005" width="0.2" height="15.0" fill="rgb(236,216,22)" rx="2" ry="2" />
<text  x="193.22" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (3 samples, 0.05%)</title><rect x="72.2" y="1957" width="0.6" height="15.0" fill="rgb(206,148,12)" rx="2" ry="2" />
<text  x="75.20" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.64%)</title><rect x="1151.7" y="1941" width="7.6" height="15.0" fill="rgb(237,80,25)" rx="2" ry="2" />
<text  x="1154.72" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="617.6" y="2005" width="0.4" height="15.0" fill="rgb(216,43,25)" rx="2" ry="2" />
<text  x="620.64" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1141.8" y="1989" width="0.2" height="15.0" fill="rgb(237,172,4)" rx="2" ry="2" />
<text  x="1144.76" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (1 samples, 0.02%)</title><rect x="64.2" y="1989" width="0.2" height="15.0" fill="rgb(253,229,27)" rx="2" ry="2" />
<text  x="67.23" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="92.7" y="2021" width="0.2" height="15.0" fill="rgb(218,110,3)" rx="2" ry="2" />
<text  x="95.73" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="546.5" y="1797" width="0.2" height="15.0" fill="rgb(251,111,19)" rx="2" ry="2" />
<text  x="549.47" y="1807.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="669.3" y="1877" width="0.2" height="15.0" fill="rgb(215,45,32)" rx="2" ry="2" />
<text  x="672.28" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (2 samples, 0.03%)</title><rect x="540.3" y="1957" width="0.4" height="15.0" fill="rgb(209,173,5)" rx="2" ry="2" />
<text  x="543.29" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (10 samples, 0.17%)</title><rect x="15.8" y="1877" width="2.0" height="15.0" fill="rgb(216,154,19)" rx="2" ry="2" />
<text  x="18.78" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="525.7" y="1957" width="0.8" height="15.0" fill="rgb(236,119,20)" rx="2" ry="2" />
<text  x="528.74" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="751.2" y="1717" width="0.2" height="15.0" fill="rgb(218,202,12)" rx="2" ry="2" />
<text  x="754.21" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1002.2" y="1989" width="0.4" height="15.0" fill="rgb(253,76,52)" rx="2" ry="2" />
<text  x="1005.20" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="100.1" y="37" width="0.2" height="15.0" fill="rgb(241,222,10)" rx="2" ry="2" />
<text  x="103.11" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="868.8" y="1925" width="0.2" height="15.0" fill="rgb(250,159,32)" rx="2" ry="2" />
<text  x="871.83" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="845.9" y="1877" width="0.2" height="15.0" fill="rgb(213,46,32)" rx="2" ry="2" />
<text  x="848.91" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="651.7" y="2037" width="0.2" height="15.0" fill="rgb(244,110,34)" rx="2" ry="2" />
<text  x="654.73" y="2047.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="658.1" y="1653" width="0.2" height="15.0" fill="rgb(247,44,18)" rx="2" ry="2" />
<text  x="661.11" y="1663.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="755.8" y="1733" width="1.4" height="15.0" fill="rgb(217,39,11)" rx="2" ry="2" />
<text  x="758.80" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="102.1" y="37" width="0.2" height="15.0" fill="rgb(246,52,47)" rx="2" ry="2" />
<text  x="105.10" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (4 samples, 0.07%)</title><rect x="856.9" y="1989" width="0.8" height="15.0" fill="rgb(252,211,11)" rx="2" ry="2" />
<text  x="859.87" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="691.2" y="1861" width="0.4" height="15.0" fill="rgb(209,52,47)" rx="2" ry="2" />
<text  x="694.21" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="482.3" y="1957" width="0.2" height="15.0" fill="rgb(251,226,31)" rx="2" ry="2" />
<text  x="485.28" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="382.2" y="1909" width="0.4" height="15.0" fill="rgb(221,194,5)" rx="2" ry="2" />
<text  x="385.20" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="128.6" y="1941" width="0.4" height="15.0" fill="rgb(220,174,9)" rx="2" ry="2" />
<text  x="131.62" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (356 samples, 6.01%)</title><rect x="1058.2" y="1989" width="71.0" height="15.0" fill="rgb(240,41,28)" rx="2" ry="2" />
<text  x="1061.22" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>release_sock (9 samples, 0.15%)</title><rect x="384.2" y="1941" width="1.8" height="15.0" fill="rgb(237,181,51)" rx="2" ry="2" />
<text  x="387.19" y="1951.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="683.8" y="1621" width="0.2" height="15.0" fill="rgb(240,141,2)" rx="2" ry="2" />
<text  x="686.83" y="1631.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="561.2" y="1893" width="1.0" height="15.0" fill="rgb(211,216,23)" rx="2" ry="2" />
<text  x="564.22" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (50 samples, 0.84%)</title><rect x="167.5" y="2021" width="10.0" height="15.0" fill="rgb(232,12,23)" rx="2" ry="2" />
<text  x="170.49" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (2 samples, 0.03%)</title><rect x="566.6" y="2005" width="0.4" height="15.0" fill="rgb(240,101,54)" rx="2" ry="2" />
<text  x="569.61" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="596.3" y="1781" width="0.2" height="15.0" fill="rgb(219,213,28)" rx="2" ry="2" />
<text  x="599.31" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="548.3" y="1893" width="0.2" height="15.0" fill="rgb(229,116,43)" rx="2" ry="2" />
<text  x="551.27" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="145.6" y="1845" width="0.2" height="15.0" fill="rgb(248,185,49)" rx="2" ry="2" />
<text  x="148.56" y="1855.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="489.1" y="1941" width="1.0" height="15.0" fill="rgb(240,208,24)" rx="2" ry="2" />
<text  x="492.06" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (41 samples, 0.69%)</title><rect x="1005.8" y="2021" width="8.2" height="15.0" fill="rgb(245,13,35)" rx="2" ry="2" />
<text  x="1008.79" y="2031.5" ></text>
</g>
<g >
<title>security_socket_accept (3 samples, 0.05%)</title><rect x="387.4" y="1957" width="0.6" height="15.0" fill="rgb(213,214,30)" rx="2" ry="2" />
<text  x="390.38" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1108.9" y="1669" width="0.2" height="15.0" fill="rgb(216,164,3)" rx="2" ry="2" />
<text  x="1111.86" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="342.1" y="1957" width="0.4" height="15.0" fill="rgb(226,189,28)" rx="2" ry="2" />
<text  x="345.13" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.5" y="1717" width="0.2" height="15.0" fill="rgb(219,210,39)" rx="2" ry="2" />
<text  x="120.45" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="906.1" y="2005" width="0.4" height="15.0" fill="rgb(228,175,10)" rx="2" ry="2" />
<text  x="909.11" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::invokeAndDeleteEachObserver (2 samples, 0.03%)</title><rect x="896.3" y="1941" width="0.4" height="15.0" fill="rgb(242,33,1)" rx="2" ry="2" />
<text  x="899.35" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="704.2" y="1829" width="0.2" height="15.0" fill="rgb(246,142,1)" rx="2" ry="2" />
<text  x="707.16" y="1839.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="245.2" y="1877" width="0.8" height="15.0" fill="rgb(248,144,22)" rx="2" ry="2" />
<text  x="248.24" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.9" y="1861" width="0.2" height="15.0" fill="rgb(230,51,17)" rx="2" ry="2" />
<text  x="544.89" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="840.7" y="1909" width="0.2" height="15.0" fill="rgb(253,136,39)" rx="2" ry="2" />
<text  x="843.72" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="101" width="14.0" height="15.0" fill="rgb(208,195,40)" rx="2" ry="2" />
<text  x="103.11" y="111.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.6" y="1829" width="0.2" height="15.0" fill="rgb(220,98,10)" rx="2" ry="2" />
<text  x="893.56" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="657.9" y="1781" width="0.2" height="15.0" fill="rgb(253,136,30)" rx="2" ry="2" />
<text  x="660.91" y="1791.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15 samples, 0.25%)</title><rect x="290.3" y="1701" width="3.0" height="15.0" fill="rgb(241,189,6)" rx="2" ry="2" />
<text  x="293.30" y="1711.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="405.5" y="1621" width="0.2" height="15.0" fill="rgb(247,98,7)" rx="2" ry="2" />
<text  x="408.53" y="1631.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="92.3" y="1733" width="0.2" height="15.0" fill="rgb(227,198,7)" rx="2" ry="2" />
<text  x="95.33" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (15 samples, 0.25%)</title><rect x="290.3" y="1685" width="3.0" height="15.0" fill="rgb(224,147,35)" rx="2" ry="2" />
<text  x="293.30" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="947.2" y="2005" width="0.2" height="15.0" fill="rgb(253,218,41)" rx="2" ry="2" />
<text  x="950.18" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (272 samples, 4.60%)</title><rect x="36.9" y="2021" width="54.2" height="15.0" fill="rgb(206,173,54)" rx="2" ry="2" />
<text  x="39.91" y="2031.5" >folly..</text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="883.2" y="1909" width="0.4" height="15.0" fill="rgb(232,160,42)" rx="2" ry="2" />
<text  x="886.19" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="880.0" y="1925" width="1.2" height="15.0" fill="rgb(206,114,18)" rx="2" ry="2" />
<text  x="883.00" y="1935.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="548.3" y="1733" width="0.2" height="15.0" fill="rgb(251,127,25)" rx="2" ry="2" />
<text  x="551.27" y="1743.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="255.8" y="1877" width="0.2" height="15.0" fill="rgb(234,171,12)" rx="2" ry="2" />
<text  x="258.81" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="320.2" y="1749" width="0.2" height="15.0" fill="rgb(216,144,8)" rx="2" ry="2" />
<text  x="323.20" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="947.2" y="1973" width="0.2" height="15.0" fill="rgb(219,166,42)" rx="2" ry="2" />
<text  x="950.18" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (5 samples, 0.08%)</title><rect x="863.9" y="1989" width="0.9" height="15.0" fill="rgb(251,107,31)" rx="2" ry="2" />
<text  x="866.85" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (10 samples, 0.17%)</title><rect x="68.4" y="1925" width="2.0" height="15.0" fill="rgb(219,79,15)" rx="2" ry="2" />
<text  x="71.41" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="645" width="14.2" height="15.0" fill="rgb(215,186,53)" rx="2" ry="2" />
<text  x="103.11" y="655.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1063.4" y="1941" width="0.2" height="15.0" fill="rgb(219,131,3)" rx="2" ry="2" />
<text  x="1066.41" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="691.4" y="1781" width="0.2" height="15.0" fill="rgb(207,11,29)" rx="2" ry="2" />
<text  x="694.41" y="1791.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (3 samples, 0.05%)</title><rect x="729.5" y="1717" width="0.6" height="15.0" fill="rgb(217,83,13)" rx="2" ry="2" />
<text  x="732.48" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="832.2" y="1781" width="0.2" height="15.0" fill="rgb(233,12,18)" rx="2" ry="2" />
<text  x="835.15" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="135.6" y="1909" width="0.2" height="15.0" fill="rgb(209,139,36)" rx="2" ry="2" />
<text  x="138.60" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="386.6" y="1941" width="0.2" height="15.0" fill="rgb(226,175,15)" rx="2" ry="2" />
<text  x="389.59" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="245.2" y="1989" width="0.8" height="15.0" fill="rgb(238,44,11)" rx="2" ry="2" />
<text  x="248.24" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="692.2" y="1925" width="1.4" height="15.0" fill="rgb(246,135,37)" rx="2" ry="2" />
<text  x="695.20" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="227.3" y="1893" width="0.2" height="15.0" fill="rgb(252,215,25)" rx="2" ry="2" />
<text  x="230.30" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="868.4" y="1989" width="0.2" height="15.0" fill="rgb(205,150,38)" rx="2" ry="2" />
<text  x="871.44" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="756.8" y="1541" width="0.2" height="15.0" fill="rgb(218,27,49)" rx="2" ry="2" />
<text  x="759.80" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="630.8" y="1941" width="0.2" height="15.0" fill="rgb(243,160,0)" rx="2" ry="2" />
<text  x="633.80" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="561.2" y="1829" width="1.0" height="15.0" fill="rgb(219,155,32)" rx="2" ry="2" />
<text  x="564.22" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="847.5" y="1701" width="0.2" height="15.0" fill="rgb(233,128,46)" rx="2" ry="2" />
<text  x="850.50" y="1711.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="346.7" y="2037" width="0.2" height="15.0" fill="rgb(246,65,42)" rx="2" ry="2" />
<text  x="349.72" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="611.9" y="1845" width="0.2" height="15.0" fill="rgb(252,96,22)" rx="2" ry="2" />
<text  x="614.86" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="98.9" y="1925" width="20.9" height="15.0" fill="rgb(245,36,45)" rx="2" ry="2" />
<text  x="101.91" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="832.2" y="1589" width="0.2" height="15.0" fill="rgb(213,145,10)" rx="2" ry="2" />
<text  x="835.15" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="154.1" y="1781" width="0.2" height="15.0" fill="rgb(240,218,43)" rx="2" ry="2" />
<text  x="157.14" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="183.8" y="1877" width="0.4" height="15.0" fill="rgb(215,177,12)" rx="2" ry="2" />
<text  x="186.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="574.6" y="1973" width="0.2" height="15.0" fill="rgb(249,172,7)" rx="2" ry="2" />
<text  x="577.58" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="221.5" y="1781" width="0.2" height="15.0" fill="rgb(252,42,48)" rx="2" ry="2" />
<text  x="224.52" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="155.7" y="2005" width="0.2" height="15.0" fill="rgb(253,5,10)" rx="2" ry="2" />
<text  x="158.73" y="2015.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1188.4" y="1893" width="0.8" height="15.0" fill="rgb(251,61,35)" rx="2" ry="2" />
<text  x="1191.41" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="683.8" y="1557" width="0.2" height="15.0" fill="rgb(239,53,26)" rx="2" ry="2" />
<text  x="686.83" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (3 samples, 0.05%)</title><rect x="79.0" y="1909" width="0.6" height="15.0" fill="rgb(243,124,41)" rx="2" ry="2" />
<text  x="81.98" y="1919.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="877.6" y="1781" width="0.2" height="15.0" fill="rgb(234,150,39)" rx="2" ry="2" />
<text  x="880.61" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="284.9" y="1445" width="0.2" height="15.0" fill="rgb(244,171,54)" rx="2" ry="2" />
<text  x="287.91" y="1455.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="154.1" y="1829" width="0.2" height="15.0" fill="rgb(219,0,47)" rx="2" ry="2" />
<text  x="157.14" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="169.9" y="1957" width="0.2" height="15.0" fill="rgb(240,36,38)" rx="2" ry="2" />
<text  x="172.89" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="903.3" y="1909" width="0.2" height="15.0" fill="rgb(210,87,26)" rx="2" ry="2" />
<text  x="906.32" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="194.2" y="2021" width="0.2" height="15.0" fill="rgb(210,141,40)" rx="2" ry="2" />
<text  x="197.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="389" width="14.0" height="15.0" fill="rgb(240,162,23)" rx="2" ry="2" />
<text  x="103.11" y="399.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="820.8" y="1461" width="0.2" height="15.0" fill="rgb(237,220,2)" rx="2" ry="2" />
<text  x="823.79" y="1471.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="566.2" y="1989" width="0.2" height="15.0" fill="rgb(235,218,48)" rx="2" ry="2" />
<text  x="569.21" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1653" width="0.2" height="15.0" fill="rgb(209,56,40)" rx="2" ry="2" />
<text  x="408.53" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="229.5" y="1861" width="0.2" height="15.0" fill="rgb(205,89,42)" rx="2" ry="2" />
<text  x="232.49" y="1871.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (2 samples, 0.03%)</title><rect x="1004.8" y="2021" width="0.4" height="15.0" fill="rgb(212,179,24)" rx="2" ry="2" />
<text  x="1007.80" y="2031.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="248.8" y="1557" width="0.2" height="15.0" fill="rgb(248,159,35)" rx="2" ry="2" />
<text  x="251.83" y="1567.5" ></text>
</g>
<g >
<title>tcp_poll (3 samples, 0.05%)</title><rect x="461.1" y="1957" width="0.6" height="15.0" fill="rgb(238,195,31)" rx="2" ry="2" />
<text  x="464.15" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="272.6" y="1813" width="0.2" height="15.0" fill="rgb(226,15,34)" rx="2" ry="2" />
<text  x="275.55" y="1823.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="29.7" y="1989" width="0.2" height="15.0" fill="rgb(247,209,2)" rx="2" ry="2" />
<text  x="32.74" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="926.8" y="1909" width="0.6" height="15.0" fill="rgb(223,127,15)" rx="2" ry="2" />
<text  x="929.85" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="689.8" y="1605" width="0.2" height="15.0" fill="rgb(206,143,9)" rx="2" ry="2" />
<text  x="692.81" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="886.0" y="1861" width="0.2" height="15.0" fill="rgb(230,73,37)" rx="2" ry="2" />
<text  x="888.98" y="1871.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="774.1" y="1589" width="0.2" height="15.0" fill="rgb(244,80,48)" rx="2" ry="2" />
<text  x="777.14" y="1599.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (2 samples, 0.03%)</title><rect x="757.2" y="1733" width="0.4" height="15.0" fill="rgb(234,181,33)" rx="2" ry="2" />
<text  x="760.19" y="1743.5" ></text>
</g>
<g >
<title>ip_output (110 samples, 1.86%)</title><rect x="779.7" y="1637" width="22.0" height="15.0" fill="rgb(250,5,41)" rx="2" ry="2" />
<text  x="782.72" y="1647.5" >i..</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="316.2" y="1733" width="0.2" height="15.0" fill="rgb(227,7,19)" rx="2" ry="2" />
<text  x="319.21" y="1743.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="286.5" y="1589" width="0.2" height="15.0" fill="rgb(245,124,31)" rx="2" ry="2" />
<text  x="289.51" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="489.9" y="1701" width="0.2" height="15.0" fill="rgb(253,126,26)" rx="2" ry="2" />
<text  x="492.85" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (3 samples, 0.05%)</title><rect x="518.2" y="1957" width="0.6" height="15.0" fill="rgb(251,228,50)" rx="2" ry="2" />
<text  x="521.16" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="1169.7" y="2037" width="0.2" height="15.0" fill="rgb(220,157,33)" rx="2" ry="2" />
<text  x="1172.67" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1173.9" y="1717" width="0.2" height="15.0" fill="rgb(243,56,40)" rx="2" ry="2" />
<text  x="1176.85" y="1727.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="394.0" y="1861" width="0.8" height="15.0" fill="rgb(229,204,7)" rx="2" ry="2" />
<text  x="396.96" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (3 samples, 0.05%)</title><rect x="1142.0" y="1989" width="0.6" height="15.0" fill="rgb(211,180,23)" rx="2" ry="2" />
<text  x="1144.95" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="142.8" y="1861" width="0.2" height="15.0" fill="rgb(220,197,5)" rx="2" ry="2" />
<text  x="145.77" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="526.7" y="1989" width="0.2" height="15.0" fill="rgb(242,6,22)" rx="2" ry="2" />
<text  x="529.74" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="899.3" y="1989" width="0.2" height="15.0" fill="rgb(251,150,46)" rx="2" ry="2" />
<text  x="902.34" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (2 samples, 0.03%)</title><rect x="29.1" y="1973" width="0.4" height="15.0" fill="rgb(208,19,2)" rx="2" ry="2" />
<text  x="32.14" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="155.3" y="2005" width="0.4" height="15.0" fill="rgb(240,201,8)" rx="2" ry="2" />
<text  x="158.33" y="2015.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="362.1" y="1957" width="0.2" height="15.0" fill="rgb(239,27,21)" rx="2" ry="2" />
<text  x="365.07" y="1967.5" ></text>
</g>
<g >
<title>kfree_call_rcu (1 samples, 0.02%)</title><rect x="733.1" y="1685" width="0.2" height="15.0" fill="rgb(225,51,47)" rx="2" ry="2" />
<text  x="736.07" y="1695.5" ></text>
</g>
<g >
<title>epoll_wait (108 samples, 1.82%)</title><rect x="488.1" y="2037" width="21.5" height="15.0" fill="rgb(240,115,27)" rx="2" ry="2" />
<text  x="491.06" y="2047.5" >e..</text>
</g>
<g >
<title>all (5,919 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(243,194,42)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="530.9" y="1797" width="0.2" height="15.0" fill="rgb(249,138,2)" rx="2" ry="2" />
<text  x="533.92" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="915.9" y="1989" width="0.2" height="15.0" fill="rgb(239,164,46)" rx="2" ry="2" />
<text  x="918.88" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="691.4" y="1829" width="0.2" height="15.0" fill="rgb(239,122,22)" rx="2" ry="2" />
<text  x="694.41" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="767.4" y="1637" width="0.2" height="15.0" fill="rgb(239,144,27)" rx="2" ry="2" />
<text  x="770.36" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (10 samples, 0.17%)</title><rect x="698.2" y="2021" width="2.0" height="15.0" fill="rgb(249,136,12)" rx="2" ry="2" />
<text  x="701.18" y="2031.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="14.6" y="1989" width="0.8" height="15.0" fill="rgb(250,47,25)" rx="2" ry="2" />
<text  x="17.59" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (1 samples, 0.02%)</title><rect x="1177.0" y="2053" width="0.2" height="15.0" fill="rgb(222,84,41)" rx="2" ry="2" />
<text  x="1180.04" y="2063.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (18 samples, 0.30%)</title><rect x="160.9" y="2005" width="3.6" height="15.0" fill="rgb(231,81,4)" rx="2" ry="2" />
<text  x="163.91" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.2" y="1813" width="0.2" height="15.0" fill="rgb(218,25,46)" rx="2" ry="2" />
<text  x="65.23" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1143.7" y="1973" width="0.4" height="15.0" fill="rgb(229,52,18)" rx="2" ry="2" />
<text  x="1146.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="499.8" y="1653" width="0.2" height="15.0" fill="rgb(254,164,20)" rx="2" ry="2" />
<text  x="502.82" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="877.6" y="1861" width="0.2" height="15.0" fill="rgb(205,147,41)" rx="2" ry="2" />
<text  x="880.61" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="484.3" y="2021" width="0.2" height="15.0" fill="rgb(224,71,2)" rx="2" ry="2" />
<text  x="487.27" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="505.8" y="1813" width="0.4" height="15.0" fill="rgb(217,148,23)" rx="2" ry="2" />
<text  x="508.80" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="464.5" y="1925" width="0.2" height="15.0" fill="rgb(225,127,29)" rx="2" ry="2" />
<text  x="467.54" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (64 samples, 1.08%)</title><rect x="1149.5" y="2021" width="12.8" height="15.0" fill="rgb(224,121,19)" rx="2" ry="2" />
<text  x="1152.53" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.07%)</title><rect x="1174.3" y="1989" width="0.7" height="15.0" fill="rgb(253,36,28)" rx="2" ry="2" />
<text  x="1177.25" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="693.8" y="1925" width="0.6" height="15.0" fill="rgb(216,156,16)" rx="2" ry="2" />
<text  x="696.80" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="272.8" y="1781" width="0.2" height="15.0" fill="rgb(243,111,26)" rx="2" ry="2" />
<text  x="275.75" y="1791.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="82.4" y="1941" width="0.2" height="15.0" fill="rgb(209,193,16)" rx="2" ry="2" />
<text  x="85.37" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (10 samples, 0.17%)</title><rect x="1011.8" y="1989" width="2.0" height="15.0" fill="rgb(222,158,51)" rx="2" ry="2" />
<text  x="1014.77" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="527.9" y="2005" width="1.6" height="15.0" fill="rgb(231,140,6)" rx="2" ry="2" />
<text  x="530.93" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="890.6" y="1621" width="0.2" height="15.0" fill="rgb(216,40,16)" rx="2" ry="2" />
<text  x="893.56" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (18 samples, 0.30%)</title><rect x="1139.6" y="2053" width="3.6" height="15.0" fill="rgb(224,137,0)" rx="2" ry="2" />
<text  x="1142.56" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="645.4" y="1845" width="0.2" height="15.0" fill="rgb(213,154,10)" rx="2" ry="2" />
<text  x="648.35" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (4 samples, 0.07%)</title><rect x="1163.9" y="2053" width="0.8" height="15.0" fill="rgb(231,25,5)" rx="2" ry="2" />
<text  x="1166.88" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="669.5" y="1829" width="0.2" height="15.0" fill="rgb(245,116,24)" rx="2" ry="2" />
<text  x="672.48" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="1182.0" y="1685" width="0.2" height="15.0" fill="rgb(223,226,35)" rx="2" ry="2" />
<text  x="1185.03" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="373.0" y="1925" width="1.0" height="15.0" fill="rgb(241,163,25)" rx="2" ry="2" />
<text  x="376.03" y="1935.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="969.1" y="1701" width="0.2" height="15.0" fill="rgb(207,100,43)" rx="2" ry="2" />
<text  x="972.11" y="1711.5" ></text>
</g>
<g >
<title>sk_reset_timer (34 samples, 0.57%)</title><rect x="323.2" y="1781" width="6.8" height="15.0" fill="rgb(228,206,39)" rx="2" ry="2" />
<text  x="326.19" y="1791.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="845.1" y="1877" width="0.4" height="15.0" fill="rgb(224,70,11)" rx="2" ry="2" />
<text  x="848.11" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (7 samples, 0.12%)</title><rect x="990.2" y="1893" width="1.4" height="15.0" fill="rgb(232,186,44)" rx="2" ry="2" />
<text  x="993.24" y="1903.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (9 samples, 0.15%)</title><rect x="701.6" y="1989" width="1.8" height="15.0" fill="rgb(214,103,16)" rx="2" ry="2" />
<text  x="704.57" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="745.8" y="1733" width="0.2" height="15.0" fill="rgb(206,54,23)" rx="2" ry="2" />
<text  x="748.83" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="111.9" y="37" width="0.2" height="15.0" fill="rgb(207,187,30)" rx="2" ry="2" />
<text  x="114.87" y="47.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="273.8" y="1829" width="0.1" height="15.0" fill="rgb(215,3,16)" rx="2" ry="2" />
<text  x="276.75" y="1839.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.14%)</title><rect x="16.0" y="1829" width="1.6" height="15.0" fill="rgb(244,133,27)" rx="2" ry="2" />
<text  x="18.98" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (15 samples, 0.25%)</title><rect x="140.8" y="1909" width="3.0" height="15.0" fill="rgb(220,194,51)" rx="2" ry="2" />
<text  x="143.78" y="1919.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="329.8" y="1685" width="0.2" height="15.0" fill="rgb(228,80,54)" rx="2" ry="2" />
<text  x="332.77" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (758 samples, 12.81%)</title><rect x="705.8" y="1989" width="151.1" height="15.0" fill="rgb(242,124,34)" rx="2" ry="2" />
<text  x="708.76" y="1999.5" >facebook::memcache:..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="1027.3" y="2005" width="0.2" height="15.0" fill="rgb(254,25,53)" rx="2" ry="2" />
<text  x="1030.32" y="2015.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="756.8" y="1669" width="0.2" height="15.0" fill="rgb(210,160,54)" rx="2" ry="2" />
<text  x="759.80" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="164.9" y="2005" width="0.2" height="15.0" fill="rgb(231,152,19)" rx="2" ry="2" />
<text  x="167.90" y="2015.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="153.1" y="1749" width="0.2" height="15.0" fill="rgb(222,191,17)" rx="2" ry="2" />
<text  x="156.14" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="170.9" y="1941" width="0.2" height="15.0" fill="rgb(249,31,39)" rx="2" ry="2" />
<text  x="173.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1397" width="15.4" height="15.0" fill="rgb(229,82,12)" rx="2" ry="2" />
<text  x="102.71" y="1407.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (3 samples, 0.05%)</title><rect x="514.4" y="1989" width="0.6" height="15.0" fill="rgb(207,6,40)" rx="2" ry="2" />
<text  x="517.38" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="248.8" y="1877" width="0.2" height="15.0" fill="rgb(240,108,39)" rx="2" ry="2" />
<text  x="251.83" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="409.1" y="1685" width="0.2" height="15.0" fill="rgb(222,108,16)" rx="2" ry="2" />
<text  x="412.11" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (1 samples, 0.02%)</title><rect x="861.5" y="1989" width="0.2" height="15.0" fill="rgb(246,127,2)" rx="2" ry="2" />
<text  x="864.46" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (11 samples, 0.19%)</title><rect x="761.2" y="1685" width="2.2" height="15.0" fill="rgb(234,87,6)" rx="2" ry="2" />
<text  x="764.18" y="1695.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="506.2" y="1877" width="0.2" height="15.0" fill="rgb(246,209,42)" rx="2" ry="2" />
<text  x="509.20" y="1887.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="1142.2" y="1973" width="0.4" height="15.0" fill="rgb(233,63,12)" rx="2" ry="2" />
<text  x="1145.15" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="77.4" y="1893" width="0.2" height="15.0" fill="rgb(231,208,1)" rx="2" ry="2" />
<text  x="80.38" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="898.9" y="1989" width="0.2" height="15.0" fill="rgb(250,88,19)" rx="2" ry="2" />
<text  x="901.94" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="890.8" y="1925" width="0.4" height="15.0" fill="rgb(220,126,8)" rx="2" ry="2" />
<text  x="893.76" y="1935.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="330.6" y="1813" width="0.2" height="15.0" fill="rgb(235,25,44)" rx="2" ry="2" />
<text  x="333.57" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="764.4" y="1669" width="0.2" height="15.0" fill="rgb(205,17,9)" rx="2" ry="2" />
<text  x="767.37" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="669.7" y="1733" width="0.4" height="15.0" fill="rgb(237,8,21)" rx="2" ry="2" />
<text  x="672.68" y="1743.5" ></text>
</g>
<g >
<title>__snprintf (2 samples, 0.03%)</title><rect x="346.9" y="2037" width="0.4" height="15.0" fill="rgb(213,35,16)" rx="2" ry="2" />
<text  x="349.92" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="113.7" y="37" width="0.2" height="15.0" fill="rgb(209,25,27)" rx="2" ry="2" />
<text  x="116.67" y="47.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (7 samples, 0.12%)</title><rect x="1030.7" y="2021" width="1.4" height="15.0" fill="rgb(226,89,35)" rx="2" ry="2" />
<text  x="1033.71" y="2031.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="189.2" y="2021" width="0.2" height="15.0" fill="rgb(233,25,50)" rx="2" ry="2" />
<text  x="192.22" y="2031.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="882.4" y="1781" width="0.2" height="15.0" fill="rgb(207,193,26)" rx="2" ry="2" />
<text  x="885.39" y="1791.5" ></text>
</g>
<g >
<title>iput (54 samples, 0.91%)</title><rect x="728.7" y="1733" width="10.8" height="15.0" fill="rgb(208,0,50)" rx="2" ry="2" />
<text  x="731.69" y="1743.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="1025.1" y="2037" width="0.4" height="15.0" fill="rgb(245,187,11)" rx="2" ry="2" />
<text  x="1028.13" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="120.6" y="1941" width="0.4" height="15.0" fill="rgb(219,103,10)" rx="2" ry="2" />
<text  x="123.64" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="335.6" y="1813" width="0.2" height="15.0" fill="rgb(242,147,36)" rx="2" ry="2" />
<text  x="338.55" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (110 samples, 1.86%)</title><rect x="974.5" y="2037" width="21.9" height="15.0" fill="rgb(250,27,41)" rx="2" ry="2" />
<text  x="977.49" y="2047.5" >f..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="957.7" y="1797" width="0.2" height="15.0" fill="rgb(218,146,32)" rx="2" ry="2" />
<text  x="960.75" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="474.9" y="1909" width="0.2" height="15.0" fill="rgb(218,56,4)" rx="2" ry="2" />
<text  x="477.90" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (9 samples, 0.15%)</title><rect x="1167.1" y="2021" width="1.8" height="15.0" fill="rgb(214,38,18)" rx="2" ry="2" />
<text  x="1170.07" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="499.8" y="1701" width="0.2" height="15.0" fill="rgb(251,64,22)" rx="2" ry="2" />
<text  x="502.82" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1003.6" y="1829" width="0.2" height="15.0" fill="rgb(218,197,29)" rx="2" ry="2" />
<text  x="1006.60" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="255.4" y="1877" width="0.2" height="15.0" fill="rgb(246,166,11)" rx="2" ry="2" />
<text  x="258.41" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="530.9" y="1717" width="0.2" height="15.0" fill="rgb(250,223,36)" rx="2" ry="2" />
<text  x="533.92" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="153.7" y="1909" width="0.2" height="15.0" fill="rgb(226,171,37)" rx="2" ry="2" />
<text  x="156.74" y="1919.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (10 samples, 0.17%)</title><rect x="222.5" y="1845" width="2.0" height="15.0" fill="rgb(213,192,40)" rx="2" ry="2" />
<text  x="225.52" y="1855.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (7 samples, 0.12%)</title><rect x="68.6" y="1877" width="1.4" height="15.0" fill="rgb(254,83,13)" rx="2" ry="2" />
<text  x="71.61" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="138.6" y="1573" width="0.2" height="15.0" fill="rgb(251,71,52)" rx="2" ry="2" />
<text  x="141.59" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="571.4" y="1797" width="0.2" height="15.0" fill="rgb(216,151,4)" rx="2" ry="2" />
<text  x="574.39" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="886.0" y="1749" width="0.2" height="15.0" fill="rgb(249,163,11)" rx="2" ry="2" />
<text  x="888.98" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="955.8" y="1957" width="0.2" height="15.0" fill="rgb(219,108,49)" rx="2" ry="2" />
<text  x="958.75" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="521.6" y="1957" width="0.2" height="15.0" fill="rgb(229,9,35)" rx="2" ry="2" />
<text  x="524.55" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="847.5" y="1877" width="0.2" height="15.0" fill="rgb(217,128,49)" rx="2" ry="2" />
<text  x="850.50" y="1887.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1001.2" y="1909" width="0.2" height="15.0" fill="rgb(217,41,7)" rx="2" ry="2" />
<text  x="1004.21" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="228.9" y="1957" width="0.4" height="15.0" fill="rgb(222,96,13)" rx="2" ry="2" />
<text  x="231.90" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="886.0" y="1637" width="0.2" height="15.0" fill="rgb(236,121,41)" rx="2" ry="2" />
<text  x="888.98" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="891.8" y="1925" width="0.4" height="15.0" fill="rgb(239,62,25)" rx="2" ry="2" />
<text  x="894.76" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="897.3" y="1941" width="0.2" height="15.0" fill="rgb(217,182,37)" rx="2" ry="2" />
<text  x="900.34" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (6 samples, 0.10%)</title><rect x="540.9" y="1957" width="1.2" height="15.0" fill="rgb(234,35,39)" rx="2" ry="2" />
<text  x="543.89" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="974.3" y="1829" width="0.2" height="15.0" fill="rgb(211,20,28)" rx="2" ry="2" />
<text  x="977.29" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="225.1" y="1893" width="0.4" height="15.0" fill="rgb(206,7,45)" rx="2" ry="2" />
<text  x="228.11" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="320.4" y="1781" width="0.2" height="15.0" fill="rgb(241,176,4)" rx="2" ry="2" />
<text  x="323.40" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1121.0" y="1669" width="0.2" height="15.0" fill="rgb(213,175,26)" rx="2" ry="2" />
<text  x="1124.02" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="229.5" y="1893" width="0.2" height="15.0" fill="rgb(230,128,18)" rx="2" ry="2" />
<text  x="232.49" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="290.3" y="1589" width="0.2" height="15.0" fill="rgb(250,61,20)" rx="2" ry="2" />
<text  x="293.30" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1413" width="15.4" height="15.0" fill="rgb(237,158,2)" rx="2" ry="2" />
<text  x="102.71" y="1423.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="125.0" y="1989" width="0.2" height="15.0" fill="rgb(246,4,0)" rx="2" ry="2" />
<text  x="128.03" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="888.6" y="1957" width="0.2" height="15.0" fill="rgb(206,148,32)" rx="2" ry="2" />
<text  x="891.57" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="92.5" y="2021" width="0.2" height="15.0" fill="rgb(240,1,17)" rx="2" ry="2" />
<text  x="95.53" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="142.6" y="1893" width="0.4" height="15.0" fill="rgb(211,85,26)" rx="2" ry="2" />
<text  x="145.57" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="320.4" y="1765" width="0.2" height="15.0" fill="rgb(213,229,53)" rx="2" ry="2" />
<text  x="323.40" y="1775.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="89.5" y="2005" width="0.4" height="15.0" fill="rgb(223,149,16)" rx="2" ry="2" />
<text  x="92.54" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1004.6" y="1957" width="0.2" height="15.0" fill="rgb(238,103,5)" rx="2" ry="2" />
<text  x="1007.60" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="114.1" y="197" width="0.2" height="15.0" fill="rgb(210,50,4)" rx="2" ry="2" />
<text  x="117.06" y="207.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="624.4" y="2005" width="0.2" height="15.0" fill="rgb(246,166,31)" rx="2" ry="2" />
<text  x="627.42" y="2015.5" ></text>
</g>
<g >
<title>event_assign (6 samples, 0.10%)</title><rect x="157.5" y="2021" width="1.2" height="15.0" fill="rgb(253,209,24)" rx="2" ry="2" />
<text  x="160.52" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (7 samples, 0.12%)</title><rect x="704.4" y="1893" width="1.4" height="15.0" fill="rgb(208,149,5)" rx="2" ry="2" />
<text  x="707.36" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="986.7" y="1925" width="0.2" height="15.0" fill="rgb(223,100,45)" rx="2" ry="2" />
<text  x="989.65" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="526.7" y="1957" width="0.2" height="15.0" fill="rgb(237,85,46)" rx="2" ry="2" />
<text  x="529.74" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="505.8" y="1829" width="0.4" height="15.0" fill="rgb(207,31,17)" rx="2" ry="2" />
<text  x="508.80" y="1839.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="751.2" y="1461" width="0.2" height="15.0" fill="rgb(248,229,40)" rx="2" ry="2" />
<text  x="754.21" y="1471.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (37 samples, 0.63%)</title><rect x="322.6" y="1829" width="7.4" height="15.0" fill="rgb(220,85,53)" rx="2" ry="2" />
<text  x="325.59" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="484.5" y="2021" width="3.2" height="15.0" fill="rgb(241,103,40)" rx="2" ry="2" />
<text  x="487.47" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="893.2" y="1957" width="0.2" height="15.0" fill="rgb(222,114,53)" rx="2" ry="2" />
<text  x="896.16" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1112.4" y="1685" width="0.4" height="15.0" fill="rgb(215,30,50)" rx="2" ry="2" />
<text  x="1115.45" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="248.8" y="1733" width="0.2" height="15.0" fill="rgb(238,220,50)" rx="2" ry="2" />
<text  x="251.83" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="907.9" y="1989" width="2.0" height="15.0" fill="rgb(240,60,27)" rx="2" ry="2" />
<text  x="910.91" y="1999.5" ></text>
</g>
<g >
<title>security_d_instantiate (1 samples, 0.02%)</title><rect x="410.3" y="1925" width="0.2" height="15.0" fill="rgb(223,182,0)" rx="2" ry="2" />
<text  x="413.31" y="1935.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (41 samples, 0.69%)</title><rect x="1168.9" y="2053" width="8.1" height="15.0" fill="rgb(216,80,54)" rx="2" ry="2" />
<text  x="1171.87" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="135.4" y="1941" width="0.2" height="15.0" fill="rgb(206,19,21)" rx="2" ry="2" />
<text  x="138.40" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="52.9" y="1877" width="0.2" height="15.0" fill="rgb(239,107,22)" rx="2" ry="2" />
<text  x="55.86" y="1887.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="339.5" y="1925" width="1.2" height="15.0" fill="rgb(214,186,28)" rx="2" ry="2" />
<text  x="342.54" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="894.2" y="1733" width="0.2" height="15.0" fill="rgb(241,200,16)" rx="2" ry="2" />
<text  x="897.15" y="1743.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="682.8" y="1877" width="0.8" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="685.83" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="402.9" y="1893" width="0.2" height="15.0" fill="rgb(248,227,14)" rx="2" ry="2" />
<text  x="405.93" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="489.9" y="1813" width="0.2" height="15.0" fill="rgb(254,155,35)" rx="2" ry="2" />
<text  x="492.85" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (3 samples, 0.05%)</title><rect x="907.3" y="2037" width="0.6" height="15.0" fill="rgb(211,82,21)" rx="2" ry="2" />
<text  x="910.31" y="2047.5" ></text>
</g>
<g >
<title>tcp_set_state (2 samples, 0.03%)</title><rect x="825.6" y="1733" width="0.4" height="15.0" fill="rgb(240,173,51)" rx="2" ry="2" />
<text  x="828.57" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="546.5" y="1781" width="0.2" height="15.0" fill="rgb(230,156,36)" rx="2" ry="2" />
<text  x="549.47" y="1791.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="362.5" y="1957" width="0.2" height="15.0" fill="rgb(233,11,47)" rx="2" ry="2" />
<text  x="365.46" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="953.0" y="1973" width="0.2" height="15.0" fill="rgb(206,15,27)" rx="2" ry="2" />
<text  x="955.96" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="526.5" y="1973" width="0.2" height="15.0" fill="rgb(209,57,21)" rx="2" ry="2" />
<text  x="529.54" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="48.9" y="1941" width="0.6" height="15.0" fill="rgb(227,184,13)" rx="2" ry="2" />
<text  x="51.87" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="936.8" y="1957" width="0.4" height="15.0" fill="rgb(229,58,8)" rx="2" ry="2" />
<text  x="939.82" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="464.5" y="1733" width="0.2" height="15.0" fill="rgb(251,14,13)" rx="2" ry="2" />
<text  x="467.54" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.55%)</title><rect x="921.5" y="2021" width="30.1" height="15.0" fill="rgb(206,56,8)" rx="2" ry="2" />
<text  x="924.46" y="2031.5" >[u..</text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="866.2" y="1989" width="0.4" height="15.0" fill="rgb(233,109,14)" rx="2" ry="2" />
<text  x="869.24" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="381.4" y="1797" width="0.2" height="15.0" fill="rgb(249,173,27)" rx="2" ry="2" />
<text  x="384.40" y="1807.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1013.8" y="1749" width="0.2" height="15.0" fill="rgb(245,219,27)" rx="2" ry="2" />
<text  x="1016.77" y="1759.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="948.2" y="1989" width="0.2" height="15.0" fill="rgb(233,23,30)" rx="2" ry="2" />
<text  x="951.18" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="409.1" y="1701" width="0.2" height="15.0" fill="rgb(250,47,50)" rx="2" ry="2" />
<text  x="412.11" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (439 samples, 7.42%)</title><rect x="1041.7" y="2021" width="87.5" height="15.0" fill="rgb(248,142,1)" rx="2" ry="2" />
<text  x="1044.68" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="806.2" y="1589" width="0.2" height="15.0" fill="rgb(221,137,12)" rx="2" ry="2" />
<text  x="809.24" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="409.1" y="1877" width="0.2" height="15.0" fill="rgb(216,228,42)" rx="2" ry="2" />
<text  x="412.11" y="1887.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="92.1" y="1893" width="0.2" height="15.0" fill="rgb(227,82,3)" rx="2" ry="2" />
<text  x="95.14" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="461.5" y="1877" width="0.2" height="15.0" fill="rgb(233,196,7)" rx="2" ry="2" />
<text  x="464.55" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="953.2" y="1989" width="0.4" height="15.0" fill="rgb(230,42,31)" rx="2" ry="2" />
<text  x="956.16" y="1999.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="757.6" y="1733" width="0.2" height="15.0" fill="rgb(252,74,31)" rx="2" ry="2" />
<text  x="760.59" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="172.3" y="1957" width="0.2" height="15.0" fill="rgb(232,12,5)" rx="2" ry="2" />
<text  x="175.28" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (2 samples, 0.03%)</title><rect x="615.6" y="2037" width="0.4" height="15.0" fill="rgb(215,9,33)" rx="2" ry="2" />
<text  x="618.65" y="2047.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="812.0" y="1685" width="0.2" height="15.0" fill="rgb(225,41,26)" rx="2" ry="2" />
<text  x="815.02" y="1695.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="125.2" y="2005" width="0.2" height="15.0" fill="rgb(213,131,29)" rx="2" ry="2" />
<text  x="128.23" y="2015.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="689.8" y="1829" width="0.2" height="15.0" fill="rgb(215,117,27)" rx="2" ry="2" />
<text  x="692.81" y="1839.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="96.7" y="2005" width="0.6" height="15.0" fill="rgb(205,127,18)" rx="2" ry="2" />
<text  x="99.72" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="617.0" y="2005" width="0.6" height="15.0" fill="rgb(205,189,11)" rx="2" ry="2" />
<text  x="620.05" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1144.1" y="2005" width="0.2" height="15.0" fill="rgb(240,67,8)" rx="2" ry="2" />
<text  x="1147.15" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="228.1" y="1733" width="0.2" height="15.0" fill="rgb(243,222,11)" rx="2" ry="2" />
<text  x="231.10" y="1743.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.08%)</title><rect x="93.5" y="2021" width="1.0" height="15.0" fill="rgb(233,127,24)" rx="2" ry="2" />
<text  x="96.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="958.1" y="2021" width="2.6" height="15.0" fill="rgb(251,114,23)" rx="2" ry="2" />
<text  x="961.15" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1143.0" y="1957" width="0.2" height="15.0" fill="rgb(226,226,9)" rx="2" ry="2" />
<text  x="1145.95" y="1967.5" ></text>
</g>
<g >
<title>get_empty_filp (27 samples, 0.46%)</title><rect x="399.5" y="1925" width="5.4" height="15.0" fill="rgb(234,19,14)" rx="2" ry="2" />
<text  x="402.55" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="869.0" y="1973" width="0.2" height="15.0" fill="rgb(243,227,40)" rx="2" ry="2" />
<text  x="872.03" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (301 samples, 5.09%)</title><rect x="423.9" y="2005" width="60.0" height="15.0" fill="rgb(243,102,40)" rx="2" ry="2" />
<text  x="426.87" y="2015.5" >do_sys..</text>
</g>
<g >
<title>skb_defer_rx_timestamp (1 samples, 0.02%)</title><rect x="291.9" y="1621" width="0.2" height="15.0" fill="rgb(222,79,1)" rx="2" ry="2" />
<text  x="294.89" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1182.0" y="1781" width="0.2" height="15.0" fill="rgb(217,98,5)" rx="2" ry="2" />
<text  x="1185.03" y="1791.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="118.5" y="1813" width="0.2" height="15.0" fill="rgb(242,49,10)" rx="2" ry="2" />
<text  x="121.45" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="515.8" y="1973" width="0.8" height="15.0" fill="rgb(246,103,37)" rx="2" ry="2" />
<text  x="518.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="499.8" y="1573" width="0.2" height="15.0" fill="rgb(211,128,50)" rx="2" ry="2" />
<text  x="502.82" y="1583.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="62.2" y="1861" width="0.2" height="15.0" fill="rgb(220,117,3)" rx="2" ry="2" />
<text  x="65.23" y="1871.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="920.7" y="1877" width="0.2" height="15.0" fill="rgb(244,55,13)" rx="2" ry="2" />
<text  x="923.67" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="227.3" y="1541" width="0.2" height="15.0" fill="rgb(240,38,2)" rx="2" ry="2" />
<text  x="230.30" y="1551.5" ></text>
</g>
<g >
<title>__GI___getpeername (73 samples, 1.23%)</title><rect x="658.5" y="1941" width="14.6" height="15.0" fill="rgb(210,150,42)" rx="2" ry="2" />
<text  x="661.51" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="572.4" y="1957" width="0.2" height="15.0" fill="rgb(254,193,39)" rx="2" ry="2" />
<text  x="575.39" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1004.6" y="2005" width="0.2" height="15.0" fill="rgb(244,121,34)" rx="2" ry="2" />
<text  x="1007.60" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="320.4" y="1701" width="0.2" height="15.0" fill="rgb(253,163,53)" rx="2" ry="2" />
<text  x="323.40" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="691.8" y="1765" width="0.2" height="15.0" fill="rgb(244,21,53)" rx="2" ry="2" />
<text  x="694.80" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::recv (3 samples, 0.05%)</title><rect x="63.0" y="1973" width="0.6" height="15.0" fill="rgb(229,98,52)" rx="2" ry="2" />
<text  x="66.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="437" width="14.0" height="15.0" fill="rgb(240,88,45)" rx="2" ry="2" />
<text  x="103.11" y="447.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="523.9" y="1925" width="0.4" height="15.0" fill="rgb(245,138,15)" rx="2" ry="2" />
<text  x="526.94" y="1935.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="489.9" y="1653" width="0.2" height="15.0" fill="rgb(235,147,0)" rx="2" ry="2" />
<text  x="492.85" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="335.6" y="1765" width="0.2" height="15.0" fill="rgb(253,77,37)" rx="2" ry="2" />
<text  x="338.55" y="1775.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="377.6" y="1909" width="0.2" height="15.0" fill="rgb(219,199,49)" rx="2" ry="2" />
<text  x="380.62" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="690.0" y="1861" width="0.2" height="15.0" fill="rgb(249,95,54)" rx="2" ry="2" />
<text  x="693.01" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="694.0" y="1877" width="0.4" height="15.0" fill="rgb(210,141,52)" rx="2" ry="2" />
<text  x="697.00" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (4 samples, 0.07%)</title><rect x="536.1" y="1973" width="0.8" height="15.0" fill="rgb(228,209,8)" rx="2" ry="2" />
<text  x="539.11" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="918.3" y="2021" width="0.4" height="15.0" fill="rgb(219,102,19)" rx="2" ry="2" />
<text  x="921.28" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="903.3" y="1845" width="0.2" height="15.0" fill="rgb(245,72,2)" rx="2" ry="2" />
<text  x="906.32" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="635.4" y="1973" width="0.2" height="15.0" fill="rgb(219,146,46)" rx="2" ry="2" />
<text  x="638.39" y="1983.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.02%)</title><rect x="960.5" y="2005" width="0.2" height="15.0" fill="rgb(206,121,47)" rx="2" ry="2" />
<text  x="963.54" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1108.9" y="1829" width="0.2" height="15.0" fill="rgb(254,7,50)" rx="2" ry="2" />
<text  x="1111.86" y="1839.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="463.5" y="1941" width="1.2" height="15.0" fill="rgb(221,12,3)" rx="2" ry="2" />
<text  x="466.54" y="1951.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="173.7" y="1941" width="0.2" height="15.0" fill="rgb(254,167,7)" rx="2" ry="2" />
<text  x="176.67" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="894.4" y="1989" width="0.2" height="15.0" fill="rgb(215,198,24)" rx="2" ry="2" />
<text  x="897.35" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::close (2 samples, 0.03%)</title><rect x="839.5" y="1925" width="0.4" height="15.0" fill="rgb(251,109,8)" rx="2" ry="2" />
<text  x="842.53" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="673.1" y="1909" width="0.2" height="15.0" fill="rgb(217,144,47)" rx="2" ry="2" />
<text  x="676.06" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="933.8" y="1957" width="0.2" height="15.0" fill="rgb(245,122,11)" rx="2" ry="2" />
<text  x="936.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="1164.9" y="2053" width="0.2" height="15.0" fill="rgb(253,203,37)" rx="2" ry="2" />
<text  x="1167.88" y="2063.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="245.2" y="1893" width="0.8" height="15.0" fill="rgb(245,0,33)" rx="2" ry="2" />
<text  x="248.24" y="1903.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="236.7" y="2021" width="0.8" height="15.0" fill="rgb(225,122,21)" rx="2" ry="2" />
<text  x="239.67" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="890.6" y="1685" width="0.2" height="15.0" fill="rgb(240,34,49)" rx="2" ry="2" />
<text  x="893.56" y="1695.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="59.4" y="1909" width="0.6" height="15.0" fill="rgb(218,2,1)" rx="2" ry="2" />
<text  x="62.44" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (2 samples, 0.03%)</title><rect x="134.4" y="1957" width="0.4" height="15.0" fill="rgb(209,176,16)" rx="2" ry="2" />
<text  x="137.40" y="1967.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (377 samples, 6.37%)</title><rect x="17.8" y="2053" width="75.1" height="15.0" fill="rgb(212,105,22)" rx="2" ry="2" />
<text  x="20.77" y="2063.5" >[libeven..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="284.9" y="1637" width="0.2" height="15.0" fill="rgb(230,155,40)" rx="2" ry="2" />
<text  x="287.91" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="80.8" y="1909" width="0.2" height="15.0" fill="rgb(226,81,30)" rx="2" ry="2" />
<text  x="83.77" y="1919.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1108.7" y="1909" width="0.2" height="15.0" fill="rgb(225,92,49)" rx="2" ry="2" />
<text  x="1111.66" y="1919.5" ></text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.03%)</title><rect x="1111.5" y="1877" width="0.4" height="15.0" fill="rgb(232,101,54)" rx="2" ry="2" />
<text  x="1114.45" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="92.3" y="1941" width="0.2" height="15.0" fill="rgb(234,148,22)" rx="2" ry="2" />
<text  x="95.33" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="903.3" y="1781" width="0.2" height="15.0" fill="rgb(253,217,7)" rx="2" ry="2" />
<text  x="906.32" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (3 samples, 0.05%)</title><rect x="892.4" y="1845" width="0.6" height="15.0" fill="rgb(235,206,19)" rx="2" ry="2" />
<text  x="895.36" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="381.4" y="1685" width="0.2" height="15.0" fill="rgb(227,55,18)" rx="2" ry="2" />
<text  x="384.40" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="99.1" y="1845" width="20.1" height="15.0" fill="rgb(230,26,50)" rx="2" ry="2" />
<text  x="102.11" y="1855.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="156.9" y="2021" width="0.2" height="15.0" fill="rgb(243,218,47)" rx="2" ry="2" />
<text  x="159.93" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="117.9" y="1813" width="0.2" height="15.0" fill="rgb(213,185,35)" rx="2" ry="2" />
<text  x="120.85" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="894.2" y="1797" width="0.2" height="15.0" fill="rgb(229,141,43)" rx="2" ry="2" />
<text  x="897.15" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1182.0" y="1941" width="0.2" height="15.0" fill="rgb(239,26,6)" rx="2" ry="2" />
<text  x="1185.03" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="572.2" y="2005" width="0.8" height="15.0" fill="rgb(233,194,10)" rx="2" ry="2" />
<text  x="575.19" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="669.7" y="1781" width="0.4" height="15.0" fill="rgb(235,119,23)" rx="2" ry="2" />
<text  x="672.68" y="1791.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="179.1" y="2005" width="0.2" height="15.0" fill="rgb(213,37,49)" rx="2" ry="2" />
<text  x="182.06" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="228.1" y="1909" width="0.2" height="15.0" fill="rgb(227,194,26)" rx="2" ry="2" />
<text  x="231.10" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="898.9" y="1925" width="0.2" height="15.0" fill="rgb(219,186,35)" rx="2" ry="2" />
<text  x="901.94" y="1935.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="877.6" y="1909" width="0.2" height="15.0" fill="rgb(242,196,44)" rx="2" ry="2" />
<text  x="880.61" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="883.6" y="1893" width="0.2" height="15.0" fill="rgb(241,75,39)" rx="2" ry="2" />
<text  x="886.59" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="489.9" y="1717" width="0.2" height="15.0" fill="rgb(249,28,47)" rx="2" ry="2" />
<text  x="492.85" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="409.1" y="1893" width="0.2" height="15.0" fill="rgb(226,60,4)" rx="2" ry="2" />
<text  x="412.11" y="1903.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="14.0" y="2021" width="0.2" height="15.0" fill="rgb(220,27,28)" rx="2" ry="2" />
<text  x="16.99" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="840.5" y="1925" width="0.2" height="15.0" fill="rgb(209,83,10)" rx="2" ry="2" />
<text  x="843.53" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="903.5" y="2005" width="2.4" height="15.0" fill="rgb(235,113,3)" rx="2" ry="2" />
<text  x="906.52" y="2015.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (2 samples, 0.03%)</title><rect x="487.7" y="2037" width="0.4" height="15.0" fill="rgb(233,217,1)" rx="2" ry="2" />
<text  x="490.66" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="143.0" y="1893" width="0.4" height="15.0" fill="rgb(211,9,6)" rx="2" ry="2" />
<text  x="145.97" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="556.8" y="1861" width="0.2" height="15.0" fill="rgb(212,145,18)" rx="2" ry="2" />
<text  x="559.84" y="1871.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="459.8" y="1893" width="0.2" height="15.0" fill="rgb(250,153,48)" rx="2" ry="2" />
<text  x="462.75" y="1903.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="645.4" y="1765" width="0.2" height="15.0" fill="rgb(240,45,51)" rx="2" ry="2" />
<text  x="648.35" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="974.3" y="1925" width="0.2" height="15.0" fill="rgb(233,73,24)" rx="2" ry="2" />
<text  x="977.29" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="835.3" y="1877" width="0.2" height="15.0" fill="rgb(207,32,30)" rx="2" ry="2" />
<text  x="838.34" y="1887.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="683.6" y="1637" width="0.2" height="15.0" fill="rgb(209,71,42)" rx="2" ry="2" />
<text  x="686.63" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1146.5" y="1925" width="0.2" height="15.0" fill="rgb(210,79,16)" rx="2" ry="2" />
<text  x="1149.54" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="464.5" y="1781" width="0.2" height="15.0" fill="rgb(226,122,10)" rx="2" ry="2" />
<text  x="467.54" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (90 samples, 1.52%)</title><rect x="99.3" y="1701" width="18.0" height="15.0" fill="rgb(245,212,12)" rx="2" ry="2" />
<text  x="102.31" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="455.2" y="1973" width="0.4" height="15.0" fill="rgb(223,95,20)" rx="2" ry="2" />
<text  x="458.17" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="464.5" y="1877" width="0.2" height="15.0" fill="rgb(217,11,6)" rx="2" ry="2" />
<text  x="467.54" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="408.3" y="1845" width="0.2" height="15.0" fill="rgb(207,58,28)" rx="2" ry="2" />
<text  x="411.32" y="1855.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="264.6" y="1861" width="0.6" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="267.58" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="728.1" y="1653" width="0.2" height="15.0" fill="rgb(231,26,23)" rx="2" ry="2" />
<text  x="731.09" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="661" width="14.2" height="15.0" fill="rgb(221,125,26)" rx="2" ry="2" />
<text  x="103.11" y="671.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="336.3" y="1893" width="1.4" height="15.0" fill="rgb(226,134,1)" rx="2" ry="2" />
<text  x="339.35" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="637.0" y="1957" width="0.4" height="15.0" fill="rgb(245,27,31)" rx="2" ry="2" />
<text  x="639.98" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="404.5" y="1861" width="0.2" height="15.0" fill="rgb(224,21,13)" rx="2" ry="2" />
<text  x="407.53" y="1871.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="439.2" y="1989" width="0.2" height="15.0" fill="rgb(254,181,34)" rx="2" ry="2" />
<text  x="442.22" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="284.9" y="1621" width="0.2" height="15.0" fill="rgb(242,93,41)" rx="2" ry="2" />
<text  x="287.91" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1022.9" y="1973" width="0.4" height="15.0" fill="rgb(237,179,16)" rx="2" ry="2" />
<text  x="1025.94" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (5 samples, 0.08%)</title><rect x="292.3" y="1509" width="1.0" height="15.0" fill="rgb(207,20,11)" rx="2" ry="2" />
<text  x="295.29" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="546.5" y="1877" width="0.2" height="15.0" fill="rgb(208,212,21)" rx="2" ry="2" />
<text  x="549.47" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="893.2" y="1973" width="0.6" height="15.0" fill="rgb(246,18,24)" rx="2" ry="2" />
<text  x="896.16" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="683.6" y="1717" width="0.4" height="15.0" fill="rgb(237,110,24)" rx="2" ry="2" />
<text  x="686.63" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="145.6" y="1733" width="0.2" height="15.0" fill="rgb(218,36,52)" rx="2" ry="2" />
<text  x="148.56" y="1743.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="991.4" y="1877" width="0.2" height="15.0" fill="rgb(246,107,51)" rx="2" ry="2" />
<text  x="994.44" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="573.8" y="1989" width="1.2" height="15.0" fill="rgb(211,88,51)" rx="2" ry="2" />
<text  x="576.78" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (26 samples, 0.44%)</title><rect x="148.6" y="1909" width="5.1" height="15.0" fill="rgb(234,220,44)" rx="2" ry="2" />
<text  x="151.55" y="1919.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (49 samples, 0.83%)</title><rect x="1111.5" y="1893" width="9.7" height="15.0" fill="rgb(235,62,36)" rx="2" ry="2" />
<text  x="1114.45" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (1 samples, 0.02%)</title><rect x="577.6" y="2021" width="0.2" height="15.0" fill="rgb(225,6,40)" rx="2" ry="2" />
<text  x="580.57" y="2031.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.17%)</title><rect x="15.8" y="1893" width="2.0" height="15.0" fill="rgb(230,76,30)" rx="2" ry="2" />
<text  x="18.78" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="878.4" y="1893" width="0.2" height="15.0" fill="rgb(250,186,0)" rx="2" ry="2" />
<text  x="881.40" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (1 samples, 0.02%)</title><rect x="577.4" y="2021" width="0.2" height="15.0" fill="rgb(241,37,20)" rx="2" ry="2" />
<text  x="580.37" y="2031.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="83.2" y="1973" width="0.2" height="15.0" fill="rgb(232,180,44)" rx="2" ry="2" />
<text  x="86.16" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="820.8" y="1445" width="0.2" height="15.0" fill="rgb(242,166,46)" rx="2" ry="2" />
<text  x="823.79" y="1455.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="506.0" y="1797" width="0.2" height="15.0" fill="rgb(246,213,30)" rx="2" ry="2" />
<text  x="509.00" y="1807.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="223.5" y="1797" width="0.4" height="15.0" fill="rgb(243,123,52)" rx="2" ry="2" />
<text  x="226.51" y="1807.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="905.5" y="1957" width="0.2" height="15.0" fill="rgb(229,38,36)" rx="2" ry="2" />
<text  x="908.52" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="179.3" y="1989" width="0.2" height="15.0" fill="rgb(245,174,17)" rx="2" ry="2" />
<text  x="182.25" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (4 samples, 0.07%)</title><rect x="60.8" y="1909" width="0.8" height="15.0" fill="rgb(235,97,22)" rx="2" ry="2" />
<text  x="63.84" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="142.4" y="1877" width="0.2" height="15.0" fill="rgb(246,142,34)" rx="2" ry="2" />
<text  x="145.37" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="969.1" y="1717" width="0.2" height="15.0" fill="rgb(209,215,13)" rx="2" ry="2" />
<text  x="972.11" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="969.1" y="1973" width="0.2" height="15.0" fill="rgb(227,43,21)" rx="2" ry="2" />
<text  x="972.11" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.1" y="1429" width="0.2" height="15.0" fill="rgb(208,33,29)" rx="2" ry="2" />
<text  x="118.06" y="1439.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="158.7" y="2021" width="0.2" height="15.0" fill="rgb(249,196,5)" rx="2" ry="2" />
<text  x="161.72" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="682.8" y="1893" width="0.8" height="15.0" fill="rgb(243,44,34)" rx="2" ry="2" />
<text  x="685.83" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="114.1" y="229" width="0.2" height="15.0" fill="rgb(252,0,6)" rx="2" ry="2" />
<text  x="117.06" y="239.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="166.9" y="2005" width="0.4" height="15.0" fill="rgb(250,53,9)" rx="2" ry="2" />
<text  x="169.89" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="248.8" y="1589" width="0.2" height="15.0" fill="rgb(209,121,34)" rx="2" ry="2" />
<text  x="251.83" y="1599.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="73.4" y="1957" width="0.2" height="15.0" fill="rgb(239,15,39)" rx="2" ry="2" />
<text  x="76.40" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="169.1" y="1957" width="0.2" height="15.0" fill="rgb(247,13,9)" rx="2" ry="2" />
<text  x="172.09" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="924.7" y="1909" width="0.2" height="15.0" fill="rgb(241,195,54)" rx="2" ry="2" />
<text  x="927.65" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="396.6" y="1669" width="0.2" height="15.0" fill="rgb(216,122,35)" rx="2" ry="2" />
<text  x="399.56" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="212.9" y="1861" width="0.2" height="15.0" fill="rgb(248,8,13)" rx="2" ry="2" />
<text  x="215.95" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="527.3" y="1989" width="0.2" height="15.0" fill="rgb(214,22,31)" rx="2" ry="2" />
<text  x="530.33" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="74.8" y="1909" width="0.2" height="15.0" fill="rgb(209,41,44)" rx="2" ry="2" />
<text  x="77.79" y="1919.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="407.3" y="1893" width="0.4" height="15.0" fill="rgb(223,205,2)" rx="2" ry="2" />
<text  x="410.32" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="92.3" y="1989" width="0.2" height="15.0" fill="rgb(242,12,39)" rx="2" ry="2" />
<text  x="95.33" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="548.3" y="1957" width="0.2" height="15.0" fill="rgb(235,177,52)" rx="2" ry="2" />
<text  x="551.27" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="694.0" y="1797" width="0.4" height="15.0" fill="rgb(233,104,43)" rx="2" ry="2" />
<text  x="697.00" y="1807.5" ></text>
</g>
<g >
<title>__fget (7 samples, 0.12%)</title><rect x="411.7" y="1909" width="1.4" height="15.0" fill="rgb(228,220,31)" rx="2" ry="2" />
<text  x="414.71" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="898.9" y="1877" width="0.2" height="15.0" fill="rgb(213,204,7)" rx="2" ry="2" />
<text  x="901.94" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="408.3" y="1749" width="0.2" height="15.0" fill="rgb(215,119,45)" rx="2" ry="2" />
<text  x="411.32" y="1759.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="157.9" y="1957" width="0.8" height="15.0" fill="rgb(249,69,8)" rx="2" ry="2" />
<text  x="160.92" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="691.4" y="1733" width="0.2" height="15.0" fill="rgb(224,205,15)" rx="2" ry="2" />
<text  x="694.41" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.54%)</title><rect x="100.1" y="53" width="6.4" height="15.0" fill="rgb(215,0,33)" rx="2" ry="2" />
<text  x="103.11" y="63.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="566.8" y="1973" width="0.2" height="15.0" fill="rgb(241,184,40)" rx="2" ry="2" />
<text  x="569.81" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="154.1" y="1717" width="0.2" height="15.0" fill="rgb(229,100,4)" rx="2" ry="2" />
<text  x="157.14" y="1727.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="1122.0" y="1893" width="0.4" height="15.0" fill="rgb(216,90,52)" rx="2" ry="2" />
<text  x="1125.02" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_accept (1 samples, 0.02%)</title><rect x="386.0" y="1957" width="0.2" height="15.0" fill="rgb(253,73,37)" rx="2" ry="2" />
<text  x="388.99" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="381.2" y="1781" width="0.2" height="15.0" fill="rgb(228,124,0)" rx="2" ry="2" />
<text  x="384.20" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="200.8" y="2005" width="0.2" height="15.0" fill="rgb(245,203,4)" rx="2" ry="2" />
<text  x="203.79" y="2015.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="774.1" y="1541" width="0.2" height="15.0" fill="rgb(230,127,54)" rx="2" ry="2" />
<text  x="777.14" y="1551.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1092.9" y="1925" width="0.2" height="15.0" fill="rgb(230,217,34)" rx="2" ry="2" />
<text  x="1095.91" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="518.0" y="1973" width="1.2" height="15.0" fill="rgb(246,186,30)" rx="2" ry="2" />
<text  x="520.96" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="189.6" y="1797" width="0.4" height="15.0" fill="rgb(215,96,36)" rx="2" ry="2" />
<text  x="192.62" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="975.9" y="1925" width="0.2" height="15.0" fill="rgb(251,214,23)" rx="2" ry="2" />
<text  x="978.89" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="969.1" y="1829" width="0.2" height="15.0" fill="rgb(251,136,44)" rx="2" ry="2" />
<text  x="972.11" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="886.0" y="1925" width="0.2" height="15.0" fill="rgb(248,8,39)" rx="2" ry="2" />
<text  x="888.98" y="1935.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="228.5" y="1957" width="0.4" height="15.0" fill="rgb(251,62,15)" rx="2" ry="2" />
<text  x="231.50" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="409.1" y="1589" width="0.2" height="15.0" fill="rgb(240,226,46)" rx="2" ry="2" />
<text  x="412.11" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="291.5" y="1429" width="0.2" height="15.0" fill="rgb(213,149,17)" rx="2" ry="2" />
<text  x="294.49" y="1439.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1013.8" y="1957" width="0.2" height="15.0" fill="rgb(252,38,14)" rx="2" ry="2" />
<text  x="1016.77" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="190.2" y="1941" width="0.2" height="15.0" fill="rgb(227,6,0)" rx="2" ry="2" />
<text  x="193.22" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.81%)</title><rect x="98.9" y="1941" width="21.3" height="15.0" fill="rgb(214,193,20)" rx="2" ry="2" />
<text  x="101.91" y="1951.5" >[..</text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="39.9" y="1989" width="0.2" height="15.0" fill="rgb(225,111,36)" rx="2" ry="2" />
<text  x="42.90" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="784.7" y="1557" width="0.2" height="15.0" fill="rgb(229,154,53)" rx="2" ry="2" />
<text  x="787.71" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="77.4" y="1845" width="0.2" height="15.0" fill="rgb(242,97,45)" rx="2" ry="2" />
<text  x="80.38" y="1855.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="409.1" y="1621" width="0.2" height="15.0" fill="rgb(238,69,42)" rx="2" ry="2" />
<text  x="412.11" y="1631.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="156.7" y="2021" width="0.2" height="15.0" fill="rgb(253,26,3)" rx="2" ry="2" />
<text  x="159.73" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="566.8" y="1989" width="0.2" height="15.0" fill="rgb(213,131,40)" rx="2" ry="2" />
<text  x="569.81" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (1 samples, 0.02%)</title><rect x="576.0" y="1973" width="0.2" height="15.0" fill="rgb(254,40,31)" rx="2" ry="2" />
<text  x="578.98" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="145.2" y="1893" width="0.4" height="15.0" fill="rgb(252,214,46)" rx="2" ry="2" />
<text  x="148.16" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="396.6" y="1749" width="0.2" height="15.0" fill="rgb(212,161,16)" rx="2" ry="2" />
<text  x="399.56" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="113.9" y="69" width="0.2" height="15.0" fill="rgb(231,194,43)" rx="2" ry="2" />
<text  x="116.87" y="79.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="1111.5" y="1861" width="0.2" height="15.0" fill="rgb(205,113,19)" rx="2" ry="2" />
<text  x="1114.45" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="227.3" y="1749" width="0.2" height="15.0" fill="rgb(249,146,6)" rx="2" ry="2" />
<text  x="230.30" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="92.3" y="2005" width="0.2" height="15.0" fill="rgb(218,133,43)" rx="2" ry="2" />
<text  x="95.33" y="2015.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="134.8" y="1941" width="0.2" height="15.0" fill="rgb(220,199,22)" rx="2" ry="2" />
<text  x="137.80" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="957.7" y="1973" width="0.2" height="15.0" fill="rgb(227,102,5)" rx="2" ry="2" />
<text  x="960.75" y="1983.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="1098.1" y="1909" width="0.2" height="15.0" fill="rgb(215,155,44)" rx="2" ry="2" />
<text  x="1101.10" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (96 samples, 1.62%)</title><rect x="654.7" y="1989" width="19.2" height="15.0" fill="rgb(219,135,2)" rx="2" ry="2" />
<text  x="657.72" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (7 samples, 0.12%)</title><rect x="844.7" y="1941" width="1.4" height="15.0" fill="rgb(206,198,45)" rx="2" ry="2" />
<text  x="847.71" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="342.3" y="1893" width="0.2" height="15.0" fill="rgb(234,94,11)" rx="2" ry="2" />
<text  x="345.33" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="669.9" y="1445" width="0.2" height="15.0" fill="rgb(210,131,44)" rx="2" ry="2" />
<text  x="672.87" y="1455.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="52.3" y="1877" width="0.4" height="15.0" fill="rgb(230,24,9)" rx="2" ry="2" />
<text  x="55.26" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (4 samples, 0.07%)</title><rect x="970.9" y="2037" width="0.8" height="15.0" fill="rgb(212,85,18)" rx="2" ry="2" />
<text  x="973.91" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="756.8" y="1637" width="0.2" height="15.0" fill="rgb(231,95,47)" rx="2" ry="2" />
<text  x="759.80" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="894.4" y="1957" width="0.2" height="15.0" fill="rgb(240,34,39)" rx="2" ry="2" />
<text  x="897.35" y="1967.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="236.7" y="1861" width="0.8" height="15.0" fill="rgb(228,80,37)" rx="2" ry="2" />
<text  x="239.67" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="132.6" y="1989" width="0.2" height="15.0" fill="rgb(224,134,38)" rx="2" ry="2" />
<text  x="135.61" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="998.0" y="1989" width="0.4" height="15.0" fill="rgb(239,201,37)" rx="2" ry="2" />
<text  x="1001.02" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (33 samples, 0.56%)</title><rect x="997.2" y="2005" width="6.6" height="15.0" fill="rgb(246,110,28)" rx="2" ry="2" />
<text  x="1000.22" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (15 samples, 0.25%)</title><rect x="1103.5" y="1909" width="3.0" height="15.0" fill="rgb(248,179,29)" rx="2" ry="2" />
<text  x="1106.48" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="926.4" y="1925" width="1.0" height="15.0" fill="rgb(227,147,43)" rx="2" ry="2" />
<text  x="929.45" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="704.2" y="1893" width="0.2" height="15.0" fill="rgb(212,29,48)" rx="2" ry="2" />
<text  x="707.16" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="914.9" y="1973" width="0.4" height="15.0" fill="rgb(240,210,15)" rx="2" ry="2" />
<text  x="917.89" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="618.8" y="2005" width="0.6" height="15.0" fill="rgb(227,73,49)" rx="2" ry="2" />
<text  x="621.84" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="388.0" y="1941" width="0.2" height="15.0" fill="rgb(240,125,54)" rx="2" ry="2" />
<text  x="390.98" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="409.1" y="1733" width="0.2" height="15.0" fill="rgb(219,16,14)" rx="2" ry="2" />
<text  x="412.11" y="1743.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="479.3" y="1941" width="0.8" height="15.0" fill="rgb(212,62,11)" rx="2" ry="2" />
<text  x="482.29" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1097.7" y="1909" width="0.4" height="15.0" fill="rgb(208,130,5)" rx="2" ry="2" />
<text  x="1100.70" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="229.5" y="1797" width="0.2" height="15.0" fill="rgb(223,116,38)" rx="2" ry="2" />
<text  x="232.49" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="691.4" y="1653" width="0.2" height="15.0" fill="rgb(242,40,15)" rx="2" ry="2" />
<text  x="694.41" y="1663.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="115.7" y="1525" width="0.2" height="15.0" fill="rgb(246,39,1)" rx="2" ry="2" />
<text  x="118.66" y="1535.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="867.6" y="2005" width="0.2" height="15.0" fill="rgb(239,222,23)" rx="2" ry="2" />
<text  x="870.64" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="619.2" y="1925" width="0.2" height="15.0" fill="rgb(243,138,31)" rx="2" ry="2" />
<text  x="622.24" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="79.8" y="1941" width="0.4" height="15.0" fill="rgb(219,225,41)" rx="2" ry="2" />
<text  x="82.78" y="1951.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="164.1" y="1989" width="0.4" height="15.0" fill="rgb(248,5,26)" rx="2" ry="2" />
<text  x="167.10" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="898.9" y="1941" width="0.2" height="15.0" fill="rgb(209,78,11)" rx="2" ry="2" />
<text  x="901.94" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="61.0" y="1813" width="0.2" height="15.0" fill="rgb(236,19,24)" rx="2" ry="2" />
<text  x="64.04" y="1823.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.05%)</title><rect x="85.0" y="1957" width="0.6" height="15.0" fill="rgb(221,92,18)" rx="2" ry="2" />
<text  x="87.96" y="1967.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="847.5" y="1621" width="0.2" height="15.0" fill="rgb(208,131,51)" rx="2" ry="2" />
<text  x="850.50" y="1631.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1188.4" y="1973" width="0.8" height="15.0" fill="rgb(219,91,33)" rx="2" ry="2" />
<text  x="1191.41" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1176.8" y="2021" width="0.2" height="15.0" fill="rgb(215,89,41)" rx="2" ry="2" />
<text  x="1179.84" y="2031.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="290.3" y="1621" width="0.2" height="15.0" fill="rgb(226,45,50)" rx="2" ry="2" />
<text  x="293.30" y="1631.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1005.2" y="2021" width="0.2" height="15.0" fill="rgb(242,221,52)" rx="2" ry="2" />
<text  x="1008.20" y="2031.5" ></text>
</g>
<g >
<title>kick_process (1 samples, 0.02%)</title><rect x="833.1" y="1797" width="0.2" height="15.0" fill="rgb(236,125,22)" rx="2" ry="2" />
<text  x="836.15" y="1807.5" ></text>
</g>
<g >
<title>__sock_release (428 samples, 7.23%)</title><rect x="743.8" y="1781" width="85.4" height="15.0" fill="rgb(245,175,29)" rx="2" ry="2" />
<text  x="746.84" y="1791.5" >__sock_rel..</text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (8 samples, 0.14%)</title><rect x="533.5" y="1989" width="1.6" height="15.0" fill="rgb(232,168,10)" rx="2" ry="2" />
<text  x="536.51" y="1999.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1183.2" y="2053" width="0.4" height="15.0" fill="rgb(207,49,26)" rx="2" ry="2" />
<text  x="1186.22" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1013.8" y="1829" width="0.2" height="15.0" fill="rgb(248,207,3)" rx="2" ry="2" />
<text  x="1016.77" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="305.6" y="1653" width="0.2" height="15.0" fill="rgb(211,91,30)" rx="2" ry="2" />
<text  x="308.65" y="1663.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="575.8" y="1941" width="0.2" height="15.0" fill="rgb(211,36,21)" rx="2" ry="2" />
<text  x="578.78" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="774.1" y="1637" width="0.2" height="15.0" fill="rgb(227,36,40)" rx="2" ry="2" />
<text  x="777.14" y="1647.5" ></text>
</g>
<g >
<title>sys_sendmsg (473 samples, 7.99%)</title><rect x="246.4" y="1989" width="94.3" height="15.0" fill="rgb(237,198,41)" rx="2" ry="2" />
<text  x="249.44" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="546.7" y="1941" width="0.2" height="15.0" fill="rgb(253,163,4)" rx="2" ry="2" />
<text  x="549.67" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="342.1" y="1973" width="0.4" height="15.0" fill="rgb(232,77,6)" rx="2" ry="2" />
<text  x="345.13" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="423.1" y="2021" width="0.2" height="15.0" fill="rgb(247,74,40)" rx="2" ry="2" />
<text  x="426.07" y="2031.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (34 samples, 0.57%)</title><rect x="814.2" y="1717" width="6.8" height="15.0" fill="rgb(244,194,25)" rx="2" ry="2" />
<text  x="817.21" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="530.9" y="1909" width="0.2" height="15.0" fill="rgb(214,17,33)" rx="2" ry="2" />
<text  x="533.92" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (2 samples, 0.03%)</title><rect x="673.9" y="1989" width="0.4" height="15.0" fill="rgb(212,126,33)" rx="2" ry="2" />
<text  x="676.86" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.8" y="1925" width="0.2" height="15.0" fill="rgb(223,58,49)" rx="2" ry="2" />
<text  x="65.83" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1137.4" y="2037" width="0.2" height="15.0" fill="rgb(217,14,47)" rx="2" ry="2" />
<text  x="1140.37" y="2047.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (2 samples, 0.03%)</title><rect x="10.4" y="1829" width="0.4" height="15.0" fill="rgb(210,221,36)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="135.6" y="1941" width="0.4" height="15.0" fill="rgb(224,6,13)" rx="2" ry="2" />
<text  x="138.60" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="989.4" y="1749" width="0.2" height="15.0" fill="rgb(244,39,28)" rx="2" ry="2" />
<text  x="992.45" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="709.9" y="1925" width="0.2" height="15.0" fill="rgb(252,178,11)" rx="2" ry="2" />
<text  x="712.95" y="1935.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="669.9" y="1589" width="0.2" height="15.0" fill="rgb(239,97,40)" rx="2" ry="2" />
<text  x="672.87" y="1599.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="292.9" y="1397" width="0.4" height="15.0" fill="rgb(245,40,29)" rx="2" ry="2" />
<text  x="295.89" y="1407.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (8 samples, 0.14%)</title><rect x="1143.2" y="2021" width="1.5" height="15.0" fill="rgb(251,87,53)" rx="2" ry="2" />
<text  x="1146.15" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="615.5" y="2037" width="0.1" height="15.0" fill="rgb(224,180,49)" rx="2" ry="2" />
<text  x="618.45" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="513.6" y="1925" width="0.2" height="15.0" fill="rgb(212,44,26)" rx="2" ry="2" />
<text  x="516.58" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="657.9" y="1701" width="0.2" height="15.0" fill="rgb(241,159,38)" rx="2" ry="2" />
<text  x="660.91" y="1711.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="835.5" y="1893" width="0.4" height="15.0" fill="rgb(235,174,0)" rx="2" ry="2" />
<text  x="838.54" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="704.2" y="1781" width="0.2" height="15.0" fill="rgb(227,208,45)" rx="2" ry="2" />
<text  x="707.16" y="1791.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="571.4" y="1653" width="0.2" height="15.0" fill="rgb(214,111,8)" rx="2" ry="2" />
<text  x="574.39" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (3 samples, 0.05%)</title><rect x="620.6" y="2037" width="0.6" height="15.0" fill="rgb(243,97,48)" rx="2" ry="2" />
<text  x="623.63" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="348.7" y="2021" width="2.8" height="15.0" fill="rgb(228,52,0)" rx="2" ry="2" />
<text  x="351.71" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="580.0" y="1989" width="0.4" height="15.0" fill="rgb(221,76,21)" rx="2" ry="2" />
<text  x="582.96" y="1999.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="734.5" y="1637" width="0.2" height="15.0" fill="rgb(230,62,6)" rx="2" ry="2" />
<text  x="737.47" y="1647.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="250.6" y="1941" width="0.2" height="15.0" fill="rgb(251,89,45)" rx="2" ry="2" />
<text  x="253.63" y="1951.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="613.7" y="2005" width="0.2" height="15.0" fill="rgb(219,167,12)" rx="2" ry="2" />
<text  x="616.66" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.9" y="2005" width="0.2" height="15.0" fill="rgb(233,112,21)" rx="2" ry="2" />
<text  x="960.95" y="2015.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1146.1" y="1941" width="0.2" height="15.0" fill="rgb(220,161,37)" rx="2" ry="2" />
<text  x="1149.14" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="510.0" y="2037" width="0.2" height="15.0" fill="rgb(207,42,17)" rx="2" ry="2" />
<text  x="512.99" y="2047.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="99.9" y="1205" width="0.2" height="15.0" fill="rgb(250,46,53)" rx="2" ry="2" />
<text  x="102.91" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="903.3" y="1813" width="0.2" height="15.0" fill="rgb(236,26,52)" rx="2" ry="2" />
<text  x="906.32" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="126.0" y="1941" width="0.2" height="15.0" fill="rgb(208,37,31)" rx="2" ry="2" />
<text  x="129.03" y="1951.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="396.6" y="1621" width="0.2" height="15.0" fill="rgb(235,208,35)" rx="2" ry="2" />
<text  x="399.56" y="1631.5" ></text>
</g>
<g >
<title>security_file_free (5 samples, 0.08%)</title><rect x="742.8" y="1797" width="1.0" height="15.0" fill="rgb(229,216,22)" rx="2" ry="2" />
<text  x="745.84" y="1807.5" ></text>
</g>
<g >
<title>__xmknod (1 samples, 0.02%)</title><rect x="14.2" y="2053" width="0.2" height="15.0" fill="rgb(247,142,15)" rx="2" ry="2" />
<text  x="17.19" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1013.8" y="1845" width="0.2" height="15.0" fill="rgb(220,103,31)" rx="2" ry="2" />
<text  x="1016.77" y="1855.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1106.1" y="1893" width="0.4" height="15.0" fill="rgb(230,60,35)" rx="2" ry="2" />
<text  x="1109.07" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="342.3" y="1861" width="0.2" height="15.0" fill="rgb(236,14,17)" rx="2" ry="2" />
<text  x="345.33" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1181.0" y="2005" width="0.4" height="15.0" fill="rgb(248,30,11)" rx="2" ry="2" />
<text  x="1184.03" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="598.5" y="1925" width="2.0" height="15.0" fill="rgb(244,29,26)" rx="2" ry="2" />
<text  x="601.50" y="1935.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="482.3" y="1861" width="0.2" height="15.0" fill="rgb(206,121,19)" rx="2" ry="2" />
<text  x="485.28" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="894.2" y="1877" width="0.2" height="15.0" fill="rgb(207,215,46)" rx="2" ry="2" />
<text  x="897.15" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="573.4" y="1957" width="0.2" height="15.0" fill="rgb(250,209,29)" rx="2" ry="2" />
<text  x="576.39" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (27 samples, 0.46%)</title><rect x="57.6" y="1973" width="5.4" height="15.0" fill="rgb(228,15,49)" rx="2" ry="2" />
<text  x="60.65" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="341" width="14.0" height="15.0" fill="rgb(222,6,37)" rx="2" ry="2" />
<text  x="103.11" y="351.5" ></text>
</g>
<g >
<title>__d_alloc (19 samples, 0.32%)</title><rect x="404.9" y="1925" width="3.8" height="15.0" fill="rgb(205,140,23)" rx="2" ry="2" />
<text  x="407.93" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="654.5" y="1989" width="0.2" height="15.0" fill="rgb(244,47,3)" rx="2" ry="2" />
<text  x="657.52" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="116.1" y="1589" width="0.2" height="15.0" fill="rgb(207,24,9)" rx="2" ry="2" />
<text  x="119.06" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1829" width="0.2" height="15.0" fill="rgb(242,34,32)" rx="2" ry="2" />
<text  x="906.32" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="847.5" y="1893" width="0.2" height="15.0" fill="rgb(208,107,6)" rx="2" ry="2" />
<text  x="850.50" y="1903.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="13.8" y="1893" width="0.2" height="15.0" fill="rgb(247,67,13)" rx="2" ry="2" />
<text  x="16.79" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="751.2" y="1477" width="0.2" height="15.0" fill="rgb(239,108,22)" rx="2" ry="2" />
<text  x="754.21" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="624.6" y="2005" width="0.2" height="15.0" fill="rgb(209,121,39)" rx="2" ry="2" />
<text  x="627.62" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="897.3" y="1893" width="0.2" height="15.0" fill="rgb(252,64,33)" rx="2" ry="2" />
<text  x="900.34" y="1903.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="342.1" y="1909" width="0.2" height="15.0" fill="rgb(254,54,30)" rx="2" ry="2" />
<text  x="345.13" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="969.1" y="1861" width="0.2" height="15.0" fill="rgb(218,9,17)" rx="2" ry="2" />
<text  x="972.11" y="1871.5" ></text>
</g>
<g >
<title>sys_futex (11 samples, 0.19%)</title><rect x="15.6" y="2005" width="2.2" height="15.0" fill="rgb(215,3,16)" rx="2" ry="2" />
<text  x="18.58" y="2015.5" ></text>
</g>
<g >
<title>__libc_recv (5 samples, 0.08%)</title><rect x="54.1" y="1941" width="1.0" height="15.0" fill="rgb(234,12,37)" rx="2" ry="2" />
<text  x="57.06" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="221.7" y="1829" width="0.6" height="15.0" fill="rgb(249,177,29)" rx="2" ry="2" />
<text  x="224.72" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="673.1" y="1957" width="0.2" height="15.0" fill="rgb(228,221,37)" rx="2" ry="2" />
<text  x="676.06" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (65 samples, 1.10%)</title><rect x="600.9" y="2021" width="13.0" height="15.0" fill="rgb(222,55,0)" rx="2" ry="2" />
<text  x="603.90" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="704.4" y="1861" width="0.6" height="15.0" fill="rgb(231,120,48)" rx="2" ry="2" />
<text  x="707.36" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="461.5" y="1941" width="0.2" height="15.0" fill="rgb(251,130,22)" rx="2" ry="2" />
<text  x="464.55" y="1951.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (5 samples, 0.08%)</title><rect x="549.1" y="1973" width="1.0" height="15.0" fill="rgb(226,36,24)" rx="2" ry="2" />
<text  x="552.06" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="731.5" y="1685" width="0.2" height="15.0" fill="rgb(206,199,37)" rx="2" ry="2" />
<text  x="734.48" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13 samples, 0.22%)</title><rect x="477.9" y="1973" width="2.6" height="15.0" fill="rgb(205,69,13)" rx="2" ry="2" />
<text  x="480.89" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="252.4" y="1893" width="0.2" height="15.0" fill="rgb(227,98,34)" rx="2" ry="2" />
<text  x="255.42" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1113.0" y="1525" width="0.2" height="15.0" fill="rgb(241,212,0)" rx="2" ry="2" />
<text  x="1116.05" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="868.8" y="1957" width="0.2" height="15.0" fill="rgb(248,41,43)" rx="2" ry="2" />
<text  x="871.83" y="1967.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="377.0" y="1893" width="0.6" height="15.0" fill="rgb(241,62,41)" rx="2" ry="2" />
<text  x="380.02" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="99.3" y="1589" width="16.8" height="15.0" fill="rgb(224,212,35)" rx="2" ry="2" />
<text  x="102.31" y="1599.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="225.9" y="1877" width="0.2" height="15.0" fill="rgb(226,151,3)" rx="2" ry="2" />
<text  x="228.90" y="1887.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="594.3" y="1637" width="0.2" height="15.0" fill="rgb(207,174,40)" rx="2" ry="2" />
<text  x="597.32" y="1647.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="86.0" y="1957" width="0.2" height="15.0" fill="rgb(208,125,31)" rx="2" ry="2" />
<text  x="88.96" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1057.4" y="1909" width="0.8" height="15.0" fill="rgb(236,68,1)" rx="2" ry="2" />
<text  x="1060.43" y="1919.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (3 samples, 0.05%)</title><rect x="1136.6" y="2053" width="0.6" height="15.0" fill="rgb(207,21,15)" rx="2" ry="2" />
<text  x="1139.57" y="2063.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (4 samples, 0.07%)</title><rect x="223.3" y="1813" width="0.8" height="15.0" fill="rgb(248,54,24)" rx="2" ry="2" />
<text  x="226.31" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1057.4" y="1973" width="0.8" height="15.0" fill="rgb(223,133,34)" rx="2" ry="2" />
<text  x="1060.43" y="1983.5" ></text>
</g>
<g >
<title>destroy_inode (31 samples, 0.52%)</title><rect x="731.9" y="1701" width="6.2" height="15.0" fill="rgb(212,205,3)" rx="2" ry="2" />
<text  x="734.88" y="1711.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="972.5" y="1957" width="0.2" height="15.0" fill="rgb(251,198,34)" rx="2" ry="2" />
<text  x="975.50" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="975.7" y="2005" width="0.2" height="15.0" fill="rgb(235,80,16)" rx="2" ry="2" />
<text  x="978.69" y="2015.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="610.7" y="1685" width="0.8" height="15.0" fill="rgb(228,0,45)" rx="2" ry="2" />
<text  x="613.67" y="1695.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="530.9" y="1765" width="0.2" height="15.0" fill="rgb(212,183,50)" rx="2" ry="2" />
<text  x="533.92" y="1775.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="683.0" y="1813" width="0.6" height="15.0" fill="rgb(207,171,52)" rx="2" ry="2" />
<text  x="686.03" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1029" width="14.6" height="15.0" fill="rgb(244,114,7)" rx="2" ry="2" />
<text  x="103.11" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="645.4" y="1941" width="0.2" height="15.0" fill="rgb(226,223,9)" rx="2" ry="2" />
<text  x="648.35" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="154.1" y="1925" width="0.2" height="15.0" fill="rgb(213,202,23)" rx="2" ry="2" />
<text  x="157.14" y="1935.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.02%)</title><rect x="743.0" y="1781" width="0.2" height="15.0" fill="rgb(248,182,45)" rx="2" ry="2" />
<text  x="746.04" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="889.6" y="1925" width="0.4" height="15.0" fill="rgb(206,40,25)" rx="2" ry="2" />
<text  x="892.57" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="138.6" y="1813" width="0.2" height="15.0" fill="rgb(252,110,26)" rx="2" ry="2" />
<text  x="141.59" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (8 samples, 0.14%)</title><rect x="923.7" y="1957" width="1.6" height="15.0" fill="rgb(219,116,7)" rx="2" ry="2" />
<text  x="926.66" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="880.4" y="1893" width="0.8" height="15.0" fill="rgb(215,85,24)" rx="2" ry="2" />
<text  x="883.40" y="1903.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="339.7" y="1909" width="1.0" height="15.0" fill="rgb(245,103,39)" rx="2" ry="2" />
<text  x="342.74" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="405.5" y="1797" width="0.2" height="15.0" fill="rgb(238,170,23)" rx="2" ry="2" />
<text  x="408.53" y="1807.5" ></text>
</g>
<g >
<title>event_base_loop@plt (1 samples, 0.02%)</title><rect x="136.2" y="1941" width="0.2" height="15.0" fill="rgb(252,178,34)" rx="2" ry="2" />
<text  x="139.19" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1128.8" y="1909" width="0.2" height="15.0" fill="rgb(246,45,21)" rx="2" ry="2" />
<text  x="1131.80" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="75.0" y="1957" width="0.2" height="15.0" fill="rgb(231,57,32)" rx="2" ry="2" />
<text  x="77.99" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (4 samples, 0.07%)</title><rect x="890.0" y="1925" width="0.8" height="15.0" fill="rgb(243,36,48)" rx="2" ry="2" />
<text  x="892.97" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="704.2" y="1861" width="0.2" height="15.0" fill="rgb(212,172,38)" rx="2" ry="2" />
<text  x="707.16" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="76.8" y="1957" width="0.8" height="15.0" fill="rgb(216,144,12)" rx="2" ry="2" />
<text  x="79.78" y="1967.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="797.7" y="1509" width="0.4" height="15.0" fill="rgb(231,29,37)" rx="2" ry="2" />
<text  x="800.66" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="138.2" y="1909" width="0.6" height="15.0" fill="rgb(206,191,53)" rx="2" ry="2" />
<text  x="141.19" y="1919.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (52 samples, 0.88%)</title><rect x="464.7" y="1957" width="10.4" height="15.0" fill="rgb(253,33,38)" rx="2" ry="2" />
<text  x="467.74" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="764.4" y="1685" width="0.2" height="15.0" fill="rgb(246,78,53)" rx="2" ry="2" />
<text  x="767.37" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (102 samples, 1.72%)</title><rect x="653.9" y="2005" width="20.4" height="15.0" fill="rgb(212,11,8)" rx="2" ry="2" />
<text  x="656.93" y="2015.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="670.1" y="1925" width="3.0" height="15.0" fill="rgb(249,185,46)" rx="2" ry="2" />
<text  x="673.07" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="409.1" y="1525" width="0.2" height="15.0" fill="rgb(239,72,7)" rx="2" ry="2" />
<text  x="412.11" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="556.8" y="1797" width="0.2" height="15.0" fill="rgb(253,225,34)" rx="2" ry="2" />
<text  x="559.84" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="904.5" y="1925" width="0.2" height="15.0" fill="rgb(239,136,54)" rx="2" ry="2" />
<text  x="907.52" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (8 samples, 0.14%)</title><rect x="527.9" y="1973" width="1.6" height="15.0" fill="rgb(228,121,16)" rx="2" ry="2" />
<text  x="530.93" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="751.2" y="1509" width="0.2" height="15.0" fill="rgb(211,182,29)" rx="2" ry="2" />
<text  x="754.21" y="1519.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="560.6" y="1909" width="0.2" height="15.0" fill="rgb(207,100,0)" rx="2" ry="2" />
<text  x="563.63" y="1919.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="291.5" y="1413" width="0.2" height="15.0" fill="rgb(254,25,2)" rx="2" ry="2" />
<text  x="294.49" y="1423.5" ></text>
</g>
<g >
<title>schedule (18 samples, 0.30%)</title><rect x="10.4" y="1941" width="3.6" height="15.0" fill="rgb(211,42,21)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (7 samples, 0.12%)</title><rect x="704.4" y="1925" width="1.4" height="15.0" fill="rgb(241,220,5)" rx="2" ry="2" />
<text  x="707.36" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="658.1" y="1717" width="0.2" height="15.0" fill="rgb(250,34,2)" rx="2" ry="2" />
<text  x="661.11" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="571.4" y="1685" width="0.2" height="15.0" fill="rgb(227,122,3)" rx="2" ry="2" />
<text  x="574.39" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="894.2" y="1845" width="0.2" height="15.0" fill="rgb(236,133,43)" rx="2" ry="2" />
<text  x="897.15" y="1855.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="99.3" y="1509" width="0.2" height="15.0" fill="rgb(211,186,22)" rx="2" ry="2" />
<text  x="102.31" y="1519.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="52.3" y="1893" width="0.8" height="15.0" fill="rgb(225,65,17)" rx="2" ry="2" />
<text  x="55.26" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11 samples, 0.19%)</title><rect x="327.6" y="1733" width="2.2" height="15.0" fill="rgb(214,73,11)" rx="2" ry="2" />
<text  x="330.58" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.14%)</title><rect x="145.8" y="1877" width="1.6" height="15.0" fill="rgb(237,48,19)" rx="2" ry="2" />
<text  x="148.76" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (8 samples, 0.14%)</title><rect x="80.6" y="1941" width="1.6" height="15.0" fill="rgb(216,191,5)" rx="2" ry="2" />
<text  x="83.57" y="1951.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (7 samples, 0.12%)</title><rect x="958.1" y="2005" width="1.4" height="15.0" fill="rgb(215,106,21)" rx="2" ry="2" />
<text  x="961.15" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="618.0" y="2005" width="0.4" height="15.0" fill="rgb(215,37,32)" rx="2" ry="2" />
<text  x="621.04" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="540.7" y="1957" width="0.2" height="15.0" fill="rgb(234,205,52)" rx="2" ry="2" />
<text  x="543.69" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="546.5" y="1845" width="0.2" height="15.0" fill="rgb(233,202,41)" rx="2" ry="2" />
<text  x="549.47" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="541.5" y="1877" width="0.2" height="15.0" fill="rgb(234,151,16)" rx="2" ry="2" />
<text  x="544.49" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="830.6" y="1861" width="0.2" height="15.0" fill="rgb(229,64,2)" rx="2" ry="2" />
<text  x="833.56" y="1871.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="13.8" y="1877" width="0.2" height="15.0" fill="rgb(246,167,8)" rx="2" ry="2" />
<text  x="16.79" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="616.2" y="2037" width="0.2" height="15.0" fill="rgb(239,36,15)" rx="2" ry="2" />
<text  x="619.25" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="908.1" y="1973" width="0.2" height="15.0" fill="rgb(206,96,42)" rx="2" ry="2" />
<text  x="911.11" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="594.3" y="1829" width="0.2" height="15.0" fill="rgb(212,61,48)" rx="2" ry="2" />
<text  x="597.32" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="248.8" y="1909" width="0.2" height="15.0" fill="rgb(216,61,2)" rx="2" ry="2" />
<text  x="251.83" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (17 samples, 0.29%)</title><rect x="10.4" y="1909" width="3.4" height="15.0" fill="rgb(234,149,8)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="547.7" y="1941" width="0.2" height="15.0" fill="rgb(248,47,21)" rx="2" ry="2" />
<text  x="550.67" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="286.5" y="1669" width="0.2" height="15.0" fill="rgb(210,63,47)" rx="2" ry="2" />
<text  x="289.51" y="1679.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="505.8" y="1797" width="0.2" height="15.0" fill="rgb(230,114,38)" rx="2" ry="2" />
<text  x="508.80" y="1807.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="878.4" y="1637" width="0.2" height="15.0" fill="rgb(208,103,52)" rx="2" ry="2" />
<text  x="881.40" y="1647.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (1 samples, 0.02%)</title><rect x="600.5" y="1973" width="0.2" height="15.0" fill="rgb(238,36,2)" rx="2" ry="2" />
<text  x="603.50" y="1983.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="903.1" y="1925" width="0.2" height="15.0" fill="rgb(217,199,53)" rx="2" ry="2" />
<text  x="906.12" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="228.1" y="1893" width="0.2" height="15.0" fill="rgb(236,0,28)" rx="2" ry="2" />
<text  x="231.10" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (3 samples, 0.05%)</title><rect x="859.9" y="1989" width="0.6" height="15.0" fill="rgb(222,63,30)" rx="2" ry="2" />
<text  x="862.86" y="1999.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="724.9" y="1797" width="0.2" height="15.0" fill="rgb(247,212,40)" rx="2" ry="2" />
<text  x="727.90" y="1807.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="413.1" y="1941" width="0.2" height="15.0" fill="rgb(231,183,14)" rx="2" ry="2" />
<text  x="416.10" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.8" y="1893" width="0.2" height="15.0" fill="rgb(219,74,50)" rx="2" ry="2" />
<text  x="65.83" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1004.6" y="1941" width="0.2" height="15.0" fill="rgb(244,136,31)" rx="2" ry="2" />
<text  x="1007.60" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="291.5" y="1477" width="0.2" height="15.0" fill="rgb(253,37,43)" rx="2" ry="2" />
<text  x="294.49" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="971.5" y="1941" width="0.2" height="15.0" fill="rgb(253,163,26)" rx="2" ry="2" />
<text  x="974.50" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="514.0" y="1989" width="0.2" height="15.0" fill="rgb(211,153,22)" rx="2" ry="2" />
<text  x="516.98" y="1999.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="386.8" y="1941" width="0.4" height="15.0" fill="rgb(237,222,22)" rx="2" ry="2" />
<text  x="389.79" y="1951.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="161.9" y="1989" width="0.2" height="15.0" fill="rgb(214,228,5)" rx="2" ry="2" />
<text  x="164.91" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (1 samples, 0.02%)</title><rect x="901.3" y="2005" width="0.2" height="15.0" fill="rgb(232,198,13)" rx="2" ry="2" />
<text  x="904.33" y="2015.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="689.8" y="1621" width="0.2" height="15.0" fill="rgb(234,171,28)" rx="2" ry="2" />
<text  x="692.81" y="1631.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="619.2" y="1909" width="0.2" height="15.0" fill="rgb(228,155,38)" rx="2" ry="2" />
<text  x="622.24" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (2 samples, 0.03%)</title><rect x="645.2" y="2021" width="0.4" height="15.0" fill="rgb(223,99,13)" rx="2" ry="2" />
<text  x="648.15" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1178.8" y="2021" width="0.2" height="15.0" fill="rgb(208,161,15)" rx="2" ry="2" />
<text  x="1181.84" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="704.2" y="1845" width="0.2" height="15.0" fill="rgb(232,106,30)" rx="2" ry="2" />
<text  x="707.16" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="499.8" y="1541" width="0.2" height="15.0" fill="rgb(239,90,12)" rx="2" ry="2" />
<text  x="502.82" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="92.3" y="1813" width="0.2" height="15.0" fill="rgb(252,113,23)" rx="2" ry="2" />
<text  x="95.33" y="1823.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="136.0" y="1941" width="0.2" height="15.0" fill="rgb(237,28,11)" rx="2" ry="2" />
<text  x="138.99" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_fin (1 samples, 0.02%)</title><rect x="826.0" y="1749" width="0.2" height="15.0" fill="rgb(223,39,12)" rx="2" ry="2" />
<text  x="828.97" y="1759.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="154.1" y="1685" width="0.2" height="15.0" fill="rgb(216,53,45)" rx="2" ry="2" />
<text  x="157.14" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="594.3" y="1781" width="0.2" height="15.0" fill="rgb(254,66,45)" rx="2" ry="2" />
<text  x="597.32" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="657.9" y="1749" width="0.2" height="15.0" fill="rgb(238,61,38)" rx="2" ry="2" />
<text  x="660.91" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="737.9" y="1573" width="0.2" height="15.0" fill="rgb(209,10,49)" rx="2" ry="2" />
<text  x="740.86" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="830.6" y="1781" width="0.2" height="15.0" fill="rgb(246,41,44)" rx="2" ry="2" />
<text  x="833.56" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="513.4" y="1941" width="0.4" height="15.0" fill="rgb(231,154,38)" rx="2" ry="2" />
<text  x="516.38" y="1951.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (3 samples, 0.05%)</title><rect x="684.6" y="1909" width="0.6" height="15.0" fill="rgb(249,23,3)" rx="2" ry="2" />
<text  x="687.63" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="847.5" y="1685" width="0.2" height="15.0" fill="rgb(205,157,4)" rx="2" ry="2" />
<text  x="850.50" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="577.8" y="2021" width="0.2" height="15.0" fill="rgb(205,180,28)" rx="2" ry="2" />
<text  x="580.77" y="2031.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="342.3" y="1749" width="0.2" height="15.0" fill="rgb(217,107,14)" rx="2" ry="2" />
<text  x="345.33" y="1759.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (3 samples, 0.05%)</title><rect x="520.2" y="1925" width="0.6" height="15.0" fill="rgb(247,171,5)" rx="2" ry="2" />
<text  x="523.16" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="971.5" y="1973" width="0.2" height="15.0" fill="rgb(230,182,27)" rx="2" ry="2" />
<text  x="974.50" y="1983.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="848.3" y="1909" width="0.2" height="15.0" fill="rgb(246,90,54)" rx="2" ry="2" />
<text  x="851.30" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="610.5" y="1733" width="1.0" height="15.0" fill="rgb(252,134,42)" rx="2" ry="2" />
<text  x="613.47" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (5 samples, 0.08%)</title><rect x="56.6" y="1973" width="1.0" height="15.0" fill="rgb(250,192,27)" rx="2" ry="2" />
<text  x="59.65" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="455.6" y="1973" width="0.8" height="15.0" fill="rgb(222,12,47)" rx="2" ry="2" />
<text  x="458.57" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="142.8" y="1877" width="0.2" height="15.0" fill="rgb(254,226,21)" rx="2" ry="2" />
<text  x="145.77" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="612.5" y="1957" width="0.2" height="15.0" fill="rgb(222,92,53)" rx="2" ry="2" />
<text  x="615.46" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="894.2" y="1669" width="0.2" height="15.0" fill="rgb(251,11,20)" rx="2" ry="2" />
<text  x="897.15" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1141.8" y="1925" width="0.2" height="15.0" fill="rgb(233,187,17)" rx="2" ry="2" />
<text  x="1144.76" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="957.7" y="1829" width="0.2" height="15.0" fill="rgb(222,21,32)" rx="2" ry="2" />
<text  x="960.75" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="947.6" y="2005" width="0.2" height="15.0" fill="rgb(254,127,4)" rx="2" ry="2" />
<text  x="950.58" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="547.9" y="1973" width="0.4" height="15.0" fill="rgb(240,203,14)" rx="2" ry="2" />
<text  x="550.87" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="227.3" y="1637" width="0.2" height="15.0" fill="rgb(250,2,50)" rx="2" ry="2" />
<text  x="230.30" y="1647.5" ></text>
</g>
<g >
<title>__sched_text_start (11 samples, 0.19%)</title><rect x="15.6" y="1925" width="2.2" height="15.0" fill="rgb(249,165,0)" rx="2" ry="2" />
<text  x="18.58" y="1935.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="891.4" y="1797" width="0.2" height="15.0" fill="rgb(221,142,6)" rx="2" ry="2" />
<text  x="894.36" y="1807.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="832.2" y="1541" width="0.2" height="15.0" fill="rgb(242,213,29)" rx="2" ry="2" />
<text  x="835.15" y="1551.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="669.7" y="1717" width="0.4" height="15.0" fill="rgb(239,28,20)" rx="2" ry="2" />
<text  x="672.68" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="248.8" y="1717" width="0.2" height="15.0" fill="rgb(247,76,38)" rx="2" ry="2" />
<text  x="251.83" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (19 samples, 0.32%)</title><rect x="998.4" y="1989" width="3.8" height="15.0" fill="rgb(239,116,5)" rx="2" ry="2" />
<text  x="1001.42" y="1999.5" ></text>
</g>
<g >
<title>move_addr_to_user (2 samples, 0.03%)</title><rect x="704.6" y="1813" width="0.4" height="15.0" fill="rgb(208,136,18)" rx="2" ry="2" />
<text  x="707.56" y="1823.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (5 samples, 0.08%)</title><rect x="1009.6" y="1989" width="1.0" height="15.0" fill="rgb(221,179,43)" rx="2" ry="2" />
<text  x="1012.58" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="29.5" y="1941" width="0.2" height="15.0" fill="rgb(228,97,29)" rx="2" ry="2" />
<text  x="32.54" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="747.6" y="1749" width="0.2" height="15.0" fill="rgb(250,185,54)" rx="2" ry="2" />
<text  x="750.62" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="877.6" y="1893" width="0.2" height="15.0" fill="rgb(237,152,53)" rx="2" ry="2" />
<text  x="880.61" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="30.9" y="1989" width="1.0" height="15.0" fill="rgb(211,138,19)" rx="2" ry="2" />
<text  x="33.93" y="1999.5" ></text>
</g>
<g >
<title>__fdget_raw (9 samples, 0.15%)</title><rect x="558.2" y="1925" width="1.8" height="15.0" fill="rgb(209,178,7)" rx="2" ry="2" />
<text  x="561.23" y="1935.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="236.7" y="1989" width="0.8" height="15.0" fill="rgb(223,32,20)" rx="2" ry="2" />
<text  x="239.67" y="1999.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="984.7" y="1957" width="1.8" height="15.0" fill="rgb(227,122,44)" rx="2" ry="2" />
<text  x="987.66" y="1967.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1063.8" y="1941" width="0.2" height="15.0" fill="rgb(235,139,19)" rx="2" ry="2" />
<text  x="1066.81" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="917.7" y="2037" width="0.4" height="15.0" fill="rgb(227,193,2)" rx="2" ry="2" />
<text  x="920.68" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="645.4" y="1861" width="0.2" height="15.0" fill="rgb(233,127,42)" rx="2" ry="2" />
<text  x="648.35" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1733" width="0.2" height="15.0" fill="rgb(246,85,31)" rx="2" ry="2" />
<text  x="408.53" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (518 samples, 8.75%)</title><rect x="237.7" y="2021" width="103.2" height="15.0" fill="rgb(220,96,45)" rx="2" ry="2" />
<text  x="240.67" y="2031.5" >entry_SYSCAL..</text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="224.9" y="1893" width="0.2" height="15.0" fill="rgb(207,42,40)" rx="2" ry="2" />
<text  x="227.91" y="1903.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="402.3" y="1861" width="0.4" height="15.0" fill="rgb(226,54,24)" rx="2" ry="2" />
<text  x="405.34" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="893.2" y="1941" width="0.2" height="15.0" fill="rgb(212,5,30)" rx="2" ry="2" />
<text  x="896.16" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1139.4" y="1893" width="0.2" height="15.0" fill="rgb(246,166,10)" rx="2" ry="2" />
<text  x="1142.36" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="29.5" y="1909" width="0.2" height="15.0" fill="rgb(237,186,16)" rx="2" ry="2" />
<text  x="32.54" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="737.9" y="1637" width="0.2" height="15.0" fill="rgb(254,208,13)" rx="2" ry="2" />
<text  x="740.86" y="1647.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="683.8" y="1509" width="0.2" height="15.0" fill="rgb(254,122,8)" rx="2" ry="2" />
<text  x="686.83" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="597" width="14.2" height="15.0" fill="rgb(226,179,37)" rx="2" ry="2" />
<text  x="103.11" y="607.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1013.8" y="1893" width="0.2" height="15.0" fill="rgb(205,119,48)" rx="2" ry="2" />
<text  x="1016.77" y="1903.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="291.5" y="1333" width="0.2" height="15.0" fill="rgb(222,99,46)" rx="2" ry="2" />
<text  x="294.49" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="935.2" y="1925" width="0.2" height="15.0" fill="rgb(226,223,20)" rx="2" ry="2" />
<text  x="938.22" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="290.3" y="1605" width="0.2" height="15.0" fill="rgb(231,202,25)" rx="2" ry="2" />
<text  x="293.30" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="396.4" y="1621" width="0.2" height="15.0" fill="rgb(247,109,38)" rx="2" ry="2" />
<text  x="399.36" y="1631.5" ></text>
</g>
<g >
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="1096.5" y="1909" width="0.6" height="15.0" fill="rgb(205,158,7)" rx="2" ry="2" />
<text  x="1099.50" y="1919.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="335.8" y="1845" width="0.2" height="15.0" fill="rgb(208,14,19)" rx="2" ry="2" />
<text  x="338.75" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="920.3" y="2021" width="1.0" height="15.0" fill="rgb(220,183,17)" rx="2" ry="2" />
<text  x="923.27" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="878.4" y="1813" width="0.2" height="15.0" fill="rgb(216,18,26)" rx="2" ry="2" />
<text  x="881.40" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="972.3" y="2021" width="0.6" height="15.0" fill="rgb(245,170,9)" rx="2" ry="2" />
<text  x="975.30" y="2031.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="785.1" y="1541" width="0.2" height="15.0" fill="rgb(209,87,11)" rx="2" ry="2" />
<text  x="788.10" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1182.0" y="1861" width="0.2" height="15.0" fill="rgb(250,77,38)" rx="2" ry="2" />
<text  x="1185.03" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="409.1" y="1445" width="0.2" height="15.0" fill="rgb(237,89,3)" rx="2" ry="2" />
<text  x="412.11" y="1455.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (6 samples, 0.10%)</title><rect x="1121.2" y="1925" width="1.2" height="15.0" fill="rgb(252,30,0)" rx="2" ry="2" />
<text  x="1124.22" y="1935.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="692.2" y="1909" width="1.2" height="15.0" fill="rgb(251,208,15)" rx="2" ry="2" />
<text  x="695.20" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="689.8" y="1733" width="0.2" height="15.0" fill="rgb(213,108,30)" rx="2" ry="2" />
<text  x="692.81" y="1743.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="361.9" y="1957" width="0.2" height="15.0" fill="rgb(226,77,26)" rx="2" ry="2" />
<text  x="364.87" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="969.1" y="1749" width="0.2" height="15.0" fill="rgb(233,143,24)" rx="2" ry="2" />
<text  x="972.11" y="1759.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1062.8" y="1957" width="0.4" height="15.0" fill="rgb(253,89,37)" rx="2" ry="2" />
<text  x="1065.81" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1176.0" y="1989" width="0.2" height="15.0" fill="rgb(232,156,50)" rx="2" ry="2" />
<text  x="1179.04" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (9 samples, 0.15%)</title><rect x="785.3" y="1541" width="1.8" height="15.0" fill="rgb(224,65,22)" rx="2" ry="2" />
<text  x="788.30" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="619.6" y="2021" width="0.6" height="15.0" fill="rgb(211,156,23)" rx="2" ry="2" />
<text  x="622.64" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="320.4" y="1717" width="0.2" height="15.0" fill="rgb(242,207,46)" rx="2" ry="2" />
<text  x="323.40" y="1727.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="330.4" y="1829" width="0.4" height="15.0" fill="rgb(253,140,47)" rx="2" ry="2" />
<text  x="333.37" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1173.9" y="1893" width="0.2" height="15.0" fill="rgb(217,121,11)" rx="2" ry="2" />
<text  x="1176.85" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (1 samples, 0.02%)</title><rect x="164.5" y="2005" width="0.2" height="15.0" fill="rgb(237,128,29)" rx="2" ry="2" />
<text  x="167.50" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="669.9" y="1477" width="0.2" height="15.0" fill="rgb(236,11,15)" rx="2" ry="2" />
<text  x="672.87" y="1487.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="669.3" y="1861" width="0.2" height="15.0" fill="rgb(211,151,1)" rx="2" ry="2" />
<text  x="672.28" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="894.2" y="1765" width="0.2" height="15.0" fill="rgb(236,60,24)" rx="2" ry="2" />
<text  x="897.15" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="853" width="14.4" height="15.0" fill="rgb(239,167,52)" rx="2" ry="2" />
<text  x="103.11" y="863.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="948.4" y="1989" width="0.2" height="15.0" fill="rgb(226,127,22)" rx="2" ry="2" />
<text  x="951.38" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="276.7" y="1845" width="0.2" height="15.0" fill="rgb(235,123,38)" rx="2" ry="2" />
<text  x="279.74" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="248.8" y="1765" width="0.2" height="15.0" fill="rgb(232,203,34)" rx="2" ry="2" />
<text  x="251.83" y="1775.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (14 samples, 0.24%)</title><rect x="270.2" y="1829" width="2.8" height="15.0" fill="rgb(225,74,7)" rx="2" ry="2" />
<text  x="273.16" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="113.9" y="37" width="0.2" height="15.0" fill="rgb(248,158,46)" rx="2" ry="2" />
<text  x="116.87" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1173.9" y="1685" width="0.2" height="15.0" fill="rgb(208,119,3)" rx="2" ry="2" />
<text  x="1176.85" y="1695.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="509.8" y="2037" width="0.2" height="15.0" fill="rgb(205,228,11)" rx="2" ry="2" />
<text  x="512.79" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="989.4" y="1733" width="0.2" height="15.0" fill="rgb(228,216,18)" rx="2" ry="2" />
<text  x="992.45" y="1743.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="229.5" y="1701" width="0.2" height="15.0" fill="rgb(226,94,3)" rx="2" ry="2" />
<text  x="232.49" y="1711.5" ></text>
</g>
<g >
<title>migrate_task_to (5 samples, 0.08%)</title><rect x="93.5" y="1909" width="1.0" height="15.0" fill="rgb(249,106,30)" rx="2" ry="2" />
<text  x="96.53" y="1919.5" ></text>
</g>
<g >
<title>ip_output (144 samples, 2.43%)</title><rect x="287.3" y="1781" width="28.7" height="15.0" fill="rgb(233,131,4)" rx="2" ry="2" />
<text  x="290.31" y="1791.5" >ip..</text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1000.6" y="1941" width="0.2" height="15.0" fill="rgb(230,121,53)" rx="2" ry="2" />
<text  x="1003.61" y="1951.5" ></text>
</g>
<g >
<title>__close_fd (1 samples, 0.02%)</title><rect x="722.1" y="1861" width="0.2" height="15.0" fill="rgb(241,67,10)" rx="2" ry="2" />
<text  x="725.11" y="1871.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="549.9" y="1957" width="0.2" height="15.0" fill="rgb(213,51,45)" rx="2" ry="2" />
<text  x="552.86" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="93.7" y="1845" width="0.8" height="15.0" fill="rgb(225,70,8)" rx="2" ry="2" />
<text  x="96.73" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="138.6" y="1669" width="0.2" height="15.0" fill="rgb(212,15,14)" rx="2" ry="2" />
<text  x="141.59" y="1679.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1148.3" y="2005" width="0.2" height="15.0" fill="rgb(235,143,52)" rx="2" ry="2" />
<text  x="1151.33" y="2015.5" ></text>
</g>
<g >
<title>carbon-global-s (21 samples, 0.35%)</title><rect x="10.0" y="2069" width="4.2" height="15.0" fill="rgb(252,27,53)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="225.3" y="1877" width="0.2" height="15.0" fill="rgb(206,200,5)" rx="2" ry="2" />
<text  x="228.31" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (5 samples, 0.08%)</title><rect x="396.8" y="1893" width="1.0" height="15.0" fill="rgb(224,181,21)" rx="2" ry="2" />
<text  x="399.75" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="657.9" y="1893" width="0.2" height="15.0" fill="rgb(240,36,39)" rx="2" ry="2" />
<text  x="660.91" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (5 samples, 0.08%)</title><rect x="910.5" y="1973" width="1.0" height="15.0" fill="rgb(248,11,51)" rx="2" ry="2" />
<text  x="913.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1285" width="15.4" height="15.0" fill="rgb(244,220,40)" rx="2" ry="2" />
<text  x="102.71" y="1295.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="499.8" y="1605" width="0.2" height="15.0" fill="rgb(249,106,50)" rx="2" ry="2" />
<text  x="502.82" y="1615.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="764.0" y="1685" width="0.2" height="15.0" fill="rgb(254,157,49)" rx="2" ry="2" />
<text  x="766.97" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1182.0" y="1749" width="0.2" height="15.0" fill="rgb(246,69,47)" rx="2" ry="2" />
<text  x="1185.03" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="183.8" y="1909" width="0.4" height="15.0" fill="rgb(226,3,47)" rx="2" ry="2" />
<text  x="186.84" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="117.7" y="1781" width="0.2" height="15.0" fill="rgb(219,156,42)" rx="2" ry="2" />
<text  x="120.65" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="153.1" y="1797" width="0.2" height="15.0" fill="rgb(210,186,24)" rx="2" ry="2" />
<text  x="156.14" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="73.8" y="1925" width="0.2" height="15.0" fill="rgb(251,214,3)" rx="2" ry="2" />
<text  x="76.79" y="1935.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="768.2" y="1701" width="0.2" height="15.0" fill="rgb(250,213,50)" rx="2" ry="2" />
<text  x="771.16" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1139.4" y="2021" width="0.2" height="15.0" fill="rgb(214,75,24)" rx="2" ry="2" />
<text  x="1142.36" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="99.3" y="1541" width="16.6" height="15.0" fill="rgb(240,81,8)" rx="2" ry="2" />
<text  x="102.31" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="104.3" y="37" width="0.4" height="15.0" fill="rgb(230,162,32)" rx="2" ry="2" />
<text  x="107.30" y="47.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="32.7" y="1973" width="0.2" height="15.0" fill="rgb(254,58,52)" rx="2" ry="2" />
<text  x="35.73" y="1983.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="14.6" y="1941" width="0.8" height="15.0" fill="rgb(242,182,14)" rx="2" ry="2" />
<text  x="17.59" y="1951.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="456.6" y="1813" width="0.2" height="15.0" fill="rgb(233,36,9)" rx="2" ry="2" />
<text  x="459.56" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="658.1" y="1925" width="0.2" height="15.0" fill="rgb(232,7,48)" rx="2" ry="2" />
<text  x="661.11" y="1935.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (4 samples, 0.07%)</title><rect x="400.3" y="1909" width="0.8" height="15.0" fill="rgb(236,140,23)" rx="2" ry="2" />
<text  x="403.34" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="704.2" y="1813" width="0.2" height="15.0" fill="rgb(249,83,9)" rx="2" ry="2" />
<text  x="707.16" y="1823.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1188.6" y="1877" width="0.6" height="15.0" fill="rgb(222,75,49)" rx="2" ry="2" />
<text  x="1191.60" y="1887.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="741.6" y="1797" width="0.2" height="15.0" fill="rgb(224,52,25)" rx="2" ry="2" />
<text  x="744.64" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="903.3" y="1893" width="0.2" height="15.0" fill="rgb(230,58,20)" rx="2" ry="2" />
<text  x="906.32" y="1903.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="69.0" y="1845" width="0.6" height="15.0" fill="rgb(209,132,40)" rx="2" ry="2" />
<text  x="72.01" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1013.8" y="1925" width="0.2" height="15.0" fill="rgb(245,227,52)" rx="2" ry="2" />
<text  x="1016.77" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="694.0" y="1813" width="0.4" height="15.0" fill="rgb(223,164,26)" rx="2" ry="2" />
<text  x="697.00" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="396.4" y="1765" width="0.2" height="15.0" fill="rgb(236,151,46)" rx="2" ry="2" />
<text  x="399.36" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="691.4" y="1637" width="0.2" height="15.0" fill="rgb(249,154,4)" rx="2" ry="2" />
<text  x="694.41" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="229.5" y="1829" width="0.2" height="15.0" fill="rgb(227,120,18)" rx="2" ry="2" />
<text  x="232.49" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="526.9" y="2005" width="0.2" height="15.0" fill="rgb(231,194,2)" rx="2" ry="2" />
<text  x="529.94" y="2015.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="286.9" y="1781" width="0.4" height="15.0" fill="rgb(211,195,42)" rx="2" ry="2" />
<text  x="289.91" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="33.5" y="1989" width="0.2" height="15.0" fill="rgb(218,20,35)" rx="2" ry="2" />
<text  x="36.52" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="227.3" y="1573" width="0.2" height="15.0" fill="rgb(218,163,8)" rx="2" ry="2" />
<text  x="230.30" y="1583.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="236.7" y="1909" width="0.8" height="15.0" fill="rgb(205,53,20)" rx="2" ry="2" />
<text  x="239.67" y="1919.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (5 samples, 0.08%)</title><rect x="567.2" y="1973" width="1.0" height="15.0" fill="rgb(228,178,5)" rx="2" ry="2" />
<text  x="570.21" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1039.7" y="2021" width="0.2" height="15.0" fill="rgb(212,9,38)" rx="2" ry="2" />
<text  x="1042.68" y="2031.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="920.7" y="1845" width="0.2" height="15.0" fill="rgb(223,106,51)" rx="2" ry="2" />
<text  x="923.67" y="1855.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="682.8" y="1941" width="0.8" height="15.0" fill="rgb(230,158,4)" rx="2" ry="2" />
<text  x="685.83" y="1951.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="59.2" y="1909" width="0.2" height="15.0" fill="rgb(226,80,45)" rx="2" ry="2" />
<text  x="62.24" y="1919.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="849.3" y="1893" width="0.2" height="15.0" fill="rgb(208,163,28)" rx="2" ry="2" />
<text  x="852.30" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="166.5" y="2005" width="0.2" height="15.0" fill="rgb(234,216,25)" rx="2" ry="2" />
<text  x="169.50" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="78.0" y="1925" width="0.6" height="15.0" fill="rgb(225,20,7)" rx="2" ry="2" />
<text  x="80.98" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="651.1" y="2037" width="0.6" height="15.0" fill="rgb(237,198,27)" rx="2" ry="2" />
<text  x="654.14" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1039.7" y="2005" width="0.2" height="15.0" fill="rgb(245,63,49)" rx="2" ry="2" />
<text  x="1042.68" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="298.1" y="1685" width="0.2" height="15.0" fill="rgb(219,190,6)" rx="2" ry="2" />
<text  x="301.07" y="1695.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="993.8" y="1989" width="0.2" height="15.0" fill="rgb(252,202,11)" rx="2" ry="2" />
<text  x="996.83" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="830.6" y="1829" width="0.2" height="15.0" fill="rgb(210,30,26)" rx="2" ry="2" />
<text  x="833.56" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="610.1" y="1749" width="0.2" height="15.0" fill="rgb(242,157,6)" rx="2" ry="2" />
<text  x="613.07" y="1759.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1013.8" y="1765" width="0.2" height="15.0" fill="rgb(219,70,23)" rx="2" ry="2" />
<text  x="1016.77" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (7 samples, 0.12%)</title><rect x="133.0" y="2005" width="1.4" height="15.0" fill="rgb(232,225,6)" rx="2" ry="2" />
<text  x="136.00" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="806.2" y="1637" width="0.2" height="15.0" fill="rgb(231,80,33)" rx="2" ry="2" />
<text  x="809.24" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="913.3" y="1973" width="0.2" height="15.0" fill="rgb(252,180,5)" rx="2" ry="2" />
<text  x="916.29" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1113.2" y="1525" width="0.2" height="15.0" fill="rgb(230,13,27)" rx="2" ry="2" />
<text  x="1116.25" y="1535.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="113.1" y="69" width="0.2" height="15.0" fill="rgb(224,45,24)" rx="2" ry="2" />
<text  x="116.07" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1108.9" y="1781" width="0.2" height="15.0" fill="rgb(205,72,36)" rx="2" ry="2" />
<text  x="1111.86" y="1791.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="1145.9" y="1973" width="0.4" height="15.0" fill="rgb(217,168,1)" rx="2" ry="2" />
<text  x="1148.94" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="594.3" y="1669" width="0.2" height="15.0" fill="rgb(245,161,46)" rx="2" ry="2" />
<text  x="597.32" y="1679.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="561.2" y="1861" width="1.0" height="15.0" fill="rgb(241,223,37)" rx="2" ry="2" />
<text  x="564.22" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="857.9" y="1973" width="0.4" height="15.0" fill="rgb(254,2,38)" rx="2" ry="2" />
<text  x="860.87" y="1983.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="251.4" y="1909" width="0.2" height="15.0" fill="rgb(241,206,40)" rx="2" ry="2" />
<text  x="254.42" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1141" width="14.6" height="15.0" fill="rgb(230,128,10)" rx="2" ry="2" />
<text  x="103.11" y="1151.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="158.1" y="1845" width="0.6" height="15.0" fill="rgb(234,95,52)" rx="2" ry="2" />
<text  x="161.12" y="1855.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="751.2" y="1701" width="0.2" height="15.0" fill="rgb(233,67,16)" rx="2" ry="2" />
<text  x="754.21" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="409.1" y="1797" width="0.2" height="15.0" fill="rgb(222,66,11)" rx="2" ry="2" />
<text  x="412.11" y="1807.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="674.7" y="1989" width="0.2" height="15.0" fill="rgb(236,89,32)" rx="2" ry="2" />
<text  x="677.66" y="1999.5" ></text>
</g>
<g >
<title>sys_recvfrom (356 samples, 6.01%)</title><rect x="1058.2" y="2005" width="71.0" height="15.0" fill="rgb(222,81,10)" rx="2" ry="2" />
<text  x="1061.22" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="276.7" y="1781" width="0.2" height="15.0" fill="rgb(233,216,26)" rx="2" ry="2" />
<text  x="279.74" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="227.3" y="1877" width="0.2" height="15.0" fill="rgb(221,41,38)" rx="2" ry="2" />
<text  x="230.30" y="1887.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="942.4" y="1973" width="0.8" height="15.0" fill="rgb(220,37,43)" rx="2" ry="2" />
<text  x="945.40" y="1983.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="888.4" y="1957" width="0.2" height="15.0" fill="rgb(215,172,34)" rx="2" ry="2" />
<text  x="891.37" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (19 samples, 0.32%)</title><rect x="947.8" y="2005" width="3.8" height="15.0" fill="rgb(250,186,23)" rx="2" ry="2" />
<text  x="950.78" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="797.3" y="1493" width="0.2" height="15.0" fill="rgb(225,134,5)" rx="2" ry="2" />
<text  x="800.26" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="894.2" y="1925" width="0.2" height="15.0" fill="rgb(214,32,8)" rx="2" ry="2" />
<text  x="897.15" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1112.4" y="1653" width="0.4" height="15.0" fill="rgb(218,67,51)" rx="2" ry="2" />
<text  x="1115.45" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="924.7" y="1925" width="0.2" height="15.0" fill="rgb(205,93,4)" rx="2" ry="2" />
<text  x="927.65" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (4 samples, 0.07%)</title><rect x="740.0" y="1765" width="0.8" height="15.0" fill="rgb(217,169,39)" rx="2" ry="2" />
<text  x="743.05" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="618.8" y="2021" width="0.8" height="15.0" fill="rgb(220,77,42)" rx="2" ry="2" />
<text  x="621.84" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="683.6" y="1877" width="0.4" height="15.0" fill="rgb(234,83,30)" rx="2" ry="2" />
<text  x="686.63" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="464.5" y="1797" width="0.2" height="15.0" fill="rgb(206,215,29)" rx="2" ry="2" />
<text  x="467.54" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="171.3" y="1989" width="0.2" height="15.0" fill="rgb(205,163,54)" rx="2" ry="2" />
<text  x="174.28" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (92 samples, 1.55%)</title><rect x="654.9" y="1973" width="18.4" height="15.0" fill="rgb(234,43,47)" rx="2" ry="2" />
<text  x="657.92" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="197.2" y="2021" width="0.6" height="15.0" fill="rgb(215,45,12)" rx="2" ry="2" />
<text  x="200.20" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (1 samples, 0.02%)</title><rect x="577.2" y="2021" width="0.2" height="15.0" fill="rgb(218,82,47)" rx="2" ry="2" />
<text  x="580.17" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="113.3" y="85" width="0.4" height="15.0" fill="rgb(207,178,53)" rx="2" ry="2" />
<text  x="116.27" y="95.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="728.1" y="1701" width="0.2" height="15.0" fill="rgb(214,192,7)" rx="2" ry="2" />
<text  x="731.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="613" width="14.2" height="15.0" fill="rgb(233,129,6)" rx="2" ry="2" />
<text  x="103.11" y="623.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (3 samples, 0.05%)</title><rect x="139.8" y="1909" width="0.6" height="15.0" fill="rgb(209,165,35)" rx="2" ry="2" />
<text  x="142.78" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="620.4" y="2037" width="0.2" height="15.0" fill="rgb(219,191,12)" rx="2" ry="2" />
<text  x="623.43" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="842.9" y="1909" width="0.2" height="15.0" fill="rgb(218,119,1)" rx="2" ry="2" />
<text  x="845.92" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="145.6" y="1893" width="1.8" height="15.0" fill="rgb(240,62,16)" rx="2" ry="2" />
<text  x="148.56" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="691.8" y="1877" width="0.2" height="15.0" fill="rgb(229,48,24)" rx="2" ry="2" />
<text  x="694.80" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (104 samples, 1.76%)</title><rect x="134.4" y="2005" width="20.7" height="15.0" fill="rgb(251,190,20)" rx="2" ry="2" />
<text  x="137.40" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (38 samples, 0.64%)</title><rect x="996.6" y="2021" width="7.6" height="15.0" fill="rgb(217,164,9)" rx="2" ry="2" />
<text  x="999.62" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="535.1" y="1989" width="0.2" height="15.0" fill="rgb(249,176,20)" rx="2" ry="2" />
<text  x="538.11" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="408.3" y="1701" width="0.2" height="15.0" fill="rgb(252,216,26)" rx="2" ry="2" />
<text  x="411.32" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="890.6" y="1749" width="0.2" height="15.0" fill="rgb(235,6,15)" rx="2" ry="2" />
<text  x="893.56" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="116.9" y="1669" width="0.2" height="15.0" fill="rgb(220,229,37)" rx="2" ry="2" />
<text  x="119.86" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="29.5" y="1973" width="0.2" height="15.0" fill="rgb(226,103,36)" rx="2" ry="2" />
<text  x="32.54" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="787.1" y="1541" width="0.2" height="15.0" fill="rgb(249,14,41)" rx="2" ry="2" />
<text  x="790.10" y="1551.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="890.4" y="1893" width="0.4" height="15.0" fill="rgb(237,174,36)" rx="2" ry="2" />
<text  x="893.36" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="903.3" y="1589" width="0.2" height="15.0" fill="rgb(241,172,25)" rx="2" ry="2" />
<text  x="906.32" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="408.3" y="1829" width="0.2" height="15.0" fill="rgb(208,188,23)" rx="2" ry="2" />
<text  x="411.32" y="1839.5" ></text>
</g>
<g >
<title>sock_poll (21 samples, 0.35%)</title><rect x="457.0" y="1957" width="4.1" height="15.0" fill="rgb(220,55,9)" rx="2" ry="2" />
<text  x="459.96" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="509.2" y="1877" width="0.2" height="15.0" fill="rgb(207,180,4)" rx="2" ry="2" />
<text  x="512.19" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.8" y="1973" width="0.2" height="15.0" fill="rgb(242,165,14)" rx="2" ry="2" />
<text  x="124.84" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="847.5" y="1861" width="0.2" height="15.0" fill="rgb(217,108,38)" rx="2" ry="2" />
<text  x="850.50" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="852.5" y="1845" width="0.2" height="15.0" fill="rgb(229,47,36)" rx="2" ry="2" />
<text  x="855.49" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="114.1" y="133" width="0.2" height="15.0" fill="rgb(251,60,30)" rx="2" ry="2" />
<text  x="117.06" y="143.5" ></text>
</g>
<g >
<title>skb_free_head (17 samples, 0.29%)</title><rect x="1081.7" y="1877" width="3.4" height="15.0" fill="rgb(236,209,25)" rx="2" ry="2" />
<text  x="1084.75" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="901" width="14.4" height="15.0" fill="rgb(219,176,52)" rx="2" ry="2" />
<text  x="103.11" y="911.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="835.3" y="1861" width="0.2" height="15.0" fill="rgb(223,73,37)" rx="2" ry="2" />
<text  x="838.34" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (27 samples, 0.46%)</title><rect x="516.6" y="1989" width="5.4" height="15.0" fill="rgb(217,192,2)" rx="2" ry="2" />
<text  x="519.57" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="571.4" y="1877" width="0.2" height="15.0" fill="rgb(214,226,50)" rx="2" ry="2" />
<text  x="574.39" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (3 samples, 0.05%)</title><rect x="711.5" y="1925" width="0.6" height="15.0" fill="rgb(229,107,33)" rx="2" ry="2" />
<text  x="714.54" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (5 samples, 0.08%)</title><rect x="1027.3" y="2037" width="1.0" height="15.0" fill="rgb(213,5,44)" rx="2" ry="2" />
<text  x="1030.32" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="980.5" y="1973" width="0.6" height="15.0" fill="rgb(217,151,28)" rx="2" ry="2" />
<text  x="983.47" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="913.5" y="1973" width="0.2" height="15.0" fill="rgb(225,198,30)" rx="2" ry="2" />
<text  x="916.49" y="1983.5" ></text>
</g>
<g >
<title>futex_wait (11 samples, 0.19%)</title><rect x="15.6" y="1973" width="2.2" height="15.0" fill="rgb(245,120,17)" rx="2" ry="2" />
<text  x="18.58" y="1983.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="739.1" y="1685" width="0.2" height="15.0" fill="rgb(227,122,6)" rx="2" ry="2" />
<text  x="742.05" y="1695.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="774.1" y="1493" width="0.2" height="15.0" fill="rgb(237,37,4)" rx="2" ry="2" />
<text  x="777.14" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (2 samples, 0.03%)</title><rect x="210.2" y="1941" width="0.4" height="15.0" fill="rgb(249,135,11)" rx="2" ry="2" />
<text  x="213.16" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (13 samples, 0.22%)</title><rect x="46.9" y="1957" width="2.6" height="15.0" fill="rgb(234,209,4)" rx="2" ry="2" />
<text  x="49.88" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="918.7" y="1989" width="0.6" height="15.0" fill="rgb(253,142,45)" rx="2" ry="2" />
<text  x="921.67" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="138.6" y="1765" width="0.2" height="15.0" fill="rgb(228,207,29)" rx="2" ry="2" />
<text  x="141.59" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="409.9" y="1909" width="0.4" height="15.0" fill="rgb(246,7,17)" rx="2" ry="2" />
<text  x="412.91" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="469.9" y="1909" width="0.4" height="15.0" fill="rgb(220,89,18)" rx="2" ry="2" />
<text  x="472.92" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="886.0" y="1877" width="0.2" height="15.0" fill="rgb(214,36,2)" rx="2" ry="2" />
<text  x="888.98" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="728.1" y="1637" width="0.2" height="15.0" fill="rgb(224,202,42)" rx="2" ry="2" />
<text  x="731.09" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="142.2" y="1893" width="0.4" height="15.0" fill="rgb(236,37,25)" rx="2" ry="2" />
<text  x="145.17" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="121.4" y="1973" width="0.2" height="15.0" fill="rgb(222,84,53)" rx="2" ry="2" />
<text  x="124.44" y="1983.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1113.0" y="1509" width="0.2" height="15.0" fill="rgb(247,128,45)" rx="2" ry="2" />
<text  x="1116.05" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="658.1" y="1749" width="0.2" height="15.0" fill="rgb(251,56,9)" rx="2" ry="2" />
<text  x="661.11" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="112.1" y="69" width="1.0" height="15.0" fill="rgb(242,143,29)" rx="2" ry="2" />
<text  x="115.07" y="79.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (36 samples, 0.61%)</title><rect x="49.5" y="1973" width="7.1" height="15.0" fill="rgb(213,156,37)" rx="2" ry="2" />
<text  x="52.47" y="1983.5" ></text>
</g>
<g >
<title>security_socket_getpeername (3 samples, 0.05%)</title><rect x="666.7" y="1861" width="0.6" height="15.0" fill="rgb(233,9,21)" rx="2" ry="2" />
<text  x="669.69" y="1871.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="284.9" y="1493" width="0.2" height="15.0" fill="rgb(228,99,17)" rx="2" ry="2" />
<text  x="287.91" y="1503.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="183.8" y="1845" width="0.4" height="15.0" fill="rgb(236,207,3)" rx="2" ry="2" />
<text  x="186.84" y="1855.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="969.1" y="1733" width="0.2" height="15.0" fill="rgb(239,205,52)" rx="2" ry="2" />
<text  x="972.11" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="396.4" y="1653" width="0.2" height="15.0" fill="rgb(208,223,40)" rx="2" ry="2" />
<text  x="399.36" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="455.0" y="1973" width="0.2" height="15.0" fill="rgb(224,93,31)" rx="2" ry="2" />
<text  x="457.97" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="691.8" y="1797" width="0.2" height="15.0" fill="rgb(238,103,3)" rx="2" ry="2" />
<text  x="694.80" y="1807.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (5 samples, 0.08%)</title><rect x="512.4" y="1925" width="1.0" height="15.0" fill="rgb(246,9,5)" rx="2" ry="2" />
<text  x="515.38" y="1935.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="829.8" y="1813" width="0.2" height="15.0" fill="rgb(238,218,52)" rx="2" ry="2" />
<text  x="832.76" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="892.4" y="1861" width="0.6" height="15.0" fill="rgb(215,201,33)" rx="2" ry="2" />
<text  x="895.36" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="130.6" y="1957" width="0.2" height="15.0" fill="rgb(209,26,24)" rx="2" ry="2" />
<text  x="133.61" y="1967.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="509.0" y="1941" width="0.2" height="15.0" fill="rgb(228,117,33)" rx="2" ry="2" />
<text  x="511.99" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="830.6" y="1813" width="0.2" height="15.0" fill="rgb(229,22,50)" rx="2" ry="2" />
<text  x="833.56" y="1823.5" ></text>
</g>
<g >
<title>event_del (1 samples, 0.02%)</title><rect x="60.4" y="1909" width="0.2" height="15.0" fill="rgb(245,58,23)" rx="2" ry="2" />
<text  x="63.44" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="935.4" y="1941" width="0.2" height="15.0" fill="rgb(215,125,38)" rx="2" ry="2" />
<text  x="938.42" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (245 samples, 4.14%)</title><rect x="529.5" y="2037" width="48.9" height="15.0" fill="rgb(248,94,36)" rx="2" ry="2" />
<text  x="532.53" y="2047.5" >face..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="408.3" y="1781" width="0.2" height="15.0" fill="rgb(241,228,29)" rx="2" ry="2" />
<text  x="411.32" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="689.8" y="1717" width="0.2" height="15.0" fill="rgb(225,11,30)" rx="2" ry="2" />
<text  x="692.81" y="1727.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="387.8" y="1925" width="0.2" height="15.0" fill="rgb(221,206,6)" rx="2" ry="2" />
<text  x="390.78" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1143.0" y="2005" width="0.2" height="15.0" fill="rgb(249,77,11)" rx="2" ry="2" />
<text  x="1145.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="615.3" y="2005" width="0.2" height="15.0" fill="rgb(215,177,44)" rx="2" ry="2" />
<text  x="618.25" y="2015.5" ></text>
</g>
<g >
<title>__libc_fcntl (73 samples, 1.23%)</title><rect x="550.3" y="1989" width="14.5" height="15.0" fill="rgb(242,173,39)" rx="2" ry="2" />
<text  x="553.26" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="114.1" y="245" width="0.2" height="15.0" fill="rgb(206,72,52)" rx="2" ry="2" />
<text  x="117.06" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="857.5" y="1925" width="0.2" height="15.0" fill="rgb(216,197,45)" rx="2" ry="2" />
<text  x="860.47" y="1935.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="619.4" y="2005" width="0.2" height="15.0" fill="rgb(253,213,2)" rx="2" ry="2" />
<text  x="622.44" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="508.4" y="1861" width="0.2" height="15.0" fill="rgb(236,83,46)" rx="2" ry="2" />
<text  x="511.39" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="906.5" y="2037" width="0.2" height="15.0" fill="rgb(250,130,12)" rx="2" ry="2" />
<text  x="909.51" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="405.5" y="1877" width="0.2" height="15.0" fill="rgb(239,166,53)" rx="2" ry="2" />
<text  x="408.53" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1128.8" y="1877" width="0.2" height="15.0" fill="rgb(224,217,1)" rx="2" ry="2" />
<text  x="1131.80" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="805" width="14.4" height="15.0" fill="rgb(209,123,11)" rx="2" ry="2" />
<text  x="103.11" y="815.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="112.1" y="53" width="0.8" height="15.0" fill="rgb(209,31,41)" rx="2" ry="2" />
<text  x="115.07" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="669.9" y="1653" width="0.2" height="15.0" fill="rgb(229,152,39)" rx="2" ry="2" />
<text  x="672.87" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="168.3" y="1989" width="1.0" height="15.0" fill="rgb(214,171,18)" rx="2" ry="2" />
<text  x="171.29" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (4 samples, 0.07%)</title><rect x="515.8" y="1989" width="0.8" height="15.0" fill="rgb(219,55,1)" rx="2" ry="2" />
<text  x="518.77" y="1999.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="757.0" y="1717" width="0.2" height="15.0" fill="rgb(207,94,40)" rx="2" ry="2" />
<text  x="759.99" y="1727.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="984.7" y="1973" width="1.8" height="15.0" fill="rgb(232,165,22)" rx="2" ry="2" />
<text  x="987.66" y="1983.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.07%)</title><rect x="738.5" y="1701" width="0.8" height="15.0" fill="rgb(239,105,12)" rx="2" ry="2" />
<text  x="741.45" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="408.3" y="1589" width="0.2" height="15.0" fill="rgb(217,138,38)" rx="2" ry="2" />
<text  x="411.32" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.83%)</title><rect x="907.9" y="2021" width="9.8" height="15.0" fill="rgb(240,68,47)" rx="2" ry="2" />
<text  x="910.91" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="97.7" y="2005" width="0.2" height="15.0" fill="rgb(235,84,31)" rx="2" ry="2" />
<text  x="100.72" y="2015.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="1139.4" y="2053" width="0.2" height="15.0" fill="rgb(206,37,19)" rx="2" ry="2" />
<text  x="1142.36" y="2063.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="888.2" y="1941" width="0.2" height="15.0" fill="rgb(208,188,54)" rx="2" ry="2" />
<text  x="891.17" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (1 samples, 0.02%)</title><rect x="101.9" y="37" width="0.2" height="15.0" fill="rgb(235,221,13)" rx="2" ry="2" />
<text  x="104.90" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::connecting (1 samples, 0.02%)</title><rect x="872.6" y="1973" width="0.2" height="15.0" fill="rgb(248,187,11)" rx="2" ry="2" />
<text  x="875.62" y="1983.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1176.2" y="1989" width="0.2" height="15.0" fill="rgb(231,113,52)" rx="2" ry="2" />
<text  x="1179.24" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="227.3" y="1813" width="0.2" height="15.0" fill="rgb(234,174,38)" rx="2" ry="2" />
<text  x="230.30" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="184.0" y="1765" width="0.2" height="15.0" fill="rgb(238,135,4)" rx="2" ry="2" />
<text  x="187.04" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="154.9" y="1941" width="0.2" height="15.0" fill="rgb(236,150,40)" rx="2" ry="2" />
<text  x="157.93" y="1951.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="123.2" y="1989" width="0.2" height="15.0" fill="rgb(232,211,26)" rx="2" ry="2" />
<text  x="126.24" y="1999.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="657.9" y="1925" width="0.2" height="15.0" fill="rgb(216,11,24)" rx="2" ry="2" />
<text  x="660.91" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1003.6" y="1653" width="0.2" height="15.0" fill="rgb(238,5,28)" rx="2" ry="2" />
<text  x="1006.60" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1765" width="0.2" height="15.0" fill="rgb(252,226,5)" rx="2" ry="2" />
<text  x="906.32" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="691.8" y="1685" width="0.2" height="15.0" fill="rgb(216,7,47)" rx="2" ry="2" />
<text  x="694.80" y="1695.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="409.1" y="1461" width="0.2" height="15.0" fill="rgb(242,14,21)" rx="2" ry="2" />
<text  x="412.11" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="508.4" y="1925" width="0.2" height="15.0" fill="rgb(210,3,14)" rx="2" ry="2" />
<text  x="511.39" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="227.3" y="1845" width="0.2" height="15.0" fill="rgb(222,229,41)" rx="2" ry="2" />
<text  x="230.30" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="145.6" y="1717" width="0.2" height="15.0" fill="rgb(221,130,10)" rx="2" ry="2" />
<text  x="148.56" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="971.5" y="1989" width="0.2" height="15.0" fill="rgb(224,105,23)" rx="2" ry="2" />
<text  x="974.50" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="957.7" y="1941" width="0.2" height="15.0" fill="rgb(239,128,44)" rx="2" ry="2" />
<text  x="960.75" y="1951.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="32.9" y="1989" width="0.2" height="15.0" fill="rgb(232,112,6)" rx="2" ry="2" />
<text  x="35.93" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1024.3" y="2037" width="0.2" height="15.0" fill="rgb(225,107,27)" rx="2" ry="2" />
<text  x="1027.33" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="618.8" y="1957" width="0.6" height="15.0" fill="rgb(251,180,34)" rx="2" ry="2" />
<text  x="621.84" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="347.3" y="2037" width="0.2" height="15.0" fill="rgb(206,141,18)" rx="2" ry="2" />
<text  x="350.31" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="969.1" y="1877" width="0.2" height="15.0" fill="rgb(229,62,9)" rx="2" ry="2" />
<text  x="972.11" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.3" y="1989" width="0.2" height="15.0" fill="rgb(240,135,1)" rx="2" ry="2" />
<text  x="923.27" y="1999.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="513.2" y="1893" width="0.2" height="15.0" fill="rgb(230,186,18)" rx="2" ry="2" />
<text  x="516.18" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="905.1" y="1973" width="0.6" height="15.0" fill="rgb(242,178,48)" rx="2" ry="2" />
<text  x="908.12" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (76 samples, 1.28%)</title><rect x="550.1" y="2005" width="15.1" height="15.0" fill="rgb(227,226,48)" rx="2" ry="2" />
<text  x="553.06" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="898.9" y="1893" width="0.2" height="15.0" fill="rgb(240,33,4)" rx="2" ry="2" />
<text  x="901.94" y="1903.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="245.2" y="1861" width="0.2" height="15.0" fill="rgb(225,199,48)" rx="2" ry="2" />
<text  x="248.24" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (9 samples, 0.15%)</title><rect x="66.6" y="1957" width="1.8" height="15.0" fill="rgb(252,187,48)" rx="2" ry="2" />
<text  x="69.62" y="1967.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="218.3" y="1877" width="0.2" height="15.0" fill="rgb(241,110,30)" rx="2" ry="2" />
<text  x="221.33" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="108.3" y="37" width="0.4" height="15.0" fill="rgb(214,14,45)" rx="2" ry="2" />
<text  x="111.28" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="933.4" y="1973" width="0.6" height="15.0" fill="rgb(205,93,17)" rx="2" ry="2" />
<text  x="936.43" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="862.7" y="1957" width="0.6" height="15.0" fill="rgb(253,173,51)" rx="2" ry="2" />
<text  x="865.65" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="166.1" y="1941" width="0.2" height="15.0" fill="rgb(227,183,45)" rx="2" ry="2" />
<text  x="169.10" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="229.5" y="1925" width="0.2" height="15.0" fill="rgb(239,29,3)" rx="2" ry="2" />
<text  x="232.49" y="1935.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="29.9" y="1973" width="0.2" height="15.0" fill="rgb(207,76,33)" rx="2" ry="2" />
<text  x="32.94" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (1 samples, 0.02%)</title><rect x="137.0" y="1941" width="0.2" height="15.0" fill="rgb(218,89,48)" rx="2" ry="2" />
<text  x="139.99" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="980.1" y="1973" width="0.4" height="15.0" fill="rgb(241,217,50)" rx="2" ry="2" />
<text  x="983.08" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="335.6" y="1781" width="0.2" height="15.0" fill="rgb(205,198,41)" rx="2" ry="2" />
<text  x="338.55" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="147.8" y="1909" width="0.4" height="15.0" fill="rgb(253,56,25)" rx="2" ry="2" />
<text  x="150.76" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="560.6" y="1893" width="0.2" height="15.0" fill="rgb(227,87,7)" rx="2" ry="2" />
<text  x="563.63" y="1903.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="322.2" y="1829" width="0.4" height="15.0" fill="rgb(212,70,30)" rx="2" ry="2" />
<text  x="325.19" y="1839.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="704.8" y="1797" width="0.2" height="15.0" fill="rgb(215,163,43)" rx="2" ry="2" />
<text  x="707.76" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="911.5" y="1973" width="1.4" height="15.0" fill="rgb(253,216,10)" rx="2" ry="2" />
<text  x="914.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="616.4" y="2005" width="0.2" height="15.0" fill="rgb(229,186,24)" rx="2" ry="2" />
<text  x="619.45" y="2015.5" ></text>
</g>
<g >
<title>sys_getsockname (36 samples, 0.61%)</title><rect x="591.3" y="1893" width="7.2" height="15.0" fill="rgb(249,41,33)" rx="2" ry="2" />
<text  x="594.33" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="76.0" y="1925" width="0.2" height="15.0" fill="rgb(214,129,37)" rx="2" ry="2" />
<text  x="78.99" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="893.2" y="1861" width="0.2" height="15.0" fill="rgb(210,32,33)" rx="2" ry="2" />
<text  x="896.16" y="1871.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.03%)</title><rect x="1119.8" y="1509" width="0.4" height="15.0" fill="rgb(211,149,36)" rx="2" ry="2" />
<text  x="1122.83" y="1519.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="891.0" y="1909" width="0.2" height="15.0" fill="rgb(216,137,32)" rx="2" ry="2" />
<text  x="893.96" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="820.8" y="1669" width="0.2" height="15.0" fill="rgb(213,129,48)" rx="2" ry="2" />
<text  x="823.79" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="972.3" y="1989" width="0.4" height="15.0" fill="rgb(234,134,54)" rx="2" ry="2" />
<text  x="975.30" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="34.3" y="1973" width="0.2" height="15.0" fill="rgb(226,112,29)" rx="2" ry="2" />
<text  x="37.32" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="917.9" y="1765" width="0.2" height="15.0" fill="rgb(236,189,28)" rx="2" ry="2" />
<text  x="920.88" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="527.9" y="1941" width="0.2" height="15.0" fill="rgb(235,152,25)" rx="2" ry="2" />
<text  x="530.93" y="1951.5" ></text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="1139.2" y="2053" width="0.2" height="15.0" fill="rgb(238,191,11)" rx="2" ry="2" />
<text  x="1142.16" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="405.5" y="1669" width="0.2" height="15.0" fill="rgb(212,210,37)" rx="2" ry="2" />
<text  x="408.53" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="969.1" y="1957" width="0.2" height="15.0" fill="rgb(212,129,12)" rx="2" ry="2" />
<text  x="972.11" y="1967.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (47 samples, 0.79%)</title><rect x="1111.9" y="1877" width="9.3" height="15.0" fill="rgb(240,42,5)" rx="2" ry="2" />
<text  x="1114.85" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="405.5" y="1829" width="0.2" height="15.0" fill="rgb(233,186,21)" rx="2" ry="2" />
<text  x="408.53" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="691.8" y="1701" width="0.2" height="15.0" fill="rgb(247,83,32)" rx="2" ry="2" />
<text  x="694.80" y="1711.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="408.1" y="1893" width="0.2" height="15.0" fill="rgb(205,192,44)" rx="2" ry="2" />
<text  x="411.12" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="530.9" y="1989" width="0.2" height="15.0" fill="rgb(250,116,43)" rx="2" ry="2" />
<text  x="533.92" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (56 samples, 0.95%)</title><rect x="213.3" y="1925" width="11.2" height="15.0" fill="rgb(210,106,45)" rx="2" ry="2" />
<text  x="216.35" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="957.7" y="1749" width="0.2" height="15.0" fill="rgb(252,12,9)" rx="2" ry="2" />
<text  x="960.75" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="154.1" y="1845" width="0.2" height="15.0" fill="rgb(251,180,49)" rx="2" ry="2" />
<text  x="157.14" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (5 samples, 0.08%)</title><rect x="883.8" y="1941" width="1.0" height="15.0" fill="rgb(234,92,53)" rx="2" ry="2" />
<text  x="886.79" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (16 samples, 0.27%)</title><rect x="885.2" y="1957" width="3.2" height="15.0" fill="rgb(249,186,43)" rx="2" ry="2" />
<text  x="888.18" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.17%)</title><rect x="15.8" y="1909" width="2.0" height="15.0" fill="rgb(246,56,50)" rx="2" ry="2" />
<text  x="18.78" y="1919.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (51 samples, 0.86%)</title><rect x="266.8" y="1877" width="10.1" height="15.0" fill="rgb(206,50,46)" rx="2" ry="2" />
<text  x="269.77" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="185.0" y="2021" width="0.2" height="15.0" fill="rgb(216,131,36)" rx="2" ry="2" />
<text  x="188.04" y="2031.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="774.1" y="1525" width="0.2" height="15.0" fill="rgb(254,43,3)" rx="2" ry="2" />
<text  x="777.14" y="1535.5" ></text>
</g>
<g >
<title>alloc_file (34 samples, 0.57%)</title><rect x="398.2" y="1941" width="6.7" height="15.0" fill="rgb(226,115,53)" rx="2" ry="2" />
<text  x="401.15" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="645.4" y="1909" width="0.2" height="15.0" fill="rgb(235,119,11)" rx="2" ry="2" />
<text  x="648.35" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="657.9" y="1669" width="0.2" height="15.0" fill="rgb(231,39,29)" rx="2" ry="2" />
<text  x="660.91" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="114.1" y="357" width="0.2" height="15.0" fill="rgb(236,101,27)" rx="2" ry="2" />
<text  x="117.06" y="367.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="594.3" y="1653" width="0.2" height="15.0" fill="rgb(218,90,33)" rx="2" ry="2" />
<text  x="597.32" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="99.1" y="1813" width="18.8" height="15.0" fill="rgb(226,69,15)" rx="2" ry="2" />
<text  x="102.11" y="1823.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="236.7" y="1845" width="0.8" height="15.0" fill="rgb(215,21,49)" rx="2" ry="2" />
<text  x="239.67" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="132.2" y="2005" width="0.8" height="15.0" fill="rgb(215,79,14)" rx="2" ry="2" />
<text  x="135.21" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="101.5" y="37" width="0.4" height="15.0" fill="rgb(219,93,9)" rx="2" ry="2" />
<text  x="104.51" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (8 samples, 0.14%)</title><rect x="28.1" y="1989" width="1.6" height="15.0" fill="rgb(210,41,36)" rx="2" ry="2" />
<text  x="31.14" y="1999.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="894.2" y="1701" width="0.2" height="15.0" fill="rgb(217,159,54)" rx="2" ry="2" />
<text  x="897.15" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="820.8" y="1541" width="0.2" height="15.0" fill="rgb(208,33,18)" rx="2" ry="2" />
<text  x="823.79" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (86 samples, 1.45%)</title><rect x="137.2" y="1941" width="17.1" height="15.0" fill="rgb(208,222,0)" rx="2" ry="2" />
<text  x="140.19" y="1951.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (1 samples, 0.02%)</title><rect x="855.9" y="1941" width="0.2" height="15.0" fill="rgb(234,145,9)" rx="2" ry="2" />
<text  x="858.88" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (1 samples, 0.02%)</title><rect x="621.2" y="2037" width="0.2" height="15.0" fill="rgb(242,7,38)" rx="2" ry="2" />
<text  x="624.23" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="139.6" y="1893" width="0.2" height="15.0" fill="rgb(249,136,35)" rx="2" ry="2" />
<text  x="142.58" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="179.3" y="1925" width="0.2" height="15.0" fill="rgb(244,102,15)" rx="2" ry="2" />
<text  x="182.25" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="189.6" y="1925" width="0.4" height="15.0" fill="rgb(207,134,23)" rx="2" ry="2" />
<text  x="192.62" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="1004.6" y="1909" width="0.2" height="15.0" fill="rgb(208,2,36)" rx="2" ry="2" />
<text  x="1007.60" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1,002 samples, 16.93%)</title><rect x="701.6" y="2037" width="199.7" height="15.0" fill="rgb(209,96,15)" rx="2" ry="2" />
<text  x="704.57" y="2047.5" >facebook::memcache::McServ..</text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="163.1" y="1973" width="0.2" height="15.0" fill="rgb(230,55,49)" rx="2" ry="2" />
<text  x="166.11" y="1983.5" ></text>
</g>
<g >
<title>__raise_softirq_irqoff (1 samples, 0.02%)</title><rect x="482.3" y="1813" width="0.2" height="15.0" fill="rgb(228,53,46)" rx="2" ry="2" />
<text  x="485.28" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="989.4" y="1765" width="0.2" height="15.0" fill="rgb(232,114,3)" rx="2" ry="2" />
<text  x="992.45" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="975.9" y="2005" width="0.2" height="15.0" fill="rgb(224,97,53)" rx="2" ry="2" />
<text  x="978.89" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="917.9" y="1957" width="0.2" height="15.0" fill="rgb(207,89,50)" rx="2" ry="2" />
<text  x="920.88" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1112.4" y="1621" width="0.4" height="15.0" fill="rgb(230,82,31)" rx="2" ry="2" />
<text  x="1115.45" y="1631.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="905.3" y="1957" width="0.2" height="15.0" fill="rgb(220,168,53)" rx="2" ry="2" />
<text  x="908.32" y="1967.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="405.5" y="1605" width="0.2" height="15.0" fill="rgb(238,37,3)" rx="2" ry="2" />
<text  x="408.53" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="96.5" y="2021" width="1.4" height="15.0" fill="rgb(239,202,7)" rx="2" ry="2" />
<text  x="99.52" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="612.1" y="1925" width="0.2" height="15.0" fill="rgb(222,205,26)" rx="2" ry="2" />
<text  x="615.06" y="1935.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="482.9" y="1973" width="0.2" height="15.0" fill="rgb(215,51,38)" rx="2" ry="2" />
<text  x="485.88" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="920.3" y="2005" width="0.6" height="15.0" fill="rgb(211,207,39)" rx="2" ry="2" />
<text  x="923.27" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="220.5" y="1845" width="0.2" height="15.0" fill="rgb(208,181,32)" rx="2" ry="2" />
<text  x="223.52" y="1855.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="773.9" y="1669" width="0.2" height="15.0" fill="rgb(224,132,18)" rx="2" ry="2" />
<text  x="776.94" y="1679.5" ></text>
</g>
<g >
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1159.3" y="1941" width="0.2" height="15.0" fill="rgb(226,89,31)" rx="2" ry="2" />
<text  x="1162.30" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="821" width="14.4" height="15.0" fill="rgb(248,121,8)" rx="2" ry="2" />
<text  x="103.11" y="831.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="489.9" y="1733" width="0.2" height="15.0" fill="rgb(238,214,53)" rx="2" ry="2" />
<text  x="492.85" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (5 samples, 0.08%)</title><rect x="290.7" y="1557" width="1.0" height="15.0" fill="rgb(245,199,44)" rx="2" ry="2" />
<text  x="293.70" y="1567.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="157.9" y="1909" width="0.8" height="15.0" fill="rgb(223,153,40)" rx="2" ry="2" />
<text  x="160.92" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="53.5" y="1909" width="0.2" height="15.0" fill="rgb(222,223,11)" rx="2" ry="2" />
<text  x="56.46" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="227.3" y="1765" width="0.2" height="15.0" fill="rgb(231,38,50)" rx="2" ry="2" />
<text  x="230.30" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (153 samples, 2.58%)</title><rect x="921.3" y="2037" width="30.5" height="15.0" fill="rgb(249,198,10)" rx="2" ry="2" />
<text  x="924.27" y="2047.5" >fa..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="408.3" y="1685" width="0.2" height="15.0" fill="rgb(229,4,40)" rx="2" ry="2" />
<text  x="411.32" y="1695.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="550.9" y="1957" width="0.2" height="15.0" fill="rgb(244,195,19)" rx="2" ry="2" />
<text  x="553.86" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="561.2" y="1845" width="1.0" height="15.0" fill="rgb(212,182,14)" rx="2" ry="2" />
<text  x="564.22" y="1855.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="799.3" y="1525" width="0.4" height="15.0" fill="rgb(227,37,32)" rx="2" ry="2" />
<text  x="802.26" y="1535.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="891.4" y="1845" width="0.2" height="15.0" fill="rgb(214,106,11)" rx="2" ry="2" />
<text  x="894.36" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="508.4" y="1813" width="0.2" height="15.0" fill="rgb(244,95,16)" rx="2" ry="2" />
<text  x="511.39" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="136.6" y="1877" width="0.2" height="15.0" fill="rgb(225,67,46)" rx="2" ry="2" />
<text  x="139.59" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="783.7" y="1493" width="0.2" height="15.0" fill="rgb(211,183,38)" rx="2" ry="2" />
<text  x="786.71" y="1503.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.08%)</title><rect x="610.5" y="1701" width="1.0" height="15.0" fill="rgb(211,55,32)" rx="2" ry="2" />
<text  x="613.47" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="527.7" y="1973" width="0.2" height="15.0" fill="rgb(218,37,32)" rx="2" ry="2" />
<text  x="530.73" y="1983.5" ></text>
</g>
<g >
<title>dentry_free (5 samples, 0.08%)</title><rect x="727.3" y="1749" width="1.0" height="15.0" fill="rgb(216,14,30)" rx="2" ry="2" />
<text  x="730.29" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1039.7" y="1989" width="0.2" height="15.0" fill="rgb(241,62,29)" rx="2" ry="2" />
<text  x="1042.68" y="1999.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (18 samples, 0.30%)</title><rect x="808.4" y="1669" width="3.6" height="15.0" fill="rgb(211,116,7)" rx="2" ry="2" />
<text  x="811.43" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="341.9" y="1989" width="0.2" height="15.0" fill="rgb(219,147,19)" rx="2" ry="2" />
<text  x="344.93" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1057.6" y="1877" width="0.6" height="15.0" fill="rgb(241,114,22)" rx="2" ry="2" />
<text  x="1060.63" y="1887.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="230.1" y="2037" width="0.4" height="15.0" fill="rgb(254,112,10)" rx="2" ry="2" />
<text  x="233.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.93%)</title><rect x="627.2" y="2005" width="11.0" height="15.0" fill="rgb(222,170,48)" rx="2" ry="2" />
<text  x="630.21" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="556.8" y="1877" width="0.2" height="15.0" fill="rgb(244,17,19)" rx="2" ry="2" />
<text  x="559.84" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="658.1" y="1781" width="0.2" height="15.0" fill="rgb(243,184,5)" rx="2" ry="2" />
<text  x="661.11" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="90.9" y="2005" width="0.2" height="15.0" fill="rgb(250,198,49)" rx="2" ry="2" />
<text  x="93.94" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="203.4" y="1941" width="0.8" height="15.0" fill="rgb(242,218,23)" rx="2" ry="2" />
<text  x="206.38" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="120.2" y="1941" width="0.2" height="15.0" fill="rgb(215,128,49)" rx="2" ry="2" />
<text  x="123.24" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (2 samples, 0.03%)</title><rect x="1027.9" y="2005" width="0.4" height="15.0" fill="rgb(229,69,41)" rx="2" ry="2" />
<text  x="1030.92" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1139.4" y="1989" width="0.2" height="15.0" fill="rgb(208,183,43)" rx="2" ry="2" />
<text  x="1142.36" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="113.3" y="53" width="0.4" height="15.0" fill="rgb(247,110,9)" rx="2" ry="2" />
<text  x="116.27" y="63.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="549" width="14.2" height="15.0" fill="rgb(208,36,37)" rx="2" ry="2" />
<text  x="103.11" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="138.6" y="1621" width="0.2" height="15.0" fill="rgb(213,165,8)" rx="2" ry="2" />
<text  x="141.59" y="1631.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="466.5" y="1941" width="0.2" height="15.0" fill="rgb(246,170,18)" rx="2" ry="2" />
<text  x="469.53" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="548.3" y="1845" width="0.2" height="15.0" fill="rgb(251,115,36)" rx="2" ry="2" />
<text  x="551.27" y="1855.5" ></text>
</g>
<g >
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="1124.4" y="1909" width="0.6" height="15.0" fill="rgb(211,77,46)" rx="2" ry="2" />
<text  x="1127.41" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::operator== (1 samples, 0.02%)</title><rect x="138.6" y="1845" width="0.2" height="15.0" fill="rgb(248,46,1)" rx="2" ry="2" />
<text  x="141.59" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (3 samples, 0.05%)</title><rect x="877.2" y="1941" width="0.6" height="15.0" fill="rgb(218,150,18)" rx="2" ry="2" />
<text  x="880.21" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="571.4" y="1941" width="0.2" height="15.0" fill="rgb(224,91,9)" rx="2" ry="2" />
<text  x="574.39" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="150.5" y="1877" width="0.2" height="15.0" fill="rgb(252,174,24)" rx="2" ry="2" />
<text  x="153.55" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1022.9" y="2005" width="0.4" height="15.0" fill="rgb(254,129,54)" rx="2" ry="2" />
<text  x="1025.94" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1108.9" y="1749" width="0.2" height="15.0" fill="rgb(223,175,15)" rx="2" ry="2" />
<text  x="1111.86" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="136.6" y="1909" width="0.2" height="15.0" fill="rgb(225,31,6)" rx="2" ry="2" />
<text  x="139.59" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4 samples, 0.07%)</title><rect x="404.1" y="1893" width="0.8" height="15.0" fill="rgb(224,89,19)" rx="2" ry="2" />
<text  x="407.13" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="891.2" y="1925" width="0.4" height="15.0" fill="rgb(208,0,38)" rx="2" ry="2" />
<text  x="894.16" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="329.8" y="1717" width="0.2" height="15.0" fill="rgb(254,90,35)" rx="2" ry="2" />
<text  x="332.77" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="246.2" y="1829" width="0.2" height="15.0" fill="rgb(206,55,44)" rx="2" ry="2" />
<text  x="249.24" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="878.4" y="1717" width="0.2" height="15.0" fill="rgb(244,207,53)" rx="2" ry="2" />
<text  x="881.40" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="908.3" y="1973" width="0.8" height="15.0" fill="rgb(205,14,0)" rx="2" ry="2" />
<text  x="911.31" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (2 samples, 0.03%)</title><rect x="904.3" y="1973" width="0.4" height="15.0" fill="rgb(242,56,36)" rx="2" ry="2" />
<text  x="907.32" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="405.5" y="1781" width="0.2" height="15.0" fill="rgb(231,43,11)" rx="2" ry="2" />
<text  x="408.53" y="1791.5" ></text>
</g>
<g >
<title>__fd_install (3 samples, 0.05%)</title><rect x="363.3" y="1941" width="0.6" height="15.0" fill="rgb(219,209,11)" rx="2" ry="2" />
<text  x="366.26" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="886.0" y="1685" width="0.2" height="15.0" fill="rgb(207,165,4)" rx="2" ry="2" />
<text  x="888.98" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="981" width="14.4" height="15.0" fill="rgb(234,7,50)" rx="2" ry="2" />
<text  x="103.11" y="991.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="690.2" y="1861" width="0.2" height="15.0" fill="rgb(248,109,38)" rx="2" ry="2" />
<text  x="693.21" y="1871.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="154.7" y="1941" width="0.2" height="15.0" fill="rgb(228,50,16)" rx="2" ry="2" />
<text  x="157.73" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="890.6" y="1765" width="0.2" height="15.0" fill="rgb(235,217,51)" rx="2" ry="2" />
<text  x="893.56" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="970.7" y="2021" width="0.2" height="15.0" fill="rgb(220,182,25)" rx="2" ry="2" />
<text  x="973.71" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.54%)</title><rect x="99.3" y="1717" width="18.2" height="15.0" fill="rgb(237,32,52)" rx="2" ry="2" />
<text  x="102.31" y="1727.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (24 samples, 0.41%)</title><rect x="1034.9" y="2037" width="4.8" height="15.0" fill="rgb(220,51,34)" rx="2" ry="2" />
<text  x="1037.90" y="2047.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="153.1" y="1701" width="0.2" height="15.0" fill="rgb(220,2,8)" rx="2" ry="2" />
<text  x="156.14" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="847.5" y="1797" width="0.2" height="15.0" fill="rgb(253,177,35)" rx="2" ry="2" />
<text  x="850.50" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="820.8" y="1477" width="0.2" height="15.0" fill="rgb(242,170,20)" rx="2" ry="2" />
<text  x="823.79" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="898.9" y="1797" width="0.2" height="15.0" fill="rgb(215,206,28)" rx="2" ry="2" />
<text  x="901.94" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1013.8" y="1973" width="0.2" height="15.0" fill="rgb(238,124,28)" rx="2" ry="2" />
<text  x="1016.77" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1130.2" y="2021" width="0.2" height="15.0" fill="rgb(209,10,33)" rx="2" ry="2" />
<text  x="1133.19" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="546.5" y="1941" width="0.2" height="15.0" fill="rgb(218,220,23)" rx="2" ry="2" />
<text  x="549.47" y="1951.5" ></text>
</g>
<g >
<title>prandom_u32_state (1 samples, 0.02%)</title><rect x="1112.4" y="1477" width="0.2" height="15.0" fill="rgb(223,150,18)" rx="2" ry="2" />
<text  x="1115.45" y="1487.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="690.8" y="1861" width="0.2" height="15.0" fill="rgb(232,164,31)" rx="2" ry="2" />
<text  x="693.81" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="81.8" y="1909" width="0.2" height="15.0" fill="rgb(253,210,22)" rx="2" ry="2" />
<text  x="84.77" y="1919.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1111.5" y="1845" width="0.2" height="15.0" fill="rgb(235,61,39)" rx="2" ry="2" />
<text  x="1114.45" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="878.4" y="1685" width="0.2" height="15.0" fill="rgb(252,119,14)" rx="2" ry="2" />
<text  x="881.40" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="409.1" y="1669" width="0.2" height="15.0" fill="rgb(207,20,34)" rx="2" ry="2" />
<text  x="412.11" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="456.6" y="1909" width="0.2" height="15.0" fill="rgb(229,82,32)" rx="2" ry="2" />
<text  x="459.56" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="832.2" y="1653" width="0.2" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" />
<text  x="835.15" y="1663.5" ></text>
</g>
<g >
<title>stop_one_cpu (4 samples, 0.07%)</title><rect x="93.7" y="1893" width="0.8" height="15.0" fill="rgb(241,5,46)" rx="2" ry="2" />
<text  x="96.73" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="890.2" y="1909" width="0.6" height="15.0" fill="rgb(212,76,17)" rx="2" ry="2" />
<text  x="893.17" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="917.9" y="1941" width="0.2" height="15.0" fill="rgb(217,184,31)" rx="2" ry="2" />
<text  x="920.88" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="854.1" y="1909" width="0.2" height="15.0" fill="rgb(208,217,21)" rx="2" ry="2" />
<text  x="857.08" y="1919.5" ></text>
</g>
<g >
<title>sock_alloc (2 samples, 0.03%)</title><rect x="413.7" y="1973" width="0.4" height="15.0" fill="rgb(237,17,51)" rx="2" ry="2" />
<text  x="416.70" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (2 samples, 0.03%)</title><rect x="798.7" y="1541" width="0.4" height="15.0" fill="rgb(220,200,18)" rx="2" ry="2" />
<text  x="801.66" y="1551.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (10 samples, 0.17%)</title><rect x="15.8" y="1845" width="2.0" height="15.0" fill="rgb(237,212,4)" rx="2" ry="2" />
<text  x="18.78" y="1855.5" ></text>
</g>
<g >
<title>iov_iter_advance (5 samples, 0.08%)</title><rect x="265.4" y="1861" width="1.0" height="15.0" fill="rgb(218,6,14)" rx="2" ry="2" />
<text  x="268.38" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="763.2" y="1557" width="0.2" height="15.0" fill="rgb(249,167,38)" rx="2" ry="2" />
<text  x="766.17" y="1567.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="53.1" y="1893" width="0.2" height="15.0" fill="rgb(232,2,53)" rx="2" ry="2" />
<text  x="56.06" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="1144.7" y="2021" width="0.2" height="15.0" fill="rgb(218,12,53)" rx="2" ry="2" />
<text  x="1147.75" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="843.7" y="1909" width="0.6" height="15.0" fill="rgb(241,65,27)" rx="2" ry="2" />
<text  x="846.72" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="751.2" y="1445" width="0.2" height="15.0" fill="rgb(213,160,0)" rx="2" ry="2" />
<text  x="754.21" y="1455.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="1057.4" y="1877" width="0.2" height="15.0" fill="rgb(218,37,15)" rx="2" ry="2" />
<text  x="1060.43" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="480.3" y="1909" width="0.2" height="15.0" fill="rgb(209,32,0)" rx="2" ry="2" />
<text  x="483.29" y="1919.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="684.4" y="1925" width="0.2" height="15.0" fill="rgb(206,13,21)" rx="2" ry="2" />
<text  x="687.43" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="286.7" y="1749" width="0.2" height="15.0" fill="rgb(232,53,30)" rx="2" ry="2" />
<text  x="289.71" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="800.3" y="1509" width="0.2" height="15.0" fill="rgb(253,21,17)" rx="2" ry="2" />
<text  x="803.26" y="1519.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="284.9" y="1477" width="0.2" height="15.0" fill="rgb(243,205,37)" rx="2" ry="2" />
<text  x="287.91" y="1487.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="338.5" y="1957" width="0.4" height="15.0" fill="rgb(246,138,48)" rx="2" ry="2" />
<text  x="341.54" y="1967.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (31 samples, 0.52%)</title><rect x="686.0" y="1925" width="6.2" height="15.0" fill="rgb(228,132,43)" rx="2" ry="2" />
<text  x="689.02" y="1935.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (3 samples, 0.05%)</title><rect x="1158.7" y="1909" width="0.6" height="15.0" fill="rgb(224,47,39)" rx="2" ry="2" />
<text  x="1161.70" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="846.3" y="1925" width="1.4" height="15.0" fill="rgb(229,154,7)" rx="2" ry="2" />
<text  x="849.31" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="713.9" y="1877" width="0.2" height="15.0" fill="rgb(247,169,31)" rx="2" ry="2" />
<text  x="716.93" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="170.1" y="1973" width="1.2" height="15.0" fill="rgb(242,224,3)" rx="2" ry="2" />
<text  x="173.08" y="1983.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="474.9" y="1893" width="0.2" height="15.0" fill="rgb(221,54,0)" rx="2" ry="2" />
<text  x="477.90" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="988.2" y="1909" width="0.4" height="15.0" fill="rgb(209,206,6)" rx="2" ry="2" />
<text  x="991.25" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (87 samples, 1.47%)</title><rect x="510.6" y="2037" width="17.3" height="15.0" fill="rgb(245,195,20)" rx="2" ry="2" />
<text  x="513.59" y="2047.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="611.9" y="1877" width="0.2" height="15.0" fill="rgb(243,54,4)" rx="2" ry="2" />
<text  x="614.86" y="1887.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="122.0" y="1973" width="0.4" height="15.0" fill="rgb(210,85,29)" rx="2" ry="2" />
<text  x="125.04" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="683.6" y="1749" width="0.4" height="15.0" fill="rgb(215,165,26)" rx="2" ry="2" />
<text  x="686.63" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="226.9" y="1925" width="0.2" height="15.0" fill="rgb(205,144,40)" rx="2" ry="2" />
<text  x="229.90" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (14 samples, 0.24%)</title><rect x="405.7" y="1909" width="2.8" height="15.0" fill="rgb(236,53,17)" rx="2" ry="2" />
<text  x="408.73" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (6 samples, 0.10%)</title><rect x="290.7" y="1605" width="1.2" height="15.0" fill="rgb(218,141,17)" rx="2" ry="2" />
<text  x="293.70" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="1148.7" y="2053" width="0.4" height="15.0" fill="rgb(205,212,37)" rx="2" ry="2" />
<text  x="1151.73" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="499.8" y="1733" width="0.4" height="15.0" fill="rgb(245,88,8)" rx="2" ry="2" />
<text  x="502.82" y="1743.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="408.5" y="1909" width="0.2" height="15.0" fill="rgb(219,166,31)" rx="2" ry="2" />
<text  x="411.52" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="570.8" y="1973" width="0.2" height="15.0" fill="rgb(243,44,54)" rx="2" ry="2" />
<text  x="573.79" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="132.6" y="1941" width="0.2" height="15.0" fill="rgb(242,161,42)" rx="2" ry="2" />
<text  x="135.61" y="1951.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="764.2" y="1685" width="0.2" height="15.0" fill="rgb(213,83,3)" rx="2" ry="2" />
<text  x="767.17" y="1695.5" ></text>
</g>
<g >
<title>skb_clone (24 samples, 0.41%)</title><rect x="801.7" y="1669" width="4.7" height="15.0" fill="rgb(245,187,52)" rx="2" ry="2" />
<text  x="804.65" y="1679.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="1112.6" y="1413" width="0.2" height="15.0" fill="rgb(233,16,17)" rx="2" ry="2" />
<text  x="1115.65" y="1423.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="290.5" y="1589" width="0.2" height="15.0" fill="rgb(243,109,9)" rx="2" ry="2" />
<text  x="293.50" y="1599.5" ></text>
</g>
<g >
<title>task_numa_migrate (5 samples, 0.08%)</title><rect x="93.5" y="1925" width="1.0" height="15.0" fill="rgb(243,175,45)" rx="2" ry="2" />
<text  x="96.53" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="509.2" y="1909" width="0.2" height="15.0" fill="rgb(207,43,27)" rx="2" ry="2" />
<text  x="512.19" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="618.4" y="2005" width="0.4" height="15.0" fill="rgb(233,3,41)" rx="2" ry="2" />
<text  x="621.44" y="2015.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1182.2" y="2021" width="0.2" height="15.0" fill="rgb(236,113,15)" rx="2" ry="2" />
<text  x="1185.23" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="396.4" y="1845" width="0.2" height="15.0" fill="rgb(253,43,1)" rx="2" ry="2" />
<text  x="399.36" y="1855.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1136.2" y="2053" width="0.4" height="15.0" fill="rgb(242,153,41)" rx="2" ry="2" />
<text  x="1139.17" y="2063.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="489.9" y="1621" width="0.2" height="15.0" fill="rgb(248,164,34)" rx="2" ry="2" />
<text  x="492.85" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (37 samples, 0.63%)</title><rect x="638.4" y="2037" width="7.4" height="15.0" fill="rgb(237,41,32)" rx="2" ry="2" />
<text  x="641.38" y="2047.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="185.0" y="1861" width="0.2" height="15.0" fill="rgb(230,26,21)" rx="2" ry="2" />
<text  x="188.04" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1077" width="14.6" height="15.0" fill="rgb(232,117,11)" rx="2" ry="2" />
<text  x="103.11" y="1087.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.14%)</title><rect x="799.7" y="1525" width="1.6" height="15.0" fill="rgb(234,178,14)" rx="2" ry="2" />
<text  x="802.66" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="974.5" y="2005" width="0.6" height="15.0" fill="rgb(248,226,35)" rx="2" ry="2" />
<text  x="977.49" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="689.8" y="1749" width="0.2" height="15.0" fill="rgb(215,36,31)" rx="2" ry="2" />
<text  x="692.81" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="286.5" y="1637" width="0.2" height="15.0" fill="rgb(218,29,45)" rx="2" ry="2" />
<text  x="289.51" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (3 samples, 0.05%)</title><rect x="523.7" y="1957" width="0.6" height="15.0" fill="rgb(215,203,34)" rx="2" ry="2" />
<text  x="526.75" y="1967.5" ></text>
</g>
<g >
<title>sock_destroy_inode (23 samples, 0.39%)</title><rect x="733.5" y="1685" width="4.6" height="15.0" fill="rgb(245,88,35)" rx="2" ry="2" />
<text  x="736.47" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="143.4" y="1893" width="0.4" height="15.0" fill="rgb(243,48,18)" rx="2" ry="2" />
<text  x="146.37" y="1903.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (2 samples, 0.03%)</title><rect x="464.1" y="1925" width="0.4" height="15.0" fill="rgb(216,171,34)" rx="2" ry="2" />
<text  x="467.14" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="751.0" y="1733" width="0.2" height="15.0" fill="rgb(233,139,30)" rx="2" ry="2" />
<text  x="754.01" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="917.9" y="1893" width="0.2" height="15.0" fill="rgb(237,163,3)" rx="2" ry="2" />
<text  x="920.88" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (17 samples, 0.29%)</title><rect x="10.4" y="1861" width="3.4" height="15.0" fill="rgb(211,218,20)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (8 samples, 0.14%)</title><rect x="249.0" y="1909" width="1.6" height="15.0" fill="rgb(208,42,35)" rx="2" ry="2" />
<text  x="252.03" y="1919.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1039.7" y="2037" width="0.2" height="15.0" fill="rgb(209,76,13)" rx="2" ry="2" />
<text  x="1042.68" y="2047.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (6 samples, 0.10%)</title><rect x="393.6" y="1877" width="1.2" height="15.0" fill="rgb(246,73,35)" rx="2" ry="2" />
<text  x="396.56" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="14.4" y="2021" width="1.0" height="15.0" fill="rgb(242,103,45)" rx="2" ry="2" />
<text  x="17.39" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="323.6" y="1765" width="0.2" height="15.0" fill="rgb(218,176,46)" rx="2" ry="2" />
<text  x="326.59" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="284.9" y="1701" width="0.2" height="15.0" fill="rgb(215,223,22)" rx="2" ry="2" />
<text  x="287.91" y="1711.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="15.6" y="1893" width="0.2" height="15.0" fill="rgb(244,156,31)" rx="2" ry="2" />
<text  x="18.58" y="1903.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (2 samples, 0.03%)</title><rect x="694.0" y="1653" width="0.4" height="15.0" fill="rgb(250,79,5)" rx="2" ry="2" />
<text  x="697.00" y="1663.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="264.4" y="1861" width="0.2" height="15.0" fill="rgb(224,77,42)" rx="2" ry="2" />
<text  x="267.38" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="624.8" y="2005" width="0.2" height="15.0" fill="rgb(228,31,36)" rx="2" ry="2" />
<text  x="627.82" y="2015.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (1 samples, 0.02%)</title><rect x="522.4" y="1989" width="0.1" height="15.0" fill="rgb(212,129,8)" rx="2" ry="2" />
<text  x="525.35" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="689.8" y="1781" width="0.2" height="15.0" fill="rgb(244,64,19)" rx="2" ry="2" />
<text  x="692.81" y="1791.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.05%)</title><rect x="329.2" y="1717" width="0.6" height="15.0" fill="rgb(241,52,13)" rx="2" ry="2" />
<text  x="332.17" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="138.6" y="1717" width="0.2" height="15.0" fill="rgb(240,89,19)" rx="2" ry="2" />
<text  x="141.59" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="917.9" y="1989" width="0.2" height="15.0" fill="rgb(252,144,12)" rx="2" ry="2" />
<text  x="920.88" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="658.1" y="1797" width="0.2" height="15.0" fill="rgb(213,212,23)" rx="2" ry="2" />
<text  x="661.11" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="848.9" y="1909" width="0.2" height="15.0" fill="rgb(223,108,4)" rx="2" ry="2" />
<text  x="851.90" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="903.3" y="1637" width="0.2" height="15.0" fill="rgb(251,186,42)" rx="2" ry="2" />
<text  x="906.32" y="1647.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="236.7" y="1973" width="0.8" height="15.0" fill="rgb(246,169,10)" rx="2" ry="2" />
<text  x="239.67" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="329.8" y="1669" width="0.2" height="15.0" fill="rgb(226,83,10)" rx="2" ry="2" />
<text  x="332.77" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="396.4" y="1605" width="0.2" height="15.0" fill="rgb(232,177,16)" rx="2" ry="2" />
<text  x="399.36" y="1615.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="286.9" y="1765" width="0.4" height="15.0" fill="rgb(220,229,13)" rx="2" ry="2" />
<text  x="289.91" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="70.6" y="1925" width="0.2" height="15.0" fill="rgb(226,29,9)" rx="2" ry="2" />
<text  x="73.60" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (10 samples, 0.17%)</title><rect x="80.2" y="1957" width="2.0" height="15.0" fill="rgb(211,35,43)" rx="2" ry="2" />
<text  x="83.17" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="825.2" y="1685" width="0.2" height="15.0" fill="rgb(246,28,14)" rx="2" ry="2" />
<text  x="828.17" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="914.7" y="1973" width="0.2" height="15.0" fill="rgb(246,1,11)" rx="2" ry="2" />
<text  x="917.69" y="1983.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="669.9" y="1509" width="0.2" height="15.0" fill="rgb(228,204,18)" rx="2" ry="2" />
<text  x="672.87" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (11 samples, 0.19%)</title><rect x="511.8" y="1973" width="2.2" height="15.0" fill="rgb(238,156,27)" rx="2" ry="2" />
<text  x="514.78" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="120.6" y="1957" width="0.4" height="15.0" fill="rgb(220,179,46)" rx="2" ry="2" />
<text  x="123.64" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="594.3" y="1733" width="0.2" height="15.0" fill="rgb(218,173,12)" rx="2" ry="2" />
<text  x="597.32" y="1743.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="867.2" y="1989" width="0.2" height="15.0" fill="rgb(228,15,7)" rx="2" ry="2" />
<text  x="870.24" y="1999.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="890.6" y="1861" width="0.2" height="15.0" fill="rgb(212,48,23)" rx="2" ry="2" />
<text  x="893.56" y="1871.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="489.1" y="1861" width="0.2" height="15.0" fill="rgb(241,123,30)" rx="2" ry="2" />
<text  x="492.06" y="1871.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="11.0" y="1829" width="0.2" height="15.0" fill="rgb(208,110,26)" rx="2" ry="2" />
<text  x="14.00" y="1839.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="464.5" y="1637" width="0.2" height="15.0" fill="rgb(233,204,43)" rx="2" ry="2" />
<text  x="467.54" y="1647.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (2 samples, 0.03%)</title><rect x="965.9" y="2021" width="0.4" height="15.0" fill="rgb(238,85,33)" rx="2" ry="2" />
<text  x="968.92" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (48 samples, 0.81%)</title><rect x="167.9" y="2005" width="9.6" height="15.0" fill="rgb(251,29,20)" rx="2" ry="2" />
<text  x="170.89" y="2015.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="92.1" y="1909" width="0.2" height="15.0" fill="rgb(225,102,23)" rx="2" ry="2" />
<text  x="95.14" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (9 samples, 0.15%)</title><rect x="338.9" y="1957" width="1.8" height="15.0" fill="rgb(221,25,36)" rx="2" ry="2" />
<text  x="341.94" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="669.7" y="1749" width="0.4" height="15.0" fill="rgb(222,69,26)" rx="2" ry="2" />
<text  x="672.68" y="1759.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="614.1" y="2005" width="0.6" height="15.0" fill="rgb(227,93,7)" rx="2" ry="2" />
<text  x="617.05" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1173.9" y="1941" width="0.2" height="15.0" fill="rgb(237,197,49)" rx="2" ry="2" />
<text  x="1176.85" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (104 samples, 1.76%)</title><rect x="134.4" y="1973" width="20.7" height="15.0" fill="rgb(209,167,41)" rx="2" ry="2" />
<text  x="137.40" y="1983.5" ></text>
</g>
<g >
<title>sock_alloc_file (66 samples, 1.12%)</title><rect x="398.0" y="1957" width="13.1" height="15.0" fill="rgb(244,149,4)" rx="2" ry="2" />
<text  x="400.95" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext@plt (1 samples, 0.02%)</title><rect x="992.0" y="1893" width="0.2" height="15.0" fill="rgb(213,43,24)" rx="2" ry="2" />
<text  x="995.04" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (18 samples, 0.30%)</title><rect x="1115.8" y="1429" width="3.6" height="15.0" fill="rgb(231,91,21)" rx="2" ry="2" />
<text  x="1118.84" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="58.0" y="1925" width="1.4" height="15.0" fill="rgb(240,204,45)" rx="2" ry="2" />
<text  x="61.05" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="763.2" y="1621" width="0.2" height="15.0" fill="rgb(253,0,17)" rx="2" ry="2" />
<text  x="766.17" y="1631.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="291.5" y="1397" width="0.2" height="15.0" fill="rgb(232,152,54)" rx="2" ry="2" />
<text  x="294.49" y="1407.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1182.0" y="1717" width="0.2" height="15.0" fill="rgb(213,84,52)" rx="2" ry="2" />
<text  x="1185.03" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="701.0" y="2037" width="0.2" height="15.0" fill="rgb(244,106,10)" rx="2" ry="2" />
<text  x="703.97" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (29 samples, 0.49%)</title><rect x="927.4" y="1925" width="5.8" height="15.0" fill="rgb(218,84,52)" rx="2" ry="2" />
<text  x="930.45" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="669.7" y="1765" width="0.4" height="15.0" fill="rgb(231,229,52)" rx="2" ry="2" />
<text  x="672.68" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="556.8" y="1829" width="0.2" height="15.0" fill="rgb(240,93,12)" rx="2" ry="2" />
<text  x="559.84" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1182.0" y="2005" width="0.2" height="15.0" fill="rgb(217,116,36)" rx="2" ry="2" />
<text  x="1185.03" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="1146.5" y="1909" width="0.2" height="15.0" fill="rgb(239,85,50)" rx="2" ry="2" />
<text  x="1149.54" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (20 samples, 0.34%)</title><rect x="889.0" y="1957" width="4.0" height="15.0" fill="rgb(244,138,51)" rx="2" ry="2" />
<text  x="891.97" y="1967.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="877.6" y="1845" width="0.2" height="15.0" fill="rgb(212,166,27)" rx="2" ry="2" />
<text  x="880.61" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="35.7" y="1957" width="0.2" height="15.0" fill="rgb(213,221,8)" rx="2" ry="2" />
<text  x="38.72" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="842.9" y="1893" width="0.2" height="15.0" fill="rgb(238,20,17)" rx="2" ry="2" />
<text  x="845.92" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1003.6" y="1733" width="0.2" height="15.0" fill="rgb(220,149,50)" rx="2" ry="2" />
<text  x="1006.60" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="925.1" y="1925" width="0.2" height="15.0" fill="rgb(212,46,12)" rx="2" ry="2" />
<text  x="928.05" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1062.2" y="1925" width="0.2" height="15.0" fill="rgb(207,47,31)" rx="2" ry="2" />
<text  x="1065.21" y="1935.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="313.6" y="1669" width="0.2" height="15.0" fill="rgb(212,194,26)" rx="2" ry="2" />
<text  x="316.62" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="405.5" y="1701" width="0.2" height="15.0" fill="rgb(214,114,8)" rx="2" ry="2" />
<text  x="408.53" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (26 samples, 0.44%)</title><rect x="538.7" y="2005" width="5.2" height="15.0" fill="rgb(208,37,42)" rx="2" ry="2" />
<text  x="541.70" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1148.7" y="1989" width="0.2" height="15.0" fill="rgb(246,103,47)" rx="2" ry="2" />
<text  x="1151.73" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (12 samples, 0.20%)</title><rect x="214.1" y="1909" width="2.4" height="15.0" fill="rgb(228,96,20)" rx="2" ry="2" />
<text  x="217.14" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="927.2" y="1893" width="0.2" height="15.0" fill="rgb(245,30,45)" rx="2" ry="2" />
<text  x="930.25" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (30 samples, 0.51%)</title><rect x="792.5" y="1525" width="6.0" height="15.0" fill="rgb(228,160,36)" rx="2" ry="2" />
<text  x="795.48" y="1535.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="994.4" y="1989" width="0.2" height="15.0" fill="rgb(217,176,43)" rx="2" ry="2" />
<text  x="997.43" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1182.0" y="1989" width="0.2" height="15.0" fill="rgb(231,2,51)" rx="2" ry="2" />
<text  x="1185.03" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="405.5" y="1589" width="0.2" height="15.0" fill="rgb(216,65,14)" rx="2" ry="2" />
<text  x="408.53" y="1599.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="601.7" y="1957" width="0.2" height="15.0" fill="rgb(222,192,1)" rx="2" ry="2" />
<text  x="604.69" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.05%)</title><rect x="381.0" y="1861" width="0.6" height="15.0" fill="rgb(234,44,0)" rx="2" ry="2" />
<text  x="384.01" y="1871.5" ></text>
</g>
<g >
<title>release_sock (7 samples, 0.12%)</title><rect x="690.4" y="1877" width="1.4" height="15.0" fill="rgb(210,82,44)" rx="2" ry="2" />
<text  x="693.41" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="76.0" y="1861" width="0.2" height="15.0" fill="rgb(248,100,26)" rx="2" ry="2" />
<text  x="78.99" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="669.7" y="1701" width="0.4" height="15.0" fill="rgb(211,38,21)" rx="2" ry="2" />
<text  x="672.68" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="248.8" y="1893" width="0.2" height="15.0" fill="rgb(209,68,37)" rx="2" ry="2" />
<text  x="251.83" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="893.0" y="1973" width="0.2" height="15.0" fill="rgb(222,59,17)" rx="2" ry="2" />
<text  x="895.96" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="141.0" y="1877" width="0.4" height="15.0" fill="rgb(221,33,11)" rx="2" ry="2" />
<text  x="143.98" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (2 samples, 0.03%)</title><rect x="666.9" y="1845" width="0.4" height="15.0" fill="rgb(233,171,41)" rx="2" ry="2" />
<text  x="669.88" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="320.2" y="1781" width="0.2" height="15.0" fill="rgb(244,104,8)" rx="2" ry="2" />
<text  x="323.20" y="1791.5" ></text>
</g>
<g >
<title>folly::netops::close (639 samples, 10.80%)</title><rect x="712.1" y="1925" width="127.4" height="15.0" fill="rgb(250,224,45)" rx="2" ry="2" />
<text  x="715.14" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="138.6" y="1685" width="0.2" height="15.0" fill="rgb(222,59,12)" rx="2" ry="2" />
<text  x="141.59" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="596.3" y="1797" width="0.2" height="15.0" fill="rgb(227,149,5)" rx="2" ry="2" />
<text  x="599.31" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="751.2" y="1589" width="0.2" height="15.0" fill="rgb(228,202,54)" rx="2" ry="2" />
<text  x="754.21" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="847.5" y="1829" width="0.2" height="15.0" fill="rgb(235,226,22)" rx="2" ry="2" />
<text  x="850.50" y="1839.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="377.8" y="1893" width="0.4" height="15.0" fill="rgb(234,162,39)" rx="2" ry="2" />
<text  x="380.82" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="484.3" y="2005" width="0.2" height="15.0" fill="rgb(253,190,51)" rx="2" ry="2" />
<text  x="487.27" y="2015.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (1 samples, 0.02%)</title><rect x="484.1" y="2005" width="0.2" height="15.0" fill="rgb(224,16,40)" rx="2" ry="2" />
<text  x="487.07" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="143.8" y="1909" width="0.2" height="15.0" fill="rgb(246,88,31)" rx="2" ry="2" />
<text  x="146.77" y="1919.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="59.6" y="1877" width="0.4" height="15.0" fill="rgb(209,172,24)" rx="2" ry="2" />
<text  x="62.64" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="489.9" y="1797" width="0.2" height="15.0" fill="rgb(229,222,35)" rx="2" ry="2" />
<text  x="492.85" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1141.8" y="1909" width="0.2" height="15.0" fill="rgb(250,125,24)" rx="2" ry="2" />
<text  x="1144.76" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="857.5" y="1893" width="0.2" height="15.0" fill="rgb(233,185,23)" rx="2" ry="2" />
<text  x="860.47" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.9" y="1797" width="0.2" height="15.0" fill="rgb(215,65,1)" rx="2" ry="2" />
<text  x="120.85" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="246.2" y="1925" width="0.2" height="15.0" fill="rgb(254,222,6)" rx="2" ry="2" />
<text  x="249.24" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (5 samples, 0.08%)</title><rect x="1171.5" y="1989" width="1.0" height="15.0" fill="rgb(222,193,24)" rx="2" ry="2" />
<text  x="1174.46" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="71.0" y="1909" width="0.2" height="15.0" fill="rgb(251,73,21)" rx="2" ry="2" />
<text  x="74.00" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="739.8" y="1765" width="0.2" height="15.0" fill="rgb(251,164,41)" rx="2" ry="2" />
<text  x="742.85" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="248.8" y="1861" width="0.2" height="15.0" fill="rgb(239,21,37)" rx="2" ry="2" />
<text  x="251.83" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1001.0" y="1957" width="0.4" height="15.0" fill="rgb(233,154,20)" rx="2" ry="2" />
<text  x="1004.01" y="1967.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (44 samples, 0.74%)</title><rect x="1112.4" y="1765" width="8.8" height="15.0" fill="rgb(243,89,25)" rx="2" ry="2" />
<text  x="1115.45" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (33 samples, 0.56%)</title><rect x="986.7" y="1973" width="6.5" height="15.0" fill="rgb(239,196,36)" rx="2" ry="2" />
<text  x="989.65" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (8 samples, 0.14%)</title><rect x="647.5" y="2021" width="1.6" height="15.0" fill="rgb(217,64,49)" rx="2" ry="2" />
<text  x="650.55" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="92.1" y="1925" width="0.2" height="15.0" fill="rgb(234,224,30)" rx="2" ry="2" />
<text  x="95.14" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="183.8" y="1925" width="0.4" height="15.0" fill="rgb(233,208,5)" rx="2" ry="2" />
<text  x="186.84" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="145.6" y="1749" width="0.2" height="15.0" fill="rgb(212,38,47)" rx="2" ry="2" />
<text  x="148.56" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (4 samples, 0.07%)</title><rect x="970.9" y="2005" width="0.8" height="15.0" fill="rgb(253,196,26)" rx="2" ry="2" />
<text  x="973.91" y="2015.5" ></text>
</g>
<g >
<title>__mutex_init (2 samples, 0.03%)</title><rect x="399.1" y="1925" width="0.4" height="15.0" fill="rgb(248,215,51)" rx="2" ry="2" />
<text  x="402.15" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="112.5" y="37" width="0.4" height="15.0" fill="rgb(225,28,22)" rx="2" ry="2" />
<text  x="115.47" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (2 samples, 0.03%)</title><rect x="518.8" y="1957" width="0.4" height="15.0" fill="rgb(251,151,39)" rx="2" ry="2" />
<text  x="521.76" y="1967.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (7 samples, 0.12%)</title><rect x="785.7" y="1525" width="1.4" height="15.0" fill="rgb(248,102,36)" rx="2" ry="2" />
<text  x="788.70" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="541.7" y="1893" width="0.4" height="15.0" fill="rgb(251,138,41)" rx="2" ry="2" />
<text  x="544.69" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="99.7" y="1253" width="0.2" height="15.0" fill="rgb(208,44,51)" rx="2" ry="2" />
<text  x="102.71" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.03%)</title><rect x="1028.3" y="2037" width="0.4" height="15.0" fill="rgb(235,111,18)" rx="2" ry="2" />
<text  x="1031.32" y="2047.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="14.6" y="1877" width="0.8" height="15.0" fill="rgb(248,108,12)" rx="2" ry="2" />
<text  x="17.59" y="1887.5" ></text>
</g>
<g >
<title>tcp_ack (39 samples, 0.66%)</title><rect x="1113.2" y="1541" width="7.8" height="15.0" fill="rgb(240,147,31)" rx="2" ry="2" />
<text  x="1116.25" y="1551.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="177.1" y="1941" width="0.4" height="15.0" fill="rgb(225,149,20)" rx="2" ry="2" />
<text  x="180.06" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="609.3" y="1877" width="0.2" height="15.0" fill="rgb(219,227,46)" rx="2" ry="2" />
<text  x="612.27" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="645.8" y="2037" width="3.5" height="15.0" fill="rgb(240,128,16)" rx="2" ry="2" />
<text  x="648.75" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="830.6" y="1845" width="0.2" height="15.0" fill="rgb(221,123,15)" rx="2" ry="2" />
<text  x="833.56" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="546.5" y="1909" width="0.2" height="15.0" fill="rgb(207,18,33)" rx="2" ry="2" />
<text  x="549.47" y="1919.5" ></text>
</g>
<g >
<title>security_socket_getsockname (3 samples, 0.05%)</title><rect x="596.1" y="1861" width="0.6" height="15.0" fill="rgb(212,129,44)" rx="2" ry="2" />
<text  x="599.11" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="546.5" y="1893" width="0.2" height="15.0" fill="rgb(208,228,22)" rx="2" ry="2" />
<text  x="549.47" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="867.4" y="1989" width="0.2" height="15.0" fill="rgb(222,193,14)" rx="2" ry="2" />
<text  x="870.44" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="669.5" y="1893" width="0.6" height="15.0" fill="rgb(227,128,29)" rx="2" ry="2" />
<text  x="672.48" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="30.7" y="1989" width="0.2" height="15.0" fill="rgb(244,99,26)" rx="2" ry="2" />
<text  x="33.73" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="168.9" y="1957" width="0.2" height="15.0" fill="rgb(209,128,8)" rx="2" ry="2" />
<text  x="171.89" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="917.9" y="2005" width="0.2" height="15.0" fill="rgb(252,213,36)" rx="2" ry="2" />
<text  x="920.88" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="220.9" y="1829" width="0.4" height="15.0" fill="rgb(239,211,22)" rx="2" ry="2" />
<text  x="223.92" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="405.5" y="1845" width="0.2" height="15.0" fill="rgb(252,212,3)" rx="2" ry="2" />
<text  x="408.53" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="669.9" y="1621" width="0.2" height="15.0" fill="rgb(210,50,6)" rx="2" ry="2" />
<text  x="672.87" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="480.3" y="1829" width="0.2" height="15.0" fill="rgb(220,169,5)" rx="2" ry="2" />
<text  x="483.29" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="727.3" y="1733" width="1.0" height="15.0" fill="rgb(222,16,14)" rx="2" ry="2" />
<text  x="730.29" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="53.7" y="1957" width="0.2" height="15.0" fill="rgb(211,187,33)" rx="2" ry="2" />
<text  x="56.66" y="1967.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="123.4" y="1989" width="0.6" height="15.0" fill="rgb(244,66,22)" rx="2" ry="2" />
<text  x="126.43" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="691.8" y="1813" width="0.2" height="15.0" fill="rgb(247,154,23)" rx="2" ry="2" />
<text  x="694.80" y="1823.5" ></text>
</g>
<g >
<title>__fdget (23 samples, 0.39%)</title><rect x="450.4" y="1973" width="4.6" height="15.0" fill="rgb(232,171,27)" rx="2" ry="2" />
<text  x="453.38" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="75.4" y="1941" width="0.2" height="15.0" fill="rgb(245,87,30)" rx="2" ry="2" />
<text  x="78.39" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="147.4" y="1893" width="0.2" height="15.0" fill="rgb(231,124,43)" rx="2" ry="2" />
<text  x="150.36" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="79.6" y="1925" width="0.2" height="15.0" fill="rgb(226,32,13)" rx="2" ry="2" />
<text  x="82.58" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1157" width="14.6" height="15.0" fill="rgb(243,101,27)" rx="2" ry="2" />
<text  x="103.11" y="1167.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (6 samples, 0.10%)</title><rect x="290.7" y="1621" width="1.2" height="15.0" fill="rgb(219,75,34)" rx="2" ry="2" />
<text  x="293.70" y="1631.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="840.3" y="1909" width="0.2" height="15.0" fill="rgb(246,214,16)" rx="2" ry="2" />
<text  x="843.33" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="669.9" y="1493" width="0.2" height="15.0" fill="rgb(243,214,24)" rx="2" ry="2" />
<text  x="672.87" y="1503.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="156.7" y="2005" width="0.2" height="15.0" fill="rgb(209,118,44)" rx="2" ry="2" />
<text  x="159.73" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (105 samples, 1.77%)</title><rect x="653.9" y="2021" width="21.0" height="15.0" fill="rgb(230,212,12)" rx="2" ry="2" />
<text  x="656.93" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="756.8" y="1573" width="0.2" height="15.0" fill="rgb(253,207,32)" rx="2" ry="2" />
<text  x="759.80" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="645.4" y="1829" width="0.2" height="15.0" fill="rgb(212,159,18)" rx="2" ry="2" />
<text  x="648.35" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="649.3" y="2037" width="0.4" height="15.0" fill="rgb(250,20,20)" rx="2" ry="2" />
<text  x="652.34" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="396.6" y="1829" width="0.2" height="15.0" fill="rgb(217,179,11)" rx="2" ry="2" />
<text  x="399.56" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="229.5" y="1973" width="0.2" height="15.0" fill="rgb(254,177,28)" rx="2" ry="2" />
<text  x="232.49" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (3 samples, 0.05%)</title><rect x="82.6" y="1973" width="0.6" height="15.0" fill="rgb(223,24,53)" rx="2" ry="2" />
<text  x="85.57" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="1129.0" y="1957" width="0.2" height="15.0" fill="rgb(234,12,21)" rx="2" ry="2" />
<text  x="1132.00" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="814.0" y="1717" width="0.2" height="15.0" fill="rgb(245,127,33)" rx="2" ry="2" />
<text  x="817.01" y="1727.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="315.4" y="1717" width="0.2" height="15.0" fill="rgb(245,223,23)" rx="2" ry="2" />
<text  x="318.42" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="396.4" y="1749" width="0.2" height="15.0" fill="rgb(236,8,48)" rx="2" ry="2" />
<text  x="399.36" y="1759.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="261.6" y="1877" width="0.2" height="15.0" fill="rgb(220,18,21)" rx="2" ry="2" />
<text  x="264.59" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="74.4" y="1941" width="0.4" height="15.0" fill="rgb(213,107,24)" rx="2" ry="2" />
<text  x="77.39" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="488.1" y="2021" width="0.2" height="15.0" fill="rgb(232,14,39)" rx="2" ry="2" />
<text  x="491.06" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="136.6" y="1941" width="0.4" height="15.0" fill="rgb(219,18,49)" rx="2" ry="2" />
<text  x="139.59" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="683.6" y="1941" width="0.4" height="15.0" fill="rgb(219,123,27)" rx="2" ry="2" />
<text  x="686.63" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1182.0" y="1893" width="0.2" height="15.0" fill="rgb(206,52,49)" rx="2" ry="2" />
<text  x="1185.03" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="906.7" y="2037" width="0.2" height="15.0" fill="rgb(238,160,26)" rx="2" ry="2" />
<text  x="909.71" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="509.2" y="1925" width="0.2" height="15.0" fill="rgb(233,190,35)" rx="2" ry="2" />
<text  x="512.19" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (89 samples, 1.50%)</title><rect x="783.9" y="1589" width="17.8" height="15.0" fill="rgb(211,98,23)" rx="2" ry="2" />
<text  x="786.91" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="709.9" y="1845" width="0.2" height="15.0" fill="rgb(246,25,32)" rx="2" ry="2" />
<text  x="712.95" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="853.1" y="1893" width="0.6" height="15.0" fill="rgb(218,62,51)" rx="2" ry="2" />
<text  x="856.08" y="1903.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="522.0" y="1989" width="0.2" height="15.0" fill="rgb(241,145,19)" rx="2" ry="2" />
<text  x="524.95" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="99.9" y="1237" width="15.0" height="15.0" fill="rgb(220,72,22)" rx="2" ry="2" />
<text  x="102.91" y="1247.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="299.1" y="1685" width="0.2" height="15.0" fill="rgb(242,136,43)" rx="2" ry="2" />
<text  x="302.07" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="292.9" y="1413" width="0.4" height="15.0" fill="rgb(218,101,15)" rx="2" ry="2" />
<text  x="295.89" y="1423.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="917.9" y="1925" width="0.2" height="15.0" fill="rgb(252,206,51)" rx="2" ry="2" />
<text  x="920.88" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="154.1" y="1909" width="0.2" height="15.0" fill="rgb(220,12,24)" rx="2" ry="2" />
<text  x="157.14" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="933.8" y="1893" width="0.2" height="15.0" fill="rgb(236,79,19)" rx="2" ry="2" />
<text  x="936.82" y="1903.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="574.8" y="1941" width="0.2" height="15.0" fill="rgb(223,213,21)" rx="2" ry="2" />
<text  x="577.78" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="882.4" y="1829" width="0.2" height="15.0" fill="rgb(223,24,20)" rx="2" ry="2" />
<text  x="885.39" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="246.2" y="1845" width="0.2" height="15.0" fill="rgb(232,164,29)" rx="2" ry="2" />
<text  x="249.24" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="140.4" y="1909" width="0.2" height="15.0" fill="rgb(254,40,54)" rx="2" ry="2" />
<text  x="143.38" y="1919.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.02%)</title><rect x="284.5" y="1813" width="0.2" height="15.0" fill="rgb(217,36,5)" rx="2" ry="2" />
<text  x="287.52" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="157.9" y="1941" width="0.8" height="15.0" fill="rgb(237,119,25)" rx="2" ry="2" />
<text  x="160.92" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="219.3" y="1845" width="0.4" height="15.0" fill="rgb(229,203,39)" rx="2" ry="2" />
<text  x="222.33" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="878.4" y="1877" width="0.2" height="15.0" fill="rgb(243,129,22)" rx="2" ry="2" />
<text  x="881.40" y="1887.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (95 samples, 1.61%)</title><rect x="490.3" y="1957" width="18.9" height="15.0" fill="rgb(227,224,20)" rx="2" ry="2" />
<text  x="493.25" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="756.8" y="1493" width="0.2" height="15.0" fill="rgb(208,123,9)" rx="2" ry="2" />
<text  x="759.80" y="1503.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="751.2" y="1733" width="0.2" height="15.0" fill="rgb(229,44,48)" rx="2" ry="2" />
<text  x="754.21" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (2 samples, 0.03%)</title><rect x="162.9" y="1989" width="0.4" height="15.0" fill="rgb(212,117,20)" rx="2" ry="2" />
<text  x="165.91" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.9" y="53" width="0.2" height="15.0" fill="rgb(222,64,5)" rx="2" ry="2" />
<text  x="114.87" y="63.5" ></text>
</g>
<g >
<title>inode_init_always (8 samples, 0.14%)</title><rect x="390.8" y="1909" width="1.6" height="15.0" fill="rgb(210,36,25)" rx="2" ry="2" />
<text  x="393.77" y="1919.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1061.8" y="1973" width="0.4" height="15.0" fill="rgb(219,92,2)" rx="2" ry="2" />
<text  x="1064.81" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="957.7" y="1893" width="0.2" height="15.0" fill="rgb(238,98,16)" rx="2" ry="2" />
<text  x="960.75" y="1903.5" ></text>
</g>
<g >
<title>___sys_sendmsg (454 samples, 7.67%)</title><rect x="247.2" y="1957" width="90.5" height="15.0" fill="rgb(230,155,12)" rx="2" ry="2" />
<text  x="250.24" y="1967.5" >___sys_sen..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="227.3" y="1685" width="0.2" height="15.0" fill="rgb(223,144,31)" rx="2" ry="2" />
<text  x="230.30" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="229.5" y="1877" width="0.2" height="15.0" fill="rgb(227,131,9)" rx="2" ry="2" />
<text  x="232.49" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="329.8" y="1733" width="0.2" height="15.0" fill="rgb(238,29,13)" rx="2" ry="2" />
<text  x="332.77" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (73 samples, 1.23%)</title><rect x="922.9" y="1989" width="14.5" height="15.0" fill="rgb(247,113,1)" rx="2" ry="2" />
<text  x="925.86" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="845.9" y="1893" width="0.2" height="15.0" fill="rgb(244,152,40)" rx="2" ry="2" />
<text  x="848.91" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="541.3" y="1925" width="0.4" height="15.0" fill="rgb(246,104,35)" rx="2" ry="2" />
<text  x="544.29" y="1935.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="985.7" y="1893" width="0.4" height="15.0" fill="rgb(226,22,18)" rx="2" ry="2" />
<text  x="988.66" y="1903.5" ></text>
</g>
<g >
<title>inet_release (400 samples, 6.76%)</title><rect x="746.4" y="1765" width="79.8" height="15.0" fill="rgb(252,228,9)" rx="2" ry="2" />
<text  x="749.43" y="1775.5" >inet_rele..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="76.6" y="1877" width="0.2" height="15.0" fill="rgb(224,211,29)" rx="2" ry="2" />
<text  x="79.59" y="1887.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (2 samples, 0.03%)</title><rect x="40.5" y="1973" width="0.4" height="15.0" fill="rgb(206,154,54)" rx="2" ry="2" />
<text  x="43.50" y="1983.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="739.3" y="1701" width="0.2" height="15.0" fill="rgb(208,155,9)" rx="2" ry="2" />
<text  x="742.25" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1022.9" y="1941" width="0.4" height="15.0" fill="rgb(222,201,38)" rx="2" ry="2" />
<text  x="1025.94" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="971.5" y="1893" width="0.2" height="15.0" fill="rgb(227,15,11)" rx="2" ry="2" />
<text  x="974.50" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="868.6" y="1973" width="0.4" height="15.0" fill="rgb(208,158,16)" rx="2" ry="2" />
<text  x="871.63" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="898.9" y="1909" width="0.2" height="15.0" fill="rgb(219,49,35)" rx="2" ry="2" />
<text  x="901.94" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="609.9" y="1829" width="0.2" height="15.0" fill="rgb(211,170,10)" rx="2" ry="2" />
<text  x="612.87" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1148.9" y="1941" width="0.2" height="15.0" fill="rgb(245,153,31)" rx="2" ry="2" />
<text  x="1151.93" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="792.5" y="1509" width="0.4" height="15.0" fill="rgb(240,142,39)" rx="2" ry="2" />
<text  x="795.48" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="917.9" y="1829" width="0.2" height="15.0" fill="rgb(245,58,2)" rx="2" ry="2" />
<text  x="920.88" y="1839.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (7 samples, 0.12%)</title><rect x="548.7" y="1989" width="1.4" height="15.0" fill="rgb(228,156,50)" rx="2" ry="2" />
<text  x="551.67" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="409.1" y="1909" width="0.2" height="15.0" fill="rgb(248,197,17)" rx="2" ry="2" />
<text  x="412.11" y="1919.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="330.0" y="1829" width="0.2" height="15.0" fill="rgb(243,208,41)" rx="2" ry="2" />
<text  x="332.97" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 1.39%)</title><rect x="99.3" y="1525" width="16.4" height="15.0" fill="rgb(243,188,52)" rx="2" ry="2" />
<text  x="102.31" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="832.2" y="1701" width="0.2" height="15.0" fill="rgb(225,176,26)" rx="2" ry="2" />
<text  x="835.15" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="14.4" y="2037" width="1.0" height="15.0" fill="rgb(221,194,16)" rx="2" ry="2" />
<text  x="17.39" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="832.2" y="1813" width="0.2" height="15.0" fill="rgb(236,88,28)" rx="2" ry="2" />
<text  x="835.15" y="1823.5" ></text>
</g>
<g >
<title>locks_remove_posix (5 samples, 0.08%)</title><rect x="833.7" y="1813" width="1.0" height="15.0" fill="rgb(211,178,15)" rx="2" ry="2" />
<text  x="836.75" y="1823.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="256.6" y="1893" width="0.2" height="15.0" fill="rgb(217,103,22)" rx="2" ry="2" />
<text  x="259.61" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseStart (2 samples, 0.03%)</title><rect x="703.4" y="1989" width="0.4" height="15.0" fill="rgb(209,164,7)" rx="2" ry="2" />
<text  x="706.37" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.07%)</title><rect x="609.7" y="1861" width="0.8" height="15.0" fill="rgb(254,44,0)" rx="2" ry="2" />
<text  x="612.67" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="78.6" y="1925" width="0.4" height="15.0" fill="rgb(236,180,29)" rx="2" ry="2" />
<text  x="81.58" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="546.5" y="1685" width="0.2" height="15.0" fill="rgb(230,9,9)" rx="2" ry="2" />
<text  x="549.47" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="878.4" y="1829" width="0.2" height="15.0" fill="rgb(242,174,50)" rx="2" ry="2" />
<text  x="881.40" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="691.4" y="1685" width="0.2" height="15.0" fill="rgb(220,185,14)" rx="2" ry="2" />
<text  x="694.41" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1162.5" y="2053" width="0.2" height="15.0" fill="rgb(221,128,42)" rx="2" ry="2" />
<text  x="1165.49" y="2063.5" ></text>
</g>
<g >
<title>__libc_fcntl (9 samples, 0.15%)</title><rect x="1167.1" y="2037" width="1.8" height="15.0" fill="rgb(207,33,21)" rx="2" ry="2" />
<text  x="1170.07" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (10 samples, 0.17%)</title><rect x="879.2" y="1941" width="2.0" height="15.0" fill="rgb(217,35,16)" rx="2" ry="2" />
<text  x="882.20" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="130.4" y="1957" width="0.2" height="15.0" fill="rgb(226,31,46)" rx="2" ry="2" />
<text  x="133.41" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4 samples, 0.07%)</title><rect x="900.5" y="2005" width="0.8" height="15.0" fill="rgb(253,225,35)" rx="2" ry="2" />
<text  x="903.53" y="2015.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="566.4" y="2005" width="0.2" height="15.0" fill="rgb(234,168,6)" rx="2" ry="2" />
<text  x="569.41" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="341.9" y="2021" width="0.6" height="15.0" fill="rgb(244,141,35)" rx="2" ry="2" />
<text  x="344.93" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="292.7" y="1477" width="0.6" height="15.0" fill="rgb(205,51,43)" rx="2" ry="2" />
<text  x="295.69" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="284.9" y="1749" width="0.2" height="15.0" fill="rgb(210,90,19)" rx="2" ry="2" />
<text  x="287.91" y="1759.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="215.3" y="1877" width="0.4" height="15.0" fill="rgb(225,144,42)" rx="2" ry="2" />
<text  x="218.34" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="505.8" y="1765" width="0.2" height="15.0" fill="rgb(214,191,32)" rx="2" ry="2" />
<text  x="508.80" y="1775.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="409.1" y="1541" width="0.2" height="15.0" fill="rgb(221,137,53)" rx="2" ry="2" />
<text  x="412.11" y="1551.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="812.6" y="1669" width="0.2" height="15.0" fill="rgb(235,42,1)" rx="2" ry="2" />
<text  x="815.62" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="163.5" y="1941" width="0.4" height="15.0" fill="rgb(249,11,48)" rx="2" ry="2" />
<text  x="166.51" y="1951.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="13.8" y="1909" width="0.2" height="15.0" fill="rgb(218,106,37)" rx="2" ry="2" />
<text  x="16.79" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.28%)</title><rect x="99.7" y="1269" width="15.2" height="15.0" fill="rgb(241,76,7)" rx="2" ry="2" />
<text  x="102.71" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="841.3" y="1893" width="0.2" height="15.0" fill="rgb(243,48,7)" rx="2" ry="2" />
<text  x="844.32" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="166.3" y="1989" width="0.2" height="15.0" fill="rgb(214,213,4)" rx="2" ry="2" />
<text  x="169.30" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="228.1" y="1749" width="0.2" height="15.0" fill="rgb(211,125,7)" rx="2" ry="2" />
<text  x="231.10" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="861.9" y="1989" width="0.2" height="15.0" fill="rgb(252,205,27)" rx="2" ry="2" />
<text  x="864.86" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="189.8" y="1749" width="0.2" height="15.0" fill="rgb(222,201,14)" rx="2" ry="2" />
<text  x="192.82" y="1759.5" ></text>
</g>
<g >
<title>__close (11 samples, 0.19%)</title><rect x="953.6" y="1973" width="2.2" height="15.0" fill="rgb(245,24,3)" rx="2" ry="2" />
<text  x="956.56" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="248.8" y="1845" width="0.2" height="15.0" fill="rgb(212,125,24)" rx="2" ry="2" />
<text  x="251.83" y="1855.5" ></text>
</g>
<g >
<title>strlen (2 samples, 0.03%)</title><rect x="410.7" y="1941" width="0.4" height="15.0" fill="rgb(236,83,51)" rx="2" ry="2" />
<text  x="413.71" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="763.2" y="1493" width="0.2" height="15.0" fill="rgb(226,220,13)" rx="2" ry="2" />
<text  x="766.17" y="1503.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (6 samples, 0.10%)</title><rect x="218.7" y="1877" width="1.2" height="15.0" fill="rgb(252,163,19)" rx="2" ry="2" />
<text  x="221.73" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="851.7" y="1861" width="1.4" height="15.0" fill="rgb(231,21,39)" rx="2" ry="2" />
<text  x="854.69" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="918.3" y="2037" width="0.4" height="15.0" fill="rgb(224,205,37)" rx="2" ry="2" />
<text  x="921.28" y="2047.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1057.4" y="2005" width="0.8" height="15.0" fill="rgb(245,42,13)" rx="2" ry="2" />
<text  x="1060.43" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="47.9" y="1925" width="0.2" height="15.0" fill="rgb(226,203,7)" rx="2" ry="2" />
<text  x="50.88" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="594.3" y="1845" width="0.2" height="15.0" fill="rgb(227,80,1)" rx="2" ry="2" />
<text  x="597.32" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="99.9" y="1253" width="15.0" height="15.0" fill="rgb(205,219,3)" rx="2" ry="2" />
<text  x="102.91" y="1263.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (2 samples, 0.03%)</title><rect x="694.0" y="1669" width="0.4" height="15.0" fill="rgb(242,140,33)" rx="2" ry="2" />
<text  x="697.00" y="1679.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="692.4" y="1893" width="1.0" height="15.0" fill="rgb(230,101,3)" rx="2" ry="2" />
<text  x="695.40" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="703.8" y="1989" width="0.2" height="15.0" fill="rgb(237,142,10)" rx="2" ry="2" />
<text  x="706.77" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="920.9" y="2005" width="0.2" height="15.0" fill="rgb(205,147,50)" rx="2" ry="2" />
<text  x="923.87" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="691.8" y="1781" width="0.2" height="15.0" fill="rgb(247,212,42)" rx="2" ry="2" />
<text  x="694.80" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (5 samples, 0.08%)</title><rect x="841.5" y="1925" width="1.0" height="15.0" fill="rgb(206,22,26)" rx="2" ry="2" />
<text  x="844.52" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="77.0" y="1941" width="0.6" height="15.0" fill="rgb(209,225,35)" rx="2" ry="2" />
<text  x="79.98" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="751.2" y="1557" width="0.2" height="15.0" fill="rgb(247,14,32)" rx="2" ry="2" />
<text  x="754.21" y="1567.5" ></text>
</g>
<g >
<title>SYSC_getsockname (35 samples, 0.59%)</title><rect x="591.3" y="1877" width="7.0" height="15.0" fill="rgb(205,21,49)" rx="2" ry="2" />
<text  x="594.33" y="1887.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="732.5" y="1669" width="0.2" height="15.0" fill="rgb(220,16,37)" rx="2" ry="2" />
<text  x="735.47" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="1033.1" y="2053" width="0.4" height="15.0" fill="rgb(241,224,18)" rx="2" ry="2" />
<text  x="1036.11" y="2063.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="32.3" y="1957" width="0.4" height="15.0" fill="rgb(248,119,10)" rx="2" ry="2" />
<text  x="35.33" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="983.5" y="1957" width="0.2" height="15.0" fill="rgb(205,51,1)" rx="2" ry="2" />
<text  x="986.47" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="77.4" y="1781" width="0.2" height="15.0" fill="rgb(229,172,19)" rx="2" ry="2" />
<text  x="80.38" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="903.3" y="1941" width="0.2" height="15.0" fill="rgb(228,185,33)" rx="2" ry="2" />
<text  x="906.32" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="835.9" y="1893" width="3.2" height="15.0" fill="rgb(212,105,15)" rx="2" ry="2" />
<text  x="838.94" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="165.9" y="1957" width="0.4" height="15.0" fill="rgb(206,182,4)" rx="2" ry="2" />
<text  x="168.90" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (2 samples, 0.03%)</title><rect x="919.3" y="2005" width="0.4" height="15.0" fill="rgb(211,74,3)" rx="2" ry="2" />
<text  x="922.27" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="658.1" y="1669" width="0.2" height="15.0" fill="rgb(223,227,3)" rx="2" ry="2" />
<text  x="661.11" y="1679.5" ></text>
</g>
<g >
<title>malloc (28 samples, 0.47%)</title><rect x="1183.6" y="2053" width="5.6" height="15.0" fill="rgb(237,163,18)" rx="2" ry="2" />
<text  x="1186.62" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="915.3" y="1989" width="0.4" height="15.0" fill="rgb(242,55,43)" rx="2" ry="2" />
<text  x="918.28" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="891.4" y="1813" width="0.2" height="15.0" fill="rgb(248,3,54)" rx="2" ry="2" />
<text  x="894.36" y="1823.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="684.0" y="1925" width="0.2" height="15.0" fill="rgb(230,129,28)" rx="2" ry="2" />
<text  x="687.03" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="975.9" y="1973" width="0.2" height="15.0" fill="rgb(221,208,30)" rx="2" ry="2" />
<text  x="978.89" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (96 samples, 1.62%)</title><rect x="1073.8" y="1925" width="19.1" height="15.0" fill="rgb(231,118,53)" rx="2" ry="2" />
<text  x="1076.77" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="77.4" y="1877" width="0.2" height="15.0" fill="rgb(221,24,7)" rx="2" ry="2" />
<text  x="80.38" y="1887.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::socketToFd (1 samples, 0.02%)</title><rect x="30.3" y="1973" width="0.2" height="15.0" fill="rgb(230,118,8)" rx="2" ry="2" />
<text  x="33.33" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="379.2" y="1893" width="0.2" height="15.0" fill="rgb(233,190,27)" rx="2" ry="2" />
<text  x="382.21" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="556.8" y="1845" width="0.2" height="15.0" fill="rgb(217,135,24)" rx="2" ry="2" />
<text  x="559.84" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (25 samples, 0.42%)</title><rect x="159.7" y="2021" width="5.0" height="15.0" fill="rgb(235,88,14)" rx="2" ry="2" />
<text  x="162.72" y="2031.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="295.7" y="1669" width="0.2" height="15.0" fill="rgb(245,68,37)" rx="2" ry="2" />
<text  x="298.68" y="1679.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="689.8" y="1557" width="0.2" height="15.0" fill="rgb(213,209,13)" rx="2" ry="2" />
<text  x="692.81" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="534.1" y="1941" width="0.2" height="15.0" fill="rgb(224,5,13)" rx="2" ry="2" />
<text  x="537.11" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="228.1" y="1717" width="0.2" height="15.0" fill="rgb(244,2,42)" rx="2" ry="2" />
<text  x="231.10" y="1727.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="682.8" y="1909" width="0.8" height="15.0" fill="rgb(246,94,42)" rx="2" ry="2" />
<text  x="685.83" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1003.6" y="1957" width="0.2" height="15.0" fill="rgb(242,226,5)" rx="2" ry="2" />
<text  x="1006.60" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="924.7" y="1941" width="0.2" height="15.0" fill="rgb(225,112,47)" rx="2" ry="2" />
<text  x="927.65" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="99.1" y="1861" width="20.3" height="15.0" fill="rgb(228,220,16)" rx="2" ry="2" />
<text  x="102.11" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1181.6" y="1989" width="0.2" height="15.0" fill="rgb(248,207,32)" rx="2" ry="2" />
<text  x="1184.63" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="514.8" y="1973" width="0.2" height="15.0" fill="rgb(236,86,40)" rx="2" ry="2" />
<text  x="517.77" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="974.3" y="1957" width="0.2" height="15.0" fill="rgb(208,25,43)" rx="2" ry="2" />
<text  x="977.29" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1108.9" y="1717" width="0.2" height="15.0" fill="rgb(246,144,45)" rx="2" ry="2" />
<text  x="1111.86" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1003.6" y="1845" width="0.2" height="15.0" fill="rgb(225,81,11)" rx="2" ry="2" />
<text  x="1006.60" y="1855.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="401.9" y="1893" width="0.8" height="15.0" fill="rgb(228,94,45)" rx="2" ry="2" />
<text  x="404.94" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="489.9" y="1685" width="0.2" height="15.0" fill="rgb(212,36,38)" rx="2" ry="2" />
<text  x="492.85" y="1695.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="408.3" y="1605" width="0.2" height="15.0" fill="rgb(231,61,53)" rx="2" ry="2" />
<text  x="411.32" y="1615.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="906.3" y="1973" width="0.2" height="15.0" fill="rgb(245,190,52)" rx="2" ry="2" />
<text  x="909.31" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="69.8" y="1845" width="0.2" height="15.0" fill="rgb(240,182,27)" rx="2" ry="2" />
<text  x="72.81" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1061" width="14.6" height="15.0" fill="rgb(224,162,18)" rx="2" ry="2" />
<text  x="103.11" y="1071.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="689.8" y="1797" width="0.2" height="15.0" fill="rgb(228,207,31)" rx="2" ry="2" />
<text  x="692.81" y="1807.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="537.1" y="1957" width="0.2" height="15.0" fill="rgb(253,182,41)" rx="2" ry="2" />
<text  x="540.10" y="1967.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (5 samples, 0.08%)</title><rect x="67.4" y="1861" width="1.0" height="15.0" fill="rgb(224,176,7)" rx="2" ry="2" />
<text  x="70.42" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1148.5" y="2021" width="0.2" height="15.0" fill="rgb(245,209,1)" rx="2" ry="2" />
<text  x="1151.53" y="2031.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="894.2" y="1717" width="0.2" height="15.0" fill="rgb(209,30,39)" rx="2" ry="2" />
<text  x="897.15" y="1727.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="903.3" y="1701" width="0.2" height="15.0" fill="rgb(249,35,19)" rx="2" ry="2" />
<text  x="906.32" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="499.6" y="1845" width="0.6" height="15.0" fill="rgb(225,195,38)" rx="2" ry="2" />
<text  x="502.62" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (41 samples, 0.69%)</title><rect x="1112.8" y="1605" width="8.2" height="15.0" fill="rgb(226,184,15)" rx="2" ry="2" />
<text  x="1115.85" y="1615.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="877.6" y="1829" width="0.2" height="15.0" fill="rgb(218,154,24)" rx="2" ry="2" />
<text  x="880.61" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="645.4" y="1957" width="0.2" height="15.0" fill="rgb(228,229,52)" rx="2" ry="2" />
<text  x="648.35" y="1967.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (11 samples, 0.19%)</title><rect x="1122.8" y="1957" width="2.2" height="15.0" fill="rgb(235,213,27)" rx="2" ry="2" />
<text  x="1125.82" y="1967.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="970.7" y="2037" width="0.2" height="15.0" fill="rgb(232,57,20)" rx="2" ry="2" />
<text  x="973.71" y="2047.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (267 samples, 4.51%)</title><rect x="278.9" y="1861" width="53.3" height="15.0" fill="rgb(237,188,8)" rx="2" ry="2" />
<text  x="281.93" y="1871.5" >__tcp..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="546.5" y="1813" width="0.2" height="15.0" fill="rgb(242,183,29)" rx="2" ry="2" />
<text  x="549.47" y="1823.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="1057.2" y="2005" width="0.2" height="15.0" fill="rgb(242,57,3)" rx="2" ry="2" />
<text  x="1060.23" y="2015.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1136.0" y="2053" width="0.2" height="15.0" fill="rgb(224,4,16)" rx="2" ry="2" />
<text  x="1138.97" y="2063.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.08%)</title><rect x="185.6" y="2021" width="1.0" height="15.0" fill="rgb(249,91,43)" rx="2" ry="2" />
<text  x="188.63" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="931.6" y="1877" width="0.2" height="15.0" fill="rgb(248,92,4)" rx="2" ry="2" />
<text  x="934.63" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="897.3" y="1909" width="0.2" height="15.0" fill="rgb(227,134,38)" rx="2" ry="2" />
<text  x="900.34" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="746.0" y="1749" width="0.4" height="15.0" fill="rgb(225,161,40)" rx="2" ry="2" />
<text  x="749.03" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="154.5" y="1941" width="0.2" height="15.0" fill="rgb(233,226,54)" rx="2" ry="2" />
<text  x="157.53" y="1951.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="14.6" y="1893" width="0.8" height="15.0" fill="rgb(241,47,18)" rx="2" ry="2" />
<text  x="17.59" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="673.1" y="1893" width="0.2" height="15.0" fill="rgb(206,110,37)" rx="2" ry="2" />
<text  x="676.06" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="971.5" y="1909" width="0.2" height="15.0" fill="rgb(244,73,8)" rx="2" ry="2" />
<text  x="974.50" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="61.0" y="1877" width="0.6" height="15.0" fill="rgb(222,10,34)" rx="2" ry="2" />
<text  x="64.04" y="1887.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="326.0" y="1733" width="0.2" height="15.0" fill="rgb(237,44,5)" rx="2" ry="2" />
<text  x="328.98" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="657.9" y="1685" width="0.2" height="15.0" fill="rgb(232,103,24)" rx="2" ry="2" />
<text  x="660.91" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="276.7" y="1829" width="0.2" height="15.0" fill="rgb(220,90,8)" rx="2" ry="2" />
<text  x="279.74" y="1839.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="897.9" y="1973" width="0.2" height="15.0" fill="rgb(240,198,37)" rx="2" ry="2" />
<text  x="900.94" y="1983.5" ></text>
</g>
<g >
<title>kfree_skbmem (24 samples, 0.41%)</title><rect x="1074.0" y="1909" width="4.8" height="15.0" fill="rgb(238,119,18)" rx="2" ry="2" />
<text  x="1076.97" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="689.8" y="1685" width="0.2" height="15.0" fill="rgb(229,221,9)" rx="2" ry="2" />
<text  x="692.81" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="548.3" y="1829" width="0.2" height="15.0" fill="rgb(249,194,17)" rx="2" ry="2" />
<text  x="551.27" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="62.4" y="1861" width="0.2" height="15.0" fill="rgb(252,29,16)" rx="2" ry="2" />
<text  x="65.43" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="991.0" y="1877" width="0.2" height="15.0" fill="rgb(225,7,25)" rx="2" ry="2" />
<text  x="994.04" y="1887.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.03%)</title><rect x="841.7" y="1909" width="0.4" height="15.0" fill="rgb(232,17,17)" rx="2" ry="2" />
<text  x="844.72" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="571.4" y="1733" width="0.2" height="15.0" fill="rgb(248,44,29)" rx="2" ry="2" />
<text  x="574.39" y="1743.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="55.1" y="1941" width="0.4" height="15.0" fill="rgb(210,146,22)" rx="2" ry="2" />
<text  x="58.05" y="1951.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="409.1" y="1557" width="0.2" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="412.11" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (12 samples, 0.20%)</title><rect x="511.6" y="1989" width="2.4" height="15.0" fill="rgb(214,114,27)" rx="2" ry="2" />
<text  x="514.58" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="227.9" y="1957" width="0.4" height="15.0" fill="rgb(235,5,28)" rx="2" ry="2" />
<text  x="230.90" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1108.9" y="1893" width="0.2" height="15.0" fill="rgb(231,41,34)" rx="2" ry="2" />
<text  x="1111.86" y="1903.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="59.6" y="1893" width="0.4" height="15.0" fill="rgb(224,185,24)" rx="2" ry="2" />
<text  x="62.64" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="1163.3" y="2053" width="0.2" height="15.0" fill="rgb(212,98,34)" rx="2" ry="2" />
<text  x="1166.29" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="952.8" y="2021" width="0.8" height="15.0" fill="rgb(217,17,23)" rx="2" ry="2" />
<text  x="955.76" y="2031.5" ></text>
</g>
<g >
<title>fill_pte (1 samples, 0.02%)</title><rect x="610.5" y="1685" width="0.2" height="15.0" fill="rgb(221,220,6)" rx="2" ry="2" />
<text  x="613.47" y="1695.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="673.1" y="1877" width="0.2" height="15.0" fill="rgb(210,6,3)" rx="2" ry="2" />
<text  x="676.06" y="1887.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (6 samples, 0.10%)</title><rect x="512.2" y="1941" width="1.2" height="15.0" fill="rgb(242,95,18)" rx="2" ry="2" />
<text  x="515.18" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="320.4" y="1733" width="0.2" height="15.0" fill="rgb(236,205,31)" rx="2" ry="2" />
<text  x="323.40" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="272.8" y="1733" width="0.2" height="15.0" fill="rgb(254,14,49)" rx="2" ry="2" />
<text  x="275.75" y="1743.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="955.8" y="1973" width="0.2" height="15.0" fill="rgb(212,210,1)" rx="2" ry="2" />
<text  x="958.75" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="229.5" y="1765" width="0.2" height="15.0" fill="rgb(211,49,24)" rx="2" ry="2" />
<text  x="232.49" y="1775.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="14.6" y="1861" width="0.8" height="15.0" fill="rgb(213,110,36)" rx="2" ry="2" />
<text  x="17.59" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (11 samples, 0.19%)</title><rect x="222.3" y="1877" width="2.2" height="15.0" fill="rgb(217,83,26)" rx="2" ry="2" />
<text  x="225.32" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (17 samples, 0.29%)</title><rect x="1145.1" y="2021" width="3.4" height="15.0" fill="rgb(245,71,15)" rx="2" ry="2" />
<text  x="1148.14" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="878.4" y="1701" width="0.2" height="15.0" fill="rgb(237,216,13)" rx="2" ry="2" />
<text  x="881.40" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="113.9" y="53" width="0.2" height="15.0" fill="rgb(236,81,32)" rx="2" ry="2" />
<text  x="116.87" y="63.5" ></text>
</g>
<g >
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="800.5" y="1509" width="0.4" height="15.0" fill="rgb(233,229,47)" rx="2" ry="2" />
<text  x="803.45" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="693" width="14.2" height="15.0" fill="rgb(225,144,4)" rx="2" ry="2" />
<text  x="103.11" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.14%)</title><rect x="253.2" y="1877" width="1.6" height="15.0" fill="rgb(207,194,23)" rx="2" ry="2" />
<text  x="256.22" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="616.0" y="2037" width="0.2" height="15.0" fill="rgb(248,177,15)" rx="2" ry="2" />
<text  x="619.05" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.2" y="1845" width="0.2" height="15.0" fill="rgb(243,115,3)" rx="2" ry="2" />
<text  x="65.23" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1176.8" y="2005" width="0.2" height="15.0" fill="rgb(237,0,19)" rx="2" ry="2" />
<text  x="1179.84" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="298.1" y="1701" width="0.2" height="15.0" fill="rgb(242,128,14)" rx="2" ry="2" />
<text  x="301.07" y="1711.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="535.7" y="1973" width="0.2" height="15.0" fill="rgb(217,32,28)" rx="2" ry="2" />
<text  x="538.71" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="189.6" y="1829" width="0.4" height="15.0" fill="rgb(241,107,2)" rx="2" ry="2" />
<text  x="192.62" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1003.6" y="1941" width="0.2" height="15.0" fill="rgb(206,151,39)" rx="2" ry="2" />
<text  x="1006.60" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="246.0" y="1909" width="0.2" height="15.0" fill="rgb(205,114,19)" rx="2" ry="2" />
<text  x="249.04" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="546.5" y="1733" width="0.2" height="15.0" fill="rgb(227,114,46)" rx="2" ry="2" />
<text  x="549.47" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="159.5" y="1749" width="0.2" height="15.0" fill="rgb(238,17,54)" rx="2" ry="2" />
<text  x="162.52" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (8 samples, 0.14%)</title><rect x="956.6" y="2037" width="1.5" height="15.0" fill="rgb(207,16,1)" rx="2" ry="2" />
<text  x="959.55" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="76.0" y="1845" width="0.2" height="15.0" fill="rgb(244,191,13)" rx="2" ry="2" />
<text  x="78.99" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1112.4" y="1589" width="0.4" height="15.0" fill="rgb(239,140,13)" rx="2" ry="2" />
<text  x="1115.45" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1139.4" y="1829" width="0.2" height="15.0" fill="rgb(246,219,4)" rx="2" ry="2" />
<text  x="1142.36" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="159.5" y="1861" width="0.2" height="15.0" fill="rgb(234,224,51)" rx="2" ry="2" />
<text  x="162.52" y="1871.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (8 samples, 0.14%)</title><rect x="336.1" y="1925" width="1.6" height="15.0" fill="rgb(208,32,27)" rx="2" ry="2" />
<text  x="339.15" y="1935.5" ></text>
</g>
<g >
<title>move_addr_to_user (8 samples, 0.14%)</title><rect x="594.5" y="1861" width="1.6" height="15.0" fill="rgb(214,191,5)" rx="2" ry="2" />
<text  x="597.52" y="1871.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="920.7" y="1925" width="0.2" height="15.0" fill="rgb(223,159,52)" rx="2" ry="2" />
<text  x="923.67" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="482.3" y="1941" width="0.2" height="15.0" fill="rgb(223,202,50)" rx="2" ry="2" />
<text  x="485.28" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="691.4" y="1717" width="0.2" height="15.0" fill="rgb(221,34,34)" rx="2" ry="2" />
<text  x="694.41" y="1727.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="1108.9" y="1589" width="0.2" height="15.0" fill="rgb(223,216,49)" rx="2" ry="2" />
<text  x="1111.86" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="989.4" y="1845" width="0.2" height="15.0" fill="rgb(240,184,28)" rx="2" ry="2" />
<text  x="992.45" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (13 samples, 0.22%)</title><rect x="851.1" y="1909" width="2.6" height="15.0" fill="rgb(235,113,1)" rx="2" ry="2" />
<text  x="854.09" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (9 samples, 0.15%)</title><rect x="536.9" y="1973" width="1.8" height="15.0" fill="rgb(213,204,1)" rx="2" ry="2" />
<text  x="539.90" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="898.9" y="1861" width="0.2" height="15.0" fill="rgb(233,155,39)" rx="2" ry="2" />
<text  x="901.94" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="853.1" y="1877" width="0.6" height="15.0" fill="rgb(223,20,51)" rx="2" ry="2" />
<text  x="856.08" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="523.9" y="1941" width="0.4" height="15.0" fill="rgb(234,151,47)" rx="2" ry="2" />
<text  x="526.94" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="189.6" y="1909" width="0.4" height="15.0" fill="rgb(206,66,51)" rx="2" ry="2" />
<text  x="192.62" y="1919.5" ></text>
</g>
<g >
<title>tcp_close (392 samples, 6.62%)</title><rect x="747.8" y="1749" width="78.2" height="15.0" fill="rgb(228,9,35)" rx="2" ry="2" />
<text  x="750.82" y="1759.5" >tcp_close</text>
</g>
<g >
<title>__close (636 samples, 10.75%)</title><rect x="712.3" y="1909" width="126.8" height="15.0" fill="rgb(205,106,51)" rx="2" ry="2" />
<text  x="715.34" y="1919.5" >__close</text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="694.0" y="1765" width="0.4" height="15.0" fill="rgb(232,8,14)" rx="2" ry="2" />
<text  x="697.00" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="898.9" y="1957" width="0.2" height="15.0" fill="rgb(223,214,2)" rx="2" ry="2" />
<text  x="901.94" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="114.1" y="405" width="0.2" height="15.0" fill="rgb(205,3,22)" rx="2" ry="2" />
<text  x="117.06" y="415.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="648.3" y="2005" width="0.2" height="15.0" fill="rgb(207,151,51)" rx="2" ry="2" />
<text  x="651.34" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="58.6" y="1909" width="0.4" height="15.0" fill="rgb(244,121,36)" rx="2" ry="2" />
<text  x="61.64" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="186.6" y="2021" width="0.6" height="15.0" fill="rgb(235,58,5)" rx="2" ry="2" />
<text  x="189.63" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="23.8" y="2037" width="0.4" height="15.0" fill="rgb(229,100,24)" rx="2" ry="2" />
<text  x="26.76" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="922.1" y="1973" width="0.2" height="15.0" fill="rgb(220,14,33)" rx="2" ry="2" />
<text  x="925.06" y="1983.5" ></text>
</g>
<g >
<title>____fput (530 samples, 8.95%)</title><rect x="724.5" y="1829" width="105.7" height="15.0" fill="rgb(235,129,15)" rx="2" ry="2" />
<text  x="727.50" y="1839.5" >____fput</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="74.8" y="1925" width="0.2" height="15.0" fill="rgb(213,141,17)" rx="2" ry="2" />
<text  x="77.79" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20 samples, 0.34%)</title><rect x="392.8" y="1893" width="4.0" height="15.0" fill="rgb(213,140,33)" rx="2" ry="2" />
<text  x="395.77" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="856.3" y="1957" width="0.2" height="15.0" fill="rgb(227,127,16)" rx="2" ry="2" />
<text  x="859.27" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="783.5" y="1541" width="0.4" height="15.0" fill="rgb(210,75,47)" rx="2" ry="2" />
<text  x="786.51" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="185.0" y="1973" width="0.2" height="15.0" fill="rgb(232,26,32)" rx="2" ry="2" />
<text  x="188.04" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getPort (4 samples, 0.07%)</title><rect x="613.9" y="2021" width="0.8" height="15.0" fill="rgb(225,126,51)" rx="2" ry="2" />
<text  x="616.86" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="113.7" y="85" width="0.2" height="15.0" fill="rgb(214,57,15)" rx="2" ry="2" />
<text  x="116.67" y="95.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (3 samples, 0.05%)</title><rect x="76.2" y="1925" width="0.6" height="15.0" fill="rgb(225,72,39)" rx="2" ry="2" />
<text  x="79.19" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="645.4" y="1749" width="0.2" height="15.0" fill="rgb(209,167,46)" rx="2" ry="2" />
<text  x="648.35" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="997" width="14.4" height="15.0" fill="rgb(229,168,41)" rx="2" ry="2" />
<text  x="103.11" y="1007.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="763.2" y="1589" width="0.2" height="15.0" fill="rgb(206,102,2)" rx="2" ry="2" />
<text  x="766.17" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="957.7" y="1957" width="0.2" height="15.0" fill="rgb(233,13,2)" rx="2" ry="2" />
<text  x="960.75" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="229.5" y="1909" width="0.2" height="15.0" fill="rgb(245,154,11)" rx="2" ry="2" />
<text  x="232.49" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (7 samples, 0.12%)</title><rect x="851.7" y="1877" width="1.4" height="15.0" fill="rgb(251,37,8)" rx="2" ry="2" />
<text  x="854.69" y="1887.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.02%)</title><rect x="337.9" y="1957" width="0.2" height="15.0" fill="rgb(207,31,19)" rx="2" ry="2" />
<text  x="340.94" y="1967.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (61 samples, 1.03%)</title><rect x="1109.1" y="1925" width="12.1" height="15.0" fill="rgb(227,26,37)" rx="2" ry="2" />
<text  x="1112.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_push (267 samples, 4.51%)</title><rect x="278.9" y="1877" width="53.3" height="15.0" fill="rgb(235,30,23)" rx="2" ry="2" />
<text  x="281.93" y="1887.5" >tcp_p..</text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1062.2" y="1941" width="0.2" height="15.0" fill="rgb(245,106,52)" rx="2" ry="2" />
<text  x="1065.21" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (9 samples, 0.15%)</title><rect x="851.3" y="1893" width="1.8" height="15.0" fill="rgb(212,98,27)" rx="2" ry="2" />
<text  x="854.29" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1139.4" y="2037" width="0.2" height="15.0" fill="rgb(235,128,13)" rx="2" ry="2" />
<text  x="1142.36" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (1 samples, 0.02%)</title><rect x="39.1" y="1989" width="0.2" height="15.0" fill="rgb(253,193,49)" rx="2" ry="2" />
<text  x="42.11" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="763.2" y="1509" width="0.2" height="15.0" fill="rgb(242,106,1)" rx="2" ry="2" />
<text  x="766.17" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="897.3" y="1861" width="0.2" height="15.0" fill="rgb(241,111,33)" rx="2" ry="2" />
<text  x="900.34" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (2 samples, 0.03%)</title><rect x="162.1" y="1989" width="0.4" height="15.0" fill="rgb(233,141,6)" rx="2" ry="2" />
<text  x="165.11" y="1999.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="402.5" y="1845" width="0.2" height="15.0" fill="rgb(245,5,16)" rx="2" ry="2" />
<text  x="405.54" y="1855.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="236.7" y="2005" width="0.8" height="15.0" fill="rgb(224,72,12)" rx="2" ry="2" />
<text  x="239.67" y="2015.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="236.7" y="1925" width="0.8" height="15.0" fill="rgb(205,149,36)" rx="2" ry="2" />
<text  x="239.67" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (3 samples, 0.05%)</title><rect x="989.0" y="1909" width="0.6" height="15.0" fill="rgb(242,141,25)" rx="2" ry="2" />
<text  x="992.05" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="464.5" y="1685" width="0.2" height="15.0" fill="rgb(239,83,28)" rx="2" ry="2" />
<text  x="467.54" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1180.6" y="2005" width="0.4" height="15.0" fill="rgb(238,209,14)" rx="2" ry="2" />
<text  x="1183.63" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="396.4" y="1637" width="0.2" height="15.0" fill="rgb(207,42,11)" rx="2" ry="2" />
<text  x="399.36" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="688.8" y="1877" width="0.2" height="15.0" fill="rgb(246,177,50)" rx="2" ry="2" />
<text  x="691.81" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="657.9" y="1653" width="0.2" height="15.0" fill="rgb(244,185,41)" rx="2" ry="2" />
<text  x="660.91" y="1663.5" ></text>
</g>
<g >
<title>ip_finish_output (107 samples, 1.81%)</title><rect x="780.3" y="1621" width="21.4" height="15.0" fill="rgb(221,227,12)" rx="2" ry="2" />
<text  x="783.32" y="1631.5" >i..</text>
</g>
<g >
<title>sock_close (429 samples, 7.25%)</title><rect x="743.8" y="1797" width="85.6" height="15.0" fill="rgb(221,184,18)" rx="2" ry="2" />
<text  x="746.84" y="1807.5" >sock_close</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="284.9" y="1685" width="0.2" height="15.0" fill="rgb(205,113,7)" rx="2" ry="2" />
<text  x="287.91" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="569.4" y="1989" width="0.8" height="15.0" fill="rgb(233,67,8)" rx="2" ry="2" />
<text  x="572.40" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="484.3" y="1989" width="0.2" height="15.0" fill="rgb(205,24,51)" rx="2" ry="2" />
<text  x="487.27" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="248.8" y="1541" width="0.2" height="15.0" fill="rgb(220,156,8)" rx="2" ry="2" />
<text  x="251.83" y="1551.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (2 samples, 0.03%)</title><rect x="965.3" y="2005" width="0.4" height="15.0" fill="rgb(244,101,54)" rx="2" ry="2" />
<text  x="968.32" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="924.9" y="1941" width="0.2" height="15.0" fill="rgb(218,126,23)" rx="2" ry="2" />
<text  x="927.85" y="1951.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="993.4" y="1989" width="0.4" height="15.0" fill="rgb(243,199,9)" rx="2" ry="2" />
<text  x="996.43" y="1999.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1120.2" y="1509" width="0.2" height="15.0" fill="rgb(238,188,54)" rx="2" ry="2" />
<text  x="1123.22" y="1519.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="971.5" y="1733" width="0.2" height="15.0" fill="rgb(226,47,3)" rx="2" ry="2" />
<text  x="974.50" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="878.4" y="1861" width="0.2" height="15.0" fill="rgb(206,3,26)" rx="2" ry="2" />
<text  x="881.40" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="312.2" y="1637" width="0.2" height="15.0" fill="rgb(209,65,16)" rx="2" ry="2" />
<text  x="315.23" y="1647.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="657.9" y="1637" width="0.2" height="15.0" fill="rgb(246,31,14)" rx="2" ry="2" />
<text  x="660.91" y="1647.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.08%)</title><rect x="93.5" y="1973" width="1.0" height="15.0" fill="rgb(230,62,52)" rx="2" ry="2" />
<text  x="96.53" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.08%)</title><rect x="93.5" y="2005" width="1.0" height="15.0" fill="rgb(251,45,20)" rx="2" ry="2" />
<text  x="96.53" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="408.3" y="1733" width="0.2" height="15.0" fill="rgb(242,91,9)" rx="2" ry="2" />
<text  x="411.32" y="1743.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (11 samples, 0.19%)</title><rect x="367.1" y="1941" width="2.1" height="15.0" fill="rgb(224,225,30)" rx="2" ry="2" />
<text  x="370.05" y="1951.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="573.2" y="1973" width="0.4" height="15.0" fill="rgb(230,180,40)" rx="2" ry="2" />
<text  x="576.19" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="62.8" y="1861" width="0.2" height="15.0" fill="rgb(236,23,5)" rx="2" ry="2" />
<text  x="65.83" y="1871.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="548.3" y="1973" width="0.2" height="15.0" fill="rgb(224,54,50)" rx="2" ry="2" />
<text  x="551.27" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="571.4" y="1957" width="0.6" height="15.0" fill="rgb(246,157,46)" rx="2" ry="2" />
<text  x="574.39" y="1967.5" ></text>
</g>
<g >
<title>skb_entail (6 samples, 0.10%)</title><rect x="276.9" y="1877" width="1.2" height="15.0" fill="rgb(249,169,32)" rx="2" ry="2" />
<text  x="279.94" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="474.9" y="1877" width="0.2" height="15.0" fill="rgb(242,132,37)" rx="2" ry="2" />
<text  x="477.90" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="74.2" y="1941" width="0.2" height="15.0" fill="rgb(211,116,38)" rx="2" ry="2" />
<text  x="77.19" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="409.1" y="1573" width="0.2" height="15.0" fill="rgb(250,0,4)" rx="2" ry="2" />
<text  x="412.11" y="1583.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="312.8" y="1653" width="0.2" height="15.0" fill="rgb(207,224,15)" rx="2" ry="2" />
<text  x="315.82" y="1663.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="903.1" y="1909" width="0.2" height="15.0" fill="rgb(238,90,5)" rx="2" ry="2" />
<text  x="906.12" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (7 samples, 0.12%)</title><rect x="649.7" y="2037" width="1.4" height="15.0" fill="rgb(239,124,14)" rx="2" ry="2" />
<text  x="652.74" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="223.9" y="1781" width="0.2" height="15.0" fill="rgb(243,183,32)" rx="2" ry="2" />
<text  x="226.91" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="756.8" y="1605" width="0.2" height="15.0" fill="rgb(242,70,20)" rx="2" ry="2" />
<text  x="759.80" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="47.7" y="1941" width="1.2" height="15.0" fill="rgb(212,217,37)" rx="2" ry="2" />
<text  x="50.68" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (41 samples, 0.69%)</title><rect x="1112.8" y="1557" width="8.2" height="15.0" fill="rgb(253,112,0)" rx="2" ry="2" />
<text  x="1115.85" y="1567.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenlessSlotValue (1 samples, 0.02%)</title><rect x="161.7" y="1989" width="0.2" height="15.0" fill="rgb(214,147,26)" rx="2" ry="2" />
<text  x="164.71" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1022.9" y="1925" width="0.4" height="15.0" fill="rgb(222,151,10)" rx="2" ry="2" />
<text  x="1025.94" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="15.4" y="2021" width="0.2" height="15.0" fill="rgb(238,181,6)" rx="2" ry="2" />
<text  x="18.38" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="994.0" y="1957" width="0.2" height="15.0" fill="rgb(216,112,32)" rx="2" ry="2" />
<text  x="997.03" y="1967.5" ></text>
</g>
<g >
<title>accept4 (5 samples, 0.08%)</title><rect x="25.7" y="2005" width="1.0" height="15.0" fill="rgb(231,59,6)" rx="2" ry="2" />
<text  x="28.75" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (3 samples, 0.05%)</title><rect x="1145.7" y="1989" width="0.6" height="15.0" fill="rgb(226,77,36)" rx="2" ry="2" />
<text  x="1148.74" y="1999.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="820.8" y="1429" width="0.2" height="15.0" fill="rgb(226,115,38)" rx="2" ry="2" />
<text  x="823.79" y="1439.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1003.6" y="1669" width="0.2" height="15.0" fill="rgb(251,6,53)" rx="2" ry="2" />
<text  x="1006.60" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="572.8" y="1941" width="0.2" height="15.0" fill="rgb(219,1,30)" rx="2" ry="2" />
<text  x="575.79" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="612.7" y="2005" width="0.2" height="15.0" fill="rgb(240,100,29)" rx="2" ry="2" />
<text  x="615.66" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="62.8" y="1941" width="0.2" height="15.0" fill="rgb(233,31,46)" rx="2" ry="2" />
<text  x="65.83" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="704.4" y="1877" width="0.6" height="15.0" fill="rgb(224,130,22)" rx="2" ry="2" />
<text  x="707.36" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="76.4" y="1909" width="0.4" height="15.0" fill="rgb(251,37,34)" rx="2" ry="2" />
<text  x="79.39" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="994.0" y="1973" width="0.4" height="15.0" fill="rgb(224,101,19)" rx="2" ry="2" />
<text  x="997.03" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (3 samples, 0.05%)</title><rect x="858.3" y="1989" width="0.6" height="15.0" fill="rgb(247,149,26)" rx="2" ry="2" />
<text  x="861.27" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="464.5" y="1813" width="0.2" height="15.0" fill="rgb(227,166,34)" rx="2" ry="2" />
<text  x="467.54" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="91.5" y="2021" width="0.2" height="15.0" fill="rgb(228,208,5)" rx="2" ry="2" />
<text  x="94.54" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (6 samples, 0.10%)</title><rect x="292.1" y="1541" width="1.2" height="15.0" fill="rgb(253,128,13)" rx="2" ry="2" />
<text  x="295.09" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (30 samples, 0.51%)</title><rect x="1170.9" y="2021" width="5.9" height="15.0" fill="rgb(246,68,4)" rx="2" ry="2" />
<text  x="1173.86" y="2031.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="896.7" y="1957" width="0.2" height="15.0" fill="rgb(222,100,50)" rx="2" ry="2" />
<text  x="899.74" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1188.4" y="1925" width="0.8" height="15.0" fill="rgb(209,29,2)" rx="2" ry="2" />
<text  x="1191.41" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="852.7" y="1845" width="0.4" height="15.0" fill="rgb(243,133,37)" rx="2" ry="2" />
<text  x="855.69" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="657.9" y="1765" width="0.2" height="15.0" fill="rgb(229,31,37)" rx="2" ry="2" />
<text  x="660.91" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="917.9" y="1813" width="0.2" height="15.0" fill="rgb(249,85,9)" rx="2" ry="2" />
<text  x="920.88" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="505.8" y="1861" width="0.4" height="15.0" fill="rgb(237,63,14)" rx="2" ry="2" />
<text  x="508.80" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="290.9" y="1541" width="0.8" height="15.0" fill="rgb(216,133,4)" rx="2" ry="2" />
<text  x="293.90" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="857.5" y="1957" width="0.2" height="15.0" fill="rgb(229,16,47)" rx="2" ry="2" />
<text  x="860.47" y="1967.5" ></text>
</g>
<g >
<title>epoll_ctl (357 samples, 6.03%)</title><rect x="416.5" y="2037" width="71.2" height="15.0" fill="rgb(208,36,11)" rx="2" ry="2" />
<text  x="419.49" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="474.7" y="1925" width="0.2" height="15.0" fill="rgb(205,204,30)" rx="2" ry="2" />
<text  x="477.70" y="1935.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="33.3" y="1893" width="0.2" height="15.0" fill="rgb(216,35,6)" rx="2" ry="2" />
<text  x="36.32" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="657.9" y="1861" width="0.2" height="15.0" fill="rgb(205,62,45)" rx="2" ry="2" />
<text  x="660.91" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1182.0" y="1957" width="0.2" height="15.0" fill="rgb(230,35,51)" rx="2" ry="2" />
<text  x="1185.03" y="1967.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="248.8" y="1573" width="0.2" height="15.0" fill="rgb(211,66,43)" rx="2" ry="2" />
<text  x="251.83" y="1583.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="292.9" y="1365" width="0.4" height="15.0" fill="rgb(208,159,30)" rx="2" ry="2" />
<text  x="295.89" y="1375.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1173.9" y="1909" width="0.2" height="15.0" fill="rgb(229,28,4)" rx="2" ry="2" />
<text  x="1176.85" y="1919.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="965.5" y="1989" width="0.2" height="15.0" fill="rgb(238,213,23)" rx="2" ry="2" />
<text  x="968.52" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="754.8" y="1733" width="0.6" height="15.0" fill="rgb(236,101,26)" rx="2" ry="2" />
<text  x="757.80" y="1743.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="580.2" y="1973" width="0.2" height="15.0" fill="rgb(205,212,53)" rx="2" ry="2" />
<text  x="583.16" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (41 samples, 0.69%)</title><rect x="1112.8" y="1637" width="8.2" height="15.0" fill="rgb(238,99,45)" rx="2" ry="2" />
<text  x="1115.85" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="843.9" y="1893" width="0.4" height="15.0" fill="rgb(208,80,52)" rx="2" ry="2" />
<text  x="846.91" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (16 samples, 0.27%)</title><rect x="655.1" y="1957" width="3.2" height="15.0" fill="rgb(246,101,10)" rx="2" ry="2" />
<text  x="658.12" y="1967.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="657.9" y="1605" width="0.2" height="15.0" fill="rgb(249,196,31)" rx="2" ry="2" />
<text  x="660.91" y="1615.5" ></text>
</g>
<g >
<title>fput (7 samples, 0.12%)</title><rect x="476.5" y="1973" width="1.4" height="15.0" fill="rgb(225,58,5)" rx="2" ry="2" />
<text  x="479.50" y="1983.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="332.2" y="1877" width="0.4" height="15.0" fill="rgb(214,213,40)" rx="2" ry="2" />
<text  x="335.16" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="635.6" y="1973" width="0.2" height="15.0" fill="rgb(244,23,52)" rx="2" ry="2" />
<text  x="638.59" y="1983.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="474.9" y="1845" width="0.2" height="15.0" fill="rgb(219,112,31)" rx="2" ry="2" />
<text  x="477.90" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="704.2" y="1909" width="0.2" height="15.0" fill="rgb(247,205,42)" rx="2" ry="2" />
<text  x="707.16" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1381" width="15.4" height="15.0" fill="rgb(250,105,8)" rx="2" ry="2" />
<text  x="102.71" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="530.9" y="1957" width="0.2" height="15.0" fill="rgb(210,165,33)" rx="2" ry="2" />
<text  x="533.92" y="1967.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (2 samples, 0.03%)</title><rect x="642.4" y="1989" width="0.4" height="15.0" fill="rgb(205,78,35)" rx="2" ry="2" />
<text  x="645.36" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="625.0" y="2005" width="0.4" height="15.0" fill="rgb(211,105,48)" rx="2" ry="2" />
<text  x="628.02" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1176.4" y="2005" width="0.4" height="15.0" fill="rgb(248,167,12)" rx="2" ry="2" />
<text  x="1179.44" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="284.9" y="1525" width="0.2" height="15.0" fill="rgb(219,1,12)" rx="2" ry="2" />
<text  x="287.91" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="489.9" y="1781" width="0.2" height="15.0" fill="rgb(244,121,47)" rx="2" ry="2" />
<text  x="492.85" y="1791.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="121.0" y="1957" width="0.2" height="15.0" fill="rgb(247,129,9)" rx="2" ry="2" />
<text  x="124.04" y="1967.5" ></text>
</g>
<g >
<title>d_instantiate (6 samples, 0.10%)</title><rect x="409.3" y="1941" width="1.2" height="15.0" fill="rgb(210,126,24)" rx="2" ry="2" />
<text  x="412.31" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="286.5" y="1781" width="0.2" height="15.0" fill="rgb(250,213,38)" rx="2" ry="2" />
<text  x="289.51" y="1791.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="600.7" y="1973" width="0.2" height="15.0" fill="rgb(208,109,33)" rx="2" ry="2" />
<text  x="603.70" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (13 samples, 0.22%)</title><rect x="895.5" y="1989" width="2.6" height="15.0" fill="rgb(246,74,3)" rx="2" ry="2" />
<text  x="898.55" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_locked (1 samples, 0.02%)</title><rect x="292.7" y="1429" width="0.2" height="15.0" fill="rgb(206,116,14)" rx="2" ry="2" />
<text  x="295.69" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="906.9" y="2005" width="0.4" height="15.0" fill="rgb(216,215,25)" rx="2" ry="2" />
<text  x="909.91" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="884.8" y="1941" width="0.2" height="15.0" fill="rgb(211,212,16)" rx="2" ry="2" />
<text  x="887.78" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="546.5" y="1861" width="0.2" height="15.0" fill="rgb(245,214,0)" rx="2" ry="2" />
<text  x="549.47" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1557" width="0.2" height="15.0" fill="rgb(244,97,25)" rx="2" ry="2" />
<text  x="906.32" y="1567.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (7 samples, 0.12%)</title><rect x="1012.2" y="1973" width="1.4" height="15.0" fill="rgb(231,24,24)" rx="2" ry="2" />
<text  x="1015.17" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="969.1" y="1989" width="0.2" height="15.0" fill="rgb(215,172,26)" rx="2" ry="2" />
<text  x="972.11" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1041.5" y="2021" width="0.2" height="15.0" fill="rgb(249,203,45)" rx="2" ry="2" />
<text  x="1044.48" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="527.9" y="1989" width="1.6" height="15.0" fill="rgb(232,163,34)" rx="2" ry="2" />
<text  x="530.93" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="135.8" y="1893" width="0.2" height="15.0" fill="rgb(210,184,17)" rx="2" ry="2" />
<text  x="138.79" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="617.4" y="1957" width="0.2" height="15.0" fill="rgb(252,35,3)" rx="2" ry="2" />
<text  x="620.44" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (3 samples, 0.05%)</title><rect x="88.9" y="2005" width="0.6" height="15.0" fill="rgb(230,131,29)" rx="2" ry="2" />
<text  x="91.95" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="767.4" y="1589" width="0.2" height="15.0" fill="rgb(216,83,11)" rx="2" ry="2" />
<text  x="770.36" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="989.4" y="1781" width="0.2" height="15.0" fill="rgb(231,50,40)" rx="2" ry="2" />
<text  x="992.45" y="1791.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenlessSlotValue (1 samples, 0.02%)</title><rect x="160.7" y="2005" width="0.2" height="15.0" fill="rgb(253,120,11)" rx="2" ry="2" />
<text  x="163.71" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="968.3" y="2037" width="1.0" height="15.0" fill="rgb(226,196,25)" rx="2" ry="2" />
<text  x="971.31" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="648.3" y="1989" width="0.2" height="15.0" fill="rgb(235,197,53)" rx="2" ry="2" />
<text  x="651.34" y="1999.5" ></text>
</g>
<g >
<title>tcp_poll (16 samples, 0.27%)</title><rect x="457.4" y="1941" width="3.1" height="15.0" fill="rgb(250,112,0)" rx="2" ry="2" />
<text  x="460.36" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (21 samples, 0.35%)</title><rect x="544.5" y="1989" width="4.2" height="15.0" fill="rgb(219,92,12)" rx="2" ry="2" />
<text  x="547.48" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="92.3" y="1893" width="0.2" height="15.0" fill="rgb(235,20,35)" rx="2" ry="2" />
<text  x="95.33" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1022.9" y="1957" width="0.4" height="15.0" fill="rgb(213,150,17)" rx="2" ry="2" />
<text  x="1025.94" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_bit (2 samples, 0.03%)</title><rect x="730.9" y="1701" width="0.4" height="15.0" fill="rgb(251,65,0)" rx="2" ry="2" />
<text  x="733.88" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="92.3" y="1925" width="0.2" height="15.0" fill="rgb(209,220,9)" rx="2" ry="2" />
<text  x="95.33" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (25 samples, 0.42%)</title><rect x="927.6" y="1909" width="5.0" height="15.0" fill="rgb(213,148,31)" rx="2" ry="2" />
<text  x="930.64" y="1919.5" ></text>
</g>
<g >
<title>__fdget (19 samples, 0.32%)</title><rect x="1125.2" y="1957" width="3.8" height="15.0" fill="rgb(232,29,27)" rx="2" ry="2" />
<text  x="1128.21" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="528.9" y="1845" width="0.2" height="15.0" fill="rgb(253,138,45)" rx="2" ry="2" />
<text  x="531.93" y="1855.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1119.4" y="1477" width="0.4" height="15.0" fill="rgb(235,191,44)" rx="2" ry="2" />
<text  x="1122.43" y="1487.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 0.02%)</title><rect x="362.9" y="1957" width="0.2" height="15.0" fill="rgb(223,10,33)" rx="2" ry="2" />
<text  x="365.86" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="689.8" y="1573" width="0.2" height="15.0" fill="rgb(216,130,2)" rx="2" ry="2" />
<text  x="692.81" y="1583.5" ></text>
</g>
<g >
<title>inet_recvmsg (299 samples, 5.05%)</title><rect x="1063.2" y="1957" width="59.6" height="15.0" fill="rgb(211,148,26)" rx="2" ry="2" />
<text  x="1066.21" y="1967.5" >inet_r..</text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="189.6" y="1973" width="0.4" height="15.0" fill="rgb(238,182,13)" rx="2" ry="2" />
<text  x="192.62" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="145.6" y="1701" width="0.2" height="15.0" fill="rgb(205,174,26)" rx="2" ry="2" />
<text  x="148.56" y="1711.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="665.1" y="1861" width="0.2" height="15.0" fill="rgb(223,203,52)" rx="2" ry="2" />
<text  x="668.09" y="1871.5" ></text>
</g>
<g >
<title>skb_free_head (19 samples, 0.32%)</title><rect x="1115.6" y="1461" width="3.8" height="15.0" fill="rgb(245,20,50)" rx="2" ry="2" />
<text  x="1118.64" y="1471.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="1178.4" y="2037" width="1.8" height="15.0" fill="rgb(235,140,32)" rx="2" ry="2" />
<text  x="1181.44" y="2047.5" ></text>
</g>
<g >
<title>__GI___setsockopt (8 samples, 0.14%)</title><rect x="1165.5" y="2037" width="1.6" height="15.0" fill="rgb(250,152,50)" rx="2" ry="2" />
<text  x="1168.48" y="2047.5" ></text>
</g>
<g >
<title>__fdget (7 samples, 0.12%)</title><rect x="411.7" y="1941" width="1.4" height="15.0" fill="rgb(243,83,22)" rx="2" ry="2" />
<text  x="414.71" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1109" width="14.6" height="15.0" fill="rgb(216,35,1)" rx="2" ry="2" />
<text  x="103.11" y="1119.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="544.3" y="1989" width="0.2" height="15.0" fill="rgb(215,205,33)" rx="2" ry="2" />
<text  x="547.28" y="1999.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1032.9" y="2053" width="0.2" height="15.0" fill="rgb(234,121,34)" rx="2" ry="2" />
<text  x="1035.91" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="291.1" y="1477" width="0.4" height="15.0" fill="rgb(210,138,33)" rx="2" ry="2" />
<text  x="294.09" y="1487.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="975.3" y="2005" width="0.4" height="15.0" fill="rgb(232,163,53)" rx="2" ry="2" />
<text  x="978.29" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="73.8" y="1941" width="0.2" height="15.0" fill="rgb(212,31,22)" rx="2" ry="2" />
<text  x="76.79" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (7 samples, 0.12%)</title><rect x="165.1" y="2005" width="1.4" height="15.0" fill="rgb(226,112,17)" rx="2" ry="2" />
<text  x="168.10" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="409.1" y="1653" width="0.2" height="15.0" fill="rgb(251,203,4)" rx="2" ry="2" />
<text  x="412.11" y="1663.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="236.7" y="1957" width="0.8" height="15.0" fill="rgb(209,175,49)" rx="2" ry="2" />
<text  x="239.67" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="62.8" y="1877" width="0.2" height="15.0" fill="rgb(236,89,2)" rx="2" ry="2" />
<text  x="65.83" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="933.2" y="1925" width="0.2" height="15.0" fill="rgb(218,228,54)" rx="2" ry="2" />
<text  x="936.23" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="462.9" y="1957" width="0.4" height="15.0" fill="rgb(218,145,8)" rx="2" ry="2" />
<text  x="465.94" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="974.3" y="1973" width="0.2" height="15.0" fill="rgb(231,21,2)" rx="2" ry="2" />
<text  x="977.29" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="658.1" y="1813" width="0.2" height="15.0" fill="rgb(240,227,2)" rx="2" ry="2" />
<text  x="661.11" y="1823.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="291.3" y="1429" width="0.2" height="15.0" fill="rgb(210,228,18)" rx="2" ry="2" />
<text  x="294.29" y="1439.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="975.9" y="1941" width="0.2" height="15.0" fill="rgb(234,106,4)" rx="2" ry="2" />
<text  x="978.89" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (13 samples, 0.22%)</title><rect x="958.1" y="2037" width="2.6" height="15.0" fill="rgb(250,91,11)" rx="2" ry="2" />
<text  x="961.15" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="138.6" y="1733" width="0.2" height="15.0" fill="rgb(240,130,31)" rx="2" ry="2" />
<text  x="141.59" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="530.9" y="1893" width="0.2" height="15.0" fill="rgb(244,172,1)" rx="2" ry="2" />
<text  x="533.92" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="835.3" y="1829" width="0.2" height="15.0" fill="rgb(205,228,37)" rx="2" ry="2" />
<text  x="838.34" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="227.3" y="1925" width="0.2" height="15.0" fill="rgb(237,28,21)" rx="2" ry="2" />
<text  x="230.30" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="421" width="14.0" height="15.0" fill="rgb(246,10,10)" rx="2" ry="2" />
<text  x="103.11" y="431.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (3 samples, 0.05%)</title><rect x="207.0" y="1957" width="0.6" height="15.0" fill="rgb(221,87,4)" rx="2" ry="2" />
<text  x="209.97" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="756.8" y="1589" width="0.2" height="15.0" fill="rgb(225,108,33)" rx="2" ry="2" />
<text  x="759.80" y="1599.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="329.8" y="1653" width="0.2" height="15.0" fill="rgb(212,167,44)" rx="2" ry="2" />
<text  x="332.77" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="76.0" y="1909" width="0.2" height="15.0" fill="rgb(241,104,49)" rx="2" ry="2" />
<text  x="78.99" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="320.2" y="1669" width="0.2" height="15.0" fill="rgb(215,21,35)" rx="2" ry="2" />
<text  x="323.20" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="189.6" y="1989" width="0.4" height="15.0" fill="rgb(242,185,33)" rx="2" ry="2" />
<text  x="192.62" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.14%)</title><rect x="698.6" y="2005" width="1.6" height="15.0" fill="rgb(207,124,25)" rx="2" ry="2" />
<text  x="701.58" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1112.4" y="1541" width="0.4" height="15.0" fill="rgb(217,8,5)" rx="2" ry="2" />
<text  x="1115.45" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="914.3" y="1973" width="0.4" height="15.0" fill="rgb(248,36,45)" rx="2" ry="2" />
<text  x="917.29" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="138.6" y="1557" width="0.2" height="15.0" fill="rgb(235,90,40)" rx="2" ry="2" />
<text  x="141.59" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="919.7" y="2037" width="0.2" height="15.0" fill="rgb(238,37,5)" rx="2" ry="2" />
<text  x="922.67" y="2047.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="847.5" y="1605" width="0.2" height="15.0" fill="rgb(232,60,1)" rx="2" ry="2" />
<text  x="850.50" y="1615.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="610.1" y="1733" width="0.2" height="15.0" fill="rgb(211,131,12)" rx="2" ry="2" />
<text  x="613.07" y="1743.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="272.4" y="1813" width="0.2" height="15.0" fill="rgb(215,48,37)" rx="2" ry="2" />
<text  x="275.36" y="1823.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="98.1" y="2037" width="0.2" height="15.0" fill="rgb(220,149,47)" rx="2" ry="2" />
<text  x="101.12" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="862.9" y="1941" width="0.4" height="15.0" fill="rgb(231,170,5)" rx="2" ry="2" />
<text  x="865.85" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="618.8" y="1941" width="0.6" height="15.0" fill="rgb(245,21,23)" rx="2" ry="2" />
<text  x="621.84" y="1951.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="596.3" y="1749" width="0.2" height="15.0" fill="rgb(243,60,54)" rx="2" ry="2" />
<text  x="599.31" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="891.4" y="1877" width="0.2" height="15.0" fill="rgb(247,55,40)" rx="2" ry="2" />
<text  x="894.36" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="669.3" y="1909" width="0.8" height="15.0" fill="rgb(227,148,47)" rx="2" ry="2" />
<text  x="672.28" y="1919.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.02%)</title><rect x="730.7" y="1701" width="0.2" height="15.0" fill="rgb(209,59,34)" rx="2" ry="2" />
<text  x="733.68" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="575.6" y="1957" width="0.4" height="15.0" fill="rgb(250,77,9)" rx="2" ry="2" />
<text  x="578.58" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="957.7" y="1733" width="0.2" height="15.0" fill="rgb(221,104,40)" rx="2" ry="2" />
<text  x="960.75" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="92.1" y="1877" width="0.2" height="15.0" fill="rgb(236,210,1)" rx="2" ry="2" />
<text  x="95.14" y="1887.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="546.5" y="1669" width="0.2" height="15.0" fill="rgb(241,47,42)" rx="2" ry="2" />
<text  x="549.47" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (5 samples, 0.08%)</title><rect x="81.0" y="1925" width="1.0" height="15.0" fill="rgb(230,86,18)" rx="2" ry="2" />
<text  x="83.97" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="409.1" y="1637" width="0.2" height="15.0" fill="rgb(223,112,29)" rx="2" ry="2" />
<text  x="412.11" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="969.1" y="1909" width="0.2" height="15.0" fill="rgb(241,216,23)" rx="2" ry="2" />
<text  x="972.11" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="245.2" y="1957" width="0.8" height="15.0" fill="rgb(217,90,12)" rx="2" ry="2" />
<text  x="248.24" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.05%)</title><rect x="1175.8" y="2005" width="0.6" height="15.0" fill="rgb(219,148,42)" rx="2" ry="2" />
<text  x="1178.85" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="857.5" y="1941" width="0.2" height="15.0" fill="rgb(227,185,41)" rx="2" ry="2" />
<text  x="860.47" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="842.1" y="1909" width="0.4" height="15.0" fill="rgb(239,168,31)" rx="2" ry="2" />
<text  x="845.12" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="489.9" y="1749" width="0.2" height="15.0" fill="rgb(220,20,8)" rx="2" ry="2" />
<text  x="492.85" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1188.4" y="2037" width="0.8" height="15.0" fill="rgb(205,134,13)" rx="2" ry="2" />
<text  x="1191.41" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="855.9" y="1925" width="0.2" height="15.0" fill="rgb(226,213,25)" rx="2" ry="2" />
<text  x="858.88" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1098.1" y="1893" width="0.2" height="15.0" fill="rgb(232,23,28)" rx="2" ry="2" />
<text  x="1101.10" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (9 samples, 0.15%)</title><rect x="1123.2" y="1925" width="1.8" height="15.0" fill="rgb(213,14,38)" rx="2" ry="2" />
<text  x="1126.22" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="683.8" y="1589" width="0.2" height="15.0" fill="rgb(239,59,52)" rx="2" ry="2" />
<text  x="686.83" y="1599.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="648.5" y="2005" width="0.2" height="15.0" fill="rgb(241,134,29)" rx="2" ry="2" />
<text  x="651.54" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="561.2" y="1973" width="1.0" height="15.0" fill="rgb(210,92,8)" rx="2" ry="2" />
<text  x="564.22" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="524.3" y="1957" width="0.2" height="15.0" fill="rgb(242,129,42)" rx="2" ry="2" />
<text  x="527.34" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="645.4" y="1989" width="0.2" height="15.0" fill="rgb(226,225,12)" rx="2" ry="2" />
<text  x="648.35" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (107 samples, 1.81%)</title><rect x="676.5" y="2005" width="21.3" height="15.0" fill="rgb(212,93,32)" rx="2" ry="2" />
<text  x="679.45" y="2015.5" >f..</text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="408.3" y="1509" width="0.2" height="15.0" fill="rgb(244,84,12)" rx="2" ry="2" />
<text  x="411.32" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="286.5" y="1701" width="0.2" height="15.0" fill="rgb(248,136,23)" rx="2" ry="2" />
<text  x="289.51" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="704.0" y="1989" width="0.4" height="15.0" fill="rgb(239,182,1)" rx="2" ry="2" />
<text  x="706.97" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (30 samples, 0.51%)</title><rect x="306.6" y="1653" width="6.0" height="15.0" fill="rgb(220,117,52)" rx="2" ry="2" />
<text  x="309.64" y="1663.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="120.2" y="1925" width="0.2" height="15.0" fill="rgb(216,64,2)" rx="2" ry="2" />
<text  x="123.24" y="1935.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="991.8" y="1893" width="0.2" height="15.0" fill="rgb(224,42,10)" rx="2" ry="2" />
<text  x="994.84" y="1903.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="691.4" y="1557" width="0.2" height="15.0" fill="rgb(242,119,9)" rx="2" ry="2" />
<text  x="694.41" y="1567.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.02%)</title><rect x="476.3" y="1973" width="0.2" height="15.0" fill="rgb(239,58,0)" rx="2" ry="2" />
<text  x="479.30" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="957.7" y="1813" width="0.2" height="15.0" fill="rgb(237,25,18)" rx="2" ry="2" />
<text  x="960.75" y="1823.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="59.8" y="1845" width="0.2" height="15.0" fill="rgb(240,226,33)" rx="2" ry="2" />
<text  x="62.84" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::socketToFd (1 samples, 0.02%)</title><rect x="31.9" y="1989" width="0.2" height="15.0" fill="rgb(244,40,40)" rx="2" ry="2" />
<text  x="34.93" y="1999.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (4 samples, 0.07%)</title><rect x="1169.9" y="2037" width="0.8" height="15.0" fill="rgb(222,195,8)" rx="2" ry="2" />
<text  x="1172.86" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="889.4" y="1925" width="0.2" height="15.0" fill="rgb(236,153,6)" rx="2" ry="2" />
<text  x="892.37" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="886.4" y="1909" width="0.4" height="15.0" fill="rgb(205,74,51)" rx="2" ry="2" />
<text  x="889.38" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="325.6" y="1749" width="0.6" height="15.0" fill="rgb(206,58,51)" rx="2" ry="2" />
<text  x="328.58" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="126.2" y="1925" width="0.2" height="15.0" fill="rgb(254,229,52)" rx="2" ry="2" />
<text  x="129.23" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="92.1" y="1973" width="0.2" height="15.0" fill="rgb(211,138,9)" rx="2" ry="2" />
<text  x="95.14" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="571.4" y="1749" width="0.2" height="15.0" fill="rgb(228,97,44)" rx="2" ry="2" />
<text  x="574.39" y="1759.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (9 samples, 0.15%)</title><rect x="151.7" y="1877" width="1.8" height="15.0" fill="rgb(251,47,28)" rx="2" ry="2" />
<text  x="154.74" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1173.9" y="1813" width="0.2" height="15.0" fill="rgb(223,198,15)" rx="2" ry="2" />
<text  x="1176.85" y="1823.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="227.3" y="1525" width="0.2" height="15.0" fill="rgb(208,215,27)" rx="2" ry="2" />
<text  x="230.30" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="767.4" y="1653" width="0.2" height="15.0" fill="rgb(231,170,31)" rx="2" ry="2" />
<text  x="770.36" y="1663.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="404.5" y="1877" width="0.2" height="15.0" fill="rgb(228,201,7)" rx="2" ry="2" />
<text  x="407.53" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="965" width="14.4" height="15.0" fill="rgb(248,75,41)" rx="2" ry="2" />
<text  x="103.11" y="975.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="128.2" y="1957" width="0.8" height="15.0" fill="rgb(220,166,35)" rx="2" ry="2" />
<text  x="131.22" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="903.3" y="1605" width="0.2" height="15.0" fill="rgb(209,72,11)" rx="2" ry="2" />
<text  x="906.32" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="159.5" y="1829" width="0.2" height="15.0" fill="rgb(206,221,8)" rx="2" ry="2" />
<text  x="162.52" y="1839.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="515.8" y="1957" width="0.8" height="15.0" fill="rgb(245,199,19)" rx="2" ry="2" />
<text  x="518.77" y="1967.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="92.1" y="1957" width="0.2" height="15.0" fill="rgb(242,116,18)" rx="2" ry="2" />
<text  x="95.14" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="538.3" y="1909" width="0.4" height="15.0" fill="rgb(235,151,39)" rx="2" ry="2" />
<text  x="541.30" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="903.1" y="1973" width="0.2" height="15.0" fill="rgb(223,188,19)" rx="2" ry="2" />
<text  x="906.12" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="218.5" y="1877" width="0.2" height="15.0" fill="rgb(207,204,27)" rx="2" ry="2" />
<text  x="221.53" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="953.0" y="1989" width="0.2" height="15.0" fill="rgb(248,212,31)" rx="2" ry="2" />
<text  x="955.96" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (18 samples, 0.30%)</title><rect x="894.6" y="2005" width="3.5" height="15.0" fill="rgb(236,137,22)" rx="2" ry="2" />
<text  x="897.55" y="2015.5" ></text>
</g>
<g >
<title>tcp_recvmsg (295 samples, 4.98%)</title><rect x="1064.0" y="1941" width="58.8" height="15.0" fill="rgb(249,218,37)" rx="2" ry="2" />
<text  x="1067.01" y="1951.5" >tcp_re..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="138.6" y="1749" width="0.2" height="15.0" fill="rgb(214,126,31)" rx="2" ry="2" />
<text  x="141.59" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::(anonymous namespace)::findFirstNonDigit (2 samples, 0.03%)</title><rect x="1005.4" y="2021" width="0.4" height="15.0" fill="rgb(243,153,53)" rx="2" ry="2" />
<text  x="1008.39" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="962.3" y="2021" width="0.2" height="15.0" fill="rgb(210,5,14)" rx="2" ry="2" />
<text  x="965.33" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="286.5" y="1765" width="0.2" height="15.0" fill="rgb(238,187,4)" rx="2" ry="2" />
<text  x="289.51" y="1775.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="381.2" y="1765" width="0.2" height="15.0" fill="rgb(212,55,31)" rx="2" ry="2" />
<text  x="384.20" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="298.1" y="1669" width="0.2" height="15.0" fill="rgb(241,225,42)" rx="2" ry="2" />
<text  x="301.07" y="1679.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="830.0" y="1813" width="0.2" height="15.0" fill="rgb(238,43,34)" rx="2" ry="2" />
<text  x="832.96" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22 samples, 0.37%)</title><rect x="787.3" y="1541" width="4.4" height="15.0" fill="rgb(254,139,42)" rx="2" ry="2" />
<text  x="790.30" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="92.3" y="1877" width="0.2" height="15.0" fill="rgb(245,46,20)" rx="2" ry="2" />
<text  x="95.33" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="918.7" y="2005" width="0.6" height="15.0" fill="rgb(240,208,54)" rx="2" ry="2" />
<text  x="921.67" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1,002 samples, 16.93%)</title><rect x="701.6" y="2021" width="199.7" height="15.0" fill="rgb(220,115,40)" rx="2" ry="2" />
<text  x="704.57" y="2031.5" >[unknown]</text>
</g>
<g >
<title>ip_finish_output2 (45 samples, 0.76%)</title><rect x="1112.3" y="1797" width="8.9" height="15.0" fill="rgb(218,131,45)" rx="2" ry="2" />
<text  x="1115.25" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="573.0" y="1973" width="0.2" height="15.0" fill="rgb(231,191,8)" rx="2" ry="2" />
<text  x="575.99" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="409.1" y="1845" width="0.2" height="15.0" fill="rgb(235,62,17)" rx="2" ry="2" />
<text  x="412.11" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (2 samples, 0.03%)</title><rect x="700.2" y="2021" width="0.4" height="15.0" fill="rgb(218,119,7)" rx="2" ry="2" />
<text  x="703.18" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="704.2" y="1957" width="0.2" height="15.0" fill="rgb(251,15,50)" rx="2" ry="2" />
<text  x="707.16" y="1967.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="286.3" y="1797" width="0.2" height="15.0" fill="rgb(243,166,30)" rx="2" ry="2" />
<text  x="289.31" y="1807.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="392.0" y="1893" width="0.2" height="15.0" fill="rgb(221,214,38)" rx="2" ry="2" />
<text  x="394.97" y="1903.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="806.8" y="1669" width="0.2" height="15.0" fill="rgb(249,36,45)" rx="2" ry="2" />
<text  x="809.83" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="751.2" y="1541" width="0.2" height="15.0" fill="rgb(213,97,7)" rx="2" ry="2" />
<text  x="754.21" y="1551.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1111.7" y="1861" width="0.2" height="15.0" fill="rgb(236,162,20)" rx="2" ry="2" />
<text  x="1114.65" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="106.3" y="37" width="0.2" height="15.0" fill="rgb(206,113,29)" rx="2" ry="2" />
<text  x="109.29" y="47.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="382.2" y="1925" width="0.4" height="15.0" fill="rgb(214,173,29)" rx="2" ry="2" />
<text  x="385.20" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="989.2" y="1893" width="0.2" height="15.0" fill="rgb(214,50,48)" rx="2" ry="2" />
<text  x="992.25" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (138 samples, 2.33%)</title><rect x="288.1" y="1749" width="27.5" height="15.0" fill="rgb(243,77,8)" rx="2" ry="2" />
<text  x="291.10" y="1759.5" >i..</text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (3 samples, 0.05%)</title><rect x="985.5" y="1909" width="0.6" height="15.0" fill="rgb(214,29,11)" rx="2" ry="2" />
<text  x="988.46" y="1919.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="936.6" y="1941" width="0.2" height="15.0" fill="rgb(250,47,6)" rx="2" ry="2" />
<text  x="939.62" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="31.7" y="1941" width="0.2" height="15.0" fill="rgb(228,7,47)" rx="2" ry="2" />
<text  x="34.73" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1137.6" y="2037" width="0.6" height="15.0" fill="rgb(213,110,21)" rx="2" ry="2" />
<text  x="1140.57" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (3 samples, 0.05%)</title><rect x="177.9" y="2021" width="0.6" height="15.0" fill="rgb(249,183,35)" rx="2" ry="2" />
<text  x="180.86" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1148.1" y="1989" width="0.2" height="15.0" fill="rgb(209,48,28)" rx="2" ry="2" />
<text  x="1151.13" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (4 samples, 0.07%)</title><rect x="643.6" y="2005" width="0.8" height="15.0" fill="rgb(245,182,47)" rx="2" ry="2" />
<text  x="646.56" y="2015.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1182.4" y="2021" width="0.4" height="15.0" fill="rgb(233,73,42)" rx="2" ry="2" />
<text  x="1185.42" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="200.2" y="2021" width="0.4" height="15.0" fill="rgb(250,141,26)" rx="2" ry="2" />
<text  x="203.19" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="513.0" y="1909" width="0.4" height="15.0" fill="rgb(224,98,5)" rx="2" ry="2" />
<text  x="515.98" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="179.3" y="1941" width="0.2" height="15.0" fill="rgb(217,186,50)" rx="2" ry="2" />
<text  x="182.25" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="636.4" y="1989" width="1.4" height="15.0" fill="rgb(207,45,25)" rx="2" ry="2" />
<text  x="639.38" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="461.5" y="1893" width="0.2" height="15.0" fill="rgb(238,138,5)" rx="2" ry="2" />
<text  x="464.55" y="1903.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="323.0" y="1813" width="0.2" height="15.0" fill="rgb(233,167,14)" rx="2" ry="2" />
<text  x="325.99" y="1823.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="937.2" y="1957" width="0.2" height="15.0" fill="rgb(225,171,39)" rx="2" ry="2" />
<text  x="940.21" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="669.5" y="1861" width="0.6" height="15.0" fill="rgb(217,99,9)" rx="2" ry="2" />
<text  x="672.48" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="159.5" y="1989" width="0.2" height="15.0" fill="rgb(222,160,10)" rx="2" ry="2" />
<text  x="162.52" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="883.6" y="1845" width="0.2" height="15.0" fill="rgb(217,215,8)" rx="2" ry="2" />
<text  x="886.59" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1001.8" y="1941" width="0.2" height="15.0" fill="rgb(237,90,26)" rx="2" ry="2" />
<text  x="1004.81" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="499.6" y="1829" width="0.6" height="15.0" fill="rgb(218,109,12)" rx="2" ry="2" />
<text  x="502.62" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="917.9" y="2021" width="0.2" height="15.0" fill="rgb(231,36,19)" rx="2" ry="2" />
<text  x="920.88" y="2031.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="403.7" y="1909" width="0.2" height="15.0" fill="rgb(233,87,36)" rx="2" ry="2" />
<text  x="406.73" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="638.2" y="2005" width="0.2" height="15.0" fill="rgb(209,129,43)" rx="2" ry="2" />
<text  x="641.18" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="920.7" y="1893" width="0.2" height="15.0" fill="rgb(234,30,51)" rx="2" ry="2" />
<text  x="923.67" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="625.8" y="2005" width="0.2" height="15.0" fill="rgb(220,169,18)" rx="2" ry="2" />
<text  x="628.82" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="62.2" y="1829" width="0.2" height="15.0" fill="rgb(239,183,26)" rx="2" ry="2" />
<text  x="65.23" y="1839.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="489.9" y="1589" width="0.2" height="15.0" fill="rgb(236,120,28)" rx="2" ry="2" />
<text  x="492.85" y="1599.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (52 samples, 0.88%)</title><rect x="1004.2" y="2037" width="10.4" height="15.0" fill="rgb(209,206,30)" rx="2" ry="2" />
<text  x="1007.20" y="2047.5" ></text>
</g>
<g >
<title>sys_gettid (3 samples, 0.05%)</title><rect x="1158.7" y="1925" width="0.6" height="15.0" fill="rgb(244,70,16)" rx="2" ry="2" />
<text  x="1161.70" y="1935.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="14.0" y="1973" width="0.2" height="15.0" fill="rgb(222,202,10)" rx="2" ry="2" />
<text  x="16.99" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (607 samples, 10.26%)</title><rect x="714.1" y="1877" width="121.0" height="15.0" fill="rgb(236,180,51)" rx="2" ry="2" />
<text  x="717.13" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1108.9" y="1861" width="0.2" height="15.0" fill="rgb(252,85,14)" rx="2" ry="2" />
<text  x="1111.86" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (1 samples, 0.02%)</title><rect x="578.2" y="2021" width="0.2" height="15.0" fill="rgb(235,225,22)" rx="2" ry="2" />
<text  x="581.17" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.4" y="1877" width="0.4" height="15.0" fill="rgb(214,208,27)" rx="2" ry="2" />
<text  x="141.39" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="844.5" y="1941" width="0.2" height="15.0" fill="rgb(241,189,29)" rx="2" ry="2" />
<text  x="847.51" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="683.6" y="1653" width="0.2" height="15.0" fill="rgb(253,89,7)" rx="2" ry="2" />
<text  x="686.63" y="1663.5" ></text>
</g>
<g >
<title>sys_recvfrom (1 samples, 0.02%)</title><rect x="1129.4" y="2021" width="0.2" height="15.0" fill="rgb(209,120,0)" rx="2" ry="2" />
<text  x="1132.40" y="2031.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="118.1" y="1813" width="0.2" height="15.0" fill="rgb(252,59,51)" rx="2" ry="2" />
<text  x="121.05" y="1823.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (100 samples, 1.69%)</title><rect x="580.6" y="1973" width="19.9" height="15.0" fill="rgb(241,226,8)" rx="2" ry="2" />
<text  x="583.56" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (10 samples, 0.17%)</title><rect x="506.4" y="1893" width="2.0" height="15.0" fill="rgb(236,56,14)" rx="2" ry="2" />
<text  x="509.40" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="691.8" y="1749" width="0.2" height="15.0" fill="rgb(222,75,38)" rx="2" ry="2" />
<text  x="694.80" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="82.0" y="1909" width="0.2" height="15.0" fill="rgb(249,212,15)" rx="2" ry="2" />
<text  x="84.97" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="508.4" y="1749" width="0.2" height="15.0" fill="rgb(218,84,38)" rx="2" ry="2" />
<text  x="511.39" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="764.4" y="1621" width="0.2" height="15.0" fill="rgb(227,16,13)" rx="2" ry="2" />
<text  x="767.37" y="1631.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="909.1" y="1973" width="0.8" height="15.0" fill="rgb(209,156,28)" rx="2" ry="2" />
<text  x="912.10" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="556.8" y="1941" width="0.2" height="15.0" fill="rgb(223,39,5)" rx="2" ry="2" />
<text  x="559.84" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="877.6" y="1797" width="0.2" height="15.0" fill="rgb(244,139,45)" rx="2" ry="2" />
<text  x="880.61" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.50%)</title><rect x="99.3" y="1685" width="17.8" height="15.0" fill="rgb(232,170,23)" rx="2" ry="2" />
<text  x="102.31" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="60.8" y="1893" width="0.8" height="15.0" fill="rgb(242,37,19)" rx="2" ry="2" />
<text  x="63.84" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="700.6" y="2021" width="0.4" height="15.0" fill="rgb(207,171,5)" rx="2" ry="2" />
<text  x="703.58" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="609.9" y="1845" width="0.2" height="15.0" fill="rgb(235,139,19)" rx="2" ry="2" />
<text  x="612.87" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="898.7" y="1989" width="0.2" height="15.0" fill="rgb(219,53,27)" rx="2" ry="2" />
<text  x="901.74" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="546.5" y="1749" width="0.2" height="15.0" fill="rgb(247,133,47)" rx="2" ry="2" />
<text  x="549.47" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="618.8" y="1973" width="0.6" height="15.0" fill="rgb(237,8,44)" rx="2" ry="2" />
<text  x="621.84" y="1983.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="539.3" y="1973" width="0.2" height="15.0" fill="rgb(225,75,3)" rx="2" ry="2" />
<text  x="542.30" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1013.8" y="1813" width="0.2" height="15.0" fill="rgb(249,118,50)" rx="2" ry="2" />
<text  x="1016.77" y="1823.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="966.9" y="2037" width="0.2" height="15.0" fill="rgb(226,203,28)" rx="2" ry="2" />
<text  x="969.92" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="614.7" y="2021" width="0.2" height="15.0" fill="rgb(251,6,20)" rx="2" ry="2" />
<text  x="617.65" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (747 samples, 12.62%)</title><rect x="707.8" y="1973" width="148.9" height="15.0" fill="rgb(235,205,45)" rx="2" ry="2" />
<text  x="710.75" y="1983.5" >folly::AsyncSocket:..</text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="483.7" y="1973" width="0.2" height="15.0" fill="rgb(253,160,21)" rx="2" ry="2" />
<text  x="486.67" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="53.5" y="1877" width="0.2" height="15.0" fill="rgb(245,124,41)" rx="2" ry="2" />
<text  x="56.46" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="904.3" y="1989" width="0.4" height="15.0" fill="rgb(220,135,41)" rx="2" ry="2" />
<text  x="907.32" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="67.0" y="1925" width="0.2" height="15.0" fill="rgb(222,70,54)" rx="2" ry="2" />
<text  x="70.02" y="1935.5" ></text>
</g>
<g >
<title>evict (47 samples, 0.79%)</title><rect x="730.1" y="1717" width="9.4" height="15.0" fill="rgb(235,141,30)" rx="2" ry="2" />
<text  x="733.08" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="482.3" y="1893" width="0.2" height="15.0" fill="rgb(225,208,16)" rx="2" ry="2" />
<text  x="485.28" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="1143.9" y="1957" width="0.2" height="15.0" fill="rgb(230,137,27)" rx="2" ry="2" />
<text  x="1146.95" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (2 samples, 0.03%)</title><rect x="62.6" y="1957" width="0.4" height="15.0" fill="rgb(253,30,40)" rx="2" ry="2" />
<text  x="65.63" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (2 samples, 0.03%)</title><rect x="1148.7" y="2005" width="0.4" height="15.0" fill="rgb(207,117,30)" rx="2" ry="2" />
<text  x="1151.73" y="2015.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (3 samples, 0.05%)</title><rect x="79.0" y="1893" width="0.6" height="15.0" fill="rgb(229,206,4)" rx="2" ry="2" />
<text  x="81.98" y="1903.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="172.5" y="1957" width="0.4" height="15.0" fill="rgb(250,35,45)" rx="2" ry="2" />
<text  x="175.48" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="669.7" y="1845" width="0.4" height="15.0" fill="rgb(214,59,14)" rx="2" ry="2" />
<text  x="672.68" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (27 samples, 0.46%)</title><rect x="138.8" y="1925" width="5.4" height="15.0" fill="rgb(241,50,34)" rx="2" ry="2" />
<text  x="141.79" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="556.8" y="1781" width="0.2" height="15.0" fill="rgb(215,59,8)" rx="2" ry="2" />
<text  x="559.84" y="1791.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="1062.6" y="1957" width="0.2" height="15.0" fill="rgb(238,97,12)" rx="2" ry="2" />
<text  x="1065.61" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="882.4" y="1893" width="0.2" height="15.0" fill="rgb(232,32,23)" rx="2" ry="2" />
<text  x="885.39" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18 samples, 0.30%)</title><rect x="289.7" y="1733" width="3.6" height="15.0" fill="rgb(215,114,48)" rx="2" ry="2" />
<text  x="292.70" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (5 samples, 0.08%)</title><rect x="898.1" y="2005" width="1.0" height="15.0" fill="rgb(250,104,41)" rx="2" ry="2" />
<text  x="901.14" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="883.6" y="1909" width="0.2" height="15.0" fill="rgb(207,208,19)" rx="2" ry="2" />
<text  x="886.59" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (833 samples, 14.07%)</title><rect x="701.6" y="2005" width="166.0" height="15.0" fill="rgb(224,138,29)" rx="2" ry="2" />
<text  x="704.57" y="2015.5" >[unknown]</text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="99.1" y="1765" width="0.2" height="15.0" fill="rgb(221,86,25)" rx="2" ry="2" />
<text  x="102.11" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="630.4" y="1941" width="0.4" height="15.0" fill="rgb(218,229,51)" rx="2" ry="2" />
<text  x="633.40" y="1951.5" ></text>
</g>
<g >
<title>__alloc_skb (46 samples, 0.78%)</title><rect x="758.4" y="1717" width="9.2" height="15.0" fill="rgb(230,177,25)" rx="2" ry="2" />
<text  x="761.39" y="1727.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="684.2" y="1925" width="0.2" height="15.0" fill="rgb(237,201,51)" rx="2" ry="2" />
<text  x="687.23" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="689.8" y="1653" width="0.2" height="15.0" fill="rgb(236,16,41)" rx="2" ry="2" />
<text  x="692.81" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (2 samples, 0.03%)</title><rect x="527.5" y="1989" width="0.4" height="15.0" fill="rgb(213,99,14)" rx="2" ry="2" />
<text  x="530.53" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="894.2" y="1941" width="0.2" height="15.0" fill="rgb(217,161,4)" rx="2" ry="2" />
<text  x="897.15" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="499.8" y="1717" width="0.4" height="15.0" fill="rgb(250,185,9)" rx="2" ry="2" />
<text  x="502.82" y="1727.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="643.2" y="1989" width="0.4" height="15.0" fill="rgb(249,40,4)" rx="2" ry="2" />
<text  x="646.16" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="153.3" y="1829" width="0.2" height="15.0" fill="rgb(236,228,45)" rx="2" ry="2" />
<text  x="156.34" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="903.3" y="1877" width="0.2" height="15.0" fill="rgb(231,135,38)" rx="2" ry="2" />
<text  x="906.32" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="176.1" y="1957" width="1.4" height="15.0" fill="rgb(234,108,38)" rx="2" ry="2" />
<text  x="179.07" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (50 samples, 0.84%)</title><rect x="602.1" y="1925" width="10.0" height="15.0" fill="rgb(241,163,17)" rx="2" ry="2" />
<text  x="605.09" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="227.3" y="1861" width="0.2" height="15.0" fill="rgb(229,116,7)" rx="2" ry="2" />
<text  x="230.30" y="1871.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (7 samples, 0.12%)</title><rect x="684.6" y="1925" width="1.4" height="15.0" fill="rgb(214,214,39)" rx="2" ry="2" />
<text  x="687.63" y="1935.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="683.8" y="1541" width="0.2" height="15.0" fill="rgb(234,185,39)" rx="2" ry="2" />
<text  x="686.83" y="1551.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="272.2" y="1797" width="0.2" height="15.0" fill="rgb(252,224,41)" rx="2" ry="2" />
<text  x="275.16" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="894.4" y="1973" width="0.2" height="15.0" fill="rgb(232,148,5)" rx="2" ry="2" />
<text  x="897.35" y="1983.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="184.0" y="1701" width="0.2" height="15.0" fill="rgb(219,6,43)" rx="2" ry="2" />
<text  x="187.04" y="1711.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="381.2" y="1797" width="0.2" height="15.0" fill="rgb(207,181,12)" rx="2" ry="2" />
<text  x="384.20" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="219.3" y="1861" width="0.4" height="15.0" fill="rgb(225,43,14)" rx="2" ry="2" />
<text  x="222.33" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="897.3" y="1877" width="0.2" height="15.0" fill="rgb(229,35,13)" rx="2" ry="2" />
<text  x="900.34" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1173.9" y="1621" width="0.2" height="15.0" fill="rgb(216,151,9)" rx="2" ry="2" />
<text  x="1176.85" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (7 samples, 0.12%)</title><rect x="290.7" y="1637" width="1.4" height="15.0" fill="rgb(227,189,29)" rx="2" ry="2" />
<text  x="293.70" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="396.4" y="1797" width="0.2" height="15.0" fill="rgb(234,178,17)" rx="2" ry="2" />
<text  x="399.36" y="1807.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="282.1" y="1829" width="0.4" height="15.0" fill="rgb(220,78,9)" rx="2" ry="2" />
<text  x="285.12" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="154.1" y="1797" width="0.2" height="15.0" fill="rgb(248,217,35)" rx="2" ry="2" />
<text  x="157.14" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="489.9" y="1845" width="0.2" height="15.0" fill="rgb(245,111,52)" rx="2" ry="2" />
<text  x="492.85" y="1855.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="668.5" y="1845" width="0.4" height="15.0" fill="rgb(234,45,52)" rx="2" ry="2" />
<text  x="671.48" y="1855.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="215.3" y="1861" width="0.4" height="15.0" fill="rgb(252,68,47)" rx="2" ry="2" />
<text  x="218.34" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (14 samples, 0.24%)</title><rect x="953.6" y="2037" width="2.8" height="15.0" fill="rgb(211,217,50)" rx="2" ry="2" />
<text  x="956.56" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="290.7" y="1589" width="1.2" height="15.0" fill="rgb(234,204,50)" rx="2" ry="2" />
<text  x="293.70" y="1599.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="813.8" y="1717" width="0.2" height="15.0" fill="rgb(206,61,12)" rx="2" ry="2" />
<text  x="816.81" y="1727.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (39 samples, 0.66%)</title><rect x="996.4" y="2037" width="7.8" height="15.0" fill="rgb(208,93,49)" rx="2" ry="2" />
<text  x="999.42" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="556.8" y="1733" width="0.2" height="15.0" fill="rgb(205,179,49)" rx="2" ry="2" />
<text  x="559.84" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="886.0" y="1781" width="0.2" height="15.0" fill="rgb(223,196,28)" rx="2" ry="2" />
<text  x="888.98" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="153.1" y="1845" width="0.2" height="15.0" fill="rgb(205,150,35)" rx="2" ry="2" />
<text  x="156.14" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="227.3" y="1509" width="0.2" height="15.0" fill="rgb(250,215,45)" rx="2" ry="2" />
<text  x="230.30" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (1 samples, 0.02%)</title><rect x="986.5" y="1989" width="0.2" height="15.0" fill="rgb(209,184,40)" rx="2" ry="2" />
<text  x="989.46" y="1999.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="254.8" y="1893" width="1.2" height="15.0" fill="rgb(226,100,10)" rx="2" ry="2" />
<text  x="257.81" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (100 samples, 1.69%)</title><rect x="207.6" y="1957" width="19.9" height="15.0" fill="rgb(229,195,45)" rx="2" ry="2" />
<text  x="210.56" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="314.0" y="1653" width="0.2" height="15.0" fill="rgb(238,132,3)" rx="2" ry="2" />
<text  x="317.02" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="526.7" y="1973" width="0.2" height="15.0" fill="rgb(206,211,42)" rx="2" ry="2" />
<text  x="529.74" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="56.5" y="1909" width="0.1" height="15.0" fill="rgb(216,86,5)" rx="2" ry="2" />
<text  x="59.45" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="894.2" y="1813" width="0.2" height="15.0" fill="rgb(250,173,42)" rx="2" ry="2" />
<text  x="897.15" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="284.9" y="1717" width="0.2" height="15.0" fill="rgb(229,27,30)" rx="2" ry="2" />
<text  x="287.91" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1039.9" y="2037" width="0.4" height="15.0" fill="rgb(227,88,54)" rx="2" ry="2" />
<text  x="1042.88" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (8 samples, 0.14%)</title><rect x="211.8" y="1925" width="1.5" height="15.0" fill="rgb(221,167,3)" rx="2" ry="2" />
<text  x="214.75" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="145.6" y="1685" width="0.2" height="15.0" fill="rgb(246,83,8)" rx="2" ry="2" />
<text  x="148.56" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="921.7" y="1989" width="0.6" height="15.0" fill="rgb(231,178,36)" rx="2" ry="2" />
<text  x="924.66" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="110.5" y="37" width="0.2" height="15.0" fill="rgb(252,197,29)" rx="2" ry="2" />
<text  x="113.48" y="47.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="953.6" y="1957" width="2.2" height="15.0" fill="rgb(238,146,28)" rx="2" ry="2" />
<text  x="956.56" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="806.2" y="1621" width="0.2" height="15.0" fill="rgb(205,190,21)" rx="2" ry="2" />
<text  x="809.24" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1022.9" y="2021" width="0.4" height="15.0" fill="rgb(217,55,52)" rx="2" ry="2" />
<text  x="1025.94" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1148.9" y="1973" width="0.2" height="15.0" fill="rgb(219,108,9)" rx="2" ry="2" />
<text  x="1151.93" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="459.6" y="1877" width="0.2" height="15.0" fill="rgb(229,48,49)" rx="2" ry="2" />
<text  x="462.55" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="76.0" y="1893" width="0.2" height="15.0" fill="rgb(218,74,40)" rx="2" ry="2" />
<text  x="78.99" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1173.9" y="1861" width="0.2" height="15.0" fill="rgb(223,60,29)" rx="2" ry="2" />
<text  x="1176.85" y="1871.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1122.6" y="1925" width="0.2" height="15.0" fill="rgb(240,193,26)" rx="2" ry="2" />
<text  x="1125.62" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="499.8" y="1749" width="0.4" height="15.0" fill="rgb(226,66,41)" rx="2" ry="2" />
<text  x="502.82" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="691.4" y="1589" width="0.2" height="15.0" fill="rgb(238,165,25)" rx="2" ry="2" />
<text  x="694.41" y="1599.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1188.4" y="1941" width="0.8" height="15.0" fill="rgb(209,73,28)" rx="2" ry="2" />
<text  x="1191.41" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (10 samples, 0.17%)</title><rect x="895.5" y="1973" width="2.0" height="15.0" fill="rgb(235,1,53)" rx="2" ry="2" />
<text  x="898.55" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="114.1" y="373" width="0.2" height="15.0" fill="rgb(221,222,3)" rx="2" ry="2" />
<text  x="117.06" y="383.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="868.8" y="1797" width="0.2" height="15.0" fill="rgb(234,39,21)" rx="2" ry="2" />
<text  x="871.83" y="1807.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="236.5" y="1925" width="0.2" height="15.0" fill="rgb(243,214,52)" rx="2" ry="2" />
<text  x="239.47" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="97.9" y="1989" width="0.2" height="15.0" fill="rgb(213,133,40)" rx="2" ry="2" />
<text  x="100.92" y="1999.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1057.4" y="1989" width="0.8" height="15.0" fill="rgb(209,25,42)" rx="2" ry="2" />
<text  x="1060.43" y="1999.5" ></text>
</g>
<g >
<title>vfprintf (15 samples, 0.25%)</title><rect x="190.6" y="2021" width="3.0" height="15.0" fill="rgb(233,209,29)" rx="2" ry="2" />
<text  x="193.62" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (28 samples, 0.47%)</title><rect x="1114.2" y="1493" width="5.6" height="15.0" fill="rgb(239,66,16)" rx="2" ry="2" />
<text  x="1117.24" y="1503.5" ></text>
</g>
<g >
<title>tcp_send_fin (340 samples, 5.74%)</title><rect x="757.8" y="1733" width="67.8" height="15.0" fill="rgb(243,123,41)" rx="2" ry="2" />
<text  x="760.79" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="284.7" y="1813" width="0.2" height="15.0" fill="rgb(244,11,2)" rx="2" ry="2" />
<text  x="287.72" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="885" width="14.4" height="15.0" fill="rgb(221,1,2)" rx="2" ry="2" />
<text  x="103.11" y="895.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="682.8" y="1829" width="0.8" height="15.0" fill="rgb(211,147,54)" rx="2" ry="2" />
<text  x="685.83" y="1839.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="29.5" y="1893" width="0.2" height="15.0" fill="rgb(210,166,45)" rx="2" ry="2" />
<text  x="32.54" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="189.6" y="1861" width="0.4" height="15.0" fill="rgb(205,100,10)" rx="2" ry="2" />
<text  x="192.62" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (5 samples, 0.08%)</title><rect x="610.5" y="1861" width="1.0" height="15.0" fill="rgb(249,57,1)" rx="2" ry="2" />
<text  x="613.47" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="320.4" y="1685" width="0.2" height="15.0" fill="rgb(247,58,22)" rx="2" ry="2" />
<text  x="323.40" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="138.4" y="1845" width="0.2" height="15.0" fill="rgb(209,13,16)" rx="2" ry="2" />
<text  x="141.39" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="989.4" y="1829" width="0.2" height="15.0" fill="rgb(220,2,53)" rx="2" ry="2" />
<text  x="992.45" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="405.5" y="1861" width="0.2" height="15.0" fill="rgb(232,127,7)" rx="2" ry="2" />
<text  x="408.53" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="286.5" y="1653" width="0.2" height="15.0" fill="rgb(239,65,22)" rx="2" ry="2" />
<text  x="289.51" y="1663.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="233.9" y="2021" width="2.6" height="15.0" fill="rgb(248,65,42)" rx="2" ry="2" />
<text  x="236.88" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="33.3" y="1925" width="0.2" height="15.0" fill="rgb(237,33,35)" rx="2" ry="2" />
<text  x="36.32" y="1935.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="30.3" y="1989" width="0.2" height="15.0" fill="rgb(209,202,30)" rx="2" ry="2" />
<text  x="33.33" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (17 samples, 0.29%)</title><rect x="10.4" y="1893" width="3.4" height="15.0" fill="rgb(207,153,23)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (110 samples, 1.86%)</title><rect x="974.5" y="2021" width="21.9" height="15.0" fill="rgb(235,45,32)" rx="2" ry="2" />
<text  x="977.49" y="2031.5" >[..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="396.6" y="1845" width="0.2" height="15.0" fill="rgb(223,12,47)" rx="2" ry="2" />
<text  x="399.56" y="1855.5" ></text>
</g>
<g >
<title>ep_send_events_proc (89 samples, 1.50%)</title><rect x="491.3" y="1941" width="17.7" height="15.0" fill="rgb(244,226,17)" rx="2" ry="2" />
<text  x="494.25" y="1951.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="763.2" y="1381" width="0.2" height="15.0" fill="rgb(240,59,31)" rx="2" ry="2" />
<text  x="766.17" y="1391.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (6 samples, 0.10%)</title><rect x="52.1" y="1909" width="1.2" height="15.0" fill="rgb(206,22,24)" rx="2" ry="2" />
<text  x="55.06" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="320.2" y="1733" width="0.2" height="15.0" fill="rgb(215,27,28)" rx="2" ry="2" />
<text  x="323.20" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="490.7" y="1925" width="0.2" height="15.0" fill="rgb(250,198,41)" rx="2" ry="2" />
<text  x="493.65" y="1935.5" ></text>
</g>
<g >
<title>security_inode_free (1 samples, 0.02%)</title><rect x="733.3" y="1685" width="0.2" height="15.0" fill="rgb(226,89,1)" rx="2" ry="2" />
<text  x="736.27" y="1695.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="423.5" y="2005" width="0.4" height="15.0" fill="rgb(240,54,14)" rx="2" ry="2" />
<text  x="426.47" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="669.9" y="1461" width="0.2" height="15.0" fill="rgb(223,29,35)" rx="2" ry="2" />
<text  x="672.87" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="184.0" y="1733" width="0.2" height="15.0" fill="rgb(244,164,6)" rx="2" ry="2" />
<text  x="187.04" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="709.9" y="1893" width="0.2" height="15.0" fill="rgb(234,150,44)" rx="2" ry="2" />
<text  x="712.95" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="683.6" y="1685" width="0.2" height="15.0" fill="rgb(226,128,39)" rx="2" ry="2" />
<text  x="686.63" y="1695.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (1 samples, 0.02%)</title><rect x="644.0" y="1989" width="0.2" height="15.0" fill="rgb(232,73,51)" rx="2" ry="2" />
<text  x="646.96" y="1999.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="88.1" y="1957" width="0.2" height="15.0" fill="rgb(213,191,27)" rx="2" ry="2" />
<text  x="91.15" y="1967.5" ></text>
</g>
<g >
<title>sys_setsockopt (48 samples, 0.81%)</title><rect x="684.0" y="1941" width="9.6" height="15.0" fill="rgb(234,139,48)" rx="2" ry="2" />
<text  x="687.03" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="255.6" y="1877" width="0.2" height="15.0" fill="rgb(221,131,10)" rx="2" ry="2" />
<text  x="258.61" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="153.1" y="1781" width="0.2" height="15.0" fill="rgb(205,203,24)" rx="2" ry="2" />
<text  x="156.14" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="691.4" y="1765" width="0.2" height="15.0" fill="rgb(210,121,4)" rx="2" ry="2" />
<text  x="694.41" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="969.1" y="1941" width="0.2" height="15.0" fill="rgb(246,124,24)" rx="2" ry="2" />
<text  x="972.11" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="1162.3" y="2053" width="0.2" height="15.0" fill="rgb(239,76,22)" rx="2" ry="2" />
<text  x="1165.29" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="138.2" y="1877" width="0.2" height="15.0" fill="rgb(209,195,41)" rx="2" ry="2" />
<text  x="141.19" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (5 samples, 0.08%)</title><rect x="340.9" y="2021" width="1.0" height="15.0" fill="rgb(233,22,10)" rx="2" ry="2" />
<text  x="343.93" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="469" width="14.2" height="15.0" fill="rgb(253,80,24)" rx="2" ry="2" />
<text  x="103.11" y="479.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (11 samples, 0.19%)</title><rect x="108.7" y="53" width="2.2" height="15.0" fill="rgb(226,88,10)" rx="2" ry="2" />
<text  x="111.68" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="461.5" y="1861" width="0.2" height="15.0" fill="rgb(236,167,14)" rx="2" ry="2" />
<text  x="464.55" y="1871.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (18 samples, 0.30%)</title><rect x="808.4" y="1653" width="3.6" height="15.0" fill="rgb(218,188,3)" rx="2" ry="2" />
<text  x="811.43" y="1663.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="159.5" y="1765" width="0.2" height="15.0" fill="rgb(247,74,12)" rx="2" ry="2" />
<text  x="162.52" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="763.2" y="1573" width="0.2" height="15.0" fill="rgb(209,191,11)" rx="2" ry="2" />
<text  x="766.17" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="229.5" y="1781" width="0.2" height="15.0" fill="rgb(247,10,32)" rx="2" ry="2" />
<text  x="232.49" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (6 samples, 0.10%)</title><rect x="67.2" y="1925" width="1.2" height="15.0" fill="rgb(248,170,37)" rx="2" ry="2" />
<text  x="70.22" y="1935.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="408.3" y="1573" width="0.2" height="15.0" fill="rgb(222,93,3)" rx="2" ry="2" />
<text  x="411.32" y="1583.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="29.5" y="1925" width="0.2" height="15.0" fill="rgb(205,26,13)" rx="2" ry="2" />
<text  x="32.54" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="725.7" y="1781" width="0.2" height="15.0" fill="rgb(211,63,39)" rx="2" ry="2" />
<text  x="728.70" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="166.5" y="2021" width="0.2" height="15.0" fill="rgb(233,98,32)" rx="2" ry="2" />
<text  x="169.50" y="2031.5" ></text>
</g>
<g >
<title>free (44 samples, 0.74%)</title><rect x="1014.6" y="2037" width="8.7" height="15.0" fill="rgb(214,210,33)" rx="2" ry="2" />
<text  x="1017.56" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1124.8" y="1877" width="0.2" height="15.0" fill="rgb(214,36,7)" rx="2" ry="2" />
<text  x="1127.81" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="610.1" y="1781" width="0.2" height="15.0" fill="rgb(247,58,36)" rx="2" ry="2" />
<text  x="613.07" y="1791.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="119.6" y="1893" width="0.2" height="15.0" fill="rgb(218,92,13)" rx="2" ry="2" />
<text  x="122.65" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="774.1" y="1621" width="0.2" height="15.0" fill="rgb(244,31,40)" rx="2" ry="2" />
<text  x="777.14" y="1631.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="179.3" y="1909" width="0.2" height="15.0" fill="rgb(211,56,31)" rx="2" ry="2" />
<text  x="182.25" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (2 samples, 0.03%)</title><rect x="73.6" y="1957" width="0.4" height="15.0" fill="rgb(217,39,14)" rx="2" ry="2" />
<text  x="76.60" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="166.3" y="1957" width="0.2" height="15.0" fill="rgb(251,210,2)" rx="2" ry="2" />
<text  x="169.30" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="541.5" y="1909" width="0.2" height="15.0" fill="rgb(218,71,45)" rx="2" ry="2" />
<text  x="544.49" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="124.6" y="1989" width="0.2" height="15.0" fill="rgb(222,21,48)" rx="2" ry="2" />
<text  x="127.63" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="408.3" y="1477" width="0.2" height="15.0" fill="rgb(253,35,45)" rx="2" ry="2" />
<text  x="411.32" y="1487.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="131.6" y="1973" width="0.4" height="15.0" fill="rgb(243,188,44)" rx="2" ry="2" />
<text  x="134.61" y="1983.5" ></text>
</g>
<g >
<title>detach_if_pending (3 samples, 0.05%)</title><rect x="809.0" y="1605" width="0.6" height="15.0" fill="rgb(248,157,32)" rx="2" ry="2" />
<text  x="812.03" y="1615.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="63.6" y="1973" width="0.2" height="15.0" fill="rgb(215,73,0)" rx="2" ry="2" />
<text  x="66.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="464.5" y="1653" width="0.2" height="15.0" fill="rgb(207,190,51)" rx="2" ry="2" />
<text  x="467.54" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="571.4" y="1845" width="0.2" height="15.0" fill="rgb(240,36,54)" rx="2" ry="2" />
<text  x="574.39" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="572.2" y="1973" width="0.8" height="15.0" fill="rgb(253,144,13)" rx="2" ry="2" />
<text  x="575.19" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="847.5" y="1717" width="0.2" height="15.0" fill="rgb(247,81,50)" rx="2" ry="2" />
<text  x="850.50" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="59.4" y="1925" width="0.6" height="15.0" fill="rgb(218,104,22)" rx="2" ry="2" />
<text  x="62.44" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="694.0" y="1733" width="0.4" height="15.0" fill="rgb(225,135,26)" rx="2" ry="2" />
<text  x="697.00" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="113.9" y="85" width="0.2" height="15.0" fill="rgb(238,154,44)" rx="2" ry="2" />
<text  x="116.87" y="95.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="689.8" y="1765" width="0.2" height="15.0" fill="rgb(206,179,54)" rx="2" ry="2" />
<text  x="692.81" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1139.4" y="1941" width="0.2" height="15.0" fill="rgb(249,180,51)" rx="2" ry="2" />
<text  x="1142.36" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="126.2" y="1941" width="0.2" height="15.0" fill="rgb(224,158,3)" rx="2" ry="2" />
<text  x="129.23" y="1951.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="744.4" y="1765" width="0.2" height="15.0" fill="rgb(232,124,26)" rx="2" ry="2" />
<text  x="747.43" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="971.5" y="1813" width="0.2" height="15.0" fill="rgb(225,187,6)" rx="2" ry="2" />
<text  x="974.50" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="669.7" y="1829" width="0.4" height="15.0" fill="rgb(222,90,45)" rx="2" ry="2" />
<text  x="672.68" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="92.3" y="2021" width="0.2" height="15.0" fill="rgb(247,228,2)" rx="2" ry="2" />
<text  x="95.33" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (3 samples, 0.05%)</title><rect x="614.9" y="2037" width="0.6" height="15.0" fill="rgb(251,100,23)" rx="2" ry="2" />
<text  x="617.85" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="908.9" y="1941" width="0.2" height="15.0" fill="rgb(206,76,36)" rx="2" ry="2" />
<text  x="911.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="138.6" y="1605" width="0.2" height="15.0" fill="rgb(205,48,41)" rx="2" ry="2" />
<text  x="141.59" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="408.3" y="1653" width="0.2" height="15.0" fill="rgb(228,77,6)" rx="2" ry="2" />
<text  x="411.32" y="1663.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="456.6" y="1845" width="0.2" height="15.0" fill="rgb(227,114,46)" rx="2" ry="2" />
<text  x="459.56" y="1855.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="842.5" y="1909" width="0.2" height="15.0" fill="rgb(233,175,43)" rx="2" ry="2" />
<text  x="845.52" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (6 samples, 0.10%)</title><rect x="292.1" y="1573" width="1.2" height="15.0" fill="rgb(226,17,31)" rx="2" ry="2" />
<text  x="295.09" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="77.4" y="1797" width="0.2" height="15.0" fill="rgb(233,121,14)" rx="2" ry="2" />
<text  x="80.38" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="890.6" y="1781" width="0.2" height="15.0" fill="rgb(224,95,8)" rx="2" ry="2" />
<text  x="893.56" y="1791.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="483.9" y="2005" width="0.2" height="15.0" fill="rgb(253,180,4)" rx="2" ry="2" />
<text  x="486.87" y="2015.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1120.6" y="1509" width="0.2" height="15.0" fill="rgb(224,210,12)" rx="2" ry="2" />
<text  x="1123.62" y="1519.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="245.2" y="1925" width="0.8" height="15.0" fill="rgb(233,137,40)" rx="2" ry="2" />
<text  x="248.24" y="1935.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="150.3" y="1893" width="0.4" height="15.0" fill="rgb(233,183,44)" rx="2" ry="2" />
<text  x="153.35" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="183.8" y="1973" width="0.4" height="15.0" fill="rgb(249,99,3)" rx="2" ry="2" />
<text  x="186.84" y="1983.5" ></text>
</g>
<g >
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="482.5" y="1973" width="0.4" height="15.0" fill="rgb(217,108,26)" rx="2" ry="2" />
<text  x="485.48" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1139.4" y="1813" width="0.2" height="15.0" fill="rgb(217,48,27)" rx="2" ry="2" />
<text  x="1142.36" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="114.1" y="293" width="0.2" height="15.0" fill="rgb(224,31,10)" rx="2" ry="2" />
<text  x="117.06" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="1165.5" y="2021" width="0.8" height="15.0" fill="rgb(244,72,11)" rx="2" ry="2" />
<text  x="1168.48" y="2031.5" ></text>
</g>
<g >
<title>lock_timer_base (13 samples, 0.22%)</title><rect x="327.2" y="1749" width="2.6" height="15.0" fill="rgb(217,73,33)" rx="2" ry="2" />
<text  x="330.18" y="1759.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (6 samples, 0.10%)</title><rect x="567.0" y="1989" width="1.2" height="15.0" fill="rgb(228,71,2)" rx="2" ry="2" />
<text  x="570.01" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="1028.1" y="1989" width="0.2" height="15.0" fill="rgb(231,26,31)" rx="2" ry="2" />
<text  x="1031.12" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (3 samples, 0.05%)</title><rect x="103.5" y="37" width="0.6" height="15.0" fill="rgb(221,26,32)" rx="2" ry="2" />
<text  x="106.50" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="231.3" y="2021" width="0.4" height="15.0" fill="rgb(253,27,2)" rx="2" ry="2" />
<text  x="234.29" y="2031.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="189.8" y="1765" width="0.2" height="15.0" fill="rgb(227,183,23)" rx="2" ry="2" />
<text  x="192.82" y="1775.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::deferredReader (1 samples, 0.02%)</title><rect x="161.5" y="1989" width="0.2" height="15.0" fill="rgb(214,187,36)" rx="2" ry="2" />
<text  x="164.51" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="61.0" y="1845" width="0.2" height="15.0" fill="rgb(217,185,18)" rx="2" ry="2" />
<text  x="64.04" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="77.4" y="1765" width="0.2" height="15.0" fill="rgb(207,32,28)" rx="2" ry="2" />
<text  x="80.38" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="693.8" y="1941" width="0.6" height="15.0" fill="rgb(241,96,9)" rx="2" ry="2" />
<text  x="696.80" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (56 samples, 0.95%)</title><rect x="627.2" y="2021" width="11.2" height="15.0" fill="rgb(234,143,44)" rx="2" ry="2" />
<text  x="630.21" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="608.7" y="1909" width="0.2" height="15.0" fill="rgb(219,217,28)" rx="2" ry="2" />
<text  x="611.67" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="683.8" y="1669" width="0.2" height="15.0" fill="rgb(229,157,46)" rx="2" ry="2" />
<text  x="686.83" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (104 samples, 1.76%)</title><rect x="580.0" y="2005" width="20.7" height="15.0" fill="rgb(234,127,11)" rx="2" ry="2" />
<text  x="582.96" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (1 samples, 0.02%)</title><rect x="645.6" y="2021" width="0.2" height="15.0" fill="rgb(234,71,11)" rx="2" ry="2" />
<text  x="648.55" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="763.2" y="1669" width="0.2" height="15.0" fill="rgb(236,178,52)" rx="2" ry="2" />
<text  x="766.17" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="571.4" y="1909" width="0.2" height="15.0" fill="rgb(221,37,53)" rx="2" ry="2" />
<text  x="574.39" y="1919.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="58.4" y="1909" width="0.2" height="15.0" fill="rgb(243,208,34)" rx="2" ry="2" />
<text  x="61.44" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (11 samples, 0.19%)</title><rect x="411.1" y="1957" width="2.2" height="15.0" fill="rgb(225,68,29)" rx="2" ry="2" />
<text  x="414.11" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="951.6" y="2021" width="0.2" height="15.0" fill="rgb(217,79,29)" rx="2" ry="2" />
<text  x="954.57" y="2031.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="521.8" y="1957" width="0.2" height="15.0" fill="rgb(241,72,42)" rx="2" ry="2" />
<text  x="524.75" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="880.0" y="1909" width="1.2" height="15.0" fill="rgb(229,134,27)" rx="2" ry="2" />
<text  x="883.00" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (85 samples, 1.44%)</title><rect x="676.9" y="1973" width="16.9" height="15.0" fill="rgb(250,157,27)" rx="2" ry="2" />
<text  x="679.85" y="1983.5" ></text>
</g>
<g >
<title>sys_accept4 (272 samples, 4.60%)</title><rect x="359.9" y="1989" width="54.2" height="15.0" fill="rgb(218,162,51)" rx="2" ry="2" />
<text  x="362.87" y="1999.5" >sys_a..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.07%)</title><rect x="1173.1" y="1957" width="0.8" height="15.0" fill="rgb(239,10,51)" rx="2" ry="2" />
<text  x="1176.05" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="756.4" y="1717" width="0.6" height="15.0" fill="rgb(221,66,17)" rx="2" ry="2" />
<text  x="759.40" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="903.3" y="1525" width="0.2" height="15.0" fill="rgb(234,131,14)" rx="2" ry="2" />
<text  x="906.32" y="1535.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="909.9" y="1989" width="0.2" height="15.0" fill="rgb(217,98,44)" rx="2" ry="2" />
<text  x="912.90" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (49 samples, 0.83%)</title><rect x="907.9" y="2037" width="9.8" height="15.0" fill="rgb(238,41,34)" rx="2" ry="2" />
<text  x="910.91" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="683.8" y="1685" width="0.2" height="15.0" fill="rgb(219,95,25)" rx="2" ry="2" />
<text  x="686.83" y="1695.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="855.7" y="1941" width="0.2" height="15.0" fill="rgb(232,73,27)" rx="2" ry="2" />
<text  x="858.68" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1188.4" y="1909" width="0.8" height="15.0" fill="rgb(225,42,23)" rx="2" ry="2" />
<text  x="1191.41" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="847.5" y="1909" width="0.2" height="15.0" fill="rgb(229,92,1)" rx="2" ry="2" />
<text  x="850.50" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="166.3" y="1973" width="0.2" height="15.0" fill="rgb(212,148,16)" rx="2" ry="2" />
<text  x="169.30" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1003.6" y="1813" width="0.2" height="15.0" fill="rgb(237,181,9)" rx="2" ry="2" />
<text  x="1006.60" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="272.8" y="1797" width="0.2" height="15.0" fill="rgb(247,82,39)" rx="2" ry="2" />
<text  x="275.75" y="1807.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="1024.5" y="2037" width="0.2" height="15.0" fill="rgb(235,168,18)" rx="2" ry="2" />
<text  x="1027.53" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (14 samples, 0.24%)</title><rect x="68.4" y="1941" width="2.8" height="15.0" fill="rgb(236,227,32)" rx="2" ry="2" />
<text  x="71.41" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="783.5" y="1557" width="0.4" height="15.0" fill="rgb(218,206,1)" rx="2" ry="2" />
<text  x="786.51" y="1567.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="119.2" y="1845" width="0.2" height="15.0" fill="rgb(250,58,36)" rx="2" ry="2" />
<text  x="122.25" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="169.3" y="1973" width="0.8" height="15.0" fill="rgb(237,28,1)" rx="2" ry="2" />
<text  x="172.29" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="917.5" y="2005" width="0.2" height="15.0" fill="rgb(239,156,17)" rx="2" ry="2" />
<text  x="920.48" y="2015.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="312.4" y="1637" width="0.2" height="15.0" fill="rgb(211,102,5)" rx="2" ry="2" />
<text  x="315.43" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="485" width="14.2" height="15.0" fill="rgb(208,139,22)" rx="2" ry="2" />
<text  x="103.11" y="495.5" ></text>
</g>
<g >
<title>locks_remove_file (2 samples, 0.03%)</title><rect x="741.8" y="1797" width="0.4" height="15.0" fill="rgb(210,93,32)" rx="2" ry="2" />
<text  x="744.84" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="316.4" y="1765" width="0.2" height="15.0" fill="rgb(211,40,10)" rx="2" ry="2" />
<text  x="319.41" y="1775.5" ></text>
</g>
<g >
<title>new_inode_pseudo (48 samples, 0.81%)</title><rect x="388.4" y="1941" width="9.6" height="15.0" fill="rgb(212,75,26)" rx="2" ry="2" />
<text  x="391.38" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="892.2" y="1909" width="0.8" height="15.0" fill="rgb(213,123,37)" rx="2" ry="2" />
<text  x="895.16" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1108.9" y="1813" width="0.2" height="15.0" fill="rgb(237,200,26)" rx="2" ry="2" />
<text  x="1111.86" y="1823.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="155.9" y="2005" width="0.8" height="15.0" fill="rgb(231,212,51)" rx="2" ry="2" />
<text  x="158.93" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1108.9" y="1845" width="0.2" height="15.0" fill="rgb(218,118,34)" rx="2" ry="2" />
<text  x="1111.86" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (7 samples, 0.12%)</title><rect x="889.4" y="1941" width="1.4" height="15.0" fill="rgb(226,103,16)" rx="2" ry="2" />
<text  x="892.37" y="1951.5" ></text>
</g>
<g >
<title>sock_def_readable (4 samples, 0.07%)</title><rect x="292.5" y="1493" width="0.8" height="15.0" fill="rgb(236,158,52)" rx="2" ry="2" />
<text  x="295.49" y="1503.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1128.8" y="1893" width="0.2" height="15.0" fill="rgb(240,120,41)" rx="2" ry="2" />
<text  x="1131.80" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="903.3" y="1669" width="0.2" height="15.0" fill="rgb(231,207,1)" rx="2" ry="2" />
<text  x="906.32" y="1679.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="88.5" y="1973" width="0.2" height="15.0" fill="rgb(219,142,33)" rx="2" ry="2" />
<text  x="91.55" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="248.8" y="1829" width="0.2" height="15.0" fill="rgb(212,171,32)" rx="2" ry="2" />
<text  x="251.83" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="971.5" y="1829" width="0.2" height="15.0" fill="rgb(242,9,40)" rx="2" ry="2" />
<text  x="974.50" y="1839.5" ></text>
</g>
<g >
<title>__copy_skb_header (5 samples, 0.08%)</title><rect x="805.2" y="1637" width="1.0" height="15.0" fill="rgb(235,103,30)" rx="2" ry="2" />
<text  x="808.24" y="1647.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="15.6" y="1909" width="0.2" height="15.0" fill="rgb(245,163,46)" rx="2" ry="2" />
<text  x="18.58" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="989.4" y="1669" width="0.2" height="15.0" fill="rgb(234,84,40)" rx="2" ry="2" />
<text  x="992.45" y="1679.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1175.2" y="1941" width="0.4" height="15.0" fill="rgb(247,38,34)" rx="2" ry="2" />
<text  x="1178.25" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (2 samples, 0.03%)</title><rect x="75.2" y="1957" width="0.4" height="15.0" fill="rgb(206,143,6)" rx="2" ry="2" />
<text  x="78.19" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (8 samples, 0.14%)</title><rect x="66.8" y="1941" width="1.6" height="15.0" fill="rgb(243,172,50)" rx="2" ry="2" />
<text  x="69.82" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="114.1" y="389" width="0.2" height="15.0" fill="rgb(218,113,40)" rx="2" ry="2" />
<text  x="117.06" y="399.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="727.9" y="1717" width="0.2" height="15.0" fill="rgb(215,3,39)" rx="2" ry="2" />
<text  x="730.89" y="1727.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="983.7" y="1973" width="0.8" height="15.0" fill="rgb(207,210,53)" rx="2" ry="2" />
<text  x="986.66" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="87.2" y="1957" width="0.9" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="90.15" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="55.7" y="1941" width="0.9" height="15.0" fill="rgb(251,76,21)" rx="2" ry="2" />
<text  x="58.65" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="820.8" y="1637" width="0.2" height="15.0" fill="rgb(216,119,7)" rx="2" ry="2" />
<text  x="823.79" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="335.6" y="1845" width="0.2" height="15.0" fill="rgb(209,225,49)" rx="2" ry="2" />
<text  x="338.55" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="658.1" y="1765" width="0.2" height="15.0" fill="rgb(237,167,17)" rx="2" ry="2" />
<text  x="661.11" y="1775.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (13 samples, 0.22%)</title><rect x="799.1" y="1541" width="2.6" height="15.0" fill="rgb(246,57,49)" rx="2" ry="2" />
<text  x="802.06" y="1551.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="886.0" y="1845" width="0.2" height="15.0" fill="rgb(253,206,36)" rx="2" ry="2" />
<text  x="888.98" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="153.9" y="1909" width="0.2" height="15.0" fill="rgb(251,86,23)" rx="2" ry="2" />
<text  x="156.94" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="489.9" y="1765" width="0.2" height="15.0" fill="rgb(253,68,24)" rx="2" ry="2" />
<text  x="492.85" y="1775.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (49 samples, 0.83%)</title><rect x="1099.3" y="1925" width="9.8" height="15.0" fill="rgb(234,140,43)" rx="2" ry="2" />
<text  x="1102.29" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="228.1" y="1797" width="0.2" height="15.0" fill="rgb(245,193,27)" rx="2" ry="2" />
<text  x="231.10" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="110.9" y="37" width="0.2" height="15.0" fill="rgb(244,187,2)" rx="2" ry="2" />
<text  x="113.88" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="499.8" y="1781" width="0.4" height="15.0" fill="rgb(231,9,3)" rx="2" ry="2" />
<text  x="502.82" y="1791.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.02%)</title><rect x="689.8" y="1509" width="0.2" height="15.0" fill="rgb(229,95,31)" rx="2" ry="2" />
<text  x="692.81" y="1519.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="854.3" y="1941" width="0.2" height="15.0" fill="rgb(208,206,1)" rx="2" ry="2" />
<text  x="857.28" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="25.0" y="2005" width="0.7" height="15.0" fill="rgb(228,25,36)" rx="2" ry="2" />
<text  x="27.95" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1062.2" y="1973" width="0.2" height="15.0" fill="rgb(206,161,11)" rx="2" ry="2" />
<text  x="1065.21" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (4 samples, 0.07%)</title><rect x="882.4" y="1925" width="0.8" height="15.0" fill="rgb(206,83,43)" rx="2" ry="2" />
<text  x="885.39" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="989.4" y="1685" width="0.2" height="15.0" fill="rgb(246,145,18)" rx="2" ry="2" />
<text  x="992.45" y="1695.5" ></text>
</g>
<g >
<title>ep_remove (73 samples, 1.23%)</title><rect x="461.7" y="1973" width="14.6" height="15.0" fill="rgb(230,73,29)" rx="2" ry="2" />
<text  x="464.75" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="489.9" y="1861" width="0.2" height="15.0" fill="rgb(212,172,28)" rx="2" ry="2" />
<text  x="492.85" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="82.0" y="1925" width="0.2" height="15.0" fill="rgb(218,136,45)" rx="2" ry="2" />
<text  x="84.97" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="634.6" y="1941" width="0.2" height="15.0" fill="rgb(225,162,4)" rx="2" ry="2" />
<text  x="637.59" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (10 samples, 0.17%)</title><rect x="1094.5" y="1909" width="2.0" height="15.0" fill="rgb(239,64,39)" rx="2" ry="2" />
<text  x="1097.51" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1188.4" y="2005" width="0.8" height="15.0" fill="rgb(237,176,39)" rx="2" ry="2" />
<text  x="1191.41" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="529.1" y="1877" width="0.2" height="15.0" fill="rgb(238,43,53)" rx="2" ry="2" />
<text  x="532.13" y="1887.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="185.0" y="1877" width="0.2" height="15.0" fill="rgb(238,100,34)" rx="2" ry="2" />
<text  x="188.04" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1173.7" y="1941" width="0.2" height="15.0" fill="rgb(246,132,35)" rx="2" ry="2" />
<text  x="1176.65" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1001.8" y="1957" width="0.2" height="15.0" fill="rgb(210,151,45)" rx="2" ry="2" />
<text  x="1004.81" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (25 samples, 0.42%)</title><rect x="57.6" y="1957" width="5.0" height="15.0" fill="rgb(254,69,2)" rx="2" ry="2" />
<text  x="60.65" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="189.6" y="1957" width="0.4" height="15.0" fill="rgb(243,42,9)" rx="2" ry="2" />
<text  x="192.62" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="147.4" y="1877" width="0.2" height="15.0" fill="rgb(231,221,29)" rx="2" ry="2" />
<text  x="150.36" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.77%)</title><rect x="98.9" y="1909" width="20.9" height="15.0" fill="rgb(229,180,50)" rx="2" ry="2" />
<text  x="101.91" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (12 samples, 0.20%)</title><rect x="539.7" y="1973" width="2.4" height="15.0" fill="rgb(230,185,21)" rx="2" ry="2" />
<text  x="542.69" y="1983.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="562.0" y="1813" width="0.2" height="15.0" fill="rgb(227,175,46)" rx="2" ry="2" />
<text  x="565.02" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="408.3" y="1877" width="0.2" height="15.0" fill="rgb(219,39,42)" rx="2" ry="2" />
<text  x="411.32" y="1887.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="179.1" y="1989" width="0.2" height="15.0" fill="rgb(218,51,31)" rx="2" ry="2" />
<text  x="182.06" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (102 samples, 1.72%)</title><rect x="580.4" y="1989" width="20.3" height="15.0" fill="rgb(247,25,26)" rx="2" ry="2" />
<text  x="583.36" y="1999.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="292.9" y="1381" width="0.4" height="15.0" fill="rgb(229,184,48)" rx="2" ry="2" />
<text  x="295.89" y="1391.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="974.3" y="2005" width="0.2" height="15.0" fill="rgb(227,50,2)" rx="2" ry="2" />
<text  x="977.29" y="2015.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="571.4" y="1637" width="0.2" height="15.0" fill="rgb(227,165,29)" rx="2" ry="2" />
<text  x="574.39" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output (142 samples, 2.40%)</title><rect x="287.7" y="1765" width="28.3" height="15.0" fill="rgb(212,221,32)" rx="2" ry="2" />
<text  x="290.71" y="1775.5" >i..</text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="844.3" y="1941" width="0.2" height="15.0" fill="rgb(246,126,20)" rx="2" ry="2" />
<text  x="847.31" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="820.8" y="1701" width="0.2" height="15.0" fill="rgb(242,213,8)" rx="2" ry="2" />
<text  x="823.79" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="149.9" y="1893" width="0.4" height="15.0" fill="rgb(240,135,4)" rx="2" ry="2" />
<text  x="152.95" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="414.5" y="2021" width="2.0" height="15.0" fill="rgb(225,10,25)" rx="2" ry="2" />
<text  x="417.50" y="2031.5" ></text>
</g>
<g >
<title>sch_direct_xmit (2 samples, 0.03%)</title><rect x="694.0" y="1541" width="0.4" height="15.0" fill="rgb(246,176,52)" rx="2" ry="2" />
<text  x="697.00" y="1551.5" ></text>
</g>
<g >
<title>sock_rfree (7 samples, 0.12%)</title><rect x="1087.9" y="1877" width="1.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1090.93" y="1887.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="774.1" y="1557" width="0.2" height="15.0" fill="rgb(248,184,38)" rx="2" ry="2" />
<text  x="777.14" y="1567.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="969.1" y="1669" width="0.2" height="15.0" fill="rgb(208,182,35)" rx="2" ry="2" />
<text  x="972.11" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="683.6" y="1813" width="0.4" height="15.0" fill="rgb(214,1,27)" rx="2" ry="2" />
<text  x="686.63" y="1823.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="227.3" y="1653" width="0.2" height="15.0" fill="rgb(242,182,1)" rx="2" ry="2" />
<text  x="230.30" y="1663.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="394.8" y="1877" width="0.2" height="15.0" fill="rgb(228,134,19)" rx="2" ry="2" />
<text  x="397.76" y="1887.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="413.3" y="1957" width="0.2" height="15.0" fill="rgb(222,74,23)" rx="2" ry="2" />
<text  x="416.30" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="725" width="14.4" height="15.0" fill="rgb(249,30,32)" rx="2" ry="2" />
<text  x="103.11" y="735.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (183 samples, 3.09%)</title><rect x="578.4" y="2037" width="36.5" height="15.0" fill="rgb(250,10,9)" rx="2" ry="2" />
<text  x="581.37" y="2047.5" >fac..</text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="964.9" y="2005" width="0.4" height="15.0" fill="rgb(206,98,17)" rx="2" ry="2" />
<text  x="967.92" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="774.1" y="1573" width="0.2" height="15.0" fill="rgb(211,222,38)" rx="2" ry="2" />
<text  x="777.14" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (14 samples, 0.24%)</title><rect x="46.7" y="1973" width="2.8" height="15.0" fill="rgb(212,102,32)" rx="2" ry="2" />
<text  x="49.68" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="545.7" y="1957" width="0.4" height="15.0" fill="rgb(220,63,15)" rx="2" ry="2" />
<text  x="548.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="862.3" y="1989" width="1.0" height="15.0" fill="rgb(234,41,2)" rx="2" ry="2" />
<text  x="865.26" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="515.2" y="1957" width="0.2" height="15.0" fill="rgb(234,97,15)" rx="2" ry="2" />
<text  x="518.17" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.27%)</title><rect x="608.9" y="1909" width="3.2" height="15.0" fill="rgb(243,202,0)" rx="2" ry="2" />
<text  x="611.87" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (33 samples, 0.56%)</title><rect x="986.7" y="1957" width="6.5" height="15.0" fill="rgb(230,136,53)" rx="2" ry="2" />
<text  x="989.65" y="1967.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="96.5" y="2005" width="0.2" height="15.0" fill="rgb(224,20,6)" rx="2" ry="2" />
<text  x="99.52" y="2015.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1181.2" y="1989" width="0.2" height="15.0" fill="rgb(227,171,24)" rx="2" ry="2" />
<text  x="1184.23" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="36.7" y="2005" width="0.2" height="15.0" fill="rgb(210,115,4)" rx="2" ry="2" />
<text  x="39.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="700.6" y="2037" width="0.4" height="15.0" fill="rgb(249,215,21)" rx="2" ry="2" />
<text  x="703.58" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="119.4" y="1877" width="0.2" height="15.0" fill="rgb(251,31,10)" rx="2" ry="2" />
<text  x="122.45" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="920.7" y="1957" width="0.2" height="15.0" fill="rgb(210,194,28)" rx="2" ry="2" />
<text  x="923.67" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.2" y="2037" width="0.2" height="15.0" fill="rgb(245,156,36)" rx="2" ry="2" />
<text  x="17.19" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;void  (2 samples, 0.03%)</title><rect x="935.6" y="1941" width="0.4" height="15.0" fill="rgb(249,72,7)" rx="2" ry="2" />
<text  x="938.62" y="1951.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (10 samples, 0.17%)</title><rect x="751.6" y="1717" width="2.0" height="15.0" fill="rgb(222,8,54)" rx="2" ry="2" />
<text  x="754.61" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1000.4" y="1941" width="0.2" height="15.0" fill="rgb(248,178,38)" rx="2" ry="2" />
<text  x="1003.41" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="920.3" y="2037" width="1.0" height="15.0" fill="rgb(254,219,49)" rx="2" ry="2" />
<text  x="923.27" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="971.5" y="1845" width="0.2" height="15.0" fill="rgb(226,139,5)" rx="2" ry="2" />
<text  x="974.50" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="517" width="14.2" height="15.0" fill="rgb(221,170,1)" rx="2" ry="2" />
<text  x="103.11" y="527.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="265.2" y="1861" width="0.2" height="15.0" fill="rgb(241,94,33)" rx="2" ry="2" />
<text  x="268.18" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1144.3" y="2005" width="0.4" height="15.0" fill="rgb(213,158,49)" rx="2" ry="2" />
<text  x="1147.35" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.05%)</title><rect x="291.1" y="1493" width="0.6" height="15.0" fill="rgb(224,166,38)" rx="2" ry="2" />
<text  x="294.09" y="1503.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="114.7" y="1189" width="0.2" height="15.0" fill="rgb(221,8,6)" rx="2" ry="2" />
<text  x="117.66" y="1199.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="408.3" y="1813" width="0.2" height="15.0" fill="rgb(251,104,6)" rx="2" ry="2" />
<text  x="411.32" y="1823.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="842.7" y="1909" width="0.2" height="15.0" fill="rgb(237,63,42)" rx="2" ry="2" />
<text  x="845.72" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="379.2" y="1877" width="0.2" height="15.0" fill="rgb(245,228,12)" rx="2" ry="2" />
<text  x="382.21" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="728.1" y="1669" width="0.2" height="15.0" fill="rgb(217,151,47)" rx="2" ry="2" />
<text  x="731.09" y="1679.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (542 samples, 9.16%)</title><rect x="722.3" y="1861" width="108.1" height="15.0" fill="rgb(227,194,53)" rx="2" ry="2" />
<text  x="725.31" y="1871.5" >exit_to_userm..</text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (2 samples, 0.03%)</title><rect x="621.6" y="2005" width="0.4" height="15.0" fill="rgb(212,184,39)" rx="2" ry="2" />
<text  x="624.63" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="894.2" y="1829" width="0.2" height="15.0" fill="rgb(222,189,54)" rx="2" ry="2" />
<text  x="897.15" y="1839.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="291.5" y="1381" width="0.2" height="15.0" fill="rgb(236,61,22)" rx="2" ry="2" />
<text  x="294.49" y="1391.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="905.7" y="1973" width="0.2" height="15.0" fill="rgb(230,5,44)" rx="2" ry="2" />
<text  x="908.72" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="159.5" y="2005" width="0.2" height="15.0" fill="rgb(233,74,24)" rx="2" ry="2" />
<text  x="162.52" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="581.0" y="1957" width="1.4" height="15.0" fill="rgb(228,155,51)" rx="2" ry="2" />
<text  x="583.96" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="847.5" y="1813" width="0.2" height="15.0" fill="rgb(224,132,14)" rx="2" ry="2" />
<text  x="850.50" y="1823.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (1 samples, 0.02%)</title><rect x="612.3" y="1941" width="0.2" height="15.0" fill="rgb(220,31,23)" rx="2" ry="2" />
<text  x="615.26" y="1951.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="386.2" y="1957" width="0.2" height="15.0" fill="rgb(247,154,33)" rx="2" ry="2" />
<text  x="389.19" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1139.4" y="1845" width="0.2" height="15.0" fill="rgb(234,87,32)" rx="2" ry="2" />
<text  x="1142.36" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="396.6" y="1861" width="0.2" height="15.0" fill="rgb(214,129,46)" rx="2" ry="2" />
<text  x="399.56" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="929.4" y="1877" width="0.2" height="15.0" fill="rgb(215,207,26)" rx="2" ry="2" />
<text  x="932.44" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="291.5" y="1461" width="0.2" height="15.0" fill="rgb(236,88,4)" rx="2" ry="2" />
<text  x="294.49" y="1471.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (6 samples, 0.10%)</title><rect x="1009.6" y="2005" width="1.2" height="15.0" fill="rgb(223,34,48)" rx="2" ry="2" />
<text  x="1012.58" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="548.3" y="1781" width="0.2" height="15.0" fill="rgb(217,60,7)" rx="2" ry="2" />
<text  x="551.27" y="1791.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="290.5" y="1605" width="0.2" height="15.0" fill="rgb(248,138,12)" rx="2" ry="2" />
<text  x="293.50" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="957.7" y="1781" width="0.2" height="15.0" fill="rgb(243,182,14)" rx="2" ry="2" />
<text  x="960.75" y="1791.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.07%)</title><rect x="1060.8" y="1973" width="0.8" height="15.0" fill="rgb(210,63,0)" rx="2" ry="2" />
<text  x="1063.82" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="396.6" y="1813" width="0.2" height="15.0" fill="rgb(223,179,26)" rx="2" ry="2" />
<text  x="399.56" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="906.1" y="1989" width="0.4" height="15.0" fill="rgb(210,123,48)" rx="2" ry="2" />
<text  x="909.11" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (4 samples, 0.07%)</title><rect x="1143.4" y="2005" width="0.7" height="15.0" fill="rgb(226,89,24)" rx="2" ry="2" />
<text  x="1146.35" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="1112.6" y="1477" width="0.2" height="15.0" fill="rgb(248,9,26)" rx="2" ry="2" />
<text  x="1115.65" y="1487.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="408.3" y="1621" width="0.2" height="15.0" fill="rgb(246,9,47)" rx="2" ry="2" />
<text  x="411.32" y="1631.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="887.8" y="1909" width="0.2" height="15.0" fill="rgb(225,178,47)" rx="2" ry="2" />
<text  x="890.77" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="970.7" y="2005" width="0.2" height="15.0" fill="rgb(244,79,1)" rx="2" ry="2" />
<text  x="973.71" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1001.0" y="1941" width="0.4" height="15.0" fill="rgb(217,195,9)" rx="2" ry="2" />
<text  x="1004.01" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (1 samples, 0.02%)</title><rect x="72.0" y="1957" width="0.2" height="15.0" fill="rgb(219,199,47)" rx="2" ry="2" />
<text  x="75.00" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="764.4" y="1637" width="0.2" height="15.0" fill="rgb(245,203,22)" rx="2" ry="2" />
<text  x="767.37" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="204.2" y="1941" width="0.6" height="15.0" fill="rgb(222,22,13)" rx="2" ry="2" />
<text  x="207.17" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (6 samples, 0.10%)</title><rect x="67.2" y="1909" width="1.2" height="15.0" fill="rgb(251,27,20)" rx="2" ry="2" />
<text  x="70.22" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="1182.0" y="2021" width="0.2" height="15.0" fill="rgb(239,29,7)" rx="2" ry="2" />
<text  x="1185.03" y="2031.5" ></text>
</g>
<g >
<title>__GI___setsockopt (11 samples, 0.19%)</title><rect x="204.8" y="1957" width="2.2" height="15.0" fill="rgb(224,17,39)" rx="2" ry="2" />
<text  x="207.77" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="490.7" y="1941" width="0.2" height="15.0" fill="rgb(237,104,44)" rx="2" ry="2" />
<text  x="493.65" y="1951.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="284.9" y="1509" width="0.2" height="15.0" fill="rgb(239,39,7)" rx="2" ry="2" />
<text  x="287.91" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="537.9" y="1925" width="0.2" height="15.0" fill="rgb(240,93,3)" rx="2" ry="2" />
<text  x="540.90" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1112.4" y="1669" width="0.4" height="15.0" fill="rgb(225,177,42)" rx="2" ry="2" />
<text  x="1115.45" y="1679.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="483.1" y="1973" width="0.6" height="15.0" fill="rgb(228,203,14)" rx="2" ry="2" />
<text  x="486.08" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="409.1" y="1781" width="0.2" height="15.0" fill="rgb(213,43,39)" rx="2" ry="2" />
<text  x="412.11" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="227.3" y="1557" width="0.2" height="15.0" fill="rgb(216,124,36)" rx="2" ry="2" />
<text  x="230.30" y="1567.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="408.3" y="1797" width="0.2" height="15.0" fill="rgb(234,191,11)" rx="2" ry="2" />
<text  x="411.32" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="691.8" y="1829" width="0.2" height="15.0" fill="rgb(231,31,17)" rx="2" ry="2" />
<text  x="694.80" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="763.2" y="1445" width="0.2" height="15.0" fill="rgb(217,196,5)" rx="2" ry="2" />
<text  x="766.17" y="1455.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6 samples, 0.10%)</title><rect x="1025.9" y="2037" width="1.2" height="15.0" fill="rgb(251,201,29)" rx="2" ry="2" />
<text  x="1028.93" y="2047.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="321.4" y="1797" width="0.6" height="15.0" fill="rgb(231,167,16)" rx="2" ry="2" />
<text  x="324.40" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (2 samples, 0.03%)</title><rect x="565.8" y="1989" width="0.4" height="15.0" fill="rgb(206,186,20)" rx="2" ry="2" />
<text  x="568.81" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (106 samples, 1.79%)</title><rect x="488.3" y="2021" width="21.1" height="15.0" fill="rgb(230,72,9)" rx="2" ry="2" />
<text  x="491.26" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="505.8" y="1845" width="0.4" height="15.0" fill="rgb(212,65,31)" rx="2" ry="2" />
<text  x="508.80" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="694.0" y="1717" width="0.4" height="15.0" fill="rgb(232,136,23)" rx="2" ry="2" />
<text  x="697.00" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="221.7" y="1813" width="0.6" height="15.0" fill="rgb(234,117,12)" rx="2" ry="2" />
<text  x="224.72" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (9 samples, 0.15%)</title><rect x="558.2" y="1909" width="1.8" height="15.0" fill="rgb(237,199,44)" rx="2" ry="2" />
<text  x="561.23" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1013.8" y="1781" width="0.2" height="15.0" fill="rgb(223,215,34)" rx="2" ry="2" />
<text  x="1016.77" y="1791.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="924.9" y="1925" width="0.2" height="15.0" fill="rgb(232,99,11)" rx="2" ry="2" />
<text  x="927.85" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="840.9" y="1909" width="0.6" height="15.0" fill="rgb(227,182,43)" rx="2" ry="2" />
<text  x="843.92" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="767.4" y="1669" width="0.2" height="15.0" fill="rgb(232,64,5)" rx="2" ry="2" />
<text  x="770.36" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="669.3" y="1925" width="0.8" height="15.0" fill="rgb(227,134,3)" rx="2" ry="2" />
<text  x="672.28" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="214.3" y="1893" width="2.2" height="15.0" fill="rgb(241,134,4)" rx="2" ry="2" />
<text  x="217.34" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="610.1" y="1829" width="0.2" height="15.0" fill="rgb(252,89,29)" rx="2" ry="2" />
<text  x="613.07" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="737.9" y="1589" width="0.2" height="15.0" fill="rgb(208,113,8)" rx="2" ry="2" />
<text  x="740.86" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1098.9" y="1909" width="0.2" height="15.0" fill="rgb(240,4,12)" rx="2" ry="2" />
<text  x="1101.89" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="228.3" y="1957" width="0.2" height="15.0" fill="rgb(227,148,34)" rx="2" ry="2" />
<text  x="231.30" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="291.3" y="1397" width="0.2" height="15.0" fill="rgb(211,206,42)" rx="2" ry="2" />
<text  x="294.29" y="1407.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="14.6" y="1957" width="0.8" height="15.0" fill="rgb(232,123,53)" rx="2" ry="2" />
<text  x="17.59" y="1967.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="598.3" y="1877" width="0.2" height="15.0" fill="rgb(228,123,23)" rx="2" ry="2" />
<text  x="601.31" y="1887.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="738.1" y="1701" width="0.4" height="15.0" fill="rgb(225,12,12)" rx="2" ry="2" />
<text  x="741.06" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="378.2" y="1909" width="1.2" height="15.0" fill="rgb(250,19,50)" rx="2" ry="2" />
<text  x="381.21" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="145.6" y="1781" width="0.2" height="15.0" fill="rgb(228,89,15)" rx="2" ry="2" />
<text  x="148.56" y="1791.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="116.7" y="1669" width="0.2" height="15.0" fill="rgb(243,52,5)" rx="2" ry="2" />
<text  x="119.66" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="408.3" y="1717" width="0.2" height="15.0" fill="rgb(249,125,15)" rx="2" ry="2" />
<text  x="411.32" y="1727.5" ></text>
</g>
<g >
<title>swake_up (1 samples, 0.02%)</title><rect x="877.6" y="1813" width="0.2" height="15.0" fill="rgb(226,9,11)" rx="2" ry="2" />
<text  x="880.61" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="381.0" y="1909" width="0.6" height="15.0" fill="rgb(237,27,52)" rx="2" ry="2" />
<text  x="384.01" y="1919.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="480.3" y="1861" width="0.2" height="15.0" fill="rgb(224,65,35)" rx="2" ry="2" />
<text  x="483.29" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (12 samples, 0.20%)</title><rect x="1076.4" y="1877" width="2.4" height="15.0" fill="rgb(221,151,29)" rx="2" ry="2" />
<text  x="1079.37" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (3 samples, 0.05%)</title><rect x="31.3" y="1973" width="0.6" height="15.0" fill="rgb(254,204,31)" rx="2" ry="2" />
<text  x="34.33" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="77.4" y="1861" width="0.2" height="15.0" fill="rgb(228,62,29)" rx="2" ry="2" />
<text  x="80.38" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="918.7" y="2021" width="1.0" height="15.0" fill="rgb(233,100,14)" rx="2" ry="2" />
<text  x="921.67" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="246.2" y="1957" width="0.2" height="15.0" fill="rgb(234,134,27)" rx="2" ry="2" />
<text  x="249.24" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="88.3" y="1973" width="0.2" height="15.0" fill="rgb(218,200,21)" rx="2" ry="2" />
<text  x="91.35" y="1983.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="236.5" y="1893" width="0.2" height="15.0" fill="rgb(224,116,38)" rx="2" ry="2" />
<text  x="239.47" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (1 samples, 0.02%)</title><rect x="640.0" y="1989" width="0.2" height="15.0" fill="rgb(245,47,3)" rx="2" ry="2" />
<text  x="642.97" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (29 samples, 0.49%)</title><rect x="938.4" y="1989" width="5.8" height="15.0" fill="rgb(226,45,3)" rx="2" ry="2" />
<text  x="941.41" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="29.5" y="1957" width="0.2" height="15.0" fill="rgb(213,141,6)" rx="2" ry="2" />
<text  x="32.54" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="408.3" y="1893" width="0.2" height="15.0" fill="rgb(222,120,34)" rx="2" ry="2" />
<text  x="411.32" y="1903.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="329.8" y="1701" width="0.2" height="15.0" fill="rgb(252,158,19)" rx="2" ry="2" />
<text  x="332.77" y="1711.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="469.1" y="1925" width="1.2" height="15.0" fill="rgb(235,77,23)" rx="2" ry="2" />
<text  x="472.12" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="565" width="14.2" height="15.0" fill="rgb(217,225,38)" rx="2" ry="2" />
<text  x="103.11" y="575.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="227.3" y="1829" width="0.2" height="15.0" fill="rgb(227,92,27)" rx="2" ry="2" />
<text  x="230.30" y="1839.5" ></text>
</g>
<g >
<title>__close (2 samples, 0.03%)</title><rect x="200.2" y="2037" width="0.4" height="15.0" fill="rgb(251,221,16)" rx="2" ry="2" />
<text  x="203.19" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.19%)</title><rect x="224.5" y="1925" width="2.2" height="15.0" fill="rgb(212,3,32)" rx="2" ry="2" />
<text  x="227.51" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="145.6" y="1861" width="0.2" height="15.0" fill="rgb(218,87,30)" rx="2" ry="2" />
<text  x="148.56" y="1871.5" ></text>
</g>
<g >
<title>fd_install (3 samples, 0.05%)</title><rect x="363.3" y="1957" width="0.6" height="15.0" fill="rgb(243,119,22)" rx="2" ry="2" />
<text  x="366.26" y="1967.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (398 samples, 6.72%)</title><rect x="256.8" y="1893" width="79.3" height="15.0" fill="rgb(227,141,44)" rx="2" ry="2" />
<text  x="259.81" y="1903.5" >tcp_sendm..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="113.3" y="37" width="0.4" height="15.0" fill="rgb(254,136,41)" rx="2" ry="2" />
<text  x="116.27" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="530.9" y="1813" width="0.2" height="15.0" fill="rgb(214,79,4)" rx="2" ry="2" />
<text  x="533.92" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="527.1" y="2005" width="0.8" height="15.0" fill="rgb(243,203,33)" rx="2" ry="2" />
<text  x="530.13" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="694.0" y="1573" width="0.4" height="15.0" fill="rgb(242,71,27)" rx="2" ry="2" />
<text  x="697.00" y="1583.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="520.0" y="1957" width="0.8" height="15.0" fill="rgb(246,209,22)" rx="2" ry="2" />
<text  x="522.96" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="362.3" y="1957" width="0.2" height="15.0" fill="rgb(249,213,14)" rx="2" ry="2" />
<text  x="365.27" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="835.3" y="1813" width="0.2" height="15.0" fill="rgb(206,39,26)" rx="2" ry="2" />
<text  x="838.34" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1139.4" y="1925" width="0.2" height="15.0" fill="rgb(231,120,21)" rx="2" ry="2" />
<text  x="1142.36" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="252.0" y="1893" width="0.2" height="15.0" fill="rgb(240,149,49)" rx="2" ry="2" />
<text  x="255.02" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="556.8" y="1813" width="0.2" height="15.0" fill="rgb(211,82,25)" rx="2" ry="2" />
<text  x="559.84" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="126.0" y="1957" width="0.4" height="15.0" fill="rgb(205,97,26)" rx="2" ry="2" />
<text  x="129.03" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="880.2" y="1893" width="0.2" height="15.0" fill="rgb(213,159,18)" rx="2" ry="2" />
<text  x="883.20" y="1903.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="808.2" y="1669" width="0.2" height="15.0" fill="rgb(217,188,26)" rx="2" ry="2" />
<text  x="811.23" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="200.6" y="2005" width="0.2" height="15.0" fill="rgb(214,200,15)" rx="2" ry="2" />
<text  x="203.59" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="832.2" y="1605" width="0.2" height="15.0" fill="rgb(231,157,36)" rx="2" ry="2" />
<text  x="835.15" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="1025.5" y="2037" width="0.4" height="15.0" fill="rgb(250,23,21)" rx="2" ry="2" />
<text  x="1028.53" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="284.9" y="1557" width="0.2" height="15.0" fill="rgb(214,1,52)" rx="2" ry="2" />
<text  x="287.91" y="1567.5" ></text>
</g>
<g >
<title>kfree_call_rcu (4 samples, 0.07%)</title><rect x="733.9" y="1669" width="0.8" height="15.0" fill="rgb(230,183,10)" rx="2" ry="2" />
<text  x="736.87" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1176.6" y="1989" width="0.2" height="15.0" fill="rgb(219,120,31)" rx="2" ry="2" />
<text  x="1179.64" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="223.9" y="1797" width="0.2" height="15.0" fill="rgb(218,65,15)" rx="2" ry="2" />
<text  x="226.91" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (613 samples, 10.36%)</title><rect x="713.1" y="1893" width="122.2" height="15.0" fill="rgb(217,136,53)" rx="2" ry="2" />
<text  x="716.14" y="1903.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="853.7" y="1925" width="0.2" height="15.0" fill="rgb(249,73,28)" rx="2" ry="2" />
<text  x="856.68" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="863.5" y="1989" width="0.4" height="15.0" fill="rgb(217,10,20)" rx="2" ry="2" />
<text  x="866.45" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="105.5" y="37" width="0.2" height="15.0" fill="rgb(250,65,50)" rx="2" ry="2" />
<text  x="108.49" y="47.5" ></text>
</g>
<g >
<title>skb_release_all (71 samples, 1.20%)</title><rect x="1078.8" y="1909" width="14.1" height="15.0" fill="rgb(233,186,6)" rx="2" ry="2" />
<text  x="1081.76" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="154.1" y="1813" width="0.2" height="15.0" fill="rgb(250,190,8)" rx="2" ry="2" />
<text  x="157.14" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="138.6" y="1637" width="0.2" height="15.0" fill="rgb(245,166,26)" rx="2" ry="2" />
<text  x="141.59" y="1647.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="774.1" y="1653" width="0.2" height="15.0" fill="rgb(206,2,28)" rx="2" ry="2" />
<text  x="777.14" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (104 samples, 1.76%)</title><rect x="134.4" y="1989" width="20.7" height="15.0" fill="rgb(246,213,3)" rx="2" ry="2" />
<text  x="137.40" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10 samples, 0.17%)</title><rect x="934.8" y="1957" width="2.0" height="15.0" fill="rgb(229,192,4)" rx="2" ry="2" />
<text  x="937.82" y="1967.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::exception_ptr@plt (1 samples, 0.02%)</title><rect x="529.3" y="1877" width="0.2" height="15.0" fill="rgb(240,72,4)" rx="2" ry="2" />
<text  x="532.33" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="53.3" y="1925" width="0.4" height="15.0" fill="rgb(240,193,17)" rx="2" ry="2" />
<text  x="56.26" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="179.3" y="1893" width="0.2" height="15.0" fill="rgb(215,12,39)" rx="2" ry="2" />
<text  x="182.25" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="145.6" y="1829" width="0.2" height="15.0" fill="rgb(225,26,44)" rx="2" ry="2" />
<text  x="148.56" y="1839.5" ></text>
</g>
<g >
<title>sock_recvmsg (314 samples, 5.30%)</title><rect x="1062.4" y="1973" width="62.6" height="15.0" fill="rgb(226,34,47)" rx="2" ry="2" />
<text  x="1065.41" y="1983.5" >sock_r..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="882.4" y="1861" width="0.2" height="15.0" fill="rgb(237,108,27)" rx="2" ry="2" />
<text  x="885.39" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="480.3" y="1925" width="0.2" height="15.0" fill="rgb(223,13,8)" rx="2" ry="2" />
<text  x="483.29" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="396.4" y="1861" width="0.2" height="15.0" fill="rgb(237,203,36)" rx="2" ry="2" />
<text  x="399.36" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (3 samples, 0.05%)</title><rect x="972.3" y="2037" width="0.6" height="15.0" fill="rgb(219,41,25)" rx="2" ry="2" />
<text  x="975.30" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.27%)</title><rect x="631.2" y="1941" width="3.2" height="15.0" fill="rgb(216,118,16)" rx="2" ry="2" />
<text  x="634.20" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="751.2" y="1525" width="0.2" height="15.0" fill="rgb(215,35,3)" rx="2" ry="2" />
<text  x="754.21" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="145.6" y="1765" width="0.2" height="15.0" fill="rgb(232,42,39)" rx="2" ry="2" />
<text  x="148.56" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="683.8" y="1701" width="0.2" height="15.0" fill="rgb(249,77,34)" rx="2" ry="2" />
<text  x="686.83" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="295.9" y="1701" width="0.2" height="15.0" fill="rgb(211,15,10)" rx="2" ry="2" />
<text  x="298.88" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="997.8" y="1989" width="0.2" height="15.0" fill="rgb(226,12,23)" rx="2" ry="2" />
<text  x="1000.82" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="408.3" y="1669" width="0.2" height="15.0" fill="rgb(237,115,20)" rx="2" ry="2" />
<text  x="411.32" y="1679.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="1112.6" y="1461" width="0.2" height="15.0" fill="rgb(241,172,15)" rx="2" ry="2" />
<text  x="1115.65" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="291.3" y="1413" width="0.2" height="15.0" fill="rgb(235,41,26)" rx="2" ry="2" />
<text  x="294.29" y="1423.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="839.1" y="1909" width="0.4" height="15.0" fill="rgb(217,144,45)" rx="2" ry="2" />
<text  x="842.13" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (8 samples, 0.14%)</title><rect x="523.1" y="1989" width="1.6" height="15.0" fill="rgb(241,85,26)" rx="2" ry="2" />
<text  x="526.15" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="405.5" y="1685" width="0.2" height="15.0" fill="rgb(238,168,43)" rx="2" ry="2" />
<text  x="408.53" y="1695.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.9" y="1877" width="0.2" height="15.0" fill="rgb(212,206,33)" rx="2" ry="2" />
<text  x="101.91" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (41 samples, 0.69%)</title><rect x="1112.8" y="1573" width="8.2" height="15.0" fill="rgb(209,106,54)" rx="2" ry="2" />
<text  x="1115.85" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (6 samples, 0.10%)</title><rect x="292.1" y="1557" width="1.2" height="15.0" fill="rgb(238,105,53)" rx="2" ry="2" />
<text  x="295.09" y="1567.5" ></text>
</g>
<g >
<title>security_sk_alloc (1 samples, 0.02%)</title><rect x="689.8" y="1525" width="0.2" height="15.0" fill="rgb(210,202,41)" rx="2" ry="2" />
<text  x="692.81" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="767.4" y="1685" width="0.2" height="15.0" fill="rgb(252,143,37)" rx="2" ry="2" />
<text  x="770.36" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="594.3" y="1685" width="0.2" height="15.0" fill="rgb(254,134,2)" rx="2" ry="2" />
<text  x="597.32" y="1695.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="157.9" y="1925" width="0.8" height="15.0" fill="rgb(209,182,54)" rx="2" ry="2" />
<text  x="160.92" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="284.9" y="1733" width="0.2" height="15.0" fill="rgb(244,157,47)" rx="2" ry="2" />
<text  x="287.91" y="1743.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="546.1" y="1957" width="0.2" height="15.0" fill="rgb(237,218,51)" rx="2" ry="2" />
<text  x="549.07" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (1 samples, 0.02%)</title><rect x="226.7" y="1925" width="0.2" height="15.0" fill="rgb(222,170,20)" rx="2" ry="2" />
<text  x="229.70" y="1935.5" ></text>
</g>
<g >
<title>security_sk_clone (1 samples, 0.02%)</title><rect x="683.6" y="1621" width="0.2" height="15.0" fill="rgb(235,196,45)" rx="2" ry="2" />
<text  x="686.63" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="229.5" y="1733" width="0.2" height="15.0" fill="rgb(210,181,27)" rx="2" ry="2" />
<text  x="232.49" y="1743.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1122.4" y="1925" width="0.2" height="15.0" fill="rgb(244,154,16)" rx="2" ry="2" />
<text  x="1125.42" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (1 samples, 0.02%)</title><rect x="229.3" y="1989" width="0.2" height="15.0" fill="rgb(214,80,3)" rx="2" ry="2" />
<text  x="232.29" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="969.1" y="1813" width="0.2" height="15.0" fill="rgb(239,85,25)" rx="2" ry="2" />
<text  x="972.11" y="1823.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="548.3" y="1765" width="0.2" height="15.0" fill="rgb(252,41,14)" rx="2" ry="2" />
<text  x="551.27" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="61.0" y="1861" width="0.2" height="15.0" fill="rgb(235,19,17)" rx="2" ry="2" />
<text  x="64.04" y="1871.5" ></text>
</g>
<g >
<title>nmi_cpu_backtrace_handler (1 samples, 0.02%)</title><rect x="17.6" y="1829" width="0.2" height="15.0" fill="rgb(226,59,22)" rx="2" ry="2" />
<text  x="20.58" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="522.5" y="1973" width="0.2" height="15.0" fill="rgb(205,197,45)" rx="2" ry="2" />
<text  x="525.55" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_accept (63 samples, 1.06%)</title><rect x="369.2" y="1941" width="12.6" height="15.0" fill="rgb(245,225,54)" rx="2" ry="2" />
<text  x="372.24" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="899.1" y="2005" width="0.4" height="15.0" fill="rgb(210,67,47)" rx="2" ry="2" />
<text  x="902.14" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="610.5" y="1717" width="1.0" height="15.0" fill="rgb(213,217,8)" rx="2" ry="2" />
<text  x="613.47" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="320.2" y="1637" width="0.2" height="15.0" fill="rgb(240,227,43)" rx="2" ry="2" />
<text  x="323.20" y="1647.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="86.8" y="1941" width="0.4" height="15.0" fill="rgb(216,63,18)" rx="2" ry="2" />
<text  x="89.75" y="1951.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="464.5" y="1621" width="0.2" height="15.0" fill="rgb(222,0,13)" rx="2" ry="2" />
<text  x="467.54" y="1631.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="98.3" y="2021" width="0.2" height="15.0" fill="rgb(214,182,50)" rx="2" ry="2" />
<text  x="101.32" y="2031.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="664.9" y="1861" width="0.2" height="15.0" fill="rgb(227,27,42)" rx="2" ry="2" />
<text  x="667.89" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="534.3" y="1973" width="0.8" height="15.0" fill="rgb(221,195,41)" rx="2" ry="2" />
<text  x="537.31" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="37.3" y="2005" width="0.2" height="15.0" fill="rgb(224,47,33)" rx="2" ry="2" />
<text  x="40.31" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="615.5" y="2005" width="0.1" height="15.0" fill="rgb(216,42,8)" rx="2" ry="2" />
<text  x="618.45" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="30.5" y="1989" width="0.2" height="15.0" fill="rgb(226,200,33)" rx="2" ry="2" />
<text  x="33.53" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="571.4" y="1925" width="0.2" height="15.0" fill="rgb(205,36,4)" rx="2" ry="2" />
<text  x="574.39" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="538.5" y="1893" width="0.2" height="15.0" fill="rgb(251,214,22)" rx="2" ry="2" />
<text  x="541.50" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (19 samples, 0.32%)</title><rect x="127.0" y="1973" width="3.8" height="15.0" fill="rgb(205,52,12)" rx="2" ry="2" />
<text  x="130.02" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1149.3" y="2053" width="0.2" height="15.0" fill="rgb(224,84,12)" rx="2" ry="2" />
<text  x="1152.33" y="2063.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="382.4" y="1845" width="0.2" height="15.0" fill="rgb(213,141,12)" rx="2" ry="2" />
<text  x="385.40" y="1855.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="683.8" y="1573" width="0.2" height="15.0" fill="rgb(220,219,25)" rx="2" ry="2" />
<text  x="686.83" y="1583.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="847.5" y="1637" width="0.2" height="15.0" fill="rgb(249,5,17)" rx="2" ry="2" />
<text  x="850.50" y="1647.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="153.1" y="1733" width="0.2" height="15.0" fill="rgb(212,85,16)" rx="2" ry="2" />
<text  x="156.14" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="461.5" y="1909" width="0.2" height="15.0" fill="rgb(253,161,19)" rx="2" ry="2" />
<text  x="464.55" y="1919.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1139.0" y="2053" width="0.2" height="15.0" fill="rgb(253,75,22)" rx="2" ry="2" />
<text  x="1141.96" y="2063.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (3 samples, 0.05%)</title><rect x="1003.2" y="1989" width="0.6" height="15.0" fill="rgb(219,170,46)" rx="2" ry="2" />
<text  x="1006.20" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="149.7" y="1893" width="0.2" height="15.0" fill="rgb(215,173,16)" rx="2" ry="2" />
<text  x="152.75" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="114.1" y="181" width="0.2" height="15.0" fill="rgb(229,102,0)" rx="2" ry="2" />
<text  x="117.06" y="191.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (21 samples, 0.35%)</title><rect x="1125.0" y="1973" width="4.2" height="15.0" fill="rgb(222,19,0)" rx="2" ry="2" />
<text  x="1128.01" y="1983.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="316.2" y="1749" width="0.2" height="15.0" fill="rgb(226,40,36)" rx="2" ry="2" />
<text  x="319.21" y="1759.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="409.1" y="1477" width="0.2" height="15.0" fill="rgb(213,124,21)" rx="2" ry="2" />
<text  x="412.11" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1062.2" y="1957" width="0.2" height="15.0" fill="rgb(252,40,22)" rx="2" ry="2" />
<text  x="1065.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="575.6" y="1973" width="0.4" height="15.0" fill="rgb(209,211,27)" rx="2" ry="2" />
<text  x="578.58" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="575.8" y="1925" width="0.2" height="15.0" fill="rgb(208,216,54)" rx="2" ry="2" />
<text  x="578.78" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="636.2" y="1957" width="0.2" height="15.0" fill="rgb(224,129,24)" rx="2" ry="2" />
<text  x="639.18" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="571.4" y="1861" width="0.2" height="15.0" fill="rgb(208,204,27)" rx="2" ry="2" />
<text  x="574.39" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="159.5" y="1797" width="0.2" height="15.0" fill="rgb(226,48,5)" rx="2" ry="2" />
<text  x="162.52" y="1807.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="489.3" y="1861" width="0.6" height="15.0" fill="rgb(214,110,54)" rx="2" ry="2" />
<text  x="492.26" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1148.9" y="1989" width="0.2" height="15.0" fill="rgb(222,62,41)" rx="2" ry="2" />
<text  x="1151.93" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="185.0" y="1925" width="0.2" height="15.0" fill="rgb(215,143,3)" rx="2" ry="2" />
<text  x="188.04" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1129.6" y="2037" width="0.6" height="15.0" fill="rgb(243,188,25)" rx="2" ry="2" />
<text  x="1132.59" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9 samples, 0.15%)</title><rect x="1123.2" y="1941" width="1.8" height="15.0" fill="rgb(208,113,32)" rx="2" ry="2" />
<text  x="1126.22" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (316 samples, 5.34%)</title><rect x="351.5" y="2021" width="63.0" height="15.0" fill="rgb(254,58,18)" rx="2" ry="2" />
<text  x="354.50" y="2031.5" >entry_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1175.0" y="1957" width="0.2" height="15.0" fill="rgb(223,215,30)" rx="2" ry="2" />
<text  x="1178.05" y="1967.5" ></text>
</g>
<g >
<title>event_del_nolock_ (2 samples, 0.03%)</title><rect x="97.3" y="2005" width="0.4" height="15.0" fill="rgb(224,7,43)" rx="2" ry="2" />
<text  x="100.32" y="2015.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (3 samples, 0.05%)</title><rect x="1171.7" y="1973" width="0.6" height="15.0" fill="rgb(251,34,12)" rx="2" ry="2" />
<text  x="1174.66" y="1983.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="499.8" y="1557" width="0.2" height="15.0" fill="rgb(231,7,2)" rx="2" ry="2" />
<text  x="502.82" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="974.3" y="1845" width="0.2" height="15.0" fill="rgb(242,52,44)" rx="2" ry="2" />
<text  x="977.29" y="1855.5" ></text>
</g>
<g >
<title>_itoa_word (3 samples, 0.05%)</title><rect x="1136.6" y="2037" width="0.6" height="15.0" fill="rgb(228,27,10)" rx="2" ry="2" />
<text  x="1139.57" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="888.8" y="1957" width="0.2" height="15.0" fill="rgb(212,82,45)" rx="2" ry="2" />
<text  x="891.77" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::~AsyncSocketBase (1 samples, 0.02%)</title><rect x="71.8" y="1941" width="0.2" height="15.0" fill="rgb(240,227,19)" rx="2" ry="2" />
<text  x="74.80" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="868.8" y="1813" width="0.2" height="15.0" fill="rgb(230,14,1)" rx="2" ry="2" />
<text  x="871.83" y="1823.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="122.0" y="1989" width="0.4" height="15.0" fill="rgb(228,59,45)" rx="2" ry="2" />
<text  x="125.04" y="1999.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="14.6" y="2005" width="0.8" height="15.0" fill="rgb(216,16,32)" rx="2" ry="2" />
<text  x="17.59" y="2015.5" ></text>
</g>
<g >
<title>irq_may_run (1 samples, 0.02%)</title><rect x="71.4" y="1893" width="0.2" height="15.0" fill="rgb(252,198,6)" rx="2" ry="2" />
<text  x="74.40" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="820.8" y="1653" width="0.2" height="15.0" fill="rgb(240,164,44)" rx="2" ry="2" />
<text  x="823.79" y="1663.5" ></text>
</g>
<g >
<title>__ip_local_out (15 samples, 0.25%)</title><rect x="776.7" y="1637" width="3.0" height="15.0" fill="rgb(206,83,41)" rx="2" ry="2" />
<text  x="779.73" y="1647.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="76.6" y="1893" width="0.2" height="15.0" fill="rgb(243,71,15)" rx="2" ry="2" />
<text  x="79.59" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="632.2" y="1925" width="0.2" height="15.0" fill="rgb(254,76,25)" rx="2" ry="2" />
<text  x="635.20" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="185.0" y="1893" width="0.2" height="15.0" fill="rgb(235,210,28)" rx="2" ry="2" />
<text  x="188.04" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="227.3" y="1781" width="0.2" height="15.0" fill="rgb(208,81,20)" rx="2" ry="2" />
<text  x="230.30" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="574.8" y="1973" width="0.2" height="15.0" fill="rgb(211,83,6)" rx="2" ry="2" />
<text  x="577.78" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="820.8" y="1493" width="0.2" height="15.0" fill="rgb(225,184,28)" rx="2" ry="2" />
<text  x="823.79" y="1503.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="957.7" y="1765" width="0.2" height="15.0" fill="rgb(233,140,50)" rx="2" ry="2" />
<text  x="960.75" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="868.6" y="1989" width="0.6" height="15.0" fill="rgb(214,191,37)" rx="2" ry="2" />
<text  x="871.63" y="1999.5" ></text>
</g>
<g >
<title>release_sock (11 samples, 0.19%)</title><rect x="379.4" y="1925" width="2.2" height="15.0" fill="rgb(208,78,38)" rx="2" ry="2" />
<text  x="382.41" y="1935.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="183.8" y="1765" width="0.2" height="15.0" fill="rgb(236,60,13)" rx="2" ry="2" />
<text  x="186.84" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="168.1" y="1989" width="0.2" height="15.0" fill="rgb(249,50,54)" rx="2" ry="2" />
<text  x="171.09" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (2 samples, 0.03%)</title><rect x="644.8" y="2005" width="0.4" height="15.0" fill="rgb(235,141,7)" rx="2" ry="2" />
<text  x="647.76" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1143.4" y="1989" width="0.1" height="15.0" fill="rgb(208,190,19)" rx="2" ry="2" />
<text  x="1146.35" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (7 samples, 0.12%)</title><rect x="704.4" y="1973" width="1.4" height="15.0" fill="rgb(220,140,0)" rx="2" ry="2" />
<text  x="707.36" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="62.8" y="1909" width="0.2" height="15.0" fill="rgb(211,188,42)" rx="2" ry="2" />
<text  x="65.83" y="1919.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="886.0" y="1605" width="0.2" height="15.0" fill="rgb(229,30,45)" rx="2" ry="2" />
<text  x="888.98" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="897.3" y="1957" width="0.2" height="15.0" fill="rgb(253,148,52)" rx="2" ry="2" />
<text  x="900.34" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="212.9" y="1877" width="0.4" height="15.0" fill="rgb(251,48,15)" rx="2" ry="2" />
<text  x="215.95" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="840.3" y="1861" width="0.2" height="15.0" fill="rgb(237,153,13)" rx="2" ry="2" />
<text  x="843.33" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="974.3" y="1941" width="0.2" height="15.0" fill="rgb(247,152,8)" rx="2" ry="2" />
<text  x="977.29" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="546.9" y="1957" width="0.4" height="15.0" fill="rgb(212,112,14)" rx="2" ry="2" />
<text  x="549.87" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (2 samples, 0.03%)</title><rect x="917.1" y="2005" width="0.4" height="15.0" fill="rgb(221,106,37)" rx="2" ry="2" />
<text  x="920.08" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="53.5" y="1893" width="0.2" height="15.0" fill="rgb(210,173,20)" rx="2" ry="2" />
<text  x="56.46" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="869" width="14.4" height="15.0" fill="rgb(209,187,20)" rx="2" ry="2" />
<text  x="103.11" y="879.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="110.9" y="53" width="0.2" height="15.0" fill="rgb(236,52,42)" rx="2" ry="2" />
<text  x="113.88" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (9 samples, 0.15%)</title><rect x="290.3" y="1653" width="1.8" height="15.0" fill="rgb(211,140,15)" rx="2" ry="2" />
<text  x="293.30" y="1663.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="108.1" y="37" width="0.2" height="15.0" fill="rgb(235,116,53)" rx="2" ry="2" />
<text  x="111.08" y="47.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="806.6" y="1653" width="0.2" height="15.0" fill="rgb(207,179,49)" rx="2" ry="2" />
<text  x="809.63" y="1663.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="844.1" y="1877" width="0.2" height="15.0" fill="rgb(211,50,10)" rx="2" ry="2" />
<text  x="847.11" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="840.3" y="1845" width="0.2" height="15.0" fill="rgb(253,20,51)" rx="2" ry="2" />
<text  x="843.33" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="341.9" y="2005" width="0.6" height="15.0" fill="rgb(226,166,22)" rx="2" ry="2" />
<text  x="344.93" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="185.0" y="2005" width="0.2" height="15.0" fill="rgb(222,16,19)" rx="2" ry="2" />
<text  x="188.04" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1108.9" y="1909" width="0.2" height="15.0" fill="rgb(251,137,32)" rx="2" ry="2" />
<text  x="1111.86" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="183.8" y="1893" width="0.4" height="15.0" fill="rgb(226,36,44)" rx="2" ry="2" />
<text  x="186.84" y="1903.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (13 samples, 0.22%)</title><rect x="458.0" y="1925" width="2.5" height="15.0" fill="rgb(233,129,8)" rx="2" ry="2" />
<text  x="460.96" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="533.9" y="1925" width="0.2" height="15.0" fill="rgb(246,198,1)" rx="2" ry="2" />
<text  x="536.91" y="1935.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="763.2" y="1397" width="0.2" height="15.0" fill="rgb(216,107,8)" rx="2" ry="2" />
<text  x="766.17" y="1407.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="150.5" y="1861" width="0.2" height="15.0" fill="rgb(221,197,7)" rx="2" ry="2" />
<text  x="153.55" y="1871.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="489.9" y="1605" width="0.2" height="15.0" fill="rgb(228,30,41)" rx="2" ry="2" />
<text  x="492.85" y="1615.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1137.2" y="2037" width="0.2" height="15.0" fill="rgb(232,86,26)" rx="2" ry="2" />
<text  x="1140.17" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="694.2" y="1493" width="0.2" height="15.0" fill="rgb(227,214,5)" rx="2" ry="2" />
<text  x="697.20" y="1503.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="611.5" y="1861" width="0.2" height="15.0" fill="rgb(207,215,45)" rx="2" ry="2" />
<text  x="614.46" y="1871.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="93.7" y="1813" width="0.8" height="15.0" fill="rgb(253,93,12)" rx="2" ry="2" />
<text  x="96.73" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="868.8" y="1941" width="0.2" height="15.0" fill="rgb(246,127,27)" rx="2" ry="2" />
<text  x="871.83" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="85.6" y="1941" width="0.2" height="15.0" fill="rgb(243,88,47)" rx="2" ry="2" />
<text  x="88.56" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (146 samples, 2.47%)</title><rect x="286.9" y="1797" width="29.1" height="15.0" fill="rgb(245,83,3)" rx="2" ry="2" />
<text  x="289.91" y="1807.5" >ip..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="464.5" y="1829" width="0.2" height="15.0" fill="rgb(236,68,38)" rx="2" ry="2" />
<text  x="467.54" y="1839.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1173.9" y="1605" width="0.2" height="15.0" fill="rgb(206,226,25)" rx="2" ry="2" />
<text  x="1176.85" y="1615.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="610.1" y="1845" width="0.2" height="15.0" fill="rgb(241,218,4)" rx="2" ry="2" />
<text  x="613.07" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (57 samples, 0.96%)</title><rect x="601.3" y="1989" width="11.4" height="15.0" fill="rgb(248,105,39)" rx="2" ry="2" />
<text  x="604.30" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (15 samples, 0.25%)</title><rect x="535.7" y="1989" width="3.0" height="15.0" fill="rgb(236,75,5)" rx="2" ry="2" />
<text  x="538.71" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="183.8" y="2005" width="0.4" height="15.0" fill="rgb(244,92,51)" rx="2" ry="2" />
<text  x="186.84" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="691.8" y="1845" width="0.2" height="15.0" fill="rgb(251,0,0)" rx="2" ry="2" />
<text  x="694.80" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="489.9" y="1541" width="0.2" height="15.0" fill="rgb(242,28,33)" rx="2" ry="2" />
<text  x="492.85" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="883.6" y="1861" width="0.2" height="15.0" fill="rgb(208,143,39)" rx="2" ry="2" />
<text  x="886.59" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="533.5" y="1957" width="0.8" height="15.0" fill="rgb(247,190,5)" rx="2" ry="2" />
<text  x="536.51" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="600.7" y="1989" width="0.2" height="15.0" fill="rgb(237,228,11)" rx="2" ry="2" />
<text  x="603.70" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="396.6" y="1781" width="0.2" height="15.0" fill="rgb(229,197,6)" rx="2" ry="2" />
<text  x="399.56" y="1791.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.02%)</title><rect x="403.5" y="1909" width="0.2" height="15.0" fill="rgb(232,141,35)" rx="2" ry="2" />
<text  x="406.53" y="1919.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::getEventBase (2 samples, 0.03%)</title><rect x="650.7" y="1989" width="0.4" height="15.0" fill="rgb(237,53,49)" rx="2" ry="2" />
<text  x="653.74" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="924.1" y="1925" width="0.2" height="15.0" fill="rgb(221,211,17)" rx="2" ry="2" />
<text  x="927.06" y="1935.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="377.6" y="1925" width="1.8" height="15.0" fill="rgb(216,98,27)" rx="2" ry="2" />
<text  x="380.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="159.5" y="1781" width="0.2" height="15.0" fill="rgb(241,223,18)" rx="2" ry="2" />
<text  x="162.52" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="693.8" y="1973" width="0.6" height="15.0" fill="rgb(207,188,40)" rx="2" ry="2" />
<text  x="696.80" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1002.2" y="1973" width="0.2" height="15.0" fill="rgb(229,19,14)" rx="2" ry="2" />
<text  x="1005.20" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="320.2" y="1717" width="0.2" height="15.0" fill="rgb(253,104,4)" rx="2" ry="2" />
<text  x="323.20" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="920.7" y="1861" width="0.2" height="15.0" fill="rgb(221,131,25)" rx="2" ry="2" />
<text  x="923.67" y="1871.5" ></text>
</g>
<g >
<title>sys_fcntl (19 samples, 0.32%)</title><rect x="557.0" y="1941" width="3.8" height="15.0" fill="rgb(217,213,19)" rx="2" ry="2" />
<text  x="560.04" y="1951.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.03%)</title><rect x="77.6" y="1925" width="0.4" height="15.0" fill="rgb(228,180,38)" rx="2" ry="2" />
<text  x="80.58" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::AsyncSocketBase (1 samples, 0.02%)</title><rect x="565.6" y="1989" width="0.2" height="15.0" fill="rgb(221,102,33)" rx="2" ry="2" />
<text  x="568.61" y="1999.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="295.5" y="1669" width="0.2" height="15.0" fill="rgb(243,208,17)" rx="2" ry="2" />
<text  x="298.48" y="1679.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1010.2" y="1973" width="0.2" height="15.0" fill="rgb(221,29,2)" rx="2" ry="2" />
<text  x="1013.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1045" width="14.6" height="15.0" fill="rgb(217,154,45)" rx="2" ry="2" />
<text  x="103.11" y="1055.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="153.1" y="1813" width="0.2" height="15.0" fill="rgb(226,96,18)" rx="2" ry="2" />
<text  x="156.14" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="648.7" y="2005" width="0.4" height="15.0" fill="rgb(241,123,4)" rx="2" ry="2" />
<text  x="651.74" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="626.2" y="1973" width="0.8" height="15.0" fill="rgb(241,195,2)" rx="2" ry="2" />
<text  x="629.22" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (17 samples, 0.29%)</title><rect x="535.3" y="2005" width="3.4" height="15.0" fill="rgb(223,206,2)" rx="2" ry="2" />
<text  x="538.31" y="2015.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="934.2" y="1941" width="0.2" height="15.0" fill="rgb(218,105,16)" rx="2" ry="2" />
<text  x="937.22" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="10.8" y="1829" width="0.2" height="15.0" fill="rgb(247,168,15)" rx="2" ry="2" />
<text  x="13.80" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="620.0" y="2005" width="0.2" height="15.0" fill="rgb(239,24,28)" rx="2" ry="2" />
<text  x="623.04" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="120.4" y="1941" width="0.2" height="15.0" fill="rgb(232,43,5)" rx="2" ry="2" />
<text  x="123.44" y="1951.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="989.4" y="1605" width="0.2" height="15.0" fill="rgb(218,84,23)" rx="2" ry="2" />
<text  x="992.45" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1073.6" y="1925" width="0.2" height="15.0" fill="rgb(239,225,19)" rx="2" ry="2" />
<text  x="1076.57" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (342 samples, 5.78%)</title><rect x="24.2" y="2037" width="68.1" height="15.0" fill="rgb(209,183,17)" rx="2" ry="2" />
<text  x="27.15" y="2047.5" >folly::..</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1139.4" y="1781" width="0.2" height="15.0" fill="rgb(222,182,34)" rx="2" ry="2" />
<text  x="1142.36" y="1791.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="675.1" y="2021" width="0.4" height="15.0" fill="rgb(239,61,46)" rx="2" ry="2" />
<text  x="678.06" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (2 samples, 0.03%)</title><rect x="1148.7" y="2021" width="0.4" height="15.0" fill="rgb(211,159,25)" rx="2" ry="2" />
<text  x="1151.73" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (7 samples, 0.12%)</title><rect x="519.4" y="1973" width="1.4" height="15.0" fill="rgb(219,145,22)" rx="2" ry="2" />
<text  x="522.36" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="174.7" y="1957" width="0.2" height="15.0" fill="rgb(238,10,42)" rx="2" ry="2" />
<text  x="177.67" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.1" y="1989" width="0.2" height="15.0" fill="rgb(248,75,46)" rx="2" ry="2" />
<text  x="95.14" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="934.0" y="1957" width="0.6" height="15.0" fill="rgb(233,104,10)" rx="2" ry="2" />
<text  x="937.02" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (4 samples, 0.07%)</title><rect x="952.8" y="2037" width="0.8" height="15.0" fill="rgb(243,35,24)" rx="2" ry="2" />
<text  x="955.76" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="820.8" y="1685" width="0.2" height="15.0" fill="rgb(229,4,3)" rx="2" ry="2" />
<text  x="823.79" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="847.1" y="1909" width="0.4" height="15.0" fill="rgb(225,177,23)" rx="2" ry="2" />
<text  x="850.10" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (671 samples, 11.34%)</title><rect x="710.5" y="1941" width="133.8" height="15.0" fill="rgb(215,36,17)" rx="2" ry="2" />
<text  x="713.54" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="320.2" y="1557" width="0.2" height="15.0" fill="rgb(205,146,31)" rx="2" ry="2" />
<text  x="323.20" y="1567.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (16 samples, 0.27%)</title><rect x="544.7" y="1973" width="3.2" height="15.0" fill="rgb(253,140,6)" rx="2" ry="2" />
<text  x="547.68" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="894.2" y="1957" width="0.2" height="15.0" fill="rgb(254,5,15)" rx="2" ry="2" />
<text  x="897.15" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="949" width="14.4" height="15.0" fill="rgb(221,16,48)" rx="2" ry="2" />
<text  x="103.11" y="959.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="396.6" y="1797" width="0.2" height="15.0" fill="rgb(238,47,43)" rx="2" ry="2" />
<text  x="399.56" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="840.3" y="1877" width="0.2" height="15.0" fill="rgb(212,34,1)" rx="2" ry="2" />
<text  x="843.33" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="969.1" y="1685" width="0.2" height="15.0" fill="rgb(254,26,47)" rx="2" ry="2" />
<text  x="972.11" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="48.1" y="1909" width="0.8" height="15.0" fill="rgb(227,216,50)" rx="2" ry="2" />
<text  x="51.08" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="117.1" y="1669" width="0.2" height="15.0" fill="rgb(220,59,47)" rx="2" ry="2" />
<text  x="120.06" y="1679.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="825.0" y="1685" width="0.2" height="15.0" fill="rgb(239,124,23)" rx="2" ry="2" />
<text  x="827.98" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="1144.9" y="2053" width="0.2" height="15.0" fill="rgb(222,220,8)" rx="2" ry="2" />
<text  x="1147.95" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="124.0" y="1989" width="0.6" height="15.0" fill="rgb(213,181,16)" rx="2" ry="2" />
<text  x="127.03" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::~ImmediateReadCB (3 samples, 0.05%)</title><rect x="64.4" y="1973" width="0.6" height="15.0" fill="rgb(246,22,13)" rx="2" ry="2" />
<text  x="67.42" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="617.4" y="1989" width="0.2" height="15.0" fill="rgb(227,38,31)" rx="2" ry="2" />
<text  x="620.44" y="1999.5" ></text>
</g>
<g >
<title>folly::operator!= (3 samples, 0.05%)</title><rect x="1182.2" y="2053" width="0.6" height="15.0" fill="rgb(219,198,17)" rx="2" ry="2" />
<text  x="1185.23" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1173.9" y="1733" width="0.2" height="15.0" fill="rgb(246,32,38)" rx="2" ry="2" />
<text  x="1176.85" y="1743.5" ></text>
</g>
<g >
<title>lockref_put_return (3 samples, 0.05%)</title><rect x="741.0" y="1765" width="0.6" height="15.0" fill="rgb(245,172,4)" rx="2" ry="2" />
<text  x="744.05" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="246.0" y="1989" width="0.4" height="15.0" fill="rgb(206,57,48)" rx="2" ry="2" />
<text  x="249.04" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (110 samples, 1.86%)</title><rect x="293.5" y="1717" width="21.9" height="15.0" fill="rgb(209,163,49)" rx="2" ry="2" />
<text  x="296.49" y="1727.5" >_..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="1148.9" y="1925" width="0.2" height="15.0" fill="rgb(253,98,10)" rx="2" ry="2" />
<text  x="1151.93" y="1935.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="895.9" y="1957" width="0.2" height="15.0" fill="rgb(233,187,6)" rx="2" ry="2" />
<text  x="898.95" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="187.2" y="2021" width="0.2" height="15.0" fill="rgb(211,87,21)" rx="2" ry="2" />
<text  x="190.23" y="2031.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (2 samples, 0.03%)</title><rect x="798.1" y="1509" width="0.4" height="15.0" fill="rgb(229,90,25)" rx="2" ry="2" />
<text  x="801.06" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="971.5" y="1781" width="0.2" height="15.0" fill="rgb(215,85,4)" rx="2" ry="2" />
<text  x="974.50" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="903.3" y="1973" width="0.2" height="15.0" fill="rgb(232,142,37)" rx="2" ry="2" />
<text  x="906.32" y="1983.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="339.5" y="1941" width="1.2" height="15.0" fill="rgb(237,123,32)" rx="2" ry="2" />
<text  x="342.54" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="904.3" y="1957" width="0.4" height="15.0" fill="rgb(232,104,52)" rx="2" ry="2" />
<text  x="907.32" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.19%)</title><rect x="15.6" y="2021" width="2.2" height="15.0" fill="rgb(254,42,25)" rx="2" ry="2" />
<text  x="18.58" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1365" width="15.4" height="15.0" fill="rgb(248,208,32)" rx="2" ry="2" />
<text  x="102.71" y="1375.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="315.0" y="1637" width="0.2" height="15.0" fill="rgb(239,150,30)" rx="2" ry="2" />
<text  x="318.02" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="480.3" y="1877" width="0.2" height="15.0" fill="rgb(251,192,4)" rx="2" ry="2" />
<text  x="483.29" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="245.2" y="1941" width="0.8" height="15.0" fill="rgb(233,68,37)" rx="2" ry="2" />
<text  x="248.24" y="1951.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="291.3" y="1445" width="0.2" height="15.0" fill="rgb(225,217,26)" rx="2" ry="2" />
<text  x="294.29" y="1455.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="877.6" y="1925" width="0.2" height="15.0" fill="rgb(221,69,10)" rx="2" ry="2" />
<text  x="880.61" y="1935.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="342.3" y="1733" width="0.2" height="15.0" fill="rgb(226,172,19)" rx="2" ry="2" />
<text  x="345.33" y="1743.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1002.0" y="1973" width="0.2" height="15.0" fill="rgb(243,180,40)" rx="2" ry="2" />
<text  x="1005.01" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="335.6" y="1829" width="0.2" height="15.0" fill="rgb(237,22,54)" rx="2" ry="2" />
<text  x="338.55" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="645.4" y="1717" width="0.2" height="15.0" fill="rgb(208,39,29)" rx="2" ry="2" />
<text  x="648.35" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="473.9" y="1925" width="0.8" height="15.0" fill="rgb(205,168,6)" rx="2" ry="2" />
<text  x="476.91" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="594.3" y="1701" width="0.2" height="15.0" fill="rgb(241,191,51)" rx="2" ry="2" />
<text  x="597.32" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="633.4" y="1909" width="0.2" height="15.0" fill="rgb(211,180,28)" rx="2" ry="2" />
<text  x="636.39" y="1919.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="1112.6" y="1397" width="0.2" height="15.0" fill="rgb(236,199,35)" rx="2" ry="2" />
<text  x="1115.65" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="596.3" y="1829" width="0.2" height="15.0" fill="rgb(218,162,13)" rx="2" ry="2" />
<text  x="599.31" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="92.5" y="2037" width="0.2" height="15.0" fill="rgb(207,49,16)" rx="2" ry="2" />
<text  x="95.53" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="144.0" y="1909" width="0.2" height="15.0" fill="rgb(242,19,52)" rx="2" ry="2" />
<text  x="146.97" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (4 samples, 0.07%)</title><rect x="930.6" y="1861" width="0.8" height="15.0" fill="rgb(235,5,41)" rx="2" ry="2" />
<text  x="933.64" y="1871.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.19%)</title><rect x="15.6" y="1989" width="2.2" height="15.0" fill="rgb(254,30,10)" rx="2" ry="2" />
<text  x="18.58" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="669.7" y="1813" width="0.4" height="15.0" fill="rgb(247,70,43)" rx="2" ry="2" />
<text  x="672.68" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (112 samples, 1.89%)</title><rect x="871.8" y="1989" width="22.4" height="15.0" fill="rgb(214,143,44)" rx="2" ry="2" />
<text  x="874.82" y="1999.5" >f..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="396.6" y="1877" width="0.2" height="15.0" fill="rgb(207,191,14)" rx="2" ry="2" />
<text  x="399.56" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (13 samples, 0.22%)</title><rect x="929.6" y="1893" width="2.6" height="15.0" fill="rgb(233,125,36)" rx="2" ry="2" />
<text  x="932.64" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (31 samples, 0.52%)</title><rect x="543.9" y="2005" width="6.2" height="15.0" fill="rgb(241,95,7)" rx="2" ry="2" />
<text  x="546.88" y="2015.5" ></text>
</g>
<g >
<title>schedule (11 samples, 0.19%)</title><rect x="15.6" y="1941" width="2.2" height="15.0" fill="rgb(227,201,12)" rx="2" ry="2" />
<text  x="18.58" y="1951.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="971.5" y="1749" width="0.2" height="15.0" fill="rgb(239,198,52)" rx="2" ry="2" />
<text  x="974.50" y="1759.5" ></text>
</g>
<g >
<title>sys_getpeername (26 samples, 0.44%)</title><rect x="664.1" y="1893" width="5.2" height="15.0" fill="rgb(239,168,31)" rx="2" ry="2" />
<text  x="667.09" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="382.2" y="1861" width="0.4" height="15.0" fill="rgb(227,99,25)" rx="2" ry="2" />
<text  x="385.20" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1146.5" y="1941" width="0.2" height="15.0" fill="rgb(247,181,15)" rx="2" ry="2" />
<text  x="1149.54" y="1951.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="849.7" y="1925" width="0.2" height="15.0" fill="rgb(221,91,7)" rx="2" ry="2" />
<text  x="852.70" y="1935.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="610.5" y="1781" width="1.0" height="15.0" fill="rgb(245,3,21)" rx="2" ry="2" />
<text  x="613.47" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="276.7" y="1813" width="0.2" height="15.0" fill="rgb(235,206,44)" rx="2" ry="2" />
<text  x="279.74" y="1823.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="291.5" y="1317" width="0.2" height="15.0" fill="rgb(225,202,24)" rx="2" ry="2" />
<text  x="294.49" y="1327.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="74.6" y="1909" width="0.2" height="15.0" fill="rgb(245,37,52)" rx="2" ry="2" />
<text  x="77.59" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="575.0" y="1989" width="1.2" height="15.0" fill="rgb(211,82,16)" rx="2" ry="2" />
<text  x="577.98" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="412.9" y="1893" width="0.2" height="15.0" fill="rgb(254,134,15)" rx="2" ry="2" />
<text  x="415.90" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (7 samples, 0.12%)</title><rect x="641.0" y="1973" width="1.4" height="15.0" fill="rgb(227,28,16)" rx="2" ry="2" />
<text  x="643.97" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="857.5" y="1909" width="0.2" height="15.0" fill="rgb(207,212,48)" rx="2" ry="2" />
<text  x="860.47" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="910.1" y="1989" width="0.2" height="15.0" fill="rgb(219,42,9)" rx="2" ry="2" />
<text  x="913.10" y="1999.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1027.1" y="2037" width="0.2" height="15.0" fill="rgb(242,154,21)" rx="2" ry="2" />
<text  x="1030.12" y="2047.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="667.7" y="1813" width="0.8" height="15.0" fill="rgb(245,161,12)" rx="2" ry="2" />
<text  x="670.68" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="530.9" y="1781" width="0.2" height="15.0" fill="rgb(254,65,25)" rx="2" ry="2" />
<text  x="533.92" y="1791.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="903.3" y="1509" width="0.2" height="15.0" fill="rgb(241,63,3)" rx="2" ry="2" />
<text  x="906.32" y="1519.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="952.6" y="2005" width="0.2" height="15.0" fill="rgb(205,110,25)" rx="2" ry="2" />
<text  x="955.56" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (125 samples, 2.11%)</title><rect x="776.7" y="1653" width="25.0" height="15.0" fill="rgb(236,17,23)" rx="2" ry="2" />
<text  x="779.73" y="1663.5" >i..</text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="903.3" y="1541" width="0.2" height="15.0" fill="rgb(225,225,22)" rx="2" ry="2" />
<text  x="906.32" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="229" width="14.0" height="15.0" fill="rgb(209,156,33)" rx="2" ry="2" />
<text  x="103.11" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="221.5" y="1797" width="0.2" height="15.0" fill="rgb(212,111,25)" rx="2" ry="2" />
<text  x="224.52" y="1807.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="87.7" y="1941" width="0.2" height="15.0" fill="rgb(216,24,37)" rx="2" ry="2" />
<text  x="90.75" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="957.7" y="1925" width="0.2" height="15.0" fill="rgb(231,10,20)" rx="2" ry="2" />
<text  x="960.75" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (7 samples, 0.12%)</title><rect x="528.1" y="1893" width="1.4" height="15.0" fill="rgb(232,142,28)" rx="2" ry="2" />
<text  x="531.13" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="774.1" y="1605" width="0.2" height="15.0" fill="rgb(209,10,28)" rx="2" ry="2" />
<text  x="777.14" y="1615.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (3 samples, 0.05%)</title><rect x="576.6" y="1973" width="0.6" height="15.0" fill="rgb(215,104,37)" rx="2" ry="2" />
<text  x="579.58" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="974.3" y="1861" width="0.2" height="15.0" fill="rgb(211,82,28)" rx="2" ry="2" />
<text  x="977.29" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1124.8" y="1781" width="0.2" height="15.0" fill="rgb(251,197,40)" rx="2" ry="2" />
<text  x="1127.81" y="1791.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="147.6" y="1909" width="0.2" height="15.0" fill="rgb(223,142,22)" rx="2" ry="2" />
<text  x="150.56" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="892.2" y="1893" width="0.8" height="15.0" fill="rgb(242,24,0)" rx="2" ry="2" />
<text  x="895.16" y="1903.5" ></text>
</g>
<g >
<title>skb_release_data (26 samples, 0.44%)</title><rect x="1114.2" y="1477" width="5.2" height="15.0" fill="rgb(254,170,4)" rx="2" ry="2" />
<text  x="1117.24" y="1487.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="699.0" y="1973" width="0.2" height="15.0" fill="rgb(242,156,49)" rx="2" ry="2" />
<text  x="701.98" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="153.3" y="1845" width="0.2" height="15.0" fill="rgb(210,125,46)" rx="2" ry="2" />
<text  x="156.34" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="898.9" y="1829" width="0.2" height="15.0" fill="rgb(223,97,31)" rx="2" ry="2" />
<text  x="901.94" y="1839.5" ></text>
</g>
<g >
<title>tcp_conn_request (2 samples, 0.03%)</title><rect x="694.0" y="1685" width="0.4" height="15.0" fill="rgb(242,107,40)" rx="2" ry="2" />
<text  x="697.00" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="657.9" y="1845" width="0.2" height="15.0" fill="rgb(231,206,16)" rx="2" ry="2" />
<text  x="660.91" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (34 samples, 0.57%)</title><rect x="125.4" y="2005" width="6.8" height="15.0" fill="rgb(233,14,14)" rx="2" ry="2" />
<text  x="128.43" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="129.0" y="1957" width="0.6" height="15.0" fill="rgb(206,71,34)" rx="2" ry="2" />
<text  x="132.02" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="524.5" y="1957" width="0.2" height="15.0" fill="rgb(253,106,31)" rx="2" ry="2" />
<text  x="527.54" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="704.0" y="1973" width="0.2" height="15.0" fill="rgb(221,156,22)" rx="2" ry="2" />
<text  x="706.97" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1027.1" y="2005" width="0.2" height="15.0" fill="rgb(252,208,51)" rx="2" ry="2" />
<text  x="1030.12" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="656.5" y="1893" width="0.2" height="15.0" fill="rgb(226,85,12)" rx="2" ry="2" />
<text  x="659.52" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="508.4" y="1781" width="0.2" height="15.0" fill="rgb(234,41,53)" rx="2" ry="2" />
<text  x="511.39" y="1791.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.02%)</title><rect x="886.0" y="1653" width="0.2" height="15.0" fill="rgb(234,151,12)" rx="2" ry="2" />
<text  x="888.98" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="669.7" y="1669" width="0.2" height="15.0" fill="rgb(209,29,4)" rx="2" ry="2" />
<text  x="672.68" y="1679.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (2 samples, 0.03%)</title><rect x="82.2" y="1957" width="0.4" height="15.0" fill="rgb(216,184,46)" rx="2" ry="2" />
<text  x="85.17" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1108.9" y="1573" width="0.2" height="15.0" fill="rgb(224,40,28)" rx="2" ry="2" />
<text  x="1111.86" y="1583.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (3 samples, 0.05%)</title><rect x="521.0" y="1957" width="0.6" height="15.0" fill="rgb(250,81,28)" rx="2" ry="2" />
<text  x="523.95" y="1967.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="14.0" y="1989" width="0.2" height="15.0" fill="rgb(242,69,34)" rx="2" ry="2" />
<text  x="16.99" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="166.5" y="1989" width="0.2" height="15.0" fill="rgb(224,21,32)" rx="2" ry="2" />
<text  x="169.50" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="985.3" y="1909" width="0.2" height="15.0" fill="rgb(250,146,9)" rx="2" ry="2" />
<text  x="988.26" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="518.4" y="1941" width="0.4" height="15.0" fill="rgb(231,149,13)" rx="2" ry="2" />
<text  x="521.36" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="381.0" y="1845" width="0.6" height="15.0" fill="rgb(245,225,26)" rx="2" ry="2" />
<text  x="384.01" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="623.6" y="2005" width="0.2" height="15.0" fill="rgb(207,159,15)" rx="2" ry="2" />
<text  x="626.62" y="2015.5" ></text>
</g>
<g >
<title>fcntl@plt (2 samples, 0.03%)</title><rect x="564.8" y="1989" width="0.4" height="15.0" fill="rgb(249,107,23)" rx="2" ry="2" />
<text  x="567.81" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="272.8" y="1813" width="0.2" height="15.0" fill="rgb(211,184,18)" rx="2" ry="2" />
<text  x="275.75" y="1823.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="524.7" y="1989" width="0.4" height="15.0" fill="rgb(219,177,30)" rx="2" ry="2" />
<text  x="527.74" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (7 samples, 0.12%)</title><rect x="704.4" y="1941" width="1.4" height="15.0" fill="rgb(224,138,24)" rx="2" ry="2" />
<text  x="707.36" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="891.4" y="1909" width="0.2" height="15.0" fill="rgb(244,116,28)" rx="2" ry="2" />
<text  x="894.36" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="313.0" y="1685" width="0.2" height="15.0" fill="rgb(207,125,23)" rx="2" ry="2" />
<text  x="316.02" y="1695.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1113.0" y="1541" width="0.2" height="15.0" fill="rgb(247,204,26)" rx="2" ry="2" />
<text  x="1116.05" y="1551.5" ></text>
</g>
<g >
<title>accept4 (345 samples, 5.83%)</title><rect x="347.7" y="2037" width="68.8" height="15.0" fill="rgb(216,96,24)" rx="2" ry="2" />
<text  x="350.71" y="2047.5" >accept4</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="781.1" y="1605" width="0.4" height="15.0" fill="rgb(207,195,8)" rx="2" ry="2" />
<text  x="784.12" y="1615.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1120.4" y="1509" width="0.2" height="15.0" fill="rgb(210,182,7)" rx="2" ry="2" />
<text  x="1123.42" y="1519.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="15.4" y="2037" width="0.2" height="15.0" fill="rgb(219,219,7)" rx="2" ry="2" />
<text  x="18.38" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1173.9" y="1701" width="0.2" height="15.0" fill="rgb(230,55,8)" rx="2" ry="2" />
<text  x="1176.85" y="1711.5" ></text>
</g>
<g >
<title>inet_getname (12 samples, 0.20%)</title><rect x="592.1" y="1861" width="2.4" height="15.0" fill="rgb(235,28,5)" rx="2" ry="2" />
<text  x="595.13" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="894.2" y="1989" width="0.2" height="15.0" fill="rgb(234,113,15)" rx="2" ry="2" />
<text  x="897.15" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="925.1" y="1941" width="0.2" height="15.0" fill="rgb(231,37,20)" rx="2" ry="2" />
<text  x="928.05" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="610.5" y="1813" width="1.0" height="15.0" fill="rgb(242,65,16)" rx="2" ry="2" />
<text  x="613.47" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="625.4" y="2005" width="0.4" height="15.0" fill="rgb(254,97,39)" rx="2" ry="2" />
<text  x="628.42" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="149" width="14.0" height="15.0" fill="rgb(214,44,1)" rx="2" ry="2" />
<text  x="103.11" y="159.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="320.2" y="1605" width="0.2" height="15.0" fill="rgb(229,92,44)" rx="2" ry="2" />
<text  x="323.20" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (7 samples, 0.12%)</title><rect x="867.8" y="2005" width="1.4" height="15.0" fill="rgb(250,112,18)" rx="2" ry="2" />
<text  x="870.84" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1148.9" y="1957" width="0.2" height="15.0" fill="rgb(232,97,14)" rx="2" ry="2" />
<text  x="1151.93" y="1967.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="114.1" y="85" width="0.2" height="15.0" fill="rgb(226,115,27)" rx="2" ry="2" />
<text  x="117.06" y="95.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (10 samples, 0.17%)</title><rect x="984.5" y="1989" width="2.0" height="15.0" fill="rgb(213,37,40)" rx="2" ry="2" />
<text  x="987.46" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (132 samples, 2.23%)</title><rect x="203.0" y="1973" width="26.3" height="15.0" fill="rgb(214,87,42)" rx="2" ry="2" />
<text  x="205.98" y="1983.5" >f..</text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1001.0" y="1925" width="0.4" height="15.0" fill="rgb(241,20,10)" rx="2" ry="2" />
<text  x="1004.01" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="99.5" y="1493" width="16.2" height="15.0" fill="rgb(206,2,29)" rx="2" ry="2" />
<text  x="102.51" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1130.2" y="1973" width="0.2" height="15.0" fill="rgb(242,73,17)" rx="2" ry="2" />
<text  x="1133.19" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="489.9" y="1893" width="0.2" height="15.0" fill="rgb(222,187,29)" rx="2" ry="2" />
<text  x="492.85" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (144 samples, 2.43%)</title><rect x="201.0" y="2005" width="28.7" height="15.0" fill="rgb(212,179,54)" rx="2" ry="2" />
<text  x="203.98" y="2015.5" >fa..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="756.8" y="1557" width="0.2" height="15.0" fill="rgb(241,101,23)" rx="2" ry="2" />
<text  x="759.80" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="1141.6" y="1989" width="0.2" height="15.0" fill="rgb(226,183,3)" rx="2" ry="2" />
<text  x="1144.56" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="46.7" y="1957" width="0.2" height="15.0" fill="rgb(237,58,1)" rx="2" ry="2" />
<text  x="49.68" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="561.2" y="1877" width="1.0" height="15.0" fill="rgb(252,205,29)" rx="2" ry="2" />
<text  x="564.22" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="396.6" y="1765" width="0.2" height="15.0" fill="rgb(253,56,32)" rx="2" ry="2" />
<text  x="399.56" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="164.7" y="2021" width="0.2" height="15.0" fill="rgb(231,218,45)" rx="2" ry="2" />
<text  x="167.70" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="533" width="14.2" height="15.0" fill="rgb(232,68,5)" rx="2" ry="2" />
<text  x="103.11" y="543.5" ></text>
</g>
<g >
<title>__memchr_avx2 (3 samples, 0.05%)</title><rect x="962.5" y="2021" width="0.6" height="15.0" fill="rgb(222,220,50)" rx="2" ry="2" />
<text  x="965.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="773" width="14.4" height="15.0" fill="rgb(254,51,14)" rx="2" ry="2" />
<text  x="103.11" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="126.4" y="1973" width="0.2" height="15.0" fill="rgb(246,64,38)" rx="2" ry="2" />
<text  x="129.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="919.9" y="2037" width="0.4" height="15.0" fill="rgb(210,201,7)" rx="2" ry="2" />
<text  x="922.87" y="2047.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="456.8" y="1973" width="0.2" height="15.0" fill="rgb(250,205,8)" rx="2" ry="2" />
<text  x="459.76" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (5 samples, 0.08%)</title><rect x="528.1" y="1877" width="1.0" height="15.0" fill="rgb(223,175,41)" rx="2" ry="2" />
<text  x="531.13" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="342.3" y="1797" width="0.2" height="15.0" fill="rgb(245,217,12)" rx="2" ry="2" />
<text  x="345.33" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1112.4" y="1573" width="0.4" height="15.0" fill="rgb(227,114,16)" rx="2" ry="2" />
<text  x="1115.45" y="1583.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="116.5" y="1653" width="0.2" height="15.0" fill="rgb(253,2,16)" rx="2" ry="2" />
<text  x="119.46" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="342.3" y="1765" width="0.2" height="15.0" fill="rgb(217,71,18)" rx="2" ry="2" />
<text  x="345.33" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (10 samples, 0.17%)</title><rect x="68.4" y="1893" width="2.0" height="15.0" fill="rgb(226,219,17)" rx="2" ry="2" />
<text  x="71.41" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.66%)</title><rect x="99.1" y="1829" width="19.6" height="15.0" fill="rgb(216,91,7)" rx="2" ry="2" />
<text  x="102.11" y="1839.5" ></text>
</g>
<g >
<title>sys_epoll_wait (97 samples, 1.64%)</title><rect x="490.1" y="1989" width="19.3" height="15.0" fill="rgb(252,171,43)" rx="2" ry="2" />
<text  x="493.05" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="890.6" y="1669" width="0.2" height="15.0" fill="rgb(242,42,7)" rx="2" ry="2" />
<text  x="893.56" y="1679.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="547.5" y="1941" width="0.2" height="15.0" fill="rgb(235,138,5)" rx="2" ry="2" />
<text  x="550.47" y="1951.5" ></text>
</g>
<g >
<title>__memchr_avx2 (4 samples, 0.07%)</title><rect x="345.3" y="2037" width="0.8" height="15.0" fill="rgb(222,220,2)" rx="2" ry="2" />
<text  x="348.32" y="2047.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="35.9" y="2005" width="0.2" height="15.0" fill="rgb(252,67,50)" rx="2" ry="2" />
<text  x="38.92" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="221.3" y="1797" width="0.2" height="15.0" fill="rgb(221,186,15)" rx="2" ry="2" />
<text  x="224.32" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="634.4" y="1941" width="0.2" height="15.0" fill="rgb(220,33,33)" rx="2" ry="2" />
<text  x="637.39" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="439.4" y="1989" width="0.2" height="15.0" fill="rgb(223,43,3)" rx="2" ry="2" />
<text  x="442.42" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="610.1" y="1797" width="0.2" height="15.0" fill="rgb(207,110,5)" rx="2" ry="2" />
<text  x="613.07" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (9 samples, 0.15%)</title><rect x="533.5" y="2005" width="1.8" height="15.0" fill="rgb(252,52,39)" rx="2" ry="2" />
<text  x="536.51" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (7 samples, 0.12%)</title><rect x="844.7" y="1925" width="1.4" height="15.0" fill="rgb(238,183,37)" rx="2" ry="2" />
<text  x="847.71" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="875.6" y="1957" width="0.2" height="15.0" fill="rgb(228,92,52)" rx="2" ry="2" />
<text  x="878.61" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="634.2" y="1925" width="0.2" height="15.0" fill="rgb(251,14,48)" rx="2" ry="2" />
<text  x="637.19" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="847.5" y="1733" width="0.2" height="15.0" fill="rgb(246,55,23)" rx="2" ry="2" />
<text  x="850.50" y="1743.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="193.6" y="2037" width="0.4" height="15.0" fill="rgb(230,31,47)" rx="2" ry="2" />
<text  x="196.61" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="138.2" y="1925" width="0.6" height="15.0" fill="rgb(240,28,18)" rx="2" ry="2" />
<text  x="141.19" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="68.2" y="1845" width="0.2" height="15.0" fill="rgb(213,46,6)" rx="2" ry="2" />
<text  x="71.21" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (10 samples, 0.17%)</title><rect x="33.9" y="1989" width="2.0" height="15.0" fill="rgb(250,156,44)" rx="2" ry="2" />
<text  x="36.92" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="464.5" y="1893" width="0.2" height="15.0" fill="rgb(207,189,54)" rx="2" ry="2" />
<text  x="467.54" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="46.5" y="1973" width="0.2" height="15.0" fill="rgb(217,227,5)" rx="2" ry="2" />
<text  x="49.48" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="538.1" y="1909" width="0.2" height="15.0" fill="rgb(235,191,7)" rx="2" ry="2" />
<text  x="541.10" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="77.0" y="1909" width="0.6" height="15.0" fill="rgb(248,77,19)" rx="2" ry="2" />
<text  x="79.98" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="153.5" y="1877" width="0.2" height="15.0" fill="rgb(213,77,9)" rx="2" ry="2" />
<text  x="156.54" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="405.5" y="1749" width="0.2" height="15.0" fill="rgb(224,181,5)" rx="2" ry="2" />
<text  x="408.53" y="1759.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.12%)</title><rect x="261.8" y="1877" width="1.4" height="15.0" fill="rgb(230,18,16)" rx="2" ry="2" />
<text  x="264.79" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="115.5" y="1461" width="0.2" height="15.0" fill="rgb(228,200,44)" rx="2" ry="2" />
<text  x="118.46" y="1471.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (3 samples, 0.05%)</title><rect x="189.4" y="2021" width="0.6" height="15.0" fill="rgb(250,103,4)" rx="2" ry="2" />
<text  x="192.42" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="832.2" y="1797" width="0.2" height="15.0" fill="rgb(217,134,45)" rx="2" ry="2" />
<text  x="835.15" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="569.4" y="2005" width="1.0" height="15.0" fill="rgb(244,62,50)" rx="2" ry="2" />
<text  x="572.40" y="2015.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="36.1" y="2005" width="0.2" height="15.0" fill="rgb(219,67,19)" rx="2" ry="2" />
<text  x="39.12" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1124.8" y="1797" width="0.2" height="15.0" fill="rgb(227,195,42)" rx="2" ry="2" />
<text  x="1127.81" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="991.6" y="1893" width="0.2" height="15.0" fill="rgb(211,129,33)" rx="2" ry="2" />
<text  x="994.64" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="36.3" y="2005" width="0.2" height="15.0" fill="rgb(234,178,9)" rx="2" ry="2" />
<text  x="39.32" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="464.5" y="1845" width="0.2" height="15.0" fill="rgb(251,126,2)" rx="2" ry="2" />
<text  x="467.54" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (5 samples, 0.08%)</title><rect x="918.7" y="2037" width="1.0" height="15.0" fill="rgb(216,157,48)" rx="2" ry="2" />
<text  x="921.67" y="2047.5" ></text>
</g>
<g >
<title>__close_fd (19 samples, 0.32%)</title><rect x="831.0" y="1845" width="3.7" height="15.0" fill="rgb(241,205,49)" rx="2" ry="2" />
<text  x="833.96" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="276.7" y="1765" width="0.2" height="15.0" fill="rgb(218,177,13)" rx="2" ry="2" />
<text  x="279.74" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (3 samples, 0.05%)</title><rect x="859.3" y="1973" width="0.6" height="15.0" fill="rgb(241,63,52)" rx="2" ry="2" />
<text  x="862.27" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="673.1" y="1925" width="0.2" height="15.0" fill="rgb(216,118,50)" rx="2" ry="2" />
<text  x="676.06" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1115.4" y="1461" width="0.2" height="15.0" fill="rgb(230,192,36)" rx="2" ry="2" />
<text  x="1118.44" y="1471.5" ></text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="1173.3" y="1941" width="0.4" height="15.0" fill="rgb(251,119,4)" rx="2" ry="2" />
<text  x="1176.25" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="55.7" y="1957" width="0.9" height="15.0" fill="rgb(205,173,18)" rx="2" ry="2" />
<text  x="58.65" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="763.2" y="1461" width="0.2" height="15.0" fill="rgb(240,173,49)" rx="2" ry="2" />
<text  x="766.17" y="1471.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="320.2" y="1701" width="0.2" height="15.0" fill="rgb(243,137,39)" rx="2" ry="2" />
<text  x="323.20" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="878.4" y="1797" width="0.2" height="15.0" fill="rgb(211,163,0)" rx="2" ry="2" />
<text  x="881.40" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1124.8" y="1845" width="0.2" height="15.0" fill="rgb(251,64,23)" rx="2" ry="2" />
<text  x="1127.81" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="933" width="14.4" height="15.0" fill="rgb(223,138,38)" rx="2" ry="2" />
<text  x="103.11" y="943.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="669.5" y="1877" width="0.6" height="15.0" fill="rgb(221,121,40)" rx="2" ry="2" />
<text  x="672.48" y="1887.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="138.6" y="1589" width="0.2" height="15.0" fill="rgb(213,47,9)" rx="2" ry="2" />
<text  x="141.59" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="159.5" y="1877" width="0.2" height="15.0" fill="rgb(208,164,7)" rx="2" ry="2" />
<text  x="162.52" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="101.3" y="37" width="0.2" height="15.0" fill="rgb(228,2,37)" rx="2" ry="2" />
<text  x="104.31" y="47.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="685.2" y="1877" width="0.8" height="15.0" fill="rgb(254,58,38)" rx="2" ry="2" />
<text  x="688.23" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="508.4" y="1909" width="0.2" height="15.0" fill="rgb(210,55,25)" rx="2" ry="2" />
<text  x="511.39" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (1 samples, 0.02%)</title><rect x="510.6" y="2021" width="0.2" height="15.0" fill="rgb(212,20,35)" rx="2" ry="2" />
<text  x="513.59" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="116.5" y="1669" width="0.2" height="15.0" fill="rgb(214,38,32)" rx="2" ry="2" />
<text  x="119.46" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (5 samples, 0.08%)</title><rect x="571.0" y="1973" width="1.0" height="15.0" fill="rgb(254,42,26)" rx="2" ry="2" />
<text  x="573.99" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="229.5" y="1957" width="0.2" height="15.0" fill="rgb(248,94,12)" rx="2" ry="2" />
<text  x="232.49" y="1967.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="704.8" y="1781" width="0.2" height="15.0" fill="rgb(224,115,5)" rx="2" ry="2" />
<text  x="707.76" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="381.4" y="1701" width="0.2" height="15.0" fill="rgb(213,93,42)" rx="2" ry="2" />
<text  x="384.40" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="183.8" y="1797" width="0.4" height="15.0" fill="rgb(211,138,3)" rx="2" ry="2" />
<text  x="186.84" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="528.3" y="1845" width="0.2" height="15.0" fill="rgb(243,198,37)" rx="2" ry="2" />
<text  x="531.33" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="886.0" y="1765" width="0.2" height="15.0" fill="rgb(206,67,16)" rx="2" ry="2" />
<text  x="888.98" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (7 samples, 0.12%)</title><rect x="704.4" y="1989" width="1.4" height="15.0" fill="rgb(241,1,6)" rx="2" ry="2" />
<text  x="707.36" y="1999.5" ></text>
</g>
<g >
<title>sk_stream_kill_queues (1 samples, 0.02%)</title><rect x="917.9" y="1717" width="0.2" height="15.0" fill="rgb(231,116,26)" rx="2" ry="2" />
<text  x="920.88" y="1727.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="409.1" y="1509" width="0.2" height="15.0" fill="rgb(251,206,7)" rx="2" ry="2" />
<text  x="412.11" y="1519.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="669.3" y="1893" width="0.2" height="15.0" fill="rgb(235,200,30)" rx="2" ry="2" />
<text  x="672.28" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="683.8" y="1525" width="0.2" height="15.0" fill="rgb(228,61,8)" rx="2" ry="2" />
<text  x="686.83" y="1535.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="381.4" y="1717" width="0.2" height="15.0" fill="rgb(243,74,18)" rx="2" ry="2" />
<text  x="384.40" y="1727.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (4 samples, 0.07%)</title><rect x="1012.8" y="1957" width="0.8" height="15.0" fill="rgb(239,42,27)" rx="2" ry="2" />
<text  x="1015.77" y="1967.5" ></text>
</g>
<g >
<title>sys_close (1 samples, 0.02%)</title><rect x="835.1" y="1877" width="0.2" height="15.0" fill="rgb(246,132,35)" rx="2" ry="2" />
<text  x="838.14" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="669.9" y="1637" width="0.2" height="15.0" fill="rgb(205,11,7)" rx="2" ry="2" />
<text  x="672.87" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (47 samples, 0.79%)</title><rect x="875.8" y="1957" width="9.4" height="15.0" fill="rgb(234,209,7)" rx="2" ry="2" />
<text  x="878.81" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1173.9" y="1765" width="0.2" height="15.0" fill="rgb(247,0,1)" rx="2" ry="2" />
<text  x="1176.85" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (90 samples, 1.52%)</title><rect x="582.6" y="1957" width="17.9" height="15.0" fill="rgb(227,146,27)" rx="2" ry="2" />
<text  x="585.56" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="456.4" y="1973" width="0.4" height="15.0" fill="rgb(234,227,50)" rx="2" ry="2" />
<text  x="459.36" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="266.4" y="1877" width="0.2" height="15.0" fill="rgb(214,192,34)" rx="2" ry="2" />
<text  x="269.37" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (91 samples, 1.54%)</title><rect x="99.3" y="1733" width="18.2" height="15.0" fill="rgb(206,32,5)" rx="2" ry="2" />
<text  x="102.31" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="905.9" y="2005" width="0.2" height="15.0" fill="rgb(243,117,54)" rx="2" ry="2" />
<text  x="908.91" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="139.6" y="1909" width="0.2" height="15.0" fill="rgb(235,201,52)" rx="2" ry="2" />
<text  x="142.58" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="133.8" y="1989" width="0.6" height="15.0" fill="rgb(224,216,24)" rx="2" ry="2" />
<text  x="136.80" y="1999.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.08%)</title><rect x="959.5" y="2005" width="1.0" height="15.0" fill="rgb(250,124,54)" rx="2" ry="2" />
<text  x="962.54" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="813.2" y="1685" width="0.2" height="15.0" fill="rgb(248,159,31)" rx="2" ry="2" />
<text  x="816.21" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="381.0" y="1893" width="0.6" height="15.0" fill="rgb(237,98,2)" rx="2" ry="2" />
<text  x="384.01" y="1903.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="246.2" y="1781" width="0.2" height="15.0" fill="rgb(241,192,54)" rx="2" ry="2" />
<text  x="249.24" y="1791.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.17%)</title><rect x="1180.2" y="2053" width="2.0" height="15.0" fill="rgb(218,133,41)" rx="2" ry="2" />
<text  x="1183.23" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="878.4" y="1669" width="0.2" height="15.0" fill="rgb(225,157,47)" rx="2" ry="2" />
<text  x="881.40" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="834.7" y="1845" width="0.4" height="15.0" fill="rgb(217,171,21)" rx="2" ry="2" />
<text  x="837.74" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (7 samples, 0.12%)</title><rect x="575.0" y="2005" width="1.4" height="15.0" fill="rgb(227,225,1)" rx="2" ry="2" />
<text  x="577.98" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="984.1" y="1941" width="0.4" height="15.0" fill="rgb(222,7,46)" rx="2" ry="2" />
<text  x="987.06" y="1951.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="337.7" y="1957" width="0.2" height="15.0" fill="rgb(229,22,12)" rx="2" ry="2" />
<text  x="340.74" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="408.3" y="1637" width="0.2" height="15.0" fill="rgb(209,68,54)" rx="2" ry="2" />
<text  x="411.32" y="1647.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::Data (1 samples, 0.02%)</title><rect x="568.2" y="1989" width="0.2" height="15.0" fill="rgb(223,88,10)" rx="2" ry="2" />
<text  x="571.20" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="767.4" y="1621" width="0.2" height="15.0" fill="rgb(206,96,0)" rx="2" ry="2" />
<text  x="770.36" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="894.4" y="1925" width="0.2" height="15.0" fill="rgb(208,65,50)" rx="2" ry="2" />
<text  x="897.35" y="1935.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="856.5" y="1957" width="0.2" height="15.0" fill="rgb(210,110,11)" rx="2" ry="2" />
<text  x="859.47" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="797.5" y="1509" width="0.2" height="15.0" fill="rgb(223,89,27)" rx="2" ry="2" />
<text  x="800.46" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="860.3" y="1973" width="0.2" height="15.0" fill="rgb(241,185,39)" rx="2" ry="2" />
<text  x="863.26" y="1983.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="174.3" y="1941" width="0.2" height="15.0" fill="rgb(216,94,1)" rx="2" ry="2" />
<text  x="177.27" y="1951.5" ></text>
</g>
<g >
<title>__skb_clone (19 samples, 0.32%)</title><rect x="316.6" y="1797" width="3.8" height="15.0" fill="rgb(217,70,7)" rx="2" ry="2" />
<text  x="319.61" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="957.7" y="1861" width="0.2" height="15.0" fill="rgb(254,76,40)" rx="2" ry="2" />
<text  x="960.75" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="947.4" y="2005" width="0.2" height="15.0" fill="rgb(210,141,0)" rx="2" ry="2" />
<text  x="950.38" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="571.4" y="1829" width="0.2" height="15.0" fill="rgb(227,202,12)" rx="2" ry="2" />
<text  x="574.39" y="1839.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (3 samples, 0.05%)</title><rect x="826.2" y="1765" width="0.6" height="15.0" fill="rgb(211,37,25)" rx="2" ry="2" />
<text  x="829.17" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="709.9" y="1797" width="0.2" height="15.0" fill="rgb(216,146,29)" rx="2" ry="2" />
<text  x="712.95" y="1807.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="386.6" y="1925" width="0.2" height="15.0" fill="rgb(211,17,50)" rx="2" ry="2" />
<text  x="389.59" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="227.3" y="1701" width="0.2" height="15.0" fill="rgb(225,3,54)" rx="2" ry="2" />
<text  x="230.30" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (53 samples, 0.90%)</title><rect x="601.9" y="1957" width="10.6" height="15.0" fill="rgb(242,12,20)" rx="2" ry="2" />
<text  x="604.89" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="756.6" y="1701" width="0.4" height="15.0" fill="rgb(247,133,20)" rx="2" ry="2" />
<text  x="759.60" y="1711.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="88.7" y="1989" width="0.2" height="15.0" fill="rgb(217,212,37)" rx="2" ry="2" />
<text  x="91.75" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="284.9" y="1541" width="0.2" height="15.0" fill="rgb(244,153,41)" rx="2" ry="2" />
<text  x="287.91" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="105.9" y="37" width="0.4" height="15.0" fill="rgb(217,72,17)" rx="2" ry="2" />
<text  x="108.89" y="47.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (2 samples, 0.03%)</title><rect x="567.6" y="1957" width="0.4" height="15.0" fill="rgb(216,89,16)" rx="2" ry="2" />
<text  x="570.60" y="1967.5" ></text>
</g>
<g >
<title>security_inode_free (2 samples, 0.03%)</title><rect x="732.7" y="1669" width="0.4" height="15.0" fill="rgb(220,72,16)" rx="2" ry="2" />
<text  x="735.67" y="1679.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="291.1" y="1461" width="0.2" height="15.0" fill="rgb(220,37,34)" rx="2" ry="2" />
<text  x="294.09" y="1471.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (23 samples, 0.39%)</title><rect x="83.8" y="1973" width="4.5" height="15.0" fill="rgb(215,4,44)" rx="2" ry="2" />
<text  x="86.76" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="286.1" y="1797" width="0.2" height="15.0" fill="rgb(207,60,48)" rx="2" ry="2" />
<text  x="289.11" y="1807.5" ></text>
</g>
<g >
<title>clear_inode (3 samples, 0.05%)</title><rect x="731.3" y="1701" width="0.6" height="15.0" fill="rgb(205,219,21)" rx="2" ry="2" />
<text  x="734.28" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="499.8" y="1589" width="0.2" height="15.0" fill="rgb(244,91,13)" rx="2" ry="2" />
<text  x="502.82" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="136.8" y="1909" width="0.2" height="15.0" fill="rgb(210,9,42)" rx="2" ry="2" />
<text  x="139.79" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="246.2" y="1909" width="0.2" height="15.0" fill="rgb(227,115,21)" rx="2" ry="2" />
<text  x="249.24" y="1919.5" ></text>
</g>
<g >
<title>rb_erase_cached (6 samples, 0.10%)</title><rect x="475.1" y="1957" width="1.2" height="15.0" fill="rgb(211,57,40)" rx="2" ry="2" />
<text  x="478.10" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="693.4" y="1909" width="0.2" height="15.0" fill="rgb(234,39,11)" rx="2" ry="2" />
<text  x="696.40" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1188.4" y="2021" width="0.8" height="15.0" fill="rgb(207,90,48)" rx="2" ry="2" />
<text  x="1191.41" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (64 samples, 1.08%)</title><rect x="1149.5" y="2005" width="12.8" height="15.0" fill="rgb(217,116,44)" rx="2" ry="2" />
<text  x="1152.53" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="829.4" y="1813" width="0.4" height="15.0" fill="rgb(216,31,14)" rx="2" ry="2" />
<text  x="832.36" y="1823.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="396.4" y="1573" width="0.2" height="15.0" fill="rgb(215,163,7)" rx="2" ry="2" />
<text  x="399.36" y="1583.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="975.9" y="1989" width="0.2" height="15.0" fill="rgb(240,23,31)" rx="2" ry="2" />
<text  x="978.89" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="115.9" y="1541" width="0.2" height="15.0" fill="rgb(208,25,15)" rx="2" ry="2" />
<text  x="118.86" y="1551.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="543.1" y="1973" width="0.2" height="15.0" fill="rgb(211,82,37)" rx="2" ry="2" />
<text  x="546.08" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="185.0" y="1941" width="0.2" height="15.0" fill="rgb(247,100,34)" rx="2" ry="2" />
<text  x="188.04" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1139.4" y="1909" width="0.2" height="15.0" fill="rgb(218,134,32)" rx="2" ry="2" />
<text  x="1142.36" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="956.4" y="2037" width="0.2" height="15.0" fill="rgb(226,128,28)" rx="2" ry="2" />
<text  x="959.35" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="999.4" y="1957" width="0.2" height="15.0" fill="rgb(213,53,11)" rx="2" ry="2" />
<text  x="1002.41" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="80.6" y="1925" width="0.4" height="15.0" fill="rgb(224,191,44)" rx="2" ry="2" />
<text  x="83.57" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.47%)</title><rect x="621.6" y="2021" width="5.6" height="15.0" fill="rgb(209,151,43)" rx="2" ry="2" />
<text  x="624.63" y="2031.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="218.1" y="1877" width="0.2" height="15.0" fill="rgb(245,137,14)" rx="2" ry="2" />
<text  x="221.13" y="1887.5" ></text>
</g>
<g >
<title>[mcrouter] (33 samples, 0.56%)</title><rect x="986.7" y="1941" width="6.5" height="15.0" fill="rgb(248,79,10)" rx="2" ry="2" />
<text  x="989.65" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1124.8" y="1813" width="0.2" height="15.0" fill="rgb(213,157,23)" rx="2" ry="2" />
<text  x="1127.81" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="886.0" y="1701" width="0.2" height="15.0" fill="rgb(241,146,17)" rx="2" ry="2" />
<text  x="888.98" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="167.3" y="2021" width="0.2" height="15.0" fill="rgb(214,84,19)" rx="2" ry="2" />
<text  x="170.29" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (80 samples, 1.35%)</title><rect x="511.0" y="2005" width="15.9" height="15.0" fill="rgb(238,120,36)" rx="2" ry="2" />
<text  x="513.99" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (9 samples, 0.15%)</title><rect x="1143.2" y="2037" width="1.7" height="15.0" fill="rgb(211,77,30)" rx="2" ry="2" />
<text  x="1146.15" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="857.5" y="1973" width="0.2" height="15.0" fill="rgb(223,206,36)" rx="2" ry="2" />
<text  x="860.47" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="654.5" y="1957" width="0.2" height="15.0" fill="rgb(235,26,13)" rx="2" ry="2" />
<text  x="657.52" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (2 samples, 0.03%)</title><rect x="1170.3" y="2021" width="0.4" height="15.0" fill="rgb(245,223,27)" rx="2" ry="2" />
<text  x="1173.26" y="2031.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="699.0" y="1957" width="0.2" height="15.0" fill="rgb(236,107,7)" rx="2" ry="2" />
<text  x="701.98" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="71.4" y="1909" width="0.2" height="15.0" fill="rgb(237,197,36)" rx="2" ry="2" />
<text  x="74.40" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1143.0" y="1973" width="0.2" height="15.0" fill="rgb(238,132,1)" rx="2" ry="2" />
<text  x="1145.95" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="878.4" y="1845" width="0.2" height="15.0" fill="rgb(219,71,47)" rx="2" ry="2" />
<text  x="881.40" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="665.3" y="1861" width="0.2" height="15.0" fill="rgb(233,219,49)" rx="2" ry="2" />
<text  x="668.29" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="519.0" y="1941" width="0.2" height="15.0" fill="rgb(237,83,11)" rx="2" ry="2" />
<text  x="521.96" y="1951.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="316.2" y="1781" width="0.2" height="15.0" fill="rgb(244,168,15)" rx="2" ry="2" />
<text  x="319.21" y="1791.5" ></text>
</g>
<g >
<title>netdev_pick_tx (10 samples, 0.17%)</title><rect x="296.1" y="1701" width="2.0" height="15.0" fill="rgb(238,141,8)" rx="2" ry="2" />
<text  x="299.08" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (9 samples, 0.15%)</title><rect x="175.7" y="1989" width="1.8" height="15.0" fill="rgb(239,183,50)" rx="2" ry="2" />
<text  x="178.67" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (3 samples, 0.05%)</title><rect x="913.7" y="1973" width="0.6" height="15.0" fill="rgb(248,55,7)" rx="2" ry="2" />
<text  x="916.69" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="616.6" y="2005" width="0.4" height="15.0" fill="rgb(244,177,45)" rx="2" ry="2" />
<text  x="619.65" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1115.4" y="1413" width="0.2" height="15.0" fill="rgb(221,61,1)" rx="2" ry="2" />
<text  x="1118.44" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="541.3" y="1909" width="0.2" height="15.0" fill="rgb(240,130,53)" rx="2" ry="2" />
<text  x="544.29" y="1919.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="98.7" y="1957" width="0.2" height="15.0" fill="rgb(228,97,15)" rx="2" ry="2" />
<text  x="101.71" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (46 samples, 0.78%)</title><rect x="1112.1" y="1861" width="9.1" height="15.0" fill="rgb(207,177,20)" rx="2" ry="2" />
<text  x="1115.05" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (119 samples, 2.01%)</title><rect x="651.9" y="2037" width="23.8" height="15.0" fill="rgb(212,84,7)" rx="2" ry="2" />
<text  x="654.93" y="2047.5" >f..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1057.4" y="1893" width="0.8" height="15.0" fill="rgb(250,108,24)" rx="2" ry="2" />
<text  x="1060.43" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (7 samples, 0.12%)</title><rect x="1146.7" y="1989" width="1.4" height="15.0" fill="rgb(222,61,28)" rx="2" ry="2" />
<text  x="1149.74" y="1999.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="381.6" y="1925" width="0.2" height="15.0" fill="rgb(221,116,24)" rx="2" ry="2" />
<text  x="384.60" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="32.3" y="1973" width="0.4" height="15.0" fill="rgb(218,18,6)" rx="2" ry="2" />
<text  x="35.33" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="405.5" y="1765" width="0.2" height="15.0" fill="rgb(239,161,37)" rx="2" ry="2" />
<text  x="408.53" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="396.6" y="1701" width="0.2" height="15.0" fill="rgb(205,136,1)" rx="2" ry="2" />
<text  x="399.56" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="92.3" y="1845" width="0.2" height="15.0" fill="rgb(243,215,9)" rx="2" ry="2" />
<text  x="95.33" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="914.3" y="1989" width="1.0" height="15.0" fill="rgb(242,199,28)" rx="2" ry="2" />
<text  x="917.29" y="1999.5" ></text>
</g>
<g >
<title>dql_completed (1 samples, 0.02%)</title><rect x="382.2" y="1845" width="0.2" height="15.0" fill="rgb(250,207,48)" rx="2" ry="2" />
<text  x="385.20" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="82.4" y="1925" width="0.2" height="15.0" fill="rgb(254,227,19)" rx="2" ry="2" />
<text  x="85.37" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="924.3" y="1925" width="0.2" height="15.0" fill="rgb(232,25,38)" rx="2" ry="2" />
<text  x="927.26" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.2" y="1829" width="0.2" height="15.0" fill="rgb(215,78,28)" rx="2" ry="2" />
<text  x="122.25" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="179.3" y="2005" width="0.2" height="15.0" fill="rgb(248,93,49)" rx="2" ry="2" />
<text  x="182.25" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="596.5" y="1845" width="0.2" height="15.0" fill="rgb(240,25,19)" rx="2" ry="2" />
<text  x="599.51" y="1855.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="246.0" y="1957" width="0.2" height="15.0" fill="rgb(214,45,7)" rx="2" ry="2" />
<text  x="249.04" y="1967.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="290.9" y="1477" width="0.2" height="15.0" fill="rgb(237,204,11)" rx="2" ry="2" />
<text  x="293.90" y="1487.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="176.9" y="1941" width="0.2" height="15.0" fill="rgb(208,229,34)" rx="2" ry="2" />
<text  x="179.86" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="929.2" y="1893" width="0.4" height="15.0" fill="rgb(252,14,15)" rx="2" ry="2" />
<text  x="932.24" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.4" y="1845" width="0.2" height="15.0" fill="rgb(235,150,35)" rx="2" ry="2" />
<text  x="64.43" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="154.1" y="1765" width="0.2" height="15.0" fill="rgb(216,166,22)" rx="2" ry="2" />
<text  x="157.14" y="1775.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="521.2" y="1925" width="0.4" height="15.0" fill="rgb(230,168,5)" rx="2" ry="2" />
<text  x="524.15" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="236.5" y="1957" width="0.2" height="15.0" fill="rgb(221,121,41)" rx="2" ry="2" />
<text  x="239.47" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="637.4" y="1957" width="0.4" height="15.0" fill="rgb(228,208,31)" rx="2" ry="2" />
<text  x="640.38" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="489.1" y="1925" width="0.8" height="15.0" fill="rgb(231,147,36)" rx="2" ry="2" />
<text  x="492.06" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="743.2" y="1781" width="0.6" height="15.0" fill="rgb(218,21,50)" rx="2" ry="2" />
<text  x="746.24" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="657.9" y="1829" width="0.2" height="15.0" fill="rgb(238,185,23)" rx="2" ry="2" />
<text  x="660.91" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="489.9" y="1829" width="0.2" height="15.0" fill="rgb(230,153,29)" rx="2" ry="2" />
<text  x="492.85" y="1839.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="342.7" y="2021" width="2.6" height="15.0" fill="rgb(245,134,39)" rx="2" ry="2" />
<text  x="345.73" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (5 samples, 0.08%)</title><rect x="951.8" y="2037" width="1.0" height="15.0" fill="rgb(254,152,13)" rx="2" ry="2" />
<text  x="954.77" y="2047.5" ></text>
</g>
<g >
<title>prefetch_freepointer (5 samples, 0.08%)</title><rect x="273.9" y="1829" width="1.0" height="15.0" fill="rgb(240,87,8)" rx="2" ry="2" />
<text  x="276.95" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1023.1" y="1893" width="0.2" height="15.0" fill="rgb(228,179,34)" rx="2" ry="2" />
<text  x="1026.14" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="408.3" y="1861" width="0.2" height="15.0" fill="rgb(226,204,33)" rx="2" ry="2" />
<text  x="411.32" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="669.3" y="1845" width="0.2" height="15.0" fill="rgb(223,204,53)" rx="2" ry="2" />
<text  x="672.28" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="881.0" y="1877" width="0.2" height="15.0" fill="rgb(214,10,0)" rx="2" ry="2" />
<text  x="884.00" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (112 samples, 1.89%)</title><rect x="293.3" y="1733" width="22.3" height="15.0" fill="rgb(214,56,0)" rx="2" ry="2" />
<text  x="296.29" y="1743.5" >d..</text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="539.5" y="1973" width="0.2" height="15.0" fill="rgb(230,174,40)" rx="2" ry="2" />
<text  x="542.49" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="542.7" y="1973" width="0.2" height="15.0" fill="rgb(229,2,50)" rx="2" ry="2" />
<text  x="545.68" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="99.5" y="1509" width="16.2" height="15.0" fill="rgb(248,131,44)" rx="2" ry="2" />
<text  x="102.51" y="1519.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="763.2" y="1413" width="0.2" height="15.0" fill="rgb(236,150,32)" rx="2" ry="2" />
<text  x="766.17" y="1423.5" ></text>
</g>
<g >
<title>tcp_poll (31 samples, 0.52%)</title><rect x="500.2" y="1893" width="6.2" height="15.0" fill="rgb(247,108,49)" rx="2" ry="2" />
<text  x="503.22" y="1903.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1007.8" y="2005" width="0.2" height="15.0" fill="rgb(241,217,48)" rx="2" ry="2" />
<text  x="1010.79" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="683.6" y="1893" width="0.4" height="15.0" fill="rgb(236,165,32)" rx="2" ry="2" />
<text  x="686.63" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="1112.4" y="1525" width="0.4" height="15.0" fill="rgb(228,17,8)" rx="2" ry="2" />
<text  x="1115.45" y="1535.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="316.2" y="1717" width="0.2" height="15.0" fill="rgb(218,130,52)" rx="2" ry="2" />
<text  x="319.21" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="342.3" y="1877" width="0.2" height="15.0" fill="rgb(216,116,44)" rx="2" ry="2" />
<text  x="345.33" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1182.0" y="1925" width="0.2" height="15.0" fill="rgb(240,49,33)" rx="2" ry="2" />
<text  x="1185.03" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="751.2" y="1605" width="0.2" height="15.0" fill="rgb(205,129,13)" rx="2" ry="2" />
<text  x="754.21" y="1615.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="666.5" y="1845" width="0.2" height="15.0" fill="rgb(251,59,49)" rx="2" ry="2" />
<text  x="669.49" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (37 samples, 0.63%)</title><rect x="627.6" y="1973" width="7.4" height="15.0" fill="rgb(210,121,32)" rx="2" ry="2" />
<text  x="630.61" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="988.6" y="1909" width="0.4" height="15.0" fill="rgb(211,3,29)" rx="2" ry="2" />
<text  x="991.65" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (18 samples, 0.30%)</title><rect x="1145.1" y="2037" width="3.6" height="15.0" fill="rgb(242,141,4)" rx="2" ry="2" />
<text  x="1148.14" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="974.3" y="2021" width="0.2" height="15.0" fill="rgb(252,79,30)" rx="2" ry="2" />
<text  x="977.29" y="2031.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="610.5" y="1765" width="1.0" height="15.0" fill="rgb(227,59,1)" rx="2" ry="2" />
<text  x="613.47" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="950.6" y="1893" width="0.2" height="15.0" fill="rgb(252,52,36)" rx="2" ry="2" />
<text  x="953.57" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (10 samples, 0.17%)</title><rect x="169.3" y="1989" width="2.0" height="15.0" fill="rgb(253,190,51)" rx="2" ry="2" />
<text  x="172.29" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (18 samples, 0.30%)</title><rect x="10.4" y="1957" width="3.6" height="15.0" fill="rgb(209,149,14)" rx="2" ry="2" />
<text  x="13.40" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext (9 samples, 0.15%)</title><rect x="994.6" y="2005" width="1.8" height="15.0" fill="rgb(224,56,17)" rx="2" ry="2" />
<text  x="997.63" y="2015.5" ></text>
</g>
<g >
<title>sock_alloc_inode (1 samples, 0.02%)</title><rect x="397.8" y="1925" width="0.2" height="15.0" fill="rgb(229,198,10)" rx="2" ry="2" />
<text  x="400.75" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1173.9" y="1797" width="0.2" height="15.0" fill="rgb(241,64,2)" rx="2" ry="2" />
<text  x="1176.85" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="610.5" y="1829" width="1.0" height="15.0" fill="rgb(240,110,28)" rx="2" ry="2" />
<text  x="613.47" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="237.5" y="2021" width="0.2" height="15.0" fill="rgb(235,131,32)" rx="2" ry="2" />
<text  x="240.47" y="2031.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1002.4" y="1973" width="0.2" height="15.0" fill="rgb(227,8,28)" rx="2" ry="2" />
<text  x="1005.40" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="114.1" y="341" width="0.2" height="15.0" fill="rgb(251,33,37)" rx="2" ry="2" />
<text  x="117.06" y="351.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="464.5" y="1765" width="0.2" height="15.0" fill="rgb(239,118,29)" rx="2" ry="2" />
<text  x="467.54" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="729.9" y="1701" width="0.2" height="15.0" fill="rgb(227,93,13)" rx="2" ry="2" />
<text  x="732.88" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="831.8" y="1829" width="0.6" height="15.0" fill="rgb(226,79,6)" rx="2" ry="2" />
<text  x="834.75" y="1839.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1063.6" y="1941" width="0.2" height="15.0" fill="rgb(210,213,3)" rx="2" ry="2" />
<text  x="1066.61" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="293" width="14.0" height="15.0" fill="rgb(231,123,43)" rx="2" ry="2" />
<text  x="103.11" y="303.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="645.4" y="1701" width="0.2" height="15.0" fill="rgb(239,66,9)" rx="2" ry="2" />
<text  x="648.35" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="722.7" y="1845" width="0.2" height="15.0" fill="rgb(240,30,24)" rx="2" ry="2" />
<text  x="725.70" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (3 samples, 0.05%)</title><rect x="619.6" y="2037" width="0.6" height="15.0" fill="rgb(209,87,30)" rx="2" ry="2" />
<text  x="622.64" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="556.8" y="1893" width="0.2" height="15.0" fill="rgb(209,219,0)" rx="2" ry="2" />
<text  x="559.84" y="1903.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="330.2" y="1829" width="0.2" height="15.0" fill="rgb(225,215,51)" rx="2" ry="2" />
<text  x="333.17" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="917.9" y="1909" width="0.2" height="15.0" fill="rgb(239,138,40)" rx="2" ry="2" />
<text  x="920.88" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (44 samples, 0.74%)</title><rect x="1112.4" y="1717" width="8.8" height="15.0" fill="rgb(232,29,4)" rx="2" ry="2" />
<text  x="1115.45" y="1727.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="610.5" y="1797" width="1.0" height="15.0" fill="rgb(212,72,16)" rx="2" ry="2" />
<text  x="613.47" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="932.0" y="1877" width="0.2" height="15.0" fill="rgb(249,196,52)" rx="2" ry="2" />
<text  x="935.03" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="888.0" y="1941" width="0.2" height="15.0" fill="rgb(222,89,16)" rx="2" ry="2" />
<text  x="890.97" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="221.3" y="1829" width="0.4" height="15.0" fill="rgb(234,202,45)" rx="2" ry="2" />
<text  x="224.32" y="1839.5" ></text>
</g>
<g >
<title>[mcrouter] (147 samples, 2.48%)</title><rect x="200.6" y="2021" width="29.3" height="15.0" fill="rgb(222,147,0)" rx="2" ry="2" />
<text  x="203.59" y="2031.5" >[m..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="984.7" y="1941" width="1.8" height="15.0" fill="rgb(248,50,26)" rx="2" ry="2" />
<text  x="987.66" y="1951.5" ></text>
</g>
<g >
<title>bit_waitqueue (1 samples, 0.02%)</title><rect x="738.3" y="1685" width="0.2" height="15.0" fill="rgb(252,107,21)" rx="2" ry="2" />
<text  x="741.25" y="1695.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (89 samples, 1.50%)</title><rect x="783.9" y="1573" width="17.8" height="15.0" fill="rgb(206,193,29)" rx="2" ry="2" />
<text  x="786.91" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="691.4" y="1669" width="0.2" height="15.0" fill="rgb(214,134,28)" rx="2" ry="2" />
<text  x="694.41" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="674.9" y="2021" width="0.2" height="15.0" fill="rgb(238,126,31)" rx="2" ry="2" />
<text  x="677.86" y="2031.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="190.0" y="2021" width="0.4" height="15.0" fill="rgb(217,58,0)" rx="2" ry="2" />
<text  x="193.02" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="62.2" y="1797" width="0.2" height="15.0" fill="rgb(236,121,34)" rx="2" ry="2" />
<text  x="65.23" y="1807.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (26 samples, 0.44%)</title><rect x="188.4" y="2037" width="5.2" height="15.0" fill="rgb(238,46,17)" rx="2" ry="2" />
<text  x="191.43" y="2047.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="840.3" y="1925" width="0.2" height="15.0" fill="rgb(219,112,53)" rx="2" ry="2" />
<text  x="843.33" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="382.2" y="1893" width="0.4" height="15.0" fill="rgb(211,16,35)" rx="2" ry="2" />
<text  x="385.20" y="1903.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="157.1" y="2021" width="0.4" height="15.0" fill="rgb(218,48,47)" rx="2" ry="2" />
<text  x="160.13" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="380.0" y="1909" width="1.0" height="15.0" fill="rgb(252,10,34)" rx="2" ry="2" />
<text  x="383.01" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1003.6" y="1717" width="0.2" height="15.0" fill="rgb(231,175,29)" rx="2" ry="2" />
<text  x="1006.60" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="499.6" y="1877" width="0.6" height="15.0" fill="rgb(241,4,29)" rx="2" ry="2" />
<text  x="502.62" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="654.3" y="1989" width="0.2" height="15.0" fill="rgb(222,94,36)" rx="2" ry="2" />
<text  x="657.33" y="1999.5" ></text>
</g>
<g >
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="278.3" y="1877" width="0.6" height="15.0" fill="rgb(229,27,16)" rx="2" ry="2" />
<text  x="281.34" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="830.6" y="1797" width="0.2" height="15.0" fill="rgb(252,219,22)" rx="2" ry="2" />
<text  x="833.56" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="33.1" y="1957" width="0.2" height="15.0" fill="rgb(254,36,10)" rx="2" ry="2" />
<text  x="36.13" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1057.4" y="1941" width="0.8" height="15.0" fill="rgb(217,157,24)" rx="2" ry="2" />
<text  x="1060.43" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (3 samples, 0.05%)</title><rect x="673.3" y="1973" width="0.6" height="15.0" fill="rgb(231,95,22)" rx="2" ry="2" />
<text  x="676.26" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (14 samples, 0.24%)</title><rect x="50.9" y="1957" width="2.8" height="15.0" fill="rgb(215,85,14)" rx="2" ry="2" />
<text  x="53.87" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="756.2" y="1717" width="0.2" height="15.0" fill="rgb(227,139,32)" rx="2" ry="2" />
<text  x="759.20" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="756.8" y="1525" width="0.2" height="15.0" fill="rgb(254,55,54)" rx="2" ry="2" />
<text  x="759.80" y="1535.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="291.5" y="1445" width="0.2" height="15.0" fill="rgb(249,152,11)" rx="2" ry="2" />
<text  x="294.49" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1130.2" y="1989" width="0.2" height="15.0" fill="rgb(211,92,18)" rx="2" ry="2" />
<text  x="1133.19" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (739 samples, 12.49%)</title><rect x="708.7" y="1957" width="147.4" height="15.0" fill="rgb(229,189,14)" rx="2" ry="2" />
<text  x="711.75" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1141.8" y="1941" width="0.2" height="15.0" fill="rgb(207,152,18)" rx="2" ry="2" />
<text  x="1144.76" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.32%)</title><rect x="10.2" y="2037" width="3.8" height="15.0" fill="rgb(220,135,4)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="2021" width="0.2" height="15.0" fill="rgb(231,11,19)" rx="2" ry="2" />
<text  x="239.47" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="854.1" y="1893" width="0.2" height="15.0" fill="rgb(233,67,43)" rx="2" ry="2" />
<text  x="857.08" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1001.6" y="1973" width="0.4" height="15.0" fill="rgb(210,215,35)" rx="2" ry="2" />
<text  x="1004.61" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="890.6" y="1813" width="0.2" height="15.0" fill="rgb(251,185,51)" rx="2" ry="2" />
<text  x="893.56" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (5 samples, 0.08%)</title><rect x="622.6" y="2005" width="1.0" height="15.0" fill="rgb(248,170,39)" rx="2" ry="2" />
<text  x="625.63" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="490.7" y="1893" width="0.2" height="15.0" fill="rgb(236,214,4)" rx="2" ry="2" />
<text  x="493.65" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (3 samples, 0.05%)</title><rect x="39.3" y="1989" width="0.6" height="15.0" fill="rgb(250,24,23)" rx="2" ry="2" />
<text  x="42.31" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (3 samples, 0.05%)</title><rect x="163.3" y="1957" width="0.6" height="15.0" fill="rgb(232,206,29)" rx="2" ry="2" />
<text  x="166.31" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="48.1" y="1893" width="0.2" height="15.0" fill="rgb(219,175,35)" rx="2" ry="2" />
<text  x="51.08" y="1903.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1189.2" y="2053" width="0.2" height="15.0" fill="rgb(244,208,38)" rx="2" ry="2" />
<text  x="1192.20" y="2063.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="830.2" y="1797" width="0.2" height="15.0" fill="rgb(228,154,49)" rx="2" ry="2" />
<text  x="833.16" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (3 samples, 0.05%)</title><rect x="905.9" y="2037" width="0.6" height="15.0" fill="rgb(234,151,45)" rx="2" ry="2" />
<text  x="908.91" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="153.1" y="1829" width="0.2" height="15.0" fill="rgb(245,146,39)" rx="2" ry="2" />
<text  x="156.14" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="500.0" y="1701" width="0.2" height="15.0" fill="rgb(237,62,14)" rx="2" ry="2" />
<text  x="503.02" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="456.6" y="1941" width="0.2" height="15.0" fill="rgb(226,214,54)" rx="2" ry="2" />
<text  x="459.56" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="832.2" y="1749" width="0.2" height="15.0" fill="rgb(233,174,35)" rx="2" ry="2" />
<text  x="835.15" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="373" width="14.0" height="15.0" fill="rgb(252,104,35)" rx="2" ry="2" />
<text  x="103.11" y="383.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="229.5" y="1845" width="0.2" height="15.0" fill="rgb(254,16,52)" rx="2" ry="2" />
<text  x="232.49" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="878.8" y="1893" width="0.4" height="15.0" fill="rgb(242,172,8)" rx="2" ry="2" />
<text  x="881.80" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="524.9" y="1973" width="0.2" height="15.0" fill="rgb(245,147,36)" rx="2" ry="2" />
<text  x="527.94" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="246.0" y="1973" width="0.4" height="15.0" fill="rgb(251,94,53)" rx="2" ry="2" />
<text  x="249.04" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="903.1" y="1989" width="0.2" height="15.0" fill="rgb(209,209,7)" rx="2" ry="2" />
<text  x="906.12" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1004.6" y="1989" width="0.2" height="15.0" fill="rgb(241,72,52)" rx="2" ry="2" />
<text  x="1007.60" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.33%)</title><rect x="582.8" y="1925" width="15.7" height="15.0" fill="rgb(246,130,18)" rx="2" ry="2" />
<text  x="585.76" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="691.8" y="1717" width="0.2" height="15.0" fill="rgb(215,173,3)" rx="2" ry="2" />
<text  x="694.80" y="1727.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="890.6" y="1605" width="0.2" height="15.0" fill="rgb(241,5,47)" rx="2" ry="2" />
<text  x="893.56" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1003.6" y="1797" width="0.2" height="15.0" fill="rgb(223,51,9)" rx="2" ry="2" />
<text  x="1006.60" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="645.4" y="2005" width="0.2" height="15.0" fill="rgb(231,205,20)" rx="2" ry="2" />
<text  x="648.35" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="320.4" y="1749" width="0.2" height="15.0" fill="rgb(254,25,30)" rx="2" ry="2" />
<text  x="323.40" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="159.5" y="1957" width="0.2" height="15.0" fill="rgb(217,44,38)" rx="2" ry="2" />
<text  x="162.52" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (6 samples, 0.10%)</title><rect x="292.1" y="1605" width="1.2" height="15.0" fill="rgb(205,184,24)" rx="2" ry="2" />
<text  x="295.09" y="1615.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1004.6" y="1925" width="0.2" height="15.0" fill="rgb(218,118,29)" rx="2" ry="2" />
<text  x="1007.60" y="1935.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.02%)</title><rect x="187.8" y="2037" width="0.2" height="15.0" fill="rgb(220,77,6)" rx="2" ry="2" />
<text  x="190.83" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="528.3" y="1861" width="0.2" height="15.0" fill="rgb(232,114,18)" rx="2" ry="2" />
<text  x="531.33" y="1871.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.03%)</title><rect x="508.6" y="1925" width="0.4" height="15.0" fill="rgb(209,193,27)" rx="2" ry="2" />
<text  x="511.59" y="1935.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="693.8" y="1877" width="0.2" height="15.0" fill="rgb(218,70,30)" rx="2" ry="2" />
<text  x="696.80" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="932.6" y="1909" width="0.2" height="15.0" fill="rgb(253,1,5)" rx="2" ry="2" />
<text  x="935.63" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="691.4" y="1749" width="0.2" height="15.0" fill="rgb(254,218,44)" rx="2" ry="2" />
<text  x="694.41" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (24 samples, 0.41%)</title><rect x="126.6" y="1989" width="4.8" height="15.0" fill="rgb(237,58,45)" rx="2" ry="2" />
<text  x="129.62" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="286.5" y="1621" width="0.2" height="15.0" fill="rgb(228,185,7)" rx="2" ry="2" />
<text  x="289.51" y="1631.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (3 samples, 0.05%)</title><rect x="1008.4" y="1989" width="0.6" height="15.0" fill="rgb(235,146,16)" rx="2" ry="2" />
<text  x="1011.38" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="113.1" y="37" width="0.2" height="15.0" fill="rgb(236,52,10)" rx="2" ry="2" />
<text  x="116.07" y="47.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="114.3" y="693" width="0.2" height="15.0" fill="rgb(246,58,24)" rx="2" ry="2" />
<text  x="117.26" y="703.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1178.2" y="2037" width="0.2" height="15.0" fill="rgb(231,78,28)" rx="2" ry="2" />
<text  x="1181.24" y="2047.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="596.3" y="1845" width="0.2" height="15.0" fill="rgb(221,135,48)" rx="2" ry="2" />
<text  x="599.31" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (86 samples, 1.45%)</title><rect x="510.8" y="2021" width="17.1" height="15.0" fill="rgb(221,108,18)" rx="2" ry="2" />
<text  x="513.79" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="292.1" y="1525" width="0.2" height="15.0" fill="rgb(226,34,48)" rx="2" ry="2" />
<text  x="295.09" y="1535.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (6 samples, 0.10%)</title><rect x="843.1" y="1925" width="1.2" height="15.0" fill="rgb(214,39,25)" rx="2" ry="2" />
<text  x="846.12" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (9 samples, 0.15%)</title><rect x="60.0" y="1925" width="1.8" height="15.0" fill="rgb(213,143,44)" rx="2" ry="2" />
<text  x="63.04" y="1935.5" ></text>
</g>
<g >
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="179.3" y="1861" width="0.2" height="15.0" fill="rgb(207,61,20)" rx="2" ry="2" />
<text  x="182.25" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="316.4" y="1781" width="0.2" height="15.0" fill="rgb(217,166,14)" rx="2" ry="2" />
<text  x="319.41" y="1791.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="489.9" y="1557" width="0.2" height="15.0" fill="rgb(246,73,41)" rx="2" ry="2" />
<text  x="492.85" y="1567.5" ></text>
</g>
<g >
<title>kfree (18 samples, 0.30%)</title><rect x="1115.8" y="1445" width="3.6" height="15.0" fill="rgb(218,167,28)" rx="2" ry="2" />
<text  x="1118.84" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="464.5" y="1701" width="0.2" height="15.0" fill="rgb(212,218,7)" rx="2" ry="2" />
<text  x="467.54" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="80.4" y="1941" width="0.2" height="15.0" fill="rgb(236,91,9)" rx="2" ry="2" />
<text  x="83.37" y="1951.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.02%)</title><rect x="388.2" y="1941" width="0.2" height="15.0" fill="rgb(252,177,45)" rx="2" ry="2" />
<text  x="391.18" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.32%)</title><rect x="10.2" y="2021" width="3.8" height="15.0" fill="rgb(240,125,53)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (8 samples, 0.14%)</title><rect x="395.0" y="1877" width="1.6" height="15.0" fill="rgb(219,116,8)" rx="2" ry="2" />
<text  x="397.96" y="1887.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="509.4" y="2021" width="0.2" height="15.0" fill="rgb(210,129,54)" rx="2" ry="2" />
<text  x="512.39" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="92.3" y="1957" width="0.2" height="15.0" fill="rgb(223,163,39)" rx="2" ry="2" />
<text  x="95.33" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="789" width="14.4" height="15.0" fill="rgb(237,144,49)" rx="2" ry="2" />
<text  x="103.11" y="799.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (11 samples, 0.19%)</title><rect x="1140.6" y="2005" width="2.2" height="15.0" fill="rgb(252,183,45)" rx="2" ry="2" />
<text  x="1143.56" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (11 samples, 0.19%)</title><rect x="901.3" y="2037" width="2.2" height="15.0" fill="rgb(209,58,26)" rx="2" ry="2" />
<text  x="904.33" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="155.1" y="2005" width="0.2" height="15.0" fill="rgb(240,92,15)" rx="2" ry="2" />
<text  x="158.13" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="916.1" y="2005" width="0.2" height="15.0" fill="rgb(230,179,49)" rx="2" ry="2" />
<text  x="919.08" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="905.7" y="1989" width="0.2" height="15.0" fill="rgb(222,81,22)" rx="2" ry="2" />
<text  x="908.72" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="332.0" y="1829" width="0.2" height="15.0" fill="rgb(215,159,28)" rx="2" ry="2" />
<text  x="334.96" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="891.0" y="1893" width="0.2" height="15.0" fill="rgb(240,57,41)" rx="2" ry="2" />
<text  x="893.96" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="489.9" y="1877" width="0.2" height="15.0" fill="rgb(243,10,29)" rx="2" ry="2" />
<text  x="492.85" y="1887.5" ></text>
</g>
<g >
<title>expand_files (1 samples, 0.02%)</title><rect x="365.5" y="1925" width="0.2" height="15.0" fill="rgb(213,142,42)" rx="2" ry="2" />
<text  x="368.46" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="853.3" y="1861" width="0.4" height="15.0" fill="rgb(244,8,34)" rx="2" ry="2" />
<text  x="856.28" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="898.9" y="1845" width="0.2" height="15.0" fill="rgb(251,125,14)" rx="2" ry="2" />
<text  x="901.94" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (1 samples, 0.02%)</title><rect x="568.0" y="1957" width="0.2" height="15.0" fill="rgb(232,68,32)" rx="2" ry="2" />
<text  x="571.00" y="1967.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="408.3" y="1541" width="0.2" height="15.0" fill="rgb(222,111,42)" rx="2" ry="2" />
<text  x="411.32" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (9 samples, 0.15%)</title><rect x="51.5" y="1925" width="1.8" height="15.0" fill="rgb(235,26,18)" rx="2" ry="2" />
<text  x="54.47" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="633.2" y="1925" width="0.8" height="15.0" fill="rgb(249,193,19)" rx="2" ry="2" />
<text  x="636.19" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="154.1" y="1749" width="0.2" height="15.0" fill="rgb(230,77,43)" rx="2" ry="2" />
<text  x="157.14" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="92.3" y="1829" width="0.2" height="15.0" fill="rgb(205,13,8)" rx="2" ry="2" />
<text  x="95.33" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="290.9" y="1509" width="0.8" height="15.0" fill="rgb(217,136,8)" rx="2" ry="2" />
<text  x="293.90" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="33.3" y="1957" width="0.2" height="15.0" fill="rgb(227,43,9)" rx="2" ry="2" />
<text  x="36.32" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="675.3" y="2005" width="0.2" height="15.0" fill="rgb(210,167,40)" rx="2" ry="2" />
<text  x="678.26" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="581.8" y="1909" width="0.2" height="15.0" fill="rgb(225,78,6)" rx="2" ry="2" />
<text  x="584.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_xmit (262 samples, 4.43%)</title><rect x="279.9" y="1845" width="52.3" height="15.0" fill="rgb(209,47,6)" rx="2" ry="2" />
<text  x="282.93" y="1855.5" >tcp_w..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="636.0" y="1957" width="0.2" height="15.0" fill="rgb(230,211,25)" rx="2" ry="2" />
<text  x="638.98" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="56.5" y="1893" width="0.1" height="15.0" fill="rgb(218,215,0)" rx="2" ry="2" />
<text  x="59.45" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.08%)</title><rect x="152.5" y="1861" width="1.0" height="15.0" fill="rgb(234,16,15)" rx="2" ry="2" />
<text  x="155.54" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1182.0" y="1797" width="0.2" height="15.0" fill="rgb(218,42,44)" rx="2" ry="2" />
<text  x="1185.03" y="1807.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="172.3" y="1941" width="0.2" height="15.0" fill="rgb(208,48,7)" rx="2" ry="2" />
<text  x="175.28" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="657.9" y="1621" width="0.2" height="15.0" fill="rgb(219,101,40)" rx="2" ry="2" />
<text  x="660.91" y="1631.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="61.0" y="1781" width="0.2" height="15.0" fill="rgb(226,167,10)" rx="2" ry="2" />
<text  x="64.04" y="1791.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (2 samples, 0.03%)</title><rect x="1182.8" y="2053" width="0.4" height="15.0" fill="rgb(207,167,32)" rx="2" ry="2" />
<text  x="1185.82" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (20 samples, 0.34%)</title><rect x="910.3" y="1989" width="4.0" height="15.0" fill="rgb(213,131,15)" rx="2" ry="2" />
<text  x="913.30" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="773.5" y="1669" width="0.4" height="15.0" fill="rgb(239,39,43)" rx="2" ry="2" />
<text  x="776.54" y="1679.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="387.6" y="1925" width="0.2" height="15.0" fill="rgb(228,142,9)" rx="2" ry="2" />
<text  x="390.58" y="1935.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="157.9" y="1973" width="0.8" height="15.0" fill="rgb(248,104,8)" rx="2" ry="2" />
<text  x="160.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (9 samples, 0.15%)</title><rect x="823.6" y="1701" width="1.8" height="15.0" fill="rgb(250,18,48)" rx="2" ry="2" />
<text  x="826.58" y="1711.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1009.0" y="2005" width="0.2" height="15.0" fill="rgb(224,200,22)" rx="2" ry="2" />
<text  x="1011.98" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="853.9" y="1909" width="0.2" height="15.0" fill="rgb(236,159,26)" rx="2" ry="2" />
<text  x="856.88" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (5 samples, 0.08%)</title><rect x="74.0" y="1957" width="1.0" height="15.0" fill="rgb(236,30,36)" rx="2" ry="2" />
<text  x="76.99" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (138 samples, 2.33%)</title><rect x="201.8" y="1989" width="27.5" height="15.0" fill="rgb(216,199,22)" rx="2" ry="2" />
<text  x="204.78" y="1999.5" >f..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="820.8" y="1557" width="0.2" height="15.0" fill="rgb(207,120,2)" rx="2" ry="2" />
<text  x="823.79" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (21 samples, 0.35%)</title><rect x="793.3" y="1509" width="4.2" height="15.0" fill="rgb(209,10,49)" rx="2" ry="2" />
<text  x="796.28" y="1519.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="271.6" y="1797" width="0.6" height="15.0" fill="rgb(224,116,47)" rx="2" ry="2" />
<text  x="274.56" y="1807.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="263.0" y="1861" width="0.2" height="15.0" fill="rgb(247,214,22)" rx="2" ry="2" />
<text  x="265.99" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1124.8" y="1893" width="0.2" height="15.0" fill="rgb(246,192,14)" rx="2" ry="2" />
<text  x="1127.81" y="1903.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="700.0" y="1957" width="0.2" height="15.0" fill="rgb(240,100,33)" rx="2" ry="2" />
<text  x="702.98" y="1967.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="163.9" y="1989" width="0.2" height="15.0" fill="rgb(223,155,12)" rx="2" ry="2" />
<text  x="166.90" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="541.7" y="1909" width="0.4" height="15.0" fill="rgb(226,202,48)" rx="2" ry="2" />
<text  x="544.69" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="556.8" y="1925" width="0.2" height="15.0" fill="rgb(230,1,44)" rx="2" ry="2" />
<text  x="559.84" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (8 samples, 0.14%)</title><rect x="164.9" y="2021" width="1.6" height="15.0" fill="rgb(207,163,12)" rx="2" ry="2" />
<text  x="167.90" y="2031.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="489.9" y="1637" width="0.2" height="15.0" fill="rgb(240,191,6)" rx="2" ry="2" />
<text  x="492.85" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="114.1" y="437" width="0.2" height="15.0" fill="rgb(231,85,33)" rx="2" ry="2" />
<text  x="117.06" y="447.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1108.9" y="1733" width="0.2" height="15.0" fill="rgb(254,141,17)" rx="2" ry="2" />
<text  x="1111.86" y="1743.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="377.8" y="1909" width="0.4" height="15.0" fill="rgb(211,163,20)" rx="2" ry="2" />
<text  x="380.82" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (15 samples, 0.25%)</title><rect x="948.6" y="1989" width="3.0" height="15.0" fill="rgb(238,222,9)" rx="2" ry="2" />
<text  x="951.58" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1164.7" y="2053" width="0.2" height="15.0" fill="rgb(227,105,15)" rx="2" ry="2" />
<text  x="1167.68" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="658.1" y="1909" width="0.2" height="15.0" fill="rgb(219,123,32)" rx="2" ry="2" />
<text  x="661.11" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1112.4" y="1637" width="0.4" height="15.0" fill="rgb(228,156,35)" rx="2" ry="2" />
<text  x="1115.45" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="882.4" y="1845" width="0.2" height="15.0" fill="rgb(250,202,47)" rx="2" ry="2" />
<text  x="885.39" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="571.4" y="1893" width="0.2" height="15.0" fill="rgb(250,49,43)" rx="2" ry="2" />
<text  x="574.39" y="1903.5" ></text>
</g>
<g >
<title>path_get (1 samples, 0.02%)</title><rect x="683.6" y="1589" width="0.2" height="15.0" fill="rgb(212,72,54)" rx="2" ry="2" />
<text  x="686.63" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="175.5" y="1973" width="0.2" height="15.0" fill="rgb(205,194,30)" rx="2" ry="2" />
<text  x="178.47" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1010.6" y="1989" width="0.2" height="15.0" fill="rgb(229,81,47)" rx="2" ry="2" />
<text  x="1013.58" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="865.4" y="1989" width="0.2" height="15.0" fill="rgb(207,83,22)" rx="2" ry="2" />
<text  x="868.45" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (4 samples, 0.07%)</title><rect x="1175.0" y="1989" width="0.8" height="15.0" fill="rgb(253,42,10)" rx="2" ry="2" />
<text  x="1178.05" y="1999.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (31 samples, 0.52%)</title><rect x="960.7" y="2037" width="6.2" height="15.0" fill="rgb(250,143,14)" rx="2" ry="2" />
<text  x="963.74" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1173.9" y="1877" width="0.2" height="15.0" fill="rgb(208,91,47)" rx="2" ry="2" />
<text  x="1176.85" y="1887.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.02%)</title><rect x="732.1" y="1621" width="0.2" height="15.0" fill="rgb(228,16,34)" rx="2" ry="2" />
<text  x="735.07" y="1631.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="489.1" y="1973" width="1.0" height="15.0" fill="rgb(247,28,32)" rx="2" ry="2" />
<text  x="492.06" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (2 samples, 0.03%)</title><rect x="920.5" y="1989" width="0.4" height="15.0" fill="rgb(236,227,0)" rx="2" ry="2" />
<text  x="923.47" y="1999.5" ></text>
</g>
<g >
<title>task_work_run (537 samples, 9.07%)</title><rect x="723.3" y="1845" width="107.1" height="15.0" fill="rgb(229,77,53)" rx="2" ry="2" />
<text  x="726.30" y="1855.5" >task_work_run</text>
</g>
<g >
<title>[unknown] (79 samples, 1.33%)</title><rect x="99.5" y="1445" width="15.8" height="15.0" fill="rgb(212,66,13)" rx="2" ry="2" />
<text  x="102.51" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="683.6" y="1829" width="0.4" height="15.0" fill="rgb(246,86,0)" rx="2" ry="2" />
<text  x="686.63" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (64 samples, 1.08%)</title><rect x="1149.5" y="2037" width="12.8" height="15.0" fill="rgb(229,13,32)" rx="2" ry="2" />
<text  x="1152.53" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="286.5" y="1685" width="0.2" height="15.0" fill="rgb(234,119,29)" rx="2" ry="2" />
<text  x="289.51" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="309" width="14.0" height="15.0" fill="rgb(216,202,27)" rx="2" ry="2" />
<text  x="103.11" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="165.7" y="1973" width="0.2" height="15.0" fill="rgb(223,49,51)" rx="2" ry="2" />
<text  x="168.70" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14 samples, 0.24%)</title><rect x="934.6" y="1973" width="2.8" height="15.0" fill="rgb(250,191,15)" rx="2" ry="2" />
<text  x="937.62" y="1983.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="669.5" y="1845" width="0.2" height="15.0" fill="rgb(245,121,1)" rx="2" ry="2" />
<text  x="672.48" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.08%)</title><rect x="146.4" y="1861" width="1.0" height="15.0" fill="rgb(247,81,44)" rx="2" ry="2" />
<text  x="149.36" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="763.2" y="1637" width="0.2" height="15.0" fill="rgb(208,82,5)" rx="2" ry="2" />
<text  x="766.17" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv (41 samples, 0.69%)</title><rect x="1112.8" y="1653" width="8.2" height="15.0" fill="rgb(245,115,52)" rx="2" ry="2" />
<text  x="1115.85" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (117 samples, 1.98%)</title><rect x="40.9" y="1989" width="23.3" height="15.0" fill="rgb(209,121,54)" rx="2" ry="2" />
<text  x="43.90" y="1999.5" >f..</text>
</g>
<g >
<title>apparmor_socket_sendmsg (7 samples, 0.12%)</title><rect x="336.3" y="1909" width="1.4" height="15.0" fill="rgb(248,185,40)" rx="2" ry="2" />
<text  x="339.35" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (49 samples, 0.83%)</title><rect x="551.1" y="1957" width="9.7" height="15.0" fill="rgb(225,29,24)" rx="2" ry="2" />
<text  x="554.06" y="1967.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="226.5" y="1909" width="0.2" height="15.0" fill="rgb(250,138,8)" rx="2" ry="2" />
<text  x="229.50" y="1919.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1129.2" y="2021" width="0.2" height="15.0" fill="rgb(239,90,11)" rx="2" ry="2" />
<text  x="1132.20" y="2031.5" ></text>
</g>
<g >
<title>mutex_lock (10 samples, 0.17%)</title><rect x="480.5" y="1973" width="2.0" height="15.0" fill="rgb(228,213,43)" rx="2" ry="2" />
<text  x="483.48" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="875.4" y="1957" width="0.2" height="15.0" fill="rgb(233,170,3)" rx="2" ry="2" />
<text  x="878.41" y="1967.5" ></text>
</g>
<g >
<title>task_work_add (2 samples, 0.03%)</title><rect x="833.3" y="1797" width="0.4" height="15.0" fill="rgb(252,229,18)" rx="2" ry="2" />
<text  x="836.35" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="581" width="14.2" height="15.0" fill="rgb(223,171,6)" rx="2" ry="2" />
<text  x="103.11" y="591.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="704.2" y="1877" width="0.2" height="15.0" fill="rgb(217,105,25)" rx="2" ry="2" />
<text  x="707.16" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="114.1" y="277" width="0.2" height="15.0" fill="rgb(215,190,2)" rx="2" ry="2" />
<text  x="117.06" y="287.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="912.9" y="1973" width="0.4" height="15.0" fill="rgb(228,113,49)" rx="2" ry="2" />
<text  x="915.89" y="1983.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="610.3" y="1845" width="0.2" height="15.0" fill="rgb(210,183,10)" rx="2" ry="2" />
<text  x="613.27" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="763.2" y="1605" width="0.2" height="15.0" fill="rgb(231,61,5)" rx="2" ry="2" />
<text  x="766.17" y="1615.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (7 samples, 0.12%)</title><rect x="173.3" y="1957" width="1.4" height="15.0" fill="rgb(248,42,43)" rx="2" ry="2" />
<text  x="176.27" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="405.5" y="1893" width="0.2" height="15.0" fill="rgb(212,181,19)" rx="2" ry="2" />
<text  x="408.53" y="1903.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="689.8" y="1589" width="0.2" height="15.0" fill="rgb(209,159,47)" rx="2" ry="2" />
<text  x="692.81" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.02%)</title><rect x="1173.1" y="1941" width="0.2" height="15.0" fill="rgb(236,3,4)" rx="2" ry="2" />
<text  x="1176.05" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="835.7" y="1877" width="0.2" height="15.0" fill="rgb(229,14,42)" rx="2" ry="2" />
<text  x="838.74" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="248.8" y="1797" width="0.2" height="15.0" fill="rgb(215,82,36)" rx="2" ry="2" />
<text  x="251.83" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1108.9" y="1701" width="0.2" height="15.0" fill="rgb(243,200,54)" rx="2" ry="2" />
<text  x="1111.86" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="508.4" y="1845" width="0.2" height="15.0" fill="rgb(228,10,16)" rx="2" ry="2" />
<text  x="511.39" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.4" y="1877" width="0.2" height="15.0" fill="rgb(219,10,47)" rx="2" ry="2" />
<text  x="138.40" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="326.2" y="1749" width="0.2" height="15.0" fill="rgb(227,180,21)" rx="2" ry="2" />
<text  x="329.18" y="1759.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="157.9" y="2005" width="0.8" height="15.0" fill="rgb(243,193,42)" rx="2" ry="2" />
<text  x="160.92" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (2 samples, 0.03%)</title><rect x="656.7" y="1893" width="0.4" height="15.0" fill="rgb(246,20,48)" rx="2" ry="2" />
<text  x="659.72" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (76 samples, 1.28%)</title><rect x="922.3" y="2005" width="15.1" height="15.0" fill="rgb(229,4,16)" rx="2" ry="2" />
<text  x="925.26" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (34 samples, 0.57%)</title><rect x="323.2" y="1797" width="6.8" height="15.0" fill="rgb(222,171,4)" rx="2" ry="2" />
<text  x="326.19" y="1807.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="538.1" y="1893" width="0.2" height="15.0" fill="rgb(222,62,31)" rx="2" ry="2" />
<text  x="541.10" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="669.7" y="1797" width="0.4" height="15.0" fill="rgb(251,214,31)" rx="2" ry="2" />
<text  x="672.68" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="571.4" y="1765" width="0.2" height="15.0" fill="rgb(210,77,50)" rx="2" ry="2" />
<text  x="574.39" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="894.2" y="1653" width="0.2" height="15.0" fill="rgb(221,171,34)" rx="2" ry="2" />
<text  x="897.15" y="1663.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="903.3" y="1717" width="0.2" height="15.0" fill="rgb(205,153,51)" rx="2" ry="2" />
<text  x="906.32" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="541.7" y="1877" width="0.4" height="15.0" fill="rgb(248,6,44)" rx="2" ry="2" />
<text  x="544.69" y="1887.5" ></text>
</g>
<g >
<title>tcp_write_xmit (226 samples, 3.82%)</title><rect x="768.4" y="1701" width="45.0" height="15.0" fill="rgb(241,201,29)" rx="2" ry="2" />
<text  x="771.36" y="1711.5" >tcp_..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="989.4" y="1861" width="0.2" height="15.0" fill="rgb(248,191,27)" rx="2" ry="2" />
<text  x="992.45" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="972.1" y="2037" width="0.2" height="15.0" fill="rgb(225,210,7)" rx="2" ry="2" />
<text  x="975.10" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (10 samples, 0.17%)</title><rect x="640.4" y="1989" width="2.0" height="15.0" fill="rgb(232,110,18)" rx="2" ry="2" />
<text  x="643.37" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="890.6" y="1653" width="0.2" height="15.0" fill="rgb(243,28,39)" rx="2" ry="2" />
<text  x="893.56" y="1663.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="97.7" y="1989" width="0.2" height="15.0" fill="rgb(243,195,50)" rx="2" ry="2" />
<text  x="100.72" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="776.5" y="1653" width="0.2" height="15.0" fill="rgb(219,133,35)" rx="2" ry="2" />
<text  x="779.53" y="1663.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="320.2" y="1541" width="0.2" height="15.0" fill="rgb(234,8,26)" rx="2" ry="2" />
<text  x="323.20" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output2 (101 samples, 1.71%)</title><rect x="781.5" y="1605" width="20.2" height="15.0" fill="rgb(241,148,18)" rx="2" ry="2" />
<text  x="784.52" y="1615.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="525.5" y="1973" width="1.0" height="15.0" fill="rgb(230,56,45)" rx="2" ry="2" />
<text  x="528.54" y="1983.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="886.0" y="1589" width="0.2" height="15.0" fill="rgb(226,150,6)" rx="2" ry="2" />
<text  x="888.98" y="1599.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="561.2" y="1957" width="1.0" height="15.0" fill="rgb(228,3,50)" rx="2" ry="2" />
<text  x="564.22" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="658.1" y="1893" width="0.2" height="15.0" fill="rgb(229,76,16)" rx="2" ry="2" />
<text  x="661.11" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1004.6" y="1973" width="0.2" height="15.0" fill="rgb(240,133,40)" rx="2" ry="2" />
<text  x="1007.60" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="837" width="14.4" height="15.0" fill="rgb(226,83,8)" rx="2" ry="2" />
<text  x="103.11" y="847.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="381.4" y="1781" width="0.2" height="15.0" fill="rgb(228,219,54)" rx="2" ry="2" />
<text  x="384.40" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="820.8" y="1509" width="0.2" height="15.0" fill="rgb(236,43,36)" rx="2" ry="2" />
<text  x="823.79" y="1519.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="950.0" y="1973" width="0.8" height="15.0" fill="rgb(215,229,44)" rx="2" ry="2" />
<text  x="952.97" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (3 samples, 0.05%)</title><rect x="916.5" y="2005" width="0.6" height="15.0" fill="rgb(227,1,47)" rx="2" ry="2" />
<text  x="919.48" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="109.1" y="37" width="1.2" height="15.0" fill="rgb(216,191,19)" rx="2" ry="2" />
<text  x="112.08" y="47.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (24 samples, 0.41%)</title><rect x="849.5" y="1941" width="4.8" height="15.0" fill="rgb(226,208,50)" rx="2" ry="2" />
<text  x="852.50" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (292 samples, 4.93%)</title><rect x="98.5" y="2021" width="58.2" height="15.0" fill="rgb(242,125,39)" rx="2" ry="2" />
<text  x="101.51" y="2031.5" >[unkno..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="534.9" y="1941" width="0.2" height="15.0" fill="rgb(211,80,27)" rx="2" ry="2" />
<text  x="537.91" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="99.3" y="1557" width="16.6" height="15.0" fill="rgb(249,102,1)" rx="2" ry="2" />
<text  x="102.31" y="1567.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="847.5" y="1653" width="0.2" height="15.0" fill="rgb(214,107,50)" rx="2" ry="2" />
<text  x="850.50" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (7 samples, 0.12%)</title><rect x="635.0" y="1989" width="1.4" height="15.0" fill="rgb(248,22,37)" rx="2" ry="2" />
<text  x="637.99" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="868.2" y="1989" width="0.2" height="15.0" fill="rgb(253,30,7)" rx="2" ry="2" />
<text  x="871.24" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="499.8" y="1621" width="0.2" height="15.0" fill="rgb(214,185,10)" rx="2" ry="2" />
<text  x="502.82" y="1631.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="489.1" y="1957" width="1.0" height="15.0" fill="rgb(205,21,52)" rx="2" ry="2" />
<text  x="492.06" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="572.8" y="1925" width="0.2" height="15.0" fill="rgb(253,2,40)" rx="2" ry="2" />
<text  x="575.79" y="1935.5" ></text>
</g>
<g >
<title>folly::operator== (2 samples, 0.03%)</title><rect x="697.8" y="2005" width="0.4" height="15.0" fill="rgb(247,63,48)" rx="2" ry="2" />
<text  x="700.79" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (12 samples, 0.20%)</title><rect x="51.3" y="1941" width="2.4" height="15.0" fill="rgb(234,106,20)" rx="2" ry="2" />
<text  x="54.27" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1181.8" y="1989" width="0.2" height="15.0" fill="rgb(252,172,36)" rx="2" ry="2" />
<text  x="1184.83" y="1999.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (2 samples, 0.03%)</title><rect x="731.9" y="1653" width="0.4" height="15.0" fill="rgb(225,169,17)" rx="2" ry="2" />
<text  x="734.88" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="742.0" y="1765" width="0.2" height="15.0" fill="rgb(247,125,12)" rx="2" ry="2" />
<text  x="745.04" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="893.2" y="1893" width="0.2" height="15.0" fill="rgb(225,139,27)" rx="2" ry="2" />
<text  x="896.16" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="100.9" y="37" width="0.2" height="15.0" fill="rgb(251,30,52)" rx="2" ry="2" />
<text  x="103.91" y="47.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="685.2" y="1909" width="0.8" height="15.0" fill="rgb(220,128,48)" rx="2" ry="2" />
<text  x="688.23" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="917.9" y="1861" width="0.2" height="15.0" fill="rgb(219,1,35)" rx="2" ry="2" />
<text  x="920.88" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="856.7" y="1973" width="0.2" height="15.0" fill="rgb(240,1,54)" rx="2" ry="2" />
<text  x="859.67" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="113.1" y="53" width="0.2" height="15.0" fill="rgb(241,158,13)" rx="2" ry="2" />
<text  x="116.07" y="63.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="183.8" y="1829" width="0.4" height="15.0" fill="rgb(234,37,47)" rx="2" ry="2" />
<text  x="186.84" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (8 samples, 0.14%)</title><rect x="570.6" y="2005" width="1.6" height="15.0" fill="rgb(231,197,15)" rx="2" ry="2" />
<text  x="573.59" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="704.2" y="1749" width="0.2" height="15.0" fill="rgb(238,224,14)" rx="2" ry="2" />
<text  x="707.16" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (5 samples, 0.08%)</title><rect x="1172.9" y="1973" width="1.0" height="15.0" fill="rgb(237,73,24)" rx="2" ry="2" />
<text  x="1175.86" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="898.9" y="1781" width="0.2" height="15.0" fill="rgb(244,97,32)" rx="2" ry="2" />
<text  x="901.94" y="1791.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="92.3" y="1797" width="0.2" height="15.0" fill="rgb(227,189,47)" rx="2" ry="2" />
<text  x="95.33" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1108.9" y="1877" width="0.2" height="15.0" fill="rgb(249,194,52)" rx="2" ry="2" />
<text  x="1111.86" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="645.4" y="1813" width="0.2" height="15.0" fill="rgb(228,79,12)" rx="2" ry="2" />
<text  x="648.35" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="284.9" y="1781" width="0.2" height="15.0" fill="rgb(245,110,15)" rx="2" ry="2" />
<text  x="287.91" y="1791.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="950.8" y="1973" width="0.8" height="15.0" fill="rgb(211,208,37)" rx="2" ry="2" />
<text  x="953.77" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="62.2" y="1877" width="0.2" height="15.0" fill="rgb(219,0,36)" rx="2" ry="2" />
<text  x="65.23" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="246.0" y="1941" width="0.2" height="15.0" fill="rgb(233,57,37)" rx="2" ry="2" />
<text  x="249.04" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="508.4" y="1893" width="0.2" height="15.0" fill="rgb(235,138,13)" rx="2" ry="2" />
<text  x="511.39" y="1903.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="783.5" y="1589" width="0.4" height="15.0" fill="rgb(252,188,18)" rx="2" ry="2" />
<text  x="786.51" y="1599.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="92.3" y="1717" width="0.2" height="15.0" fill="rgb(212,125,17)" rx="2" ry="2" />
<text  x="95.33" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="100.7" y="37" width="0.2" height="15.0" fill="rgb(219,71,39)" rx="2" ry="2" />
<text  x="103.71" y="47.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="58.8" y="1893" width="0.2" height="15.0" fill="rgb(239,3,47)" rx="2" ry="2" />
<text  x="61.84" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (2 samples, 0.03%)</title><rect x="102.3" y="37" width="0.4" height="15.0" fill="rgb(211,203,40)" rx="2" ry="2" />
<text  x="105.30" y="47.5" ></text>
</g>
<g >
<title>kmem_cache_free (18 samples, 0.30%)</title><rect x="466.7" y="1941" width="3.6" height="15.0" fill="rgb(222,8,1)" rx="2" ry="2" />
<text  x="469.73" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="215.9" y="1877" width="0.2" height="15.0" fill="rgb(236,7,43)" rx="2" ry="2" />
<text  x="218.94" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="601.1" y="1989" width="0.2" height="15.0" fill="rgb(205,200,23)" rx="2" ry="2" />
<text  x="604.10" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="40.7" y="1957" width="0.2" height="15.0" fill="rgb(216,19,2)" rx="2" ry="2" />
<text  x="43.70" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="872.8" y="1973" width="0.2" height="15.0" fill="rgb(246,221,46)" rx="2" ry="2" />
<text  x="875.82" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (111 samples, 1.88%)</title><rect x="676.1" y="2021" width="22.1" height="15.0" fill="rgb(239,128,14)" rx="2" ry="2" />
<text  x="679.06" y="2031.5" >f..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="165.3" y="1989" width="0.4" height="15.0" fill="rgb(252,174,36)" rx="2" ry="2" />
<text  x="168.30" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="691.8" y="1733" width="0.2" height="15.0" fill="rgb(216,22,25)" rx="2" ry="2" />
<text  x="694.80" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (44 samples, 0.74%)</title><rect x="1112.4" y="1733" width="8.8" height="15.0" fill="rgb(229,193,39)" rx="2" ry="2" />
<text  x="1115.45" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="228.1" y="1765" width="0.2" height="15.0" fill="rgb(209,0,12)" rx="2" ry="2" />
<text  x="231.10" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (58 samples, 0.98%)</title><rect x="601.1" y="2005" width="11.6" height="15.0" fill="rgb(249,93,26)" rx="2" ry="2" />
<text  x="604.10" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="657.9" y="1813" width="0.2" height="15.0" fill="rgb(240,35,9)" rx="2" ry="2" />
<text  x="660.91" y="1823.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1039.7" y="1957" width="0.2" height="15.0" fill="rgb(213,187,47)" rx="2" ry="2" />
<text  x="1042.68" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="755.2" y="1717" width="0.2" height="15.0" fill="rgb(209,223,28)" rx="2" ry="2" />
<text  x="758.20" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="216.7" y="1893" width="0.2" height="15.0" fill="rgb(219,181,2)" rx="2" ry="2" />
<text  x="219.73" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="950.6" y="1941" width="0.2" height="15.0" fill="rgb(231,186,8)" rx="2" ry="2" />
<text  x="953.57" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="213.1" y="1861" width="0.2" height="15.0" fill="rgb(240,149,48)" rx="2" ry="2" />
<text  x="216.15" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="292.7" y="1445" width="0.6" height="15.0" fill="rgb(252,212,9)" rx="2" ry="2" />
<text  x="295.69" y="1455.5" ></text>
</g>
<g >
<title>task_numa_fault (5 samples, 0.08%)</title><rect x="93.5" y="1957" width="1.0" height="15.0" fill="rgb(233,137,28)" rx="2" ry="2" />
<text  x="96.53" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="756.8" y="1509" width="0.2" height="15.0" fill="rgb(214,150,8)" rx="2" ry="2" />
<text  x="759.80" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1174.1" y="1989" width="0.2" height="15.0" fill="rgb(233,220,16)" rx="2" ry="2" />
<text  x="1177.05" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="691.0" y="1861" width="0.2" height="15.0" fill="rgb(213,16,18)" rx="2" ry="2" />
<text  x="694.01" y="1871.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="61.0" y="1765" width="0.2" height="15.0" fill="rgb(220,110,19)" rx="2" ry="2" />
<text  x="64.04" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="571.4" y="1701" width="0.2" height="15.0" fill="rgb(236,57,30)" rx="2" ry="2" />
<text  x="574.39" y="1711.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.08%)</title><rect x="93.5" y="1989" width="1.0" height="15.0" fill="rgb(219,68,49)" rx="2" ry="2" />
<text  x="96.53" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="189.6" y="1781" width="0.4" height="15.0" fill="rgb(234,107,10)" rx="2" ry="2" />
<text  x="192.62" y="1791.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="950.6" y="1877" width="0.2" height="15.0" fill="rgb(217,47,35)" rx="2" ry="2" />
<text  x="953.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1349" width="15.4" height="15.0" fill="rgb(208,188,1)" rx="2" ry="2" />
<text  x="102.71" y="1359.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1079.4" y="1893" width="0.2" height="15.0" fill="rgb(251,213,33)" rx="2" ry="2" />
<text  x="1082.36" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1174.6" y="1973" width="0.2" height="15.0" fill="rgb(238,222,19)" rx="2" ry="2" />
<text  x="1177.65" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="854.1" y="1877" width="0.2" height="15.0" fill="rgb(242,100,22)" rx="2" ry="2" />
<text  x="857.08" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="14.0" y="2005" width="0.2" height="15.0" fill="rgb(209,128,12)" rx="2" ry="2" />
<text  x="16.99" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="527.9" y="1957" width="1.6" height="15.0" fill="rgb(224,3,39)" rx="2" ry="2" />
<text  x="530.93" y="1967.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="184.2" y="2021" width="0.2" height="15.0" fill="rgb(250,75,34)" rx="2" ry="2" />
<text  x="187.24" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="546.5" y="1765" width="0.2" height="15.0" fill="rgb(217,194,35)" rx="2" ry="2" />
<text  x="549.47" y="1775.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="387.2" y="1957" width="0.2" height="15.0" fill="rgb(221,163,18)" rx="2" ry="2" />
<text  x="390.19" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="699.2" y="1957" width="0.2" height="15.0" fill="rgb(250,200,13)" rx="2" ry="2" />
<text  x="702.18" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="222.1" y="1797" width="0.2" height="15.0" fill="rgb(248,96,23)" rx="2" ry="2" />
<text  x="225.12" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="229.5" y="1669" width="0.2" height="15.0" fill="rgb(233,33,33)" rx="2" ry="2" />
<text  x="232.49" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="228.1" y="1829" width="0.2" height="15.0" fill="rgb(216,136,12)" rx="2" ry="2" />
<text  x="231.10" y="1839.5" ></text>
</g>
<g >
<title>skb_clone (20 samples, 0.34%)</title><rect x="316.6" y="1813" width="4.0" height="15.0" fill="rgb(238,89,37)" rx="2" ry="2" />
<text  x="319.61" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="523.3" y="1973" width="1.4" height="15.0" fill="rgb(221,116,39)" rx="2" ry="2" />
<text  x="526.35" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::fdToSocket (1 samples, 0.02%)</title><rect x="30.1" y="1973" width="0.2" height="15.0" fill="rgb(231,39,27)" rx="2" ry="2" />
<text  x="33.14" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="272.8" y="1765" width="0.2" height="15.0" fill="rgb(219,33,17)" rx="2" ry="2" />
<text  x="275.75" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="77.4" y="1749" width="0.2" height="15.0" fill="rgb(244,49,8)" rx="2" ry="2" />
<text  x="80.38" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="617.4" y="1973" width="0.2" height="15.0" fill="rgb(228,116,4)" rx="2" ry="2" />
<text  x="620.44" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="613.3" y="1973" width="0.4" height="15.0" fill="rgb(227,53,36)" rx="2" ry="2" />
<text  x="616.26" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="189.6" y="1893" width="0.4" height="15.0" fill="rgb(208,1,16)" rx="2" ry="2" />
<text  x="192.62" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="868.8" y="1909" width="0.2" height="15.0" fill="rgb(222,224,43)" rx="2" ry="2" />
<text  x="871.83" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="747.6" y="1733" width="0.2" height="15.0" fill="rgb(235,209,21)" rx="2" ry="2" />
<text  x="750.62" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1429" width="15.4" height="15.0" fill="rgb(242,21,25)" rx="2" ry="2" />
<text  x="102.71" y="1439.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (2 samples, 0.03%)</title><rect x="543.3" y="1989" width="0.4" height="15.0" fill="rgb(221,115,30)" rx="2" ry="2" />
<text  x="546.28" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="1175.0" y="1973" width="0.6" height="15.0" fill="rgb(235,114,44)" rx="2" ry="2" />
<text  x="1178.05" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="971.5" y="1861" width="0.2" height="15.0" fill="rgb(227,85,25)" rx="2" ry="2" />
<text  x="974.50" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1173.9" y="1749" width="0.2" height="15.0" fill="rgb(241,82,54)" rx="2" ry="2" />
<text  x="1176.85" y="1759.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="190.4" y="2021" width="0.2" height="15.0" fill="rgb(221,170,44)" rx="2" ry="2" />
<text  x="193.42" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="246.2" y="1941" width="0.2" height="15.0" fill="rgb(254,75,23)" rx="2" ry="2" />
<text  x="249.24" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (9 samples, 0.15%)</title><rect x="1180.4" y="2037" width="1.8" height="15.0" fill="rgb(254,186,1)" rx="2" ry="2" />
<text  x="1183.43" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_ack (49 samples, 0.83%)</title><rect x="1111.5" y="1909" width="9.7" height="15.0" fill="rgb(250,118,44)" rx="2" ry="2" />
<text  x="1114.45" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (2 samples, 0.03%)</title><rect x="71.6" y="1957" width="0.4" height="15.0" fill="rgb(217,52,8)" rx="2" ry="2" />
<text  x="74.60" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1181.6" y="2005" width="0.4" height="15.0" fill="rgb(241,114,45)" rx="2" ry="2" />
<text  x="1184.63" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="978.9" y="1989" width="0.2" height="15.0" fill="rgb(224,127,11)" rx="2" ry="2" />
<text  x="981.88" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1182.0" y="1877" width="0.2" height="15.0" fill="rgb(245,108,0)" rx="2" ry="2" />
<text  x="1185.03" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1112.4" y="1605" width="0.4" height="15.0" fill="rgb(214,91,19)" rx="2" ry="2" />
<text  x="1115.45" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="917.9" y="1877" width="0.2" height="15.0" fill="rgb(217,125,11)" rx="2" ry="2" />
<text  x="920.88" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="499.8" y="1637" width="0.2" height="15.0" fill="rgb(210,115,10)" rx="2" ry="2" />
<text  x="502.82" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="99.3" y="1573" width="16.8" height="15.0" fill="rgb(236,10,7)" rx="2" ry="2" />
<text  x="102.31" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="953.6" y="2021" width="2.8" height="15.0" fill="rgb(210,173,20)" rx="2" ry="2" />
<text  x="956.56" y="2031.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="68.8" y="1845" width="0.2" height="15.0" fill="rgb(249,31,16)" rx="2" ry="2" />
<text  x="71.81" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="846.7" y="1893" width="0.4" height="15.0" fill="rgb(215,73,52)" rx="2" ry="2" />
<text  x="849.71" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (41 samples, 0.69%)</title><rect x="1112.8" y="1621" width="8.2" height="15.0" fill="rgb(233,73,24)" rx="2" ry="2" />
<text  x="1115.85" y="1631.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="33.1" y="1941" width="0.2" height="15.0" fill="rgb(237,62,48)" rx="2" ry="2" />
<text  x="36.13" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1013.8" y="1989" width="0.2" height="15.0" fill="rgb(211,69,51)" rx="2" ry="2" />
<text  x="1016.77" y="1999.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="279.5" y="1845" width="0.4" height="15.0" fill="rgb(224,29,19)" rx="2" ry="2" />
<text  x="282.53" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="246.2" y="1893" width="0.2" height="15.0" fill="rgb(254,59,27)" rx="2" ry="2" />
<text  x="249.24" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="775.1" y="1669" width="0.2" height="15.0" fill="rgb(225,221,10)" rx="2" ry="2" />
<text  x="778.14" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="114.1" y="37" width="0.2" height="15.0" fill="rgb(209,5,19)" rx="2" ry="2" />
<text  x="117.06" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (2 samples, 0.03%)</title><rect x="35.1" y="1957" width="0.4" height="15.0" fill="rgb(245,170,19)" rx="2" ry="2" />
<text  x="38.12" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (8 samples, 0.14%)</title><rect x="175.9" y="1973" width="1.6" height="15.0" fill="rgb(206,164,33)" rx="2" ry="2" />
<text  x="178.87" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="408.3" y="1557" width="0.2" height="15.0" fill="rgb(238,172,9)" rx="2" ry="2" />
<text  x="411.32" y="1567.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="936.4" y="1925" width="0.2" height="15.0" fill="rgb(212,9,34)" rx="2" ry="2" />
<text  x="939.42" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (3 samples, 0.05%)</title><rect x="48.3" y="1877" width="0.6" height="15.0" fill="rgb(221,137,5)" rx="2" ry="2" />
<text  x="51.28" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="946.2" y="2005" width="0.2" height="15.0" fill="rgb(218,215,18)" rx="2" ry="2" />
<text  x="949.19" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (2 samples, 0.03%)</title><rect x="694.0" y="1637" width="0.4" height="15.0" fill="rgb(211,182,0)" rx="2" ry="2" />
<text  x="697.00" y="1647.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (17 samples, 0.29%)</title><rect x="1165.5" y="2053" width="3.4" height="15.0" fill="rgb(207,18,46)" rx="2" ry="2" />
<text  x="1168.48" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (31 samples, 0.52%)</title><rect x="602.3" y="1909" width="6.2" height="15.0" fill="rgb(241,97,51)" rx="2" ry="2" />
<text  x="605.29" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1003.6" y="1861" width="0.2" height="15.0" fill="rgb(208,39,18)" rx="2" ry="2" />
<text  x="1006.60" y="1871.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="229.5" y="1717" width="0.2" height="15.0" fill="rgb(225,12,0)" rx="2" ry="2" />
<text  x="232.49" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1173.9" y="1829" width="0.2" height="15.0" fill="rgb(237,58,28)" rx="2" ry="2" />
<text  x="1176.85" y="1839.5" ></text>
</g>
<g >
<title>__sched_text_start (18 samples, 0.30%)</title><rect x="10.4" y="1925" width="3.6" height="15.0" fill="rgb(239,66,13)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="61.6" y="1909" width="0.2" height="15.0" fill="rgb(233,185,22)" rx="2" ry="2" />
<text  x="64.63" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="320.2" y="1573" width="0.2" height="15.0" fill="rgb(234,178,23)" rx="2" ry="2" />
<text  x="323.20" y="1583.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="490.7" y="1877" width="0.2" height="15.0" fill="rgb(231,130,14)" rx="2" ry="2" />
<text  x="493.65" y="1887.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="669.9" y="1525" width="0.2" height="15.0" fill="rgb(247,39,6)" rx="2" ry="2" />
<text  x="672.87" y="1535.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="694.4" y="1973" width="2.6" height="15.0" fill="rgb(241,11,24)" rx="2" ry="2" />
<text  x="697.40" y="1983.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="322.0" y="1829" width="0.2" height="15.0" fill="rgb(225,154,25)" rx="2" ry="2" />
<text  x="325.00" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="132.6" y="1973" width="0.2" height="15.0" fill="rgb(208,5,49)" rx="2" ry="2" />
<text  x="135.61" y="1983.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="291.3" y="1461" width="0.2" height="15.0" fill="rgb(248,102,36)" rx="2" ry="2" />
<text  x="294.29" y="1471.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="596.7" y="1861" width="1.6" height="15.0" fill="rgb(242,10,11)" rx="2" ry="2" />
<text  x="599.71" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="97.9" y="2021" width="0.2" height="15.0" fill="rgb(221,93,22)" rx="2" ry="2" />
<text  x="100.92" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="683.6" y="1765" width="0.4" height="15.0" fill="rgb(228,225,39)" rx="2" ry="2" />
<text  x="686.63" y="1775.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="305.6" y="1621" width="0.2" height="15.0" fill="rgb(242,77,42)" rx="2" ry="2" />
<text  x="308.65" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (36 samples, 0.61%)</title><rect x="926.1" y="1941" width="7.1" height="15.0" fill="rgb(209,90,36)" rx="2" ry="2" />
<text  x="929.05" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="189.6" y="1813" width="0.4" height="15.0" fill="rgb(242,183,54)" rx="2" ry="2" />
<text  x="192.62" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="228.1" y="1877" width="0.2" height="15.0" fill="rgb(214,142,10)" rx="2" ry="2" />
<text  x="231.10" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="751.2" y="1685" width="0.2" height="15.0" fill="rgb(247,21,39)" rx="2" ry="2" />
<text  x="754.21" y="1695.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="145.6" y="1669" width="0.2" height="15.0" fill="rgb(214,207,54)" rx="2" ry="2" />
<text  x="148.56" y="1679.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="33.1" y="1909" width="0.2" height="15.0" fill="rgb(218,31,19)" rx="2" ry="2" />
<text  x="36.13" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (9 samples, 0.15%)</title><rect x="220.5" y="1861" width="1.8" height="15.0" fill="rgb(236,88,4)" rx="2" ry="2" />
<text  x="223.52" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="971.5" y="1957" width="0.2" height="15.0" fill="rgb(240,29,6)" rx="2" ry="2" />
<text  x="974.50" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="832.2" y="1685" width="0.2" height="15.0" fill="rgb(252,40,51)" rx="2" ry="2" />
<text  x="835.15" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="847.3" y="1893" width="0.2" height="15.0" fill="rgb(214,84,26)" rx="2" ry="2" />
<text  x="850.30" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="573.0" y="1989" width="0.6" height="15.0" fill="rgb(237,148,7)" rx="2" ry="2" />
<text  x="575.99" y="1999.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="29.5" y="1877" width="0.2" height="15.0" fill="rgb(247,174,2)" rx="2" ry="2" />
<text  x="32.54" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="114.1" y="421" width="0.2" height="15.0" fill="rgb(225,105,7)" rx="2" ry="2" />
<text  x="117.06" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="522.5" y="1989" width="0.4" height="15.0" fill="rgb(247,142,11)" rx="2" ry="2" />
<text  x="525.55" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="722.9" y="1845" width="0.2" height="15.0" fill="rgb(217,107,52)" rx="2" ry="2" />
<text  x="725.90" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="645.4" y="1797" width="0.2" height="15.0" fill="rgb(250,171,27)" rx="2" ry="2" />
<text  x="648.35" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17 samples, 0.29%)</title><rect x="470.5" y="1925" width="3.4" height="15.0" fill="rgb(214,130,31)" rx="2" ry="2" />
<text  x="473.52" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1333" width="15.4" height="15.0" fill="rgb(247,156,3)" rx="2" ry="2" />
<text  x="102.71" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="294.3" y="1701" width="1.2" height="15.0" fill="rgb(208,60,10)" rx="2" ry="2" />
<text  x="297.28" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (2 samples, 0.03%)</title><rect x="1112.4" y="1509" width="0.4" height="15.0" fill="rgb(239,53,51)" rx="2" ry="2" />
<text  x="1115.45" y="1519.5" ></text>
</g>
<g >
<title>fput (4 samples, 0.07%)</title><rect x="832.9" y="1813" width="0.8" height="15.0" fill="rgb(215,126,6)" rx="2" ry="2" />
<text  x="835.95" y="1823.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="290.5" y="1621" width="0.2" height="15.0" fill="rgb(247,66,3)" rx="2" ry="2" />
<text  x="293.50" y="1631.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="981.1" y="1973" width="0.2" height="15.0" fill="rgb(247,32,7)" rx="2" ry="2" />
<text  x="984.07" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="77.4" y="1813" width="0.2" height="15.0" fill="rgb(243,8,0)" rx="2" ry="2" />
<text  x="80.38" y="1823.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1181.4" y="1989" width="0.2" height="15.0" fill="rgb(245,77,44)" rx="2" ry="2" />
<text  x="1184.43" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="530.9" y="1845" width="0.2" height="15.0" fill="rgb(215,157,12)" rx="2" ry="2" />
<text  x="533.92" y="1855.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="489.1" y="1893" width="0.8" height="15.0" fill="rgb(220,57,46)" rx="2" ry="2" />
<text  x="492.06" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (100 samples, 1.69%)</title><rect x="873.0" y="1973" width="20.0" height="15.0" fill="rgb(238,111,2)" rx="2" ry="2" />
<text  x="876.02" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="969.1" y="2005" width="0.2" height="15.0" fill="rgb(230,102,21)" rx="2" ry="2" />
<text  x="972.11" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (7 samples, 0.12%)</title><rect x="956.6" y="2005" width="1.3" height="15.0" fill="rgb(232,7,0)" rx="2" ry="2" />
<text  x="959.55" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="522.2" y="1989" width="0.2" height="15.0" fill="rgb(230,141,45)" rx="2" ry="2" />
<text  x="525.15" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (10 samples, 0.17%)</title><rect x="222.5" y="1861" width="2.0" height="15.0" fill="rgb(208,23,13)" rx="2" ry="2" />
<text  x="225.52" y="1871.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="53.5" y="1813" width="0.2" height="15.0" fill="rgb(223,70,6)" rx="2" ry="2" />
<text  x="56.46" y="1823.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="124.8" y="2005" width="0.2" height="15.0" fill="rgb(206,32,20)" rx="2" ry="2" />
<text  x="127.83" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="15.4" y="2005" width="0.2" height="15.0" fill="rgb(215,224,49)" rx="2" ry="2" />
<text  x="18.38" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (13 samples, 0.22%)</title><rect x="60.0" y="1941" width="2.6" height="15.0" fill="rgb(246,179,4)" rx="2" ry="2" />
<text  x="63.04" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="80.8" y="1893" width="0.2" height="15.0" fill="rgb(207,223,3)" rx="2" ry="2" />
<text  x="83.77" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="989.4" y="1813" width="0.2" height="15.0" fill="rgb(237,186,10)" rx="2" ry="2" />
<text  x="992.45" y="1823.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="691.4" y="1813" width="0.2" height="15.0" fill="rgb(227,207,40)" rx="2" ry="2" />
<text  x="694.41" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1000.8" y="1957" width="0.2" height="15.0" fill="rgb(222,41,45)" rx="2" ry="2" />
<text  x="1003.81" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="111.1" y="37" width="0.4" height="15.0" fill="rgb(229,84,49)" rx="2" ry="2" />
<text  x="114.07" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (20 samples, 0.34%)</title><rect x="639.6" y="2005" width="4.0" height="15.0" fill="rgb(207,109,16)" rx="2" ry="2" />
<text  x="642.57" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="229.9" y="2037" width="0.2" height="15.0" fill="rgb(243,46,11)" rx="2" ry="2" />
<text  x="232.89" y="2047.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="185.0" y="1909" width="0.2" height="15.0" fill="rgb(245,45,32)" rx="2" ry="2" />
<text  x="188.04" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="246.2" y="1797" width="0.2" height="15.0" fill="rgb(253,9,39)" rx="2" ry="2" />
<text  x="249.24" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="499.8" y="1669" width="0.2" height="15.0" fill="rgb(248,79,33)" rx="2" ry="2" />
<text  x="502.82" y="1679.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="933.2" y="1909" width="0.2" height="15.0" fill="rgb(210,35,6)" rx="2" ry="2" />
<text  x="936.23" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1173.9" y="1973" width="0.2" height="15.0" fill="rgb(241,63,13)" rx="2" ry="2" />
<text  x="1176.85" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="271.6" y="1813" width="0.8" height="15.0" fill="rgb(222,12,41)" rx="2" ry="2" />
<text  x="274.56" y="1823.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="591.9" y="1861" width="0.2" height="15.0" fill="rgb(218,37,6)" rx="2" ry="2" />
<text  x="594.93" y="1871.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (34 samples, 0.57%)</title><rect x="323.2" y="1813" width="6.8" height="15.0" fill="rgb(224,55,47)" rx="2" ry="2" />
<text  x="326.19" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="878.4" y="1749" width="0.2" height="15.0" fill="rgb(222,214,43)" rx="2" ry="2" />
<text  x="881.40" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="138.6" y="1701" width="0.2" height="15.0" fill="rgb(246,181,1)" rx="2" ry="2" />
<text  x="141.59" y="1711.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (28 samples, 0.47%)</title><rect x="602.9" y="1893" width="5.6" height="15.0" fill="rgb(206,212,51)" rx="2" ry="2" />
<text  x="605.89" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (3 samples, 0.05%)</title><rect x="118.7" y="1813" width="0.5" height="15.0" fill="rgb(236,191,36)" rx="2" ry="2" />
<text  x="121.65" y="1823.5" ></text>
</g>
<g >
<title>folly::netops::recv (8 samples, 0.14%)</title><rect x="53.9" y="1957" width="1.6" height="15.0" fill="rgb(228,216,52)" rx="2" ry="2" />
<text  x="56.86" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="989.4" y="1653" width="0.2" height="15.0" fill="rgb(214,91,48)" rx="2" ry="2" />
<text  x="992.45" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="903.3" y="1925" width="0.2" height="15.0" fill="rgb(225,151,3)" rx="2" ry="2" />
<text  x="906.32" y="1935.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="114.9" y="1269" width="0.2" height="15.0" fill="rgb(220,77,7)" rx="2" ry="2" />
<text  x="117.86" y="1279.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="669.5" y="1813" width="0.2" height="15.0" fill="rgb(214,215,23)" rx="2" ry="2" />
<text  x="672.48" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="482.3" y="1845" width="0.2" height="15.0" fill="rgb(233,149,44)" rx="2" ry="2" />
<text  x="485.28" y="1855.5" ></text>
</g>
<g >
<title>folly::operator!= (4 samples, 0.07%)</title><rect x="32.1" y="1989" width="0.8" height="15.0" fill="rgb(250,45,22)" rx="2" ry="2" />
<text  x="35.13" y="1999.5" ></text>
</g>
<g >
<title>process_backlog (42 samples, 0.71%)</title><rect x="1112.8" y="1701" width="8.4" height="15.0" fill="rgb(208,121,28)" rx="2" ry="2" />
<text  x="1115.85" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="99.1" y="1781" width="18.6" height="15.0" fill="rgb(222,213,49)" rx="2" ry="2" />
<text  x="102.11" y="1791.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="1024.7" y="2037" width="0.2" height="15.0" fill="rgb(220,29,0)" rx="2" ry="2" />
<text  x="1027.73" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="92.1" y="1941" width="0.2" height="15.0" fill="rgb(245,132,34)" rx="2" ry="2" />
<text  x="95.14" y="1951.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (24 samples, 0.41%)</title><rect x="457.0" y="1973" width="4.7" height="15.0" fill="rgb(229,54,25)" rx="2" ry="2" />
<text  x="459.96" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="179.3" y="1973" width="0.2" height="15.0" fill="rgb(211,2,19)" rx="2" ry="2" />
<text  x="182.25" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (11 samples, 0.19%)</title><rect x="998.6" y="1973" width="2.2" height="15.0" fill="rgb(235,191,52)" rx="2" ry="2" />
<text  x="1001.62" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="905.9" y="1989" width="0.2" height="15.0" fill="rgb(235,142,30)" rx="2" ry="2" />
<text  x="908.91" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="903.1" y="1941" width="0.2" height="15.0" fill="rgb(216,52,28)" rx="2" ry="2" />
<text  x="906.12" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="474.9" y="1925" width="0.2" height="15.0" fill="rgb(220,154,20)" rx="2" ry="2" />
<text  x="477.90" y="1935.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (3 samples, 0.05%)</title><rect x="1177.2" y="2053" width="0.6" height="15.0" fill="rgb(238,227,11)" rx="2" ry="2" />
<text  x="1180.24" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="934.0" y="1973" width="0.6" height="15.0" fill="rgb(229,175,29)" rx="2" ry="2" />
<text  x="937.02" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="153.1" y="1685" width="0.2" height="15.0" fill="rgb(241,124,9)" rx="2" ry="2" />
<text  x="156.14" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="138.6" y="1781" width="0.2" height="15.0" fill="rgb(209,152,11)" rx="2" ry="2" />
<text  x="141.59" y="1791.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1188.4" y="1989" width="0.8" height="15.0" fill="rgb(245,183,53)" rx="2" ry="2" />
<text  x="1191.41" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="640.2" y="1989" width="0.2" height="15.0" fill="rgb(222,109,49)" rx="2" ry="2" />
<text  x="643.17" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="971.5" y="1765" width="0.2" height="15.0" fill="rgb(206,46,28)" rx="2" ry="2" />
<text  x="974.50" y="1775.5" ></text>
</g>
<g >
<title>__libc_sendmsg (563 samples, 9.51%)</title><rect x="233.1" y="2037" width="112.2" height="15.0" fill="rgb(243,214,45)" rx="2" ry="2" />
<text  x="236.08" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="956.6" y="2021" width="1.5" height="15.0" fill="rgb(235,45,15)" rx="2" ry="2" />
<text  x="959.55" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="509.2" y="1941" width="0.2" height="15.0" fill="rgb(228,63,36)" rx="2" ry="2" />
<text  x="512.19" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1173.9" y="1925" width="0.2" height="15.0" fill="rgb(238,43,29)" rx="2" ry="2" />
<text  x="1176.85" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="530.9" y="1973" width="0.2" height="15.0" fill="rgb(243,216,14)" rx="2" ry="2" />
<text  x="533.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="184.0" y="1749" width="0.2" height="15.0" fill="rgb(245,89,34)" rx="2" ry="2" />
<text  x="187.04" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="548.3" y="1797" width="0.2" height="15.0" fill="rgb(235,18,42)" rx="2" ry="2" />
<text  x="551.27" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (15 samples, 0.25%)</title><rect x="290.3" y="1669" width="3.0" height="15.0" fill="rgb(228,223,18)" rx="2" ry="2" />
<text  x="293.30" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="248.8" y="1605" width="0.2" height="15.0" fill="rgb(239,108,18)" rx="2" ry="2" />
<text  x="251.83" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="98.9" y="1957" width="21.7" height="15.0" fill="rgb(210,157,33)" rx="2" ry="2" />
<text  x="101.91" y="1967.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1175.2" y="1957" width="0.4" height="15.0" fill="rgb(222,188,25)" rx="2" ry="2" />
<text  x="1178.25" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1143.0" y="1941" width="0.2" height="15.0" fill="rgb(229,59,10)" rx="2" ry="2" />
<text  x="1145.95" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="1162.7" y="2053" width="0.6" height="15.0" fill="rgb(216,151,38)" rx="2" ry="2" />
<text  x="1165.69" y="2063.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="694.0" y="1589" width="0.4" height="15.0" fill="rgb(208,76,28)" rx="2" ry="2" />
<text  x="697.00" y="1599.5" ></text>
</g>
<g >
<title>apparmor_sk_clone_security (1 samples, 0.02%)</title><rect x="683.6" y="1605" width="0.2" height="15.0" fill="rgb(252,161,38)" rx="2" ry="2" />
<text  x="686.63" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (10 samples, 0.17%)</title><rect x="296.1" y="1685" width="2.0" height="15.0" fill="rgb(249,179,23)" rx="2" ry="2" />
<text  x="299.08" y="1695.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="669.1" y="1877" width="0.2" height="15.0" fill="rgb(224,27,45)" rx="2" ry="2" />
<text  x="672.08" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="320.2" y="1589" width="0.2" height="15.0" fill="rgb(234,2,1)" rx="2" ry="2" />
<text  x="323.20" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="183.8" y="1957" width="0.4" height="15.0" fill="rgb(205,84,34)" rx="2" ry="2" />
<text  x="186.84" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="1027.3" y="2021" width="1.0" height="15.0" fill="rgb(214,135,43)" rx="2" ry="2" />
<text  x="1030.32" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="694.0" y="1781" width="0.4" height="15.0" fill="rgb(211,163,16)" rx="2" ry="2" />
<text  x="697.00" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1182.0" y="1973" width="0.2" height="15.0" fill="rgb(233,182,54)" rx="2" ry="2" />
<text  x="1185.03" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="333.0" y="1861" width="0.2" height="15.0" fill="rgb(241,217,23)" rx="2" ry="2" />
<text  x="335.96" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="142.0" y="1877" width="0.2" height="15.0" fill="rgb(240,131,18)" rx="2" ry="2" />
<text  x="144.97" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="957.7" y="1845" width="0.2" height="15.0" fill="rgb(206,78,22)" rx="2" ry="2" />
<text  x="960.75" y="1855.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="245.2" y="1909" width="0.8" height="15.0" fill="rgb(227,80,0)" rx="2" ry="2" />
<text  x="248.24" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (17 samples, 0.29%)</title><rect x="10.4" y="1877" width="3.4" height="15.0" fill="rgb(238,193,8)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (2 samples, 0.03%)</title><rect x="387.6" y="1941" width="0.4" height="15.0" fill="rgb(224,12,25)" rx="2" ry="2" />
<text  x="390.58" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="248.8" y="1813" width="0.2" height="15.0" fill="rgb(222,102,18)" rx="2" ry="2" />
<text  x="251.83" y="1823.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="886.2" y="1925" width="0.6" height="15.0" fill="rgb(228,163,42)" rx="2" ry="2" />
<text  x="889.18" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (64 samples, 1.08%)</title><rect x="1149.5" y="2053" width="12.8" height="15.0" fill="rgb(234,44,5)" rx="2" ry="2" />
<text  x="1152.53" y="2063.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.02%)</title><rect x="725.3" y="1797" width="0.2" height="15.0" fill="rgb(247,207,38)" rx="2" ry="2" />
<text  x="728.30" y="1807.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (4 samples, 0.07%)</title><rect x="326.4" y="1749" width="0.8" height="15.0" fill="rgb(207,20,10)" rx="2" ry="2" />
<text  x="329.38" y="1759.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="408.3" y="1493" width="0.2" height="15.0" fill="rgb(235,42,13)" rx="2" ry="2" />
<text  x="411.32" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="694.0" y="1829" width="0.4" height="15.0" fill="rgb(209,136,15)" rx="2" ry="2" />
<text  x="697.00" y="1839.5" ></text>
</g>
<g >
<title>sock_rfree (18 samples, 0.30%)</title><rect x="1089.3" y="1893" width="3.6" height="15.0" fill="rgb(222,205,1)" rx="2" ry="2" />
<text  x="1092.32" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="657.9" y="1733" width="0.2" height="15.0" fill="rgb(231,114,41)" rx="2" ry="2" />
<text  x="660.91" y="1743.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="682.8" y="1925" width="0.8" height="15.0" fill="rgb(219,131,15)" rx="2" ry="2" />
<text  x="685.83" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1013.8" y="1797" width="0.2" height="15.0" fill="rgb(209,86,54)" rx="2" ry="2" />
<text  x="1016.77" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="610.5" y="1749" width="1.0" height="15.0" fill="rgb(209,86,51)" rx="2" ry="2" />
<text  x="613.47" y="1759.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="402.5" y="1813" width="0.2" height="15.0" fill="rgb(244,144,24)" rx="2" ry="2" />
<text  x="405.54" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="877.6" y="1877" width="0.2" height="15.0" fill="rgb(237,165,44)" rx="2" ry="2" />
<text  x="880.61" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="535.5" y="1989" width="0.2" height="15.0" fill="rgb(220,78,5)" rx="2" ry="2" />
<text  x="538.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="357" width="14.0" height="15.0" fill="rgb(225,105,24)" rx="2" ry="2" />
<text  x="103.11" y="367.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="172.9" y="1957" width="0.4" height="15.0" fill="rgb(217,29,6)" rx="2" ry="2" />
<text  x="175.88" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="171.9" y="1957" width="0.4" height="15.0" fill="rgb(251,33,27)" rx="2" ry="2" />
<text  x="174.88" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.03%)</title><rect x="135.0" y="1941" width="0.4" height="15.0" fill="rgb(206,10,43)" rx="2" ry="2" />
<text  x="138.00" y="1951.5" ></text>
</g>
<g >
<title>_IO_old_init (2 samples, 0.03%)</title><rect x="187.4" y="2037" width="0.4" height="15.0" fill="rgb(248,206,19)" rx="2" ry="2" />
<text  x="190.43" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="1148.9" y="1909" width="0.2" height="15.0" fill="rgb(224,229,39)" rx="2" ry="2" />
<text  x="1151.93" y="1919.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="409.1" y="1413" width="0.2" height="15.0" fill="rgb(254,55,21)" rx="2" ry="2" />
<text  x="412.11" y="1423.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="162.7" y="1973" width="0.2" height="15.0" fill="rgb(248,142,26)" rx="2" ry="2" />
<text  x="165.71" y="1983.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (1 samples, 0.02%)</title><rect x="521.8" y="1973" width="0.2" height="15.0" fill="rgb(214,151,26)" rx="2" ry="2" />
<text  x="524.75" y="1983.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (198 samples, 3.35%)</title><rect x="282.5" y="1829" width="39.5" height="15.0" fill="rgb(205,112,35)" rx="2" ry="2" />
<text  x="285.52" y="1839.5" >__t..</text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="616.4" y="2021" width="2.4" height="15.0" fill="rgb(217,151,34)" rx="2" ry="2" />
<text  x="619.45" y="2031.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="561.2" y="1909" width="1.0" height="15.0" fill="rgb(219,2,48)" rx="2" ry="2" />
<text  x="564.22" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="572.2" y="1989" width="0.8" height="15.0" fill="rgb(243,141,11)" rx="2" ry="2" />
<text  x="575.19" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="843.5" y="1909" width="0.2" height="15.0" fill="rgb(253,160,6)" rx="2" ry="2" />
<text  x="846.52" y="1919.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (56 samples, 0.95%)</title><rect x="728.3" y="1749" width="11.2" height="15.0" fill="rgb(231,2,41)" rx="2" ry="2" />
<text  x="731.29" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (3 samples, 0.05%)</title><rect x="857.7" y="1989" width="0.6" height="15.0" fill="rgb(254,134,44)" rx="2" ry="2" />
<text  x="860.67" y="1999.5" ></text>
</g>
<g >
<title>skb_release_data (28 samples, 0.47%)</title><rect x="1079.6" y="1893" width="5.5" height="15.0" fill="rgb(247,162,30)" rx="2" ry="2" />
<text  x="1082.56" y="1903.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="900.3" y="2005" width="0.2" height="15.0" fill="rgb(219,58,33)" rx="2" ry="2" />
<text  x="903.33" y="2015.5" ></text>
</g>
<g >
<title>sys_futex (18 samples, 0.30%)</title><rect x="10.4" y="2005" width="3.6" height="15.0" fill="rgb(222,175,18)" rx="2" ry="2" />
<text  x="13.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="256.4" y="1893" width="0.2" height="15.0" fill="rgb(253,38,48)" rx="2" ry="2" />
<text  x="259.41" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.2" y="1957" width="0.2" height="15.0" fill="rgb(225,171,29)" rx="2" ry="2" />
<text  x="576.19" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1013.8" y="1861" width="0.2" height="15.0" fill="rgb(207,110,29)" rx="2" ry="2" />
<text  x="1016.77" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="464.5" y="1861" width="0.2" height="15.0" fill="rgb(221,68,15)" rx="2" ry="2" />
<text  x="467.54" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="527.9" y="2021" width="1.6" height="15.0" fill="rgb(239,223,36)" rx="2" ry="2" />
<text  x="530.93" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="709.9" y="1909" width="0.2" height="15.0" fill="rgb(218,74,31)" rx="2" ry="2" />
<text  x="712.95" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="286.5" y="1749" width="0.2" height="15.0" fill="rgb(237,134,16)" rx="2" ry="2" />
<text  x="289.51" y="1759.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.2" y="1957" width="0.2" height="15.0" fill="rgb(237,74,0)" rx="2" ry="2" />
<text  x="124.24" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (6 samples, 0.10%)</title><rect x="292.1" y="1637" width="1.2" height="15.0" fill="rgb(220,50,42)" rx="2" ry="2" />
<text  x="295.09" y="1647.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (31 samples, 0.52%)</title><rect x="416.9" y="2021" width="6.2" height="15.0" fill="rgb(251,75,32)" rx="2" ry="2" />
<text  x="419.89" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="316.2" y="1797" width="0.4" height="15.0" fill="rgb(231,44,2)" rx="2" ry="2" />
<text  x="319.21" y="1807.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="991.2" y="1877" width="0.2" height="15.0" fill="rgb(250,137,44)" rx="2" ry="2" />
<text  x="994.24" y="1887.5" ></text>
</g>
<g >
<title>__GI___setsockopt (103 samples, 1.74%)</title><rect x="676.5" y="1989" width="20.5" height="15.0" fill="rgb(248,117,46)" rx="2" ry="2" />
<text  x="679.45" y="1999.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (2 samples, 0.03%)</title><rect x="966.3" y="2021" width="0.4" height="15.0" fill="rgb(214,32,42)" rx="2" ry="2" />
<text  x="969.32" y="2031.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (2 samples, 0.03%)</title><rect x="883.2" y="1925" width="0.4" height="15.0" fill="rgb(236,114,23)" rx="2" ry="2" />
<text  x="886.19" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="132.6" y="1957" width="0.2" height="15.0" fill="rgb(231,22,30)" rx="2" ry="2" />
<text  x="135.61" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="1108.9" y="1621" width="0.2" height="15.0" fill="rgb(205,210,10)" rx="2" ry="2" />
<text  x="1111.86" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (1 samples, 0.02%)</title><rect x="975.1" y="2005" width="0.2" height="15.0" fill="rgb(234,180,8)" rx="2" ry="2" />
<text  x="978.09" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="111.1" y="69" width="0.8" height="15.0" fill="rgb(236,24,26)" rx="2" ry="2" />
<text  x="114.07" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="114.1" y="149" width="0.2" height="15.0" fill="rgb(229,2,2)" rx="2" ry="2" />
<text  x="117.06" y="159.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1061.6" y="1973" width="0.2" height="15.0" fill="rgb(252,176,23)" rx="2" ry="2" />
<text  x="1064.61" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="835.3" y="1845" width="0.2" height="15.0" fill="rgb(214,11,13)" rx="2" ry="2" />
<text  x="838.34" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="541.7" y="1925" width="0.4" height="15.0" fill="rgb(232,121,14)" rx="2" ry="2" />
<text  x="544.69" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1013.8" y="1877" width="0.2" height="15.0" fill="rgb(239,194,39)" rx="2" ry="2" />
<text  x="1016.77" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="856.1" y="1957" width="0.2" height="15.0" fill="rgb(211,69,4)" rx="2" ry="2" />
<text  x="859.08" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.4" y="1861" width="0.2" height="15.0" fill="rgb(240,91,24)" rx="2" ry="2" />
<text  x="64.43" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="783.5" y="1525" width="0.4" height="15.0" fill="rgb(229,88,28)" rx="2" ry="2" />
<text  x="786.51" y="1535.5" ></text>
</g>
<g >
<title>sock_alloc_inode (27 samples, 0.46%)</title><rect x="392.4" y="1909" width="5.4" height="15.0" fill="rgb(214,229,51)" rx="2" ry="2" />
<text  x="395.37" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.4" y="1941" width="0.2" height="15.0" fill="rgb(248,126,18)" rx="2" ry="2" />
<text  x="576.39" y="1951.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (3 samples, 0.05%)</title><rect x="163.3" y="1973" width="0.6" height="15.0" fill="rgb(230,92,26)" rx="2" ry="2" />
<text  x="166.31" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="631.0" y="1941" width="0.2" height="15.0" fill="rgb(207,199,32)" rx="2" ry="2" />
<text  x="634.00" y="1951.5" ></text>
</g>
<g >
<title>ep_poll (97 samples, 1.64%)</title><rect x="490.1" y="1973" width="19.3" height="15.0" fill="rgb(235,107,9)" rx="2" ry="2" />
<text  x="493.05" y="1983.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="396.4" y="1525" width="0.2" height="15.0" fill="rgb(236,12,46)" rx="2" ry="2" />
<text  x="399.36" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="683.6" y="1733" width="0.4" height="15.0" fill="rgb(218,40,23)" rx="2" ry="2" />
<text  x="686.63" y="1743.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="179.5" y="2021" width="0.2" height="15.0" fill="rgb(239,19,38)" rx="2" ry="2" />
<text  x="182.45" y="2031.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="756.8" y="1685" width="0.2" height="15.0" fill="rgb(217,179,35)" rx="2" ry="2" />
<text  x="759.80" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (8 samples, 0.14%)</title><rect x="972.9" y="2037" width="1.6" height="15.0" fill="rgb(252,103,14)" rx="2" ry="2" />
<text  x="975.90" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="903.1" y="1957" width="0.2" height="15.0" fill="rgb(235,62,20)" rx="2" ry="2" />
<text  x="906.12" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="284.9" y="1589" width="0.2" height="15.0" fill="rgb(251,21,25)" rx="2" ry="2" />
<text  x="287.91" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="97.9" y="2005" width="0.2" height="15.0" fill="rgb(212,24,42)" rx="2" ry="2" />
<text  x="100.92" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1145.9" y="1957" width="0.2" height="15.0" fill="rgb(206,111,37)" rx="2" ry="2" />
<text  x="1148.94" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="306.2" y="1653" width="0.4" height="15.0" fill="rgb(252,43,34)" rx="2" ry="2" />
<text  x="309.25" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="903.7" y="1989" width="0.6" height="15.0" fill="rgb(218,100,23)" rx="2" ry="2" />
<text  x="906.72" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="868.8" y="1861" width="0.2" height="15.0" fill="rgb(250,174,27)" rx="2" ry="2" />
<text  x="871.83" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="190.2" y="1957" width="0.2" height="15.0" fill="rgb(245,171,25)" rx="2" ry="2" />
<text  x="193.22" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="74.4" y="1925" width="0.4" height="15.0" fill="rgb(248,142,22)" rx="2" ry="2" />
<text  x="77.39" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="548.3" y="1925" width="0.2" height="15.0" fill="rgb(238,40,41)" rx="2" ry="2" />
<text  x="551.27" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="132.4" y="1973" width="0.2" height="15.0" fill="rgb(214,37,1)" rx="2" ry="2" />
<text  x="135.41" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="920.7" y="1973" width="0.2" height="15.0" fill="rgb(223,23,21)" rx="2" ry="2" />
<text  x="923.67" y="1983.5" ></text>
</g>
<g >
<title>__d_instantiate (5 samples, 0.08%)</title><rect x="409.3" y="1925" width="1.0" height="15.0" fill="rgb(248,44,34)" rx="2" ry="2" />
<text  x="412.31" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="284.9" y="1765" width="0.2" height="15.0" fill="rgb(251,21,25)" rx="2" ry="2" />
<text  x="287.91" y="1775.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="216.1" y="1877" width="0.4" height="15.0" fill="rgb(222,58,31)" rx="2" ry="2" />
<text  x="219.14" y="1887.5" ></text>
</g>
<g >
<title>alloc_inode (36 samples, 0.61%)</title><rect x="390.6" y="1925" width="7.2" height="15.0" fill="rgb(254,56,11)" rx="2" ry="2" />
<text  x="393.57" y="1935.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="783.5" y="1573" width="0.4" height="15.0" fill="rgb(231,221,4)" rx="2" ry="2" />
<text  x="786.51" y="1583.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="953.4" y="1973" width="0.2" height="15.0" fill="rgb(232,97,23)" rx="2" ry="2" />
<text  x="956.36" y="1983.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1108.9" y="1637" width="0.2" height="15.0" fill="rgb(226,131,51)" rx="2" ry="2" />
<text  x="1111.86" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(216,202,21)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="556.8" y="1669" width="0.2" height="15.0" fill="rgb(217,130,22)" rx="2" ry="2" />
<text  x="559.84" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1027.1" y="2021" width="0.2" height="15.0" fill="rgb(234,138,3)" rx="2" ry="2" />
<text  x="1030.12" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (20 samples, 0.34%)</title><rect x="144.2" y="1925" width="4.0" height="15.0" fill="rgb(244,226,45)" rx="2" ry="2" />
<text  x="147.17" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="886.0" y="1733" width="0.2" height="15.0" fill="rgb(206,210,25)" rx="2" ry="2" />
<text  x="888.98" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (6 samples, 0.10%)</title><rect x="702.0" y="1973" width="1.2" height="15.0" fill="rgb(236,56,16)" rx="2" ry="2" />
<text  x="704.97" y="1983.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="92.3" y="1749" width="0.2" height="15.0" fill="rgb(217,0,48)" rx="2" ry="2" />
<text  x="95.33" y="1759.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="694.0" y="1525" width="0.4" height="15.0" fill="rgb(250,94,39)" rx="2" ry="2" />
<text  x="697.00" y="1535.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="548.5" y="1973" width="0.2" height="15.0" fill="rgb(233,55,51)" rx="2" ry="2" />
<text  x="551.47" y="1983.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="33.7" y="1989" width="0.2" height="15.0" fill="rgb(245,150,15)" rx="2" ry="2" />
<text  x="36.72" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (125 samples, 2.11%)</title><rect x="675.7" y="2037" width="24.9" height="15.0" fill="rgb(228,96,47)" rx="2" ry="2" />
<text  x="678.66" y="2047.5" >f..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="396.4" y="1813" width="0.2" height="15.0" fill="rgb(226,138,21)" rx="2" ry="2" />
<text  x="399.36" y="1823.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1115.4" y="1429" width="0.2" height="15.0" fill="rgb(232,8,14)" rx="2" ry="2" />
<text  x="1118.44" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="99.3" y="1621" width="17.0" height="15.0" fill="rgb(232,167,44)" rx="2" ry="2" />
<text  x="102.31" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (41 samples, 0.69%)</title><rect x="925.3" y="1973" width="8.1" height="15.0" fill="rgb(228,149,31)" rx="2" ry="2" />
<text  x="928.25" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="279.1" y="1845" width="0.2" height="15.0" fill="rgb(240,93,15)" rx="2" ry="2" />
<text  x="282.13" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1141.8" y="1957" width="0.2" height="15.0" fill="rgb(210,181,27)" rx="2" ry="2" />
<text  x="1144.76" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (33 samples, 0.56%)</title><rect x="986.7" y="1989" width="6.5" height="15.0" fill="rgb(243,49,20)" rx="2" ry="2" />
<text  x="989.65" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="657.9" y="1877" width="0.2" height="15.0" fill="rgb(241,150,28)" rx="2" ry="2" />
<text  x="660.91" y="1887.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="576.4" y="1989" width="0.2" height="15.0" fill="rgb(253,117,8)" rx="2" ry="2" />
<text  x="579.38" y="1999.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="59.2" y="1893" width="0.2" height="15.0" fill="rgb(248,187,21)" rx="2" ry="2" />
<text  x="62.24" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="974.3" y="1877" width="0.2" height="15.0" fill="rgb(208,69,31)" rx="2" ry="2" />
<text  x="977.29" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="566.6" y="1989" width="0.2" height="15.0" fill="rgb(252,89,5)" rx="2" ry="2" />
<text  x="569.61" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="704.0" y="1957" width="0.2" height="15.0" fill="rgb(238,136,17)" rx="2" ry="2" />
<text  x="706.97" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="623.8" y="2005" width="0.6" height="15.0" fill="rgb(237,95,13)" rx="2" ry="2" />
<text  x="626.82" y="2015.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.02%)</title><rect x="362.7" y="1957" width="0.2" height="15.0" fill="rgb(236,59,54)" rx="2" ry="2" />
<text  x="365.66" y="1967.5" ></text>
</g>
<g >
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="481.7" y="1941" width="0.6" height="15.0" fill="rgb(254,189,21)" rx="2" ry="2" />
<text  x="484.68" y="1951.5" ></text>
</g>
<g >
<title>add_wait_queue (3 samples, 0.05%)</title><rect x="458.2" y="1909" width="0.6" height="15.0" fill="rgb(208,44,25)" rx="2" ry="2" />
<text  x="461.16" y="1919.5" ></text>
</g>
<g >
<title>syscall (59 samples, 1.00%)</title><rect x="1150.5" y="1973" width="11.8" height="15.0" fill="rgb(252,185,24)" rx="2" ry="2" />
<text  x="1153.53" y="1983.5" ></text>
</g>
<g >
<title>sys_close (22 samples, 0.37%)</title><rect x="830.8" y="1861" width="4.3" height="15.0" fill="rgb(219,49,37)" rx="2" ry="2" />
<text  x="833.76" y="1871.5" ></text>
</g>
<g >
<title>__slab_free (5 samples, 0.08%)</title><rect x="737.1" y="1653" width="1.0" height="15.0" fill="rgb(242,80,8)" rx="2" ry="2" />
<text  x="740.06" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="183.8" y="1989" width="0.4" height="15.0" fill="rgb(220,148,26)" rx="2" ry="2" />
<text  x="186.84" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1172.5" y="1989" width="0.2" height="15.0" fill="rgb(210,228,42)" rx="2" ry="2" />
<text  x="1175.46" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="570.4" y="2005" width="0.2" height="15.0" fill="rgb(243,140,53)" rx="2" ry="2" />
<text  x="573.40" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="114.1" y="325" width="0.2" height="15.0" fill="rgb(213,24,8)" rx="2" ry="2" />
<text  x="117.06" y="335.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (39 samples, 0.66%)</title><rect x="937.4" y="2005" width="7.8" height="15.0" fill="rgb(205,10,46)" rx="2" ry="2" />
<text  x="940.41" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (41 samples, 0.69%)</title><rect x="1112.8" y="1669" width="8.2" height="15.0" fill="rgb(215,98,25)" rx="2" ry="2" />
<text  x="1115.85" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (32 samples, 0.54%)</title><rect x="638.8" y="2021" width="6.4" height="15.0" fill="rgb(207,26,19)" rx="2" ry="2" />
<text  x="641.78" y="2031.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="832.2" y="1509" width="0.2" height="15.0" fill="rgb(215,222,38)" rx="2" ry="2" />
<text  x="835.15" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="596.3" y="1765" width="0.2" height="15.0" fill="rgb(247,47,18)" rx="2" ry="2" />
<text  x="599.31" y="1775.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="227.1" y="1941" width="0.2" height="15.0" fill="rgb(236,64,32)" rx="2" ry="2" />
<text  x="230.10" y="1951.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (16 samples, 0.27%)</title><rect x="263.2" y="1877" width="3.2" height="15.0" fill="rgb(237,118,49)" rx="2" ry="2" />
<text  x="266.18" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="840.3" y="1813" width="0.2" height="15.0" fill="rgb(237,182,42)" rx="2" ry="2" />
<text  x="843.33" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="923.9" y="1941" width="0.8" height="15.0" fill="rgb(206,135,53)" rx="2" ry="2" />
<text  x="926.86" y="1951.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (3 samples, 0.05%)</title><rect x="1149.9" y="1973" width="0.6" height="15.0" fill="rgb(250,217,9)" rx="2" ry="2" />
<text  x="1152.93" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (4 samples, 0.07%)</title><rect x="537.9" y="1941" width="0.8" height="15.0" fill="rgb(246,111,21)" rx="2" ry="2" />
<text  x="540.90" y="1951.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="114.1" y="117" width="0.2" height="15.0" fill="rgb(236,122,10)" rx="2" ry="2" />
<text  x="117.06" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="573.0" y="2005" width="0.6" height="15.0" fill="rgb(238,149,5)" rx="2" ry="2" />
<text  x="575.99" y="2015.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="76.4" y="1893" width="0.2" height="15.0" fill="rgb(217,200,35)" rx="2" ry="2" />
<text  x="79.39" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="753.6" y="1733" width="0.6" height="15.0" fill="rgb(246,9,49)" rx="2" ry="2" />
<text  x="756.61" y="1743.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="236.7" y="1893" width="0.8" height="15.0" fill="rgb(252,229,22)" rx="2" ry="2" />
<text  x="239.67" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="135.8" y="1909" width="0.2" height="15.0" fill="rgb(230,185,42)" rx="2" ry="2" />
<text  x="138.79" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.14%)</title><rect x="313.8" y="1669" width="1.6" height="15.0" fill="rgb(254,214,2)" rx="2" ry="2" />
<text  x="316.82" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="840.1" y="1909" width="0.2" height="15.0" fill="rgb(237,183,27)" rx="2" ry="2" />
<text  x="843.13" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="683.6" y="1845" width="0.4" height="15.0" fill="rgb(243,65,32)" rx="2" ry="2" />
<text  x="686.63" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="70.4" y="1925" width="0.2" height="15.0" fill="rgb(232,99,8)" rx="2" ry="2" />
<text  x="73.41" y="1935.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (4 samples, 0.07%)</title><rect x="223.3" y="1829" width="0.8" height="15.0" fill="rgb(224,15,47)" rx="2" ry="2" />
<text  x="226.31" y="1839.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="125.0" y="2005" width="0.2" height="15.0" fill="rgb(229,130,21)" rx="2" ry="2" />
<text  x="128.03" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="170.5" y="1957" width="0.8" height="15.0" fill="rgb(237,30,38)" rx="2" ry="2" />
<text  x="173.48" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="227.3" y="1717" width="0.2" height="15.0" fill="rgb(223,226,5)" rx="2" ry="2" />
<text  x="230.30" y="1727.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="868.8" y="1781" width="0.2" height="15.0" fill="rgb(254,1,15)" rx="2" ry="2" />
<text  x="871.83" y="1791.5" ></text>
</g>
<g >
<title>futex_wait (18 samples, 0.30%)</title><rect x="10.4" y="1973" width="3.6" height="15.0" fill="rgb(218,69,27)" rx="2" ry="2" />
<text  x="13.40" y="1983.5" ></text>
</g>
<g >
<title>check_stack_object (4 samples, 0.07%)</title><rect x="595.3" y="1829" width="0.8" height="15.0" fill="rgb(215,30,27)" rx="2" ry="2" />
<text  x="598.32" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="456.6" y="1861" width="0.2" height="15.0" fill="rgb(207,77,44)" rx="2" ry="2" />
<text  x="459.56" y="1871.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="683.8" y="1605" width="0.2" height="15.0" fill="rgb(252,132,12)" rx="2" ry="2" />
<text  x="686.83" y="1615.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="366.7" y="1941" width="0.4" height="15.0" fill="rgb(216,112,35)" rx="2" ry="2" />
<text  x="369.65" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="893.8" y="1973" width="0.4" height="15.0" fill="rgb(211,63,33)" rx="2" ry="2" />
<text  x="896.75" y="1983.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="439.8" y="1989" width="0.2" height="15.0" fill="rgb(215,85,7)" rx="2" ry="2" />
<text  x="442.82" y="1999.5" ></text>
</g>
<g >
<title>sock_poll (70 samples, 1.18%)</title><rect x="494.4" y="1909" width="14.0" height="15.0" fill="rgb(217,215,5)" rx="2" ry="2" />
<text  x="497.44" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="185.4" y="2021" width="0.2" height="15.0" fill="rgb(236,33,27)" rx="2" ry="2" />
<text  x="188.44" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="480.3" y="1957" width="0.2" height="15.0" fill="rgb(242,125,43)" rx="2" ry="2" />
<text  x="483.29" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="763.2" y="1429" width="0.2" height="15.0" fill="rgb(209,102,4)" rx="2" ry="2" />
<text  x="766.17" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1112.4" y="1557" width="0.4" height="15.0" fill="rgb(247,137,14)" rx="2" ry="2" />
<text  x="1115.45" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.02%)</title><rect x="1189.4" y="2053" width="0.2" height="15.0" fill="rgb(232,30,48)" rx="2" ry="2" />
<text  x="1192.40" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="742.6" y="1765" width="0.2" height="15.0" fill="rgb(233,228,1)" rx="2" ry="2" />
<text  x="745.64" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="464.5" y="1669" width="0.2" height="15.0" fill="rgb(245,115,2)" rx="2" ry="2" />
<text  x="467.54" y="1679.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="114.1" y="101" width="0.2" height="15.0" fill="rgb(239,163,33)" rx="2" ry="2" />
<text  x="117.06" y="111.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="812.8" y="1685" width="0.4" height="15.0" fill="rgb(240,117,15)" rx="2" ry="2" />
<text  x="815.81" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="159.5" y="1973" width="0.2" height="15.0" fill="rgb(253,60,52)" rx="2" ry="2" />
<text  x="162.52" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="93.7" y="1797" width="0.8" height="15.0" fill="rgb(246,201,15)" rx="2" ry="2" />
<text  x="96.73" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="183.8" y="1813" width="0.4" height="15.0" fill="rgb(212,124,41)" rx="2" ry="2" />
<text  x="186.84" y="1823.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1115.6" y="1445" width="0.2" height="15.0" fill="rgb(251,77,38)" rx="2" ry="2" />
<text  x="1118.64" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="105.7" y="37" width="0.2" height="15.0" fill="rgb(212,30,47)" rx="2" ry="2" />
<text  x="108.69" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="489.9" y="1925" width="0.2" height="15.0" fill="rgb(238,194,10)" rx="2" ry="2" />
<text  x="492.85" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (14 samples, 0.24%)</title><rect x="1011.0" y="2005" width="2.8" height="15.0" fill="rgb(226,14,13)" rx="2" ry="2" />
<text  x="1013.98" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="48.3" y="1893" width="0.6" height="15.0" fill="rgb(240,141,20)" rx="2" ry="2" />
<text  x="51.28" y="1903.5" ></text>
</g>
<g >
<title>dput (81 samples, 1.37%)</title><rect x="725.5" y="1797" width="16.1" height="15.0" fill="rgb(250,229,15)" rx="2" ry="2" />
<text  x="728.50" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="482.3" y="1925" width="0.2" height="15.0" fill="rgb(250,168,47)" rx="2" ry="2" />
<text  x="485.28" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (2 samples, 0.03%)</title><rect x="35.5" y="1973" width="0.4" height="15.0" fill="rgb(215,1,30)" rx="2" ry="2" />
<text  x="38.52" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (45 samples, 0.76%)</title><rect x="1112.3" y="1845" width="8.9" height="15.0" fill="rgb(246,65,50)" rx="2" ry="2" />
<text  x="1115.25" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="862.7" y="1973" width="0.6" height="15.0" fill="rgb(247,189,42)" rx="2" ry="2" />
<text  x="865.65" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1013.8" y="2005" width="0.2" height="15.0" fill="rgb(252,7,53)" rx="2" ry="2" />
<text  x="1016.77" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="683.8" y="1477" width="0.2" height="15.0" fill="rgb(244,76,14)" rx="2" ry="2" />
<text  x="686.83" y="1487.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="194.0" y="2037" width="0.4" height="15.0" fill="rgb(206,215,4)" rx="2" ry="2" />
<text  x="197.01" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (306 samples, 5.17%)</title><rect x="423.3" y="2021" width="61.0" height="15.0" fill="rgb(220,159,2)" rx="2" ry="2" />
<text  x="426.27" y="2031.5" >entry_..</text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="153.1" y="1717" width="0.2" height="15.0" fill="rgb(239,186,43)" rx="2" ry="2" />
<text  x="156.14" y="1727.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="480.1" y="1957" width="0.2" height="15.0" fill="rgb(224,14,16)" rx="2" ry="2" />
<text  x="483.09" y="1967.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="236.7" y="1941" width="0.8" height="15.0" fill="rgb(216,40,19)" rx="2" ry="2" />
<text  x="239.67" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="227.3" y="1589" width="0.2" height="15.0" fill="rgb(214,168,2)" rx="2" ry="2" />
<text  x="230.30" y="1599.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 0.03%)</title><rect x="694.0" y="1621" width="0.4" height="15.0" fill="rgb(209,129,36)" rx="2" ry="2" />
<text  x="697.00" y="1631.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (2 samples, 0.03%)</title><rect x="731.9" y="1669" width="0.4" height="15.0" fill="rgb(239,211,19)" rx="2" ry="2" />
<text  x="734.88" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (2 samples, 0.03%)</title><rect x="694.0" y="1701" width="0.4" height="15.0" fill="rgb(237,128,0)" rx="2" ry="2" />
<text  x="697.00" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="886.0" y="1813" width="0.2" height="15.0" fill="rgb(219,151,48)" rx="2" ry="2" />
<text  x="888.98" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (13 samples, 0.22%)</title><rect x="989.6" y="1909" width="2.6" height="15.0" fill="rgb(220,17,51)" rx="2" ry="2" />
<text  x="992.65" y="1919.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="77.4" y="1701" width="0.2" height="15.0" fill="rgb(240,198,37)" rx="2" ry="2" />
<text  x="80.38" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="556.8" y="1909" width="0.2" height="15.0" fill="rgb(218,204,8)" rx="2" ry="2" />
<text  x="559.84" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="527.5" y="1973" width="0.2" height="15.0" fill="rgb(206,206,0)" rx="2" ry="2" />
<text  x="530.53" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="932.8" y="1909" width="0.4" height="15.0" fill="rgb(249,104,24)" rx="2" ry="2" />
<text  x="935.83" y="1919.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1013.6" y="1973" width="0.2" height="15.0" fill="rgb(216,164,49)" rx="2" ry="2" />
<text  x="1016.57" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="878.4" y="1765" width="0.2" height="15.0" fill="rgb(217,118,50)" rx="2" ry="2" />
<text  x="881.40" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="108.7" y="37" width="0.2" height="15.0" fill="rgb(252,65,39)" rx="2" ry="2" />
<text  x="111.68" y="47.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="213" width="14.0" height="15.0" fill="rgb(226,191,22)" rx="2" ry="2" />
<text  x="103.11" y="223.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (106 samples, 1.79%)</title><rect x="579.8" y="2021" width="21.1" height="15.0" fill="rgb(212,174,53)" rx="2" ry="2" />
<text  x="582.77" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="847.5" y="1845" width="0.2" height="15.0" fill="rgb(246,34,4)" rx="2" ry="2" />
<text  x="850.50" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.76%)</title><rect x="98.9" y="1893" width="20.7" height="15.0" fill="rgb(238,52,22)" rx="2" ry="2" />
<text  x="101.91" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="694.0" y="1749" width="0.4" height="15.0" fill="rgb(216,205,34)" rx="2" ry="2" />
<text  x="697.00" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="861.7" y="1989" width="0.2" height="15.0" fill="rgb(228,15,14)" rx="2" ry="2" />
<text  x="864.66" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="248.4" y="1925" width="0.2" height="15.0" fill="rgb(231,225,27)" rx="2" ry="2" />
<text  x="251.43" y="1935.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (10 samples, 0.17%)</title><rect x="751.6" y="1733" width="2.0" height="15.0" fill="rgb(216,52,42)" rx="2" ry="2" />
<text  x="754.61" y="1743.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="346.5" y="2037" width="0.2" height="15.0" fill="rgb(234,228,8)" rx="2" ry="2" />
<text  x="349.52" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="221.7" y="1845" width="0.6" height="15.0" fill="rgb(237,176,16)" rx="2" ry="2" />
<text  x="224.72" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="898.9" y="1813" width="0.2" height="15.0" fill="rgb(232,190,38)" rx="2" ry="2" />
<text  x="901.94" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="61.0" y="1797" width="0.2" height="15.0" fill="rgb(235,68,24)" rx="2" ry="2" />
<text  x="64.04" y="1807.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="256.0" y="1893" width="0.2" height="15.0" fill="rgb(223,102,36)" rx="2" ry="2" />
<text  x="259.01" y="1903.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="1121.8" y="1909" width="0.6" height="15.0" fill="rgb(232,122,26)" rx="2" ry="2" />
<text  x="1124.82" y="1919.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenfulSlotValue (1 samples, 0.02%)</title><rect x="161.7" y="1973" width="0.2" height="15.0" fill="rgb(248,127,6)" rx="2" ry="2" />
<text  x="164.71" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="929.4" y="1861" width="0.2" height="15.0" fill="rgb(217,85,12)" rx="2" ry="2" />
<text  x="932.44" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="868.8" y="1845" width="0.2" height="15.0" fill="rgb(250,154,42)" rx="2" ry="2" />
<text  x="871.83" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="594.3" y="1765" width="0.2" height="15.0" fill="rgb(222,19,0)" rx="2" ry="2" />
<text  x="597.32" y="1775.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="236.5" y="1973" width="0.2" height="15.0" fill="rgb(253,154,45)" rx="2" ry="2" />
<text  x="239.47" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="227.3" y="1909" width="0.2" height="15.0" fill="rgb(227,8,27)" rx="2" ry="2" />
<text  x="230.30" y="1919.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="406.9" y="1877" width="0.4" height="15.0" fill="rgb(237,206,28)" rx="2" ry="2" />
<text  x="409.92" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="893.2" y="1877" width="0.2" height="15.0" fill="rgb(244,128,30)" rx="2" ry="2" />
<text  x="896.16" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (3 samples, 0.05%)</title><rect x="976.1" y="2005" width="0.6" height="15.0" fill="rgb(210,79,26)" rx="2" ry="2" />
<text  x="979.09" y="2015.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="227.3" y="1621" width="0.2" height="15.0" fill="rgb(233,55,30)" rx="2" ry="2" />
<text  x="230.30" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (5 samples, 0.08%)</title><rect x="904.7" y="1989" width="1.0" height="15.0" fill="rgb(243,172,27)" rx="2" ry="2" />
<text  x="907.72" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1124.8" y="1861" width="0.2" height="15.0" fill="rgb(242,147,20)" rx="2" ry="2" />
<text  x="1127.81" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="381.4" y="1637" width="0.2" height="15.0" fill="rgb(215,97,1)" rx="2" ry="2" />
<text  x="384.40" y="1647.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="581.0" y="1941" width="1.4" height="15.0" fill="rgb(247,131,4)" rx="2" ry="2" />
<text  x="583.96" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (28 samples, 0.47%)</title><rect x="621.6" y="2037" width="5.6" height="15.0" fill="rgb(236,60,32)" rx="2" ry="2" />
<text  x="624.63" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (2 samples, 0.03%)</title><rect x="906.9" y="2037" width="0.4" height="15.0" fill="rgb(236,148,39)" rx="2" ry="2" />
<text  x="909.91" y="2047.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="556.8" y="1701" width="0.2" height="15.0" fill="rgb(244,70,44)" rx="2" ry="2" />
<text  x="559.84" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="630.8" y="1925" width="0.2" height="15.0" fill="rgb(224,68,53)" rx="2" ry="2" />
<text  x="633.80" y="1935.5" ></text>
</g>
<g >
<title>epoll_ctl (5 samples, 0.08%)</title><rect x="1137.2" y="2053" width="1.0" height="15.0" fill="rgb(229,189,8)" rx="2" ry="2" />
<text  x="1140.17" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="119.4" y="1861" width="0.2" height="15.0" fill="rgb(230,68,16)" rx="2" ry="2" />
<text  x="122.45" y="1871.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="404.7" y="1877" width="0.2" height="15.0" fill="rgb(211,94,44)" rx="2" ry="2" />
<text  x="407.73" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="683.6" y="1925" width="0.4" height="15.0" fill="rgb(234,165,15)" rx="2" ry="2" />
<text  x="686.63" y="1935.5" ></text>
</g>
<g >
<title>bictcp_state (1 samples, 0.02%)</title><rect x="159.5" y="1733" width="0.2" height="15.0" fill="rgb(218,205,5)" rx="2" ry="2" />
<text  x="162.52" y="1743.5" ></text>
</g>
<g >
<title>netdev_pick_tx (11 samples, 0.19%)</title><rect x="784.9" y="1557" width="2.2" height="15.0" fill="rgb(248,20,45)" rx="2" ry="2" />
<text  x="787.90" y="1567.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="967.5" y="2037" width="0.8" height="15.0" fill="rgb(245,67,23)" rx="2" ry="2" />
<text  x="970.52" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="169.1" y="1973" width="0.2" height="15.0" fill="rgb(246,198,20)" rx="2" ry="2" />
<text  x="172.09" y="1983.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.08%)</title><rect x="597.3" y="1813" width="1.0" height="15.0" fill="rgb(243,66,4)" rx="2" ry="2" />
<text  x="600.31" y="1823.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (220 samples, 3.72%)</title><rect x="440.0" y="1989" width="43.9" height="15.0" fill="rgb(251,58,7)" rx="2" ry="2" />
<text  x="443.02" y="1999.5" >sys_..</text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="591.7" y="1861" width="0.2" height="15.0" fill="rgb(220,137,23)" rx="2" ry="2" />
<text  x="594.73" y="1871.5" ></text>
</g>
<g >
<title>filp_close (12 samples, 0.20%)</title><rect x="832.4" y="1829" width="2.3" height="15.0" fill="rgb(238,100,31)" rx="2" ry="2" />
<text  x="835.35" y="1839.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.10%)</title><rect x="597.1" y="1829" width="1.2" height="15.0" fill="rgb(234,29,1)" rx="2" ry="2" />
<text  x="600.11" y="1839.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="763.4" y="1701" width="0.4" height="15.0" fill="rgb(225,126,38)" rx="2" ry="2" />
<text  x="766.37" y="1711.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="878.4" y="1909" width="0.2" height="15.0" fill="rgb(207,79,40)" rx="2" ry="2" />
<text  x="881.40" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="832.2" y="1765" width="0.2" height="15.0" fill="rgb(212,142,54)" rx="2" ry="2" />
<text  x="835.15" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="272.8" y="1749" width="0.2" height="15.0" fill="rgb(214,13,7)" rx="2" ry="2" />
<text  x="275.75" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="396.4" y="1669" width="0.2" height="15.0" fill="rgb(213,109,29)" rx="2" ry="2" />
<text  x="399.36" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="456.6" y="1957" width="0.2" height="15.0" fill="rgb(210,205,41)" rx="2" ry="2" />
<text  x="459.56" y="1967.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (10 samples, 0.17%)</title><rect x="511.8" y="1957" width="2.0" height="15.0" fill="rgb(229,218,38)" rx="2" ry="2" />
<text  x="514.78" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="292.7" y="1461" width="0.6" height="15.0" fill="rgb(231,34,48)" rx="2" ry="2" />
<text  x="295.69" y="1471.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="266.6" y="1877" width="0.2" height="15.0" fill="rgb(205,198,18)" rx="2" ry="2" />
<text  x="269.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="277" width="14.0" height="15.0" fill="rgb(251,72,25)" rx="2" ry="2" />
<text  x="103.11" y="287.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="806.2" y="1605" width="0.2" height="15.0" fill="rgb(223,213,18)" rx="2" ry="2" />
<text  x="809.24" y="1615.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="562.2" y="1973" width="2.6" height="15.0" fill="rgb(245,145,31)" rx="2" ry="2" />
<text  x="565.22" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="112.9" y="53" width="0.2" height="15.0" fill="rgb(207,165,47)" rx="2" ry="2" />
<text  x="115.87" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="114.1" y="309" width="0.2" height="15.0" fill="rgb(208,167,34)" rx="2" ry="2" />
<text  x="117.06" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="53.5" y="1845" width="0.2" height="15.0" fill="rgb(224,59,5)" rx="2" ry="2" />
<text  x="56.46" y="1855.5" ></text>
</g>
<g >
<title>event_del@plt (1 samples, 0.02%)</title><rect x="60.6" y="1909" width="0.2" height="15.0" fill="rgb(247,39,49)" rx="2" ry="2" />
<text  x="63.64" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="99.3" y="1605" width="17.0" height="15.0" fill="rgb(244,77,35)" rx="2" ry="2" />
<text  x="102.31" y="1615.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="515.4" y="1973" width="0.4" height="15.0" fill="rgb(237,78,36)" rx="2" ry="2" />
<text  x="518.37" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1141.8" y="1973" width="0.2" height="15.0" fill="rgb(238,160,25)" rx="2" ry="2" />
<text  x="1144.76" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="93.7" y="1877" width="0.8" height="15.0" fill="rgb(251,217,6)" rx="2" ry="2" />
<text  x="96.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="974.3" y="1781" width="0.2" height="15.0" fill="rgb(206,116,34)" rx="2" ry="2" />
<text  x="977.29" y="1791.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="957.7" y="1717" width="0.2" height="15.0" fill="rgb(226,28,17)" rx="2" ry="2" />
<text  x="960.75" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="138.0" y="1925" width="0.2" height="15.0" fill="rgb(244,100,54)" rx="2" ry="2" />
<text  x="140.99" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="904.9" y="1973" width="0.2" height="15.0" fill="rgb(212,77,10)" rx="2" ry="2" />
<text  x="907.92" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="169.7" y="1957" width="0.2" height="15.0" fill="rgb(250,172,46)" rx="2" ry="2" />
<text  x="172.69" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="248.8" y="1701" width="0.2" height="15.0" fill="rgb(251,151,16)" rx="2" ry="2" />
<text  x="251.83" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (16 samples, 0.27%)</title><rect x="1140.0" y="2037" width="3.2" height="15.0" fill="rgb(253,11,6)" rx="2" ry="2" />
<text  x="1142.96" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="899.5" y="2005" width="0.2" height="15.0" fill="rgb(222,144,30)" rx="2" ry="2" />
<text  x="902.54" y="2015.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="245.2" y="1973" width="0.8" height="15.0" fill="rgb(228,1,12)" rx="2" ry="2" />
<text  x="248.24" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="113.7" y="69" width="0.2" height="15.0" fill="rgb(226,58,4)" rx="2" ry="2" />
<text  x="116.67" y="79.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="519.2" y="1973" width="0.2" height="15.0" fill="rgb(213,31,37)" rx="2" ry="2" />
<text  x="522.16" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="228.1" y="1925" width="0.2" height="15.0" fill="rgb(244,4,18)" rx="2" ry="2" />
<text  x="231.10" y="1935.5" ></text>
</g>
<g >
<title>SYSC_accept4 (268 samples, 4.53%)</title><rect x="360.1" y="1973" width="53.4" height="15.0" fill="rgb(239,150,52)" rx="2" ry="2" />
<text  x="363.07" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>std::__addressof&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="619.4" y="1989" width="0.2" height="15.0" fill="rgb(242,55,26)" rx="2" ry="2" />
<text  x="622.44" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (2 samples, 0.03%)</title><rect x="792.9" y="1509" width="0.4" height="15.0" fill="rgb(229,138,12)" rx="2" ry="2" />
<text  x="795.88" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="908.5" y="1957" width="0.6" height="15.0" fill="rgb(250,195,39)" rx="2" ry="2" />
<text  x="911.51" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.4" y="1925" width="0.2" height="15.0" fill="rgb(252,37,23)" rx="2" ry="2" />
<text  x="138.40" y="1935.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="738.1" y="1685" width="0.2" height="15.0" fill="rgb(240,6,25)" rx="2" ry="2" />
<text  x="741.06" y="1695.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="669.7" y="1653" width="0.2" height="15.0" fill="rgb(233,175,36)" rx="2" ry="2" />
<text  x="672.68" y="1663.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1139.4" y="1797" width="0.2" height="15.0" fill="rgb(232,90,52)" rx="2" ry="2" />
<text  x="1142.36" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="154.9" y="1925" width="0.2" height="15.0" fill="rgb(247,68,49)" rx="2" ry="2" />
<text  x="157.93" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="194.0" y="2021" width="0.2" height="15.0" fill="rgb(206,9,3)" rx="2" ry="2" />
<text  x="197.01" y="2031.5" ></text>
</g>
<g >
<title>__skb_clone (21 samples, 0.35%)</title><rect x="802.2" y="1653" width="4.2" height="15.0" fill="rgb(212,217,33)" rx="2" ry="2" />
<text  x="805.25" y="1663.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="61.0" y="1749" width="0.2" height="15.0" fill="rgb(248,33,48)" rx="2" ry="2" />
<text  x="64.04" y="1759.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (4 samples, 0.07%)</title><rect x="479.3" y="1957" width="0.8" height="15.0" fill="rgb(211,157,20)" rx="2" ry="2" />
<text  x="482.29" y="1967.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (73 samples, 1.23%)</title><rect x="493.8" y="1925" width="14.6" height="15.0" fill="rgb(205,108,8)" rx="2" ry="2" />
<text  x="496.84" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="92.3" y="2037" width="0.2" height="15.0" fill="rgb(222,195,17)" rx="2" ry="2" />
<text  x="95.33" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="658.1" y="1845" width="0.2" height="15.0" fill="rgb(250,111,39)" rx="2" ry="2" />
<text  x="661.11" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1143.0" y="1989" width="0.2" height="15.0" fill="rgb(216,126,37)" rx="2" ry="2" />
<text  x="1145.95" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (1 samples, 0.02%)</title><rect x="229.7" y="2005" width="0.2" height="15.0" fill="rgb(223,5,36)" rx="2" ry="2" />
<text  x="232.69" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (22 samples, 0.37%)</title><rect x="1074.4" y="1893" width="4.4" height="15.0" fill="rgb(245,156,22)" rx="2" ry="2" />
<text  x="1077.37" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="335.6" y="1797" width="0.2" height="15.0" fill="rgb(212,28,18)" rx="2" ry="2" />
<text  x="338.55" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="184.0" y="1717" width="0.2" height="15.0" fill="rgb(223,152,46)" rx="2" ry="2" />
<text  x="187.04" y="1727.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="117.1" y="1685" width="0.2" height="15.0" fill="rgb(229,166,1)" rx="2" ry="2" />
<text  x="120.06" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="933.8" y="1909" width="0.2" height="15.0" fill="rgb(229,118,42)" rx="2" ry="2" />
<text  x="936.82" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="528.5" y="1861" width="0.6" height="15.0" fill="rgb(225,212,40)" rx="2" ry="2" />
<text  x="531.53" y="1871.5" ></text>
</g>
<g >
<title>up_write (12 samples, 0.20%)</title><rect x="826.8" y="1765" width="2.4" height="15.0" fill="rgb(221,147,5)" rx="2" ry="2" />
<text  x="829.77" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (11 samples, 0.19%)</title><rect x="609.5" y="1877" width="2.2" height="15.0" fill="rgb(230,10,13)" rx="2" ry="2" />
<text  x="612.47" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="408.3" y="1765" width="0.2" height="15.0" fill="rgb(232,68,9)" rx="2" ry="2" />
<text  x="411.32" y="1775.5" ></text>
</g>
<g >
<title>__sock_release (1 samples, 0.02%)</title><rect x="725.1" y="1797" width="0.2" height="15.0" fill="rgb(224,227,40)" rx="2" ry="2" />
<text  x="728.10" y="1807.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="832.2" y="1525" width="0.2" height="15.0" fill="rgb(234,105,46)" rx="2" ry="2" />
<text  x="835.15" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="412.9" y="1861" width="0.2" height="15.0" fill="rgb(219,10,2)" rx="2" ry="2" />
<text  x="415.90" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="291.3" y="1365" width="0.2" height="15.0" fill="rgb(205,8,37)" rx="2" ry="2" />
<text  x="294.29" y="1375.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="346.1" y="2037" width="0.2" height="15.0" fill="rgb(240,225,18)" rx="2" ry="2" />
<text  x="349.12" y="2047.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="489.1" y="1989" width="1.0" height="15.0" fill="rgb(225,54,10)" rx="2" ry="2" />
<text  x="492.06" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="903.3" y="1797" width="0.2" height="15.0" fill="rgb(218,93,29)" rx="2" ry="2" />
<text  x="906.32" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="75.6" y="1941" width="1.2" height="15.0" fill="rgb(227,29,26)" rx="2" ry="2" />
<text  x="78.59" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="882.4" y="1909" width="0.2" height="15.0" fill="rgb(217,99,45)" rx="2" ry="2" />
<text  x="885.39" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (7 samples, 0.12%)</title><rect x="704.4" y="1909" width="1.4" height="15.0" fill="rgb(220,84,36)" rx="2" ry="2" />
<text  x="707.36" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="409.1" y="1829" width="0.2" height="15.0" fill="rgb(207,180,23)" rx="2" ry="2" />
<text  x="412.11" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (10 samples, 0.17%)</title><rect x="901.5" y="2005" width="2.0" height="15.0" fill="rgb(208,42,54)" rx="2" ry="2" />
<text  x="904.53" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="683.6" y="1781" width="0.4" height="15.0" fill="rgb(240,84,39)" rx="2" ry="2" />
<text  x="686.63" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="609.7" y="1845" width="0.2" height="15.0" fill="rgb(218,111,2)" rx="2" ry="2" />
<text  x="612.67" y="1855.5" ></text>
</g>
<g >
<title>__destroy_inode (6 samples, 0.10%)</title><rect x="731.9" y="1685" width="1.2" height="15.0" fill="rgb(219,25,12)" rx="2" ry="2" />
<text  x="734.88" y="1695.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="548.3" y="1749" width="0.2" height="15.0" fill="rgb(238,178,26)" rx="2" ry="2" />
<text  x="551.27" y="1759.5" ></text>
</g>
<g >
<title>do_fcntl (4 samples, 0.07%)</title><rect x="560.0" y="1925" width="0.8" height="15.0" fill="rgb(224,48,44)" rx="2" ry="2" />
<text  x="563.03" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1003.8" y="2005" width="0.4" height="15.0" fill="rgb(236,49,2)" rx="2" ry="2" />
<text  x="1006.80" y="2015.5" ></text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="689.8" y="1541" width="0.2" height="15.0" fill="rgb(252,47,17)" rx="2" ry="2" />
<text  x="692.81" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="320.2" y="1653" width="0.2" height="15.0" fill="rgb(225,61,41)" rx="2" ry="2" />
<text  x="323.20" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (7 samples, 0.12%)</title><rect x="704.4" y="1957" width="1.4" height="15.0" fill="rgb(221,133,17)" rx="2" ry="2" />
<text  x="707.36" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="114.1" y="261" width="0.2" height="15.0" fill="rgb(240,31,40)" rx="2" ry="2" />
<text  x="117.06" y="271.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="321.2" y="1797" width="0.2" height="15.0" fill="rgb(240,62,50)" rx="2" ry="2" />
<text  x="324.20" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="489.1" y="1909" width="0.8" height="15.0" fill="rgb(219,99,31)" rx="2" ry="2" />
<text  x="492.06" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="658.1" y="1637" width="0.2" height="15.0" fill="rgb(224,111,52)" rx="2" ry="2" />
<text  x="661.11" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="538.3" y="1925" width="0.4" height="15.0" fill="rgb(234,100,45)" rx="2" ry="2" />
<text  x="541.30" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1003.6" y="1877" width="0.2" height="15.0" fill="rgb(246,28,30)" rx="2" ry="2" />
<text  x="1006.60" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1003.6" y="1685" width="0.2" height="15.0" fill="rgb(211,148,32)" rx="2" ry="2" />
<text  x="1006.60" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="130.8" y="1973" width="0.2" height="15.0" fill="rgb(240,107,44)" rx="2" ry="2" />
<text  x="133.81" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="667.5" y="1829" width="1.0" height="15.0" fill="rgb(238,132,37)" rx="2" ry="2" />
<text  x="670.48" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="567.8" y="1925" width="0.2" height="15.0" fill="rgb(247,134,48)" rx="2" ry="2" />
<text  x="570.80" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="132.0" y="1989" width="0.2" height="15.0" fill="rgb(221,18,15)" rx="2" ry="2" />
<text  x="135.01" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="763.2" y="1541" width="0.2" height="15.0" fill="rgb(231,135,15)" rx="2" ry="2" />
<text  x="766.17" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (14 samples, 0.24%)</title><rect x="68.4" y="1957" width="2.8" height="15.0" fill="rgb(238,146,45)" rx="2" ry="2" />
<text  x="71.41" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (4 samples, 0.07%)</title><rect x="515.0" y="1989" width="0.8" height="15.0" fill="rgb(227,158,16)" rx="2" ry="2" />
<text  x="517.97" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (3 samples, 0.05%)</title><rect x="381.0" y="1877" width="0.6" height="15.0" fill="rgb(212,221,53)" rx="2" ry="2" />
<text  x="384.01" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="409.1" y="1429" width="0.2" height="15.0" fill="rgb(219,191,21)" rx="2" ry="2" />
<text  x="412.11" y="1439.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="556.8" y="1685" width="0.2" height="15.0" fill="rgb(234,170,11)" rx="2" ry="2" />
<text  x="559.84" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="683.8" y="1461" width="0.2" height="15.0" fill="rgb(207,161,35)" rx="2" ry="2" />
<text  x="686.83" y="1471.5" ></text>
</g>
<g >
<title>inet_sendmsg (426 samples, 7.20%)</title><rect x="251.2" y="1925" width="84.9" height="15.0" fill="rgb(217,119,27)" rx="2" ry="2" />
<text  x="254.22" y="1935.5" >inet_send..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="464.5" y="1749" width="0.2" height="15.0" fill="rgb(248,128,0)" rx="2" ry="2" />
<text  x="467.54" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (2 samples, 0.03%)</title><rect x="853.9" y="1925" width="0.4" height="15.0" fill="rgb(210,159,4)" rx="2" ry="2" />
<text  x="856.88" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="194.4" y="2021" width="2.8" height="15.0" fill="rgb(221,20,13)" rx="2" ry="2" />
<text  x="197.41" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="868.8" y="1829" width="0.2" height="15.0" fill="rgb(212,70,19)" rx="2" ry="2" />
<text  x="871.83" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="169.1" y="1941" width="0.2" height="15.0" fill="rgb(212,189,37)" rx="2" ry="2" />
<text  x="172.09" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="934.4" y="1941" width="0.2" height="15.0" fill="rgb(224,95,40)" rx="2" ry="2" />
<text  x="937.42" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="229.5" y="1989" width="0.2" height="15.0" fill="rgb(223,65,6)" rx="2" ry="2" />
<text  x="232.49" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.05%)</title><rect x="1030.1" y="2037" width="0.6" height="15.0" fill="rgb(218,18,28)" rx="2" ry="2" />
<text  x="1033.11" y="2047.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.10%)</title><rect x="1107.5" y="1893" width="1.2" height="15.0" fill="rgb(225,92,12)" rx="2" ry="2" />
<text  x="1110.47" y="1903.5" ></text>
</g>
<g >
<title>[[vdso]] (5 samples, 0.08%)</title><rect x="199.2" y="2005" width="1.0" height="15.0" fill="rgb(233,136,28)" rx="2" ry="2" />
<text  x="202.19" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="284.9" y="1573" width="0.2" height="15.0" fill="rgb(232,185,37)" rx="2" ry="2" />
<text  x="287.91" y="1583.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="179.3" y="1877" width="0.2" height="15.0" fill="rgb(220,69,39)" rx="2" ry="2" />
<text  x="182.25" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="190.2" y="1973" width="0.2" height="15.0" fill="rgb(220,190,12)" rx="2" ry="2" />
<text  x="193.22" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="594.3" y="1797" width="0.2" height="15.0" fill="rgb(235,30,5)" rx="2" ry="2" />
<text  x="597.32" y="1807.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1057.4" y="1957" width="0.8" height="15.0" fill="rgb(233,180,18)" rx="2" ry="2" />
<text  x="1060.43" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="115.3" y="1445" width="0.2" height="15.0" fill="rgb(236,227,7)" rx="2" ry="2" />
<text  x="118.26" y="1455.5" ></text>
</g>
<g >
<title>SYSC_getsockname (1 samples, 0.02%)</title><rect x="591.1" y="1893" width="0.2" height="15.0" fill="rgb(233,135,36)" rx="2" ry="2" />
<text  x="594.13" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (49 samples, 0.83%)</title><rect x="267.2" y="1861" width="9.7" height="15.0" fill="rgb(229,216,8)" rx="2" ry="2" />
<text  x="270.17" y="1871.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="767.8" y="1701" width="0.2" height="15.0" fill="rgb(225,212,43)" rx="2" ry="2" />
<text  x="770.76" y="1711.5" ></text>
</g>
<g >
<title>ip_finish_output (45 samples, 0.76%)</title><rect x="1112.3" y="1813" width="8.9" height="15.0" fill="rgb(206,28,2)" rx="2" ry="2" />
<text  x="1115.25" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="1173.9" y="1653" width="0.2" height="15.0" fill="rgb(249,132,42)" rx="2" ry="2" />
<text  x="1176.85" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="950.6" y="1909" width="0.2" height="15.0" fill="rgb(235,28,14)" rx="2" ry="2" />
<text  x="953.57" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="751.2" y="1493" width="0.2" height="15.0" fill="rgb(250,100,44)" rx="2" ry="2" />
<text  x="754.21" y="1503.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="530.9" y="1701" width="0.2" height="15.0" fill="rgb(242,103,30)" rx="2" ry="2" />
<text  x="533.92" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (6 samples, 0.10%)</title><rect x="565.2" y="2005" width="1.2" height="15.0" fill="rgb(224,192,25)" rx="2" ry="2" />
<text  x="568.21" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="946.4" y="2005" width="0.8" height="15.0" fill="rgb(233,198,11)" rx="2" ry="2" />
<text  x="949.38" y="2015.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="966.7" y="2021" width="0.2" height="15.0" fill="rgb(212,68,12)" rx="2" ry="2" />
<text  x="969.72" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="951.8" y="2021" width="1.0" height="15.0" fill="rgb(244,122,8)" rx="2" ry="2" />
<text  x="954.77" y="2031.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="513.8" y="1957" width="0.2" height="15.0" fill="rgb(252,5,35)" rx="2" ry="2" />
<text  x="516.78" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (22 samples, 0.37%)</title><rect x="538.9" y="1989" width="4.4" height="15.0" fill="rgb(252,59,37)" rx="2" ry="2" />
<text  x="541.90" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="168.5" y="1973" width="0.6" height="15.0" fill="rgb(254,155,16)" rx="2" ry="2" />
<text  x="171.49" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="868.8" y="1893" width="0.2" height="15.0" fill="rgb(238,183,3)" rx="2" ry="2" />
<text  x="871.83" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="830.4" y="1861" width="0.2" height="15.0" fill="rgb(238,180,18)" rx="2" ry="2" />
<text  x="833.36" y="1871.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="225.5" y="1893" width="0.6" height="15.0" fill="rgb(247,121,39)" rx="2" ry="2" />
<text  x="228.51" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (6 samples, 0.10%)</title><rect x="292.1" y="1589" width="1.2" height="15.0" fill="rgb(233,160,24)" rx="2" ry="2" />
<text  x="295.09" y="1599.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="969.1" y="1765" width="0.2" height="15.0" fill="rgb(237,31,45)" rx="2" ry="2" />
<text  x="972.11" y="1775.5" ></text>
</g>
<g >
<title>skb_release_head_state (21 samples, 0.35%)</title><rect x="1085.1" y="1893" width="4.2" height="15.0" fill="rgb(250,97,20)" rx="2" ry="2" />
<text  x="1088.14" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="548.3" y="1813" width="0.2" height="15.0" fill="rgb(246,157,13)" rx="2" ry="2" />
<text  x="551.27" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="463.3" y="1957" width="0.2" height="15.0" fill="rgb(238,2,0)" rx="2" ry="2" />
<text  x="466.34" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="989.4" y="1701" width="0.2" height="15.0" fill="rgb(227,84,30)" rx="2" ry="2" />
<text  x="992.45" y="1711.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="279.1" y="1829" width="0.2" height="15.0" fill="rgb(250,135,19)" rx="2" ry="2" />
<text  x="282.13" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="179.3" y="1957" width="0.2" height="15.0" fill="rgb(216,216,22)" rx="2" ry="2" />
<text  x="182.25" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="626.0" y="1973" width="0.2" height="15.0" fill="rgb(205,173,13)" rx="2" ry="2" />
<text  x="629.02" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="723.1" y="1845" width="0.2" height="15.0" fill="rgb(239,90,48)" rx="2" ry="2" />
<text  x="726.10" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.1" y="2005" width="0.2" height="15.0" fill="rgb(234,206,43)" rx="2" ry="2" />
<text  x="95.14" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="1093.9" y="1909" width="0.6" height="15.0" fill="rgb(218,54,41)" rx="2" ry="2" />
<text  x="1096.91" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="213.1" y="1845" width="0.2" height="15.0" fill="rgb(230,129,23)" rx="2" ry="2" />
<text  x="216.15" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="77.0" y="1925" width="0.6" height="15.0" fill="rgb(243,43,23)" rx="2" ry="2" />
<text  x="79.98" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="674.5" y="2005" width="0.4" height="15.0" fill="rgb(247,217,10)" rx="2" ry="2" />
<text  x="677.46" y="2015.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1113.8" y="1493" width="0.4" height="15.0" fill="rgb(218,203,51)" rx="2" ry="2" />
<text  x="1116.85" y="1503.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="944.2" y="1989" width="1.0" height="15.0" fill="rgb(228,69,47)" rx="2" ry="2" />
<text  x="947.19" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="219.5" y="1829" width="0.2" height="15.0" fill="rgb(209,50,51)" rx="2" ry="2" />
<text  x="222.53" y="1839.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (5 samples, 0.08%)</title><rect x="520.8" y="1973" width="1.0" height="15.0" fill="rgb(209,142,24)" rx="2" ry="2" />
<text  x="523.76" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.4" y="1893" width="0.4" height="15.0" fill="rgb(241,222,10)" rx="2" ry="2" />
<text  x="141.39" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="737.9" y="1605" width="0.2" height="15.0" fill="rgb(205,183,27)" rx="2" ry="2" />
<text  x="740.86" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1024.9" y="2037" width="0.2" height="15.0" fill="rgb(230,33,9)" rx="2" ry="2" />
<text  x="1027.93" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="903.3" y="1989" width="0.2" height="15.0" fill="rgb(251,120,48)" rx="2" ry="2" />
<text  x="906.32" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="129.2" y="1941" width="0.2" height="15.0" fill="rgb(238,209,14)" rx="2" ry="2" />
<text  x="132.22" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="236.5" y="1941" width="0.2" height="15.0" fill="rgb(236,199,18)" rx="2" ry="2" />
<text  x="239.47" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (19 samples, 0.32%)</title><rect x="849.9" y="1925" width="3.8" height="15.0" fill="rgb(218,109,27)" rx="2" ry="2" />
<text  x="852.90" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11 samples, 0.19%)</title><rect x="313.2" y="1685" width="2.2" height="15.0" fill="rgb(254,101,7)" rx="2" ry="2" />
<text  x="316.22" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.91%)</title><rect x="658.5" y="1925" width="10.8" height="15.0" fill="rgb(224,70,31)" rx="2" ry="2" />
<text  x="661.51" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="975.9" y="1957" width="0.2" height="15.0" fill="rgb(225,111,32)" rx="2" ry="2" />
<text  x="978.89" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="820.8" y="1621" width="0.2" height="15.0" fill="rgb(229,186,34)" rx="2" ry="2" />
<text  x="823.79" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="614.9" y="2021" width="0.6" height="15.0" fill="rgb(215,229,40)" rx="2" ry="2" />
<text  x="617.85" y="2031.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (36 samples, 0.61%)</title><rect x="305.8" y="1685" width="7.2" height="15.0" fill="rgb(243,72,30)" rx="2" ry="2" />
<text  x="308.85" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="409.1" y="1813" width="0.2" height="15.0" fill="rgb(209,53,46)" rx="2" ry="2" />
<text  x="412.11" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="835.3" y="1893" width="0.2" height="15.0" fill="rgb(214,39,22)" rx="2" ry="2" />
<text  x="838.34" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="953.2" y="2005" width="0.4" height="15.0" fill="rgb(228,143,42)" rx="2" ry="2" />
<text  x="956.16" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="228.1" y="1941" width="0.2" height="15.0" fill="rgb(215,70,45)" rx="2" ry="2" />
<text  x="231.10" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="521.0" y="1941" width="0.2" height="15.0" fill="rgb(238,177,20)" rx="2" ry="2" />
<text  x="523.95" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="59.6" y="1861" width="0.4" height="15.0" fill="rgb(252,211,8)" rx="2" ry="2" />
<text  x="62.64" y="1871.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (24 samples, 0.41%)</title><rect x="807.2" y="1685" width="4.8" height="15.0" fill="rgb(245,117,45)" rx="2" ry="2" />
<text  x="810.23" y="1695.5" ></text>
</g>
<g >
<title>remove_wait_queue (23 samples, 0.39%)</title><rect x="470.3" y="1941" width="4.6" height="15.0" fill="rgb(236,158,46)" rx="2" ry="2" />
<text  x="473.32" y="1951.5" ></text>
</g>
<g >
<title>lock_sock_nested (11 samples, 0.19%)</title><rect x="252.6" y="1893" width="2.2" height="15.0" fill="rgb(245,161,38)" rx="2" ry="2" />
<text  x="255.62" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="216.9" y="1893" width="0.4" height="15.0" fill="rgb(217,194,35)" rx="2" ry="2" />
<text  x="219.93" y="1903.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="691.4" y="1525" width="0.2" height="15.0" fill="rgb(222,224,1)" rx="2" ry="2" />
<text  x="694.41" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="658.1" y="1829" width="0.2" height="15.0" fill="rgb(206,54,44)" rx="2" ry="2" />
<text  x="661.11" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="903.3" y="1861" width="0.2" height="15.0" fill="rgb(214,40,36)" rx="2" ry="2" />
<text  x="906.32" y="1871.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="1112.6" y="1429" width="0.2" height="15.0" fill="rgb(220,65,13)" rx="2" ry="2" />
<text  x="1115.65" y="1439.5" ></text>
</g>
<g >
<title>sock_sendmsg (436 samples, 7.37%)</title><rect x="250.8" y="1941" width="86.9" height="15.0" fill="rgb(236,95,38)" rx="2" ry="2" />
<text  x="253.82" y="1951.5" >sock_sendmsg</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="689.8" y="1701" width="0.2" height="15.0" fill="rgb(244,73,23)" rx="2" ry="2" />
<text  x="692.81" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="409.1" y="1749" width="0.2" height="15.0" fill="rgb(242,20,5)" rx="2" ry="2" />
<text  x="412.11" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="886.0" y="1717" width="0.2" height="15.0" fill="rgb(224,84,35)" rx="2" ry="2" />
<text  x="888.98" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1173" width="14.6" height="15.0" fill="rgb(241,105,20)" rx="2" ry="2" />
<text  x="103.11" y="1183.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="645.4" y="1733" width="0.2" height="15.0" fill="rgb(215,115,29)" rx="2" ry="2" />
<text  x="648.35" y="1743.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="315.6" y="1749" width="0.4" height="15.0" fill="rgb(206,120,46)" rx="2" ry="2" />
<text  x="318.62" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="320.2" y="1765" width="0.2" height="15.0" fill="rgb(234,162,29)" rx="2" ry="2" />
<text  x="323.20" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash@plt (1 samples, 0.02%)</title><rect x="1029.9" y="2037" width="0.2" height="15.0" fill="rgb(253,158,15)" rx="2" ry="2" />
<text  x="1032.92" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="993.0" y="1909" width="0.2" height="15.0" fill="rgb(253,29,28)" rx="2" ry="2" />
<text  x="996.03" y="1919.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="474.9" y="1813" width="0.2" height="15.0" fill="rgb(242,184,32)" rx="2" ry="2" />
<text  x="477.90" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="396.6" y="1685" width="0.2" height="15.0" fill="rgb(253,30,45)" rx="2" ry="2" />
<text  x="399.56" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="820.8" y="1525" width="0.2" height="15.0" fill="rgb(244,206,50)" rx="2" ry="2" />
<text  x="823.79" y="1535.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="694.0" y="1605" width="0.4" height="15.0" fill="rgb(244,57,30)" rx="2" ry="2" />
<text  x="697.00" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="878.4" y="1781" width="0.2" height="15.0" fill="rgb(226,83,21)" rx="2" ry="2" />
<text  x="881.40" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="381.4" y="1749" width="0.2" height="15.0" fill="rgb(251,157,12)" rx="2" ry="2" />
<text  x="384.40" y="1759.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="527.9" y="1925" width="0.2" height="15.0" fill="rgb(210,118,31)" rx="2" ry="2" />
<text  x="530.93" y="1935.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="157.9" y="1893" width="0.8" height="15.0" fill="rgb(243,36,10)" rx="2" ry="2" />
<text  x="160.92" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="931.8" y="1877" width="0.2" height="15.0" fill="rgb(225,37,32)" rx="2" ry="2" />
<text  x="934.83" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="126.0" y="1973" width="0.4" height="15.0" fill="rgb(230,132,10)" rx="2" ry="2" />
<text  x="129.03" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="489.9" y="1669" width="0.2" height="15.0" fill="rgb(208,25,33)" rx="2" ry="2" />
<text  x="492.85" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="683.6" y="1797" width="0.4" height="15.0" fill="rgb(227,119,4)" rx="2" ry="2" />
<text  x="686.63" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="92.3" y="1973" width="0.2" height="15.0" fill="rgb(246,198,31)" rx="2" ry="2" />
<text  x="95.33" y="1983.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="691.4" y="1605" width="0.2" height="15.0" fill="rgb(210,110,21)" rx="2" ry="2" />
<text  x="694.41" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (8 samples, 0.14%)</title><rect x="810.4" y="1589" width="1.6" height="15.0" fill="rgb(251,194,29)" rx="2" ry="2" />
<text  x="813.42" y="1599.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="932.2" y="1893" width="0.2" height="15.0" fill="rgb(242,171,50)" rx="2" ry="2" />
<text  x="935.23" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="456.6" y="1925" width="0.2" height="15.0" fill="rgb(214,192,9)" rx="2" ry="2" />
<text  x="459.56" y="1935.5" ></text>
</g>
<g >
<title>tcp_current_mss (15 samples, 0.25%)</title><rect x="333.2" y="1861" width="2.9" height="15.0" fill="rgb(251,228,48)" rx="2" ry="2" />
<text  x="336.16" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="894.2" y="1781" width="0.2" height="15.0" fill="rgb(228,76,33)" rx="2" ry="2" />
<text  x="897.15" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (2 samples, 0.03%)</title><rect x="567.6" y="1941" width="0.4" height="15.0" fill="rgb(210,188,42)" rx="2" ry="2" />
<text  x="570.60" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="408.3" y="1525" width="0.2" height="15.0" fill="rgb(226,57,38)" rx="2" ry="2" />
<text  x="411.32" y="1535.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="755.4" y="1733" width="0.4" height="15.0" fill="rgb(223,150,18)" rx="2" ry="2" />
<text  x="758.40" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1146.3" y="1941" width="0.2" height="15.0" fill="rgb(227,202,6)" rx="2" ry="2" />
<text  x="1149.34" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="286.7" y="1765" width="0.2" height="15.0" fill="rgb(215,114,26)" rx="2" ry="2" />
<text  x="289.71" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1032.1" y="2021" width="0.2" height="15.0" fill="rgb(241,112,43)" rx="2" ry="2" />
<text  x="1035.11" y="2031.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1079.0" y="1893" width="0.4" height="15.0" fill="rgb(254,156,0)" rx="2" ry="2" />
<text  x="1081.96" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (3 samples, 0.05%)</title><rect x="102.9" y="37" width="0.6" height="15.0" fill="rgb(250,95,18)" rx="2" ry="2" />
<text  x="105.90" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="903.3" y="1957" width="0.2" height="15.0" fill="rgb(252,57,39)" rx="2" ry="2" />
<text  x="906.32" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (61 samples, 1.03%)</title><rect x="24.8" y="2021" width="12.1" height="15.0" fill="rgb(227,197,15)" rx="2" ry="2" />
<text  x="27.75" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="898.9" y="1973" width="0.2" height="15.0" fill="rgb(216,20,24)" rx="2" ry="2" />
<text  x="901.94" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="204.8" y="1941" width="2.2" height="15.0" fill="rgb(219,162,54)" rx="2" ry="2" />
<text  x="207.77" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (14 samples, 0.24%)</title><rect x="374.8" y="1909" width="2.8" height="15.0" fill="rgb(249,15,24)" rx="2" ry="2" />
<text  x="377.83" y="1919.5" ></text>
</g>
<g >
<title>__module_get (1 samples, 0.02%)</title><rect x="413.5" y="1973" width="0.2" height="15.0" fill="rgb(230,1,39)" rx="2" ry="2" />
<text  x="416.50" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="594.3" y="1749" width="0.2" height="15.0" fill="rgb(249,147,10)" rx="2" ry="2" />
<text  x="597.32" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="34.5" y="1973" width="0.2" height="15.0" fill="rgb(207,165,9)" rx="2" ry="2" />
<text  x="37.52" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (8 samples, 0.14%)</title><rect x="106.5" y="53" width="1.6" height="15.0" fill="rgb(235,201,45)" rx="2" ry="2" />
<text  x="109.49" y="63.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1108.9" y="1797" width="0.2" height="15.0" fill="rgb(209,7,5)" rx="2" ry="2" />
<text  x="1111.86" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="632.8" y="1909" width="0.4" height="15.0" fill="rgb(220,41,16)" rx="2" ry="2" />
<text  x="635.79" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="114.1" y="453" width="0.2" height="15.0" fill="rgb(216,60,20)" rx="2" ry="2" />
<text  x="117.06" y="463.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="338.1" y="1957" width="0.4" height="15.0" fill="rgb(214,67,44)" rx="2" ry="2" />
<text  x="341.14" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="982.9" y="1941" width="0.6" height="15.0" fill="rgb(239,42,50)" rx="2" ry="2" />
<text  x="985.87" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="709.9" y="1877" width="0.2" height="15.0" fill="rgb(254,91,51)" rx="2" ry="2" />
<text  x="712.95" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (2 samples, 0.03%)</title><rect x="972.3" y="2005" width="0.4" height="15.0" fill="rgb(250,55,37)" rx="2" ry="2" />
<text  x="975.30" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="405" width="14.0" height="15.0" fill="rgb(211,32,43)" rx="2" ry="2" />
<text  x="103.11" y="415.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (3 samples, 0.05%)</title><rect x="542.1" y="1973" width="0.6" height="15.0" fill="rgb(242,214,28)" rx="2" ry="2" />
<text  x="545.09" y="1983.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="704.4" y="1813" width="0.2" height="15.0" fill="rgb(244,37,5)" rx="2" ry="2" />
<text  x="707.36" y="1823.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="658.1" y="1621" width="0.2" height="15.0" fill="rgb(223,44,52)" rx="2" ry="2" />
<text  x="661.11" y="1631.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="845.7" y="1877" width="0.2" height="15.0" fill="rgb(214,209,16)" rx="2" ry="2" />
<text  x="848.71" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="55.9" y="1925" width="0.7" height="15.0" fill="rgb(227,128,35)" rx="2" ry="2" />
<text  x="58.85" y="1935.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="809.6" y="1605" width="0.4" height="15.0" fill="rgb(214,183,53)" rx="2" ry="2" />
<text  x="812.62" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="844.7" y="1909" width="1.4" height="15.0" fill="rgb(242,196,17)" rx="2" ry="2" />
<text  x="847.71" y="1919.5" ></text>
</g>
<g >
<title>__libc_fcntl (9 samples, 0.15%)</title><rect x="231.3" y="2037" width="1.8" height="15.0" fill="rgb(220,66,45)" rx="2" ry="2" />
<text  x="234.29" y="2047.5" ></text>
</g>
<g >
<title>mntput (1 samples, 0.02%)</title><rect x="742.2" y="1797" width="0.2" height="15.0" fill="rgb(213,164,10)" rx="2" ry="2" />
<text  x="745.24" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="51.1" y="1941" width="0.2" height="15.0" fill="rgb(226,40,15)" rx="2" ry="2" />
<text  x="54.07" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="381.4" y="1765" width="0.2" height="15.0" fill="rgb(212,189,22)" rx="2" ry="2" />
<text  x="384.40" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="658.1" y="1701" width="0.2" height="15.0" fill="rgb(222,70,2)" rx="2" ry="2" />
<text  x="661.11" y="1711.5" ></text>
</g>
<g >
<title>SYSC_getpeername (24 samples, 0.41%)</title><rect x="664.1" y="1877" width="4.8" height="15.0" fill="rgb(215,5,1)" rx="2" ry="2" />
<text  x="667.09" y="1887.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (4 samples, 0.07%)</title><rect x="685.2" y="1893" width="0.8" height="15.0" fill="rgb(218,58,20)" rx="2" ry="2" />
<text  x="688.23" y="1903.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="119.8" y="1925" width="0.2" height="15.0" fill="rgb(225,11,46)" rx="2" ry="2" />
<text  x="122.85" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="92.3" y="1765" width="0.2" height="15.0" fill="rgb(238,122,17)" rx="2" ry="2" />
<text  x="95.33" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="893.2" y="1925" width="0.2" height="15.0" fill="rgb(247,173,30)" rx="2" ry="2" />
<text  x="896.16" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="456.6" y="1893" width="0.2" height="15.0" fill="rgb(221,66,25)" rx="2" ry="2" />
<text  x="459.56" y="1903.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="546.5" y="1701" width="0.2" height="15.0" fill="rgb(218,18,14)" rx="2" ry="2" />
<text  x="549.47" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="710.1" y="1941" width="0.4" height="15.0" fill="rgb(211,8,3)" rx="2" ry="2" />
<text  x="713.15" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="284.9" y="1669" width="0.2" height="15.0" fill="rgb(249,1,9)" rx="2" ry="2" />
<text  x="287.91" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="751.2" y="1653" width="0.2" height="15.0" fill="rgb(218,77,4)" rx="2" ry="2" />
<text  x="754.21" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="986.1" y="1909" width="0.2" height="15.0" fill="rgb(243,229,24)" rx="2" ry="2" />
<text  x="989.06" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="248.8" y="1781" width="0.2" height="15.0" fill="rgb(242,147,52)" rx="2" ry="2" />
<text  x="251.83" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="15.4" y="2053" width="0.2" height="15.0" fill="rgb(232,142,40)" rx="2" ry="2" />
<text  x="18.38" y="2063.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="887.2" y="1925" width="0.8" height="15.0" fill="rgb(230,103,31)" rx="2" ry="2" />
<text  x="890.18" y="1935.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1027.7" y="2005" width="0.2" height="15.0" fill="rgb(247,127,40)" rx="2" ry="2" />
<text  x="1030.72" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="116.7" y="1653" width="0.2" height="15.0" fill="rgb(253,200,5)" rx="2" ry="2" />
<text  x="119.66" y="1663.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (2 samples, 0.03%)</title><rect x="994.0" y="1989" width="0.4" height="15.0" fill="rgb(225,124,28)" rx="2" ry="2" />
<text  x="997.03" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="224.1" y="1813" width="0.4" height="15.0" fill="rgb(231,84,15)" rx="2" ry="2" />
<text  x="227.11" y="1823.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="957.0" y="1989" width="0.9" height="15.0" fill="rgb(254,229,37)" rx="2" ry="2" />
<text  x="959.95" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="155.3" y="1989" width="0.4" height="15.0" fill="rgb(236,224,23)" rx="2" ry="2" />
<text  x="158.33" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="571.4" y="1781" width="0.2" height="15.0" fill="rgb(239,0,2)" rx="2" ry="2" />
<text  x="574.39" y="1791.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (74 samples, 1.25%)</title><rect x="658.3" y="1957" width="14.8" height="15.0" fill="rgb(232,37,26)" rx="2" ry="2" />
<text  x="661.31" y="1967.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (13 samples, 0.22%)</title><rect x="77.6" y="1957" width="2.6" height="15.0" fill="rgb(253,122,2)" rx="2" ry="2" />
<text  x="80.58" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (4 samples, 0.07%)</title><rect x="890.8" y="1941" width="0.8" height="15.0" fill="rgb(239,229,43)" rx="2" ry="2" />
<text  x="893.76" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="530.9" y="1941" width="0.2" height="15.0" fill="rgb(212,220,31)" rx="2" ry="2" />
<text  x="533.92" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="140.2" y="1893" width="0.2" height="15.0" fill="rgb(221,91,19)" rx="2" ry="2" />
<text  x="143.18" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (7 samples, 0.12%)</title><rect x="891.6" y="1941" width="1.4" height="15.0" fill="rgb(228,207,29)" rx="2" ry="2" />
<text  x="894.56" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="820.8" y="1589" width="0.2" height="15.0" fill="rgb(234,162,1)" rx="2" ry="2" />
<text  x="823.79" y="1599.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="694.0" y="1557" width="0.4" height="15.0" fill="rgb(211,61,25)" rx="2" ry="2" />
<text  x="697.00" y="1567.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (17 samples, 0.29%)</title><rect x="10.4" y="1845" width="3.4" height="15.0" fill="rgb(243,161,28)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="174.5" y="1941" width="0.2" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="177.47" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (2 samples, 0.03%)</title><rect x="71.2" y="1957" width="0.4" height="15.0" fill="rgb(217,186,19)" rx="2" ry="2" />
<text  x="74.20" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (3 samples, 0.05%)</title><rect x="91.7" y="2021" width="0.6" height="15.0" fill="rgb(254,24,11)" rx="2" ry="2" />
<text  x="94.74" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="169.7" y="1941" width="0.2" height="15.0" fill="rgb(245,189,50)" rx="2" ry="2" />
<text  x="172.69" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (7 samples, 0.12%)</title><rect x="411.7" y="1925" width="1.4" height="15.0" fill="rgb(211,49,48)" rx="2" ry="2" />
<text  x="414.71" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="543.7" y="1989" width="0.2" height="15.0" fill="rgb(226,221,17)" rx="2" ry="2" />
<text  x="546.68" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="658.1" y="1733" width="0.2" height="15.0" fill="rgb(213,82,51)" rx="2" ry="2" />
<text  x="661.11" y="1743.5" ></text>
</g>
<g >
<title>__fput (526 samples, 8.89%)</title><rect x="724.5" y="1813" width="104.9" height="15.0" fill="rgb(236,109,25)" rx="2" ry="2" />
<text  x="727.50" y="1823.5" >__fput</text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="783.5" y="1509" width="0.4" height="15.0" fill="rgb(208,104,15)" rx="2" ry="2" />
<text  x="786.51" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="703.2" y="1973" width="0.2" height="15.0" fill="rgb(217,39,54)" rx="2" ry="2" />
<text  x="706.17" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1172.3" y="1973" width="0.2" height="15.0" fill="rgb(224,149,53)" rx="2" ry="2" />
<text  x="1175.26" y="1983.5" ></text>
</g>
<g >
<title>event_base_loop (3 samples, 0.05%)</title><rect x="1138.4" y="2053" width="0.6" height="15.0" fill="rgb(246,186,11)" rx="2" ry="2" />
<text  x="1141.37" y="2063.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="693.6" y="1957" width="0.2" height="15.0" fill="rgb(228,1,38)" rx="2" ry="2" />
<text  x="696.60" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="69.6" y="1861" width="0.4" height="15.0" fill="rgb(227,18,4)" rx="2" ry="2" />
<text  x="72.61" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="933.2" y="1941" width="0.2" height="15.0" fill="rgb(225,132,39)" rx="2" ry="2" />
<text  x="936.23" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1139.4" y="1973" width="0.2" height="15.0" fill="rgb(237,141,5)" rx="2" ry="2" />
<text  x="1142.36" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="14.6" y="1925" width="0.8" height="15.0" fill="rgb(228,213,27)" rx="2" ry="2" />
<text  x="17.59" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (7 samples, 0.12%)</title><rect x="567.0" y="2005" width="1.4" height="15.0" fill="rgb(212,145,37)" rx="2" ry="2" />
<text  x="570.01" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1003.6" y="1893" width="0.2" height="15.0" fill="rgb(242,175,25)" rx="2" ry="2" />
<text  x="1006.60" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="969.1" y="1797" width="0.2" height="15.0" fill="rgb(223,170,7)" rx="2" ry="2" />
<text  x="972.11" y="1807.5" ></text>
</g>
<g >
<title>free (23 samples, 0.39%)</title><rect x="179.7" y="2021" width="4.5" height="15.0" fill="rgb(252,223,20)" rx="2" ry="2" />
<text  x="182.65" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="645.4" y="1925" width="0.2" height="15.0" fill="rgb(229,169,10)" rx="2" ry="2" />
<text  x="648.35" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="658.1" y="1941" width="0.2" height="15.0" fill="rgb(242,54,22)" rx="2" ry="2" />
<text  x="661.11" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="284.9" y="1605" width="0.2" height="15.0" fill="rgb(224,160,17)" rx="2" ry="2" />
<text  x="287.91" y="1615.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="840.7" y="1925" width="0.8" height="15.0" fill="rgb(213,152,38)" rx="2" ry="2" />
<text  x="843.72" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="381.4" y="1653" width="0.2" height="15.0" fill="rgb(208,45,48)" rx="2" ry="2" />
<text  x="384.40" y="1663.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="879.0" y="1861" width="0.2" height="15.0" fill="rgb(211,131,27)" rx="2" ry="2" />
<text  x="882.00" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="561.2" y="1813" width="0.8" height="15.0" fill="rgb(209,16,13)" rx="2" ry="2" />
<text  x="564.22" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="764.4" y="1653" width="0.2" height="15.0" fill="rgb(205,24,8)" rx="2" ry="2" />
<text  x="767.37" y="1663.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="227.3" y="1669" width="0.2" height="15.0" fill="rgb(219,216,30)" rx="2" ry="2" />
<text  x="230.30" y="1679.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="510.2" y="2037" width="0.2" height="15.0" fill="rgb(216,134,40)" rx="2" ry="2" />
<text  x="513.19" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="499.6" y="1861" width="0.6" height="15.0" fill="rgb(250,39,49)" rx="2" ry="2" />
<text  x="502.62" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (4 samples, 0.07%)</title><rect x="618.8" y="2037" width="0.8" height="15.0" fill="rgb(214,3,1)" rx="2" ry="2" />
<text  x="621.84" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="316.2" y="1813" width="0.4" height="15.0" fill="rgb(233,92,18)" rx="2" ry="2" />
<text  x="319.21" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="886.0" y="1909" width="0.2" height="15.0" fill="rgb(250,186,38)" rx="2" ry="2" />
<text  x="888.98" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="99.3" y="1653" width="17.2" height="15.0" fill="rgb(238,47,1)" rx="2" ry="2" />
<text  x="102.31" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="886.0" y="1797" width="0.2" height="15.0" fill="rgb(222,186,39)" rx="2" ry="2" />
<text  x="888.98" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="131.4" y="1989" width="0.6" height="15.0" fill="rgb(209,43,30)" rx="2" ry="2" />
<text  x="134.41" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="93.7" y="1829" width="0.8" height="15.0" fill="rgb(234,15,18)" rx="2" ry="2" />
<text  x="96.73" y="1839.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="709.9" y="1813" width="0.2" height="15.0" fill="rgb(230,26,26)" rx="2" ry="2" />
<text  x="712.95" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="530.9" y="1861" width="0.2" height="15.0" fill="rgb(205,69,18)" rx="2" ry="2" />
<text  x="533.92" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="894.2" y="1909" width="0.2" height="15.0" fill="rgb(217,103,41)" rx="2" ry="2" />
<text  x="897.15" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="707.6" y="1973" width="0.2" height="15.0" fill="rgb(214,187,9)" rx="2" ry="2" />
<text  x="710.55" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="891.4" y="1893" width="0.2" height="15.0" fill="rgb(214,45,0)" rx="2" ry="2" />
<text  x="894.36" y="1903.5" ></text>
</g>
<g >
<title>tcp_sndbuf_expand (1 samples, 0.02%)</title><rect x="556.8" y="1653" width="0.2" height="15.0" fill="rgb(250,52,31)" rx="2" ry="2" />
<text  x="559.84" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (2 samples, 0.03%)</title><rect x="918.3" y="2005" width="0.4" height="15.0" fill="rgb(214,197,14)" rx="2" ry="2" />
<text  x="921.28" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="533.5" y="1973" width="0.8" height="15.0" fill="rgb(251,13,47)" rx="2" ry="2" />
<text  x="536.51" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="183.8" y="1781" width="0.4" height="15.0" fill="rgb(240,180,10)" rx="2" ry="2" />
<text  x="186.84" y="1791.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="61.8" y="1925" width="0.8" height="15.0" fill="rgb(244,136,6)" rx="2" ry="2" />
<text  x="64.83" y="1935.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="813.4" y="1717" width="0.4" height="15.0" fill="rgb(228,208,8)" rx="2" ry="2" />
<text  x="816.41" y="1727.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (5 samples, 0.08%)</title><rect x="89.9" y="2005" width="1.0" height="15.0" fill="rgb(218,81,7)" rx="2" ry="2" />
<text  x="92.94" y="2015.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="812.2" y="1685" width="0.6" height="15.0" fill="rgb(232,171,1)" rx="2" ry="2" />
<text  x="815.22" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="820.8" y="1573" width="0.2" height="15.0" fill="rgb(230,197,13)" rx="2" ry="2" />
<text  x="823.79" y="1583.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="52.9" y="1861" width="0.2" height="15.0" fill="rgb(220,228,34)" rx="2" ry="2" />
<text  x="55.86" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="131.4" y="1973" width="0.2" height="15.0" fill="rgb(206,42,13)" rx="2" ry="2" />
<text  x="134.41" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="138.2" y="1893" width="0.2" height="15.0" fill="rgb(241,157,17)" rx="2" ry="2" />
<text  x="141.19" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="903.3" y="1733" width="0.2" height="15.0" fill="rgb(249,9,47)" rx="2" ry="2" />
<text  x="906.32" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.71%)</title><rect x="1151.1" y="1957" width="8.4" height="15.0" fill="rgb(251,30,23)" rx="2" ry="2" />
<text  x="1154.13" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="649.1" y="2021" width="0.2" height="15.0" fill="rgb(222,222,41)" rx="2" ry="2" />
<text  x="652.14" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="515.6" y="1957" width="0.2" height="15.0" fill="rgb(210,46,52)" rx="2" ry="2" />
<text  x="518.57" y="1967.5" ></text>
</g>
<g >
<title>lock_sock_nested (18 samples, 0.30%)</title><rect x="1093.5" y="1925" width="3.6" height="15.0" fill="rgb(246,124,30)" rx="2" ry="2" />
<text  x="1096.51" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="228.1" y="1781" width="0.2" height="15.0" fill="rgb(228,27,38)" rx="2" ry="2" />
<text  x="231.10" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (2 samples, 0.03%)</title><rect x="162.5" y="1989" width="0.4" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="165.51" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="674.3" y="2005" width="0.2" height="15.0" fill="rgb(230,197,15)" rx="2" ry="2" />
<text  x="677.26" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="847.5" y="1781" width="0.2" height="15.0" fill="rgb(251,141,13)" rx="2" ry="2" />
<text  x="850.50" y="1791.5" ></text>
</g>
<g >
<title>make_kuid (1 samples, 0.02%)</title><rect x="392.2" y="1893" width="0.2" height="15.0" fill="rgb(214,8,24)" rx="2" ry="2" />
<text  x="395.17" y="1903.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="120.0" y="1925" width="0.2" height="15.0" fill="rgb(249,78,10)" rx="2" ry="2" />
<text  x="123.05" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="893.2" y="1909" width="0.2" height="15.0" fill="rgb(209,15,14)" rx="2" ry="2" />
<text  x="896.16" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="971.5" y="1797" width="0.2" height="15.0" fill="rgb(212,208,45)" rx="2" ry="2" />
<text  x="974.50" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="111.1" y="53" width="0.8" height="15.0" fill="rgb(216,102,38)" rx="2" ry="2" />
<text  x="114.07" y="63.5" ></text>
</g>
<g >
<title>__fget (8 samples, 0.14%)</title><rect x="558.4" y="1893" width="1.6" height="15.0" fill="rgb(208,160,36)" rx="2" ry="2" />
<text  x="561.43" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="751.2" y="1621" width="0.2" height="15.0" fill="rgb(227,138,23)" rx="2" ry="2" />
<text  x="754.21" y="1631.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="320.6" y="1813" width="0.2" height="15.0" fill="rgb(247,198,18)" rx="2" ry="2" />
<text  x="323.60" y="1823.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="251.8" y="1893" width="0.2" height="15.0" fill="rgb(254,44,17)" rx="2" ry="2" />
<text  x="254.82" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (12 samples, 0.20%)</title><rect x="1177.8" y="2053" width="2.4" height="15.0" fill="rgb(241,168,21)" rx="2" ry="2" />
<text  x="1180.84" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10 samples, 0.17%)</title><rect x="273.0" y="1845" width="1.9" height="15.0" fill="rgb(238,25,33)" rx="2" ry="2" />
<text  x="275.95" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.2" y="2021" width="0.2" height="15.0" fill="rgb(213,123,19)" rx="2" ry="2" />
<text  x="17.19" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="521.2" y="1941" width="0.4" height="15.0" fill="rgb(237,2,52)" rx="2" ry="2" />
<text  x="524.15" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="464.5" y="1717" width="0.2" height="15.0" fill="rgb(221,72,4)" rx="2" ry="2" />
<text  x="467.54" y="1727.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="1138.2" y="2053" width="0.2" height="15.0" fill="rgb(217,207,29)" rx="2" ry="2" />
<text  x="1141.17" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="499.8" y="1685" width="0.2" height="15.0" fill="rgb(218,211,53)" rx="2" ry="2" />
<text  x="502.82" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="342.3" y="1781" width="0.2" height="15.0" fill="rgb(220,105,45)" rx="2" ry="2" />
<text  x="345.33" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="691.4" y="1797" width="0.2" height="15.0" fill="rgb(213,198,16)" rx="2" ry="2" />
<text  x="694.41" y="1807.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="15.8" y="1829" width="0.2" height="15.0" fill="rgb(211,14,22)" rx="2" ry="2" />
<text  x="18.78" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="246.2" y="1877" width="0.2" height="15.0" fill="rgb(254,228,21)" rx="2" ry="2" />
<text  x="249.24" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (3 samples, 0.05%)</title><rect x="614.1" y="1989" width="0.6" height="15.0" fill="rgb(254,161,46)" rx="2" ry="2" />
<text  x="617.05" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (83 samples, 1.40%)</title><rect x="677.1" y="1957" width="16.5" height="15.0" fill="rgb(231,179,40)" rx="2" ry="2" />
<text  x="680.05" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (17 samples, 0.29%)</title><rect x="734.7" y="1669" width="3.4" height="15.0" fill="rgb(207,159,9)" rx="2" ry="2" />
<text  x="737.67" y="1679.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1653" width="0.2" height="15.0" fill="rgb(253,148,1)" rx="2" ry="2" />
<text  x="906.32" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="117.5" y="1733" width="0.2" height="15.0" fill="rgb(252,37,11)" rx="2" ry="2" />
<text  x="120.45" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="689.8" y="1669" width="0.2" height="15.0" fill="rgb(227,141,2)" rx="2" ry="2" />
<text  x="692.81" y="1679.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.24%)</title><rect x="1159.5" y="1957" width="2.8" height="15.0" fill="rgb(238,139,13)" rx="2" ry="2" />
<text  x="1162.50" y="1967.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="912.7" y="1957" width="0.2" height="15.0" fill="rgb(221,183,5)" rx="2" ry="2" />
<text  x="915.69" y="1967.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="482.3" y="1829" width="0.2" height="15.0" fill="rgb(236,0,10)" rx="2" ry="2" />
<text  x="485.28" y="1839.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="530.7" y="2021" width="0.4" height="15.0" fill="rgb(249,135,10)" rx="2" ry="2" />
<text  x="533.72" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="227.3" y="1733" width="0.2" height="15.0" fill="rgb(231,56,38)" rx="2" ry="2" />
<text  x="230.30" y="1743.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="745.6" y="1749" width="0.4" height="15.0" fill="rgb(224,69,11)" rx="2" ry="2" />
<text  x="748.63" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="971.5" y="1925" width="0.2" height="15.0" fill="rgb(234,12,49)" rx="2" ry="2" />
<text  x="974.50" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="181" width="14.0" height="15.0" fill="rgb(224,142,12)" rx="2" ry="2" />
<text  x="103.11" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="538.1" y="1925" width="0.2" height="15.0" fill="rgb(248,119,10)" rx="2" ry="2" />
<text  x="541.10" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="516.2" y="1941" width="0.4" height="15.0" fill="rgb(243,126,0)" rx="2" ry="2" />
<text  x="519.17" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="154.1" y="1861" width="0.2" height="15.0" fill="rgb(254,87,17)" rx="2" ry="2" />
<text  x="157.14" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="159.5" y="1845" width="0.2" height="15.0" fill="rgb(226,69,4)" rx="2" ry="2" />
<text  x="162.52" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="336.0" y="1845" width="0.1" height="15.0" fill="rgb(213,209,20)" rx="2" ry="2" />
<text  x="338.95" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="890.8" y="1909" width="0.2" height="15.0" fill="rgb(217,170,31)" rx="2" ry="2" />
<text  x="893.76" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="157.9" y="1861" width="0.8" height="15.0" fill="rgb(228,124,50)" rx="2" ry="2" />
<text  x="160.92" y="1871.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (1 samples, 0.02%)</title><rect x="347.5" y="2037" width="0.2" height="15.0" fill="rgb(209,66,42)" rx="2" ry="2" />
<text  x="350.51" y="2047.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="667.1" y="1813" width="0.2" height="15.0" fill="rgb(226,187,33)" rx="2" ry="2" />
<text  x="670.08" y="1823.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="72.8" y="1957" width="0.6" height="15.0" fill="rgb(221,11,20)" rx="2" ry="2" />
<text  x="75.80" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (2 samples, 0.03%)</title><rect x="614.9" y="2005" width="0.4" height="15.0" fill="rgb(248,186,47)" rx="2" ry="2" />
<text  x="617.85" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1013.8" y="1909" width="0.2" height="15.0" fill="rgb(211,128,18)" rx="2" ry="2" />
<text  x="1016.77" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="763.2" y="1477" width="0.2" height="15.0" fill="rgb(254,4,18)" rx="2" ry="2" />
<text  x="766.17" y="1487.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="985.9" y="1877" width="0.2" height="15.0" fill="rgb(241,128,20)" rx="2" ry="2" />
<text  x="988.86" y="1887.5" ></text>
</g>
<g >
<title>event_set@plt (1 samples, 0.02%)</title><rect x="535.9" y="1973" width="0.2" height="15.0" fill="rgb(251,154,11)" rx="2" ry="2" />
<text  x="538.91" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="879.0" y="1877" width="0.2" height="15.0" fill="rgb(248,212,19)" rx="2" ry="2" />
<text  x="882.00" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="868.8" y="1877" width="0.2" height="15.0" fill="rgb(205,202,47)" rx="2" ry="2" />
<text  x="871.83" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="165.7" y="1989" width="0.6" height="15.0" fill="rgb(217,83,48)" rx="2" ry="2" />
<text  x="168.70" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1182.0" y="1813" width="0.2" height="15.0" fill="rgb(236,161,19)" rx="2" ry="2" />
<text  x="1185.03" y="1823.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="134.2" y="1973" width="0.2" height="15.0" fill="rgb(219,181,21)" rx="2" ry="2" />
<text  x="137.20" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="220.7" y="1845" width="1.0" height="15.0" fill="rgb(234,153,47)" rx="2" ry="2" />
<text  x="223.72" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="580.4" y="1973" width="0.2" height="15.0" fill="rgb(228,56,28)" rx="2" ry="2" />
<text  x="583.36" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="947.2" y="1989" width="0.2" height="15.0" fill="rgb(243,94,32)" rx="2" ry="2" />
<text  x="950.18" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="482.3" y="1909" width="0.2" height="15.0" fill="rgb(225,127,18)" rx="2" ry="2" />
<text  x="485.28" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="121.6" y="1973" width="0.2" height="15.0" fill="rgb(226,197,27)" rx="2" ry="2" />
<text  x="124.64" y="1983.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (12 samples, 0.20%)</title><rect x="248.2" y="1941" width="2.4" height="15.0" fill="rgb(214,101,33)" rx="2" ry="2" />
<text  x="251.23" y="1951.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.02%)</title><rect x="1081.5" y="1877" width="0.2" height="15.0" fill="rgb(243,170,54)" rx="2" ry="2" />
<text  x="1084.55" y="1887.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(215,183,39)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="33.1" y="1925" width="0.2" height="15.0" fill="rgb(234,1,28)" rx="2" ry="2" />
<text  x="36.13" y="1935.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="278.1" y="1877" width="0.2" height="15.0" fill="rgb(209,152,16)" rx="2" ry="2" />
<text  x="281.14" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="932.4" y="1893" width="0.2" height="15.0" fill="rgb(225,30,18)" rx="2" ry="2" />
<text  x="935.43" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="556.8" y="1717" width="0.2" height="15.0" fill="rgb(247,139,16)" rx="2" ry="2" />
<text  x="559.84" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="111.9" y="69" width="0.2" height="15.0" fill="rgb(254,5,39)" rx="2" ry="2" />
<text  x="114.87" y="79.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="499.0" y="1893" width="0.6" height="15.0" fill="rgb(216,204,31)" rx="2" ry="2" />
<text  x="502.03" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (12 samples, 0.20%)</title><rect x="219.9" y="1877" width="2.4" height="15.0" fill="rgb(222,151,27)" rx="2" ry="2" />
<text  x="222.92" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (102 samples, 1.72%)</title><rect x="134.8" y="1957" width="20.3" height="15.0" fill="rgb(218,14,30)" rx="2" ry="2" />
<text  x="137.80" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (4 samples, 0.07%)</title><rect x="963.5" y="2021" width="0.8" height="15.0" fill="rgb(227,166,35)" rx="2" ry="2" />
<text  x="966.53" y="2031.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (3 samples, 0.05%)</title><rect x="842.5" y="1925" width="0.6" height="15.0" fill="rgb(244,172,54)" rx="2" ry="2" />
<text  x="845.52" y="1935.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="839.9" y="1925" width="0.4" height="15.0" fill="rgb(249,85,9)" rx="2" ry="2" />
<text  x="842.93" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (3 samples, 0.05%)</title><rect x="860.5" y="1989" width="0.6" height="15.0" fill="rgb(245,214,4)" rx="2" ry="2" />
<text  x="863.46" y="1999.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="69.4" y="1829" width="0.2" height="15.0" fill="rgb(208,14,15)" rx="2" ry="2" />
<text  x="72.41" y="1839.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="385.6" y="1925" width="0.4" height="15.0" fill="rgb(218,18,52)" rx="2" ry="2" />
<text  x="388.59" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="756.8" y="1653" width="0.2" height="15.0" fill="rgb(221,189,49)" rx="2" ry="2" />
<text  x="759.80" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (39 samples, 0.66%)</title><rect x="627.2" y="1989" width="7.8" height="15.0" fill="rgb(222,188,20)" rx="2" ry="2" />
<text  x="630.21" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="767.4" y="1605" width="0.2" height="15.0" fill="rgb(242,91,18)" rx="2" ry="2" />
<text  x="770.36" y="1615.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="162.5" y="1973" width="0.2" height="15.0" fill="rgb(240,139,7)" rx="2" ry="2" />
<text  x="165.51" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (4 samples, 0.07%)</title><rect x="174.9" y="1989" width="0.8" height="15.0" fill="rgb(243,142,43)" rx="2" ry="2" />
<text  x="177.87" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="1078.0" y="1861" width="0.8" height="15.0" fill="rgb(213,159,47)" rx="2" ry="2" />
<text  x="1080.96" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="878.0" y="1925" width="1.2" height="15.0" fill="rgb(241,2,34)" rx="2" ry="2" />
<text  x="881.00" y="1935.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="989.4" y="1589" width="0.2" height="15.0" fill="rgb(243,159,22)" rx="2" ry="2" />
<text  x="992.45" y="1599.5" ></text>
</g>
<g >
<title>__libc_recv (514 samples, 8.68%)</title><rect x="1033.5" y="2053" width="102.5" height="15.0" fill="rgb(233,189,19)" rx="2" ry="2" />
<text  x="1036.50" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="407.7" y="1893" width="0.4" height="15.0" fill="rgb(205,17,43)" rx="2" ry="2" />
<text  x="410.72" y="1903.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="683.8" y="1493" width="0.2" height="15.0" fill="rgb(247,197,27)" rx="2" ry="2" />
<text  x="686.83" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="933.8" y="1925" width="0.2" height="15.0" fill="rgb(234,150,7)" rx="2" ry="2" />
<text  x="936.82" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="704.2" y="1925" width="0.2" height="15.0" fill="rgb(230,225,13)" rx="2" ry="2" />
<text  x="707.16" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="669.9" y="1557" width="0.2" height="15.0" fill="rgb(242,87,25)" rx="2" ry="2" />
<text  x="672.87" y="1567.5" ></text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="272.8" y="1717" width="0.2" height="15.0" fill="rgb(223,11,38)" rx="2" ry="2" />
<text  x="275.75" y="1727.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (7 samples, 0.12%)</title><rect x="573.6" y="2005" width="1.4" height="15.0" fill="rgb(238,88,16)" rx="2" ry="2" />
<text  x="576.59" y="2015.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (1 samples, 0.02%)</title><rect x="572.0" y="1989" width="0.2" height="15.0" fill="rgb(245,137,28)" rx="2" ry="2" />
<text  x="574.99" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="611.7" y="1893" width="0.4" height="15.0" fill="rgb(231,93,36)" rx="2" ry="2" />
<text  x="614.66" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (11 samples, 0.19%)</title><rect x="981.5" y="1973" width="2.2" height="15.0" fill="rgb(239,153,15)" rx="2" ry="2" />
<text  x="984.47" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="253.0" y="1877" width="0.2" height="15.0" fill="rgb(244,130,17)" rx="2" ry="2" />
<text  x="256.02" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="520.8" y="1957" width="0.2" height="15.0" fill="rgb(251,186,46)" rx="2" ry="2" />
<text  x="523.76" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.05%)</title><rect x="568.4" y="2005" width="0.6" height="15.0" fill="rgb(236,174,12)" rx="2" ry="2" />
<text  x="571.40" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="675.5" y="2021" width="0.2" height="15.0" fill="rgb(245,23,27)" rx="2" ry="2" />
<text  x="678.46" y="2031.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (4 samples, 0.07%)</title><rect x="520.0" y="1941" width="0.8" height="15.0" fill="rgb(238,13,38)" rx="2" ry="2" />
<text  x="522.96" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1182.0" y="1733" width="0.2" height="15.0" fill="rgb(222,202,34)" rx="2" ry="2" />
<text  x="1185.03" y="1743.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="67.4" y="1877" width="1.0" height="15.0" fill="rgb(217,188,21)" rx="2" ry="2" />
<text  x="70.42" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1003.0" y="1957" width="0.2" height="15.0" fill="rgb(227,133,23)" rx="2" ry="2" />
<text  x="1006.00" y="1967.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="845.1" y="1861" width="0.4" height="15.0" fill="rgb(232,100,28)" rx="2" ry="2" />
<text  x="848.11" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="145.6" y="1797" width="0.2" height="15.0" fill="rgb(251,55,20)" rx="2" ry="2" />
<text  x="148.56" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="499.6" y="1813" width="0.6" height="15.0" fill="rgb(216,140,14)" rx="2" ry="2" />
<text  x="502.62" y="1823.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="500.0" y="1685" width="0.2" height="15.0" fill="rgb(222,24,26)" rx="2" ry="2" />
<text  x="503.02" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="890.6" y="1733" width="0.2" height="15.0" fill="rgb(218,176,41)" rx="2" ry="2" />
<text  x="893.56" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="903.5" y="2021" width="2.4" height="15.0" fill="rgb(212,142,12)" rx="2" ry="2" />
<text  x="906.52" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="698.8" y="1989" width="1.4" height="15.0" fill="rgb(208,68,26)" rx="2" ry="2" />
<text  x="701.78" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="402.7" y="1893" width="0.2" height="15.0" fill="rgb(211,9,14)" rx="2" ry="2" />
<text  x="405.74" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.69%)</title><rect x="907.9" y="2005" width="8.2" height="15.0" fill="rgb(246,85,51)" rx="2" ry="2" />
<text  x="910.91" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="879.8" y="1925" width="0.2" height="15.0" fill="rgb(222,101,0)" rx="2" ry="2" />
<text  x="882.80" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (2 samples, 0.03%)</title><rect x="1148.7" y="2037" width="0.4" height="15.0" fill="rgb(240,52,52)" rx="2" ry="2" />
<text  x="1151.73" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="136.8" y="1893" width="0.2" height="15.0" fill="rgb(240,141,34)" rx="2" ry="2" />
<text  x="139.79" y="1903.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="279.3" y="1845" width="0.2" height="15.0" fill="rgb(220,2,27)" rx="2" ry="2" />
<text  x="282.33" y="1855.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="315.2" y="1653" width="0.2" height="15.0" fill="rgb(214,218,44)" rx="2" ry="2" />
<text  x="318.22" y="1663.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="316.0" y="1797" width="0.2" height="15.0" fill="rgb(249,58,5)" rx="2" ry="2" />
<text  x="319.01" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (1 samples, 0.02%)</title><rect x="1149.1" y="2053" width="0.2" height="15.0" fill="rgb(211,127,24)" rx="2" ry="2" />
<text  x="1152.13" y="2063.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="582.4" y="1957" width="0.2" height="15.0" fill="rgb(227,94,31)" rx="2" ry="2" />
<text  x="585.36" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="505.8" y="1877" width="0.4" height="15.0" fill="rgb(210,217,39)" rx="2" ry="2" />
<text  x="508.80" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="482.3" y="1877" width="0.2" height="15.0" fill="rgb(243,4,1)" rx="2" ry="2" />
<text  x="485.28" y="1887.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="246.0" y="1893" width="0.2" height="15.0" fill="rgb(233,107,21)" rx="2" ry="2" />
<text  x="249.04" y="1903.5" ></text>
</g>
<g >
<title>inet_accept (99 samples, 1.67%)</title><rect x="366.3" y="1957" width="19.7" height="15.0" fill="rgb(215,147,44)" rx="2" ry="2" />
<text  x="369.25" y="1967.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="770.6" y="1685" width="0.2" height="15.0" fill="rgb(208,1,25)" rx="2" ry="2" />
<text  x="773.55" y="1695.5" ></text>
</g>
<g >
<title>__fget_light (23 samples, 0.39%)</title><rect x="450.4" y="1957" width="4.6" height="15.0" fill="rgb(232,5,14)" rx="2" ry="2" />
<text  x="453.38" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (6 samples, 0.10%)</title><rect x="999.6" y="1957" width="1.2" height="15.0" fill="rgb(220,76,22)" rx="2" ry="2" />
<text  x="1002.61" y="1967.5" ></text>
</g>
<g >
<title>find_next_zero_bit (3 samples, 0.05%)</title><rect x="365.7" y="1941" width="0.6" height="15.0" fill="rgb(221,120,28)" rx="2" ry="2" />
<text  x="368.65" y="1951.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="456.6" y="1829" width="0.2" height="15.0" fill="rgb(234,26,22)" rx="2" ry="2" />
<text  x="459.56" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (18 samples, 0.30%)</title><rect x="374.0" y="1925" width="3.6" height="15.0" fill="rgb(245,41,3)" rx="2" ry="2" />
<text  x="377.03" y="1935.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="561.2" y="1925" width="1.0" height="15.0" fill="rgb(243,88,39)" rx="2" ry="2" />
<text  x="564.22" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="618.8" y="1989" width="0.6" height="15.0" fill="rgb(212,73,49)" rx="2" ry="2" />
<text  x="621.84" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (6 samples, 0.10%)</title><rect x="540.9" y="1941" width="1.2" height="15.0" fill="rgb(246,56,38)" rx="2" ry="2" />
<text  x="543.89" y="1951.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="917.9" y="1749" width="0.2" height="15.0" fill="rgb(226,161,52)" rx="2" ry="2" />
<text  x="920.88" y="1759.5" ></text>
</g>
<g >
<title>get_empty_filp (1 samples, 0.02%)</title><rect x="410.5" y="1941" width="0.2" height="15.0" fill="rgb(206,124,13)" rx="2" ry="2" />
<text  x="413.51" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (4 samples, 0.07%)</title><rect x="697.0" y="1989" width="0.8" height="15.0" fill="rgb(214,192,50)" rx="2" ry="2" />
<text  x="699.99" y="1999.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="981.3" y="1973" width="0.2" height="15.0" fill="rgb(225,176,13)" rx="2" ry="2" />
<text  x="984.27" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (18 samples, 0.30%)</title><rect x="808.4" y="1637" width="3.6" height="15.0" fill="rgb(237,57,8)" rx="2" ry="2" />
<text  x="811.43" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="634.8" y="1957" width="0.2" height="15.0" fill="rgb(232,106,9)" rx="2" ry="2" />
<text  x="637.79" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="844.1" y="1861" width="0.2" height="15.0" fill="rgb(237,194,43)" rx="2" ry="2" />
<text  x="847.11" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 1.99%)</title><rect x="98.5" y="1989" width="23.5" height="15.0" fill="rgb(221,139,47)" rx="2" ry="2" />
<text  x="101.51" y="1999.5" >[..</text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="115.9" y="1557" width="0.2" height="15.0" fill="rgb(233,160,10)" rx="2" ry="2" />
<text  x="118.86" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.12%)</title><rect x="1180.6" y="2021" width="1.4" height="15.0" fill="rgb(220,12,48)" rx="2" ry="2" />
<text  x="1183.63" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (3 samples, 0.05%)</title><rect x="126.0" y="1989" width="0.6" height="15.0" fill="rgb(243,44,22)" rx="2" ry="2" />
<text  x="129.03" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="677" width="14.2" height="15.0" fill="rgb(254,133,15)" rx="2" ry="2" />
<text  x="103.11" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1003.6" y="1925" width="0.2" height="15.0" fill="rgb(214,64,15)" rx="2" ry="2" />
<text  x="1006.60" y="1935.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="83.4" y="1973" width="0.2" height="15.0" fill="rgb(222,209,50)" rx="2" ry="2" />
<text  x="86.36" y="1983.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (29 samples, 0.49%)</title><rect x="686.2" y="1893" width="5.8" height="15.0" fill="rgb(234,54,47)" rx="2" ry="2" />
<text  x="689.22" y="1903.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="346.3" y="2037" width="0.2" height="15.0" fill="rgb(245,160,49)" rx="2" ry="2" />
<text  x="349.32" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="847.5" y="1669" width="0.2" height="15.0" fill="rgb(210,37,27)" rx="2" ry="2" />
<text  x="850.50" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="166.7" y="2021" width="0.6" height="15.0" fill="rgb(244,5,4)" rx="2" ry="2" />
<text  x="169.70" y="2031.5" ></text>
</g>
<g >
<title>lock_timer_base (10 samples, 0.17%)</title><rect x="810.0" y="1605" width="2.0" height="15.0" fill="rgb(227,108,6)" rx="2" ry="2" />
<text  x="813.02" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (25 samples, 0.42%)</title><rect x="83.8" y="1989" width="4.9" height="15.0" fill="rgb(248,120,14)" rx="2" ry="2" />
<text  x="86.76" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="226.3" y="1909" width="0.2" height="15.0" fill="rgb(227,184,8)" rx="2" ry="2" />
<text  x="229.30" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="514.2" y="1989" width="0.2" height="15.0" fill="rgb(232,166,18)" rx="2" ry="2" />
<text  x="517.18" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="548.3" y="1909" width="0.2" height="15.0" fill="rgb(212,219,35)" rx="2" ry="2" />
<text  x="551.27" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="77.4" y="1717" width="0.2" height="15.0" fill="rgb(229,137,43)" rx="2" ry="2" />
<text  x="80.38" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="286.5" y="1717" width="0.2" height="15.0" fill="rgb(254,8,44)" rx="2" ry="2" />
<text  x="289.51" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1022.9" y="1989" width="0.4" height="15.0" fill="rgb(229,22,34)" rx="2" ry="2" />
<text  x="1025.94" y="1999.5" ></text>
</g>
<g >
<title>note_interrupt (1 samples, 0.02%)</title><rect x="669.3" y="1829" width="0.2" height="15.0" fill="rgb(239,207,11)" rx="2" ry="2" />
<text  x="672.28" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="742.6" y="1781" width="0.2" height="15.0" fill="rgb(228,180,33)" rx="2" ry="2" />
<text  x="745.64" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="608.5" y="1909" width="0.2" height="15.0" fill="rgb(231,221,17)" rx="2" ry="2" />
<text  x="611.47" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (12 samples, 0.20%)</title><rect x="903.5" y="2037" width="2.4" height="15.0" fill="rgb(231,101,53)" rx="2" ry="2" />
<text  x="906.52" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="118.7" y="1829" width="0.5" height="15.0" fill="rgb(209,226,31)" rx="2" ry="2" />
<text  x="121.65" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="903.3" y="1685" width="0.2" height="15.0" fill="rgb(252,124,37)" rx="2" ry="2" />
<text  x="906.32" y="1695.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="546.3" y="1957" width="0.6" height="15.0" fill="rgb(242,88,17)" rx="2" ry="2" />
<text  x="549.27" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.4" y="1909" width="0.2" height="15.0" fill="rgb(221,186,44)" rx="2" ry="2" />
<text  x="138.40" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="594.3" y="1813" width="0.2" height="15.0" fill="rgb(222,210,47)" rx="2" ry="2" />
<text  x="597.32" y="1823.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (5 samples, 0.08%)</title><rect x="406.3" y="1893" width="1.0" height="15.0" fill="rgb(221,223,39)" rx="2" ry="2" />
<text  x="409.32" y="1903.5" ></text>
</g>
<g >
<title>sys_fcntl (2 samples, 0.03%)</title><rect x="560.8" y="1957" width="0.4" height="15.0" fill="rgb(246,69,28)" rx="2" ry="2" />
<text  x="563.83" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="305.6" y="1669" width="0.2" height="15.0" fill="rgb(247,181,29)" rx="2" ry="2" />
<text  x="308.65" y="1679.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1039.7" y="1973" width="0.2" height="15.0" fill="rgb(214,8,42)" rx="2" ry="2" />
<text  x="1042.68" y="1983.5" ></text>
</g>
<g >
<title>__GI___getsockname (90 samples, 1.52%)</title><rect x="582.6" y="1941" width="17.9" height="15.0" fill="rgb(213,137,3)" rx="2" ry="2" />
<text  x="585.56" y="1951.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="188.0" y="2037" width="0.4" height="15.0" fill="rgb(249,9,7)" rx="2" ry="2" />
<text  x="191.03" y="2047.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="291.3" y="1381" width="0.2" height="15.0" fill="rgb(252,98,26)" rx="2" ry="2" />
<text  x="294.29" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (28 samples, 0.47%)</title><rect x="629.2" y="1957" width="5.6" height="15.0" fill="rgb(226,206,39)" rx="2" ry="2" />
<text  x="632.21" y="1967.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="849.1" y="1909" width="0.4" height="15.0" fill="rgb(212,88,9)" rx="2" ry="2" />
<text  x="852.10" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="610.5" y="1845" width="1.0" height="15.0" fill="rgb(234,6,40)" rx="2" ry="2" />
<text  x="613.47" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="886.0" y="1893" width="0.2" height="15.0" fill="rgb(250,124,44)" rx="2" ry="2" />
<text  x="888.98" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="689.0" y="1877" width="1.4" height="15.0" fill="rgb(228,73,18)" rx="2" ry="2" />
<text  x="692.01" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="138.6" y="1653" width="0.2" height="15.0" fill="rgb(223,12,9)" rx="2" ry="2" />
<text  x="141.59" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (34 samples, 0.57%)</title><rect x="306.2" y="1669" width="6.8" height="15.0" fill="rgb(229,178,23)" rx="2" ry="2" />
<text  x="309.25" y="1679.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="682.8" y="1813" width="0.2" height="15.0" fill="rgb(241,59,40)" rx="2" ry="2" />
<text  x="685.83" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1175.6" y="1973" width="0.2" height="15.0" fill="rgb(234,69,15)" rx="2" ry="2" />
<text  x="1178.65" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="933.8" y="1941" width="0.2" height="15.0" fill="rgb(210,228,27)" rx="2" ry="2" />
<text  x="936.82" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="273.8" y="1813" width="0.1" height="15.0" fill="rgb(226,75,24)" rx="2" ry="2" />
<text  x="276.75" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1182.0" y="1829" width="0.2" height="15.0" fill="rgb(214,195,12)" rx="2" ry="2" />
<text  x="1185.03" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="405.5" y="1813" width="0.2" height="15.0" fill="rgb(236,199,40)" rx="2" ry="2" />
<text  x="408.53" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (18 samples, 0.30%)</title><rect x="1145.1" y="2053" width="3.6" height="15.0" fill="rgb(241,143,32)" rx="2" ry="2" />
<text  x="1148.14" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (17 samples, 0.29%)</title><rect x="171.5" y="1989" width="3.4" height="15.0" fill="rgb(228,219,4)" rx="2" ry="2" />
<text  x="174.48" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="229.5" y="1941" width="0.2" height="15.0" fill="rgb(231,126,18)" rx="2" ry="2" />
<text  x="232.49" y="1951.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="783.7" y="1461" width="0.2" height="15.0" fill="rgb(252,97,39)" rx="2" ry="2" />
<text  x="786.71" y="1471.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1173.9" y="1781" width="0.2" height="15.0" fill="rgb(246,138,1)" rx="2" ry="2" />
<text  x="1176.85" y="1791.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="111.5" y="37" width="0.4" height="15.0" fill="rgb(217,37,38)" rx="2" ry="2" />
<text  x="114.47" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="1027.5" y="2005" width="0.2" height="15.0" fill="rgb(228,225,31)" rx="2" ry="2" />
<text  x="1030.52" y="2015.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="292.9" y="1429" width="0.4" height="15.0" fill="rgb(209,141,44)" rx="2" ry="2" />
<text  x="295.89" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="878.6" y="1909" width="0.6" height="15.0" fill="rgb(220,200,26)" rx="2" ry="2" />
<text  x="881.60" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="530.9" y="1877" width="0.2" height="15.0" fill="rgb(237,100,13)" rx="2" ry="2" />
<text  x="533.92" y="1887.5" ></text>
</g>
<g >
<title>ip_output (45 samples, 0.76%)</title><rect x="1112.3" y="1829" width="8.9" height="15.0" fill="rgb(218,215,53)" rx="2" ry="2" />
<text  x="1115.25" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (8 samples, 0.14%)</title><rect x="525.1" y="1989" width="1.6" height="15.0" fill="rgb(240,52,19)" rx="2" ry="2" />
<text  x="528.14" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="742.0" y="1749" width="0.2" height="15.0" fill="rgb(224,31,9)" rx="2" ry="2" />
<text  x="745.04" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="229.5" y="1813" width="0.2" height="15.0" fill="rgb(216,192,19)" rx="2" ry="2" />
<text  x="232.49" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="969.1" y="1781" width="0.2" height="15.0" fill="rgb(223,118,39)" rx="2" ry="2" />
<text  x="972.11" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="622.0" y="2005" width="0.2" height="15.0" fill="rgb(241,145,4)" rx="2" ry="2" />
<text  x="625.03" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="104.1" y="37" width="0.2" height="15.0" fill="rgb(234,106,13)" rx="2" ry="2" />
<text  x="107.10" y="47.5" ></text>
</g>
<g >
<title>__fget_light (18 samples, 0.30%)</title><rect x="1125.4" y="1941" width="3.6" height="15.0" fill="rgb(211,114,28)" rx="2" ry="2" />
<text  x="1128.41" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (8 samples, 0.14%)</title><rect x="923.7" y="1973" width="1.6" height="15.0" fill="rgb(211,155,4)" rx="2" ry="2" />
<text  x="926.66" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="62.4" y="1877" width="0.2" height="15.0" fill="rgb(235,65,9)" rx="2" ry="2" />
<text  x="65.43" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="342.3" y="1845" width="0.2" height="15.0" fill="rgb(246,121,46)" rx="2" ry="2" />
<text  x="345.33" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="1182.2" y="2037" width="0.6" height="15.0" fill="rgb(221,47,37)" rx="2" ry="2" />
<text  x="1185.23" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="904.3" y="1941" width="0.4" height="15.0" fill="rgb(205,214,15)" rx="2" ry="2" />
<text  x="907.32" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11 samples, 0.19%)</title><rect x="388.4" y="1925" width="2.2" height="15.0" fill="rgb(216,81,53)" rx="2" ry="2" />
<text  x="391.38" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="989.4" y="1637" width="0.2" height="15.0" fill="rgb(218,141,14)" rx="2" ry="2" />
<text  x="992.45" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="154.1" y="1877" width="0.2" height="15.0" fill="rgb(239,204,40)" rx="2" ry="2" />
<text  x="157.14" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (33 samples, 0.56%)</title><rect x="299.3" y="1685" width="6.5" height="15.0" fill="rgb(220,211,17)" rx="2" ry="2" />
<text  x="302.27" y="1695.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="943.2" y="1973" width="1.0" height="15.0" fill="rgb(219,219,37)" rx="2" ry="2" />
<text  x="946.19" y="1983.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="286.5" y="1797" width="0.2" height="15.0" fill="rgb(209,185,10)" rx="2" ry="2" />
<text  x="289.51" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="99.3" y="1669" width="17.2" height="15.0" fill="rgb(230,154,43)" rx="2" ry="2" />
<text  x="102.31" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1124.8" y="1829" width="0.2" height="15.0" fill="rgb(211,181,5)" rx="2" ry="2" />
<text  x="1127.81" y="1839.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (5 samples, 0.08%)</title><rect x="1008.0" y="2005" width="1.0" height="15.0" fill="rgb(237,150,17)" rx="2" ry="2" />
<text  x="1010.99" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="901.3" y="2021" width="2.2" height="15.0" fill="rgb(254,61,51)" rx="2" ry="2" />
<text  x="904.33" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="704.2" y="1973" width="0.2" height="15.0" fill="rgb(210,126,21)" rx="2" ry="2" />
<text  x="707.16" y="1983.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (2 samples, 0.03%)</title><rect x="490.9" y="1941" width="0.4" height="15.0" fill="rgb(246,209,33)" rx="2" ry="2" />
<text  x="493.85" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="853.5" y="1829" width="0.2" height="15.0" fill="rgb(244,126,51)" rx="2" ry="2" />
<text  x="856.48" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="653.7" y="2021" width="0.2" height="15.0" fill="rgb(234,70,37)" rx="2" ry="2" />
<text  x="656.73" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="847.5" y="1765" width="0.2" height="15.0" fill="rgb(230,227,2)" rx="2" ry="2" />
<text  x="850.50" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="546.5" y="1925" width="0.2" height="15.0" fill="rgb(253,186,42)" rx="2" ry="2" />
<text  x="549.47" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="916.3" y="2005" width="0.2" height="15.0" fill="rgb(236,220,7)" rx="2" ry="2" />
<text  x="919.28" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (8 samples, 0.14%)</title><rect x="846.1" y="1941" width="1.6" height="15.0" fill="rgb(250,168,3)" rx="2" ry="2" />
<text  x="849.11" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.34%)</title><rect x="10.2" y="2053" width="4.0" height="15.0" fill="rgb(246,69,5)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (3 samples, 0.05%)</title><rect x="59.4" y="1941" width="0.6" height="15.0" fill="rgb(237,215,49)" rx="2" ry="2" />
<text  x="62.44" y="1951.5" ></text>
</g>
<g >
<title>folly::FunctionRef&lt;void  (1 samples, 0.02%)</title><rect x="896.1" y="1941" width="0.2" height="15.0" fill="rgb(228,64,21)" rx="2" ry="2" />
<text  x="899.15" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="993.2" y="1989" width="0.2" height="15.0" fill="rgb(237,135,47)" rx="2" ry="2" />
<text  x="996.23" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="669.9" y="1541" width="0.2" height="15.0" fill="rgb(238,155,28)" rx="2" ry="2" />
<text  x="672.87" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="261" width="14.0" height="15.0" fill="rgb(222,146,9)" rx="2" ry="2" />
<text  x="103.11" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="490.5" y="1925" width="0.2" height="15.0" fill="rgb(218,152,7)" rx="2" ry="2" />
<text  x="493.45" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="136.6" y="1893" width="0.2" height="15.0" fill="rgb(237,112,49)" rx="2" ry="2" />
<text  x="139.59" y="1903.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="114.1" y="69" width="0.2" height="15.0" fill="rgb(251,155,52)" rx="2" ry="2" />
<text  x="117.06" y="79.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="256.2" y="1893" width="0.2" height="15.0" fill="rgb(210,194,2)" rx="2" ry="2" />
<text  x="259.21" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="709" width="14.4" height="15.0" fill="rgb(253,49,3)" rx="2" ry="2" />
<text  x="103.11" y="719.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="14.6" y="1973" width="0.8" height="15.0" fill="rgb(219,183,21)" rx="2" ry="2" />
<text  x="17.59" y="1983.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="774.1" y="1509" width="0.2" height="15.0" fill="rgb(230,48,54)" rx="2" ry="2" />
<text  x="777.14" y="1519.5" ></text>
</g>
<g >
<title>sch_direct_xmit (73 samples, 1.23%)</title><rect x="787.1" y="1557" width="14.6" height="15.0" fill="rgb(243,61,2)" rx="2" ry="2" />
<text  x="790.10" y="1567.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="100.5" y="37" width="0.2" height="15.0" fill="rgb(226,59,47)" rx="2" ry="2" />
<text  x="103.51" y="47.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="691.6" y="1861" width="0.2" height="15.0" fill="rgb(249,187,10)" rx="2" ry="2" />
<text  x="694.61" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="197" width="14.0" height="15.0" fill="rgb(239,58,26)" rx="2" ry="2" />
<text  x="103.11" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="842.3" y="1893" width="0.2" height="15.0" fill="rgb(243,21,5)" rx="2" ry="2" />
<text  x="845.32" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="882.4" y="1877" width="0.2" height="15.0" fill="rgb(212,138,36)" rx="2" ry="2" />
<text  x="885.39" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="620.2" y="2037" width="0.2" height="15.0" fill="rgb(247,108,49)" rx="2" ry="2" />
<text  x="623.23" y="2047.5" ></text>
</g>
<g >
<title>tcp_setsockopt (30 samples, 0.51%)</title><rect x="686.2" y="1909" width="6.0" height="15.0" fill="rgb(215,78,22)" rx="2" ry="2" />
<text  x="689.22" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="669.7" y="1685" width="0.4" height="15.0" fill="rgb(205,199,37)" rx="2" ry="2" />
<text  x="672.68" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="490.7" y="1909" width="0.2" height="15.0" fill="rgb(226,147,3)" rx="2" ry="2" />
<text  x="493.65" y="1919.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1097.1" y="1925" width="0.2" height="15.0" fill="rgb(240,91,34)" rx="2" ry="2" />
<text  x="1100.10" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="645.4" y="1781" width="0.2" height="15.0" fill="rgb(248,50,29)" rx="2" ry="2" />
<text  x="648.35" y="1791.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="456.6" y="1797" width="0.2" height="15.0" fill="rgb(252,76,7)" rx="2" ry="2" />
<text  x="459.56" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="78.8" y="1909" width="0.2" height="15.0" fill="rgb(231,37,2)" rx="2" ry="2" />
<text  x="81.78" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="474.9" y="1941" width="0.2" height="15.0" fill="rgb(251,143,10)" rx="2" ry="2" />
<text  x="477.90" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="71.4" y="1925" width="0.2" height="15.0" fill="rgb(230,148,3)" rx="2" ry="2" />
<text  x="74.40" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (6 samples, 0.10%)</title><rect x="594.9" y="1845" width="1.2" height="15.0" fill="rgb(240,35,38)" rx="2" ry="2" />
<text  x="597.92" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="145.6" y="1813" width="0.2" height="15.0" fill="rgb(245,45,36)" rx="2" ry="2" />
<text  x="148.56" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1165.1" y="2053" width="0.4" height="15.0" fill="rgb(235,182,2)" rx="2" ry="2" />
<text  x="1168.08" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="365.3" y="1925" width="0.2" height="15.0" fill="rgb(217,90,50)" rx="2" ry="2" />
<text  x="368.26" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="600.7" y="2005" width="0.2" height="15.0" fill="rgb(251,225,19)" rx="2" ry="2" />
<text  x="603.70" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="572.6" y="1957" width="0.4" height="15.0" fill="rgb(224,22,6)" rx="2" ry="2" />
<text  x="575.59" y="1967.5" ></text>
</g>
<g >
<title>ip_copy_addrs (4 samples, 0.07%)</title><rect x="774.3" y="1669" width="0.8" height="15.0" fill="rgb(249,229,36)" rx="2" ry="2" />
<text  x="777.34" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="971.7" y="2037" width="0.4" height="15.0" fill="rgb(245,20,36)" rx="2" ry="2" />
<text  x="974.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="99.3" y="1749" width="18.4" height="15.0" fill="rgb(242,46,30)" rx="2" ry="2" />
<text  x="102.31" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="691.8" y="1861" width="0.2" height="15.0" fill="rgb(232,59,26)" rx="2" ry="2" />
<text  x="694.80" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="76.0" y="1877" width="0.2" height="15.0" fill="rgb(253,201,50)" rx="2" ry="2" />
<text  x="78.99" y="1887.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (4 samples, 0.07%)</title><rect x="576.4" y="2005" width="0.8" height="15.0" fill="rgb(247,206,52)" rx="2" ry="2" />
<text  x="579.38" y="2015.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="597.1" y="1845" width="1.2" height="15.0" fill="rgb(230,101,18)" rx="2" ry="2" />
<text  x="600.11" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="847.7" y="1941" width="1.8" height="15.0" fill="rgb(220,180,41)" rx="2" ry="2" />
<text  x="850.70" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="40.5" y="1957" width="0.2" height="15.0" fill="rgb(253,168,36)" rx="2" ry="2" />
<text  x="43.50" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="305.6" y="1637" width="0.2" height="15.0" fill="rgb(249,133,35)" rx="2" ry="2" />
<text  x="308.65" y="1647.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="683.8" y="1653" width="0.2" height="15.0" fill="rgb(206,114,49)" rx="2" ry="2" />
<text  x="686.83" y="1663.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="751.4" y="1733" width="0.2" height="15.0" fill="rgb(244,99,49)" rx="2" ry="2" />
<text  x="754.41" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="751.2" y="1637" width="0.2" height="15.0" fill="rgb(222,163,9)" rx="2" ry="2" />
<text  x="754.21" y="1647.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="985.1" y="1925" width="1.4" height="15.0" fill="rgb(247,115,50)" rx="2" ry="2" />
<text  x="988.06" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="673.1" y="1941" width="0.2" height="15.0" fill="rgb(254,56,10)" rx="2" ry="2" />
<text  x="676.06" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="538.5" y="1877" width="0.2" height="15.0" fill="rgb(218,4,20)" rx="2" ry="2" />
<text  x="541.50" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="982.3" y="1957" width="1.2" height="15.0" fill="rgb(218,137,53)" rx="2" ry="2" />
<text  x="985.27" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="840.3" y="1893" width="0.2" height="15.0" fill="rgb(211,129,37)" rx="2" ry="2" />
<text  x="843.33" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="291.5" y="1365" width="0.2" height="15.0" fill="rgb(211,160,36)" rx="2" ry="2" />
<text  x="294.49" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="154.1" y="1893" width="0.2" height="15.0" fill="rgb(240,102,26)" rx="2" ry="2" />
<text  x="157.14" y="1903.5" ></text>
</g>
<g >
<title>dst_release (5 samples, 0.08%)</title><rect x="1086.9" y="1877" width="1.0" height="15.0" fill="rgb(208,45,1)" rx="2" ry="2" />
<text  x="1089.93" y="1887.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="439.6" y="1989" width="0.2" height="15.0" fill="rgb(241,12,9)" rx="2" ry="2" />
<text  x="442.62" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="733.7" y="1669" width="0.2" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text  x="736.67" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="108.9" y="37" width="0.2" height="15.0" fill="rgb(245,17,0)" rx="2" ry="2" />
<text  x="111.88" y="47.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="149.4" y="1893" width="0.3" height="15.0" fill="rgb(236,200,52)" rx="2" ry="2" />
<text  x="152.35" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="342.3" y="1829" width="0.2" height="15.0" fill="rgb(224,85,51)" rx="2" ry="2" />
<text  x="345.33" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="894.2" y="1861" width="0.2" height="15.0" fill="rgb(253,174,0)" rx="2" ry="2" />
<text  x="897.15" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="669.9" y="1669" width="0.2" height="15.0" fill="rgb(218,218,0)" rx="2" ry="2" />
<text  x="672.87" y="1679.5" ></text>
</g>
<g >
<title>folly::detail::function::Data::Data (1 samples, 0.02%)</title><rect x="927.0" y="1893" width="0.2" height="15.0" fill="rgb(230,10,24)" rx="2" ry="2" />
<text  x="930.05" y="1903.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="704.2" y="1733" width="0.2" height="15.0" fill="rgb(211,181,25)" rx="2" ry="2" />
<text  x="707.16" y="1743.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="157.9" y="1989" width="0.8" height="15.0" fill="rgb(231,11,11)" rx="2" ry="2" />
<text  x="160.92" y="1999.5" ></text>
</g>
<g >
<title>call_rcu_sched (6 samples, 0.10%)</title><rect x="463.5" y="1957" width="1.2" height="15.0" fill="rgb(210,118,4)" rx="2" ry="2" />
<text  x="466.54" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="129.4" y="1941" width="0.2" height="15.0" fill="rgb(205,139,52)" rx="2" ry="2" />
<text  x="132.42" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (86 samples, 1.45%)</title><rect x="298.3" y="1701" width="17.1" height="15.0" fill="rgb(253,124,17)" rx="2" ry="2" />
<text  x="301.27" y="1711.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="508.4" y="1829" width="0.2" height="15.0" fill="rgb(214,229,25)" rx="2" ry="2" />
<text  x="511.39" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1130.2" y="2037" width="0.2" height="15.0" fill="rgb(254,144,2)" rx="2" ry="2" />
<text  x="1133.19" y="2047.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="474.9" y="1861" width="0.2" height="15.0" fill="rgb(230,212,46)" rx="2" ry="2" />
<text  x="477.90" y="1871.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="290.9" y="1493" width="0.2" height="15.0" fill="rgb(251,0,38)" rx="2" ry="2" />
<text  x="293.90" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="99.1" y="1797" width="18.8" height="15.0" fill="rgb(210,156,14)" rx="2" ry="2" />
<text  x="102.11" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (4 samples, 0.07%)</title><rect x="34.7" y="1973" width="0.8" height="15.0" fill="rgb(222,16,48)" rx="2" ry="2" />
<text  x="37.72" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="396.6" y="1653" width="0.2" height="15.0" fill="rgb(245,136,47)" rx="2" ry="2" />
<text  x="399.56" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="252.2" y="1893" width="0.2" height="15.0" fill="rgb(205,99,5)" rx="2" ry="2" />
<text  x="255.22" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="409.1" y="1765" width="0.2" height="15.0" fill="rgb(244,216,46)" rx="2" ry="2" />
<text  x="412.11" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="138.6" y="1829" width="0.2" height="15.0" fill="rgb(230,218,15)" rx="2" ry="2" />
<text  x="141.59" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="689.8" y="1637" width="0.2" height="15.0" fill="rgb(246,180,10)" rx="2" ry="2" />
<text  x="692.81" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1001.4" y="1973" width="0.2" height="15.0" fill="rgb(205,111,51)" rx="2" ry="2" />
<text  x="1004.41" y="1983.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (11 samples, 0.19%)</title><rect x="15.6" y="1957" width="2.2" height="15.0" fill="rgb(233,221,7)" rx="2" ry="2" />
<text  x="18.58" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1032.7" y="2053" width="0.2" height="15.0" fill="rgb(230,122,32)" rx="2" ry="2" />
<text  x="1035.71" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="883.6" y="1925" width="0.2" height="15.0" fill="rgb(222,166,7)" rx="2" ry="2" />
<text  x="886.59" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="53.5" y="1861" width="0.2" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" />
<text  x="56.46" y="1871.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="882.4" y="1797" width="0.2" height="15.0" fill="rgb(240,229,35)" rx="2" ry="2" />
<text  x="885.39" y="1807.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="403.1" y="1893" width="0.4" height="15.0" fill="rgb(228,138,26)" rx="2" ry="2" />
<text  x="406.13" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="974.3" y="1813" width="0.2" height="15.0" fill="rgb(222,56,35)" rx="2" ry="2" />
<text  x="977.29" y="1823.5" ></text>
</g>
<g >
<title>d_instantiate (1 samples, 0.02%)</title><rect x="363.1" y="1957" width="0.2" height="15.0" fill="rgb(234,45,14)" rx="2" ry="2" />
<text  x="366.06" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="316.2" y="1765" width="0.2" height="15.0" fill="rgb(241,10,32)" rx="2" ry="2" />
<text  x="319.21" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="342.3" y="1909" width="0.2" height="15.0" fill="rgb(254,209,10)" rx="2" ry="2" />
<text  x="345.33" y="1919.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.03%)</title><rect x="457.0" y="1941" width="0.4" height="15.0" fill="rgb(248,158,11)" rx="2" ry="2" />
<text  x="459.96" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 0.07%)</title><rect x="689.2" y="1861" width="0.8" height="15.0" fill="rgb(215,30,50)" rx="2" ry="2" />
<text  x="692.21" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1022.9" y="1909" width="0.4" height="15.0" fill="rgb(250,78,12)" rx="2" ry="2" />
<text  x="1025.94" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="112.9" y="37" width="0.2" height="15.0" fill="rgb(205,117,36)" rx="2" ry="2" />
<text  x="115.87" y="47.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="611.9" y="1861" width="0.2" height="15.0" fill="rgb(242,153,54)" rx="2" ry="2" />
<text  x="614.86" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="632.4" y="1925" width="0.8" height="15.0" fill="rgb(212,9,36)" rx="2" ry="2" />
<text  x="635.40" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="989.4" y="1877" width="0.2" height="15.0" fill="rgb(205,30,3)" rx="2" ry="2" />
<text  x="992.45" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="1188.4" y="1877" width="0.2" height="15.0" fill="rgb(217,149,53)" rx="2" ry="2" />
<text  x="1191.41" y="1887.5" ></text>
</g>
<g >
<title>page_frag_free (17 samples, 0.29%)</title><rect x="1081.7" y="1861" width="3.4" height="15.0" fill="rgb(213,223,54)" rx="2" ry="2" />
<text  x="1084.75" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (5 samples, 0.08%)</title><rect x="178.5" y="2021" width="1.0" height="15.0" fill="rgb(241,225,24)" rx="2" ry="2" />
<text  x="181.46" y="2031.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (5 samples, 0.08%)</title><rect x="656.1" y="1909" width="1.0" height="15.0" fill="rgb(218,210,23)" rx="2" ry="2" />
<text  x="659.12" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (13 samples, 0.22%)</title><rect x="11.2" y="1829" width="2.6" height="15.0" fill="rgb(209,43,11)" rx="2" ry="2" />
<text  x="14.20" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="693.8" y="1957" width="0.6" height="15.0" fill="rgb(209,74,39)" rx="2" ry="2" />
<text  x="696.80" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="832.2" y="1637" width="0.2" height="15.0" fill="rgb(206,20,21)" rx="2" ry="2" />
<text  x="835.15" y="1647.5" ></text>
</g>
<g >
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="314.2" y="1653" width="1.0" height="15.0" fill="rgb(206,154,45)" rx="2" ry="2" />
<text  x="317.22" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1108.9" y="1685" width="0.2" height="15.0" fill="rgb(240,223,42)" rx="2" ry="2" />
<text  x="1111.86" y="1695.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="246.0" y="1925" width="0.2" height="15.0" fill="rgb(232,43,36)" rx="2" ry="2" />
<text  x="249.04" y="1935.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1174.8" y="1973" width="0.2" height="15.0" fill="rgb(214,72,6)" rx="2" ry="2" />
<text  x="1177.85" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1139.4" y="1861" width="0.2" height="15.0" fill="rgb(247,216,20)" rx="2" ry="2" />
<text  x="1142.36" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="396.4" y="1701" width="0.2" height="15.0" fill="rgb(249,183,11)" rx="2" ry="2" />
<text  x="399.36" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="983.9" y="1957" width="0.6" height="15.0" fill="rgb(219,73,46)" rx="2" ry="2" />
<text  x="986.86" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (127 samples, 2.15%)</title><rect x="869.2" y="2005" width="25.4" height="15.0" fill="rgb(229,104,42)" rx="2" ry="2" />
<text  x="872.23" y="2015.5" >f..</text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="689.8" y="1845" width="0.2" height="15.0" fill="rgb(233,217,19)" rx="2" ry="2" />
<text  x="692.81" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="853.5" y="1845" width="0.2" height="15.0" fill="rgb(217,211,46)" rx="2" ry="2" />
<text  x="856.48" y="1855.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (12 samples, 0.20%)</title><rect x="363.9" y="1957" width="2.4" height="15.0" fill="rgb(230,76,25)" rx="2" ry="2" />
<text  x="366.86" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="823.4" y="1701" width="0.2" height="15.0" fill="rgb(244,221,17)" rx="2" ry="2" />
<text  x="826.38" y="1711.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1146.1" y="1957" width="0.2" height="15.0" fill="rgb(247,204,11)" rx="2" ry="2" />
<text  x="1149.14" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="855.5" y="1941" width="0.2" height="15.0" fill="rgb(235,13,16)" rx="2" ry="2" />
<text  x="858.48" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="125.2" y="1989" width="0.2" height="15.0" fill="rgb(205,106,53)" rx="2" ry="2" />
<text  x="128.23" y="1999.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="392.2" y="1877" width="0.2" height="15.0" fill="rgb(249,208,51)" rx="2" ry="2" />
<text  x="395.17" y="1887.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (147 samples, 2.48%)</title><rect x="200.6" y="2037" width="29.3" height="15.0" fill="rgb(242,109,54)" rx="2" ry="2" />
<text  x="203.59" y="2047.5" >__..</text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="731.7" y="1685" width="0.2" height="15.0" fill="rgb(254,177,38)" rx="2" ry="2" />
<text  x="734.68" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="571.4" y="1717" width="0.2" height="15.0" fill="rgb(230,75,52)" rx="2" ry="2" />
<text  x="574.39" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="626.0" y="1989" width="1.2" height="15.0" fill="rgb(232,116,47)" rx="2" ry="2" />
<text  x="629.02" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="405.5" y="1717" width="0.2" height="15.0" fill="rgb(237,189,54)" rx="2" ry="2" />
<text  x="408.53" y="1727.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.10%)</title><rect x="667.3" y="1845" width="1.2" height="15.0" fill="rgb(221,210,17)" rx="2" ry="2" />
<text  x="670.28" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (2 samples, 0.03%)</title><rect x="619.6" y="2005" width="0.4" height="15.0" fill="rgb(218,53,25)" rx="2" ry="2" />
<text  x="622.64" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="917.9" y="1845" width="0.2" height="15.0" fill="rgb(249,140,43)" rx="2" ry="2" />
<text  x="920.88" y="1855.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1098.1" y="1861" width="0.2" height="15.0" fill="rgb(241,85,10)" rx="2" ry="2" />
<text  x="1101.10" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (10 samples, 0.17%)</title><rect x="15.8" y="1861" width="2.0" height="15.0" fill="rgb(242,20,30)" rx="2" ry="2" />
<text  x="18.78" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (1 samples, 0.02%)</title><rect x="177.7" y="2021" width="0.2" height="15.0" fill="rgb(252,151,17)" rx="2" ry="2" />
<text  x="180.66" y="2031.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (14 samples, 0.24%)</title><rect x="270.2" y="1845" width="2.8" height="15.0" fill="rgb(248,42,8)" rx="2" ry="2" />
<text  x="273.16" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="528.1" y="1925" width="1.4" height="15.0" fill="rgb(210,122,47)" rx="2" ry="2" />
<text  x="531.13" y="1935.5" ></text>
</g>
<g >
<title>folly::netops::close (4 samples, 0.07%)</title><rect x="854.7" y="1941" width="0.8" height="15.0" fill="rgb(214,82,10)" rx="2" ry="2" />
<text  x="857.68" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="917.9" y="1781" width="0.2" height="15.0" fill="rgb(213,40,34)" rx="2" ry="2" />
<text  x="920.88" y="1791.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="508.4" y="1717" width="0.2" height="15.0" fill="rgb(230,178,53)" rx="2" ry="2" />
<text  x="511.39" y="1727.5" ></text>
</g>
<g >
<title>ip_queue_xmit (132 samples, 2.23%)</title><rect x="775.3" y="1669" width="26.4" height="15.0" fill="rgb(238,217,31)" rx="2" ry="2" />
<text  x="778.34" y="1679.5" >i..</text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1182.0" y="1701" width="0.2" height="15.0" fill="rgb(222,142,7)" rx="2" ry="2" />
<text  x="1185.03" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="292.1" y="1621" width="1.2" height="15.0" fill="rgb(235,13,3)" rx="2" ry="2" />
<text  x="295.09" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="1166.3" y="2021" width="0.8" height="15.0" fill="rgb(230,225,28)" rx="2" ry="2" />
<text  x="1169.28" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="689.8" y="1813" width="0.2" height="15.0" fill="rgb(242,14,29)" rx="2" ry="2" />
<text  x="692.81" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="154.1" y="1701" width="0.2" height="15.0" fill="rgb(220,133,54)" rx="2" ry="2" />
<text  x="157.14" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="989.4" y="1621" width="0.2" height="15.0" fill="rgb(237,175,9)" rx="2" ry="2" />
<text  x="992.45" y="1631.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="832.2" y="1733" width="0.2" height="15.0" fill="rgb(251,139,5)" rx="2" ry="2" />
<text  x="835.15" y="1743.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="61.2" y="1861" width="0.2" height="15.0" fill="rgb(221,172,26)" rx="2" ry="2" />
<text  x="64.24" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="320.8" y="1813" width="0.6" height="15.0" fill="rgb(211,174,21)" rx="2" ry="2" />
<text  x="323.80" y="1823.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1148.7" y="1973" width="0.2" height="15.0" fill="rgb(252,132,7)" rx="2" ry="2" />
<text  x="1151.73" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="118.3" y="1813" width="0.2" height="15.0" fill="rgb(225,213,54)" rx="2" ry="2" />
<text  x="121.25" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="820.8" y="1605" width="0.2" height="15.0" fill="rgb(254,27,32)" rx="2" ry="2" />
<text  x="823.79" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="409.1" y="1717" width="0.2" height="15.0" fill="rgb(208,25,36)" rx="2" ry="2" />
<text  x="412.11" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="528.1" y="1909" width="1.4" height="15.0" fill="rgb(238,116,50)" rx="2" ry="2" />
<text  x="531.13" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="571.4" y="1813" width="0.2" height="15.0" fill="rgb(215,198,17)" rx="2" ry="2" />
<text  x="574.39" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1188.4" y="1957" width="0.8" height="15.0" fill="rgb(230,157,1)" rx="2" ry="2" />
<text  x="1191.41" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1128.8" y="1861" width="0.2" height="15.0" fill="rgb(252,59,50)" rx="2" ry="2" />
<text  x="1131.80" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (2 samples, 0.03%)</title><rect x="159.3" y="2021" width="0.4" height="15.0" fill="rgb(243,20,43)" rx="2" ry="2" />
<text  x="162.32" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1112.4" y="1701" width="0.4" height="15.0" fill="rgb(208,53,24)" rx="2" ry="2" />
<text  x="1115.45" y="1711.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="83.4" y="1957" width="0.2" height="15.0" fill="rgb(238,212,41)" rx="2" ry="2" />
<text  x="86.36" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="489.9" y="1909" width="0.2" height="15.0" fill="rgb(252,53,21)" rx="2" ry="2" />
<text  x="492.85" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (5 samples, 0.08%)</title><rect x="649.7" y="1989" width="1.0" height="15.0" fill="rgb(208,148,40)" rx="2" ry="2" />
<text  x="652.74" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (1 samples, 0.02%)</title><rect x="542.9" y="1973" width="0.2" height="15.0" fill="rgb(215,96,1)" rx="2" ry="2" />
<text  x="545.88" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="189.6" y="1877" width="0.4" height="15.0" fill="rgb(221,176,26)" rx="2" ry="2" />
<text  x="192.62" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="33.1" y="1973" width="0.4" height="15.0" fill="rgb(251,71,3)" rx="2" ry="2" />
<text  x="36.13" y="1983.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="312.6" y="1653" width="0.2" height="15.0" fill="rgb(213,89,34)" rx="2" ry="2" />
<text  x="315.63" y="1663.5" ></text>
</g>
<g >
<title>_copy_to_iter (11 samples, 0.19%)</title><rect x="1106.5" y="1909" width="2.2" height="15.0" fill="rgb(215,149,36)" rx="2" ry="2" />
<text  x="1109.47" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.72%)</title><rect x="99.1" y="1877" width="20.3" height="15.0" fill="rgb(230,78,21)" rx="2" ry="2" />
<text  x="102.11" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="102.7" y="37" width="0.2" height="15.0" fill="rgb(243,104,3)" rx="2" ry="2" />
<text  x="105.70" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="248.8" y="1685" width="0.2" height="15.0" fill="rgb(238,27,1)" rx="2" ry="2" />
<text  x="251.83" y="1695.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (44 samples, 0.74%)</title><rect x="1112.4" y="1781" width="8.8" height="15.0" fill="rgb(235,104,31)" rx="2" ry="2" />
<text  x="1115.45" y="1791.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="110.3" y="37" width="0.2" height="15.0" fill="rgb(253,199,1)" rx="2" ry="2" />
<text  x="113.28" y="47.5" ></text>
</g>
<g >
<title>numa_migrate_preferred (5 samples, 0.08%)</title><rect x="93.5" y="1941" width="1.0" height="15.0" fill="rgb(228,202,41)" rx="2" ry="2" />
<text  x="96.53" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="570.2" y="1989" width="0.2" height="15.0" fill="rgb(252,110,46)" rx="2" ry="2" />
<text  x="573.20" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="622.2" y="2005" width="0.4" height="15.0" fill="rgb(238,135,18)" rx="2" ry="2" />
<text  x="625.23" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="145.6" y="1877" width="0.2" height="15.0" fill="rgb(248,95,17)" rx="2" ry="2" />
<text  x="148.56" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="1179.0" y="2021" width="1.0" height="15.0" fill="rgb(217,68,32)" rx="2" ry="2" />
<text  x="1182.04" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="549.9" y="1941" width="0.2" height="15.0" fill="rgb(223,149,39)" rx="2" ry="2" />
<text  x="552.86" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1173.9" y="1957" width="0.2" height="15.0" fill="rgb(207,112,23)" rx="2" ry="2" />
<text  x="1176.85" y="1967.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="669.9" y="1605" width="0.2" height="15.0" fill="rgb(210,179,37)" rx="2" ry="2" />
<text  x="672.87" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="321.4" y="1813" width="0.6" height="15.0" fill="rgb(220,173,26)" rx="2" ry="2" />
<text  x="324.40" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="384.8" y="1925" width="0.8" height="15.0" fill="rgb(225,62,18)" rx="2" ry="2" />
<text  x="387.79" y="1935.5" ></text>
</g>
<g >
<title>inet_getname (3 samples, 0.05%)</title><rect x="665.5" y="1861" width="0.6" height="15.0" fill="rgb(227,156,9)" rx="2" ry="2" />
<text  x="668.49" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="882.4" y="1813" width="0.2" height="15.0" fill="rgb(205,165,24)" rx="2" ry="2" />
<text  x="885.39" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="931.4" y="1861" width="0.2" height="15.0" fill="rgb(242,45,8)" rx="2" ry="2" />
<text  x="934.43" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="248.8" y="1749" width="0.2" height="15.0" fill="rgb(247,10,29)" rx="2" ry="2" />
<text  x="251.83" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (2 samples, 0.03%)</title><rect x="158.9" y="2021" width="0.4" height="15.0" fill="rgb(217,49,47)" rx="2" ry="2" />
<text  x="161.92" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1108.9" y="1653" width="0.2" height="15.0" fill="rgb(232,3,33)" rx="2" ry="2" />
<text  x="1111.86" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="530.9" y="1749" width="0.2" height="15.0" fill="rgb(214,77,38)" rx="2" ry="2" />
<text  x="533.92" y="1759.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="669.9" y="1573" width="0.2" height="15.0" fill="rgb(239,68,34)" rx="2" ry="2" />
<text  x="672.87" y="1583.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (2 samples, 0.03%)</title><rect x="1008.6" y="1973" width="0.4" height="15.0" fill="rgb(223,216,35)" rx="2" ry="2" />
<text  x="1011.58" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="953.6" y="2005" width="2.4" height="15.0" fill="rgb(244,117,31)" rx="2" ry="2" />
<text  x="956.56" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="570.8" y="1989" width="1.2" height="15.0" fill="rgb(245,150,31)" rx="2" ry="2" />
<text  x="573.79" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="615.5" y="2021" width="0.1" height="15.0" fill="rgb(218,95,41)" rx="2" ry="2" />
<text  x="618.45" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="951.6" y="2005" width="0.2" height="15.0" fill="rgb(208,224,48)" rx="2" ry="2" />
<text  x="954.57" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1013" width="14.6" height="15.0" fill="rgb(235,195,35)" rx="2" ry="2" />
<text  x="103.11" y="1023.5" ></text>
</g>
<g >
<title>ksize (15 samples, 0.25%)</title><rect x="764.6" y="1701" width="3.0" height="15.0" fill="rgb(240,174,38)" rx="2" ry="2" />
<text  x="767.57" y="1711.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="682.8" y="1861" width="0.8" height="15.0" fill="rgb(248,49,43)" rx="2" ry="2" />
<text  x="685.83" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.07%)</title><rect x="612.9" y="2005" width="0.8" height="15.0" fill="rgb(243,126,43)" rx="2" ry="2" />
<text  x="615.86" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (1 samples, 0.02%)</title><rect x="23.6" y="2037" width="0.2" height="15.0" fill="rgb(209,50,51)" rx="2" ry="2" />
<text  x="26.56" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="85.6" y="1957" width="0.2" height="15.0" fill="rgb(210,63,7)" rx="2" ry="2" />
<text  x="88.56" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="654.7" y="1973" width="0.2" height="15.0" fill="rgb(244,29,42)" rx="2" ry="2" />
<text  x="657.72" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="742.6" y="1749" width="0.2" height="15.0" fill="rgb(206,228,3)" rx="2" ry="2" />
<text  x="745.64" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="499.8" y="1797" width="0.4" height="15.0" fill="rgb(221,98,37)" rx="2" ry="2" />
<text  x="502.82" y="1807.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="56.1" y="1909" width="0.4" height="15.0" fill="rgb(228,97,30)" rx="2" ry="2" />
<text  x="59.05" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="1146.5" y="1957" width="0.2" height="15.0" fill="rgb(223,195,38)" rx="2" ry="2" />
<text  x="1149.54" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="461.5" y="1845" width="0.2" height="15.0" fill="rgb(254,197,48)" rx="2" ry="2" />
<text  x="464.55" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="882.6" y="1909" width="0.6" height="15.0" fill="rgb(243,112,29)" rx="2" ry="2" />
<text  x="885.59" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="989.4" y="1797" width="0.2" height="15.0" fill="rgb(254,139,26)" rx="2" ry="2" />
<text  x="992.45" y="1807.5" ></text>
</g>
<g >
<title>sock_alloc (50 samples, 0.84%)</title><rect x="388.0" y="1957" width="10.0" height="15.0" fill="rgb(234,131,18)" rx="2" ry="2" />
<text  x="390.98" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (4 samples, 0.07%)</title><rect x="40.1" y="1989" width="0.8" height="15.0" fill="rgb(222,181,53)" rx="2" ry="2" />
<text  x="43.10" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1010.4" y="1973" width="0.2" height="15.0" fill="rgb(237,8,47)" rx="2" ry="2" />
<text  x="1013.38" y="1983.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="284.9" y="1813" width="0.2" height="15.0" fill="rgb(237,116,26)" rx="2" ry="2" />
<text  x="287.91" y="1823.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (12 samples, 0.20%)</title><rect x="15.4" y="2069" width="2.4" height="15.0" fill="rgb(239,131,5)" rx="2" ry="2" />
<text  x="18.38" y="2079.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.08%)</title><rect x="1023.3" y="2037" width="1.0" height="15.0" fill="rgb(235,177,19)" rx="2" ry="2" />
<text  x="1026.34" y="2047.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (5 samples, 0.08%)</title><rect x="86.2" y="1957" width="1.0" height="15.0" fill="rgb(253,140,13)" rx="2" ry="2" />
<text  x="89.15" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="893.4" y="1957" width="0.4" height="15.0" fill="rgb(208,21,45)" rx="2" ry="2" />
<text  x="896.36" y="1967.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="184.4" y="2021" width="0.6" height="15.0" fill="rgb(235,108,23)" rx="2" ry="2" />
<text  x="187.44" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (2 samples, 0.03%)</title><rect x="582.0" y="1909" width="0.4" height="15.0" fill="rgb(210,202,35)" rx="2" ry="2" />
<text  x="584.96" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="51.7" y="1909" width="0.4" height="15.0" fill="rgb(224,18,22)" rx="2" ry="2" />
<text  x="54.67" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="113.7" y="53" width="0.2" height="15.0" fill="rgb(217,115,44)" rx="2" ry="2" />
<text  x="116.67" y="63.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::deferredReader (1 samples, 0.02%)</title><rect x="160.5" y="2005" width="0.2" height="15.0" fill="rgb(243,103,15)" rx="2" ry="2" />
<text  x="163.52" y="2015.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1 samples, 0.02%)</title><rect x="1124.8" y="1765" width="0.2" height="15.0" fill="rgb(253,132,46)" rx="2" ry="2" />
<text  x="1127.81" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="464.5" y="1909" width="0.2" height="15.0" fill="rgb(227,75,18)" rx="2" ry="2" />
<text  x="467.54" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="114.1" y="213" width="0.2" height="15.0" fill="rgb(227,188,40)" rx="2" ry="2" />
<text  x="117.06" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="534.5" y="1957" width="0.6" height="15.0" fill="rgb(242,156,12)" rx="2" ry="2" />
<text  x="537.51" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="994.2" y="1957" width="0.2" height="15.0" fill="rgb(208,154,1)" rx="2" ry="2" />
<text  x="997.23" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="514.8" y="1957" width="0.2" height="15.0" fill="rgb(228,202,34)" rx="2" ry="2" />
<text  x="517.77" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (7 samples, 0.12%)</title><rect x="203.4" y="1957" width="1.4" height="15.0" fill="rgb(242,42,41)" rx="2" ry="2" />
<text  x="206.38" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="1146.3" y="1973" width="0.4" height="15.0" fill="rgb(251,24,11)" rx="2" ry="2" />
<text  x="1149.34" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.2" y="1973" width="0.2" height="15.0" fill="rgb(235,51,19)" rx="2" ry="2" />
<text  x="124.24" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (231 samples, 3.90%)</title><rect x="531.1" y="2021" width="46.1" height="15.0" fill="rgb(210,130,16)" rx="2" ry="2" />
<text  x="534.12" y="2031.5" >foll..</text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="802.0" y="1653" width="0.2" height="15.0" fill="rgb(220,185,52)" rx="2" ry="2" />
<text  x="805.05" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="569.0" y="2005" width="0.4" height="15.0" fill="rgb(252,117,39)" rx="2" ry="2" />
<text  x="572.00" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (113 samples, 1.91%)</title><rect x="98.7" y="1973" width="22.5" height="15.0" fill="rgb(232,110,20)" rx="2" ry="2" />
<text  x="101.71" y="1983.5" >[..</text>
</g>
<g >
<title>folly::RequestContext::setContext (17 samples, 0.29%)</title><rect x="144.2" y="1909" width="3.4" height="15.0" fill="rgb(205,215,27)" rx="2" ry="2" />
<text  x="147.17" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="556.8" y="1765" width="0.2" height="15.0" fill="rgb(235,206,44)" rx="2" ry="2" />
<text  x="559.84" y="1775.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="96.3" y="2021" width="0.2" height="15.0" fill="rgb(251,203,51)" rx="2" ry="2" />
<text  x="99.32" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="284.9" y="1461" width="0.2" height="15.0" fill="rgb(213,137,11)" rx="2" ry="2" />
<text  x="287.91" y="1471.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="114.1" y="53" width="0.2" height="15.0" fill="rgb(242,14,14)" rx="2" ry="2" />
<text  x="117.06" y="63.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="709.9" y="1861" width="0.2" height="15.0" fill="rgb(217,24,46)" rx="2" ry="2" />
<text  x="712.95" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="578.0" y="2021" width="0.2" height="15.0" fill="rgb(228,147,30)" rx="2" ry="2" />
<text  x="580.97" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="845.3" y="1845" width="0.2" height="15.0" fill="rgb(233,217,37)" rx="2" ry="2" />
<text  x="848.31" y="1855.5" ></text>
</g>
<g >
<title>mod_timer (31 samples, 0.52%)</title><rect x="323.8" y="1765" width="6.2" height="15.0" fill="rgb(234,27,45)" rx="2" ry="2" />
<text  x="326.79" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1002.8" y="1973" width="0.4" height="15.0" fill="rgb(230,54,13)" rx="2" ry="2" />
<text  x="1005.80" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="891.4" y="1861" width="0.2" height="15.0" fill="rgb(237,206,17)" rx="2" ry="2" />
<text  x="894.36" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (30 samples, 0.51%)</title><rect x="148.2" y="1925" width="5.9" height="15.0" fill="rgb(205,109,44)" rx="2" ry="2" />
<text  x="151.16" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="484.3" y="1973" width="0.2" height="15.0" fill="rgb(219,150,44)" rx="2" ry="2" />
<text  x="487.27" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="93.7" y="1781" width="0.8" height="15.0" fill="rgb(217,5,8)" rx="2" ry="2" />
<text  x="96.73" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="52.7" y="1877" width="0.2" height="15.0" fill="rgb(251,114,20)" rx="2" ry="2" />
<text  x="55.66" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (3 samples, 0.05%)</title><rect x="646.9" y="2021" width="0.6" height="15.0" fill="rgb(243,125,6)" rx="2" ry="2" />
<text  x="649.95" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="528.1" y="1941" width="1.4" height="15.0" fill="rgb(236,214,13)" rx="2" ry="2" />
<text  x="531.13" y="1951.5" ></text>
</g>
<g >
<title>native_sched_clock (2 samples, 0.03%)</title><rect x="1122.0" y="1877" width="0.4" height="15.0" fill="rgb(254,185,0)" rx="2" ry="2" />
<text  x="1125.02" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="832.2" y="1669" width="0.2" height="15.0" fill="rgb(223,200,6)" rx="2" ry="2" />
<text  x="835.15" y="1679.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.03%)</title><rect x="1142.2" y="1957" width="0.4" height="15.0" fill="rgb(240,217,53)" rx="2" ry="2" />
<text  x="1145.15" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="691.8" y="1669" width="0.2" height="15.0" fill="rgb(240,114,49)" rx="2" ry="2" />
<text  x="694.80" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.19%)</title><rect x="15.6" y="2037" width="2.2" height="15.0" fill="rgb(247,218,34)" rx="2" ry="2" />
<text  x="18.58" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="546.5" y="1829" width="0.2" height="15.0" fill="rgb(238,121,17)" rx="2" ry="2" />
<text  x="549.47" y="1839.5" ></text>
</g>
<g >
<title>__dentry_kill (66 samples, 1.12%)</title><rect x="726.7" y="1765" width="13.1" height="15.0" fill="rgb(237,148,44)" rx="2" ry="2" />
<text  x="729.69" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (106 samples, 1.79%)</title><rect x="488.3" y="2005" width="21.1" height="15.0" fill="rgb(208,8,6)" rx="2" ry="2" />
<text  x="491.26" y="2015.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (8 samples, 0.14%)</title><rect x="92.9" y="2053" width="1.6" height="15.0" fill="rgb(235,151,36)" rx="2" ry="2" />
<text  x="95.93" y="2063.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="892.4" y="1877" width="0.6" height="15.0" fill="rgb(240,126,19)" rx="2" ry="2" />
<text  x="895.36" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (8 samples, 0.14%)</title><rect x="382.6" y="1925" width="1.6" height="15.0" fill="rgb(218,166,13)" rx="2" ry="2" />
<text  x="385.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="894.2" y="1749" width="0.2" height="15.0" fill="rgb(224,142,26)" rx="2" ry="2" />
<text  x="897.15" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="508.4" y="1765" width="0.2" height="15.0" fill="rgb(251,130,42)" rx="2" ry="2" />
<text  x="511.39" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="658.1" y="1877" width="0.2" height="15.0" fill="rgb(247,114,11)" rx="2" ry="2" />
<text  x="661.11" y="1887.5" ></text>
</g>
<g >
<title>security_file_alloc (5 samples, 0.08%)</title><rect x="403.9" y="1909" width="1.0" height="15.0" fill="rgb(230,96,5)" rx="2" ry="2" />
<text  x="406.93" y="1919.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="1173.9" y="1637" width="0.2" height="15.0" fill="rgb(213,14,0)" rx="2" ry="2" />
<text  x="1176.85" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.55%)</title><rect x="99.3" y="1765" width="18.4" height="15.0" fill="rgb(246,152,27)" rx="2" ry="2" />
<text  x="102.31" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="405.5" y="1637" width="0.2" height="15.0" fill="rgb(244,49,50)" rx="2" ry="2" />
<text  x="408.53" y="1647.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1114.0" y="1477" width="0.2" height="15.0" fill="rgb(209,46,27)" rx="2" ry="2" />
<text  x="1117.04" y="1487.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="522.9" y="1989" width="0.2" height="15.0" fill="rgb(237,167,41)" rx="2" ry="2" />
<text  x="525.95" y="1999.5" ></text>
</g>
<g >
<title>__GI___getsockname (17 samples, 0.29%)</title><rect x="194.4" y="2037" width="3.4" height="15.0" fill="rgb(227,41,18)" rx="2" ry="2" />
<text  x="197.41" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="848.5" y="1909" width="0.4" height="15.0" fill="rgb(219,11,32)" rx="2" ry="2" />
<text  x="851.50" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="183.8" y="1861" width="0.4" height="15.0" fill="rgb(217,41,44)" rx="2" ry="2" />
<text  x="186.84" y="1871.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="709.9" y="1829" width="0.2" height="15.0" fill="rgb(205,228,21)" rx="2" ry="2" />
<text  x="712.95" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="576.2" y="1989" width="0.2" height="15.0" fill="rgb(223,225,20)" rx="2" ry="2" />
<text  x="579.18" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="547.3" y="1957" width="0.6" height="15.0" fill="rgb(210,124,25)" rx="2" ry="2" />
<text  x="550.27" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="951.8" y="2005" width="0.8" height="15.0" fill="rgb(226,36,50)" rx="2" ry="2" />
<text  x="954.77" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="133" width="14.0" height="15.0" fill="rgb(244,147,22)" rx="2" ry="2" />
<text  x="103.11" y="143.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="114.5" y="997" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="117.46" y="1007.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="474.9" y="1829" width="0.2" height="15.0" fill="rgb(248,42,38)" rx="2" ry="2" />
<text  x="477.90" y="1839.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r14 (1 samples, 0.02%)</title><rect x="412.9" y="1845" width="0.2" height="15.0" fill="rgb(246,220,46)" rx="2" ry="2" />
<text  x="415.90" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="548.3" y="1941" width="0.2" height="15.0" fill="rgb(225,85,26)" rx="2" ry="2" />
<text  x="551.27" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="801.1" y="1509" width="0.2" height="15.0" fill="rgb(246,45,16)" rx="2" ry="2" />
<text  x="804.05" y="1519.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="645.4" y="1893" width="0.2" height="15.0" fill="rgb(225,126,14)" rx="2" ry="2" />
<text  x="648.35" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.40 (1 samples, 0.02%)</title><rect x="1113.4" y="1525" width="0.2" height="15.0" fill="rgb(209,0,25)" rx="2" ry="2" />
<text  x="1116.45" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1301" width="15.4" height="15.0" fill="rgb(226,83,46)" rx="2" ry="2" />
<text  x="102.71" y="1311.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="854.5" y="1941" width="0.2" height="15.0" fill="rgb(250,51,3)" rx="2" ry="2" />
<text  x="857.48" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="969.1" y="1925" width="0.2" height="15.0" fill="rgb(226,24,52)" rx="2" ry="2" />
<text  x="972.11" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="683.6" y="1701" width="0.2" height="15.0" fill="rgb(252,180,15)" rx="2" ry="2" />
<text  x="686.63" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="722.5" y="1845" width="0.2" height="15.0" fill="rgb(254,23,13)" rx="2" ry="2" />
<text  x="725.51" y="1855.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="668.9" y="1877" width="0.2" height="15.0" fill="rgb(248,178,39)" rx="2" ry="2" />
<text  x="671.88" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="284.9" y="1653" width="0.2" height="15.0" fill="rgb(230,139,39)" rx="2" ry="2" />
<text  x="287.91" y="1663.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="865.8" y="1989" width="0.4" height="15.0" fill="rgb(245,211,23)" rx="2" ry="2" />
<text  x="868.84" y="1999.5" ></text>
</g>
<g >
<title>do_futex (18 samples, 0.30%)</title><rect x="10.4" y="1989" width="3.6" height="15.0" fill="rgb(246,112,24)" rx="2" ry="2" />
<text  x="13.40" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="140.6" y="1909" width="0.2" height="15.0" fill="rgb(243,26,28)" rx="2" ry="2" />
<text  x="143.58" y="1919.5" ></text>
</g>
<g >
<title>__fget (18 samples, 0.30%)</title><rect x="1125.4" y="1925" width="3.6" height="15.0" fill="rgb(226,12,10)" rx="2" ry="2" />
<text  x="1128.41" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.20%)</title><rect x="609.3" y="1893" width="2.4" height="15.0" fill="rgb(228,211,44)" rx="2" ry="2" />
<text  x="612.27" y="1903.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="807.0" y="1685" width="0.2" height="15.0" fill="rgb(216,174,49)" rx="2" ry="2" />
<text  x="810.03" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (14 samples, 0.24%)</title><rect x="885.2" y="1941" width="2.8" height="15.0" fill="rgb(205,143,47)" rx="2" ry="2" />
<text  x="888.18" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="53.5" y="1829" width="0.2" height="15.0" fill="rgb(207,175,5)" rx="2" ry="2" />
<text  x="56.46" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="862.1" y="1989" width="0.2" height="15.0" fill="rgb(234,127,45)" rx="2" ry="2" />
<text  x="865.06" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1189" width="14.6" height="15.0" fill="rgb(245,93,40)" rx="2" ry="2" />
<text  x="103.11" y="1199.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="93.7" y="1765" width="0.8" height="15.0" fill="rgb(254,180,0)" rx="2" ry="2" />
<text  x="96.73" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 1.20%)</title><rect x="100.1" y="629" width="14.2" height="15.0" fill="rgb(242,24,41)" rx="2" ry="2" />
<text  x="103.11" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="541.5" y="1893" width="0.2" height="15.0" fill="rgb(252,76,33)" rx="2" ry="2" />
<text  x="544.49" y="1903.5" ></text>
</g>
<g >
<title>import_iovec (10 samples, 0.17%)</title><rect x="248.6" y="1925" width="2.0" height="15.0" fill="rgb(231,227,15)" rx="2" ry="2" />
<text  x="251.63" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="883.0" y="1893" width="0.2" height="15.0" fill="rgb(206,164,42)" rx="2" ry="2" />
<text  x="885.99" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="55.5" y="1957" width="0.2" height="15.0" fill="rgb(254,129,41)" rx="2" ry="2" />
<text  x="58.45" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="381.4" y="1669" width="0.2" height="15.0" fill="rgb(211,225,13)" rx="2" ry="2" />
<text  x="384.40" y="1679.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (4 samples, 0.07%)</title><rect x="733.9" y="1653" width="0.8" height="15.0" fill="rgb(206,164,0)" rx="2" ry="2" />
<text  x="736.87" y="1663.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (3 samples, 0.05%)</title><rect x="163.3" y="1989" width="0.6" height="15.0" fill="rgb(248,201,45)" rx="2" ry="2" />
<text  x="166.31" y="1999.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="93.7" y="1861" width="0.8" height="15.0" fill="rgb(238,198,38)" rx="2" ry="2" />
<text  x="96.73" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1181.4" y="2005" width="0.2" height="15.0" fill="rgb(237,207,38)" rx="2" ry="2" />
<text  x="1184.43" y="2015.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (44 samples, 0.74%)</title><rect x="1112.4" y="1749" width="8.8" height="15.0" fill="rgb(208,202,54)" rx="2" ry="2" />
<text  x="1115.45" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="950.6" y="1925" width="0.2" height="15.0" fill="rgb(212,162,0)" rx="2" ry="2" />
<text  x="953.57" y="1935.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (22 samples, 0.37%)</title><rect x="404.9" y="1941" width="4.4" height="15.0" fill="rgb(246,119,5)" rx="2" ry="2" />
<text  x="407.93" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1108.9" y="1765" width="0.2" height="15.0" fill="rgb(205,65,20)" rx="2" ry="2" />
<text  x="1111.86" y="1775.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="322.4" y="1813" width="0.2" height="15.0" fill="rgb(216,30,10)" rx="2" ry="2" />
<text  x="325.39" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="626.0" y="2005" width="1.2" height="15.0" fill="rgb(230,213,50)" rx="2" ry="2" />
<text  x="629.02" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="135.6" y="1893" width="0.2" height="15.0" fill="rgb(234,3,10)" rx="2" ry="2" />
<text  x="138.60" y="1903.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="742.4" y="1797" width="0.2" height="15.0" fill="rgb(217,75,53)" rx="2" ry="2" />
<text  x="745.44" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="974.3" y="1797" width="0.2" height="15.0" fill="rgb(247,41,33)" rx="2" ry="2" />
<text  x="977.29" y="1807.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="291.7" y="1557" width="0.2" height="15.0" fill="rgb(219,142,48)" rx="2" ry="2" />
<text  x="294.69" y="1567.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="290.5" y="1573" width="0.2" height="15.0" fill="rgb(253,217,48)" rx="2" ry="2" />
<text  x="293.50" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="890.6" y="1845" width="0.2" height="15.0" fill="rgb(216,145,32)" rx="2" ry="2" />
<text  x="893.56" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (96 samples, 1.62%)</title><rect x="64.4" y="1989" width="19.2" height="15.0" fill="rgb(250,82,42)" rx="2" ry="2" />
<text  x="67.42" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="571.4" y="1669" width="0.2" height="15.0" fill="rgb(225,46,11)" rx="2" ry="2" />
<text  x="574.39" y="1679.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="545.9" y="1941" width="0.2" height="15.0" fill="rgb(209,74,0)" rx="2" ry="2" />
<text  x="548.87" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="189.6" y="1941" width="0.4" height="15.0" fill="rgb(247,89,27)" rx="2" ry="2" />
<text  x="192.62" y="1951.5" ></text>
</g>
<g >
<title>memcpy_erms (3 samples, 0.05%)</title><rect x="408.7" y="1925" width="0.6" height="15.0" fill="rgb(205,136,14)" rx="2" ry="2" />
<text  x="411.72" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="894.4" y="1941" width="0.2" height="15.0" fill="rgb(230,146,12)" rx="2" ry="2" />
<text  x="897.35" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (3 samples, 0.05%)</title><rect x="79.0" y="1925" width="0.6" height="15.0" fill="rgb(211,119,41)" rx="2" ry="2" />
<text  x="81.98" y="1935.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="896.9" y="1957" width="0.4" height="15.0" fill="rgb(212,196,50)" rx="2" ry="2" />
<text  x="899.94" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="783.7" y="1477" width="0.2" height="15.0" fill="rgb(226,112,22)" rx="2" ry="2" />
<text  x="786.71" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="329.8" y="1749" width="0.2" height="15.0" fill="rgb(206,194,38)" rx="2" ry="2" />
<text  x="332.77" y="1759.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="227.3" y="1605" width="0.2" height="15.0" fill="rgb(243,77,35)" rx="2" ry="2" />
<text  x="230.30" y="1615.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="190.2" y="1893" width="0.2" height="15.0" fill="rgb(234,24,37)" rx="2" ry="2" />
<text  x="193.22" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="890.6" y="1637" width="0.2" height="15.0" fill="rgb(239,131,8)" rx="2" ry="2" />
<text  x="893.56" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="508.4" y="1797" width="0.2" height="15.0" fill="rgb(247,226,50)" rx="2" ry="2" />
<text  x="511.39" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="952.2" y="1989" width="0.4" height="15.0" fill="rgb(224,78,50)" rx="2" ry="2" />
<text  x="955.17" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="320.2" y="1685" width="0.2" height="15.0" fill="rgb(244,85,2)" rx="2" ry="2" />
<text  x="323.20" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="290.9" y="1525" width="0.8" height="15.0" fill="rgb(230,172,7)" rx="2" ry="2" />
<text  x="293.90" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="276.7" y="1797" width="0.2" height="15.0" fill="rgb(209,185,42)" rx="2" ry="2" />
<text  x="279.74" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (2 samples, 0.03%)</title><rect x="694.0" y="1509" width="0.4" height="15.0" fill="rgb(237,109,52)" rx="2" ry="2" />
<text  x="697.00" y="1519.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (4 samples, 0.07%)</title><rect x="129.6" y="1957" width="0.8" height="15.0" fill="rgb(231,105,4)" rx="2" ry="2" />
<text  x="132.61" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="396.4" y="1733" width="0.2" height="15.0" fill="rgb(212,159,11)" rx="2" ry="2" />
<text  x="399.36" y="1743.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="291.5" y="1349" width="0.2" height="15.0" fill="rgb(241,219,47)" rx="2" ry="2" />
<text  x="294.49" y="1359.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (27 samples, 0.46%)</title><rect x="979.1" y="1989" width="5.4" height="15.0" fill="rgb(214,83,14)" rx="2" ry="2" />
<text  x="982.08" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="922.7" y="1989" width="0.2" height="15.0" fill="rgb(232,227,52)" rx="2" ry="2" />
<text  x="925.66" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="228.1" y="1845" width="0.2" height="15.0" fill="rgb(238,192,27)" rx="2" ry="2" />
<text  x="231.10" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="286.7" y="1781" width="0.2" height="15.0" fill="rgb(247,205,31)" rx="2" ry="2" />
<text  x="289.71" y="1791.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="963.1" y="2021" width="0.4" height="15.0" fill="rgb(214,108,11)" rx="2" ry="2" />
<text  x="966.13" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (8 samples, 0.14%)</title><rect x="847.9" y="1925" width="1.6" height="15.0" fill="rgb(209,137,5)" rx="2" ry="2" />
<text  x="850.90" y="1935.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="830.2" y="1781" width="0.2" height="15.0" fill="rgb(241,208,9)" rx="2" ry="2" />
<text  x="833.16" y="1791.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (28 samples, 0.47%)</title><rect x="1130.4" y="2037" width="5.6" height="15.0" fill="rgb(245,206,3)" rx="2" ry="2" />
<text  x="1133.39" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (3 samples, 0.05%)</title><rect x="525.9" y="1941" width="0.6" height="15.0" fill="rgb(211,77,51)" rx="2" ry="2" />
<text  x="528.94" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1013.8" y="1941" width="0.2" height="15.0" fill="rgb(247,83,37)" rx="2" ry="2" />
<text  x="1016.77" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (2 samples, 0.03%)</title><rect x="91.1" y="2021" width="0.4" height="15.0" fill="rgb(206,94,29)" rx="2" ry="2" />
<text  x="94.14" y="2031.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="386.4" y="1957" width="0.8" height="15.0" fill="rgb(245,9,2)" rx="2" ry="2" />
<text  x="389.39" y="1967.5" ></text>
</g>
<g >
<title>ip_send_check (13 samples, 0.22%)</title><rect x="777.1" y="1621" width="2.6" height="15.0" fill="rgb(245,48,50)" rx="2" ry="2" />
<text  x="780.13" y="1631.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (2 samples, 0.03%)</title><rect x="642.8" y="1989" width="0.4" height="15.0" fill="rgb(229,45,45)" rx="2" ry="2" />
<text  x="645.76" y="1999.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="740.8" y="1765" width="0.2" height="15.0" fill="rgb(216,211,14)" rx="2" ry="2" />
<text  x="743.85" y="1775.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="509.6" y="2037" width="0.2" height="15.0" fill="rgb(219,227,47)" rx="2" ry="2" />
<text  x="512.59" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (56 samples, 0.95%)</title><rect x="627.2" y="2037" width="11.2" height="15.0" fill="rgb(214,37,9)" rx="2" ry="2" />
<text  x="630.21" y="2047.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="830.2" y="1813" width="0.2" height="15.0" fill="rgb(235,207,11)" rx="2" ry="2" />
<text  x="833.16" y="1823.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="768.0" y="1701" width="0.2" height="15.0" fill="rgb(245,4,34)" rx="2" ry="2" />
<text  x="770.96" y="1711.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="865.6" y="1989" width="0.2" height="15.0" fill="rgb(227,136,47)" rx="2" ry="2" />
<text  x="868.64" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="67.4" y="1893" width="1.0" height="15.0" fill="rgb(242,28,45)" rx="2" ry="2" />
<text  x="70.42" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="131.0" y="1973" width="0.2" height="15.0" fill="rgb(229,34,16)" rx="2" ry="2" />
<text  x="134.01" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (13 samples, 0.22%)</title><rect x="655.5" y="1941" width="2.6" height="15.0" fill="rgb(253,84,21)" rx="2" ry="2" />
<text  x="658.52" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="924.5" y="1925" width="0.2" height="15.0" fill="rgb(221,97,38)" rx="2" ry="2" />
<text  x="927.46" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="530.9" y="1829" width="0.2" height="15.0" fill="rgb(216,91,18)" rx="2" ry="2" />
<text  x="533.92" y="1839.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="70.0" y="1877" width="0.2" height="15.0" fill="rgb(208,190,22)" rx="2" ry="2" />
<text  x="73.01" y="1887.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="294.1" y="1701" width="0.2" height="15.0" fill="rgb(218,37,44)" rx="2" ry="2" />
<text  x="297.09" y="1711.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="798.5" y="1541" width="0.2" height="15.0" fill="rgb(205,51,9)" rx="2" ry="2" />
<text  x="801.46" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (90 samples, 1.52%)</title><rect x="976.7" y="2005" width="17.9" height="15.0" fill="rgb(239,191,43)" rx="2" ry="2" />
<text  x="979.69" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.90%)</title><rect x="550.7" y="1973" width="10.5" height="15.0" fill="rgb(229,220,27)" rx="2" ry="2" />
<text  x="553.66" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="286.7" y="1797" width="0.2" height="15.0" fill="rgb(238,107,34)" rx="2" ry="2" />
<text  x="289.71" y="1807.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="62.0" y="1893" width="0.6" height="15.0" fill="rgb(222,113,50)" rx="2" ry="2" />
<text  x="65.03" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="627.0" y="1973" width="0.2" height="15.0" fill="rgb(214,69,53)" rx="2" ry="2" />
<text  x="630.01" y="1983.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="754.4" y="1733" width="0.4" height="15.0" fill="rgb(216,69,37)" rx="2" ry="2" />
<text  x="757.40" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="228.1" y="1861" width="0.2" height="15.0" fill="rgb(207,29,3)" rx="2" ry="2" />
<text  x="231.10" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="763.2" y="1525" width="0.2" height="15.0" fill="rgb(246,156,5)" rx="2" ry="2" />
<text  x="766.17" y="1535.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="290.5" y="1637" width="0.2" height="15.0" fill="rgb(210,179,16)" rx="2" ry="2" />
<text  x="293.50" y="1647.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="290.3" y="1637" width="0.2" height="15.0" fill="rgb(254,72,27)" rx="2" ry="2" />
<text  x="293.30" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="104.7" y="37" width="0.8" height="15.0" fill="rgb(210,142,37)" rx="2" ry="2" />
<text  x="107.70" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="132.8" y="1989" width="0.2" height="15.0" fill="rgb(246,176,32)" rx="2" ry="2" />
<text  x="135.80" y="1999.5" ></text>
</g>
<g >
<title>down_write (9 samples, 0.15%)</title><rect x="744.6" y="1765" width="1.8" height="15.0" fill="rgb(245,35,10)" rx="2" ry="2" />
<text  x="747.63" y="1775.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="287.9" y="1749" width="0.2" height="15.0" fill="rgb(250,1,7)" rx="2" ry="2" />
<text  x="290.91" y="1759.5" ></text>
</g>
<g >
<title>dput.part.26 (79 samples, 1.33%)</title><rect x="725.9" y="1781" width="15.7" height="15.0" fill="rgb(238,206,12)" rx="2" ry="2" />
<text  x="728.89" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="673.1" y="1861" width="0.2" height="15.0" fill="rgb(243,55,41)" rx="2" ry="2" />
<text  x="676.06" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="509.2" y="1893" width="0.2" height="15.0" fill="rgb(229,158,20)" rx="2" ry="2" />
<text  x="512.19" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (7 samples, 0.12%)</title><rect x="537.3" y="1957" width="1.4" height="15.0" fill="rgb(225,194,31)" rx="2" ry="2" />
<text  x="540.30" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="957.7" y="1909" width="0.2" height="15.0" fill="rgb(237,105,22)" rx="2" ry="2" />
<text  x="960.75" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1173.9" y="1573" width="0.2" height="15.0" fill="rgb(208,111,15)" rx="2" ry="2" />
<text  x="1176.85" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="33.1" y="1989" width="0.4" height="15.0" fill="rgb(251,225,48)" rx="2" ry="2" />
<text  x="36.13" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (10 samples, 0.17%)</title><rect x="68.4" y="1909" width="2.0" height="15.0" fill="rgb(242,58,51)" rx="2" ry="2" />
<text  x="71.41" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="891.4" y="1829" width="0.2" height="15.0" fill="rgb(219,102,51)" rx="2" ry="2" />
<text  x="894.36" y="1839.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="236.5" y="1877" width="0.2" height="15.0" fill="rgb(217,108,39)" rx="2" ry="2" />
<text  x="239.47" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (30 samples, 0.51%)</title><rect x="1113.8" y="1509" width="6.0" height="15.0" fill="rgb(222,83,3)" rx="2" ry="2" />
<text  x="1116.85" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="227.3" y="1941" width="0.2" height="15.0" fill="rgb(229,118,27)" rx="2" ry="2" />
<text  x="230.30" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="68.0" y="1829" width="0.2" height="15.0" fill="rgb(248,211,52)" rx="2" ry="2" />
<text  x="71.01" y="1839.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="637.8" y="1989" width="0.4" height="15.0" fill="rgb(248,186,40)" rx="2" ry="2" />
<text  x="640.78" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="878.4" y="1653" width="0.2" height="15.0" fill="rgb(227,208,48)" rx="2" ry="2" />
<text  x="881.40" y="1663.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="99.5" y="1429" width="0.2" height="15.0" fill="rgb(214,114,41)" rx="2" ry="2" />
<text  x="102.51" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="632.6" y="1909" width="0.2" height="15.0" fill="rgb(215,151,6)" rx="2" ry="2" />
<text  x="635.60" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="649.7" y="2021" width="1.4" height="15.0" fill="rgb(247,64,47)" rx="2" ry="2" />
<text  x="652.74" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="227.3" y="1797" width="0.2" height="15.0" fill="rgb(251,60,20)" rx="2" ry="2" />
<text  x="230.30" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="190.2" y="1989" width="0.2" height="15.0" fill="rgb(249,51,17)" rx="2" ry="2" />
<text  x="193.22" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="694.0" y="1861" width="0.4" height="15.0" fill="rgb(237,31,28)" rx="2" ry="2" />
<text  x="697.00" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="110.7" y="37" width="0.2" height="15.0" fill="rgb(227,111,31)" rx="2" ry="2" />
<text  x="113.68" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="989.4" y="1717" width="0.2" height="15.0" fill="rgb(221,88,43)" rx="2" ry="2" />
<text  x="992.45" y="1727.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="917.9" y="1733" width="0.2" height="15.0" fill="rgb(210,74,40)" rx="2" ry="2" />
<text  x="920.88" y="1743.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.08%)</title><rect x="93.5" y="2037" width="1.0" height="15.0" fill="rgb(233,85,32)" rx="2" ry="2" />
<text  x="96.53" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="883.6" y="1877" width="0.2" height="15.0" fill="rgb(226,9,54)" rx="2" ry="2" />
<text  x="886.59" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="33.3" y="1941" width="0.2" height="15.0" fill="rgb(240,134,28)" rx="2" ry="2" />
<text  x="36.32" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (13 samples, 0.22%)</title><rect x="1145.7" y="2005" width="2.6" height="15.0" fill="rgb(254,14,4)" rx="2" ry="2" />
<text  x="1148.74" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="396.4" y="1685" width="0.2" height="15.0" fill="rgb(235,28,51)" rx="2" ry="2" />
<text  x="399.36" y="1695.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (8 samples, 0.14%)</title><rect x="964.3" y="2021" width="1.6" height="15.0" fill="rgb(211,210,3)" rx="2" ry="2" />
<text  x="967.33" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="33.3" y="1909" width="0.2" height="15.0" fill="rgb(222,68,5)" rx="2" ry="2" />
<text  x="36.32" y="1919.5" ></text>
</g>
<g >
<title>iput (2 samples, 0.03%)</title><rect x="739.5" y="1749" width="0.3" height="15.0" fill="rgb(252,42,1)" rx="2" ry="2" />
<text  x="742.45" y="1759.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="667.1" y="1829" width="0.2" height="15.0" fill="rgb(223,218,48)" rx="2" ry="2" />
<text  x="670.08" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="14.6" y="1909" width="0.8" height="15.0" fill="rgb(219,209,38)" rx="2" ry="2" />
<text  x="17.59" y="1919.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="100.3" y="37" width="0.2" height="15.0" fill="rgb(215,44,49)" rx="2" ry="2" />
<text  x="103.31" y="47.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="691.4" y="1541" width="0.2" height="15.0" fill="rgb(223,20,46)" rx="2" ry="2" />
<text  x="694.41" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="847.5" y="1749" width="0.2" height="15.0" fill="rgb(236,171,25)" rx="2" ry="2" />
<text  x="850.50" y="1759.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="920.7" y="1909" width="0.2" height="15.0" fill="rgb(209,136,21)" rx="2" ry="2" />
<text  x="923.67" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (1 samples, 0.02%)</title><rect x="177.5" y="2021" width="0.2" height="15.0" fill="rgb(230,162,52)" rx="2" ry="2" />
<text  x="180.46" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="221.3" y="1813" width="0.4" height="15.0" fill="rgb(248,194,24)" rx="2" ry="2" />
<text  x="224.32" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1003.6" y="1973" width="0.2" height="15.0" fill="rgb(248,99,40)" rx="2" ry="2" />
<text  x="1006.60" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="490.5" y="1941" width="0.2" height="15.0" fill="rgb(205,10,37)" rx="2" ry="2" />
<text  x="493.45" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="67.6" y="1845" width="0.6" height="15.0" fill="rgb(232,154,12)" rx="2" ry="2" />
<text  x="70.61" y="1855.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (229 samples, 3.87%)</title><rect x="767.8" y="1717" width="45.6" height="15.0" fill="rgb(240,221,1)" rx="2" ry="2" />
<text  x="770.76" y="1727.5" >__tc..</text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (2 samples, 0.03%)</title><rect x="967.1" y="2037" width="0.4" height="15.0" fill="rgb(244,170,52)" rx="2" ry="2" />
<text  x="970.12" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="114.1" y="165" width="0.2" height="15.0" fill="rgb(244,1,16)" rx="2" ry="2" />
<text  x="117.06" y="175.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="224.5" y="1909" width="1.8" height="15.0" fill="rgb(245,105,4)" rx="2" ry="2" />
<text  x="227.51" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1182.6" y="2005" width="0.2" height="15.0" fill="rgb(209,14,4)" rx="2" ry="2" />
<text  x="1185.62" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="682.8" y="1845" width="0.8" height="15.0" fill="rgb(253,101,52)" rx="2" ry="2" />
<text  x="685.83" y="1855.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="15.6" y="1877" width="0.2" height="15.0" fill="rgb(217,206,47)" rx="2" ry="2" />
<text  x="18.58" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (8 samples, 0.14%)</title><rect x="527.9" y="2037" width="1.6" height="15.0" fill="rgb(251,41,4)" rx="2" ry="2" />
<text  x="530.93" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="77.4" y="1733" width="0.2" height="15.0" fill="rgb(244,118,37)" rx="2" ry="2" />
<text  x="80.38" y="1743.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="295.5" y="1701" width="0.4" height="15.0" fill="rgb(252,76,53)" rx="2" ry="2" />
<text  x="298.48" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="135.4" y="1893" width="0.2" height="15.0" fill="rgb(207,46,19)" rx="2" ry="2" />
<text  x="138.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_sendmsg (424 samples, 7.16%)</title><rect x="251.6" y="1909" width="84.5" height="15.0" fill="rgb(221,65,37)" rx="2" ry="2" />
<text  x="254.62" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="610.1" y="1765" width="0.2" height="15.0" fill="rgb(226,50,35)" rx="2" ry="2" />
<text  x="613.07" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="382.2" y="1877" width="0.4" height="15.0" fill="rgb(211,128,44)" rx="2" ry="2" />
<text  x="385.20" y="1887.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="76.0" y="1829" width="0.2" height="15.0" fill="rgb(209,36,36)" rx="2" ry="2" />
<text  x="78.99" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="381.2" y="1813" width="0.4" height="15.0" fill="rgb(236,89,25)" rx="2" ry="2" />
<text  x="384.20" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (132 samples, 2.23%)</title><rect x="98.5" y="2005" width="26.3" height="15.0" fill="rgb(231,80,49)" rx="2" ry="2" />
<text  x="101.51" y="2015.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="1002.6" y="1989" width="0.6" height="15.0" fill="rgb(216,83,32)" rx="2" ry="2" />
<text  x="1005.60" y="1999.5" ></text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="295.5" y="1685" width="0.4" height="15.0" fill="rgb(206,72,26)" rx="2" ry="2" />
<text  x="298.48" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(236,30,23)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="933.8" y="1877" width="0.2" height="15.0" fill="rgb(238,134,44)" rx="2" ry="2" />
<text  x="936.82" y="1887.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="984.9" y="1925" width="0.2" height="15.0" fill="rgb(239,121,8)" rx="2" ry="2" />
<text  x="987.86" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="246.2" y="1861" width="0.2" height="15.0" fill="rgb(251,79,13)" rx="2" ry="2" />
<text  x="249.24" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="890.6" y="1797" width="0.2" height="15.0" fill="rgb(240,165,48)" rx="2" ry="2" />
<text  x="893.56" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="861.1" y="1989" width="0.4" height="15.0" fill="rgb(239,141,23)" rx="2" ry="2" />
<text  x="864.06" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (5 samples, 0.08%)</title><rect x="292.3" y="1525" width="1.0" height="15.0" fill="rgb(227,217,41)" rx="2" ry="2" />
<text  x="295.29" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="325" width="14.0" height="15.0" fill="rgb(214,41,11)" rx="2" ry="2" />
<text  x="103.11" y="335.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="335.4" y="1845" width="0.2" height="15.0" fill="rgb(252,148,31)" rx="2" ry="2" />
<text  x="338.35" y="1855.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="691.4" y="1573" width="0.2" height="15.0" fill="rgb(224,123,39)" rx="2" ry="2" />
<text  x="694.41" y="1583.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (7 samples, 0.12%)</title><rect x="296.7" y="1669" width="1.4" height="15.0" fill="rgb(233,61,13)" rx="2" ry="2" />
<text  x="299.68" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="645.4" y="1973" width="0.2" height="15.0" fill="rgb(253,99,24)" rx="2" ry="2" />
<text  x="648.35" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1173.9" y="1845" width="0.2" height="15.0" fill="rgb(218,141,40)" rx="2" ry="2" />
<text  x="1176.85" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="906.9" y="2021" width="0.4" height="15.0" fill="rgb(232,150,7)" rx="2" ry="2" />
<text  x="909.91" y="2031.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="899.9" y="2005" width="0.4" height="15.0" fill="rgb(253,15,23)" rx="2" ry="2" />
<text  x="902.93" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="825.4" y="1701" width="0.2" height="15.0" fill="rgb(233,90,50)" rx="2" ry="2" />
<text  x="828.37" y="1711.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="845.5" y="1877" width="0.2" height="15.0" fill="rgb(232,119,1)" rx="2" ry="2" />
<text  x="848.51" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::operator!= (1 samples, 0.02%)</title><rect x="138.6" y="1861" width="0.2" height="15.0" fill="rgb(239,102,30)" rx="2" ry="2" />
<text  x="141.59" y="1871.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.05%)</title><rect x="866.6" y="1989" width="0.6" height="15.0" fill="rgb(224,76,14)" rx="2" ry="2" />
<text  x="869.64" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="692.0" y="1893" width="0.2" height="15.0" fill="rgb(216,36,52)" rx="2" ry="2" />
<text  x="695.00" y="1903.5" ></text>
</g>
<g >
<title>process_backlog (6 samples, 0.10%)</title><rect x="292.1" y="1653" width="1.2" height="15.0" fill="rgb(247,18,35)" rx="2" ry="2" />
<text  x="295.09" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="61.8" y="1909" width="0.8" height="15.0" fill="rgb(212,163,42)" rx="2" ry="2" />
<text  x="64.83" y="1919.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="248.8" y="1621" width="0.2" height="15.0" fill="rgb(229,223,13)" rx="2" ry="2" />
<text  x="251.83" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (3 samples, 0.05%)</title><rect x="846.5" y="1909" width="0.6" height="15.0" fill="rgb(230,203,46)" rx="2" ry="2" />
<text  x="849.51" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="751.2" y="1573" width="0.2" height="15.0" fill="rgb(248,40,36)" rx="2" ry="2" />
<text  x="754.21" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (77 samples, 1.30%)</title><rect x="583.2" y="1909" width="15.3" height="15.0" fill="rgb(214,7,41)" rx="2" ry="2" />
<text  x="586.15" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="58.0" y="1941" width="1.4" height="15.0" fill="rgb(225,122,32)" rx="2" ry="2" />
<text  x="61.05" y="1951.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="157.9" y="1845" width="0.2" height="15.0" fill="rgb(223,29,20)" rx="2" ry="2" />
<text  x="160.92" y="1855.5" ></text>
</g>
<g >
<title>sys_accept4 (2 samples, 0.03%)</title><rect x="414.1" y="2005" width="0.4" height="15.0" fill="rgb(243,200,22)" rx="2" ry="2" />
<text  x="417.10" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="878.4" y="1733" width="0.2" height="15.0" fill="rgb(220,174,46)" rx="2" ry="2" />
<text  x="881.40" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="1000.8" y="1973" width="0.6" height="15.0" fill="rgb(227,153,38)" rx="2" ry="2" />
<text  x="1003.81" y="1983.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="185.2" y="2021" width="0.2" height="15.0" fill="rgb(226,42,42)" rx="2" ry="2" />
<text  x="188.24" y="2031.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="508.4" y="1733" width="0.2" height="15.0" fill="rgb(242,201,46)" rx="2" ry="2" />
<text  x="511.39" y="1743.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="767.6" y="1717" width="0.2" height="15.0" fill="rgb(232,197,2)" rx="2" ry="2" />
<text  x="770.56" y="1727.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="337.5" y="1877" width="0.2" height="15.0" fill="rgb(241,30,44)" rx="2" ry="2" />
<text  x="340.55" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="969.1" y="2021" width="0.2" height="15.0" fill="rgb(208,209,47)" rx="2" ry="2" />
<text  x="972.11" y="2031.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="530.9" y="1733" width="0.2" height="15.0" fill="rgb(241,17,40)" rx="2" ry="2" />
<text  x="533.92" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="548.3" y="1861" width="0.2" height="15.0" fill="rgb(248,142,51)" rx="2" ry="2" />
<text  x="551.27" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="921.5" y="2005" width="0.8" height="15.0" fill="rgb(245,131,6)" rx="2" ry="2" />
<text  x="924.46" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="112.1" y="37" width="0.4" height="15.0" fill="rgb(217,76,23)" rx="2" ry="2" />
<text  x="115.07" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="728.1" y="1717" width="0.2" height="15.0" fill="rgb(229,159,40)" rx="2" ry="2" />
<text  x="731.09" y="1727.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="1142.6" y="1989" width="0.2" height="15.0" fill="rgb(216,14,50)" rx="2" ry="2" />
<text  x="1145.55" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (12 samples, 0.20%)</title><rect x="655.5" y="1925" width="2.4" height="15.0" fill="rgb(237,67,37)" rx="2" ry="2" />
<text  x="658.52" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="135.6" y="1925" width="0.4" height="15.0" fill="rgb(208,170,4)" rx="2" ry="2" />
<text  x="138.60" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="342.1" y="1941" width="0.4" height="15.0" fill="rgb(222,115,25)" rx="2" ry="2" />
<text  x="345.13" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="77.4" y="1829" width="0.2" height="15.0" fill="rgb(217,160,21)" rx="2" ry="2" />
<text  x="80.38" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="645.4" y="1877" width="0.2" height="15.0" fill="rgb(211,209,42)" rx="2" ry="2" />
<text  x="648.35" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="905.9" y="2021" width="0.6" height="15.0" fill="rgb(226,63,16)" rx="2" ry="2" />
<text  x="908.91" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="546.5" y="1717" width="0.2" height="15.0" fill="rgb(220,29,31)" rx="2" ry="2" />
<text  x="549.47" y="1727.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="340.7" y="2005" width="0.2" height="15.0" fill="rgb(245,179,48)" rx="2" ry="2" />
<text  x="343.73" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1093.1" y="1925" width="0.4" height="15.0" fill="rgb(232,84,27)" rx="2" ry="2" />
<text  x="1096.11" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="63.8" y="1973" width="0.4" height="15.0" fill="rgb(245,125,38)" rx="2" ry="2" />
<text  x="66.83" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="171.1" y="1941" width="0.2" height="15.0" fill="rgb(220,95,16)" rx="2" ry="2" />
<text  x="174.08" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (9 samples, 0.15%)</title><rect x="198.4" y="2021" width="1.8" height="15.0" fill="rgb(236,58,11)" rx="2" ry="2" />
<text  x="201.39" y="2031.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="891.4" y="1781" width="0.2" height="15.0" fill="rgb(227,107,25)" rx="2" ry="2" />
<text  x="894.36" y="1791.5" ></text>
</g>
<g >
<title>move_addr_to_user (3 samples, 0.05%)</title><rect x="666.1" y="1861" width="0.6" height="15.0" fill="rgb(244,88,14)" rx="2" ry="2" />
<text  x="669.09" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="456.6" y="1877" width="0.2" height="15.0" fill="rgb(205,51,31)" rx="2" ry="2" />
<text  x="459.56" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="920.7" y="1941" width="0.2" height="15.0" fill="rgb(215,153,37)" rx="2" ry="2" />
<text  x="923.67" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1182.0" y="1845" width="0.2" height="15.0" fill="rgb(234,12,6)" rx="2" ry="2" />
<text  x="1185.03" y="1855.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="459.6" y="1893" width="0.2" height="15.0" fill="rgb(221,61,3)" rx="2" ry="2" />
<text  x="462.55" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="508.4" y="1877" width="0.2" height="15.0" fill="rgb(227,116,47)" rx="2" ry="2" />
<text  x="511.39" y="1887.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect x="34.5" y="1957" width="0.2" height="15.0" fill="rgb(228,176,49)" rx="2" ry="2" />
<text  x="37.52" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1139.4" y="1877" width="0.2" height="15.0" fill="rgb(244,223,47)" rx="2" ry="2" />
<text  x="1142.36" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="185.0" y="1989" width="0.2" height="15.0" fill="rgb(250,155,29)" rx="2" ry="2" />
<text  x="188.04" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1163.5" y="2053" width="0.2" height="15.0" fill="rgb(240,224,30)" rx="2" ry="2" />
<text  x="1166.49" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.08%)</title><rect x="581.4" y="1925" width="1.0" height="15.0" fill="rgb(241,134,40)" rx="2" ry="2" />
<text  x="584.36" y="1935.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="332.6" y="1861" width="0.4" height="15.0" fill="rgb(253,144,47)" rx="2" ry="2" />
<text  x="335.56" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="897.3" y="1925" width="0.2" height="15.0" fill="rgb(253,128,31)" rx="2" ry="2" />
<text  x="900.34" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="1163.7" y="2053" width="0.2" height="15.0" fill="rgb(238,180,6)" rx="2" ry="2" />
<text  x="1166.68" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="832.2" y="1717" width="0.2" height="15.0" fill="rgb(225,220,7)" rx="2" ry="2" />
<text  x="835.15" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (25 samples, 0.42%)</title><rect x="1170.9" y="2005" width="4.9" height="15.0" fill="rgb(215,128,21)" rx="2" ry="2" />
<text  x="1173.86" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="754.2" y="1733" width="0.2" height="15.0" fill="rgb(247,174,27)" rx="2" ry="2" />
<text  x="757.20" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="229.5" y="1749" width="0.2" height="15.0" fill="rgb(227,151,51)" rx="2" ry="2" />
<text  x="232.49" y="1759.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (1 samples, 0.02%)</title><rect x="921.1" y="2005" width="0.2" height="15.0" fill="rgb(226,211,11)" rx="2" ry="2" />
<text  x="924.07" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="236.7" y="1877" width="0.8" height="15.0" fill="rgb(215,215,9)" rx="2" ry="2" />
<text  x="239.67" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="683.8" y="1637" width="0.2" height="15.0" fill="rgb(238,11,49)" rx="2" ry="2" />
<text  x="686.83" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (52 samples, 0.88%)</title><rect x="658.9" y="1909" width="10.4" height="15.0" fill="rgb(210,36,28)" rx="2" ry="2" />
<text  x="661.91" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="92.3" y="1861" width="0.2" height="15.0" fill="rgb(234,9,51)" rx="2" ry="2" />
<text  x="95.33" y="1871.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="396.4" y="1541" width="0.2" height="15.0" fill="rgb(217,193,17)" rx="2" ry="2" />
<text  x="399.36" y="1551.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (3 samples, 0.05%)</title><rect x="1143.5" y="1989" width="0.6" height="15.0" fill="rgb(249,158,4)" rx="2" ry="2" />
<text  x="1146.55" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="2005" width="0.2" height="15.0" fill="rgb(208,73,13)" rx="2" ry="2" />
<text  x="239.47" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::getEvent (1 samples, 0.02%)</title><rect x="219.7" y="1861" width="0.2" height="15.0" fill="rgb(252,50,43)" rx="2" ry="2" />
<text  x="222.72" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="548.3" y="1877" width="0.2" height="15.0" fill="rgb(230,69,35)" rx="2" ry="2" />
<text  x="551.27" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="75.6" y="1957" width="1.2" height="15.0" fill="rgb(220,132,31)" rx="2" ry="2" />
<text  x="78.59" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="396.4" y="1829" width="0.2" height="15.0" fill="rgb(220,205,48)" rx="2" ry="2" />
<text  x="399.36" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1139.4" y="1957" width="0.2" height="15.0" fill="rgb(224,71,36)" rx="2" ry="2" />
<text  x="1142.36" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="935.0" y="1941" width="0.4" height="15.0" fill="rgb(215,16,21)" rx="2" ry="2" />
<text  x="938.02" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="165" width="14.0" height="15.0" fill="rgb(220,46,21)" rx="2" ry="2" />
<text  x="103.11" y="175.5" ></text>
</g>
<g >
<title>syscall (8 samples, 0.14%)</title><rect x="1030.7" y="2037" width="1.6" height="15.0" fill="rgb(250,38,29)" rx="2" ry="2" />
<text  x="1033.71" y="2047.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="732.3" y="1669" width="0.2" height="15.0" fill="rgb(211,129,26)" rx="2" ry="2" />
<text  x="735.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="574.8" y="1957" width="0.2" height="15.0" fill="rgb(223,34,23)" rx="2" ry="2" />
<text  x="577.78" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (17 samples, 0.29%)</title><rect x="171.5" y="1973" width="3.4" height="15.0" fill="rgb(215,142,21)" rx="2" ry="2" />
<text  x="174.48" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="83.6" y="1989" width="0.2" height="15.0" fill="rgb(247,212,20)" rx="2" ry="2" />
<text  x="86.56" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (7 samples, 0.12%)</title><rect x="1172.7" y="1989" width="1.4" height="15.0" fill="rgb(241,144,0)" rx="2" ry="2" />
<text  x="1175.66" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="189.6" y="2005" width="0.4" height="15.0" fill="rgb(213,120,13)" rx="2" ry="2" />
<text  x="192.62" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1182.0" y="1909" width="0.2" height="15.0" fill="rgb(236,171,9)" rx="2" ry="2" />
<text  x="1185.03" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="159.5" y="1909" width="0.2" height="15.0" fill="rgb(244,216,22)" rx="2" ry="2" />
<text  x="162.52" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="658.1" y="1685" width="0.2" height="15.0" fill="rgb(247,177,37)" rx="2" ry="2" />
<text  x="661.11" y="1695.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="747.4" y="1749" width="0.2" height="15.0" fill="rgb(223,186,22)" rx="2" ry="2" />
<text  x="750.43" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="917.9" y="1973" width="0.2" height="15.0" fill="rgb(206,106,51)" rx="2" ry="2" />
<text  x="920.88" y="1983.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="87.9" y="1941" width="0.2" height="15.0" fill="rgb(208,34,34)" rx="2" ry="2" />
<text  x="90.95" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="134.6" y="1941" width="0.2" height="15.0" fill="rgb(226,52,2)" rx="2" ry="2" />
<text  x="137.60" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="1142.8" y="2005" width="0.2" height="15.0" fill="rgb(239,57,25)" rx="2" ry="2" />
<text  x="1145.75" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="886.8" y="1925" width="0.4" height="15.0" fill="rgb(233,58,28)" rx="2" ry="2" />
<text  x="889.78" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (12 samples, 0.20%)</title><rect x="953.6" y="1989" width="2.4" height="15.0" fill="rgb(218,111,13)" rx="2" ry="2" />
<text  x="956.56" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="342.5" y="2021" width="0.2" height="15.0" fill="rgb(223,160,43)" rx="2" ry="2" />
<text  x="345.53" y="2031.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (182 samples, 3.07%)</title><rect x="770.8" y="1685" width="36.2" height="15.0" fill="rgb(250,179,53)" rx="2" ry="2" />
<text  x="773.75" y="1695.5" >__t..</text>
</g>
<g >
<title>do_syscall_64 (314 samples, 5.30%)</title><rect x="351.5" y="2005" width="62.6" height="15.0" fill="rgb(210,91,17)" rx="2" ry="2" />
<text  x="354.50" y="2015.5" >do_sys..</text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="986.3" y="1909" width="0.2" height="15.0" fill="rgb(212,68,14)" rx="2" ry="2" />
<text  x="989.26" y="1919.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="14.2" y="2069" width="1.2" height="15.0" fill="rgb(220,57,3)" rx="2" ry="2" />
<text  x="17.19" y="2079.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1181.6" y="1973" width="0.2" height="15.0" fill="rgb(208,7,34)" rx="2" ry="2" />
<text  x="1184.63" y="1983.5" ></text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.02%)</title><rect x="742.2" y="1781" width="0.2" height="15.0" fill="rgb(253,54,53)" rx="2" ry="2" />
<text  x="745.24" y="1791.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="173.9" y="1941" width="0.4" height="15.0" fill="rgb(224,175,28)" rx="2" ry="2" />
<text  x="176.87" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (83 samples, 1.40%)</title><rect x="210.6" y="1941" width="16.5" height="15.0" fill="rgb(253,4,35)" rx="2" ry="2" />
<text  x="213.55" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="409.1" y="1605" width="0.2" height="15.0" fill="rgb(232,132,17)" rx="2" ry="2" />
<text  x="412.11" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="159.5" y="1813" width="0.2" height="15.0" fill="rgb(227,83,24)" rx="2" ry="2" />
<text  x="162.52" y="1823.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="480.3" y="1845" width="0.2" height="15.0" fill="rgb(230,161,51)" rx="2" ry="2" />
<text  x="483.29" y="1855.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="1108.9" y="1605" width="0.2" height="15.0" fill="rgb(229,157,41)" rx="2" ry="2" />
<text  x="1111.86" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="401.1" y="1909" width="2.4" height="15.0" fill="rgb(212,188,52)" rx="2" ry="2" />
<text  x="404.14" y="1919.5" ></text>
</g>
<g >
<title>mcrouter (5,880 samples, 99.34%)</title><rect x="17.8" y="2069" width="1172.2" height="15.0" fill="rgb(231,64,54)" rx="2" ry="2" />
<text  x="20.77" y="2079.5" >mcrouter</text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (4 samples, 0.07%)</title><rect x="657.1" y="1909" width="0.8" height="15.0" fill="rgb(220,114,27)" rx="2" ry="2" />
<text  x="660.12" y="1919.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.07%)</title><rect x="122.4" y="1989" width="0.8" height="15.0" fill="rgb(244,119,3)" rx="2" ry="2" />
<text  x="125.44" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="236.5" y="1989" width="0.2" height="15.0" fill="rgb(239,68,1)" rx="2" ry="2" />
<text  x="239.47" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="763.8" y="1701" width="0.8" height="15.0" fill="rgb(208,63,51)" rx="2" ry="2" />
<text  x="766.77" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="212.3" y="1909" width="1.0" height="15.0" fill="rgb(230,139,35)" rx="2" ry="2" />
<text  x="215.35" y="1919.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (2 samples, 0.03%)</title><rect x="536.5" y="1957" width="0.4" height="15.0" fill="rgb(248,203,31)" rx="2" ry="2" />
<text  x="539.50" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1010.8" y="2005" width="0.2" height="15.0" fill="rgb(249,150,53)" rx="2" ry="2" />
<text  x="1013.78" y="2015.5" ></text>
</g>
<g >
<title>ksize (9 samples, 0.15%)</title><rect x="274.9" y="1845" width="1.8" height="15.0" fill="rgb(232,174,13)" rx="2" ry="2" />
<text  x="277.95" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1139.4" y="2005" width="0.2" height="15.0" fill="rgb(211,36,9)" rx="2" ry="2" />
<text  x="1142.36" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="658.1" y="1861" width="0.2" height="15.0" fill="rgb(213,93,13)" rx="2" ry="2" />
<text  x="661.11" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (2 samples, 0.03%)</title><rect x="212.9" y="1893" width="0.4" height="15.0" fill="rgb(249,35,52)" rx="2" ry="2" />
<text  x="215.95" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1003.6" y="1765" width="0.2" height="15.0" fill="rgb(239,78,29)" rx="2" ry="2" />
<text  x="1006.60" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1093" width="14.6" height="15.0" fill="rgb(222,228,17)" rx="2" ry="2" />
<text  x="103.11" y="1103.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="894.2" y="1685" width="0.2" height="15.0" fill="rgb(236,82,9)" rx="2" ry="2" />
<text  x="897.15" y="1695.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="116.3" y="1637" width="0.2" height="15.0" fill="rgb(213,160,45)" rx="2" ry="2" />
<text  x="119.26" y="1647.5" ></text>
</g>
<g >
<title>tcp_send_mss (18 samples, 0.30%)</title><rect x="332.6" y="1877" width="3.5" height="15.0" fill="rgb(225,182,41)" rx="2" ry="2" />
<text  x="335.56" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (15 samples, 0.25%)</title><rect x="1140.2" y="2021" width="3.0" height="15.0" fill="rgb(239,173,17)" rx="2" ry="2" />
<text  x="1143.16" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="952.8" y="2005" width="0.4" height="15.0" fill="rgb(221,69,47)" rx="2" ry="2" />
<text  x="955.76" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.07%)</title><rect x="401.9" y="1877" width="0.8" height="15.0" fill="rgb(213,54,14)" rx="2" ry="2" />
<text  x="404.94" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1173.9" y="1669" width="0.2" height="15.0" fill="rgb(208,65,23)" rx="2" ry="2" />
<text  x="1176.85" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="99.7" y="1317" width="15.4" height="15.0" fill="rgb(245,202,11)" rx="2" ry="2" />
<text  x="102.71" y="1327.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="693.8" y="1893" width="0.6" height="15.0" fill="rgb(233,146,14)" rx="2" ry="2" />
<text  x="696.80" y="1903.5" ></text>
</g>
<g >
<title>up_write (1 samples, 0.02%)</title><rect x="829.2" y="1781" width="0.2" height="15.0" fill="rgb(238,10,0)" rx="2" ry="2" />
<text  x="832.16" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="917.9" y="1797" width="0.2" height="15.0" fill="rgb(214,71,29)" rx="2" ry="2" />
<text  x="920.88" y="1807.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1003.6" y="1701" width="0.2" height="15.0" fill="rgb(230,26,39)" rx="2" ry="2" />
<text  x="1006.60" y="1711.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="699.8" y="1957" width="0.2" height="15.0" fill="rgb(232,101,52)" rx="2" ry="2" />
<text  x="702.78" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="899.7" y="2005" width="0.2" height="15.0" fill="rgb(254,50,32)" rx="2" ry="2" />
<text  x="902.73" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="657.9" y="1797" width="0.2" height="15.0" fill="rgb(250,121,8)" rx="2" ry="2" />
<text  x="660.91" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="832.2" y="1573" width="0.2" height="15.0" fill="rgb(252,26,35)" rx="2" ry="2" />
<text  x="835.15" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="892.2" y="1925" width="0.8" height="15.0" fill="rgb(211,222,6)" rx="2" ry="2" />
<text  x="895.16" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="699.4" y="1973" width="0.8" height="15.0" fill="rgb(254,149,28)" rx="2" ry="2" />
<text  x="702.38" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="245" width="14.0" height="15.0" fill="rgb(209,50,30)" rx="2" ry="2" />
<text  x="103.11" y="255.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.19%)</title><rect x="15.6" y="2053" width="2.2" height="15.0" fill="rgb(215,168,32)" rx="2" ry="2" />
<text  x="18.58" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="894.2" y="1973" width="0.2" height="15.0" fill="rgb(242,50,6)" rx="2" ry="2" />
<text  x="897.15" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="14.6" y="1845" width="0.8" height="15.0" fill="rgb(235,214,54)" rx="2" ry="2" />
<text  x="17.59" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 1.25%)</title><rect x="100.1" y="1205" width="14.8" height="15.0" fill="rgb(231,222,30)" rx="2" ry="2" />
<text  x="103.11" y="1215.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="342.1" y="1989" width="0.4" height="15.0" fill="rgb(213,75,6)" rx="2" ry="2" />
<text  x="345.13" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (32 samples, 0.54%)</title><rect x="986.9" y="1925" width="6.3" height="15.0" fill="rgb(213,1,24)" rx="2" ry="2" />
<text  x="989.85" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (2 samples, 0.03%)</title><rect x="227.5" y="1957" width="0.4" height="15.0" fill="rgb(216,225,25)" rx="2" ry="2" />
<text  x="230.50" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="832.2" y="1557" width="0.2" height="15.0" fill="rgb(219,64,19)" rx="2" ry="2" />
<text  x="835.15" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="510.4" y="2037" width="0.2" height="15.0" fill="rgb(243,42,3)" rx="2" ry="2" />
<text  x="513.39" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="117" width="14.0" height="15.0" fill="rgb(226,130,19)" rx="2" ry="2" />
<text  x="103.11" y="127.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="342.1" y="1893" width="0.2" height="15.0" fill="rgb(223,57,24)" rx="2" ry="2" />
<text  x="345.13" y="1903.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="14.4" y="2053" width="1.0" height="15.0" fill="rgb(226,203,5)" rx="2" ry="2" />
<text  x="17.39" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="885.0" y="1941" width="0.2" height="15.0" fill="rgb(229,122,45)" rx="2" ry="2" />
<text  x="887.98" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (32 samples, 0.54%)</title><rect x="1170.7" y="2037" width="6.3" height="15.0" fill="rgb(251,43,30)" rx="2" ry="2" />
<text  x="1173.66" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="970.9" y="2021" width="0.8" height="15.0" fill="rgb(213,214,40)" rx="2" ry="2" />
<text  x="973.91" y="2031.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="731.5" y="1669" width="0.2" height="15.0" fill="rgb(239,149,52)" rx="2" ry="2" />
<text  x="734.48" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="763.2" y="1653" width="0.2" height="15.0" fill="rgb(223,25,37)" rx="2" ry="2" />
<text  x="766.17" y="1663.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (36 samples, 0.61%)</title><rect x="1113.6" y="1525" width="7.2" height="15.0" fill="rgb(236,143,53)" rx="2" ry="2" />
<text  x="1116.65" y="1535.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="925.9" y="1941" width="0.2" height="15.0" fill="rgb(213,57,20)" rx="2" ry="2" />
<text  x="928.85" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="971.5" y="1877" width="0.2" height="15.0" fill="rgb(244,44,37)" rx="2" ry="2" />
<text  x="974.50" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="704.2" y="1765" width="0.2" height="15.0" fill="rgb(245,8,12)" rx="2" ry="2" />
<text  x="707.16" y="1775.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="226.1" y="1893" width="0.2" height="15.0" fill="rgb(210,60,23)" rx="2" ry="2" />
<text  x="229.10" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="99.5" y="1477" width="16.2" height="15.0" fill="rgb(241,209,27)" rx="2" ry="2" />
<text  x="102.51" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (9 samples, 0.15%)</title><rect x="1143.2" y="2053" width="1.7" height="15.0" fill="rgb(213,78,27)" rx="2" ry="2" />
<text  x="1146.15" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="159.5" y="1925" width="0.2" height="15.0" fill="rgb(251,139,22)" rx="2" ry="2" />
<text  x="162.52" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="522.7" y="1973" width="0.2" height="15.0" fill="rgb(228,213,53)" rx="2" ry="2" />
<text  x="525.75" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="972.5" y="1973" width="0.2" height="15.0" fill="rgb(239,45,44)" rx="2" ry="2" />
<text  x="975.50" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="742.6" y="1797" width="0.2" height="15.0" fill="rgb(240,11,37)" rx="2" ry="2" />
<text  x="745.64" y="1807.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="224.1" y="1829" width="0.4" height="15.0" fill="rgb(252,6,51)" rx="2" ry="2" />
<text  x="227.11" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="396.4" y="1781" width="0.2" height="15.0" fill="rgb(234,91,40)" rx="2" ry="2" />
<text  x="399.36" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="683.6" y="1861" width="0.4" height="15.0" fill="rgb(219,24,49)" rx="2" ry="2" />
<text  x="686.63" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1130.2" y="2005" width="0.2" height="15.0" fill="rgb(227,52,38)" rx="2" ry="2" />
<text  x="1133.19" y="2015.5" ></text>
</g>
<g >
<title>__sys_sendmsg (473 samples, 7.99%)</title><rect x="246.4" y="1973" width="94.3" height="15.0" fill="rgb(222,68,16)" rx="2" ry="2" />
<text  x="249.44" y="1983.5" >__sys_sendmsg</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="756.8" y="1621" width="0.2" height="15.0" fill="rgb(206,211,15)" rx="2" ry="2" />
<text  x="759.80" y="1631.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="251.0" y="1925" width="0.2" height="15.0" fill="rgb(207,169,0)" rx="2" ry="2" />
<text  x="254.02" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (66 samples, 1.12%)</title><rect x="100.1" y="85" width="13.2" height="15.0" fill="rgb(226,93,37)" rx="2" ry="2" />
<text  x="103.11" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="505.8" y="1781" width="0.2" height="15.0" fill="rgb(233,210,38)" rx="2" ry="2" />
<text  x="508.80" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="649.7" y="2005" width="1.4" height="15.0" fill="rgb(214,141,38)" rx="2" ry="2" />
<text  x="652.74" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="409.1" y="1861" width="0.2" height="15.0" fill="rgb(241,151,18)" rx="2" ry="2" />
<text  x="412.11" y="1871.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="878.4" y="1621" width="0.2" height="15.0" fill="rgb(218,132,1)" rx="2" ry="2" />
<text  x="881.40" y="1631.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="567.0" y="1973" width="0.2" height="15.0" fill="rgb(206,227,33)" rx="2" ry="2" />
<text  x="570.01" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="844.9" y="1893" width="1.0" height="15.0" fill="rgb(217,134,48)" rx="2" ry="2" />
<text  x="847.91" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="561.2" y="1941" width="1.0" height="15.0" fill="rgb(239,96,50)" rx="2" ry="2" />
<text  x="564.22" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (5 samples, 0.08%)</title><rect x="858.9" y="1989" width="1.0" height="15.0" fill="rgb(236,196,46)" rx="2" ry="2" />
<text  x="861.87" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (2 samples, 0.03%)</title><rect x="132.2" y="1989" width="0.4" height="15.0" fill="rgb(250,213,21)" rx="2" ry="2" />
<text  x="135.21" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="229.5" y="1685" width="0.2" height="15.0" fill="rgb(224,125,53)" rx="2" ry="2" />
<text  x="232.49" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (11 samples, 0.19%)</title><rect x="77.6" y="1941" width="2.2" height="15.0" fill="rgb(223,120,48)" rx="2" ry="2" />
<text  x="80.58" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="396.6" y="1717" width="0.2" height="15.0" fill="rgb(217,33,9)" rx="2" ry="2" />
<text  x="399.56" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="286.5" y="1605" width="0.2" height="15.0" fill="rgb(236,225,4)" rx="2" ry="2" />
<text  x="289.51" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="533.7" y="1941" width="0.4" height="15.0" fill="rgb(208,31,24)" rx="2" ry="2" />
<text  x="536.71" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="974.3" y="1989" width="0.2" height="15.0" fill="rgb(228,133,34)" rx="2" ry="2" />
<text  x="977.29" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="144.0" y="1893" width="0.2" height="15.0" fill="rgb(252,150,12)" rx="2" ry="2" />
<text  x="146.97" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (2 samples, 0.03%)</title><rect x="1146.3" y="1989" width="0.4" height="15.0" fill="rgb(240,3,35)" rx="2" ry="2" />
<text  x="1149.34" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="644.2" y="1989" width="0.2" height="15.0" fill="rgb(235,68,32)" rx="2" ry="2" />
<text  x="647.16" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (2 samples, 0.03%)</title><rect x="656.7" y="1877" width="0.4" height="15.0" fill="rgb(205,203,20)" rx="2" ry="2" />
<text  x="659.72" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="801.3" y="1525" width="0.4" height="15.0" fill="rgb(214,99,40)" rx="2" ry="2" />
<text  x="804.25" y="1535.5" ></text>
</g>
<g >
<title>lock_sock_nested (12 samples, 0.20%)</title><rect x="381.8" y="1941" width="2.4" height="15.0" fill="rgb(242,84,16)" rx="2" ry="2" />
<text  x="384.80" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="571.6" y="1941" width="0.4" height="15.0" fill="rgb(241,28,24)" rx="2" ry="2" />
<text  x="574.59" y="1951.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="683.6" y="1669" width="0.2" height="15.0" fill="rgb(213,157,5)" rx="2" ry="2" />
<text  x="686.63" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (7 samples, 0.12%)</title><rect x="877.8" y="1941" width="1.4" height="15.0" fill="rgb(217,108,4)" rx="2" ry="2" />
<text  x="880.81" y="1951.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (1 samples, 0.02%)</title><rect x="732.1" y="1637" width="0.2" height="15.0" fill="rgb(220,209,13)" rx="2" ry="2" />
<text  x="735.07" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="621.4" y="2037" width="0.2" height="15.0" fill="rgb(210,4,23)" rx="2" ry="2" />
<text  x="624.43" y="2047.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="396.4" y="1589" width="0.2" height="15.0" fill="rgb(225,46,25)" rx="2" ry="2" />
<text  x="399.36" y="1599.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="992.2" y="1909" width="0.8" height="15.0" fill="rgb(223,114,41)" rx="2" ry="2" />
<text  x="995.24" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1003.6" y="1909" width="0.2" height="15.0" fill="rgb(252,112,37)" rx="2" ry="2" />
<text  x="1006.60" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="157.9" y="1877" width="0.8" height="15.0" fill="rgb(207,189,1)" rx="2" ry="2" />
<text  x="160.92" y="1887.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (18 samples, 0.30%)</title><rect x="94.5" y="2037" width="3.6" height="15.0" fill="rgb(237,69,51)" rx="2" ry="2" />
<text  x="97.53" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (15 samples, 0.25%)</title><rect x="150.7" y="1893" width="3.0" height="15.0" fill="rgb(242,205,0)" rx="2" ry="2" />
<text  x="153.75" y="1903.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="489.1" y="1877" width="0.8" height="15.0" fill="rgb(243,172,1)" rx="2" ry="2" />
<text  x="492.06" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="693.8" y="1909" width="0.6" height="15.0" fill="rgb(223,197,42)" rx="2" ry="2" />
<text  x="696.80" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="159.5" y="1941" width="0.2" height="15.0" fill="rgb(217,28,50)" rx="2" ry="2" />
<text  x="162.52" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="92.3" y="1909" width="0.2" height="15.0" fill="rgb(231,74,11)" rx="2" ry="2" />
<text  x="95.33" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="969.1" y="1845" width="0.2" height="15.0" fill="rgb(220,160,42)" rx="2" ry="2" />
<text  x="972.11" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (1 samples, 0.02%)</title><rect x="918.1" y="2037" width="0.2" height="15.0" fill="rgb(211,169,7)" rx="2" ry="2" />
<text  x="921.08" y="2047.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="460.0" y="1893" width="0.3" height="15.0" fill="rgb(222,10,32)" rx="2" ry="2" />
<text  x="462.95" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::tryGetVirtualEventBase (1 samples, 0.02%)</title><rect x="154.3" y="1941" width="0.2" height="15.0" fill="rgb(225,70,35)" rx="2" ry="2" />
<text  x="157.34" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.14%)</title><rect x="106.5" y="37" width="1.6" height="15.0" fill="rgb(213,2,15)" rx="2" ry="2" />
<text  x="109.49" y="47.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="956.0" y="2005" width="0.4" height="15.0" fill="rgb(251,62,52)" rx="2" ry="2" />
<text  x="958.95" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="99.5" y="1461" width="16.0" height="15.0" fill="rgb(223,19,35)" rx="2" ry="2" />
<text  x="102.51" y="1471.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (3 samples, 0.05%)</title><rect x="936.0" y="1941" width="0.6" height="15.0" fill="rgb(212,100,25)" rx="2" ry="2" />
<text  x="939.02" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (36 samples, 0.61%)</title><rect x="217.3" y="1893" width="7.2" height="15.0" fill="rgb(228,36,3)" rx="2" ry="2" />
<text  x="220.33" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="320.4" y="1797" width="0.2" height="15.0" fill="rgb(206,209,53)" rx="2" ry="2" />
<text  x="323.40" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (447 samples, 7.55%)</title><rect x="98.3" y="2037" width="89.1" height="15.0" fill="rgb(235,36,26)" rx="2" ry="2" />
<text  x="101.32" y="2047.5" >[unknown]</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="657.9" y="1717" width="0.2" height="15.0" fill="rgb(230,69,15)" rx="2" ry="2" />
<text  x="660.91" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (7 samples, 0.12%)</title><rect x="231.7" y="2021" width="1.4" height="15.0" fill="rgb(220,148,32)" rx="2" ry="2" />
<text  x="234.69" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (448 samples, 7.57%)</title><rect x="1040.3" y="2037" width="89.3" height="15.0" fill="rgb(236,52,42)" rx="2" ry="2" />
<text  x="1043.28" y="2047.5" >entry_SYSC..</text>
</g>
<g >
<title>__clock_gettime (12 samples, 0.20%)</title><rect x="197.8" y="2037" width="2.4" height="15.0" fill="rgb(225,128,50)" rx="2" ry="2" />
<text  x="200.80" y="2047.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="924.9" y="1909" width="0.2" height="15.0" fill="rgb(217,2,31)" rx="2" ry="2" />
<text  x="927.85" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="117.3" y="1701" width="0.2" height="15.0" fill="rgb(227,214,33)" rx="2" ry="2" />
<text  x="120.25" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="248.8" y="1637" width="0.2" height="15.0" fill="rgb(231,34,4)" rx="2" ry="2" />
<text  x="251.83" y="1647.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="159.5" y="1893" width="0.2" height="15.0" fill="rgb(211,186,51)" rx="2" ry="2" />
<text  x="162.52" y="1903.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (4 samples, 0.07%)</title><rect x="230.5" y="2037" width="0.8" height="15.0" fill="rgb(208,8,8)" rx="2" ry="2" />
<text  x="233.49" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="636.6" y="1973" width="1.2" height="15.0" fill="rgb(207,144,34)" rx="2" ry="2" />
<text  x="639.58" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="396.4" y="1717" width="0.2" height="15.0" fill="rgb(218,117,37)" rx="2" ry="2" />
<text  x="399.36" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="741" width="14.4" height="15.0" fill="rgb(225,206,31)" rx="2" ry="2" />
<text  x="103.11" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="571.2" y="1957" width="0.2" height="15.0" fill="rgb(244,77,0)" rx="2" ry="2" />
<text  x="574.19" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="635.8" y="1973" width="0.6" height="15.0" fill="rgb(212,12,21)" rx="2" ry="2" />
<text  x="638.78" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="612.9" y="1989" width="0.8" height="15.0" fill="rgb(247,139,31)" rx="2" ry="2" />
<text  x="615.86" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="245.4" y="1861" width="0.6" height="15.0" fill="rgb(220,126,21)" rx="2" ry="2" />
<text  x="248.44" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1001.4" y="1957" width="0.2" height="15.0" fill="rgb(222,166,5)" rx="2" ry="2" />
<text  x="1004.41" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (2 samples, 0.03%)</title><rect x="1009.2" y="2005" width="0.4" height="15.0" fill="rgb(224,140,45)" rx="2" ry="2" />
<text  x="1012.18" y="2015.5" ></text>
</g>
<g >
<title>__fget (22 samples, 0.37%)</title><rect x="450.6" y="1941" width="4.4" height="15.0" fill="rgb(218,82,22)" rx="2" ry="2" />
<text  x="453.58" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="890.6" y="1701" width="0.2" height="15.0" fill="rgb(224,195,32)" rx="2" ry="2" />
<text  x="893.56" y="1711.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="14.0" y="2037" width="0.2" height="15.0" fill="rgb(251,9,46)" rx="2" ry="2" />
<text  x="16.99" y="2047.5" ></text>
</g>
<g >
<title>tcp_tso_segs (6 samples, 0.10%)</title><rect x="330.8" y="1829" width="1.2" height="15.0" fill="rgb(210,70,13)" rx="2" ry="2" />
<text  x="333.77" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="530.9" y="2005" width="0.2" height="15.0" fill="rgb(253,4,47)" rx="2" ry="2" />
<text  x="533.92" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (6 samples, 0.10%)</title><rect x="1028.7" y="2037" width="1.2" height="15.0" fill="rgb(220,15,49)" rx="2" ry="2" />
<text  x="1031.72" y="2047.5" ></text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="1111.9" y="1861" width="0.2" height="15.0" fill="rgb(218,111,23)" rx="2" ry="2" />
<text  x="1114.85" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="974.3" y="1893" width="0.2" height="15.0" fill="rgb(208,141,14)" rx="2" ry="2" />
<text  x="977.29" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="248.8" y="1669" width="0.2" height="15.0" fill="rgb(223,183,50)" rx="2" ry="2" />
<text  x="251.83" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="154.1" y="1733" width="0.2" height="15.0" fill="rgb(217,26,45)" rx="2" ry="2" />
<text  x="157.14" y="1743.5" ></text>
</g>
<g >
<title>isspace (3 samples, 0.05%)</title><rect x="1014.0" y="2021" width="0.6" height="15.0" fill="rgb(228,215,9)" rx="2" ry="2" />
<text  x="1016.97" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="183.8" y="1941" width="0.4" height="15.0" fill="rgb(251,167,31)" rx="2" ry="2" />
<text  x="186.84" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 1.23%)</title><rect x="100.1" y="1125" width="14.6" height="15.0" fill="rgb(246,125,17)" rx="2" ry="2" />
<text  x="103.11" y="1135.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (2 samples, 0.03%)</title><rect x="701.2" y="2037" width="0.4" height="15.0" fill="rgb(210,1,17)" rx="2" ry="2" />
<text  x="704.17" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1023.1" y="1877" width="0.2" height="15.0" fill="rgb(216,103,13)" rx="2" ry="2" />
<text  x="1026.14" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.93%)</title><rect x="100.1" y="69" width="11.0" height="15.0" fill="rgb(254,205,11)" rx="2" ry="2" />
<text  x="103.11" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (42 samples, 0.71%)</title><rect x="1112.8" y="1685" width="8.4" height="15.0" fill="rgb(235,108,30)" rx="2" ry="2" />
<text  x="1115.85" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="515.2" y="1973" width="0.2" height="15.0" fill="rgb(215,146,43)" rx="2" ry="2" />
<text  x="518.17" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="489.9" y="1573" width="0.2" height="15.0" fill="rgb(211,208,2)" rx="2" ry="2" />
<text  x="492.85" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="499.6" y="1893" width="0.6" height="15.0" fill="rgb(234,117,6)" rx="2" ry="2" />
<text  x="502.62" y="1903.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (6 samples, 0.10%)</title><rect x="969.3" y="2037" width="1.2" height="15.0" fill="rgb(209,160,28)" rx="2" ry="2" />
<text  x="972.31" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="636.4" y="1973" width="0.2" height="15.0" fill="rgb(246,71,22)" rx="2" ry="2" />
<text  x="639.38" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="73.0" y="1941" width="0.4" height="15.0" fill="rgb(207,41,2)" rx="2" ry="2" />
<text  x="76.00" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="728.1" y="1685" width="0.2" height="15.0" fill="rgb(213,169,20)" rx="2" ry="2" />
<text  x="731.09" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (46 samples, 0.78%)</title><rect x="26.7" y="2005" width="9.2" height="15.0" fill="rgb(225,70,29)" rx="2" ry="2" />
<text  x="29.75" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="709.5" y="1941" width="0.6" height="15.0" fill="rgb(240,163,19)" rx="2" ry="2" />
<text  x="712.55" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="499.8" y="1765" width="0.4" height="15.0" fill="rgb(228,157,13)" rx="2" ry="2" />
<text  x="502.82" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="480.3" y="1941" width="0.2" height="15.0" fill="rgb(245,195,30)" rx="2" ry="2" />
<text  x="483.29" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="881.0" y="1861" width="0.2" height="15.0" fill="rgb(219,151,30)" rx="2" ry="2" />
<text  x="884.00" y="1871.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="830.2" y="1829" width="0.2" height="15.0" fill="rgb(210,116,40)" rx="2" ry="2" />
<text  x="833.16" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8 samples, 0.14%)</title><rect x="458.8" y="1909" width="1.5" height="15.0" fill="rgb(252,194,17)" rx="2" ry="2" />
<text  x="461.75" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="189.6" y="1845" width="0.4" height="15.0" fill="rgb(209,55,49)" rx="2" ry="2" />
<text  x="192.62" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1098.3" y="1909" width="0.6" height="15.0" fill="rgb(227,69,3)" rx="2" ry="2" />
<text  x="1101.30" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="36.5" y="2005" width="0.2" height="15.0" fill="rgb(252,133,37)" rx="2" ry="2" />
<text  x="39.51" y="2015.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="540.1" y="1957" width="0.2" height="15.0" fill="rgb(249,161,0)" rx="2" ry="2" />
<text  x="543.09" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="727.1" y="1749" width="0.2" height="15.0" fill="rgb(244,190,10)" rx="2" ry="2" />
<text  x="730.09" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="70.8" y="1925" width="0.4" height="15.0" fill="rgb(220,101,15)" rx="2" ry="2" />
<text  x="73.80" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.07%)</title><rect x="705.0" y="1877" width="0.8" height="15.0" fill="rgb(222,48,42)" rx="2" ry="2" />
<text  x="707.96" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1182.0" y="1765" width="0.2" height="15.0" fill="rgb(246,188,16)" rx="2" ry="2" />
<text  x="1185.03" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="704.2" y="1941" width="0.2" height="15.0" fill="rgb(230,34,26)" rx="2" ry="2" />
<text  x="707.16" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="907.9" y="1973" width="0.2" height="15.0" fill="rgb(205,149,1)" rx="2" ry="2" />
<text  x="910.91" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="113.3" y="69" width="0.4" height="15.0" fill="rgb(226,170,7)" rx="2" ry="2" />
<text  x="116.27" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="92.3" y="1781" width="0.2" height="15.0" fill="rgb(246,173,52)" rx="2" ry="2" />
<text  x="95.33" y="1791.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="59.0" y="1909" width="0.2" height="15.0" fill="rgb(231,199,46)" rx="2" ry="2" />
<text  x="62.04" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1003.6" y="1749" width="0.2" height="15.0" fill="rgb(240,130,17)" rx="2" ry="2" />
<text  x="1006.60" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="895.3" y="1989" width="0.2" height="15.0" fill="rgb(227,48,32)" rx="2" ry="2" />
<text  x="898.35" y="1999.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="396.4" y="1557" width="0.2" height="15.0" fill="rgb(209,164,49)" rx="2" ry="2" />
<text  x="399.36" y="1567.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1115.4" y="1445" width="0.2" height="15.0" fill="rgb(212,200,12)" rx="2" ry="2" />
<text  x="1118.44" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="972.7" y="2005" width="0.2" height="15.0" fill="rgb(240,182,28)" rx="2" ry="2" />
<text  x="975.70" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (515 samples, 8.70%)</title><rect x="238.1" y="2005" width="102.6" height="15.0" fill="rgb(208,2,38)" rx="2" ry="2" />
<text  x="241.07" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="974.3" y="1909" width="0.2" height="15.0" fill="rgb(246,90,13)" rx="2" ry="2" />
<text  x="977.29" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="969.1" y="1893" width="0.2" height="15.0" fill="rgb(241,102,29)" rx="2" ry="2" />
<text  x="972.11" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="885.8" y="1925" width="0.2" height="15.0" fill="rgb(215,104,46)" rx="2" ry="2" />
<text  x="888.78" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="757" width="14.4" height="15.0" fill="rgb(249,146,25)" rx="2" ry="2" />
<text  x="103.11" y="767.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="461.5" y="1925" width="0.2" height="15.0" fill="rgb(241,219,12)" rx="2" ry="2" />
<text  x="464.55" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="683.6" y="1909" width="0.4" height="15.0" fill="rgb(251,146,0)" rx="2" ry="2" />
<text  x="686.63" y="1919.5" ></text>
</g>
<g >
<title>__alloc_fd (7 samples, 0.12%)</title><rect x="364.3" y="1941" width="1.4" height="15.0" fill="rgb(235,96,45)" rx="2" ry="2" />
<text  x="367.26" y="1951.5" ></text>
</g>
<g >
<title>tcp_current_mss (23 samples, 0.39%)</title><rect x="821.0" y="1717" width="4.6" height="15.0" fill="rgb(233,218,39)" rx="2" ry="2" />
<text  x="823.99" y="1727.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1057.4" y="1925" width="0.8" height="15.0" fill="rgb(210,97,46)" rx="2" ry="2" />
<text  x="1060.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="100.1" y="917" width="14.4" height="15.0" fill="rgb(249,25,39)" rx="2" ry="2" />
<text  x="103.11" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="40.5" y="1941" width="0.2" height="15.0" fill="rgb(247,105,46)" rx="2" ry="2" />
<text  x="43.50" y="1951.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (11 samples, 0.19%)</title><rect x="761.2" y="1701" width="2.2" height="15.0" fill="rgb(243,201,5)" rx="2" ry="2" />
<text  x="764.18" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1003.6" y="1781" width="0.2" height="15.0" fill="rgb(208,62,31)" rx="2" ry="2" />
<text  x="1006.60" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (3 samples, 0.05%)</title><rect x="1171.7" y="1957" width="0.6" height="15.0" fill="rgb(224,60,6)" rx="2" ry="2" />
<text  x="1174.66" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="342.3" y="1813" width="0.2" height="15.0" fill="rgb(245,30,0)" rx="2" ry="2" />
<text  x="345.33" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="165.9" y="1973" width="0.4" height="15.0" fill="rgb(244,136,4)" rx="2" ry="2" />
<text  x="168.90" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="48.1" y="1925" width="0.8" height="15.0" fill="rgb(231,15,6)" rx="2" ry="2" />
<text  x="51.08" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="396.6" y="1637" width="0.2" height="15.0" fill="rgb(215,109,0)" rx="2" ry="2" />
<text  x="399.56" y="1647.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (8 samples, 0.14%)</title><rect x="667.3" y="1861" width="1.6" height="15.0" fill="rgb(248,93,36)" rx="2" ry="2" />
<text  x="670.28" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="742.0" y="1781" width="0.2" height="15.0" fill="rgb(228,79,46)" rx="2" ry="2" />
<text  x="745.04" y="1791.5" ></text>
</g>
<g >
<title>ip_queue_xmit (156 samples, 2.64%)</title><rect x="285.1" y="1813" width="31.1" height="15.0" fill="rgb(222,143,53)" rx="2" ry="2" />
<text  x="288.11" y="1823.5" >ip..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="185.0" y="1957" width="0.2" height="15.0" fill="rgb(238,173,18)" rx="2" ry="2" />
<text  x="188.04" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="509.2" y="1957" width="0.2" height="15.0" fill="rgb(249,109,23)" rx="2" ry="2" />
<text  x="512.19" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="190.2" y="1909" width="0.2" height="15.0" fill="rgb(224,195,45)" rx="2" ry="2" />
<text  x="193.22" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (39 samples, 0.66%)</title><rect x="925.7" y="1957" width="7.7" height="15.0" fill="rgb(250,180,21)" rx="2" ry="2" />
<text  x="928.65" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="458.6" y="1893" width="0.2" height="15.0" fill="rgb(214,217,16)" rx="2" ry="2" />
<text  x="461.56" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (3 samples, 0.05%)</title><rect x="31.3" y="1957" width="0.6" height="15.0" fill="rgb(207,159,44)" rx="2" ry="2" />
<text  x="34.33" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="108.1" y="53" width="0.6" height="15.0" fill="rgb(231,112,37)" rx="2" ry="2" />
<text  x="111.08" y="63.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="396.6" y="1733" width="0.2" height="15.0" fill="rgb(222,31,10)" rx="2" ry="2" />
<text  x="399.56" y="1743.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (1 samples, 0.02%)</title><rect x="1004.6" y="2021" width="0.2" height="15.0" fill="rgb(217,221,21)" rx="2" ry="2" />
<text  x="1007.60" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4,704 samples, 79.47%)</title><rect x="94.5" y="2053" width="937.8" height="15.0" fill="rgb(237,33,26)" rx="2" ry="2" />
<text  x="97.53" y="2063.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="633.6" y="1909" width="0.4" height="15.0" fill="rgb(253,133,27)" rx="2" ry="2" />
<text  x="636.59" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1180.0" y="2021" width="0.2" height="15.0" fill="rgb(213,157,38)" rx="2" ry="2" />
<text  x="1183.03" y="2031.5" ></text>
</g>
<g >
<title>mod_timer (18 samples, 0.30%)</title><rect x="808.4" y="1621" width="3.6" height="15.0" fill="rgb(229,100,30)" rx="2" ry="2" />
<text  x="811.43" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="691.4" y="1701" width="0.2" height="15.0" fill="rgb(245,62,28)" rx="2" ry="2" />
<text  x="694.41" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (2 samples, 0.03%)</title><rect x="897.5" y="1973" width="0.4" height="15.0" fill="rgb(242,5,51)" rx="2" ry="2" />
<text  x="900.54" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="460.5" y="1941" width="0.6" height="15.0" fill="rgb(240,187,39)" rx="2" ry="2" />
<text  x="463.55" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (40 samples, 0.68%)</title><rect x="216.5" y="1909" width="8.0" height="15.0" fill="rgb(219,33,49)" rx="2" ry="2" />
<text  x="219.53" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="381.4" y="1733" width="0.2" height="15.0" fill="rgb(237,120,35)" rx="2" ry="2" />
<text  x="384.40" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="480.3" y="1893" width="0.2" height="15.0" fill="rgb(213,22,41)" rx="2" ry="2" />
<text  x="483.29" y="1903.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="701.6" y="1973" width="0.4" height="15.0" fill="rgb(219,10,8)" rx="2" ry="2" />
<text  x="704.57" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (34 samples, 0.57%)</title><rect x="791.7" y="1541" width="6.8" height="15.0" fill="rgb(219,190,22)" rx="2" ry="2" />
<text  x="794.68" y="1551.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1149.5" y="1973" width="0.4" height="15.0" fill="rgb(213,149,52)" rx="2" ry="2" />
<text  x="1152.53" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="255.6" y="1861" width="0.2" height="15.0" fill="rgb(231,217,51)" rx="2" ry="2" />
<text  x="258.61" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="657.9" y="1909" width="0.2" height="15.0" fill="rgb(206,181,36)" rx="2" ry="2" />
<text  x="660.91" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (4 samples, 0.07%)</title><rect x="1118.6" y="1413" width="0.8" height="15.0" fill="rgb(231,189,54)" rx="2" ry="2" />
<text  x="1121.63" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (70 samples, 1.18%)</title><rect x="100.1" y="453" width="14.0" height="15.0" fill="rgb(254,82,50)" rx="2" ry="2" />
<text  x="103.11" y="463.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (258 samples, 4.36%)</title><rect x="37.5" y="2005" width="51.4" height="15.0" fill="rgb(223,109,28)" rx="2" ry="2" />
<text  x="40.51" y="2015.5" >folly..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.4" y="1941" width="0.2" height="15.0" fill="rgb(231,54,34)" rx="2" ry="2" />
<text  x="74.40" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="141.0" y="1893" width="0.4" height="15.0" fill="rgb(218,58,41)" rx="2" ry="2" />
<text  x="143.98" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="101.1" y="37" width="0.2" height="15.0" fill="rgb(213,139,53)" rx="2" ry="2" />
<text  x="104.11" y="47.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="481.5" y="1957" width="0.8" height="15.0" fill="rgb(207,136,54)" rx="2" ry="2" />
<text  x="484.48" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="412.9" y="1877" width="0.2" height="15.0" fill="rgb(219,202,50)" rx="2" ry="2" />
<text  x="415.90" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="594.3" y="1717" width="0.2" height="15.0" fill="rgb(254,151,38)" rx="2" ry="2" />
<text  x="597.32" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="381.2" y="1829" width="0.4" height="15.0" fill="rgb(223,13,54)" rx="2" ry="2" />
<text  x="384.20" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="737.9" y="1621" width="0.2" height="15.0" fill="rgb(227,11,23)" rx="2" ry="2" />
<text  x="740.86" y="1631.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="864.8" y="1989" width="0.6" height="15.0" fill="rgb(234,188,30)" rx="2" ry="2" />
<text  x="867.85" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="99.9" y="1221" width="15.0" height="15.0" fill="rgb(212,119,40)" rx="2" ry="2" />
<text  x="102.91" y="1231.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="751.2" y="1669" width="0.2" height="15.0" fill="rgb(223,128,1)" rx="2" ry="2" />
<text  x="754.21" y="1679.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1173.9" y="1589" width="0.2" height="15.0" fill="rgb(215,180,46)" rx="2" ry="2" />
<text  x="1176.85" y="1599.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="576.6" y="1989" width="0.6" height="15.0" fill="rgb(238,72,14)" rx="2" ry="2" />
<text  x="579.58" y="1999.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="806.4" y="1669" width="0.4" height="15.0" fill="rgb(217,97,2)" rx="2" ry="2" />
<text  x="809.44" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="610.1" y="1813" width="0.2" height="15.0" fill="rgb(219,74,41)" rx="2" ry="2" />
<text  x="613.07" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="248.8" y="1653" width="0.2" height="15.0" fill="rgb(210,76,46)" rx="2" ry="2" />
<text  x="251.83" y="1663.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="402.5" y="1829" width="0.2" height="15.0" fill="rgb(245,89,52)" rx="2" ry="2" />
<text  x="405.54" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="556.8" y="1749" width="0.2" height="15.0" fill="rgb(238,215,12)" rx="2" ry="2" />
<text  x="559.84" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (6 samples, 0.10%)</title><rect x="290.7" y="1573" width="1.2" height="15.0" fill="rgb(212,154,5)" rx="2" ry="2" />
<text  x="293.70" y="1583.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="393.4" y="1877" width="0.2" height="15.0" fill="rgb(238,220,27)" rx="2" ry="2" />
<text  x="396.37" y="1887.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1120.8" y="1525" width="0.2" height="15.0" fill="rgb(225,77,32)" rx="2" ry="2" />
<text  x="1123.82" y="1535.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="381.2" y="1749" width="0.2" height="15.0" fill="rgb(251,3,6)" rx="2" ry="2" />
<text  x="384.20" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="950.6" y="1957" width="0.2" height="15.0" fill="rgb(227,175,50)" rx="2" ry="2" />
<text  x="953.57" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (12 samples, 0.20%)</title><rect x="616.4" y="2037" width="2.4" height="15.0" fill="rgb(246,181,19)" rx="2" ry="2" />
<text  x="619.45" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="886.0" y="1669" width="0.2" height="15.0" fill="rgb(241,35,30)" rx="2" ry="2" />
<text  x="888.98" y="1679.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="1146.3" y="1957" width="0.2" height="15.0" fill="rgb(216,156,49)" rx="2" ry="2" />
<text  x="1149.34" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="85.8" y="1957" width="0.2" height="15.0" fill="rgb(217,67,41)" rx="2" ry="2" />
<text  x="88.76" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="654.5" y="1973" width="0.2" height="15.0" fill="rgb(230,64,26)" rx="2" ry="2" />
<text  x="657.52" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="699.2" y="1973" width="0.2" height="15.0" fill="rgb(254,97,12)" rx="2" ry="2" />
<text  x="702.18" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="634.0" y="1925" width="0.2" height="15.0" fill="rgb(229,127,26)" rx="2" ry="2" />
<text  x="636.99" y="1935.5" ></text>
</g>
</g>
</svg>
