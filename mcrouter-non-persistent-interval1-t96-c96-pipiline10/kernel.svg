<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="142.9" y="1845" width="0.4" height="15.0" fill="rgb(249,174,25)" rx="2" ry="2" />
<text  x="145.91" y="1855.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (4 samples, 0.07%)</title><rect x="569.6" y="2005" width="0.8" height="15.0" fill="rgb(235,171,5)" rx="2" ry="2" />
<text  x="572.57" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.49%)</title><rect x="105.0" y="1573" width="17.6" height="15.0" fill="rgb(230,165,4)" rx="2" ry="2" />
<text  x="107.99" y="1583.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="892.1" y="1813" width="0.2" height="15.0" fill="rgb(220,143,44)" rx="2" ry="2" />
<text  x="895.06" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="639.2" y="1973" width="1.0" height="15.0" fill="rgb(228,69,24)" rx="2" ry="2" />
<text  x="642.21" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (8 samples, 0.14%)</title><rect x="40.9" y="1989" width="1.6" height="15.0" fill="rgb(218,155,26)" rx="2" ry="2" />
<text  x="43.93" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (12 samples, 0.20%)</title><rect x="227.1" y="1877" width="2.4" height="15.0" fill="rgb(216,70,15)" rx="2" ry="2" />
<text  x="230.12" y="1887.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (3 samples, 0.05%)</title><rect x="521.3" y="1973" width="0.6" height="15.0" fill="rgb(227,208,42)" rx="2" ry="2" />
<text  x="524.27" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="512.1" y="1909" width="0.4" height="15.0" fill="rgb(241,96,25)" rx="2" ry="2" />
<text  x="515.09" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.03%)</title><rect x="1023.2" y="2037" width="0.4" height="15.0" fill="rgb(232,65,39)" rx="2" ry="2" />
<text  x="1026.17" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.05%)</title><rect x="129.7" y="1973" width="0.6" height="15.0" fill="rgb(212,68,25)" rx="2" ry="2" />
<text  x="132.74" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (2 samples, 0.03%)</title><rect x="984.5" y="1909" width="0.4" height="15.0" fill="rgb(226,99,34)" rx="2" ry="2" />
<text  x="987.45" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="1140.5" y="1973" width="0.4" height="15.0" fill="rgb(222,21,12)" rx="2" ry="2" />
<text  x="1143.51" y="1983.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="162.7" y="2021" width="0.2" height="15.0" fill="rgb(219,8,33)" rx="2" ry="2" />
<text  x="165.66" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (83 samples, 1.40%)</title><rect x="216.7" y="1957" width="16.6" height="15.0" fill="rgb(208,67,31)" rx="2" ry="2" />
<text  x="219.74" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (7 samples, 0.12%)</title><rect x="55.5" y="1941" width="1.4" height="15.0" fill="rgb(237,142,21)" rx="2" ry="2" />
<text  x="58.50" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1067.9" y="1797" width="0.2" height="15.0" fill="rgb(220,29,9)" rx="2" ry="2" />
<text  x="1070.87" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (3 samples, 0.05%)</title><rect x="402.5" y="1893" width="0.6" height="15.0" fill="rgb(207,215,49)" rx="2" ry="2" />
<text  x="405.54" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (10 samples, 0.17%)</title><rect x="333.5" y="1893" width="2.0" height="15.0" fill="rgb(216,226,31)" rx="2" ry="2" />
<text  x="336.49" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="473.8" y="1925" width="0.4" height="15.0" fill="rgb(208,181,44)" rx="2" ry="2" />
<text  x="476.78" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (1 samples, 0.02%)</title><rect x="95.4" y="2021" width="0.2" height="15.0" fill="rgb(227,56,48)" rx="2" ry="2" />
<text  x="98.41" y="2031.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="10.4" y="1957" width="0.8" height="15.0" fill="rgb(245,167,52)" rx="2" ry="2" />
<text  x="13.40" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="118.0" y="37" width="0.2" height="15.0" fill="rgb(207,208,44)" rx="2" ry="2" />
<text  x="120.96" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (15 samples, 0.25%)</title><rect x="546.6" y="1989" width="3.0" height="15.0" fill="rgb(222,149,45)" rx="2" ry="2" />
<text  x="549.62" y="1999.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="10.4" y="1989" width="0.8" height="15.0" fill="rgb(209,41,10)" rx="2" ry="2" />
<text  x="13.40" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (11 samples, 0.19%)</title><rect x="947.1" y="1989" width="2.2" height="15.0" fill="rgb(214,44,32)" rx="2" ry="2" />
<text  x="950.14" y="1999.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="692.1" y="1877" width="0.8" height="15.0" fill="rgb(232,31,24)" rx="2" ry="2" />
<text  x="695.10" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1072.3" y="1573" width="0.2" height="15.0" fill="rgb(254,28,9)" rx="2" ry="2" />
<text  x="1075.26" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="566.0" y="1989" width="0.2" height="15.0" fill="rgb(241,70,10)" rx="2" ry="2" />
<text  x="568.97" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1072.3" y="1493" width="0.2" height="15.0" fill="rgb(225,129,14)" rx="2" ry="2" />
<text  x="1075.26" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="544.0" y="1893" width="0.4" height="15.0" fill="rgb(254,66,38)" rx="2" ry="2" />
<text  x="547.02" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="232.9" y="1941" width="0.2" height="15.0" fill="rgb(241,186,23)" rx="2" ry="2" />
<text  x="235.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="150.7" y="1541" width="0.2" height="15.0" fill="rgb(219,83,32)" rx="2" ry="2" />
<text  x="153.69" y="1551.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="32.6" y="1685" width="0.1" height="15.0" fill="rgb(217,22,33)" rx="2" ry="2" />
<text  x="35.55" y="1695.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="897.0" y="1957" width="0.2" height="15.0" fill="rgb(225,166,52)" rx="2" ry="2" />
<text  x="900.05" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1167.6" y="2037" width="0.2" height="15.0" fill="rgb(213,138,23)" rx="2" ry="2" />
<text  x="1170.65" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="120.8" y="245" width="0.2" height="15.0" fill="rgb(206,197,2)" rx="2" ry="2" />
<text  x="123.76" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="844.0" y="1909" width="0.6" height="15.0" fill="rgb(239,34,38)" rx="2" ry="2" />
<text  x="846.96" y="1919.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="150.7" y="1509" width="0.2" height="15.0" fill="rgb(228,37,47)" rx="2" ry="2" />
<text  x="153.69" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="142.5" y="1845" width="0.2" height="15.0" fill="rgb(247,11,42)" rx="2" ry="2" />
<text  x="145.51" y="1855.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="373.4" y="1669" width="0.2" height="15.0" fill="rgb(237,93,33)" rx="2" ry="2" />
<text  x="376.40" y="1679.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (2 samples, 0.03%)</title><rect x="86.2" y="1957" width="0.4" height="15.0" fill="rgb(249,205,45)" rx="2" ry="2" />
<text  x="89.23" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (4 samples, 0.07%)</title><rect x="543.8" y="1925" width="0.8" height="15.0" fill="rgb(232,207,49)" rx="2" ry="2" />
<text  x="546.82" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="196.0" y="2021" width="0.2" height="15.0" fill="rgb(217,144,4)" rx="2" ry="2" />
<text  x="198.99" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="838.4" y="1925" width="0.6" height="15.0" fill="rgb(241,67,34)" rx="2" ry="2" />
<text  x="841.37" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="51.3" y="1877" width="0.4" height="15.0" fill="rgb(225,99,26)" rx="2" ry="2" />
<text  x="54.31" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1159.7" y="1941" width="0.2" height="15.0" fill="rgb(242,175,18)" rx="2" ry="2" />
<text  x="1162.67" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="568.8" y="1909" width="0.2" height="15.0" fill="rgb(234,120,54)" rx="2" ry="2" />
<text  x="571.77" y="1919.5" ></text>
</g>
<g >
<title>inet_getname (13 samples, 0.22%)</title><rect x="594.1" y="1861" width="2.6" height="15.0" fill="rgb(211,131,11)" rx="2" ry="2" />
<text  x="597.11" y="1871.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="345.7" y="2037" width="0.2" height="15.0" fill="rgb(254,157,51)" rx="2" ry="2" />
<text  x="348.66" y="2047.5" ></text>
</g>
<g >
<title>___sys_sendmsg (442 samples, 7.48%)</title><rect x="247.5" y="1957" width="88.2" height="15.0" fill="rgb(250,192,46)" rx="2" ry="2" />
<text  x="250.48" y="1967.5" >___sys_sen..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="202.2" y="1957" width="0.2" height="15.0" fill="rgb(246,196,15)" rx="2" ry="2" />
<text  x="205.18" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="121.2" y="469" width="0.2" height="15.0" fill="rgb(235,83,6)" rx="2" ry="2" />
<text  x="124.16" y="479.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="914.2" y="1733" width="0.2" height="15.0" fill="rgb(244,72,27)" rx="2" ry="2" />
<text  x="917.21" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1139.9" y="1989" width="0.2" height="15.0" fill="rgb(230,218,54)" rx="2" ry="2" />
<text  x="1142.91" y="1999.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="266.2" y="1877" width="0.2" height="15.0" fill="rgb(241,217,12)" rx="2" ry="2" />
<text  x="269.24" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="913.6" y="2037" width="0.2" height="15.0" fill="rgb(212,20,17)" rx="2" ry="2" />
<text  x="916.61" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="462.0" y="1765" width="0.2" height="15.0" fill="rgb(227,201,45)" rx="2" ry="2" />
<text  x="465.00" y="1775.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1127.5" y="2037" width="0.2" height="15.0" fill="rgb(232,227,43)" rx="2" ry="2" />
<text  x="1130.54" y="2047.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="181.8" y="1957" width="1.0" height="15.0" fill="rgb(242,68,11)" rx="2" ry="2" />
<text  x="184.82" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="169.6" y="1989" width="0.4" height="15.0" fill="rgb(216,20,7)" rx="2" ry="2" />
<text  x="172.65" y="1999.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (6 samples, 0.10%)</title><rect x="90.2" y="1957" width="1.2" height="15.0" fill="rgb(248,225,13)" rx="2" ry="2" />
<text  x="93.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.81%)</title><rect x="104.2" y="1957" width="21.3" height="15.0" fill="rgb(244,23,17)" rx="2" ry="2" />
<text  x="107.19" y="1967.5" >[..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="897.8" y="2005" width="1.4" height="15.0" fill="rgb(230,89,7)" rx="2" ry="2" />
<text  x="900.84" y="2015.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="176.4" y="1925" width="0.2" height="15.0" fill="rgb(219,190,0)" rx="2" ry="2" />
<text  x="179.43" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="619.5" y="1957" width="0.2" height="15.0" fill="rgb(218,36,45)" rx="2" ry="2" />
<text  x="622.46" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="962.1" y="1877" width="0.8" height="15.0" fill="rgb(220,114,47)" rx="2" ry="2" />
<text  x="965.10" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1067.1" y="1845" width="0.2" height="15.0" fill="rgb(219,24,47)" rx="2" ry="2" />
<text  x="1070.07" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="909.4" y="1989" width="0.2" height="15.0" fill="rgb(242,199,1)" rx="2" ry="2" />
<text  x="912.42" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="338.3" y="1765" width="0.2" height="15.0" fill="rgb(228,75,2)" rx="2" ry="2" />
<text  x="341.28" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1589" width="17.8" height="15.0" fill="rgb(247,127,42)" rx="2" ry="2" />
<text  x="107.99" y="1599.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="479.8" y="1973" width="0.2" height="15.0" fill="rgb(207,207,10)" rx="2" ry="2" />
<text  x="482.76" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="47.3" y="1925" width="0.8" height="15.0" fill="rgb(206,162,0)" rx="2" ry="2" />
<text  x="50.32" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="253.1" y="1701" width="0.2" height="15.0" fill="rgb(210,150,34)" rx="2" ry="2" />
<text  x="256.06" y="1711.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="289.2" y="1509" width="0.2" height="15.0" fill="rgb(237,31,34)" rx="2" ry="2" />
<text  x="292.18" y="1519.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (11 samples, 0.19%)</title><rect x="983.7" y="1973" width="2.1" height="15.0" fill="rgb(240,147,49)" rx="2" ry="2" />
<text  x="986.65" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="911.6" y="2021" width="0.6" height="15.0" fill="rgb(248,156,8)" rx="2" ry="2" />
<text  x="914.61" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="638.6" y="1973" width="0.6" height="15.0" fill="rgb(216,192,23)" rx="2" ry="2" />
<text  x="641.61" y="1983.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.08%)</title><rect x="672.5" y="1909" width="1.0" height="15.0" fill="rgb(227,31,16)" rx="2" ry="2" />
<text  x="675.54" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="185.6" y="1845" width="0.8" height="15.0" fill="rgb(220,61,8)" rx="2" ry="2" />
<text  x="188.61" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="901.2" y="1973" width="0.2" height="15.0" fill="rgb(233,113,23)" rx="2" ry="2" />
<text  x="904.24" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="458.0" y="1845" width="0.2" height="15.0" fill="rgb(206,225,10)" rx="2" ry="2" />
<text  x="461.01" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt;::IntegralSizePolicy (3 samples, 0.05%)</title><rect x="568.4" y="1957" width="0.6" height="15.0" fill="rgb(208,148,52)" rx="2" ry="2" />
<text  x="571.37" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="909.4" y="1909" width="0.2" height="15.0" fill="rgb(236,113,23)" rx="2" ry="2" />
<text  x="912.42" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="884.1" y="1781" width="0.2" height="15.0" fill="rgb(237,211,38)" rx="2" ry="2" />
<text  x="887.07" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (39 samples, 0.66%)</title><rect x="1171.2" y="2037" width="7.8" height="15.0" fill="rgb(245,35,21)" rx="2" ry="2" />
<text  x="1174.24" y="2047.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="742.0" y="1765" width="0.2" height="15.0" fill="rgb(219,107,10)" rx="2" ry="2" />
<text  x="744.99" y="1775.5" ></text>
</g>
<g >
<title>folly::VirtualEventBase::keepAliveAcquire (1 samples, 0.02%)</title><rect x="971.5" y="2021" width="0.2" height="15.0" fill="rgb(228,98,41)" rx="2" ry="2" />
<text  x="974.48" y="2031.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (203 samples, 3.43%)</title><rect x="277.2" y="1829" width="40.5" height="15.0" fill="rgb(212,40,33)" rx="2" ry="2" />
<text  x="280.21" y="1839.5" >__t..</text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (7 samples, 0.12%)</title><rect x="229.9" y="1845" width="1.4" height="15.0" fill="rgb(242,12,24)" rx="2" ry="2" />
<text  x="232.92" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="120.8" y="165" width="0.2" height="15.0" fill="rgb(226,226,7)" rx="2" ry="2" />
<text  x="123.76" y="175.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="949.7" y="1989" width="0.4" height="15.0" fill="rgb(247,120,14)" rx="2" ry="2" />
<text  x="952.73" y="1999.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (16 samples, 0.27%)</title><rect x="12.4" y="2069" width="3.2" height="15.0" fill="rgb(247,218,52)" rx="2" ry="2" />
<text  x="15.39" y="2079.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (11 samples, 0.19%)</title><rect x="885.9" y="1941" width="2.2" height="15.0" fill="rgb(239,162,49)" rx="2" ry="2" />
<text  x="888.87" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="185.6" y="1957" width="0.8" height="15.0" fill="rgb(229,91,10)" rx="2" ry="2" />
<text  x="188.61" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="338.3" y="1701" width="0.2" height="15.0" fill="rgb(205,96,39)" rx="2" ry="2" />
<text  x="341.28" y="1711.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="893.9" y="2005" width="0.2" height="15.0" fill="rgb(221,169,0)" rx="2" ry="2" />
<text  x="896.85" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="460.0" y="1621" width="0.2" height="15.0" fill="rgb(212,187,4)" rx="2" ry="2" />
<text  x="463.01" y="1631.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.22%)</title><rect x="696.1" y="1973" width="2.6" height="15.0" fill="rgb(243,105,29)" rx="2" ry="2" />
<text  x="699.09" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="501.5" y="1717" width="0.8" height="15.0" fill="rgb(221,190,4)" rx="2" ry="2" />
<text  x="504.52" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="527.3" y="2005" width="0.2" height="15.0" fill="rgb(217,119,35)" rx="2" ry="2" />
<text  x="530.26" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="474.0" y="1733" width="0.2" height="15.0" fill="rgb(242,214,3)" rx="2" ry="2" />
<text  x="476.98" y="1743.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(230,9,44)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="340.1" y="1973" width="0.2" height="15.0" fill="rgb(250,166,20)" rx="2" ry="2" />
<text  x="343.07" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="562.4" y="1973" width="2.2" height="15.0" fill="rgb(212,18,19)" rx="2" ry="2" />
<text  x="565.38" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="407.7" y="1909" width="0.2" height="15.0" fill="rgb(253,53,27)" rx="2" ry="2" />
<text  x="410.72" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="144.3" y="1909" width="0.2" height="15.0" fill="rgb(228,49,15)" rx="2" ry="2" />
<text  x="147.30" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="401.1" y="1893" width="0.2" height="15.0" fill="rgb(252,158,4)" rx="2" ry="2" />
<text  x="404.14" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="805" width="16.0" height="15.0" fill="rgb(253,33,41)" rx="2" ry="2" />
<text  x="108.39" y="815.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (1 samples, 0.02%)</title><rect x="969.9" y="2037" width="0.2" height="15.0" fill="rgb(221,199,21)" rx="2" ry="2" />
<text  x="972.88" y="2047.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (100 samples, 1.69%)</title><rect x="290.8" y="1717" width="19.9" height="15.0" fill="rgb(231,119,9)" rx="2" ry="2" />
<text  x="293.78" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (7 samples, 0.12%)</title><rect x="130.7" y="1957" width="1.4" height="15.0" fill="rgb(241,220,50)" rx="2" ry="2" />
<text  x="133.73" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="842.8" y="1845" width="0.2" height="15.0" fill="rgb(241,203,51)" rx="2" ry="2" />
<text  x="845.77" y="1855.5" ></text>
</g>
<g >
<title>skb_entail (4 samples, 0.07%)</title><rect x="273.8" y="1877" width="0.8" height="15.0" fill="rgb(218,136,43)" rx="2" ry="2" />
<text  x="276.82" y="1887.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="1018.6" y="1733" width="0.2" height="15.0" fill="rgb(249,218,21)" rx="2" ry="2" />
<text  x="1021.58" y="1743.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="470.6" y="1829" width="0.2" height="15.0" fill="rgb(211,225,4)" rx="2" ry="2" />
<text  x="473.59" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1072.3" y="1589" width="0.2" height="15.0" fill="rgb(205,24,24)" rx="2" ry="2" />
<text  x="1075.26" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="121.2" y="245" width="0.2" height="15.0" fill="rgb(213,46,25)" rx="2" ry="2" />
<text  x="124.16" y="255.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="60.3" y="1941" width="1.0" height="15.0" fill="rgb(226,104,17)" rx="2" ry="2" />
<text  x="63.29" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="363.2" y="1925" width="0.2" height="15.0" fill="rgb(235,103,32)" rx="2" ry="2" />
<text  x="366.22" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (6 samples, 0.10%)</title><rect x="839.0" y="1925" width="1.2" height="15.0" fill="rgb(245,146,7)" rx="2" ry="2" />
<text  x="841.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1461" width="17.2" height="15.0" fill="rgb(224,74,53)" rx="2" ry="2" />
<text  x="107.99" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="58.9" y="1845" width="0.2" height="15.0" fill="rgb(244,58,20)" rx="2" ry="2" />
<text  x="61.89" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (3 samples, 0.05%)</title><rect x="74.9" y="1957" width="0.6" height="15.0" fill="rgb(226,116,54)" rx="2" ry="2" />
<text  x="77.86" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (3 samples, 0.05%)</title><rect x="29.8" y="1989" width="0.6" height="15.0" fill="rgb(241,11,14)" rx="2" ry="2" />
<text  x="32.76" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="525.7" y="1989" width="1.2" height="15.0" fill="rgb(254,96,15)" rx="2" ry="2" />
<text  x="528.66" y="1999.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (13 samples, 0.22%)</title><rect x="269.6" y="1845" width="2.6" height="15.0" fill="rgb(230,228,20)" rx="2" ry="2" />
<text  x="272.63" y="1855.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="995.6" y="1925" width="0.2" height="15.0" fill="rgb(246,23,6)" rx="2" ry="2" />
<text  x="998.63" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1139.5" y="1957" width="0.2" height="15.0" fill="rgb(205,125,23)" rx="2" ry="2" />
<text  x="1142.51" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="316.5" y="1749" width="0.4" height="15.0" fill="rgb(237,122,49)" rx="2" ry="2" />
<text  x="319.52" y="1759.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="81.4" y="1941" width="0.2" height="15.0" fill="rgb(216,52,26)" rx="2" ry="2" />
<text  x="84.44" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="142.5" y="1877" width="0.8" height="15.0" fill="rgb(213,139,45)" rx="2" ry="2" />
<text  x="145.51" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (6 samples, 0.10%)</title><rect x="62.5" y="1909" width="1.2" height="15.0" fill="rgb(228,57,3)" rx="2" ry="2" />
<text  x="65.48" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="566.0" y="1813" width="0.2" height="15.0" fill="rgb(227,29,10)" rx="2" ry="2" />
<text  x="568.97" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="363.2" y="1797" width="0.2" height="15.0" fill="rgb(211,194,0)" rx="2" ry="2" />
<text  x="366.22" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="964.7" y="1749" width="0.2" height="15.0" fill="rgb(207,36,14)" rx="2" ry="2" />
<text  x="967.70" y="1759.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="460.0" y="1557" width="0.2" height="15.0" fill="rgb(209,185,7)" rx="2" ry="2" />
<text  x="463.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="840.0" y="1893" width="0.2" height="15.0" fill="rgb(225,194,50)" rx="2" ry="2" />
<text  x="842.97" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_fin (1 samples, 0.02%)</title><rect x="825.6" y="1749" width="0.2" height="15.0" fill="rgb(233,117,1)" rx="2" ry="2" />
<text  x="828.60" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (2 samples, 0.03%)</title><rect x="721.0" y="1845" width="0.4" height="15.0" fill="rgb(224,69,3)" rx="2" ry="2" />
<text  x="724.03" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (3 samples, 0.05%)</title><rect x="658.0" y="1925" width="0.6" height="15.0" fill="rgb(252,51,47)" rx="2" ry="2" />
<text  x="660.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="485" width="15.8" height="15.0" fill="rgb(235,73,38)" rx="2" ry="2" />
<text  x="108.39" y="495.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.61%)</title><rect x="900.0" y="2005" width="7.2" height="15.0" fill="rgb(207,152,32)" rx="2" ry="2" />
<text  x="903.04" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::AsyncWriter (1 samples, 0.02%)</title><rect x="566.2" y="2005" width="0.2" height="15.0" fill="rgb(207,13,4)" rx="2" ry="2" />
<text  x="569.17" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="777.1" y="1541" width="0.6" height="15.0" fill="rgb(241,170,49)" rx="2" ry="2" />
<text  x="780.11" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="517" width="16.0" height="15.0" fill="rgb(254,53,18)" rx="2" ry="2" />
<text  x="108.39" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (17 samples, 0.29%)</title><rect x="993.8" y="2005" width="3.4" height="15.0" fill="rgb(238,18,0)" rx="2" ry="2" />
<text  x="996.83" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (1 samples, 0.02%)</title><rect x="645.0" y="1989" width="0.2" height="15.0" fill="rgb(219,152,54)" rx="2" ry="2" />
<text  x="648.00" y="1999.5" ></text>
</g>
<g >
<title>syscall (16 samples, 0.27%)</title><rect x="1024.6" y="2037" width="3.2" height="15.0" fill="rgb(237,16,52)" rx="2" ry="2" />
<text  x="1027.56" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 1.84%)</title><rect x="104.2" y="1989" width="21.7" height="15.0" fill="rgb(230,7,15)" rx="2" ry="2" />
<text  x="107.19" y="1999.5" >[..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="1175.6" y="1973" width="0.4" height="15.0" fill="rgb(242,133,24)" rx="2" ry="2" />
<text  x="1178.63" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="252.5" y="1893" width="0.2" height="15.0" fill="rgb(230,99,54)" rx="2" ry="2" />
<text  x="255.47" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="1022.2" y="2005" width="0.4" height="15.0" fill="rgb(244,114,43)" rx="2" ry="2" />
<text  x="1025.17" y="2015.5" ></text>
</g>
<g >
<title>sock_poll (43 samples, 0.73%)</title><rect x="453.0" y="1957" width="8.6" height="15.0" fill="rgb(247,29,28)" rx="2" ry="2" />
<text  x="456.02" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1133.9" y="2021" width="0.2" height="15.0" fill="rgb(252,126,3)" rx="2" ry="2" />
<text  x="1136.92" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="176.8" y="1973" width="0.6" height="15.0" fill="rgb(242,161,37)" rx="2" ry="2" />
<text  x="179.83" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="883.5" y="1941" width="0.2" height="15.0" fill="rgb(247,202,16)" rx="2" ry="2" />
<text  x="886.48" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="246.7" y="1989" width="0.2" height="15.0" fill="rgb(241,171,23)" rx="2" ry="2" />
<text  x="249.68" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (1 samples, 0.02%)</title><rect x="852.5" y="1957" width="0.2" height="15.0" fill="rgb(237,136,27)" rx="2" ry="2" />
<text  x="855.54" y="1967.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="598.1" y="1877" width="0.2" height="15.0" fill="rgb(223,151,39)" rx="2" ry="2" />
<text  x="601.10" y="1887.5" ></text>
</g>
<g >
<title>__d_instantiate (1 samples, 0.02%)</title><rect x="406.9" y="1925" width="0.2" height="15.0" fill="rgb(212,92,5)" rx="2" ry="2" />
<text  x="409.93" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="1167.6" y="2005" width="0.2" height="15.0" fill="rgb(247,88,44)" rx="2" ry="2" />
<text  x="1170.65" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="105.0" y="1413" width="17.0" height="15.0" fill="rgb(248,203,37)" rx="2" ry="2" />
<text  x="107.99" y="1423.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="1067.1" y="1749" width="0.2" height="15.0" fill="rgb(214,69,3)" rx="2" ry="2" />
<text  x="1070.07" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="672.3" y="1669" width="0.2" height="15.0" fill="rgb(232,138,18)" rx="2" ry="2" />
<text  x="675.34" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="421" width="15.8" height="15.0" fill="rgb(249,161,21)" rx="2" ry="2" />
<text  x="108.39" y="431.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="699.7" y="1973" width="0.2" height="15.0" fill="rgb(252,216,17)" rx="2" ry="2" />
<text  x="702.68" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="382.2" y="1925" width="0.6" height="15.0" fill="rgb(254,187,9)" rx="2" ry="2" />
<text  x="385.18" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (3 samples, 0.05%)</title><rect x="226.5" y="1861" width="0.6" height="15.0" fill="rgb(252,185,33)" rx="2" ry="2" />
<text  x="229.52" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (13 samples, 0.22%)</title><rect x="797.5" y="1541" width="2.6" height="15.0" fill="rgb(242,111,5)" rx="2" ry="2" />
<text  x="800.46" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="462.0" y="1829" width="0.2" height="15.0" fill="rgb(234,179,25)" rx="2" ry="2" />
<text  x="465.00" y="1839.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="384.8" y="1925" width="0.4" height="15.0" fill="rgb(237,187,50)" rx="2" ry="2" />
<text  x="387.77" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1108.6" y="1589" width="0.4" height="15.0" fill="rgb(221,85,45)" rx="2" ry="2" />
<text  x="1111.58" y="1599.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1083.2" y="1733" width="0.2" height="15.0" fill="rgb(232,84,16)" rx="2" ry="2" />
<text  x="1086.24" y="1743.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="933.2" y="1973" width="0.2" height="15.0" fill="rgb(207,56,30)" rx="2" ry="2" />
<text  x="936.17" y="1983.5" ></text>
</g>
<g >
<title>sock_destroy_inode (19 samples, 0.32%)</title><rect x="734.4" y="1685" width="3.8" height="15.0" fill="rgb(238,227,34)" rx="2" ry="2" />
<text  x="737.40" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="699.1" y="2005" width="1.4" height="15.0" fill="rgb(240,221,0)" rx="2" ry="2" />
<text  x="702.08" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="358.4" y="1877" width="0.2" height="15.0" fill="rgb(218,189,13)" rx="2" ry="2" />
<text  x="361.43" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="202.2" y="1909" width="0.2" height="15.0" fill="rgb(216,5,29)" rx="2" ry="2" />
<text  x="205.18" y="1919.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.9" y="2005" width="0.2" height="15.0" fill="rgb(231,16,51)" rx="2" ry="2" />
<text  x="960.91" y="2015.5" ></text>
</g>
<g >
<title>security_socket_getpeername (7 samples, 0.12%)</title><rect x="668.3" y="1861" width="1.4" height="15.0" fill="rgb(224,138,9)" rx="2" ry="2" />
<text  x="671.35" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb (10 samples, 0.17%)</title><rect x="308.5" y="1669" width="2.0" height="15.0" fill="rgb(241,85,29)" rx="2" ry="2" />
<text  x="311.54" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="194.2" y="2021" width="0.2" height="15.0" fill="rgb(254,191,52)" rx="2" ry="2" />
<text  x="197.19" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="120.4" y="53" width="0.2" height="15.0" fill="rgb(250,13,2)" rx="2" ry="2" />
<text  x="123.36" y="63.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="887.7" y="1845" width="0.4" height="15.0" fill="rgb(223,164,23)" rx="2" ry="2" />
<text  x="890.67" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="462.0" y="1909" width="0.2" height="15.0" fill="rgb(232,206,40)" rx="2" ry="2" />
<text  x="465.00" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="509.7" y="2037" width="0.4" height="15.0" fill="rgb(234,110,3)" rx="2" ry="2" />
<text  x="512.70" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="763.1" y="1573" width="0.2" height="15.0" fill="rgb(220,49,24)" rx="2" ry="2" />
<text  x="766.14" y="1583.5" ></text>
</g>
<g >
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="293.4" y="1669" width="0.4" height="15.0" fill="rgb(239,62,53)" rx="2" ry="2" />
<text  x="296.38" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="701.9" y="2037" width="0.2" height="15.0" fill="rgb(235,110,21)" rx="2" ry="2" />
<text  x="704.88" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="340.3" y="1765" width="0.2" height="15.0" fill="rgb(216,16,14)" rx="2" ry="2" />
<text  x="343.27" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="969.3" y="1813" width="0.2" height="15.0" fill="rgb(225,158,14)" rx="2" ry="2" />
<text  x="972.29" y="1823.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (8 samples, 0.14%)</title><rect x="96.6" y="2053" width="1.6" height="15.0" fill="rgb(230,228,46)" rx="2" ry="2" />
<text  x="99.61" y="2063.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="250.7" y="1925" width="0.4" height="15.0" fill="rgb(237,207,2)" rx="2" ry="2" />
<text  x="253.67" y="1935.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="399.1" y="1877" width="0.6" height="15.0" fill="rgb(210,71,15)" rx="2" ry="2" />
<text  x="402.14" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1067.5" y="1813" width="0.2" height="15.0" fill="rgb(233,122,33)" rx="2" ry="2" />
<text  x="1070.47" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (88 samples, 1.49%)</title><rect x="870.5" y="1973" width="17.6" height="15.0" fill="rgb(231,129,41)" rx="2" ry="2" />
<text  x="873.50" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="524.3" y="1877" width="0.2" height="15.0" fill="rgb(231,74,0)" rx="2" ry="2" />
<text  x="527.27" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="209.2" y="1845" width="0.6" height="15.0" fill="rgb(207,32,26)" rx="2" ry="2" />
<text  x="212.16" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (3 samples, 0.05%)</title><rect x="85.2" y="1925" width="0.6" height="15.0" fill="rgb(238,91,29)" rx="2" ry="2" />
<text  x="88.23" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1122.1" y="1781" width="0.2" height="15.0" fill="rgb(251,153,44)" rx="2" ry="2" />
<text  x="1125.15" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="844.4" y="1813" width="0.2" height="15.0" fill="rgb(224,83,14)" rx="2" ry="2" />
<text  x="847.36" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="969.3" y="1781" width="0.2" height="15.0" fill="rgb(249,67,47)" rx="2" ry="2" />
<text  x="972.29" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="54.7" y="1957" width="0.2" height="15.0" fill="rgb(234,7,33)" rx="2" ry="2" />
<text  x="57.70" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (24 samples, 0.41%)</title><rect x="1063.1" y="1893" width="4.8" height="15.0" fill="rgb(232,128,10)" rx="2" ry="2" />
<text  x="1066.08" y="1903.5" ></text>
</g>
<g >
<title>folly::isSet (1 samples, 0.02%)</title><rect x="875.7" y="1909" width="0.2" height="15.0" fill="rgb(254,43,6)" rx="2" ry="2" />
<text  x="878.69" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="104.2" y="1877" width="20.1" height="15.0" fill="rgb(237,229,26)" rx="2" ry="2" />
<text  x="107.19" y="1887.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="230.9" y="1829" width="0.4" height="15.0" fill="rgb(250,147,10)" rx="2" ry="2" />
<text  x="233.91" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="912.8" y="2005" width="0.2" height="15.0" fill="rgb(216,228,31)" rx="2" ry="2" />
<text  x="915.81" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (3 samples, 0.05%)</title><rect x="157.7" y="1941" width="0.6" height="15.0" fill="rgb(244,87,28)" rx="2" ry="2" />
<text  x="160.67" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (20 samples, 0.34%)</title><rect x="845.6" y="1941" width="4.0" height="15.0" fill="rgb(222,24,38)" rx="2" ry="2" />
<text  x="848.56" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="900.4" y="1733" width="0.2" height="15.0" fill="rgb(234,154,48)" rx="2" ry="2" />
<text  x="903.44" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.05%)</title><rect x="995.0" y="1973" width="0.6" height="15.0" fill="rgb(243,213,51)" rx="2" ry="2" />
<text  x="998.03" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="524.7" y="1973" width="0.4" height="15.0" fill="rgb(249,105,17)" rx="2" ry="2" />
<text  x="527.67" y="1983.5" ></text>
</g>
<g >
<title>remove_wait_queue (17 samples, 0.29%)</title><rect x="470.8" y="1941" width="3.4" height="15.0" fill="rgb(251,217,20)" rx="2" ry="2" />
<text  x="473.78" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="152.9" y="1877" width="0.2" height="15.0" fill="rgb(210,165,33)" rx="2" ry="2" />
<text  x="155.89" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="363.2" y="1653" width="0.2" height="15.0" fill="rgb(235,221,6)" rx="2" ry="2" />
<text  x="366.22" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="672.3" y="1829" width="0.2" height="15.0" fill="rgb(253,52,13)" rx="2" ry="2" />
<text  x="675.34" y="1839.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="363.2" y="1557" width="0.2" height="15.0" fill="rgb(240,107,42)" rx="2" ry="2" />
<text  x="366.22" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="616.5" y="2021" width="1.8" height="15.0" fill="rgb(224,145,29)" rx="2" ry="2" />
<text  x="619.46" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="114.0" y="53" width="2.8" height="15.0" fill="rgb(210,97,33)" rx="2" ry="2" />
<text  x="116.97" y="63.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="185.8" y="1829" width="0.6" height="15.0" fill="rgb(249,229,49)" rx="2" ry="2" />
<text  x="188.81" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="840.0" y="1909" width="0.2" height="15.0" fill="rgb(205,82,15)" rx="2" ry="2" />
<text  x="842.97" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="620.3" y="2005" width="0.2" height="15.0" fill="rgb(209,46,51)" rx="2" ry="2" />
<text  x="623.26" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="110.6" y="37" width="0.4" height="15.0" fill="rgb(243,200,50)" rx="2" ry="2" />
<text  x="113.58" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1104.4" y="1861" width="0.2" height="15.0" fill="rgb(206,84,22)" rx="2" ry="2" />
<text  x="1107.39" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="202.0" y="2021" width="0.4" height="15.0" fill="rgb(215,24,34)" rx="2" ry="2" />
<text  x="204.98" y="2031.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="1122.1" y="1621" width="0.2" height="15.0" fill="rgb(215,180,39)" rx="2" ry="2" />
<text  x="1125.15" y="1631.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="264.4" y="1861" width="0.2" height="15.0" fill="rgb(212,171,8)" rx="2" ry="2" />
<text  x="267.44" y="1871.5" ></text>
</g>
<g >
<title>_IO_old_init (3 samples, 0.05%)</title><rect x="196.4" y="2037" width="0.6" height="15.0" fill="rgb(212,84,26)" rx="2" ry="2" />
<text  x="199.39" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="338.3" y="1733" width="0.2" height="15.0" fill="rgb(253,163,29)" rx="2" ry="2" />
<text  x="341.28" y="1743.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="914.2" y="1621" width="0.2" height="15.0" fill="rgb(232,209,41)" rx="2" ry="2" />
<text  x="917.21" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (460 samples, 7.78%)</title><rect x="1035.5" y="2021" width="91.8" height="15.0" fill="rgb(224,225,10)" rx="2" ry="2" />
<text  x="1038.54" y="2031.5" >do_syscall..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="146.5" y="1877" width="0.2" height="15.0" fill="rgb(240,35,1)" rx="2" ry="2" />
<text  x="149.50" y="1887.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="691.9" y="1877" width="0.2" height="15.0" fill="rgb(230,110,14)" rx="2" ry="2" />
<text  x="694.90" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="379.8" y="1941" width="0.2" height="15.0" fill="rgb(228,148,5)" rx="2" ry="2" />
<text  x="382.79" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="202.2" y="1941" width="0.2" height="15.0" fill="rgb(225,144,6)" rx="2" ry="2" />
<text  x="205.18" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="887.5" y="1877" width="0.6" height="15.0" fill="rgb(233,125,4)" rx="2" ry="2" />
<text  x="890.47" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="452.2" y="1957" width="0.2" height="15.0" fill="rgb(231,60,7)" rx="2" ry="2" />
<text  x="455.23" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="309.9" y="1637" width="0.2" height="15.0" fill="rgb(235,63,21)" rx="2" ry="2" />
<text  x="312.94" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="949.5" y="2005" width="0.6" height="15.0" fill="rgb(243,160,29)" rx="2" ry="2" />
<text  x="952.53" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (19 samples, 0.32%)</title><rect x="604.3" y="1893" width="3.8" height="15.0" fill="rgb(245,5,39)" rx="2" ry="2" />
<text  x="607.29" y="1903.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="480.6" y="1973" width="0.2" height="15.0" fill="rgb(229,7,35)" rx="2" ry="2" />
<text  x="483.56" y="1983.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (6 samples, 0.10%)</title><rect x="69.3" y="1925" width="1.2" height="15.0" fill="rgb(238,154,43)" rx="2" ry="2" />
<text  x="72.27" y="1935.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (19 samples, 0.32%)</title><rect x="1122.9" y="1973" width="3.8" height="15.0" fill="rgb(242,52,16)" rx="2" ry="2" />
<text  x="1125.95" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="233.1" y="1941" width="0.2" height="15.0" fill="rgb(208,158,53)" rx="2" ry="2" />
<text  x="236.11" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="389" width="15.8" height="15.0" fill="rgb(236,20,45)" rx="2" ry="2" />
<text  x="108.39" y="399.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="168.7" y="1973" width="0.1" height="15.0" fill="rgb(230,181,38)" rx="2" ry="2" />
<text  x="171.65" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="844.4" y="1685" width="0.2" height="15.0" fill="rgb(221,108,33)" rx="2" ry="2" />
<text  x="847.36" y="1695.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="740.6" y="1685" width="0.8" height="15.0" fill="rgb(238,120,52)" rx="2" ry="2" />
<text  x="743.59" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1080.6" y="1717" width="0.2" height="15.0" fill="rgb(209,206,19)" rx="2" ry="2" />
<text  x="1083.64" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="627.4" y="2005" width="0.4" height="15.0" fill="rgb(210,88,10)" rx="2" ry="2" />
<text  x="630.44" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (7 samples, 0.12%)</title><rect x="699.1" y="2021" width="1.4" height="15.0" fill="rgb(214,115,34)" rx="2" ry="2" />
<text  x="702.08" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="566.0" y="1733" width="0.2" height="15.0" fill="rgb(209,83,23)" rx="2" ry="2" />
<text  x="568.97" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="995.4" y="1941" width="0.2" height="15.0" fill="rgb(217,115,35)" rx="2" ry="2" />
<text  x="998.43" y="1951.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="525.3" y="1989" width="0.2" height="15.0" fill="rgb(239,179,38)" rx="2" ry="2" />
<text  x="528.26" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (2 samples, 0.03%)</title><rect x="620.9" y="2037" width="0.4" height="15.0" fill="rgb(224,174,1)" rx="2" ry="2" />
<text  x="623.85" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="990.0" y="1989" width="0.2" height="15.0" fill="rgb(232,219,4)" rx="2" ry="2" />
<text  x="993.04" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (5 samples, 0.08%)</title><rect x="575.2" y="2005" width="1.0" height="15.0" fill="rgb(233,142,19)" rx="2" ry="2" />
<text  x="578.15" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="905.2" y="1861" width="0.2" height="15.0" fill="rgb(224,73,3)" rx="2" ry="2" />
<text  x="908.23" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="543.0" y="1957" width="0.2" height="15.0" fill="rgb(228,12,31)" rx="2" ry="2" />
<text  x="546.03" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1067.5" y="1765" width="0.2" height="15.0" fill="rgb(210,184,7)" rx="2" ry="2" />
<text  x="1070.47" y="1775.5" ></text>
</g>
<g >
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="771.7" y="1669" width="0.4" height="15.0" fill="rgb(232,6,16)" rx="2" ry="2" />
<text  x="774.72" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="210.4" y="2021" width="0.4" height="15.0" fill="rgb(252,77,13)" rx="2" ry="2" />
<text  x="213.36" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="951.1" y="1941" width="0.2" height="15.0" fill="rgb(236,140,16)" rx="2" ry="2" />
<text  x="954.13" y="1951.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="452.2" y="1925" width="0.2" height="15.0" fill="rgb(239,101,29)" rx="2" ry="2" />
<text  x="455.23" y="1935.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="644.6" y="1989" width="0.2" height="15.0" fill="rgb(227,110,45)" rx="2" ry="2" />
<text  x="647.60" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (6 samples, 0.10%)</title><rect x="567.8" y="2005" width="1.2" height="15.0" fill="rgb(219,201,40)" rx="2" ry="2" />
<text  x="570.77" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="274.4" y="1781" width="0.2" height="15.0" fill="rgb(214,225,35)" rx="2" ry="2" />
<text  x="277.42" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.8" y="1685" width="0.2" height="15.0" fill="rgb(240,184,8)" rx="2" ry="2" />
<text  x="107.79" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="458.0" y="1829" width="0.2" height="15.0" fill="rgb(226,96,8)" rx="2" ry="2" />
<text  x="461.01" y="1839.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="958.3" y="1957" width="0.2" height="15.0" fill="rgb(224,85,12)" rx="2" ry="2" />
<text  x="961.31" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="292.2" y="1701" width="0.2" height="15.0" fill="rgb(236,227,48)" rx="2" ry="2" />
<text  x="295.18" y="1711.5" ></text>
</g>
<g >
<title>__close (14 samples, 0.24%)</title><rect x="952.3" y="1973" width="2.8" height="15.0" fill="rgb(231,146,21)" rx="2" ry="2" />
<text  x="955.32" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="982.1" y="1909" width="0.2" height="15.0" fill="rgb(226,169,1)" rx="2" ry="2" />
<text  x="985.06" y="1919.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="289.4" y="1493" width="0.2" height="15.0" fill="rgb(222,101,36)" rx="2" ry="2" />
<text  x="292.38" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1045" width="16.0" height="15.0" fill="rgb(252,67,4)" rx="2" ry="2" />
<text  x="108.39" y="1055.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (12 samples, 0.20%)</title><rect x="1138.5" y="2021" width="2.4" height="15.0" fill="rgb(213,30,47)" rx="2" ry="2" />
<text  x="1141.51" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (2 samples, 0.03%)</title><rect x="630.8" y="1989" width="0.4" height="15.0" fill="rgb(232,73,16)" rx="2" ry="2" />
<text  x="633.83" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="459.8" y="1621" width="0.2" height="15.0" fill="rgb(209,36,8)" rx="2" ry="2" />
<text  x="462.81" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="481.0" y="1861" width="0.4" height="15.0" fill="rgb(229,115,32)" rx="2" ry="2" />
<text  x="483.96" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="848.4" y="1893" width="0.8" height="15.0" fill="rgb(245,148,48)" rx="2" ry="2" />
<text  x="851.35" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (1 samples, 0.02%)</title><rect x="75.5" y="1957" width="0.2" height="15.0" fill="rgb(221,227,37)" rx="2" ry="2" />
<text  x="78.46" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (176 samples, 2.98%)</title><rect x="914.2" y="2037" width="35.1" height="15.0" fill="rgb(232,9,17)" rx="2" ry="2" />
<text  x="917.21" y="2047.5" >fa..</text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="121.2" y="197" width="0.2" height="15.0" fill="rgb(226,61,41)" rx="2" ry="2" />
<text  x="124.16" y="207.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1002.6" y="2005" width="0.2" height="15.0" fill="rgb(226,146,17)" rx="2" ry="2" />
<text  x="1005.61" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="964.7" y="1877" width="0.2" height="15.0" fill="rgb(225,86,38)" rx="2" ry="2" />
<text  x="967.70" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="69.9" y="1813" width="0.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="72.87" y="1823.5" ></text>
</g>
<g >
<title>SYSC_getsockname (1 samples, 0.02%)</title><rect x="593.1" y="1893" width="0.2" height="15.0" fill="rgb(230,80,31)" rx="2" ry="2" />
<text  x="596.12" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="566.0" y="1797" width="0.2" height="15.0" fill="rgb(235,53,33)" rx="2" ry="2" />
<text  x="568.97" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2 samples, 0.03%)</title><rect x="84.6" y="1909" width="0.4" height="15.0" fill="rgb(253,113,45)" rx="2" ry="2" />
<text  x="87.64" y="1919.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="27.6" y="1861" width="0.8" height="15.0" fill="rgb(219,111,29)" rx="2" ry="2" />
<text  x="30.56" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="873.5" y="1941" width="0.4" height="15.0" fill="rgb(235,64,49)" rx="2" ry="2" />
<text  x="876.50" y="1951.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="817.4" y="1717" width="0.2" height="15.0" fill="rgb(243,150,46)" rx="2" ry="2" />
<text  x="820.42" y="1727.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="744.8" y="1733" width="0.2" height="15.0" fill="rgb(216,164,41)" rx="2" ry="2" />
<text  x="747.78" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="964.7" y="1813" width="0.2" height="15.0" fill="rgb(213,92,19)" rx="2" ry="2" />
<text  x="967.70" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="891.1" y="1973" width="1.2" height="15.0" fill="rgb(246,59,9)" rx="2" ry="2" />
<text  x="894.06" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="105.4" y="37" width="0.2" height="15.0" fill="rgb(236,220,46)" rx="2" ry="2" />
<text  x="108.39" y="47.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="611.5" y="1845" width="0.2" height="15.0" fill="rgb(251,40,2)" rx="2" ry="2" />
<text  x="614.47" y="1855.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="502.1" y="1685" width="0.2" height="15.0" fill="rgb(215,183,19)" rx="2" ry="2" />
<text  x="505.12" y="1695.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="69.7" y="1845" width="0.4" height="15.0" fill="rgb(237,11,19)" rx="2" ry="2" />
<text  x="72.67" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (32 samples, 0.54%)</title><rect x="1108.6" y="1717" width="6.4" height="15.0" fill="rgb(217,201,10)" rx="2" ry="2" />
<text  x="1111.58" y="1727.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (1 samples, 0.02%)</title><rect x="480.8" y="2005" width="0.2" height="15.0" fill="rgb(205,168,27)" rx="2" ry="2" />
<text  x="483.76" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (4 samples, 0.07%)</title><rect x="519.9" y="1957" width="0.8" height="15.0" fill="rgb(207,197,15)" rx="2" ry="2" />
<text  x="522.88" y="1967.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="116.4" y="37" width="0.2" height="15.0" fill="rgb(206,156,11)" rx="2" ry="2" />
<text  x="119.37" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (88 samples, 1.49%)</title><rect x="510.3" y="2021" width="17.6" height="15.0" fill="rgb(247,144,32)" rx="2" ry="2" />
<text  x="513.30" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (6 samples, 0.10%)</title><rect x="71.1" y="1909" width="1.2" height="15.0" fill="rgb(211,134,10)" rx="2" ry="2" />
<text  x="74.07" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1080.6" y="1589" width="0.2" height="15.0" fill="rgb(240,11,8)" rx="2" ry="2" />
<text  x="1083.64" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="150.7" y="1653" width="0.2" height="15.0" fill="rgb(249,207,45)" rx="2" ry="2" />
<text  x="153.69" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (10 samples, 0.17%)</title><rect x="528.3" y="2037" width="2.0" height="15.0" fill="rgb(242,73,39)" rx="2" ry="2" />
<text  x="531.26" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="176.4" y="1941" width="0.2" height="15.0" fill="rgb(253,71,5)" rx="2" ry="2" />
<text  x="179.43" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="121.2" y="341" width="0.2" height="15.0" fill="rgb(221,128,39)" rx="2" ry="2" />
<text  x="124.16" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="214.0" y="1941" width="0.2" height="15.0" fill="rgb(231,217,27)" rx="2" ry="2" />
<text  x="216.95" y="1951.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="65.1" y="1861" width="0.2" height="15.0" fill="rgb(229,25,43)" rx="2" ry="2" />
<text  x="68.08" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="53.9" y="1685" width="0.2" height="15.0" fill="rgb(223,199,7)" rx="2" ry="2" />
<text  x="56.90" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="970.3" y="1989" width="0.2" height="15.0" fill="rgb(236,16,0)" rx="2" ry="2" />
<text  x="973.28" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.08%)</title><rect x="923.8" y="1909" width="1.0" height="15.0" fill="rgb(238,66,17)" rx="2" ry="2" />
<text  x="926.79" y="1919.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="1068.1" y="1893" width="0.4" height="15.0" fill="rgb(211,197,51)" rx="2" ry="2" />
<text  x="1071.07" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="615.9" y="2005" width="0.2" height="15.0" fill="rgb(208,116,32)" rx="2" ry="2" />
<text  x="618.87" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="146.9" y="1893" width="0.2" height="15.0" fill="rgb(245,158,11)" rx="2" ry="2" />
<text  x="149.90" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="885.7" y="1909" width="0.2" height="15.0" fill="rgb(252,23,41)" rx="2" ry="2" />
<text  x="888.67" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="842.4" y="1909" width="0.6" height="15.0" fill="rgb(207,134,45)" rx="2" ry="2" />
<text  x="845.37" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (75 samples, 1.27%)</title><rect x="1149.1" y="2021" width="15.0" height="15.0" fill="rgb(237,86,32)" rx="2" ry="2" />
<text  x="1152.09" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1018.6" y="1957" width="0.2" height="15.0" fill="rgb(212,187,36)" rx="2" ry="2" />
<text  x="1021.58" y="1967.5" ></text>
</g>
<g >
<title>security_file_free (6 samples, 0.10%)</title><rect x="742.4" y="1797" width="1.2" height="15.0" fill="rgb(212,15,46)" rx="2" ry="2" />
<text  x="745.39" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="615.9" y="2021" width="0.2" height="15.0" fill="rgb(220,120,47)" rx="2" ry="2" />
<text  x="618.87" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="52.3" y="1893" width="0.4" height="15.0" fill="rgb(227,188,16)" rx="2" ry="2" />
<text  x="55.31" y="1903.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="900.4" y="1685" width="0.2" height="15.0" fill="rgb(234,194,32)" rx="2" ry="2" />
<text  x="903.44" y="1695.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="65.3" y="1877" width="0.4" height="15.0" fill="rgb(232,214,37)" rx="2" ry="2" />
<text  x="68.28" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.9" y="1893" width="0.4" height="15.0" fill="rgb(228,16,40)" rx="2" ry="2" />
<text  x="141.92" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.9" y="1877" width="0.4" height="15.0" fill="rgb(212,44,12)" rx="2" ry="2" />
<text  x="141.92" y="1887.5" ></text>
</g>
<g >
<title>tcp_current_mss (18 samples, 0.30%)</title><rect x="328.7" y="1861" width="3.6" height="15.0" fill="rgb(215,220,40)" rx="2" ry="2" />
<text  x="331.70" y="1871.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="11.6" y="2005" width="0.8" height="15.0" fill="rgb(244,21,32)" rx="2" ry="2" />
<text  x="14.60" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="378.8" y="1909" width="0.4" height="15.0" fill="rgb(235,146,32)" rx="2" ry="2" />
<text  x="381.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="602.3" y="1701" width="0.2" height="15.0" fill="rgb(240,15,29)" rx="2" ry="2" />
<text  x="605.29" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="1180.0" y="2053" width="1.2" height="15.0" fill="rgb(219,57,7)" rx="2" ry="2" />
<text  x="1183.02" y="2063.5" ></text>
</g>
<g >
<title>accept4 (4 samples, 0.07%)</title><rect x="22.4" y="2005" width="0.8" height="15.0" fill="rgb(232,16,30)" rx="2" ry="2" />
<text  x="25.37" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="914.2" y="1589" width="0.2" height="15.0" fill="rgb(207,76,52)" rx="2" ry="2" />
<text  x="917.21" y="1599.5" ></text>
</g>
<g >
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="325.3" y="1813" width="0.4" height="15.0" fill="rgb(240,87,12)" rx="2" ry="2" />
<text  x="328.31" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (1 samples, 0.02%)</title><rect x="904.2" y="1973" width="0.2" height="15.0" fill="rgb(214,82,16)" rx="2" ry="2" />
<text  x="907.23" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="740.6" y="1717" width="0.8" height="15.0" fill="rgb(232,74,11)" rx="2" ry="2" />
<text  x="743.59" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (93 samples, 1.57%)</title><rect x="104.6" y="1717" width="18.6" height="15.0" fill="rgb(244,195,46)" rx="2" ry="2" />
<text  x="107.59" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (13 samples, 0.22%)</title><rect x="1138.5" y="2037" width="2.6" height="15.0" fill="rgb(215,198,26)" rx="2" ry="2" />
<text  x="1141.51" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1104.4" y="1829" width="0.2" height="15.0" fill="rgb(213,37,17)" rx="2" ry="2" />
<text  x="1107.39" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (10 samples, 0.17%)</title><rect x="68.5" y="1941" width="2.0" height="15.0" fill="rgb(207,117,48)" rx="2" ry="2" />
<text  x="71.47" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="885.7" y="1893" width="0.2" height="15.0" fill="rgb(232,52,17)" rx="2" ry="2" />
<text  x="888.67" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (4 samples, 0.07%)</title><rect x="523.7" y="1989" width="0.8" height="15.0" fill="rgb(220,76,14)" rx="2" ry="2" />
<text  x="526.67" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (3 samples, 0.05%)</title><rect x="520.7" y="1973" width="0.6" height="15.0" fill="rgb(254,143,40)" rx="2" ry="2" />
<text  x="523.67" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="47.7" y="1893" width="0.4" height="15.0" fill="rgb(221,37,54)" rx="2" ry="2" />
<text  x="50.72" y="1903.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (43 samples, 0.73%)</title><rect x="465.6" y="1957" width="8.6" height="15.0" fill="rgb(242,52,1)" rx="2" ry="2" />
<text  x="468.60" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (15 samples, 0.25%)</title><rect x="986.0" y="1957" width="3.0" height="15.0" fill="rgb(232,131,9)" rx="2" ry="2" />
<text  x="989.05" y="1967.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="58.9" y="1605" width="0.2" height="15.0" fill="rgb(252,10,7)" rx="2" ry="2" />
<text  x="61.89" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="289.6" y="1413" width="0.4" height="15.0" fill="rgb(210,118,36)" rx="2" ry="2" />
<text  x="292.58" y="1423.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="568.0" y="1973" width="0.2" height="15.0" fill="rgb(234,225,51)" rx="2" ry="2" />
<text  x="570.97" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (2 samples, 0.03%)</title><rect x="1140.5" y="1989" width="0.4" height="15.0" fill="rgb(220,32,10)" rx="2" ry="2" />
<text  x="1143.51" y="1999.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="91.0" y="1653" width="0.2" height="15.0" fill="rgb(215,123,33)" rx="2" ry="2" />
<text  x="94.02" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="316.5" y="1637" width="0.4" height="15.0" fill="rgb(253,200,46)" rx="2" ry="2" />
<text  x="319.52" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="844.4" y="1701" width="0.2" height="15.0" fill="rgb(237,154,22)" rx="2" ry="2" />
<text  x="847.36" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (2 samples, 0.03%)</title><rect x="701.1" y="2037" width="0.4" height="15.0" fill="rgb(233,119,42)" rx="2" ry="2" />
<text  x="704.08" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="311.3" y="1765" width="0.2" height="15.0" fill="rgb(237,169,43)" rx="2" ry="2" />
<text  x="314.34" y="1775.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="815.6" y="1669" width="0.2" height="15.0" fill="rgb(230,176,32)" rx="2" ry="2" />
<text  x="818.62" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="910.0" y="2021" width="0.2" height="15.0" fill="rgb(229,0,53)" rx="2" ry="2" />
<text  x="913.02" y="2031.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="86.2" y="1925" width="0.2" height="15.0" fill="rgb(213,75,48)" rx="2" ry="2" />
<text  x="89.23" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="969.3" y="1861" width="0.2" height="15.0" fill="rgb(232,145,42)" rx="2" ry="2" />
<text  x="972.29" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.03%)</title><rect x="195.6" y="2021" width="0.4" height="15.0" fill="rgb(236,176,12)" rx="2" ry="2" />
<text  x="198.59" y="2031.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="127.9" y="2005" width="0.2" height="15.0" fill="rgb(239,57,48)" rx="2" ry="2" />
<text  x="130.94" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="569.2" y="2005" width="0.2" height="15.0" fill="rgb(250,2,53)" rx="2" ry="2" />
<text  x="572.17" y="2015.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="733.0" y="1669" width="0.2" height="15.0" fill="rgb(244,51,18)" rx="2" ry="2" />
<text  x="736.01" y="1679.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="156.1" y="1877" width="0.4" height="15.0" fill="rgb(237,184,16)" rx="2" ry="2" />
<text  x="159.08" y="1887.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="507.9" y="1941" width="0.2" height="15.0" fill="rgb(216,128,42)" rx="2" ry="2" />
<text  x="510.90" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="121.0" y="149" width="0.2" height="15.0" fill="rgb(229,167,1)" rx="2" ry="2" />
<text  x="123.96" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (11 samples, 0.19%)</title><rect x="1181.4" y="2037" width="2.2" height="15.0" fill="rgb(246,60,0)" rx="2" ry="2" />
<text  x="1184.42" y="2047.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (4 samples, 0.07%)</title><rect x="841.2" y="1925" width="0.8" height="15.0" fill="rgb(206,122,50)" rx="2" ry="2" />
<text  x="844.17" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="29.4" y="1941" width="0.2" height="15.0" fill="rgb(226,80,51)" rx="2" ry="2" />
<text  x="32.36" y="1951.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="645.2" y="2005" width="0.2" height="15.0" fill="rgb(211,149,24)" rx="2" ry="2" />
<text  x="648.20" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (2 samples, 0.03%)</title><rect x="233.3" y="1957" width="0.4" height="15.0" fill="rgb(217,229,42)" rx="2" ry="2" />
<text  x="236.31" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="458.0" y="1861" width="0.2" height="15.0" fill="rgb(225,13,25)" rx="2" ry="2" />
<text  x="461.01" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1104.4" y="1669" width="0.2" height="15.0" fill="rgb(218,183,4)" rx="2" ry="2" />
<text  x="1107.39" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="900.4" y="1909" width="0.2" height="15.0" fill="rgb(207,195,3)" rx="2" ry="2" />
<text  x="903.44" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (7 samples, 0.12%)</title><rect x="576.2" y="2005" width="1.3" height="15.0" fill="rgb(237,168,18)" rx="2" ry="2" />
<text  x="579.15" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="106.8" y="37" width="0.2" height="15.0" fill="rgb(237,74,38)" rx="2" ry="2" />
<text  x="109.79" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="358.4" y="1925" width="0.2" height="15.0" fill="rgb(207,226,10)" rx="2" ry="2" />
<text  x="361.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 1.22%)</title><rect x="105.4" y="85" width="14.4" height="15.0" fill="rgb(236,6,24)" rx="2" ry="2" />
<text  x="108.39" y="95.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1049.3" y="1797" width="0.2" height="15.0" fill="rgb(231,5,30)" rx="2" ry="2" />
<text  x="1052.31" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1090.8" y="1925" width="0.2" height="15.0" fill="rgb(206,88,17)" rx="2" ry="2" />
<text  x="1093.82" y="1935.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="358.0" y="1829" width="0.2" height="15.0" fill="rgb(224,145,26)" rx="2" ry="2" />
<text  x="361.03" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="882.7" y="1925" width="0.2" height="15.0" fill="rgb(243,57,54)" rx="2" ry="2" />
<text  x="885.68" y="1935.5" ></text>
</g>
<g >
<title>syscall (66 samples, 1.12%)</title><rect x="1150.7" y="1973" width="13.2" height="15.0" fill="rgb(233,203,43)" rx="2" ry="2" />
<text  x="1153.69" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="477.4" y="1957" width="0.2" height="15.0" fill="rgb(229,68,24)" rx="2" ry="2" />
<text  x="480.37" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="850.9" y="1877" width="0.2" height="15.0" fill="rgb(234,39,27)" rx="2" ry="2" />
<text  x="853.95" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="29.4" y="1909" width="0.2" height="15.0" fill="rgb(243,189,31)" rx="2" ry="2" />
<text  x="32.36" y="1919.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (3 samples, 0.05%)</title><rect x="851.9" y="1941" width="0.6" height="15.0" fill="rgb(250,74,20)" rx="2" ry="2" />
<text  x="854.94" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="462.0" y="1861" width="0.2" height="15.0" fill="rgb(249,159,36)" rx="2" ry="2" />
<text  x="465.00" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="363.2" y="1765" width="0.2" height="15.0" fill="rgb(221,75,5)" rx="2" ry="2" />
<text  x="366.22" y="1775.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="318.5" y="1813" width="0.2" height="15.0" fill="rgb(208,220,16)" rx="2" ry="2" />
<text  x="321.52" y="1823.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="136.9" y="1893" width="0.2" height="15.0" fill="rgb(252,88,48)" rx="2" ry="2" />
<text  x="139.92" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1167.8" y="2021" width="0.2" height="15.0" fill="rgb(232,0,52)" rx="2" ry="2" />
<text  x="1170.85" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1049.3" y="1813" width="0.2" height="15.0" fill="rgb(209,218,13)" rx="2" ry="2" />
<text  x="1052.31" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (176 samples, 2.98%)</title><rect x="914.2" y="2021" width="35.1" height="15.0" fill="rgb(212,208,22)" rx="2" ry="2" />
<text  x="917.21" y="2031.5" >[u..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="566.0" y="1765" width="0.2" height="15.0" fill="rgb(238,15,43)" rx="2" ry="2" />
<text  x="568.97" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="220.7" y="1861" width="0.2" height="15.0" fill="rgb(246,92,34)" rx="2" ry="2" />
<text  x="223.74" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="969.3" y="1941" width="0.2" height="15.0" fill="rgb(236,167,36)" rx="2" ry="2" />
<text  x="972.29" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="83.6" y="1893" width="0.4" height="15.0" fill="rgb(213,52,8)" rx="2" ry="2" />
<text  x="86.64" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="528.9" y="1909" width="0.4" height="15.0" fill="rgb(211,110,28)" rx="2" ry="2" />
<text  x="531.86" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="58.9" y="1557" width="0.2" height="15.0" fill="rgb(233,135,43)" rx="2" ry="2" />
<text  x="61.89" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="462.0" y="1749" width="0.2" height="15.0" fill="rgb(240,46,47)" rx="2" ry="2" />
<text  x="465.00" y="1759.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="901.6" y="1973" width="0.4" height="15.0" fill="rgb(228,179,28)" rx="2" ry="2" />
<text  x="904.64" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="29.6" y="1989" width="0.2" height="15.0" fill="rgb(215,142,43)" rx="2" ry="2" />
<text  x="32.56" y="1999.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="335.3" y="1877" width="0.2" height="15.0" fill="rgb(238,116,39)" rx="2" ry="2" />
<text  x="338.28" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="72.3" y="1909" width="0.4" height="15.0" fill="rgb(227,176,1)" rx="2" ry="2" />
<text  x="75.26" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (9 samples, 0.15%)</title><rect x="543.2" y="1957" width="1.8" height="15.0" fill="rgb(208,56,22)" rx="2" ry="2" />
<text  x="546.23" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="544.0" y="1909" width="0.6" height="15.0" fill="rgb(238,118,44)" rx="2" ry="2" />
<text  x="547.02" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="340.3" y="1957" width="0.2" height="15.0" fill="rgb(209,203,54)" rx="2" ry="2" />
<text  x="343.27" y="1967.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="883.7" y="1957" width="0.2" height="15.0" fill="rgb(207,106,15)" rx="2" ry="2" />
<text  x="886.67" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (27 samples, 0.46%)</title><rect x="546.2" y="2005" width="5.4" height="15.0" fill="rgb(205,89,25)" rx="2" ry="2" />
<text  x="549.22" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="58.9" y="1861" width="0.2" height="15.0" fill="rgb(239,123,42)" rx="2" ry="2" />
<text  x="61.89" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1108.6" y="1605" width="0.4" height="15.0" fill="rgb(222,130,46)" rx="2" ry="2" />
<text  x="1111.58" y="1615.5" ></text>
</g>
<g >
<title>evutil_gettime_monotonic_ (1 samples, 0.02%)</title><rect x="910.0" y="1957" width="0.2" height="15.0" fill="rgb(234,10,34)" rx="2" ry="2" />
<text  x="913.02" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="363.2" y="1493" width="0.2" height="15.0" fill="rgb(247,146,22)" rx="2" ry="2" />
<text  x="366.22" y="1503.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="121.6" y="1301" width="0.2" height="15.0" fill="rgb(225,176,17)" rx="2" ry="2" />
<text  x="124.55" y="1311.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="31.8" y="1941" width="0.2" height="15.0" fill="rgb(220,85,29)" rx="2" ry="2" />
<text  x="34.75" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="1029.4" y="2053" width="0.4" height="15.0" fill="rgb(218,151,27)" rx="2" ry="2" />
<text  x="1032.35" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="53.9" y="1909" width="0.2" height="15.0" fill="rgb(240,190,21)" rx="2" ry="2" />
<text  x="56.90" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (2 samples, 0.03%)</title><rect x="1166.7" y="2053" width="0.4" height="15.0" fill="rgb(249,213,38)" rx="2" ry="2" />
<text  x="1169.65" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="120.8" y="69" width="0.2" height="15.0" fill="rgb(245,119,20)" rx="2" ry="2" />
<text  x="123.76" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="321.1" y="1733" width="0.4" height="15.0" fill="rgb(231,48,22)" rx="2" ry="2" />
<text  x="324.11" y="1743.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="463.0" y="1957" width="0.2" height="15.0" fill="rgb(216,206,4)" rx="2" ry="2" />
<text  x="466.00" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (1 samples, 0.02%)</title><rect x="1179.0" y="2053" width="0.2" height="15.0" fill="rgb(213,66,12)" rx="2" ry="2" />
<text  x="1182.02" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="1141.7" y="1973" width="0.4" height="15.0" fill="rgb(241,158,3)" rx="2" ry="2" />
<text  x="1144.71" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.2" y="1893" width="0.2" height="15.0" fill="rgb(221,179,33)" rx="2" ry="2" />
<text  x="844.17" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.8" y="213" width="0.2" height="15.0" fill="rgb(241,54,44)" rx="2" ry="2" />
<text  x="123.76" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="387.4" y="1941" width="0.2" height="15.0" fill="rgb(206,133,40)" rx="2" ry="2" />
<text  x="390.37" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (7 samples, 0.12%)</title><rect x="73.5" y="1957" width="1.4" height="15.0" fill="rgb(234,27,41)" rx="2" ry="2" />
<text  x="76.46" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="27.6" y="1845" width="0.8" height="15.0" fill="rgb(229,43,16)" rx="2" ry="2" />
<text  x="30.56" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="884.1" y="1733" width="0.2" height="15.0" fill="rgb(212,225,48)" rx="2" ry="2" />
<text  x="887.07" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="562.2" y="1877" width="0.2" height="15.0" fill="rgb(211,108,39)" rx="2" ry="2" />
<text  x="565.18" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="895.8" y="2021" width="1.4" height="15.0" fill="rgb(233,157,26)" rx="2" ry="2" />
<text  x="898.85" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="150.7" y="1573" width="0.2" height="15.0" fill="rgb(217,143,46)" rx="2" ry="2" />
<text  x="153.69" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="777.3" y="1509" width="0.4" height="15.0" fill="rgb(224,134,46)" rx="2" ry="2" />
<text  x="780.31" y="1519.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (17 samples, 0.29%)</title><rect x="262.0" y="1877" width="3.4" height="15.0" fill="rgb(222,127,20)" rx="2" ry="2" />
<text  x="265.04" y="1887.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="234.1" y="1957" width="0.6" height="15.0" fill="rgb(229,204,1)" rx="2" ry="2" />
<text  x="237.11" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="52.1" y="1861" width="0.2" height="15.0" fill="rgb(227,98,53)" rx="2" ry="2" />
<text  x="55.11" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="887.5" y="1893" width="0.6" height="15.0" fill="rgb(253,136,52)" rx="2" ry="2" />
<text  x="890.47" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="602.3" y="1717" width="0.2" height="15.0" fill="rgb(227,195,45)" rx="2" ry="2" />
<text  x="605.29" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="700.9" y="2021" width="0.2" height="15.0" fill="rgb(236,5,21)" rx="2" ry="2" />
<text  x="703.88" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="951.1" y="1749" width="0.2" height="15.0" fill="rgb(233,196,17)" rx="2" ry="2" />
<text  x="954.13" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="261.8" y="1845" width="0.2" height="15.0" fill="rgb(251,147,52)" rx="2" ry="2" />
<text  x="264.85" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (32 samples, 0.54%)</title><rect x="631.8" y="1973" width="6.4" height="15.0" fill="rgb(229,127,4)" rx="2" ry="2" />
<text  x="634.83" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1104.4" y="1909" width="0.2" height="15.0" fill="rgb(217,163,15)" rx="2" ry="2" />
<text  x="1107.39" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="847.8" y="1877" width="0.6" height="15.0" fill="rgb(249,210,6)" rx="2" ry="2" />
<text  x="850.75" y="1887.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(241,167,9)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (31 samples, 0.52%)</title><rect x="640.4" y="2021" width="6.2" height="15.0" fill="rgb(229,69,47)" rx="2" ry="2" />
<text  x="643.41" y="2031.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="711.1" y="1925" width="0.2" height="15.0" fill="rgb(232,61,53)" rx="2" ry="2" />
<text  x="714.06" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (719 samples, 12.16%)</title><rect x="709.1" y="1957" width="143.4" height="15.0" fill="rgb(242,16,51)" rx="2" ry="2" />
<text  x="712.06" y="1967.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="844.4" y="1797" width="0.2" height="15.0" fill="rgb(205,216,6)" rx="2" ry="2" />
<text  x="847.36" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (6 samples, 0.10%)</title><rect x="272.4" y="1845" width="1.2" height="15.0" fill="rgb(208,78,33)" rx="2" ry="2" />
<text  x="275.42" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (7 samples, 0.12%)</title><rect x="895.8" y="2037" width="1.4" height="15.0" fill="rgb(230,183,38)" rx="2" ry="2" />
<text  x="898.85" y="2047.5" ></text>
</g>
<g >
<title>ip_finish_output (37 samples, 0.63%)</title><rect x="1108.2" y="1813" width="7.4" height="15.0" fill="rgb(230,207,35)" rx="2" ry="2" />
<text  x="1111.18" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="763.1" y="1509" width="0.2" height="15.0" fill="rgb(210,48,45)" rx="2" ry="2" />
<text  x="766.14" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_free (11 samples, 0.19%)</title><rect x="468.6" y="1941" width="2.2" height="15.0" fill="rgb(225,91,14)" rx="2" ry="2" />
<text  x="471.59" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="944.3" y="2005" width="0.4" height="15.0" fill="rgb(215,154,51)" rx="2" ry="2" />
<text  x="947.34" y="2015.5" ></text>
</g>
<g >
<title>____fput (4 samples, 0.07%)</title><rect x="357.6" y="1957" width="0.8" height="15.0" fill="rgb(218,169,1)" rx="2" ry="2" />
<text  x="360.63" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="805.8" y="1477" width="0.4" height="15.0" fill="rgb(211,219,30)" rx="2" ry="2" />
<text  x="808.85" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.9" y="1925" width="0.4" height="15.0" fill="rgb(214,193,50)" rx="2" ry="2" />
<text  x="141.92" y="1935.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.9" y="1845" width="0.2" height="15.0" fill="rgb(207,103,48)" rx="2" ry="2" />
<text  x="126.95" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (99 samples, 1.67%)</title><rect x="581.9" y="1973" width="19.8" height="15.0" fill="rgb(207,24,37)" rx="2" ry="2" />
<text  x="584.94" y="1983.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="1067.1" y="1733" width="0.2" height="15.0" fill="rgb(250,218,47)" rx="2" ry="2" />
<text  x="1070.07" y="1743.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6 samples, 0.10%)</title><rect x="1098.2" y="1893" width="1.2" height="15.0" fill="rgb(230,217,23)" rx="2" ry="2" />
<text  x="1101.20" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1018.6" y="1925" width="0.2" height="15.0" fill="rgb(206,87,28)" rx="2" ry="2" />
<text  x="1021.58" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="501.5" y="1877" width="0.8" height="15.0" fill="rgb(250,126,40)" rx="2" ry="2" />
<text  x="504.52" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="321.1" y="1669" width="0.4" height="15.0" fill="rgb(206,44,10)" rx="2" ry="2" />
<text  x="324.11" y="1679.5" ></text>
</g>
<g >
<title>tcp_setsockopt (1 samples, 0.02%)</title><rect x="695.1" y="1925" width="0.2" height="15.0" fill="rgb(222,20,19)" rx="2" ry="2" />
<text  x="698.09" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="968.1" y="1989" width="0.2" height="15.0" fill="rgb(225,229,30)" rx="2" ry="2" />
<text  x="971.09" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="321.1" y="1701" width="0.4" height="15.0" fill="rgb(234,136,17)" rx="2" ry="2" />
<text  x="324.11" y="1711.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1083.8" y="1829" width="0.8" height="15.0" fill="rgb(221,191,6)" rx="2" ry="2" />
<text  x="1086.83" y="1839.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.02%)</title><rect x="672.5" y="1829" width="0.2" height="15.0" fill="rgb(217,229,5)" rx="2" ry="2" />
<text  x="675.54" y="1839.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="725.4" y="1781" width="0.2" height="15.0" fill="rgb(228,102,20)" rx="2" ry="2" />
<text  x="728.42" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="173.6" y="2021" width="0.8" height="15.0" fill="rgb(206,36,54)" rx="2" ry="2" />
<text  x="176.64" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="526.7" y="1957" width="0.2" height="15.0" fill="rgb(225,73,0)" rx="2" ry="2" />
<text  x="529.66" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="636.6" y="1925" width="0.4" height="15.0" fill="rgb(226,95,14)" rx="2" ry="2" />
<text  x="639.62" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (5 samples, 0.08%)</title><rect x="477.8" y="1957" width="1.0" height="15.0" fill="rgb(239,114,45)" rx="2" ry="2" />
<text  x="480.77" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1049.1" y="1957" width="0.6" height="15.0" fill="rgb(217,102,41)" rx="2" ry="2" />
<text  x="1052.11" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="195.8" y="1957" width="0.2" height="15.0" fill="rgb(228,3,44)" rx="2" ry="2" />
<text  x="198.79" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="237.5" y="2021" width="2.6" height="15.0" fill="rgb(250,154,20)" rx="2" ry="2" />
<text  x="240.50" y="2031.5" ></text>
</g>
<g >
<title>__check_object_size (14 samples, 0.24%)</title><rect x="259.3" y="1877" width="2.7" height="15.0" fill="rgb(221,212,7)" rx="2" ry="2" />
<text  x="262.25" y="1887.5" ></text>
</g>
<g >
<title>__fget (16 samples, 0.27%)</title><rect x="1123.5" y="1925" width="3.2" height="15.0" fill="rgb(245,10,2)" rx="2" ry="2" />
<text  x="1126.55" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1145.9" y="1989" width="0.2" height="15.0" fill="rgb(226,156,17)" rx="2" ry="2" />
<text  x="1148.90" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="90.0" y="1941" width="0.2" height="15.0" fill="rgb(229,72,47)" rx="2" ry="2" />
<text  x="93.02" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="860.1" y="1989" width="0.2" height="15.0" fill="rgb(232,31,28)" rx="2" ry="2" />
<text  x="863.13" y="1999.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="673.5" y="1925" width="2.0" height="15.0" fill="rgb(239,227,44)" rx="2" ry="2" />
<text  x="676.54" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="149.9" y="1893" width="1.2" height="15.0" fill="rgb(248,111,47)" rx="2" ry="2" />
<text  x="152.89" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="525.3" y="1973" width="0.2" height="15.0" fill="rgb(219,219,51)" rx="2" ry="2" />
<text  x="528.26" y="1983.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="844.4" y="1541" width="0.2" height="15.0" fill="rgb(251,119,42)" rx="2" ry="2" />
<text  x="847.36" y="1551.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="156.9" y="1941" width="0.2" height="15.0" fill="rgb(224,204,29)" rx="2" ry="2" />
<text  x="159.88" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="132.1" y="1957" width="1.2" height="15.0" fill="rgb(207,38,26)" rx="2" ry="2" />
<text  x="135.13" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (660 samples, 11.16%)</title><rect x="710.3" y="1941" width="131.7" height="15.0" fill="rgb(244,94,28)" rx="2" ry="2" />
<text  x="713.26" y="1951.5" >folly::AsyncSock..</text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="844.4" y="1621" width="0.2" height="15.0" fill="rgb(235,216,45)" rx="2" ry="2" />
<text  x="847.36" y="1631.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="817.6" y="1685" width="0.2" height="15.0" fill="rgb(253,124,20)" rx="2" ry="2" />
<text  x="820.62" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="31.2" y="1957" width="0.2" height="15.0" fill="rgb(230,146,6)" rx="2" ry="2" />
<text  x="34.15" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="462.0" y="1621" width="0.2" height="15.0" fill="rgb(232,108,23)" rx="2" ry="2" />
<text  x="465.00" y="1631.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="434.9" y="1989" width="0.4" height="15.0" fill="rgb(207,117,42)" rx="2" ry="2" />
<text  x="437.86" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="844.4" y="1445" width="0.2" height="15.0" fill="rgb(230,191,39)" rx="2" ry="2" />
<text  x="847.36" y="1455.5" ></text>
</g>
<g >
<title>memset@plt (2 samples, 0.03%)</title><rect x="840.2" y="1909" width="0.4" height="15.0" fill="rgb(208,92,19)" rx="2" ry="2" />
<text  x="843.17" y="1919.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (5 samples, 0.08%)</title><rect x="1027.8" y="2053" width="1.0" height="15.0" fill="rgb(219,178,33)" rx="2" ry="2" />
<text  x="1030.76" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1181.0" y="2021" width="0.2" height="15.0" fill="rgb(206,36,28)" rx="2" ry="2" />
<text  x="1184.02" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="672.3" y="1813" width="0.2" height="15.0" fill="rgb(230,67,45)" rx="2" ry="2" />
<text  x="675.34" y="1823.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="86.6" y="1925" width="0.2" height="15.0" fill="rgb(214,133,38)" rx="2" ry="2" />
<text  x="89.63" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="139.1" y="1845" width="0.2" height="15.0" fill="rgb(216,170,21)" rx="2" ry="2" />
<text  x="142.12" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="481.0" y="1893" width="0.4" height="15.0" fill="rgb(222,83,21)" rx="2" ry="2" />
<text  x="483.96" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="849.4" y="1925" width="0.2" height="15.0" fill="rgb(238,187,43)" rx="2" ry="2" />
<text  x="852.35" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="848.2" y="1797" width="0.2" height="15.0" fill="rgb(244,160,44)" rx="2" ry="2" />
<text  x="851.15" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (226 samples, 3.82%)</title><rect x="532.8" y="2021" width="45.1" height="15.0" fill="rgb(239,67,39)" rx="2" ry="2" />
<text  x="535.85" y="2031.5" >foll..</text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="578.7" y="2021" width="0.2" height="15.0" fill="rgb(217,194,29)" rx="2" ry="2" />
<text  x="581.75" y="2031.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="508.7" y="2037" width="0.2" height="15.0" fill="rgb(232,114,24)" rx="2" ry="2" />
<text  x="511.70" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="615.7" y="2005" width="0.2" height="15.0" fill="rgb(214,162,16)" rx="2" ry="2" />
<text  x="618.67" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (5 samples, 0.08%)</title><rect x="47.1" y="1941" width="1.0" height="15.0" fill="rgb(253,195,7)" rx="2" ry="2" />
<text  x="50.12" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="311.3" y="1733" width="0.2" height="15.0" fill="rgb(252,22,51)" rx="2" ry="2" />
<text  x="314.34" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="173.2" y="1925" width="0.2" height="15.0" fill="rgb(209,74,29)" rx="2" ry="2" />
<text  x="176.24" y="1935.5" ></text>
</g>
<g >
<title>__libc_sendmsg (2 samples, 0.03%)</title><rect x="128.1" y="2005" width="0.4" height="15.0" fill="rgb(207,103,46)" rx="2" ry="2" />
<text  x="131.14" y="2015.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (2 samples, 0.03%)</title><rect x="738.4" y="1685" width="0.4" height="15.0" fill="rgb(238,118,44)" rx="2" ry="2" />
<text  x="741.40" y="1695.5" ></text>
</g>
<g >
<title>sys_sendmsg (459 samples, 7.76%)</title><rect x="246.9" y="1989" width="91.6" height="15.0" fill="rgb(247,72,9)" rx="2" ry="2" />
<text  x="249.88" y="1999.5" >sys_sendmsg</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="121.2" y="37" width="0.2" height="15.0" fill="rgb(226,207,41)" rx="2" ry="2" />
<text  x="124.16" y="47.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="909.6" y="2005" width="0.4" height="15.0" fill="rgb(240,13,54)" rx="2" ry="2" />
<text  x="912.62" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (7 samples, 0.12%)</title><rect x="1172.8" y="1989" width="1.4" height="15.0" fill="rgb(224,177,11)" rx="2" ry="2" />
<text  x="1175.84" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1083.2" y="1765" width="0.2" height="15.0" fill="rgb(231,141,8)" rx="2" ry="2" />
<text  x="1086.24" y="1775.5" ></text>
</g>
<g >
<title>skb_release_all (77 samples, 1.30%)</title><rect x="1068.1" y="1909" width="15.3" height="15.0" fill="rgb(231,210,8)" rx="2" ry="2" />
<text  x="1071.07" y="1919.5" ></text>
</g>
<g >
<title>__check_object_size (21 samples, 0.36%)</title><rect x="1095.2" y="1909" width="4.2" height="15.0" fill="rgb(217,170,17)" rx="2" ry="2" />
<text  x="1098.21" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="459.8" y="1845" width="0.4" height="15.0" fill="rgb(238,105,15)" rx="2" ry="2" />
<text  x="462.81" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="859.5" y="1973" width="0.4" height="15.0" fill="rgb(209,161,21)" rx="2" ry="2" />
<text  x="862.53" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="81.0" y="1909" width="0.2" height="15.0" fill="rgb(247,23,27)" rx="2" ry="2" />
<text  x="84.04" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="841.2" y="1557" width="0.2" height="15.0" fill="rgb(220,139,29)" rx="2" ry="2" />
<text  x="844.17" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="900.4" y="1813" width="0.2" height="15.0" fill="rgb(216,154,30)" rx="2" ry="2" />
<text  x="903.44" y="1823.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="232.3" y="1893" width="0.2" height="15.0" fill="rgb(234,60,14)" rx="2" ry="2" />
<text  x="235.31" y="1903.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.03%)</title><rect x="1104.6" y="1925" width="0.4" height="15.0" fill="rgb(217,59,2)" rx="2" ry="2" />
<text  x="1107.59" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (10 samples, 0.17%)</title><rect x="511.1" y="1973" width="2.0" height="15.0" fill="rgb(223,58,22)" rx="2" ry="2" />
<text  x="514.10" y="1983.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="738.0" y="1637" width="0.2" height="15.0" fill="rgb(240,62,12)" rx="2" ry="2" />
<text  x="741.00" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (5 samples, 0.08%)</title><rect x="1177.4" y="1989" width="1.0" height="15.0" fill="rgb(230,141,18)" rx="2" ry="2" />
<text  x="1180.43" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (4 samples, 0.07%)</title><rect x="566.8" y="1989" width="0.8" height="15.0" fill="rgb(250,105,45)" rx="2" ry="2" />
<text  x="569.77" y="1999.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (3 samples, 0.05%)</title><rect x="777.1" y="1573" width="0.6" height="15.0" fill="rgb(244,147,24)" rx="2" ry="2" />
<text  x="780.11" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="610.5" y="1813" width="0.2" height="15.0" fill="rgb(241,105,22)" rx="2" ry="2" />
<text  x="613.48" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="838.6" y="1893" width="0.4" height="15.0" fill="rgb(228,127,14)" rx="2" ry="2" />
<text  x="841.57" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="339.9" y="2021" width="0.2" height="15.0" fill="rgb(205,122,46)" rx="2" ry="2" />
<text  x="342.87" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="892.1" y="1845" width="0.2" height="15.0" fill="rgb(244,154,21)" rx="2" ry="2" />
<text  x="895.06" y="1855.5" ></text>
</g>
<g >
<title>tcp_poll (23 samples, 0.39%)</title><rect x="502.3" y="1893" width="4.6" height="15.0" fill="rgb(245,74,31)" rx="2" ry="2" />
<text  x="505.32" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="526.1" y="1941" width="0.4" height="15.0" fill="rgb(223,146,27)" rx="2" ry="2" />
<text  x="529.06" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (13 samples, 0.22%)</title><rect x="322.1" y="1749" width="2.6" height="15.0" fill="rgb(214,38,36)" rx="2" ry="2" />
<text  x="325.11" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="853.9" y="1957" width="0.2" height="15.0" fill="rgb(218,229,6)" rx="2" ry="2" />
<text  x="856.94" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.2" y="1781" width="0.2" height="15.0" fill="rgb(233,153,52)" rx="2" ry="2" />
<text  x="844.17" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="183.8" y="1957" width="1.2" height="15.0" fill="rgb(223,80,38)" rx="2" ry="2" />
<text  x="186.82" y="1967.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1126.7" y="1989" width="0.2" height="15.0" fill="rgb(223,167,5)" rx="2" ry="2" />
<text  x="1129.74" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="585.3" y="1925" width="0.2" height="15.0" fill="rgb(250,200,9)" rx="2" ry="2" />
<text  x="588.33" y="1935.5" ></text>
</g>
<g >
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="260.6" y="1861" width="0.4" height="15.0" fill="rgb(215,133,54)" rx="2" ry="2" />
<text  x="263.65" y="1871.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2 samples, 0.03%)</title><rect x="1178.0" y="1941" width="0.4" height="15.0" fill="rgb(239,180,27)" rx="2" ry="2" />
<text  x="1181.03" y="1951.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="1146.9" y="1845" width="0.2" height="15.0" fill="rgb(207,38,43)" rx="2" ry="2" />
<text  x="1149.89" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (3 samples, 0.05%)</title><rect x="117.6" y="69" width="0.6" height="15.0" fill="rgb(205,164,19)" rx="2" ry="2" />
<text  x="120.56" y="79.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="318.7" y="1765" width="0.2" height="15.0" fill="rgb(232,92,21)" rx="2" ry="2" />
<text  x="321.72" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="841.6" y="1893" width="0.4" height="15.0" fill="rgb(254,7,53)" rx="2" ry="2" />
<text  x="844.57" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="884.1" y="1717" width="0.2" height="15.0" fill="rgb(222,139,29)" rx="2" ry="2" />
<text  x="887.07" y="1727.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="274.4" y="1749" width="0.2" height="15.0" fill="rgb(244,65,19)" rx="2" ry="2" />
<text  x="277.42" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="757" width="16.0" height="15.0" fill="rgb(234,59,18)" rx="2" ry="2" />
<text  x="108.39" y="767.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (1 samples, 0.02%)</title><rect x="866.9" y="2005" width="0.2" height="15.0" fill="rgb(243,41,33)" rx="2" ry="2" />
<text  x="869.91" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (3 samples, 0.05%)</title><rect x="225.7" y="1877" width="0.6" height="15.0" fill="rgb(218,173,28)" rx="2" ry="2" />
<text  x="228.72" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="805.8" y="1493" width="0.4" height="15.0" fill="rgb(235,72,41)" rx="2" ry="2" />
<text  x="808.85" y="1503.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="459.8" y="1637" width="0.2" height="15.0" fill="rgb(218,121,28)" rx="2" ry="2" />
<text  x="462.81" y="1647.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="733.8" y="1685" width="0.2" height="15.0" fill="rgb(226,216,27)" rx="2" ry="2" />
<text  x="736.81" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="721.4" y="1813" width="0.2" height="15.0" fill="rgb(233,201,9)" rx="2" ry="2" />
<text  x="724.43" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (4 samples, 0.07%)</title><rect x="856.7" y="1989" width="0.8" height="15.0" fill="rgb(241,220,17)" rx="2" ry="2" />
<text  x="859.73" y="1999.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="273.0" y="1829" width="0.2" height="15.0" fill="rgb(207,211,14)" rx="2" ry="2" />
<text  x="276.02" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="363.2" y="1525" width="0.2" height="15.0" fill="rgb(208,1,4)" rx="2" ry="2" />
<text  x="366.22" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="636.2" y="1909" width="0.4" height="15.0" fill="rgb(214,29,13)" rx="2" ry="2" />
<text  x="639.22" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="650.6" y="1989" width="0.2" height="15.0" fill="rgb(212,172,15)" rx="2" ry="2" />
<text  x="653.59" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (1 samples, 0.02%)</title><rect x="1004.6" y="2005" width="0.2" height="15.0" fill="rgb(208,154,20)" rx="2" ry="2" />
<text  x="1007.61" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="460.0" y="1605" width="0.2" height="15.0" fill="rgb(206,220,48)" rx="2" ry="2" />
<text  x="463.01" y="1615.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="318.7" y="1781" width="0.2" height="15.0" fill="rgb(246,187,6)" rx="2" ry="2" />
<text  x="321.72" y="1791.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="672.7" y="1797" width="0.8" height="15.0" fill="rgb(251,169,13)" rx="2" ry="2" />
<text  x="675.74" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="80.6" y="1941" width="0.8" height="15.0" fill="rgb(211,203,0)" rx="2" ry="2" />
<text  x="83.64" y="1951.5" ></text>
</g>
<g >
<title>do_fcntl (1 samples, 0.02%)</title><rect x="559.6" y="1941" width="0.2" height="15.0" fill="rgb(223,90,30)" rx="2" ry="2" />
<text  x="562.59" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="233.7" y="1957" width="0.4" height="15.0" fill="rgb(207,46,42)" rx="2" ry="2" />
<text  x="236.71" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (121 samples, 2.05%)</title><rect x="211.0" y="2005" width="24.1" height="15.0" fill="rgb(218,84,4)" rx="2" ry="2" />
<text  x="213.96" y="2015.5" >f..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="616.7" y="2005" width="0.2" height="15.0" fill="rgb(234,162,21)" rx="2" ry="2" />
<text  x="619.66" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="545.6" y="1957" width="0.4" height="15.0" fill="rgb(221,105,20)" rx="2" ry="2" />
<text  x="548.62" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="743.8" y="1765" width="0.2" height="15.0" fill="rgb(254,55,11)" rx="2" ry="2" />
<text  x="746.78" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (1 samples, 0.02%)</title><rect x="526.9" y="2005" width="0.2" height="15.0" fill="rgb(251,20,40)" rx="2" ry="2" />
<text  x="529.86" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(226,150,3)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="805.8" y="1557" width="0.4" height="15.0" fill="rgb(223,10,4)" rx="2" ry="2" />
<text  x="808.85" y="1567.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="841.2" y="1605" width="0.2" height="15.0" fill="rgb(226,209,8)" rx="2" ry="2" />
<text  x="844.17" y="1615.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="271.8" y="1781" width="0.4" height="15.0" fill="rgb(254,70,23)" rx="2" ry="2" />
<text  x="274.82" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.08%)</title><rect x="918.8" y="1941" width="1.0" height="15.0" fill="rgb(233,106,35)" rx="2" ry="2" />
<text  x="921.80" y="1951.5" ></text>
</g>
<g >
<title>__destroy_inode (1 samples, 0.02%)</title><rect x="730.2" y="1701" width="0.2" height="15.0" fill="rgb(208,171,51)" rx="2" ry="2" />
<text  x="733.21" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.08%)</title><rect x="987.2" y="1893" width="1.0" height="15.0" fill="rgb(217,177,37)" rx="2" ry="2" />
<text  x="990.25" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (4 samples, 0.07%)</title><rect x="108.4" y="37" width="0.8" height="15.0" fill="rgb(220,7,16)" rx="2" ry="2" />
<text  x="111.38" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="23.0" y="1813" width="0.2" height="15.0" fill="rgb(244,144,11)" rx="2" ry="2" />
<text  x="25.97" y="1823.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="500.9" y="1893" width="0.6" height="15.0" fill="rgb(213,149,20)" rx="2" ry="2" />
<text  x="503.92" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="121.0" y="341" width="0.2" height="15.0" fill="rgb(246,62,44)" rx="2" ry="2" />
<text  x="123.96" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="885.1" y="1893" width="0.4" height="15.0" fill="rgb(232,187,31)" rx="2" ry="2" />
<text  x="888.07" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="847.4" y="1893" width="0.2" height="15.0" fill="rgb(212,64,45)" rx="2" ry="2" />
<text  x="850.35" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="844.4" y="1637" width="0.2" height="15.0" fill="rgb(226,202,5)" rx="2" ry="2" />
<text  x="847.36" y="1647.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="815.8" y="1653" width="0.2" height="15.0" fill="rgb(224,35,3)" rx="2" ry="2" />
<text  x="818.82" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="1182.8" y="2005" width="0.2" height="15.0" fill="rgb(229,119,29)" rx="2" ry="2" />
<text  x="1185.82" y="2015.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="361.6" y="1957" width="0.2" height="15.0" fill="rgb(209,154,38)" rx="2" ry="2" />
<text  x="364.63" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="844.4" y="1893" width="0.2" height="15.0" fill="rgb(246,115,41)" rx="2" ry="2" />
<text  x="847.36" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="221.1" y="1845" width="0.4" height="15.0" fill="rgb(232,144,13)" rx="2" ry="2" />
<text  x="224.13" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="777.5" y="1381" width="0.2" height="15.0" fill="rgb(244,226,30)" rx="2" ry="2" />
<text  x="780.51" y="1391.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (2 samples, 0.03%)</title><rect x="19.4" y="2037" width="0.4" height="15.0" fill="rgb(229,140,24)" rx="2" ry="2" />
<text  x="22.38" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="1179.6" y="1989" width="0.2" height="15.0" fill="rgb(219,74,8)" rx="2" ry="2" />
<text  x="1182.62" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="451.8" y="1925" width="0.2" height="15.0" fill="rgb(217,155,34)" rx="2" ry="2" />
<text  x="454.83" y="1935.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="984.1" y="1925" width="0.4" height="15.0" fill="rgb(223,144,10)" rx="2" ry="2" />
<text  x="987.05" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="895.4" y="2021" width="0.4" height="15.0" fill="rgb(229,124,49)" rx="2" ry="2" />
<text  x="898.45" y="2031.5" ></text>
</g>
<g >
<title>event_set (2 samples, 0.03%)</title><rect x="845.8" y="1925" width="0.4" height="15.0" fill="rgb(234,105,17)" rx="2" ry="2" />
<text  x="848.76" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="501.9" y="1637" width="0.2" height="15.0" fill="rgb(254,188,29)" rx="2" ry="2" />
<text  x="504.92" y="1647.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="382.8" y="1909" width="0.2" height="15.0" fill="rgb(248,114,44)" rx="2" ry="2" />
<text  x="385.78" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="910.0" y="1973" width="0.2" height="15.0" fill="rgb(238,134,13)" rx="2" ry="2" />
<text  x="913.02" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (8 samples, 0.14%)</title><rect x="564.6" y="2005" width="1.6" height="15.0" fill="rgb(236,173,47)" rx="2" ry="2" />
<text  x="567.58" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="635.8" y="1925" width="0.4" height="15.0" fill="rgb(239,138,30)" rx="2" ry="2" />
<text  x="638.82" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="223.7" y="1877" width="0.2" height="15.0" fill="rgb(214,148,51)" rx="2" ry="2" />
<text  x="226.73" y="1887.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (4 samples, 0.07%)</title><rect x="825.8" y="1765" width="0.8" height="15.0" fill="rgb(252,0,28)" rx="2" ry="2" />
<text  x="828.80" y="1775.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="501.5" y="1605" width="0.2" height="15.0" fill="rgb(214,82,0)" rx="2" ry="2" />
<text  x="504.52" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="895.4" y="2005" width="0.2" height="15.0" fill="rgb(249,34,25)" rx="2" ry="2" />
<text  x="898.45" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="884.1" y="1909" width="0.2" height="15.0" fill="rgb(227,201,45)" rx="2" ry="2" />
<text  x="887.07" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="160.3" y="1989" width="0.2" height="15.0" fill="rgb(248,173,22)" rx="2" ry="2" />
<text  x="163.27" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="91.0" y="1621" width="0.2" height="15.0" fill="rgb(241,135,32)" rx="2" ry="2" />
<text  x="94.02" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.32%)</title><rect x="633.8" y="1957" width="3.8" height="15.0" fill="rgb(205,31,17)" rx="2" ry="2" />
<text  x="636.83" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="104.2" y="1797" width="19.3" height="15.0" fill="rgb(237,29,26)" rx="2" ry="2" />
<text  x="107.19" y="1807.5" ></text>
</g>
<g >
<title>__memchr_avx2 (5 samples, 0.08%)</title><rect x="961.9" y="2021" width="1.0" height="15.0" fill="rgb(220,176,30)" rx="2" ry="2" />
<text  x="964.90" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1080.6" y="1573" width="0.2" height="15.0" fill="rgb(242,222,9)" rx="2" ry="2" />
<text  x="1083.64" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="380.6" y="1925" width="1.2" height="15.0" fill="rgb(246,178,5)" rx="2" ry="2" />
<text  x="383.58" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="927.8" y="1925" width="0.4" height="15.0" fill="rgb(211,171,37)" rx="2" ry="2" />
<text  x="930.78" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="289.6" y="1445" width="0.6" height="15.0" fill="rgb(215,97,20)" rx="2" ry="2" />
<text  x="292.58" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="145.9" y="1893" width="0.4" height="15.0" fill="rgb(239,20,53)" rx="2" ry="2" />
<text  x="148.90" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1083.2" y="1829" width="0.2" height="15.0" fill="rgb(253,103,40)" rx="2" ry="2" />
<text  x="1086.24" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="951.5" y="1957" width="0.2" height="15.0" fill="rgb(229,156,41)" rx="2" ry="2" />
<text  x="954.53" y="1967.5" ></text>
</g>
<g >
<title>call_rcu_sched (11 samples, 0.19%)</title><rect x="463.4" y="1957" width="2.2" height="15.0" fill="rgb(246,171,47)" rx="2" ry="2" />
<text  x="466.40" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="121.2" y="325" width="0.2" height="15.0" fill="rgb(233,228,53)" rx="2" ry="2" />
<text  x="124.16" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="175.6" y="1989" width="0.2" height="15.0" fill="rgb(251,73,28)" rx="2" ry="2" />
<text  x="178.64" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="121.2" y="437" width="0.2" height="15.0" fill="rgb(216,98,52)" rx="2" ry="2" />
<text  x="124.16" y="447.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="999.4" y="1941" width="0.2" height="15.0" fill="rgb(249,40,48)" rx="2" ry="2" />
<text  x="1002.42" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="993.0" y="1973" width="0.8" height="15.0" fill="rgb(217,93,12)" rx="2" ry="2" />
<text  x="996.03" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="53.9" y="1845" width="0.2" height="15.0" fill="rgb(227,8,42)" rx="2" ry="2" />
<text  x="56.90" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (8 samples, 0.14%)</title><rect x="51.1" y="1909" width="1.6" height="15.0" fill="rgb(218,31,51)" rx="2" ry="2" />
<text  x="54.11" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="518.5" y="1941" width="0.4" height="15.0" fill="rgb(249,38,31)" rx="2" ry="2" />
<text  x="521.48" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="909.4" y="1845" width="0.2" height="15.0" fill="rgb(232,42,49)" rx="2" ry="2" />
<text  x="912.42" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="180.4" y="1957" width="0.4" height="15.0" fill="rgb(252,89,23)" rx="2" ry="2" />
<text  x="183.42" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1072.3" y="1797" width="0.2" height="15.0" fill="rgb(228,61,2)" rx="2" ry="2" />
<text  x="1075.26" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="534.8" y="1941" width="0.2" height="15.0" fill="rgb(213,11,5)" rx="2" ry="2" />
<text  x="537.84" y="1951.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="914.2" y="1573" width="0.2" height="15.0" fill="rgb(217,196,31)" rx="2" ry="2" />
<text  x="917.21" y="1583.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="409.3" y="1973" width="0.4" height="15.0" fill="rgb(228,1,44)" rx="2" ry="2" />
<text  x="412.32" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="900.6" y="1973" width="0.6" height="15.0" fill="rgb(218,79,18)" rx="2" ry="2" />
<text  x="903.64" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="133.5" y="1781" width="0.2" height="15.0" fill="rgb(215,31,39)" rx="2" ry="2" />
<text  x="136.53" y="1791.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="335.5" y="1925" width="0.2" height="15.0" fill="rgb(250,78,43)" rx="2" ry="2" />
<text  x="338.48" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="513.3" y="1973" width="0.4" height="15.0" fill="rgb(239,64,3)" rx="2" ry="2" />
<text  x="516.29" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="63.7" y="1829" width="0.2" height="15.0" fill="rgb(250,162,33)" rx="2" ry="2" />
<text  x="66.68" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.03%)</title><rect x="614.1" y="2005" width="0.4" height="15.0" fill="rgb(229,120,49)" rx="2" ry="2" />
<text  x="617.07" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="307.7" y="1637" width="0.2" height="15.0" fill="rgb(211,128,50)" rx="2" ry="2" />
<text  x="310.74" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (13 samples, 0.22%)</title><rect x="288.0" y="1621" width="2.6" height="15.0" fill="rgb(248,146,15)" rx="2" ry="2" />
<text  x="290.99" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="1148.1" y="2053" width="0.4" height="15.0" fill="rgb(225,181,17)" rx="2" ry="2" />
<text  x="1151.09" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::invoke_result&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="969.7" y="2037" width="0.2" height="15.0" fill="rgb(214,1,9)" rx="2" ry="2" />
<text  x="972.69" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="982.1" y="1765" width="0.2" height="15.0" fill="rgb(205,4,13)" rx="2" ry="2" />
<text  x="985.06" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="969.3" y="1957" width="0.2" height="15.0" fill="rgb(246,218,31)" rx="2" ry="2" />
<text  x="972.29" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="695.9" y="1717" width="0.2" height="15.0" fill="rgb(217,42,53)" rx="2" ry="2" />
<text  x="698.89" y="1727.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="261.8" y="1765" width="0.2" height="15.0" fill="rgb(239,66,7)" rx="2" ry="2" />
<text  x="264.85" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="452.0" y="1765" width="0.2" height="15.0" fill="rgb(225,0,39)" rx="2" ry="2" />
<text  x="455.03" y="1775.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="27.6" y="1941" width="0.8" height="15.0" fill="rgb(211,61,54)" rx="2" ry="2" />
<text  x="30.56" y="1951.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="104.0" y="1989" width="0.2" height="15.0" fill="rgb(246,137,48)" rx="2" ry="2" />
<text  x="106.99" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="129.9" y="1941" width="0.2" height="15.0" fill="rgb(213,135,54)" rx="2" ry="2" />
<text  x="132.94" y="1951.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.10%)</title><rect x="207.8" y="2005" width="1.2" height="15.0" fill="rgb(247,216,27)" rx="2" ry="2" />
<text  x="210.76" y="2015.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="198.2" y="2021" width="0.2" height="15.0" fill="rgb(224,58,18)" rx="2" ry="2" />
<text  x="201.19" y="2031.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="907.0" y="1989" width="0.2" height="15.0" fill="rgb(237,116,13)" rx="2" ry="2" />
<text  x="910.02" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1083.8" y="1861" width="0.8" height="15.0" fill="rgb(225,220,53)" rx="2" ry="2" />
<text  x="1086.83" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="919.8" y="1941" width="0.6" height="15.0" fill="rgb(244,52,5)" rx="2" ry="2" />
<text  x="922.80" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.3" y="1893" width="0.2" height="15.0" fill="rgb(227,75,42)" rx="2" ry="2" />
<text  x="127.35" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="121.2" y="85" width="0.2" height="15.0" fill="rgb(226,115,0)" rx="2" ry="2" />
<text  x="124.16" y="95.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="560.6" y="1893" width="0.4" height="15.0" fill="rgb(219,160,37)" rx="2" ry="2" />
<text  x="563.59" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="272.2" y="1749" width="0.2" height="15.0" fill="rgb(208,134,50)" rx="2" ry="2" />
<text  x="275.22" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1429" width="17.2" height="15.0" fill="rgb(232,117,20)" rx="2" ry="2" />
<text  x="107.99" y="1439.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (1 samples, 0.02%)</title><rect x="687.5" y="1909" width="0.2" height="15.0" fill="rgb(249,72,24)" rx="2" ry="2" />
<text  x="690.51" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="999.4" y="1861" width="0.2" height="15.0" fill="rgb(229,98,4)" rx="2" ry="2" />
<text  x="1002.42" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="311.3" y="1797" width="0.2" height="15.0" fill="rgb(232,89,47)" rx="2" ry="2" />
<text  x="314.34" y="1807.5" ></text>
</g>
<g >
<title>tcp_mss_to_mtu (1 samples, 0.02%)</title><rect x="321.3" y="1445" width="0.2" height="15.0" fill="rgb(248,79,4)" rx="2" ry="2" />
<text  x="324.31" y="1455.5" ></text>
</g>
<g >
<title>aa_sock_perm (6 samples, 0.10%)</title><rect x="668.5" y="1829" width="1.2" height="15.0" fill="rgb(214,147,22)" rx="2" ry="2" />
<text  x="671.55" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="150.7" y="1685" width="0.2" height="15.0" fill="rgb(248,225,46)" rx="2" ry="2" />
<text  x="153.69" y="1695.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="656.6" y="1957" width="0.2" height="15.0" fill="rgb(220,214,46)" rx="2" ry="2" />
<text  x="659.58" y="1967.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (30 samples, 0.51%)</title><rect x="318.7" y="1813" width="6.0" height="15.0" fill="rgb(237,84,15)" rx="2" ry="2" />
<text  x="321.72" y="1823.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="914.2" y="1541" width="0.2" height="15.0" fill="rgb(242,189,8)" rx="2" ry="2" />
<text  x="917.21" y="1551.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="275.0" y="1845" width="0.6" height="15.0" fill="rgb(247,120,31)" rx="2" ry="2" />
<text  x="278.02" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="964.7" y="1861" width="0.2" height="15.0" fill="rgb(241,209,22)" rx="2" ry="2" />
<text  x="967.70" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (1 samples, 0.02%)</title><rect x="84.8" y="1893" width="0.2" height="15.0" fill="rgb(226,157,38)" rx="2" ry="2" />
<text  x="87.84" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="462.0" y="1637" width="0.2" height="15.0" fill="rgb(252,204,44)" rx="2" ry="2" />
<text  x="465.00" y="1647.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="629.2" y="1973" width="0.2" height="15.0" fill="rgb(225,223,30)" rx="2" ry="2" />
<text  x="632.24" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.59%)</title><rect x="1152.5" y="1941" width="7.0" height="15.0" fill="rgb(247,109,36)" rx="2" ry="2" />
<text  x="1155.48" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="821" width="16.0" height="15.0" fill="rgb(249,76,54)" rx="2" ry="2" />
<text  x="108.39" y="831.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="209.0" y="1861" width="0.8" height="15.0" fill="rgb(247,188,9)" rx="2" ry="2" />
<text  x="211.96" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (41 samples, 0.69%)</title><rect x="999.6" y="2021" width="8.2" height="15.0" fill="rgb(247,174,27)" rx="2" ry="2" />
<text  x="1002.62" y="2031.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (3 samples, 0.05%)</title><rect x="464.8" y="1925" width="0.6" height="15.0" fill="rgb(227,220,33)" rx="2" ry="2" />
<text  x="467.80" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1174.6" y="1973" width="0.4" height="15.0" fill="rgb(249,204,31)" rx="2" ry="2" />
<text  x="1177.63" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="28.8" y="1957" width="0.2" height="15.0" fill="rgb(244,186,53)" rx="2" ry="2" />
<text  x="31.76" y="1967.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="796.1" y="1493" width="0.4" height="15.0" fill="rgb(219,142,18)" rx="2" ry="2" />
<text  x="799.07" y="1503.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="60.1" y="1941" width="0.2" height="15.0" fill="rgb(254,78,1)" rx="2" ry="2" />
<text  x="63.09" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="626.0" y="2005" width="0.4" height="15.0" fill="rgb(226,98,11)" rx="2" ry="2" />
<text  x="629.04" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="888.5" y="1973" width="0.2" height="15.0" fill="rgb(226,125,48)" rx="2" ry="2" />
<text  x="891.46" y="1983.5" ></text>
</g>
<g >
<title>sock_close (1 samples, 0.02%)</title><rect x="829.8" y="1813" width="0.2" height="15.0" fill="rgb(249,151,36)" rx="2" ry="2" />
<text  x="832.79" y="1823.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1108.8" y="1477" width="0.2" height="15.0" fill="rgb(239,200,15)" rx="2" ry="2" />
<text  x="1111.78" y="1487.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="501.5" y="1781" width="0.8" height="15.0" fill="rgb(230,177,19)" rx="2" ry="2" />
<text  x="504.52" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="775.1" y="1621" width="0.2" height="15.0" fill="rgb(228,5,15)" rx="2" ry="2" />
<text  x="778.11" y="1631.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (11 samples, 0.19%)</title><rect x="702.5" y="1989" width="2.2" height="15.0" fill="rgb(221,13,36)" rx="2" ry="2" />
<text  x="705.47" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="133.3" y="1957" width="0.2" height="15.0" fill="rgb(226,222,3)" rx="2" ry="2" />
<text  x="136.33" y="1967.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1118.2" y="1877" width="0.2" height="15.0" fill="rgb(212,221,7)" rx="2" ry="2" />
<text  x="1121.16" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (22 samples, 0.37%)</title><rect x="61.3" y="1941" width="4.4" height="15.0" fill="rgb(240,163,11)" rx="2" ry="2" />
<text  x="64.29" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="513.7" y="1957" width="0.2" height="15.0" fill="rgb(230,215,41)" rx="2" ry="2" />
<text  x="516.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (966 samples, 16.34%)</title><rect x="702.3" y="2021" width="192.7" height="15.0" fill="rgb(217,16,7)" rx="2" ry="2" />
<text  x="705.27" y="2031.5" >[unknown]</text>
</g>
<g >
<title>sys_epoll_wait (99 samples, 1.67%)</title><rect x="488.7" y="1989" width="19.8" height="15.0" fill="rgb(218,126,35)" rx="2" ry="2" />
<text  x="491.75" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (2 samples, 0.03%)</title><rect x="1108.6" y="1541" width="0.4" height="15.0" fill="rgb(229,10,25)" rx="2" ry="2" />
<text  x="1111.58" y="1551.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="10.4" y="2037" width="0.8" height="15.0" fill="rgb(218,129,5)" rx="2" ry="2" />
<text  x="13.40" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (1 samples, 0.02%)</title><rect x="42.3" y="1957" width="0.2" height="15.0" fill="rgb(234,42,4)" rx="2" ry="2" />
<text  x="45.33" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="931.4" y="1941" width="0.2" height="15.0" fill="rgb(229,155,35)" rx="2" ry="2" />
<text  x="934.37" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="924.0" y="1893" width="0.2" height="15.0" fill="rgb(250,111,26)" rx="2" ry="2" />
<text  x="926.99" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="451.8" y="1893" width="0.2" height="15.0" fill="rgb(211,54,38)" rx="2" ry="2" />
<text  x="454.83" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1145.3" y="1941" width="0.2" height="15.0" fill="rgb(252,120,44)" rx="2" ry="2" />
<text  x="1148.30" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="114.4" y="37" width="1.0" height="15.0" fill="rgb(252,195,7)" rx="2" ry="2" />
<text  x="117.37" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (3 samples, 0.05%)</title><rect x="884.9" y="1909" width="0.6" height="15.0" fill="rgb(218,91,38)" rx="2" ry="2" />
<text  x="887.87" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="964.7" y="1973" width="0.2" height="15.0" fill="rgb(241,149,47)" rx="2" ry="2" />
<text  x="967.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (1 samples, 0.02%)</title><rect x="615.9" y="2037" width="0.2" height="15.0" fill="rgb(216,51,54)" rx="2" ry="2" />
<text  x="618.87" y="2047.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (5 samples, 0.08%)</title><rect x="201.6" y="2037" width="1.0" height="15.0" fill="rgb(240,68,17)" rx="2" ry="2" />
<text  x="204.58" y="2047.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="176.4" y="1909" width="0.2" height="15.0" fill="rgb(223,221,0)" rx="2" ry="2" />
<text  x="179.43" y="1919.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1006.2" y="1989" width="0.2" height="15.0" fill="rgb(249,121,48)" rx="2" ry="2" />
<text  x="1009.20" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="873.5" y="1909" width="0.2" height="15.0" fill="rgb(229,191,51)" rx="2" ry="2" />
<text  x="876.50" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="58.9" y="1829" width="0.2" height="15.0" fill="rgb(249,177,15)" rx="2" ry="2" />
<text  x="61.89" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="120.6" y="69" width="0.2" height="15.0" fill="rgb(241,227,26)" rx="2" ry="2" />
<text  x="123.56" y="79.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="405.9" y="1861" width="0.2" height="15.0" fill="rgb(239,62,19)" rx="2" ry="2" />
<text  x="408.93" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="226.5" y="1845" width="0.6" height="15.0" fill="rgb(234,55,53)" rx="2" ry="2" />
<text  x="229.52" y="1855.5" ></text>
</g>
<g >
<title>alloc_file (32 samples, 0.54%)</title><rect x="396.7" y="1941" width="6.4" height="15.0" fill="rgb(241,224,9)" rx="2" ry="2" />
<text  x="399.75" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (15 samples, 0.25%)</title><rect x="986.0" y="1973" width="3.0" height="15.0" fill="rgb(245,7,27)" rx="2" ry="2" />
<text  x="989.05" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.83%)</title><rect x="630.4" y="2021" width="9.8" height="15.0" fill="rgb(222,118,6)" rx="2" ry="2" />
<text  x="633.43" y="2031.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="340.3" y="1733" width="0.2" height="15.0" fill="rgb(247,75,3)" rx="2" ry="2" />
<text  x="343.27" y="1743.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="914.2" y="1653" width="0.2" height="15.0" fill="rgb(234,200,12)" rx="2" ry="2" />
<text  x="917.21" y="1663.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="1102.0" y="1909" width="0.2" height="15.0" fill="rgb(227,61,45)" rx="2" ry="2" />
<text  x="1104.99" y="1919.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (30 samples, 0.51%)</title><rect x="809.4" y="1685" width="6.0" height="15.0" fill="rgb(225,176,44)" rx="2" ry="2" />
<text  x="812.44" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="896.8" y="1989" width="0.4" height="15.0" fill="rgb(240,22,5)" rx="2" ry="2" />
<text  x="899.85" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (6 samples, 0.10%)</title><rect x="130.9" y="1941" width="1.2" height="15.0" fill="rgb(238,3,6)" rx="2" ry="2" />
<text  x="133.93" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1083.2" y="1797" width="0.2" height="15.0" fill="rgb(239,37,20)" rx="2" ry="2" />
<text  x="1086.24" y="1807.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.25%)</title><rect x="12.6" y="1909" width="3.0" height="15.0" fill="rgb(225,78,0)" rx="2" ry="2" />
<text  x="15.59" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="23.0" y="1893" width="0.2" height="15.0" fill="rgb(233,178,30)" rx="2" ry="2" />
<text  x="25.97" y="1903.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="363.2" y="1637" width="0.2" height="15.0" fill="rgb(233,104,21)" rx="2" ry="2" />
<text  x="366.22" y="1647.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="461.0" y="1925" width="0.2" height="15.0" fill="rgb(238,13,7)" rx="2" ry="2" />
<text  x="464.01" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.07%)</title><rect x="292.4" y="1701" width="0.8" height="15.0" fill="rgb(239,177,42)" rx="2" ry="2" />
<text  x="295.38" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="848.6" y="1829" width="0.4" height="15.0" fill="rgb(244,107,4)" rx="2" ry="2" />
<text  x="851.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="105.0" y="1397" width="17.0" height="15.0" fill="rgb(219,215,2)" rx="2" ry="2" />
<text  x="107.99" y="1407.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="842.4" y="1877" width="0.2" height="15.0" fill="rgb(226,21,25)" rx="2" ry="2" />
<text  x="845.37" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="133.5" y="1941" width="0.2" height="15.0" fill="rgb(216,199,45)" rx="2" ry="2" />
<text  x="136.53" y="1951.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (2 samples, 0.03%)</title><rect x="321.7" y="1749" width="0.4" height="15.0" fill="rgb(207,25,8)" rx="2" ry="2" />
<text  x="324.71" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="672.3" y="1893" width="0.2" height="15.0" fill="rgb(225,117,20)" rx="2" ry="2" />
<text  x="675.34" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (4 samples, 0.07%)</title><rect x="949.3" y="2037" width="0.8" height="15.0" fill="rgb(228,59,24)" rx="2" ry="2" />
<text  x="952.33" y="2047.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="914.2" y="1637" width="0.2" height="15.0" fill="rgb(219,197,19)" rx="2" ry="2" />
<text  x="917.21" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (2 samples, 0.03%)</title><rect x="896.4" y="1973" width="0.4" height="15.0" fill="rgb(254,13,43)" rx="2" ry="2" />
<text  x="899.45" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.2" y="1685" width="0.2" height="15.0" fill="rgb(229,27,28)" rx="2" ry="2" />
<text  x="844.17" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="139.9" y="1925" width="0.2" height="15.0" fill="rgb(207,204,37)" rx="2" ry="2" />
<text  x="142.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1104.4" y="1893" width="0.2" height="15.0" fill="rgb(217,118,39)" rx="2" ry="2" />
<text  x="1107.39" y="1903.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="209.0" y="1957" width="0.8" height="15.0" fill="rgb(210,80,36)" rx="2" ry="2" />
<text  x="211.96" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1088.6" y="1701" width="0.2" height="15.0" fill="rgb(242,64,33)" rx="2" ry="2" />
<text  x="1091.62" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="373.4" y="1749" width="0.2" height="15.0" fill="rgb(212,208,27)" rx="2" ry="2" />
<text  x="376.40" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="363.2" y="1669" width="0.2" height="15.0" fill="rgb(252,184,31)" rx="2" ry="2" />
<text  x="366.22" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="58.9" y="1765" width="0.2" height="15.0" fill="rgb(247,106,22)" rx="2" ry="2" />
<text  x="61.89" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (1 samples, 0.02%)</title><rect x="842.2" y="1941" width="0.2" height="15.0" fill="rgb(239,208,53)" rx="2" ry="2" />
<text  x="845.17" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::McrouterStandaloneOptions::~McrouterStandaloneOptions (1 samples, 0.02%)</title><rect x="910.0" y="2037" width="0.2" height="15.0" fill="rgb(221,19,51)" rx="2" ry="2" />
<text  x="913.02" y="2047.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="452.2" y="1893" width="0.2" height="15.0" fill="rgb(208,49,46)" rx="2" ry="2" />
<text  x="455.23" y="1903.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="501.5" y="1621" width="0.2" height="15.0" fill="rgb(226,209,43)" rx="2" ry="2" />
<text  x="504.52" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.4" y="245" width="15.4" height="15.0" fill="rgb(230,129,5)" rx="2" ry="2" />
<text  x="108.39" y="255.5" ></text>
</g>
<g >
<title>skb_free_head (11 samples, 0.19%)</title><rect x="1112.2" y="1461" width="2.2" height="15.0" fill="rgb(242,98,36)" rx="2" ry="2" />
<text  x="1115.17" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="202.4" y="2021" width="0.2" height="15.0" fill="rgb(228,150,8)" rx="2" ry="2" />
<text  x="205.38" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="121.0" y="101" width="0.2" height="15.0" fill="rgb(241,68,23)" rx="2" ry="2" />
<text  x="123.96" y="111.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (10 samples, 0.17%)</title><rect x="57.9" y="1941" width="2.0" height="15.0" fill="rgb(233,149,47)" rx="2" ry="2" />
<text  x="60.89" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (14 samples, 0.24%)</title><rect x="546.6" y="1973" width="2.8" height="15.0" fill="rgb(245,82,44)" rx="2" ry="2" />
<text  x="549.62" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1122.1" y="1733" width="0.2" height="15.0" fill="rgb(235,98,23)" rx="2" ry="2" />
<text  x="1125.15" y="1743.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="232.7" y="1941" width="0.2" height="15.0" fill="rgb(212,220,19)" rx="2" ry="2" />
<text  x="235.71" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="795.9" y="1493" width="0.2" height="15.0" fill="rgb(205,173,23)" rx="2" ry="2" />
<text  x="798.87" y="1503.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="185.6" y="1941" width="0.8" height="15.0" fill="rgb(242,29,7)" rx="2" ry="2" />
<text  x="188.61" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="576.4" y="1989" width="1.1" height="15.0" fill="rgb(241,140,35)" rx="2" ry="2" />
<text  x="579.35" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="287.8" y="1605" width="0.2" height="15.0" fill="rgb(245,113,24)" rx="2" ry="2" />
<text  x="290.79" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="695.5" y="1829" width="0.6" height="15.0" fill="rgb(238,205,37)" rx="2" ry="2" />
<text  x="698.49" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (5 samples, 0.08%)</title><rect x="867.1" y="2005" width="1.0" height="15.0" fill="rgb(237,23,10)" rx="2" ry="2" />
<text  x="870.11" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (2 samples, 0.03%)</title><rect x="644.8" y="2005" width="0.4" height="15.0" fill="rgb(226,120,23)" rx="2" ry="2" />
<text  x="647.80" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="321.1" y="1653" width="0.4" height="15.0" fill="rgb(219,163,31)" rx="2" ry="2" />
<text  x="324.11" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="763.1" y="1653" width="0.2" height="15.0" fill="rgb(250,212,20)" rx="2" ry="2" />
<text  x="766.14" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (2 samples, 0.03%)</title><rect x="860.3" y="1989" width="0.4" height="15.0" fill="rgb(249,29,42)" rx="2" ry="2" />
<text  x="863.33" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="524.3" y="1957" width="0.2" height="15.0" fill="rgb(205,150,17)" rx="2" ry="2" />
<text  x="527.27" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_xmit (245 samples, 4.14%)</title><rect x="767.5" y="1701" width="48.9" height="15.0" fill="rgb(209,27,40)" rx="2" ry="2" />
<text  x="770.53" y="1711.5" >tcp_..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="841.2" y="1909" width="0.2" height="15.0" fill="rgb(236,154,41)" rx="2" ry="2" />
<text  x="844.17" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="158.5" y="1909" width="0.4" height="15.0" fill="rgb(232,227,0)" rx="2" ry="2" />
<text  x="161.47" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (127 samples, 2.15%)</title><rect x="285.4" y="1749" width="25.3" height="15.0" fill="rgb(227,192,50)" rx="2" ry="2" />
<text  x="288.39" y="1759.5" >i..</text>
</g>
<g >
<title>do_fcntl (3 samples, 0.05%)</title><rect x="561.6" y="1925" width="0.6" height="15.0" fill="rgb(220,130,36)" rx="2" ry="2" />
<text  x="564.58" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="877.5" y="1909" width="0.4" height="15.0" fill="rgb(232,54,20)" rx="2" ry="2" />
<text  x="880.49" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="470.6" y="1909" width="0.2" height="15.0" fill="rgb(242,54,7)" rx="2" ry="2" />
<text  x="473.59" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="10.4" y="1861" width="0.8" height="15.0" fill="rgb(210,91,22)" rx="2" ry="2" />
<text  x="13.40" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.2" y="1765" width="0.2" height="15.0" fill="rgb(212,196,3)" rx="2" ry="2" />
<text  x="844.17" y="1775.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="931.2" y="1941" width="0.2" height="15.0" fill="rgb(231,185,33)" rx="2" ry="2" />
<text  x="934.17" y="1951.5" ></text>
</g>
<g >
<title>__sys_sendmsg (458 samples, 7.75%)</title><rect x="247.1" y="1973" width="91.4" height="15.0" fill="rgb(232,144,27)" rx="2" ry="2" />
<text  x="250.08" y="1983.5" >__sys_send..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1027.2" y="2021" width="0.4" height="15.0" fill="rgb(250,172,46)" rx="2" ry="2" />
<text  x="1030.16" y="2031.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="694.1" y="1909" width="1.0" height="15.0" fill="rgb(219,162,32)" rx="2" ry="2" />
<text  x="697.09" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1146.3" y="2005" width="0.2" height="15.0" fill="rgb(206,135,24)" rx="2" ry="2" />
<text  x="1149.30" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="28.8" y="1909" width="0.2" height="15.0" fill="rgb(236,82,26)" rx="2" ry="2" />
<text  x="31.76" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="33.1" y="1973" width="0.2" height="15.0" fill="rgb(212,68,7)" rx="2" ry="2" />
<text  x="36.15" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="340.5" y="2021" width="3.0" height="15.0" fill="rgb(237,17,50)" rx="2" ry="2" />
<text  x="343.47" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="824.8" y="1701" width="0.4" height="15.0" fill="rgb(246,31,0)" rx="2" ry="2" />
<text  x="827.80" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="534.8" y="1973" width="0.8" height="15.0" fill="rgb(226,198,41)" rx="2" ry="2" />
<text  x="537.84" y="1983.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="77.5" y="1941" width="0.2" height="15.0" fill="rgb(211,202,21)" rx="2" ry="2" />
<text  x="80.45" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1090.8" y="1861" width="0.2" height="15.0" fill="rgb(208,17,52)" rx="2" ry="2" />
<text  x="1093.82" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18 samples, 0.30%)</title><rect x="833.4" y="1893" width="3.6" height="15.0" fill="rgb(218,122,36)" rx="2" ry="2" />
<text  x="836.39" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1176.4" y="1973" width="0.2" height="15.0" fill="rgb(231,25,23)" rx="2" ry="2" />
<text  x="1179.43" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="119.6" y="53" width="0.2" height="15.0" fill="rgb(224,120,8)" rx="2" ry="2" />
<text  x="122.56" y="63.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="451.8" y="1877" width="0.2" height="15.0" fill="rgb(239,168,31)" rx="2" ry="2" />
<text  x="454.83" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="173.4" y="1973" width="0.2" height="15.0" fill="rgb(254,134,11)" rx="2" ry="2" />
<text  x="176.44" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="63.7" y="1877" width="0.2" height="15.0" fill="rgb(218,75,14)" rx="2" ry="2" />
<text  x="66.68" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (5 samples, 0.08%)</title><rect x="231.5" y="1909" width="1.0" height="15.0" fill="rgb(236,31,20)" rx="2" ry="2" />
<text  x="234.51" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="540.0" y="1877" width="0.6" height="15.0" fill="rgb(230,220,28)" rx="2" ry="2" />
<text  x="543.03" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="535.6" y="1973" width="0.2" height="15.0" fill="rgb(208,57,39)" rx="2" ry="2" />
<text  x="538.64" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (2 samples, 0.03%)</title><rect x="1147.7" y="2037" width="0.4" height="15.0" fill="rgb(248,119,16)" rx="2" ry="2" />
<text  x="1150.69" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="966.5" y="2037" width="0.2" height="15.0" fill="rgb(252,29,21)" rx="2" ry="2" />
<text  x="969.49" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="914.4" y="2005" width="1.0" height="15.0" fill="rgb(254,128,31)" rx="2" ry="2" />
<text  x="917.41" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::dismiss (1 samples, 0.02%)</title><rect x="158.1" y="1909" width="0.2" height="15.0" fill="rgb(206,62,40)" rx="2" ry="2" />
<text  x="161.07" y="1919.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1088.4" y="1685" width="0.2" height="15.0" fill="rgb(228,70,42)" rx="2" ry="2" />
<text  x="1091.42" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1122.1" y="1845" width="0.2" height="15.0" fill="rgb(225,201,39)" rx="2" ry="2" />
<text  x="1125.15" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (6 samples, 0.10%)</title><rect x="517.7" y="1957" width="1.2" height="15.0" fill="rgb(206,9,10)" rx="2" ry="2" />
<text  x="520.68" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="895.8" y="2005" width="1.4" height="15.0" fill="rgb(210,181,42)" rx="2" ry="2" />
<text  x="898.85" y="2015.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.07%)</title><rect x="692.9" y="1877" width="0.8" height="15.0" fill="rgb(227,133,9)" rx="2" ry="2" />
<text  x="695.90" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="962.1" y="1893" width="0.8" height="15.0" fill="rgb(248,12,32)" rx="2" ry="2" />
<text  x="965.10" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init_header (1 samples, 0.02%)</title><rect x="141.9" y="1909" width="0.2" height="15.0" fill="rgb(246,163,30)" rx="2" ry="2" />
<text  x="144.91" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="634.4" y="1941" width="0.2" height="15.0" fill="rgb(211,21,44)" rx="2" ry="2" />
<text  x="637.42" y="1951.5" ></text>
</g>
<g >
<title>dentry_free (1 samples, 0.02%)</title><rect x="741.8" y="1765" width="0.2" height="15.0" fill="rgb(224,179,34)" rx="2" ry="2" />
<text  x="744.79" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (7 samples, 0.12%)</title><rect x="572.6" y="1989" width="1.4" height="15.0" fill="rgb(209,173,13)" rx="2" ry="2" />
<text  x="575.56" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1147.9" y="1989" width="0.2" height="15.0" fill="rgb(220,131,14)" rx="2" ry="2" />
<text  x="1150.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="661" width="16.0" height="15.0" fill="rgb(239,126,31)" rx="2" ry="2" />
<text  x="108.39" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (8 samples, 0.14%)</title><rect x="82.4" y="1925" width="1.6" height="15.0" fill="rgb(251,159,18)" rx="2" ry="2" />
<text  x="85.44" y="1935.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="736.0" y="1653" width="0.2" height="15.0" fill="rgb(245,131,35)" rx="2" ry="2" />
<text  x="739.00" y="1663.5" ></text>
</g>
<g >
<title>get_empty_filp (30 samples, 0.51%)</title><rect x="397.1" y="1925" width="6.0" height="15.0" fill="rgb(247,164,30)" rx="2" ry="2" />
<text  x="400.15" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="58.9" y="1781" width="0.2" height="15.0" fill="rgb(207,116,46)" rx="2" ry="2" />
<text  x="61.89" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="349.9" y="2021" width="0.4" height="15.0" fill="rgb(208,18,20)" rx="2" ry="2" />
<text  x="352.85" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (28 samples, 0.47%)</title><rect x="1109.4" y="1557" width="5.6" height="15.0" fill="rgb(254,218,38)" rx="2" ry="2" />
<text  x="1112.38" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (102 samples, 1.73%)</title><rect x="581.5" y="2005" width="20.4" height="15.0" fill="rgb(238,89,32)" rx="2" ry="2" />
<text  x="584.54" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="897.8" y="1989" width="1.4" height="15.0" fill="rgb(239,190,17)" rx="2" ry="2" />
<text  x="900.84" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="639.6" y="1957" width="0.4" height="15.0" fill="rgb(240,173,42)" rx="2" ry="2" />
<text  x="642.61" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="525.7" y="1973" width="1.2" height="15.0" fill="rgb(224,48,3)" rx="2" ry="2" />
<text  x="528.66" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="920.2" y="1909" width="0.2" height="15.0" fill="rgb(229,157,38)" rx="2" ry="2" />
<text  x="923.19" y="1919.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="408.1" y="1957" width="1.0" height="15.0" fill="rgb(225,205,26)" rx="2" ry="2" />
<text  x="411.12" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="58.9" y="1653" width="0.2" height="15.0" fill="rgb(206,62,17)" rx="2" ry="2" />
<text  x="61.89" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="177.0" y="1957" width="0.4" height="15.0" fill="rgb(216,138,35)" rx="2" ry="2" />
<text  x="180.03" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (604 samples, 10.21%)</title><rect x="712.9" y="1893" width="120.5" height="15.0" fill="rgb(207,163,33)" rx="2" ry="2" />
<text  x="715.85" y="1903.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1006.6" y="1973" width="0.6" height="15.0" fill="rgb(233,2,22)" rx="2" ry="2" />
<text  x="1009.60" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (2 samples, 0.03%)</title><rect x="523.1" y="1989" width="0.4" height="15.0" fill="rgb(223,195,29)" rx="2" ry="2" />
<text  x="526.07" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="338.3" y="1781" width="0.2" height="15.0" fill="rgb(216,22,21)" rx="2" ry="2" />
<text  x="341.28" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="463.2" y="1957" width="0.2" height="15.0" fill="rgb(223,218,34)" rx="2" ry="2" />
<text  x="466.20" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="173.4" y="1989" width="0.2" height="15.0" fill="rgb(231,36,32)" rx="2" ry="2" />
<text  x="176.44" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="72.7" y="1925" width="0.2" height="15.0" fill="rgb(222,192,34)" rx="2" ry="2" />
<text  x="75.66" y="1935.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="162.1" y="2021" width="0.4" height="15.0" fill="rgb(218,227,40)" rx="2" ry="2" />
<text  x="165.06" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.02%)</title><rect x="1182.0" y="1989" width="0.2" height="15.0" fill="rgb(209,41,51)" rx="2" ry="2" />
<text  x="1185.02" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1083.2" y="1845" width="0.2" height="15.0" fill="rgb(225,19,29)" rx="2" ry="2" />
<text  x="1086.24" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="53.9" y="1701" width="0.2" height="15.0" fill="rgb(234,65,33)" rx="2" ry="2" />
<text  x="56.90" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (4 samples, 0.07%)</title><rect x="859.1" y="1989" width="0.8" height="15.0" fill="rgb(223,174,43)" rx="2" ry="2" />
<text  x="862.13" y="1999.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1115.6" y="1845" width="0.2" height="15.0" fill="rgb(209,178,20)" rx="2" ry="2" />
<text  x="1118.56" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (4 samples, 0.07%)</title><rect x="187.0" y="2021" width="0.8" height="15.0" fill="rgb(229,51,0)" rx="2" ry="2" />
<text  x="190.01" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="23.0" y="1973" width="0.2" height="15.0" fill="rgb(246,215,39)" rx="2" ry="2" />
<text  x="25.97" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="451.8" y="1669" width="0.2" height="15.0" fill="rgb(220,188,50)" rx="2" ry="2" />
<text  x="454.83" y="1679.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="529.7" y="1941" width="0.4" height="15.0" fill="rgb(249,45,34)" rx="2" ry="2" />
<text  x="532.65" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="777.5" y="1333" width="0.2" height="15.0" fill="rgb(240,35,41)" rx="2" ry="2" />
<text  x="780.51" y="1343.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1122.1" y="1813" width="0.2" height="15.0" fill="rgb(230,156,27)" rx="2" ry="2" />
<text  x="1125.15" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="704.3" y="1973" width="0.4" height="15.0" fill="rgb(241,203,15)" rx="2" ry="2" />
<text  x="707.27" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="914.2" y="1861" width="0.2" height="15.0" fill="rgb(232,86,6)" rx="2" ry="2" />
<text  x="917.21" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="246.7" y="1845" width="0.2" height="15.0" fill="rgb(222,88,16)" rx="2" ry="2" />
<text  x="249.68" y="1855.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2 samples, 0.03%)</title><rect x="332.9" y="1909" width="0.4" height="15.0" fill="rgb(219,194,34)" rx="2" ry="2" />
<text  x="335.89" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="672.3" y="1877" width="0.2" height="15.0" fill="rgb(210,115,54)" rx="2" ry="2" />
<text  x="675.34" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="837.6" y="1925" width="0.4" height="15.0" fill="rgb(233,160,43)" rx="2" ry="2" />
<text  x="840.58" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="964.7" y="1701" width="0.2" height="15.0" fill="rgb(249,186,20)" rx="2" ry="2" />
<text  x="967.70" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="581.7" y="1973" width="0.2" height="15.0" fill="rgb(234,164,37)" rx="2" ry="2" />
<text  x="584.74" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="517.3" y="1941" width="0.2" height="15.0" fill="rgb(210,120,42)" rx="2" ry="2" />
<text  x="520.28" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="77.7" y="1941" width="0.2" height="15.0" fill="rgb(217,117,28)" rx="2" ry="2" />
<text  x="80.65" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="568.2" y="1925" width="0.2" height="15.0" fill="rgb(250,190,28)" rx="2" ry="2" />
<text  x="571.17" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="988.4" y="1909" width="0.2" height="15.0" fill="rgb(213,200,27)" rx="2" ry="2" />
<text  x="991.44" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="226.7" y="1813" width="0.4" height="15.0" fill="rgb(236,147,42)" rx="2" ry="2" />
<text  x="229.72" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="574.4" y="1973" width="0.2" height="15.0" fill="rgb(250,93,44)" rx="2" ry="2" />
<text  x="577.36" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="29.4" y="1973" width="0.2" height="15.0" fill="rgb(241,111,51)" rx="2" ry="2" />
<text  x="32.36" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="63.9" y="1717" width="0.2" height="15.0" fill="rgb(205,201,54)" rx="2" ry="2" />
<text  x="66.88" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.22%)</title><rect x="634.6" y="1941" width="2.6" height="15.0" fill="rgb(254,59,34)" rx="2" ry="2" />
<text  x="637.62" y="1951.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2 samples, 0.03%)</title><rect x="131.7" y="1925" width="0.4" height="15.0" fill="rgb(211,215,14)" rx="2" ry="2" />
<text  x="134.73" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (60 samples, 1.01%)</title><rect x="174.6" y="2021" width="12.0" height="15.0" fill="rgb(241,15,44)" rx="2" ry="2" />
<text  x="177.64" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="105.2" y="1301" width="16.2" height="15.0" fill="rgb(220,51,23)" rx="2" ry="2" />
<text  x="108.19" y="1311.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.2" y="1701" width="0.2" height="15.0" fill="rgb(242,59,45)" rx="2" ry="2" />
<text  x="126.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1023.8" y="2037" width="0.2" height="15.0" fill="rgb(210,54,17)" rx="2" ry="2" />
<text  x="1026.77" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="896.0" y="1989" width="0.2" height="15.0" fill="rgb(248,62,27)" rx="2" ry="2" />
<text  x="899.05" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="118.2" y="69" width="1.2" height="15.0" fill="rgb(214,118,33)" rx="2" ry="2" />
<text  x="121.16" y="79.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="406.5" y="1909" width="0.2" height="15.0" fill="rgb(238,101,34)" rx="2" ry="2" />
<text  x="409.53" y="1919.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="779.7" y="1525" width="1.0" height="15.0" fill="rgb(252,87,27)" rx="2" ry="2" />
<text  x="782.70" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="651.0" y="2005" width="0.2" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="653.99" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="501.5" y="1685" width="0.6" height="15.0" fill="rgb(220,16,25)" rx="2" ry="2" />
<text  x="504.52" y="1695.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="72.1" y="1877" width="0.2" height="15.0" fill="rgb(219,67,42)" rx="2" ry="2" />
<text  x="75.06" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (2 samples, 0.03%)</title><rect x="852.7" y="1957" width="0.4" height="15.0" fill="rgb(234,164,51)" rx="2" ry="2" />
<text  x="855.74" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="94.4" y="2005" width="0.2" height="15.0" fill="rgb(225,32,28)" rx="2" ry="2" />
<text  x="97.41" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (101 samples, 1.71%)</title><rect x="290.6" y="1733" width="20.1" height="15.0" fill="rgb(243,25,6)" rx="2" ry="2" />
<text  x="293.58" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="119.2" y="53" width="0.2" height="15.0" fill="rgb(219,129,44)" rx="2" ry="2" />
<text  x="122.16" y="63.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="544.8" y="1845" width="0.2" height="15.0" fill="rgb(243,35,43)" rx="2" ry="2" />
<text  x="547.82" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (5 samples, 0.08%)</title><rect x="970.1" y="2005" width="1.0" height="15.0" fill="rgb(236,162,42)" rx="2" ry="2" />
<text  x="973.08" y="2015.5" ></text>
</g>
<g >
<title>__snprintf (3 samples, 0.05%)</title><rect x="345.9" y="2037" width="0.6" height="15.0" fill="rgb(213,13,6)" rx="2" ry="2" />
<text  x="348.86" y="2047.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (1 samples, 0.02%)</title><rect x="685.9" y="1941" width="0.2" height="15.0" fill="rgb(217,209,35)" rx="2" ry="2" />
<text  x="688.91" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="91.0" y="1797" width="0.2" height="15.0" fill="rgb(218,117,12)" rx="2" ry="2" />
<text  x="94.02" y="1807.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1178.8" y="2005" width="0.2" height="15.0" fill="rgb(223,225,14)" rx="2" ry="2" />
<text  x="1181.82" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="618.9" y="1989" width="0.4" height="15.0" fill="rgb(249,132,37)" rx="2" ry="2" />
<text  x="621.86" y="1999.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="811.6" y="1669" width="0.2" height="15.0" fill="rgb(241,204,2)" rx="2" ry="2" />
<text  x="814.63" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="919.6" y="1925" width="0.2" height="15.0" fill="rgb(239,119,41)" rx="2" ry="2" />
<text  x="922.60" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="179.0" y="1941" width="0.4" height="15.0" fill="rgb(212,22,5)" rx="2" ry="2" />
<text  x="182.03" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (3 samples, 0.05%)</title><rect x="1145.1" y="1973" width="0.6" height="15.0" fill="rgb(233,49,6)" rx="2" ry="2" />
<text  x="1148.10" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="120.6" y="165" width="0.2" height="15.0" fill="rgb(224,203,40)" rx="2" ry="2" />
<text  x="123.56" y="175.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="905.2" y="1845" width="0.2" height="15.0" fill="rgb(223,179,24)" rx="2" ry="2" />
<text  x="908.23" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="121.0" y="213" width="0.2" height="15.0" fill="rgb(217,129,43)" rx="2" ry="2" />
<text  x="123.96" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="1140.1" y="1989" width="0.2" height="15.0" fill="rgb(207,3,39)" rx="2" ry="2" />
<text  x="1143.11" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="12.4" y="1973" width="0.2" height="15.0" fill="rgb(209,43,27)" rx="2" ry="2" />
<text  x="15.39" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="358.4" y="1941" width="0.2" height="15.0" fill="rgb(235,139,47)" rx="2" ry="2" />
<text  x="361.43" y="1951.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="687.7" y="1909" width="0.8" height="15.0" fill="rgb(252,104,37)" rx="2" ry="2" />
<text  x="690.71" y="1919.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="310.3" y="1653" width="0.2" height="15.0" fill="rgb(213,56,3)" rx="2" ry="2" />
<text  x="313.34" y="1663.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (19 samples, 0.32%)</title><rect x="403.1" y="1941" width="3.8" height="15.0" fill="rgb(205,203,45)" rx="2" ry="2" />
<text  x="406.13" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (23 samples, 0.39%)</title><rect x="917.6" y="1973" width="4.6" height="15.0" fill="rgb(246,117,16)" rx="2" ry="2" />
<text  x="920.60" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="692.7" y="1861" width="0.2" height="15.0" fill="rgb(232,71,6)" rx="2" ry="2" />
<text  x="695.70" y="1871.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="668.3" y="1845" width="0.2" height="15.0" fill="rgb(208,26,13)" rx="2" ry="2" />
<text  x="671.35" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (95 samples, 1.61%)</title><rect x="656.8" y="1989" width="18.9" height="15.0" fill="rgb(205,50,53)" rx="2" ry="2" />
<text  x="659.77" y="1999.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1067.3" y="1781" width="0.2" height="15.0" fill="rgb(228,38,27)" rx="2" ry="2" />
<text  x="1070.27" y="1791.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="293.6" y="1653" width="0.2" height="15.0" fill="rgb(242,121,17)" rx="2" ry="2" />
<text  x="296.58" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="105.4" y="165" width="15.2" height="15.0" fill="rgb(221,170,17)" rx="2" ry="2" />
<text  x="108.39" y="175.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="1067.1" y="1765" width="0.2" height="15.0" fill="rgb(236,4,46)" rx="2" ry="2" />
<text  x="1070.07" y="1775.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="614.5" y="2005" width="0.2" height="15.0" fill="rgb(238,79,41)" rx="2" ry="2" />
<text  x="617.47" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="363.2" y="1717" width="0.2" height="15.0" fill="rgb(245,94,50)" rx="2" ry="2" />
<text  x="366.22" y="1727.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="477.4" y="1941" width="0.2" height="15.0" fill="rgb(251,208,6)" rx="2" ry="2" />
<text  x="480.37" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="566.0" y="1973" width="0.2" height="15.0" fill="rgb(221,207,37)" rx="2" ry="2" />
<text  x="568.97" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="848.2" y="1813" width="0.2" height="15.0" fill="rgb(254,154,42)" rx="2" ry="2" />
<text  x="851.15" y="1823.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="332.5" y="1893" width="0.2" height="15.0" fill="rgb(234,193,5)" rx="2" ry="2" />
<text  x="335.49" y="1903.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="274.4" y="1733" width="0.2" height="15.0" fill="rgb(253,206,23)" rx="2" ry="2" />
<text  x="277.42" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1080.6" y="1861" width="0.2" height="15.0" fill="rgb(222,66,31)" rx="2" ry="2" />
<text  x="1083.64" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.37%)</title><rect x="105.2" y="1285" width="16.2" height="15.0" fill="rgb(213,35,29)" rx="2" ry="2" />
<text  x="108.19" y="1295.5" ></text>
</g>
<g >
<title>validate_xmit_skb (11 samples, 0.19%)</title><rect x="797.9" y="1525" width="2.2" height="15.0" fill="rgb(235,219,7)" rx="2" ry="2" />
<text  x="800.86" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (27 samples, 0.46%)</title><rect x="935.8" y="1989" width="5.3" height="15.0" fill="rgb(213,92,2)" rx="2" ry="2" />
<text  x="938.76" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="951.7" y="2005" width="0.2" height="15.0" fill="rgb(213,165,32)" rx="2" ry="2" />
<text  x="954.73" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="677" width="16.0" height="15.0" fill="rgb(254,10,29)" rx="2" ry="2" />
<text  x="108.39" y="687.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="385.6" y="1957" width="0.2" height="15.0" fill="rgb(222,90,36)" rx="2" ry="2" />
<text  x="388.57" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="121.0" y="309" width="0.2" height="15.0" fill="rgb(246,161,8)" rx="2" ry="2" />
<text  x="123.96" y="319.5" ></text>
</g>
<g >
<title>skb_clone (27 samples, 0.46%)</title><rect x="800.9" y="1669" width="5.3" height="15.0" fill="rgb(205,156,17)" rx="2" ry="2" />
<text  x="803.86" y="1679.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="338.3" y="1669" width="0.2" height="15.0" fill="rgb(241,81,26)" rx="2" ry="2" />
<text  x="341.28" y="1679.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="526.5" y="1941" width="0.2" height="15.0" fill="rgb(206,123,22)" rx="2" ry="2" />
<text  x="529.46" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="325" width="15.6" height="15.0" fill="rgb(245,16,49)" rx="2" ry="2" />
<text  x="108.39" y="335.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="452.0" y="1717" width="0.2" height="15.0" fill="rgb(235,183,46)" rx="2" ry="2" />
<text  x="455.03" y="1727.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="1018.2" y="2037" width="0.6" height="15.0" fill="rgb(208,27,33)" rx="2" ry="2" />
<text  x="1021.18" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="529.7" y="1909" width="0.2" height="15.0" fill="rgb(237,200,44)" rx="2" ry="2" />
<text  x="532.65" y="1919.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="805.8" y="1365" width="0.2" height="15.0" fill="rgb(231,147,29)" rx="2" ry="2" />
<text  x="808.85" y="1375.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="91.0" y="1765" width="0.2" height="15.0" fill="rgb(252,147,7)" rx="2" ry="2" />
<text  x="94.02" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1135.5" y="2037" width="0.2" height="15.0" fill="rgb(229,50,35)" rx="2" ry="2" />
<text  x="1138.52" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="373.4" y="1733" width="0.2" height="15.0" fill="rgb(235,24,32)" rx="2" ry="2" />
<text  x="376.40" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="884.1" y="1797" width="0.2" height="15.0" fill="rgb(219,162,42)" rx="2" ry="2" />
<text  x="887.07" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (8 samples, 0.14%)</title><rect x="1141.1" y="2037" width="1.6" height="15.0" fill="rgb(235,96,36)" rx="2" ry="2" />
<text  x="1144.11" y="2047.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="811.8" y="1621" width="0.2" height="15.0" fill="rgb(206,221,17)" rx="2" ry="2" />
<text  x="814.83" y="1631.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="1140.7" y="1925" width="0.2" height="15.0" fill="rgb(246,5,6)" rx="2" ry="2" />
<text  x="1143.71" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="147.5" y="1909" width="0.2" height="15.0" fill="rgb(247,69,26)" rx="2" ry="2" />
<text  x="150.50" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="105.4" y="181" width="15.2" height="15.0" fill="rgb(211,134,5)" rx="2" ry="2" />
<text  x="108.39" y="191.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="999.4" y="1845" width="0.2" height="15.0" fill="rgb(251,140,0)" rx="2" ry="2" />
<text  x="1002.42" y="1855.5" ></text>
</g>
<g >
<title>__slab_alloc (6 samples, 0.10%)</title><rect x="271.0" y="1813" width="1.2" height="15.0" fill="rgb(247,196,9)" rx="2" ry="2" />
<text  x="274.02" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="817.2" y="1717" width="0.2" height="15.0" fill="rgb(227,196,43)" rx="2" ry="2" />
<text  x="820.22" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.08%)</title><rect x="887.1" y="1925" width="1.0" height="15.0" fill="rgb(227,85,3)" rx="2" ry="2" />
<text  x="890.07" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="317.7" y="1797" width="0.2" height="15.0" fill="rgb(214,138,48)" rx="2" ry="2" />
<text  x="320.72" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (2 samples, 0.03%)</title><rect x="30.0" y="1973" width="0.4" height="15.0" fill="rgb(254,124,25)" rx="2" ry="2" />
<text  x="32.96" y="1983.5" ></text>
</g>
<g >
<title>free (26 samples, 0.44%)</title><rect x="188.0" y="2021" width="5.2" height="15.0" fill="rgb(218,36,21)" rx="2" ry="2" />
<text  x="191.01" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="777.5" y="1365" width="0.2" height="15.0" fill="rgb(205,133,15)" rx="2" ry="2" />
<text  x="780.51" y="1375.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="105.6" y="37" width="0.2" height="15.0" fill="rgb(210,58,32)" rx="2" ry="2" />
<text  x="108.59" y="47.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.4" y="1893" width="0.2" height="15.0" fill="rgb(211,74,34)" rx="2" ry="2" />
<text  x="547.42" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="316.3" y="1733" width="0.2" height="15.0" fill="rgb(207,71,42)" rx="2" ry="2" />
<text  x="319.33" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="628.2" y="2005" width="0.2" height="15.0" fill="rgb(208,100,51)" rx="2" ry="2" />
<text  x="631.24" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.0" y="1877" width="0.2" height="15.0" fill="rgb(217,35,37)" rx="2" ry="2" />
<text  x="547.02" y="1887.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1088.4" y="1749" width="0.2" height="15.0" fill="rgb(249,220,38)" rx="2" ry="2" />
<text  x="1091.42" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="172.0" y="1925" width="1.2" height="15.0" fill="rgb(245,42,9)" rx="2" ry="2" />
<text  x="175.04" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="91.0" y="1829" width="0.2" height="15.0" fill="rgb(217,28,1)" rx="2" ry="2" />
<text  x="94.02" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1007.4" y="1957" width="0.2" height="15.0" fill="rgb(242,52,28)" rx="2" ry="2" />
<text  x="1010.40" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="340.3" y="1925" width="0.2" height="15.0" fill="rgb(205,70,12)" rx="2" ry="2" />
<text  x="343.27" y="1935.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="128.3" y="1989" width="0.2" height="15.0" fill="rgb(252,196,52)" rx="2" ry="2" />
<text  x="131.34" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="993.0" y="1845" width="0.8" height="15.0" fill="rgb(214,156,26)" rx="2" ry="2" />
<text  x="996.03" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="300.2" y="1637" width="0.2" height="15.0" fill="rgb(231,16,2)" rx="2" ry="2" />
<text  x="303.16" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="29.4" y="1957" width="0.2" height="15.0" fill="rgb(254,210,13)" rx="2" ry="2" />
<text  x="32.36" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (9 samples, 0.15%)</title><rect x="628.4" y="2005" width="1.8" height="15.0" fill="rgb(205,182,43)" rx="2" ry="2" />
<text  x="631.44" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="272.6" y="1829" width="0.4" height="15.0" fill="rgb(211,222,18)" rx="2" ry="2" />
<text  x="275.62" y="1839.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="740.6" y="1653" width="0.2" height="15.0" fill="rgb(234,121,22)" rx="2" ry="2" />
<text  x="743.59" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="164.1" y="2021" width="0.2" height="15.0" fill="rgb(218,104,47)" rx="2" ry="2" />
<text  x="167.06" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.20%)</title><rect x="171.0" y="1989" width="2.4" height="15.0" fill="rgb(223,139,34)" rx="2" ry="2" />
<text  x="174.05" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="380.4" y="1909" width="0.2" height="15.0" fill="rgb(224,205,22)" rx="2" ry="2" />
<text  x="383.38" y="1919.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (4 samples, 0.07%)</title><rect x="168.8" y="1989" width="0.8" height="15.0" fill="rgb(245,53,37)" rx="2" ry="2" />
<text  x="171.85" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (1 samples, 0.02%)</title><rect x="578.5" y="2021" width="0.2" height="15.0" fill="rgb(236,111,10)" rx="2" ry="2" />
<text  x="581.55" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="227.9" y="1765" width="0.2" height="15.0" fill="rgb(249,187,49)" rx="2" ry="2" />
<text  x="230.92" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="527.7" y="2005" width="0.2" height="15.0" fill="rgb(220,116,10)" rx="2" ry="2" />
<text  x="530.66" y="2015.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="274.4" y="1797" width="0.2" height="15.0" fill="rgb(227,137,24)" rx="2" ry="2" />
<text  x="277.42" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (6 samples, 0.10%)</title><rect x="1138.7" y="2005" width="1.2" height="15.0" fill="rgb(232,78,54)" rx="2" ry="2" />
<text  x="1141.71" y="2015.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="700.1" y="1973" width="0.2" height="15.0" fill="rgb(211,227,37)" rx="2" ry="2" />
<text  x="703.08" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (5 samples, 0.08%)</title><rect x="611.7" y="1893" width="1.0" height="15.0" fill="rgb(229,112,40)" rx="2" ry="2" />
<text  x="614.67" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1957" width="0.2" height="15.0" fill="rgb(222,170,8)" rx="2" ry="2" />
<text  x="1143.31" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="136.5" y="1877" width="0.2" height="15.0" fill="rgb(238,73,30)" rx="2" ry="2" />
<text  x="139.52" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="29.8" y="1973" width="0.2" height="15.0" fill="rgb(227,27,38)" rx="2" ry="2" />
<text  x="32.76" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (1 samples, 0.02%)</title><rect x="1149.5" y="1973" width="0.2" height="15.0" fill="rgb(223,225,54)" rx="2" ry="2" />
<text  x="1152.49" y="1983.5" ></text>
</g>
<g >
<title>__sock_release (429 samples, 7.26%)</title><rect x="743.6" y="1781" width="85.6" height="15.0" fill="rgb(218,47,28)" rx="2" ry="2" />
<text  x="746.58" y="1791.5" >__sock_rel..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="969.3" y="1909" width="0.2" height="15.0" fill="rgb(254,16,2)" rx="2" ry="2" />
<text  x="972.29" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="904.6" y="1973" width="0.2" height="15.0" fill="rgb(223,124,9)" rx="2" ry="2" />
<text  x="907.63" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="892.1" y="1797" width="0.2" height="15.0" fill="rgb(233,107,6)" rx="2" ry="2" />
<text  x="895.06" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="987.2" y="1909" width="1.2" height="15.0" fill="rgb(211,169,40)" rx="2" ry="2" />
<text  x="990.25" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="987.0" y="1909" width="0.2" height="15.0" fill="rgb(208,206,26)" rx="2" ry="2" />
<text  x="990.05" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="338.3" y="1749" width="0.2" height="15.0" fill="rgb(211,125,48)" rx="2" ry="2" />
<text  x="341.28" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="900.4" y="1925" width="0.2" height="15.0" fill="rgb(218,185,35)" rx="2" ry="2" />
<text  x="903.44" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (2 samples, 0.03%)</title><rect x="615.5" y="2037" width="0.4" height="15.0" fill="rgb(251,156,10)" rx="2" ry="2" />
<text  x="618.47" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="316.7" y="1525" width="0.2" height="15.0" fill="rgb(219,129,23)" rx="2" ry="2" />
<text  x="319.72" y="1535.5" ></text>
</g>
<g >
<title>SYSC_accept4 (254 samples, 4.30%)</title><rect x="358.6" y="1973" width="50.7" height="15.0" fill="rgb(216,46,31)" rx="2" ry="2" />
<text  x="361.63" y="1983.5" >SYSC_..</text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="318.7" y="1701" width="0.2" height="15.0" fill="rgb(214,203,16)" rx="2" ry="2" />
<text  x="321.72" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="971.7" y="2037" width="1.2" height="15.0" fill="rgb(242,20,14)" rx="2" ry="2" />
<text  x="974.68" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (11 samples, 0.19%)</title><rect x="219.7" y="1925" width="2.2" height="15.0" fill="rgb(244,82,31)" rx="2" ry="2" />
<text  x="222.74" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="474.0" y="1573" width="0.2" height="15.0" fill="rgb(230,161,35)" rx="2" ry="2" />
<text  x="476.98" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (2 samples, 0.03%)</title><rect x="911.2" y="2037" width="0.4" height="15.0" fill="rgb(206,26,32)" rx="2" ry="2" />
<text  x="914.21" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="997" width="16.0" height="15.0" fill="rgb(236,66,4)" rx="2" ry="2" />
<text  x="108.39" y="1007.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="488.7" y="1957" width="0.2" height="15.0" fill="rgb(218,70,11)" rx="2" ry="2" />
<text  x="491.75" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="962.1" y="1941" width="0.8" height="15.0" fill="rgb(247,220,50)" rx="2" ry="2" />
<text  x="965.10" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="634.6" y="1909" width="0.2" height="15.0" fill="rgb(209,30,11)" rx="2" ry="2" />
<text  x="637.62" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (22 samples, 0.37%)</title><rect x="646.8" y="2037" width="4.4" height="15.0" fill="rgb(223,152,50)" rx="2" ry="2" />
<text  x="649.80" y="2047.5" ></text>
</g>
<g >
<title>inet_release (405 samples, 6.85%)</title><rect x="745.0" y="1765" width="80.8" height="15.0" fill="rgb(254,55,17)" rx="2" ry="2" />
<text  x="747.98" y="1775.5" >inet_rele..</text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.08%)</title><rect x="282.6" y="1781" width="1.0" height="15.0" fill="rgb(245,42,54)" rx="2" ry="2" />
<text  x="285.60" y="1791.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="516.5" y="1989" width="0.2" height="15.0" fill="rgb(236,214,35)" rx="2" ry="2" />
<text  x="519.48" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="91.0" y="1845" width="0.2" height="15.0" fill="rgb(229,175,11)" rx="2" ry="2" />
<text  x="94.02" y="1855.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.02%)</title><rect x="830.0" y="1829" width="0.2" height="15.0" fill="rgb(252,104,33)" rx="2" ry="2" />
<text  x="832.99" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="884.3" y="1925" width="0.2" height="15.0" fill="rgb(226,25,17)" rx="2" ry="2" />
<text  x="887.27" y="1935.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="150.7" y="1557" width="0.2" height="15.0" fill="rgb(253,191,26)" rx="2" ry="2" />
<text  x="153.69" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (2 samples, 0.03%)</title><rect x="624.2" y="2005" width="0.4" height="15.0" fill="rgb(245,3,10)" rx="2" ry="2" />
<text  x="627.25" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="481.0" y="1989" width="0.4" height="15.0" fill="rgb(207,158,28)" rx="2" ry="2" />
<text  x="483.96" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="988.6" y="1909" width="0.2" height="15.0" fill="rgb(227,121,32)" rx="2" ry="2" />
<text  x="991.64" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="1144.3" y="1973" width="0.6" height="15.0" fill="rgb(205,49,2)" rx="2" ry="2" />
<text  x="1147.30" y="1983.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="488.7" y="1941" width="0.2" height="15.0" fill="rgb(232,9,18)" rx="2" ry="2" />
<text  x="491.75" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="637.2" y="1925" width="0.4" height="15.0" fill="rgb(221,11,4)" rx="2" ry="2" />
<text  x="640.22" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (29 samples, 0.49%)</title><rect x="1109.2" y="1589" width="5.8" height="15.0" fill="rgb(252,131,26)" rx="2" ry="2" />
<text  x="1112.18" y="1599.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (13 samples, 0.22%)</title><rect x="12.8" y="1845" width="2.6" height="15.0" fill="rgb(214,181,43)" rx="2" ry="2" />
<text  x="15.79" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="340.1" y="2021" width="0.4" height="15.0" fill="rgb(254,106,54)" rx="2" ry="2" />
<text  x="343.07" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (2 samples, 0.03%)</title><rect x="899.4" y="2037" width="0.4" height="15.0" fill="rgb(232,170,18)" rx="2" ry="2" />
<text  x="902.44" y="2047.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="951.1" y="1637" width="0.2" height="15.0" fill="rgb(216,52,11)" rx="2" ry="2" />
<text  x="954.13" y="1647.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="363.2" y="1861" width="0.2" height="15.0" fill="rgb(213,186,0)" rx="2" ry="2" />
<text  x="366.22" y="1871.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9 samples, 0.15%)</title><rect x="761.5" y="1685" width="1.8" height="15.0" fill="rgb(235,14,12)" rx="2" ry="2" />
<text  x="764.54" y="1695.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.02%)</title><rect x="1173.8" y="1957" width="0.2" height="15.0" fill="rgb(210,92,41)" rx="2" ry="2" />
<text  x="1176.84" y="1967.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="93.2" y="1973" width="0.4" height="15.0" fill="rgb(216,199,18)" rx="2" ry="2" />
<text  x="96.22" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="962.3" y="1845" width="0.6" height="15.0" fill="rgb(232,128,48)" rx="2" ry="2" />
<text  x="965.30" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="202.2" y="1925" width="0.2" height="15.0" fill="rgb(237,37,44)" rx="2" ry="2" />
<text  x="205.18" y="1935.5" ></text>
</g>
<g >
<title>sock_alloc_inode (23 samples, 0.39%)</title><rect x="391.4" y="1909" width="4.5" height="15.0" fill="rgb(235,203,32)" rx="2" ry="2" />
<text  x="394.36" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="58.9" y="1717" width="0.2" height="15.0" fill="rgb(242,188,24)" rx="2" ry="2" />
<text  x="61.89" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="58.9" y="1621" width="0.2" height="15.0" fill="rgb(254,211,0)" rx="2" ry="2" />
<text  x="61.89" y="1631.5" ></text>
</g>
<g >
<title>import_single_range (3 samples, 0.05%)</title><rect x="1051.7" y="1973" width="0.6" height="15.0" fill="rgb(217,210,48)" rx="2" ry="2" />
<text  x="1054.70" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="363.2" y="1893" width="0.2" height="15.0" fill="rgb(248,193,36)" rx="2" ry="2" />
<text  x="366.22" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (17 samples, 0.29%)</title><rect x="179.4" y="1989" width="3.4" height="15.0" fill="rgb(234,154,39)" rx="2" ry="2" />
<text  x="182.43" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_accept (60 samples, 1.01%)</title><rect x="367.8" y="1941" width="12.0" height="15.0" fill="rgb(223,143,48)" rx="2" ry="2" />
<text  x="370.81" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="183.8" y="1973" width="1.2" height="15.0" fill="rgb(228,83,37)" rx="2" ry="2" />
<text  x="186.82" y="1983.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="60.5" y="1909" width="0.8" height="15.0" fill="rgb(235,34,30)" rx="2" ry="2" />
<text  x="63.49" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="672.3" y="1733" width="0.2" height="15.0" fill="rgb(205,225,16)" rx="2" ry="2" />
<text  x="675.34" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1157" width="16.0" height="15.0" fill="rgb(242,61,12)" rx="2" ry="2" />
<text  x="108.39" y="1167.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (10 samples, 0.17%)</title><rect x="549.6" y="1989" width="2.0" height="15.0" fill="rgb(234,181,47)" rx="2" ry="2" />
<text  x="552.61" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="133.5" y="1957" width="0.2" height="15.0" fill="rgb(211,80,16)" rx="2" ry="2" />
<text  x="136.53" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="53.9" y="1829" width="0.2" height="15.0" fill="rgb(220,220,1)" rx="2" ry="2" />
<text  x="56.90" y="1839.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="695.5" y="1733" width="0.2" height="15.0" fill="rgb(240,175,24)" rx="2" ry="2" />
<text  x="698.49" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (41 samples, 0.69%)</title><rect x="57.5" y="1957" width="8.2" height="15.0" fill="rgb(238,2,50)" rx="2" ry="2" />
<text  x="60.50" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="905.2" y="1941" width="0.2" height="15.0" fill="rgb(212,174,12)" rx="2" ry="2" />
<text  x="908.23" y="1951.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="373.4" y="1653" width="0.2" height="15.0" fill="rgb(206,37,51)" rx="2" ry="2" />
<text  x="376.40" y="1663.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (5 samples, 0.08%)</title><rect x="167.7" y="1957" width="1.0" height="15.0" fill="rgb(227,41,15)" rx="2" ry="2" />
<text  x="170.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_fin (348 samples, 5.89%)</title><rect x="756.0" y="1733" width="69.4" height="15.0" fill="rgb(230,48,17)" rx="2" ry="2" />
<text  x="758.96" y="1743.5" >tcp_sen..</text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (2 samples, 0.03%)</title><rect x="96.2" y="2021" width="0.4" height="15.0" fill="rgb(220,5,3)" rx="2" ry="2" />
<text  x="99.21" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="121.2" y="421" width="0.2" height="15.0" fill="rgb(220,171,16)" rx="2" ry="2" />
<text  x="124.16" y="431.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="914.2" y="1605" width="0.2" height="15.0" fill="rgb(231,124,4)" rx="2" ry="2" />
<text  x="917.21" y="1615.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="740.6" y="1669" width="0.8" height="15.0" fill="rgb(221,17,10)" rx="2" ry="2" />
<text  x="743.59" y="1679.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="59.5" y="1909" width="0.2" height="15.0" fill="rgb(249,176,10)" rx="2" ry="2" />
<text  x="62.49" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="501.7" y="1637" width="0.2" height="15.0" fill="rgb(224,60,1)" rx="2" ry="2" />
<text  x="504.72" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1108.6" y="1573" width="0.4" height="15.0" fill="rgb(224,86,36)" rx="2" ry="2" />
<text  x="1111.58" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1080.6" y="1813" width="0.2" height="15.0" fill="rgb(207,116,50)" rx="2" ry="2" />
<text  x="1083.64" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.6" y="2021" width="0.8" height="15.0" fill="rgb(212,196,52)" rx="2" ry="2" />
<text  x="14.60" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="338.3" y="1829" width="0.2" height="15.0" fill="rgb(225,191,17)" rx="2" ry="2" />
<text  x="341.28" y="1839.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="185.6" y="1893" width="0.8" height="15.0" fill="rgb(243,15,24)" rx="2" ry="2" />
<text  x="188.61" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.2" y="1717" width="0.2" height="15.0" fill="rgb(245,54,27)" rx="2" ry="2" />
<text  x="844.17" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (16 samples, 0.27%)</title><rect x="641.6" y="2005" width="3.2" height="15.0" fill="rgb(225,220,0)" rx="2" ry="2" />
<text  x="644.61" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="133.5" y="1797" width="0.2" height="15.0" fill="rgb(242,51,51)" rx="2" ry="2" />
<text  x="136.53" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="805.8" y="1525" width="0.4" height="15.0" fill="rgb(232,156,41)" rx="2" ry="2" />
<text  x="808.85" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="618.9" y="1973" width="0.2" height="15.0" fill="rgb(230,221,40)" rx="2" ry="2" />
<text  x="621.86" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="451.8" y="1653" width="0.2" height="15.0" fill="rgb(210,198,8)" rx="2" ry="2" />
<text  x="454.83" y="1663.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1067.3" y="1797" width="0.2" height="15.0" fill="rgb(225,144,41)" rx="2" ry="2" />
<text  x="1070.27" y="1807.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (3 samples, 0.05%)</title><rect x="1002.0" y="2005" width="0.6" height="15.0" fill="rgb(223,6,10)" rx="2" ry="2" />
<text  x="1005.01" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1183.0" y="2021" width="0.4" height="15.0" fill="rgb(245,35,52)" rx="2" ry="2" />
<text  x="1186.02" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="951.1" y="1893" width="0.2" height="15.0" fill="rgb(210,194,0)" rx="2" ry="2" />
<text  x="954.13" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (13 samples, 0.22%)</title><rect x="45.5" y="1973" width="2.6" height="15.0" fill="rgb(212,111,37)" rx="2" ry="2" />
<text  x="48.52" y="1983.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="1139.9" y="1973" width="0.2" height="15.0" fill="rgb(224,68,38)" rx="2" ry="2" />
<text  x="1142.91" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.4" y="1301" width="0.2" height="15.0" fill="rgb(226,0,29)" rx="2" ry="2" />
<text  x="124.35" y="1311.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1018.6" y="1749" width="0.2" height="15.0" fill="rgb(235,81,29)" rx="2" ry="2" />
<text  x="1021.58" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="617.5" y="1973" width="0.4" height="15.0" fill="rgb(230,116,36)" rx="2" ry="2" />
<text  x="620.46" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (26 samples, 0.44%)</title><rect x="952.3" y="2037" width="5.2" height="15.0" fill="rgb(223,52,49)" rx="2" ry="2" />
<text  x="955.32" y="2047.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="984.1" y="1957" width="1.7" height="15.0" fill="rgb(210,110,45)" rx="2" ry="2" />
<text  x="987.05" y="1967.5" ></text>
</g>
<g >
<title>do_futex (15 samples, 0.25%)</title><rect x="12.6" y="1989" width="3.0" height="15.0" fill="rgb(207,172,19)" rx="2" ry="2" />
<text  x="15.59" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="951.3" y="1973" width="0.2" height="15.0" fill="rgb(219,106,10)" rx="2" ry="2" />
<text  x="954.33" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="85.0" y="1925" width="0.2" height="15.0" fill="rgb(227,92,41)" rx="2" ry="2" />
<text  x="88.03" y="1935.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="958.3" y="1941" width="0.2" height="15.0" fill="rgb(235,186,50)" rx="2" ry="2" />
<text  x="961.31" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (19 samples, 0.32%)</title><rect x="979.5" y="1989" width="3.8" height="15.0" fill="rgb(207,185,33)" rx="2" ry="2" />
<text  x="982.46" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="316.7" y="1509" width="0.2" height="15.0" fill="rgb(215,208,52)" rx="2" ry="2" />
<text  x="319.72" y="1519.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="311.3" y="1717" width="0.2" height="15.0" fill="rgb(205,31,41)" rx="2" ry="2" />
<text  x="314.34" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="861.5" y="1973" width="1.0" height="15.0" fill="rgb(246,138,13)" rx="2" ry="2" />
<text  x="864.52" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="951.9" y="1989" width="0.2" height="15.0" fill="rgb(246,133,41)" rx="2" ry="2" />
<text  x="954.92" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1133.9" y="1941" width="0.2" height="15.0" fill="rgb(214,45,14)" rx="2" ry="2" />
<text  x="1136.92" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1133.9" y="1973" width="0.2" height="15.0" fill="rgb(229,194,40)" rx="2" ry="2" />
<text  x="1136.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="969.3" y="1733" width="0.2" height="15.0" fill="rgb(205,208,15)" rx="2" ry="2" />
<text  x="972.29" y="1743.5" ></text>
</g>
<g >
<title>move_addr_to_user (6 samples, 0.10%)</title><rect x="384.2" y="1957" width="1.2" height="15.0" fill="rgb(243,207,16)" rx="2" ry="2" />
<text  x="387.18" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="634.8" y="1909" width="0.2" height="15.0" fill="rgb(214,118,6)" rx="2" ry="2" />
<text  x="637.82" y="1919.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="797.7" y="1525" width="0.2" height="15.0" fill="rgb(220,216,19)" rx="2" ry="2" />
<text  x="800.66" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="613.3" y="1989" width="0.4" height="15.0" fill="rgb(224,116,34)" rx="2" ry="2" />
<text  x="616.27" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="905.2" y="1909" width="0.2" height="15.0" fill="rgb(209,70,44)" rx="2" ry="2" />
<text  x="908.23" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="985.7" y="1893" width="0.1" height="15.0" fill="rgb(234,136,47)" rx="2" ry="2" />
<text  x="988.65" y="1903.5" ></text>
</g>
<g >
<title>__dentry_kill (1 samples, 0.02%)</title><rect x="358.0" y="1893" width="0.2" height="15.0" fill="rgb(220,136,16)" rx="2" ry="2" />
<text  x="361.03" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(222,197,20)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1146.9" y="1925" width="0.8" height="15.0" fill="rgb(243,5,21)" rx="2" ry="2" />
<text  x="1149.89" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="470.6" y="1861" width="0.2" height="15.0" fill="rgb(230,144,0)" rx="2" ry="2" />
<text  x="473.59" y="1871.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="358.0" y="1845" width="0.2" height="15.0" fill="rgb(209,147,3)" rx="2" ry="2" />
<text  x="361.03" y="1855.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="1090.8" y="1813" width="0.2" height="15.0" fill="rgb(217,118,50)" rx="2" ry="2" />
<text  x="1093.82" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1080.6" y="1669" width="0.2" height="15.0" fill="rgb(242,2,18)" rx="2" ry="2" />
<text  x="1083.64" y="1679.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (22 samples, 0.37%)</title><rect x="993.8" y="2037" width="4.4" height="15.0" fill="rgb(243,101,43)" rx="2" ry="2" />
<text  x="996.83" y="2047.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="844.4" y="1589" width="0.2" height="15.0" fill="rgb(224,70,35)" rx="2" ry="2" />
<text  x="847.36" y="1599.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="224.3" y="1861" width="0.2" height="15.0" fill="rgb(212,190,31)" rx="2" ry="2" />
<text  x="227.33" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="914.2" y="1893" width="0.2" height="15.0" fill="rgb(214,170,47)" rx="2" ry="2" />
<text  x="917.21" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="150.1" y="1877" width="0.8" height="15.0" fill="rgb(214,215,25)" rx="2" ry="2" />
<text  x="153.09" y="1887.5" ></text>
</g>
<g >
<title>iov_iter_advance (4 samples, 0.07%)</title><rect x="264.6" y="1861" width="0.8" height="15.0" fill="rgb(217,72,4)" rx="2" ry="2" />
<text  x="267.64" y="1871.5" ></text>
</g>
<g >
<title>release_sock (22 samples, 0.37%)</title><rect x="1086.4" y="1925" width="4.4" height="15.0" fill="rgb(254,77,30)" rx="2" ry="2" />
<text  x="1089.43" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="1147.7" y="2053" width="0.4" height="15.0" fill="rgb(214,196,39)" rx="2" ry="2" />
<text  x="1150.69" y="2063.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="202.6" y="2021" width="2.4" height="15.0" fill="rgb(233,170,48)" rx="2" ry="2" />
<text  x="205.58" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="379.2" y="1909" width="0.4" height="15.0" fill="rgb(209,201,15)" rx="2" ry="2" />
<text  x="382.19" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.4" y="229" width="15.4" height="15.0" fill="rgb(254,168,25)" rx="2" ry="2" />
<text  x="108.39" y="239.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (16 samples, 0.27%)</title><rect x="1137.9" y="2053" width="3.2" height="15.0" fill="rgb(208,213,44)" rx="2" ry="2" />
<text  x="1140.91" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="709.9" y="1941" width="0.2" height="15.0" fill="rgb(243,131,35)" rx="2" ry="2" />
<text  x="712.86" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::size (1 samples, 0.02%)</title><rect x="28.4" y="1957" width="0.2" height="15.0" fill="rgb(226,96,19)" rx="2" ry="2" />
<text  x="31.36" y="1967.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="597.7" y="1813" width="0.2" height="15.0" fill="rgb(229,195,34)" rx="2" ry="2" />
<text  x="600.71" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17 samples, 0.29%)</title><rect x="392.0" y="1893" width="3.4" height="15.0" fill="rgb(235,97,49)" rx="2" ry="2" />
<text  x="394.96" y="1903.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="1145.5" y="1941" width="0.2" height="15.0" fill="rgb(209,119,46)" rx="2" ry="2" />
<text  x="1148.50" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (1 samples, 0.02%)</title><rect x="187.8" y="2021" width="0.2" height="15.0" fill="rgb(247,68,33)" rx="2" ry="2" />
<text  x="190.81" y="2031.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (4 samples, 0.07%)</title><rect x="738.2" y="1701" width="0.8" height="15.0" fill="rgb(236,168,28)" rx="2" ry="2" />
<text  x="741.20" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="141.7" y="1925" width="0.2" height="15.0" fill="rgb(225,91,44)" rx="2" ry="2" />
<text  x="144.71" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getNumToSend (1 samples, 0.02%)</title><rect x="509.5" y="2037" width="0.2" height="15.0" fill="rgb(220,75,2)" rx="2" ry="2" />
<text  x="512.50" y="2047.5" ></text>
</g>
<g >
<title>dentry_free (4 samples, 0.07%)</title><rect x="726.6" y="1749" width="0.8" height="15.0" fill="rgb(212,74,3)" rx="2" ry="2" />
<text  x="729.62" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="695.5" y="1813" width="0.6" height="15.0" fill="rgb(212,224,13)" rx="2" ry="2" />
<text  x="698.49" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="968.3" y="2021" width="1.2" height="15.0" fill="rgb(243,129,26)" rx="2" ry="2" />
<text  x="971.29" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1018.6" y="1941" width="0.2" height="15.0" fill="rgb(207,121,30)" rx="2" ry="2" />
<text  x="1021.58" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(218,76,19)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="253.1" y="1861" width="0.2" height="15.0" fill="rgb(216,82,9)" rx="2" ry="2" />
<text  x="256.06" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="727.2" y="1701" width="0.2" height="15.0" fill="rgb(241,76,24)" rx="2" ry="2" />
<text  x="730.22" y="1711.5" ></text>
</g>
<g >
<title>sys_close (1 samples, 0.02%)</title><rect x="833.2" y="1877" width="0.2" height="15.0" fill="rgb(216,147,39)" rx="2" ry="2" />
<text  x="836.19" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="607.9" y="1829" width="0.2" height="15.0" fill="rgb(226,145,15)" rx="2" ry="2" />
<text  x="610.88" y="1839.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (4 samples, 0.07%)</title><rect x="1133.1" y="2053" width="0.8" height="15.0" fill="rgb(247,133,9)" rx="2" ry="2" />
<text  x="1136.13" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="635.8" y="1909" width="0.4" height="15.0" fill="rgb(251,32,49)" rx="2" ry="2" />
<text  x="638.82" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1067.9" y="1733" width="0.2" height="15.0" fill="rgb(234,228,45)" rx="2" ry="2" />
<text  x="1070.87" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="851.3" y="1941" width="0.2" height="15.0" fill="rgb(227,142,48)" rx="2" ry="2" />
<text  x="854.35" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="842.6" y="1877" width="0.4" height="15.0" fill="rgb(229,187,11)" rx="2" ry="2" />
<text  x="845.57" y="1887.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="695.5" y="1685" width="0.2" height="15.0" fill="rgb(209,46,8)" rx="2" ry="2" />
<text  x="698.49" y="1695.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="193.0" y="1989" width="0.2" height="15.0" fill="rgb(209,169,38)" rx="2" ry="2" />
<text  x="196.00" y="1999.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (32 samples, 0.54%)</title><rect x="1108.6" y="1749" width="6.4" height="15.0" fill="rgb(252,203,17)" rx="2" ry="2" />
<text  x="1111.58" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1088.6" y="1717" width="0.2" height="15.0" fill="rgb(209,146,11)" rx="2" ry="2" />
<text  x="1091.62" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (244 samples, 4.13%)</title><rect x="530.3" y="2037" width="48.6" height="15.0" fill="rgb(239,229,28)" rx="2" ry="2" />
<text  x="533.25" y="2047.5" >face..</text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1114.4" y="1493" width="0.2" height="15.0" fill="rgb(243,116,0)" rx="2" ry="2" />
<text  x="1117.37" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="133.5" y="1925" width="0.2" height="15.0" fill="rgb(234,164,32)" rx="2" ry="2" />
<text  x="136.53" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1067.5" y="1749" width="0.2" height="15.0" fill="rgb(244,52,22)" rx="2" ry="2" />
<text  x="1070.47" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="893.3" y="2005" width="0.4" height="15.0" fill="rgb(242,89,50)" rx="2" ry="2" />
<text  x="896.25" y="2015.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="76.5" y="1957" width="0.6" height="15.0" fill="rgb(239,26,32)" rx="2" ry="2" />
<text  x="79.45" y="1967.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1180.6" y="2021" width="0.2" height="15.0" fill="rgb(236,81,29)" rx="2" ry="2" />
<text  x="1183.62" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="117.4" y="53" width="0.2" height="15.0" fill="rgb(226,193,45)" rx="2" ry="2" />
<text  x="120.36" y="63.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="596.7" y="1861" width="0.8" height="15.0" fill="rgb(211,179,37)" rx="2" ry="2" />
<text  x="599.71" y="1871.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="932.2" y="1941" width="0.4" height="15.0" fill="rgb(219,4,50)" rx="2" ry="2" />
<text  x="935.17" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="914.8" y="1989" width="0.2" height="15.0" fill="rgb(238,96,41)" rx="2" ry="2" />
<text  x="917.81" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="993.0" y="1877" width="0.8" height="15.0" fill="rgb(236,29,15)" rx="2" ry="2" />
<text  x="996.03" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="897.4" y="2005" width="0.2" height="15.0" fill="rgb(213,101,25)" rx="2" ry="2" />
<text  x="900.44" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="373.4" y="1637" width="0.2" height="15.0" fill="rgb(221,48,36)" rx="2" ry="2" />
<text  x="376.40" y="1647.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="27.6" y="1909" width="0.8" height="15.0" fill="rgb(248,57,23)" rx="2" ry="2" />
<text  x="30.56" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="273.4" y="1813" width="0.2" height="15.0" fill="rgb(207,172,49)" rx="2" ry="2" />
<text  x="276.42" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (18 samples, 0.30%)</title><rect x="397.7" y="1909" width="3.6" height="15.0" fill="rgb(247,118,53)" rx="2" ry="2" />
<text  x="400.75" y="1919.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="11.6" y="1861" width="0.8" height="15.0" fill="rgb(240,166,29)" rx="2" ry="2" />
<text  x="14.60" y="1871.5" ></text>
</g>
<g >
<title>tcp_recvmsg (3 samples, 0.05%)</title><rect x="1122.3" y="1957" width="0.6" height="15.0" fill="rgb(244,43,44)" rx="2" ry="2" />
<text  x="1125.35" y="1967.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(213,23,0)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="246.7" y="1829" width="0.2" height="15.0" fill="rgb(239,120,7)" rx="2" ry="2" />
<text  x="249.68" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="316.3" y="1685" width="0.2" height="15.0" fill="rgb(234,187,7)" rx="2" ry="2" />
<text  x="319.33" y="1695.5" ></text>
</g>
<g >
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="327.9" y="1861" width="0.8" height="15.0" fill="rgb(252,128,24)" rx="2" ry="2" />
<text  x="330.90" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="867.3" y="1973" width="0.2" height="15.0" fill="rgb(218,190,44)" rx="2" ry="2" />
<text  x="870.31" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (15 samples, 0.25%)</title><rect x="986.0" y="1989" width="3.0" height="15.0" fill="rgb(211,75,25)" rx="2" ry="2" />
<text  x="989.05" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (6 samples, 0.10%)</title><rect x="877.9" y="1941" width="1.2" height="15.0" fill="rgb(252,82,31)" rx="2" ry="2" />
<text  x="880.89" y="1951.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="324.5" y="1717" width="0.2" height="15.0" fill="rgb(245,33,38)" rx="2" ry="2" />
<text  x="327.51" y="1727.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="568.8" y="1653" width="0.2" height="15.0" fill="rgb(210,156,44)" rx="2" ry="2" />
<text  x="571.77" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="527.9" y="2021" width="0.2" height="15.0" fill="rgb(220,113,46)" rx="2" ry="2" />
<text  x="530.86" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="63.9" y="1797" width="0.2" height="15.0" fill="rgb(205,100,36)" rx="2" ry="2" />
<text  x="66.88" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="833.0" y="1877" width="0.2" height="15.0" fill="rgb(218,214,15)" rx="2" ry="2" />
<text  x="835.99" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (30 samples, 0.51%)</title><rect x="1109.0" y="1685" width="6.0" height="15.0" fill="rgb(246,12,49)" rx="2" ry="2" />
<text  x="1111.98" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="246.7" y="1893" width="0.2" height="15.0" fill="rgb(247,221,36)" rx="2" ry="2" />
<text  x="249.68" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.4" y="1733" width="0.2" height="15.0" fill="rgb(252,75,48)" rx="2" ry="2" />
<text  x="107.39" y="1743.5" ></text>
</g>
<g >
<title>ip_finish_output (126 samples, 2.13%)</title><rect x="775.3" y="1621" width="25.2" height="15.0" fill="rgb(244,42,8)" rx="2" ry="2" />
<text  x="778.31" y="1631.5" >i..</text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (50 samples, 0.85%)</title><rect x="998.4" y="2037" width="10.0" height="15.0" fill="rgb(239,96,19)" rx="2" ry="2" />
<text  x="1001.42" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (3 samples, 0.05%)</title><rect x="51.7" y="1877" width="0.6" height="15.0" fill="rgb(254,223,26)" rx="2" ry="2" />
<text  x="54.71" y="1887.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="1171.0" y="2037" width="0.2" height="15.0" fill="rgb(253,105,50)" rx="2" ry="2" />
<text  x="1174.04" y="2047.5" ></text>
</g>
<g >
<title>lock_sock_nested (14 samples, 0.24%)</title><rect x="1083.6" y="1925" width="2.8" height="15.0" fill="rgb(249,175,10)" rx="2" ry="2" />
<text  x="1086.63" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (47 samples, 0.79%)</title><rect x="603.5" y="1973" width="9.4" height="15.0" fill="rgb(252,130,19)" rx="2" ry="2" />
<text  x="606.49" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (11 samples, 0.19%)</title><rect x="288.4" y="1573" width="2.2" height="15.0" fill="rgb(207,159,29)" rx="2" ry="2" />
<text  x="291.39" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2 samples, 0.03%)</title><rect x="613.3" y="2005" width="0.4" height="15.0" fill="rgb(244,145,51)" rx="2" ry="2" />
<text  x="616.27" y="2015.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (2 samples, 0.03%)</title><rect x="732.4" y="1653" width="0.4" height="15.0" fill="rgb(251,18,27)" rx="2" ry="2" />
<text  x="735.41" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1179.8" y="2053" width="0.2" height="15.0" fill="rgb(244,184,15)" rx="2" ry="2" />
<text  x="1182.82" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (4 samples, 0.07%)</title><rect x="875.5" y="1941" width="0.8" height="15.0" fill="rgb(215,161,5)" rx="2" ry="2" />
<text  x="878.49" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="159.7" y="2005" width="0.4" height="15.0" fill="rgb(221,104,22)" rx="2" ry="2" />
<text  x="162.67" y="2015.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="290.4" y="1461" width="0.2" height="15.0" fill="rgb(249,87,33)" rx="2" ry="2" />
<text  x="293.38" y="1471.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (1 samples, 0.02%)</title><rect x="521.1" y="1925" width="0.2" height="15.0" fill="rgb(239,131,13)" rx="2" ry="2" />
<text  x="524.07" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="79.4" y="1957" width="0.2" height="15.0" fill="rgb(251,112,31)" rx="2" ry="2" />
<text  x="82.45" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="91.0" y="1669" width="0.2" height="15.0" fill="rgb(242,102,0)" rx="2" ry="2" />
<text  x="94.02" y="1679.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="501.9" y="1605" width="0.2" height="15.0" fill="rgb(248,78,27)" rx="2" ry="2" />
<text  x="504.92" y="1615.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (18 samples, 0.30%)</title><rect x="811.8" y="1669" width="3.6" height="15.0" fill="rgb(238,210,50)" rx="2" ry="2" />
<text  x="814.83" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="998.0" y="2005" width="0.2" height="15.0" fill="rgb(233,158,4)" rx="2" ry="2" />
<text  x="1001.02" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="1173.4" y="1941" width="0.2" height="15.0" fill="rgb(208,167,42)" rx="2" ry="2" />
<text  x="1176.44" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output (134 samples, 2.27%)</title><rect x="284.2" y="1765" width="26.7" height="15.0" fill="rgb(216,154,18)" rx="2" ry="2" />
<text  x="287.20" y="1775.5" >i..</text>
</g>
<g >
<title>mod_timer (2 samples, 0.03%)</title><rect x="325.3" y="1797" width="0.4" height="15.0" fill="rgb(214,186,45)" rx="2" ry="2" />
<text  x="328.31" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="35.3" y="2005" width="0.2" height="15.0" fill="rgb(245,116,49)" rx="2" ry="2" />
<text  x="38.34" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="481.0" y="1877" width="0.4" height="15.0" fill="rgb(217,160,47)" rx="2" ry="2" />
<text  x="483.96" y="1887.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="894.1" y="2005" width="0.4" height="15.0" fill="rgb(244,94,47)" rx="2" ry="2" />
<text  x="897.05" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="184.6" y="1941" width="0.4" height="15.0" fill="rgb(253,215,2)" rx="2" ry="2" />
<text  x="187.62" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (25 samples, 0.42%)</title><rect x="1063.1" y="1909" width="5.0" height="15.0" fill="rgb(238,183,20)" rx="2" ry="2" />
<text  x="1066.08" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="529.1" y="1861" width="0.2" height="15.0" fill="rgb(244,116,15)" rx="2" ry="2" />
<text  x="532.06" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="566.0" y="1781" width="0.2" height="15.0" fill="rgb(207,10,30)" rx="2" ry="2" />
<text  x="568.97" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="91.0" y="1893" width="0.2" height="15.0" fill="rgb(228,76,49)" rx="2" ry="2" />
<text  x="94.02" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="121.2" y="133" width="0.2" height="15.0" fill="rgb(232,93,10)" rx="2" ry="2" />
<text  x="124.16" y="143.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1122.1" y="1893" width="0.2" height="15.0" fill="rgb(225,187,48)" rx="2" ry="2" />
<text  x="1125.15" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1067.9" y="1845" width="0.2" height="15.0" fill="rgb(236,128,29)" rx="2" ry="2" />
<text  x="1070.87" y="1855.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="844.4" y="1461" width="0.2" height="15.0" fill="rgb(215,46,31)" rx="2" ry="2" />
<text  x="847.36" y="1471.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="53.9" y="1925" width="0.2" height="15.0" fill="rgb(220,145,1)" rx="2" ry="2" />
<text  x="56.90" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="321.3" y="1477" width="0.2" height="15.0" fill="rgb(243,186,35)" rx="2" ry="2" />
<text  x="324.31" y="1487.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1083.2" y="1749" width="0.2" height="15.0" fill="rgb(231,135,10)" rx="2" ry="2" />
<text  x="1086.24" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (29 samples, 0.49%)</title><rect x="1109.2" y="1621" width="5.8" height="15.0" fill="rgb(252,143,54)" rx="2" ry="2" />
<text  x="1112.18" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (11 samples, 0.19%)</title><rect x="902.0" y="1989" width="2.2" height="15.0" fill="rgb(243,83,10)" rx="2" ry="2" />
<text  x="905.03" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="695.5" y="1861" width="0.6" height="15.0" fill="rgb(247,47,54)" rx="2" ry="2" />
<text  x="698.49" y="1871.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="32.6" y="1637" width="0.1" height="15.0" fill="rgb(238,39,51)" rx="2" ry="2" />
<text  x="35.55" y="1647.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.03%)</title><rect x="401.7" y="1909" width="0.4" height="15.0" fill="rgb(252,55,28)" rx="2" ry="2" />
<text  x="404.74" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (103 samples, 1.74%)</title><rect x="487.9" y="2021" width="20.6" height="15.0" fill="rgb(239,38,25)" rx="2" ry="2" />
<text  x="490.95" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="489.7" y="1941" width="0.4" height="15.0" fill="rgb(240,121,41)" rx="2" ry="2" />
<text  x="492.74" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="741" width="16.0" height="15.0" fill="rgb(210,144,19)" rx="2" ry="2" />
<text  x="108.39" y="751.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="984.5" y="1925" width="1.3" height="15.0" fill="rgb(225,14,16)" rx="2" ry="2" />
<text  x="987.45" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (27 samples, 0.46%)</title><rect x="922.4" y="1941" width="5.4" height="15.0" fill="rgb(225,81,23)" rx="2" ry="2" />
<text  x="925.39" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (2 samples, 0.03%)</title><rect x="578.1" y="2021" width="0.4" height="15.0" fill="rgb(218,196,13)" rx="2" ry="2" />
<text  x="581.15" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 1.05%)</title><rect x="659.8" y="1909" width="12.3" height="15.0" fill="rgb(210,158,51)" rx="2" ry="2" />
<text  x="662.77" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (22 samples, 0.37%)</title><rect x="536.4" y="2005" width="4.4" height="15.0" fill="rgb(214,58,47)" rx="2" ry="2" />
<text  x="539.44" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="11.6" y="1925" width="0.8" height="15.0" fill="rgb(215,182,31)" rx="2" ry="2" />
<text  x="14.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.2" y="1669" width="0.2" height="15.0" fill="rgb(219,108,31)" rx="2" ry="2" />
<text  x="844.17" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="535.4" y="1941" width="0.2" height="15.0" fill="rgb(207,120,23)" rx="2" ry="2" />
<text  x="538.44" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="999.4" y="1877" width="0.2" height="15.0" fill="rgb(253,122,21)" rx="2" ry="2" />
<text  x="1002.42" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1088.6" y="1781" width="0.2" height="15.0" fill="rgb(237,176,5)" rx="2" ry="2" />
<text  x="1091.62" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (28 samples, 0.47%)</title><rect x="1109.4" y="1573" width="5.6" height="15.0" fill="rgb(219,157,14)" rx="2" ry="2" />
<text  x="1112.38" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="516.9" y="1973" width="0.2" height="15.0" fill="rgb(217,118,24)" rx="2" ry="2" />
<text  x="519.88" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="741.6" y="1765" width="0.2" height="15.0" fill="rgb(248,127,44)" rx="2" ry="2" />
<text  x="744.59" y="1775.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="1179.6" y="2005" width="0.2" height="15.0" fill="rgb(243,58,28)" rx="2" ry="2" />
<text  x="1182.62" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="900.4" y="1781" width="0.2" height="15.0" fill="rgb(238,201,4)" rx="2" ry="2" />
<text  x="903.44" y="1791.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (14 samples, 0.24%)</title><rect x="952.3" y="1957" width="2.8" height="15.0" fill="rgb(213,133,14)" rx="2" ry="2" />
<text  x="955.32" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="844.4" y="1605" width="0.2" height="15.0" fill="rgb(251,56,10)" rx="2" ry="2" />
<text  x="847.36" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="637.0" y="1925" width="0.2" height="15.0" fill="rgb(239,55,40)" rx="2" ry="2" />
<text  x="640.02" y="1935.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="1144.9" y="1973" width="0.2" height="15.0" fill="rgb(251,36,36)" rx="2" ry="2" />
<text  x="1147.90" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="951.1" y="1909" width="0.2" height="15.0" fill="rgb(206,77,31)" rx="2" ry="2" />
<text  x="954.13" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (11 samples, 0.19%)</title><rect x="45.9" y="1957" width="2.2" height="15.0" fill="rgb(214,27,23)" rx="2" ry="2" />
<text  x="48.92" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::Range (1 samples, 0.02%)</title><rect x="964.3" y="2005" width="0.2" height="15.0" fill="rgb(252,100,8)" rx="2" ry="2" />
<text  x="967.30" y="2015.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="194.8" y="2021" width="0.2" height="15.0" fill="rgb(239,207,11)" rx="2" ry="2" />
<text  x="197.79" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="571.2" y="1989" width="0.8" height="15.0" fill="rgb(212,44,29)" rx="2" ry="2" />
<text  x="574.16" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="577.3" y="1941" width="0.2" height="15.0" fill="rgb(249,42,23)" rx="2" ry="2" />
<text  x="580.35" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1445" width="17.2" height="15.0" fill="rgb(224,112,41)" rx="2" ry="2" />
<text  x="107.99" y="1455.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (4 samples, 0.07%)</title><rect x="867.3" y="1989" width="0.8" height="15.0" fill="rgb(220,172,0)" rx="2" ry="2" />
<text  x="870.31" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1028.8" y="2053" width="0.4" height="15.0" fill="rgb(213,24,36)" rx="2" ry="2" />
<text  x="1031.76" y="2063.5" ></text>
</g>
<g >
<title>ip_output (127 samples, 2.15%)</title><rect x="775.1" y="1637" width="25.4" height="15.0" fill="rgb(208,163,54)" rx="2" ry="2" />
<text  x="778.11" y="1647.5" >i..</text>
</g>
<g >
<title>folly::SocketAddress::getPort (1 samples, 0.02%)</title><rect x="614.9" y="2021" width="0.2" height="15.0" fill="rgb(221,196,41)" rx="2" ry="2" />
<text  x="617.87" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="338.3" y="1877" width="0.2" height="15.0" fill="rgb(222,47,11)" rx="2" ry="2" />
<text  x="341.28" y="1887.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="522.7" y="1973" width="0.4" height="15.0" fill="rgb(245,48,42)" rx="2" ry="2" />
<text  x="525.67" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1178.0" y="1973" width="0.4" height="15.0" fill="rgb(226,59,27)" rx="2" ry="2" />
<text  x="1181.03" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="514.1" y="1941" width="0.2" height="15.0" fill="rgb(251,156,1)" rx="2" ry="2" />
<text  x="517.09" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="672.3" y="1781" width="0.2" height="15.0" fill="rgb(222,148,1)" rx="2" ry="2" />
<text  x="675.34" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1133.9" y="1957" width="0.2" height="15.0" fill="rgb(206,187,46)" rx="2" ry="2" />
<text  x="1136.92" y="1967.5" ></text>
</g>
<g >
<title>accept4 (332 samples, 5.61%)</title><rect x="346.9" y="2037" width="66.2" height="15.0" fill="rgb(233,70,7)" rx="2" ry="2" />
<text  x="349.86" y="2047.5" >accept4</text>
</g>
<g >
<title>folly::AsyncSocket::destroy (729 samples, 12.33%)</title><rect x="708.7" y="1973" width="145.4" height="15.0" fill="rgb(233,98,3)" rx="2" ry="2" />
<text  x="711.66" y="1983.5" >folly::AsyncSocket..</text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="896.2" y="1973" width="0.2" height="15.0" fill="rgb(252,212,12)" rx="2" ry="2" />
<text  x="899.25" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="78.4" y="1957" width="0.2" height="15.0" fill="rgb(211,80,5)" rx="2" ry="2" />
<text  x="81.45" y="1967.5" ></text>
</g>
<g >
<title>wake_up_bit (3 samples, 0.05%)</title><rect x="740.0" y="1717" width="0.6" height="15.0" fill="rgb(224,218,25)" rx="2" ry="2" />
<text  x="742.99" y="1727.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="672.5" y="1861" width="1.0" height="15.0" fill="rgb(241,24,1)" rx="2" ry="2" />
<text  x="675.54" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="575.6" y="1973" width="0.2" height="15.0" fill="rgb(238,63,7)" rx="2" ry="2" />
<text  x="578.55" y="1983.5" ></text>
</g>
<g >
<title>locks_free_lock_context (2 samples, 0.03%)</title><rect x="733.2" y="1669" width="0.4" height="15.0" fill="rgb(247,140,14)" rx="2" ry="2" />
<text  x="736.21" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="695.5" y="1909" width="0.6" height="15.0" fill="rgb(249,41,48)" rx="2" ry="2" />
<text  x="698.49" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="987.0" y="1893" width="0.2" height="15.0" fill="rgb(239,44,14)" rx="2" ry="2" />
<text  x="990.05" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (2 samples, 0.03%)</title><rect x="701.5" y="2037" width="0.4" height="15.0" fill="rgb(212,147,44)" rx="2" ry="2" />
<text  x="704.48" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1104.4" y="1717" width="0.2" height="15.0" fill="rgb(230,219,4)" rx="2" ry="2" />
<text  x="1107.39" y="1727.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="316.9" y="1765" width="0.2" height="15.0" fill="rgb(206,120,31)" rx="2" ry="2" />
<text  x="319.92" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="58.3" y="1925" width="1.4" height="15.0" fill="rgb(245,210,53)" rx="2" ry="2" />
<text  x="61.29" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (1 samples, 0.02%)</title><rect x="26.0" y="1989" width="0.2" height="15.0" fill="rgb(236,175,19)" rx="2" ry="2" />
<text  x="28.96" y="1999.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="10.4" y="1877" width="0.8" height="15.0" fill="rgb(247,67,51)" rx="2" ry="2" />
<text  x="13.40" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="544.6" y="1909" width="0.4" height="15.0" fill="rgb(252,140,6)" rx="2" ry="2" />
<text  x="547.62" y="1919.5" ></text>
</g>
<g >
<title>security_file_free (1 samples, 0.02%)</title><rect x="829.6" y="1813" width="0.2" height="15.0" fill="rgb(218,133,7)" rx="2" ry="2" />
<text  x="832.59" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="255.5" y="1861" width="0.2" height="15.0" fill="rgb(214,55,14)" rx="2" ry="2" />
<text  x="258.46" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="340.3" y="1845" width="0.2" height="15.0" fill="rgb(211,42,13)" rx="2" ry="2" />
<text  x="343.27" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (34 samples, 0.58%)</title><rect x="301.4" y="1653" width="6.7" height="15.0" fill="rgb(206,204,11)" rx="2" ry="2" />
<text  x="304.36" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.8" y="229" width="0.2" height="15.0" fill="rgb(228,199,21)" rx="2" ry="2" />
<text  x="123.76" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (3 samples, 0.05%)</title><rect x="577.0" y="1973" width="0.5" height="15.0" fill="rgb(241,143,16)" rx="2" ry="2" />
<text  x="579.95" y="1983.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="193.4" y="2021" width="0.8" height="15.0" fill="rgb(233,137,43)" rx="2" ry="2" />
<text  x="196.40" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="622.8" y="2037" width="0.2" height="15.0" fill="rgb(247,127,1)" rx="2" ry="2" />
<text  x="625.85" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="568.8" y="1797" width="0.2" height="15.0" fill="rgb(226,216,23)" rx="2" ry="2" />
<text  x="571.77" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1146.9" y="1893" width="0.8" height="15.0" fill="rgb(236,152,2)" rx="2" ry="2" />
<text  x="1149.89" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="740.6" y="1701" width="0.8" height="15.0" fill="rgb(252,138,23)" rx="2" ry="2" />
<text  x="743.59" y="1711.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="845.0" y="1909" width="0.4" height="15.0" fill="rgb(222,191,19)" rx="2" ry="2" />
<text  x="847.96" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="545.4" y="1973" width="0.2" height="15.0" fill="rgb(237,111,18)" rx="2" ry="2" />
<text  x="548.42" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="1020.8" y="2037" width="0.4" height="15.0" fill="rgb(232,127,47)" rx="2" ry="2" />
<text  x="1023.77" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (2 samples, 0.03%)</title><rect x="658.2" y="1893" width="0.4" height="15.0" fill="rgb(208,123,41)" rx="2" ry="2" />
<text  x="661.17" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (13 samples, 0.22%)</title><rect x="983.3" y="1989" width="2.5" height="15.0" fill="rgb(243,77,53)" rx="2" ry="2" />
<text  x="986.26" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="850.9" y="1893" width="0.2" height="15.0" fill="rgb(231,102,33)" rx="2" ry="2" />
<text  x="853.95" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="481.0" y="1957" width="0.4" height="15.0" fill="rgb(233,199,37)" rx="2" ry="2" />
<text  x="483.96" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="896.4" y="1957" width="0.4" height="15.0" fill="rgb(239,162,35)" rx="2" ry="2" />
<text  x="899.45" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="23.0" y="1701" width="0.2" height="15.0" fill="rgb(232,12,12)" rx="2" ry="2" />
<text  x="25.97" y="1711.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1182.8" y="1957" width="0.2" height="15.0" fill="rgb(210,54,4)" rx="2" ry="2" />
<text  x="1185.82" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (1 samples, 0.02%)</title><rect x="35.9" y="2005" width="0.2" height="15.0" fill="rgb(214,52,52)" rx="2" ry="2" />
<text  x="38.94" y="2015.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1184.2" y="2005" width="0.2" height="15.0" fill="rgb(220,73,19)" rx="2" ry="2" />
<text  x="1187.21" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="651.2" y="2021" width="0.2" height="15.0" fill="rgb(213,88,24)" rx="2" ry="2" />
<text  x="654.19" y="2031.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="289.6" y="1493" width="0.6" height="15.0" fill="rgb(239,133,12)" rx="2" ry="2" />
<text  x="292.58" y="1503.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="544.2" y="1861" width="0.2" height="15.0" fill="rgb(214,83,23)" rx="2" ry="2" />
<text  x="547.22" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="1021.4" y="2005" width="0.8" height="15.0" fill="rgb(212,144,17)" rx="2" ry="2" />
<text  x="1024.37" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="452.0" y="1877" width="0.2" height="15.0" fill="rgb(217,67,7)" rx="2" ry="2" />
<text  x="455.03" y="1887.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="310.5" y="1669" width="0.2" height="15.0" fill="rgb(231,10,10)" rx="2" ry="2" />
<text  x="313.54" y="1679.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1178.2" y="1925" width="0.2" height="15.0" fill="rgb(205,106,9)" rx="2" ry="2" />
<text  x="1181.23" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="136.9" y="1909" width="0.4" height="15.0" fill="rgb(226,209,39)" rx="2" ry="2" />
<text  x="139.92" y="1919.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1067.1" y="1797" width="0.2" height="15.0" fill="rgb(237,55,28)" rx="2" ry="2" />
<text  x="1070.07" y="1807.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1177.2" y="1989" width="0.2" height="15.0" fill="rgb(225,223,8)" rx="2" ry="2" />
<text  x="1180.23" y="1999.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="193.0" y="2005" width="0.2" height="15.0" fill="rgb(233,208,0)" rx="2" ry="2" />
<text  x="196.00" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="23.0" y="1845" width="0.2" height="15.0" fill="rgb(242,69,41)" rx="2" ry="2" />
<text  x="25.97" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="53.9" y="1749" width="0.2" height="15.0" fill="rgb(205,5,5)" rx="2" ry="2" />
<text  x="56.90" y="1759.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="180.8" y="1957" width="0.4" height="15.0" fill="rgb(247,169,19)" rx="2" ry="2" />
<text  x="183.82" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (7 samples, 0.12%)</title><rect x="643.0" y="1989" width="1.4" height="15.0" fill="rgb(209,47,45)" rx="2" ry="2" />
<text  x="646.01" y="1999.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1115.4" y="1733" width="0.2" height="15.0" fill="rgb(216,31,37)" rx="2" ry="2" />
<text  x="1118.36" y="1743.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="120.6" y="101" width="0.2" height="15.0" fill="rgb(231,69,3)" rx="2" ry="2" />
<text  x="123.56" y="111.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="574.6" y="1973" width="0.6" height="15.0" fill="rgb(245,194,25)" rx="2" ry="2" />
<text  x="577.56" y="1983.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="255.7" y="1893" width="0.2" height="15.0" fill="rgb(254,210,48)" rx="2" ry="2" />
<text  x="258.66" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (1 samples, 0.02%)</title><rect x="853.7" y="1957" width="0.2" height="15.0" fill="rgb(236,202,13)" rx="2" ry="2" />
<text  x="856.74" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (8 samples, 0.14%)</title><rect x="534.8" y="2005" width="1.6" height="15.0" fill="rgb(247,134,0)" rx="2" ry="2" />
<text  x="537.84" y="2015.5" ></text>
</g>
<g >
<title>__GI___getsockname (12 samples, 0.20%)</title><rect x="202.6" y="2037" width="2.4" height="15.0" fill="rgb(213,35,50)" rx="2" ry="2" />
<text  x="205.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="104.2" y="1861" width="20.1" height="15.0" fill="rgb(218,36,24)" rx="2" ry="2" />
<text  x="107.19" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="941.1" y="1989" width="0.2" height="15.0" fill="rgb(244,121,11)" rx="2" ry="2" />
<text  x="944.15" y="1999.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="891.7" y="1941" width="0.2" height="15.0" fill="rgb(244,141,38)" rx="2" ry="2" />
<text  x="894.66" y="1951.5" ></text>
</g>
<g >
<title>tcp_setsockopt (26 samples, 0.44%)</title><rect x="688.5" y="1909" width="5.2" height="15.0" fill="rgb(254,205,39)" rx="2" ry="2" />
<text  x="691.50" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="999.4" y="2005" width="0.2" height="15.0" fill="rgb(227,73,45)" rx="2" ry="2" />
<text  x="1002.42" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (12 samples, 0.20%)</title><rect x="70.7" y="1941" width="2.4" height="15.0" fill="rgb(233,219,12)" rx="2" ry="2" />
<text  x="73.67" y="1951.5" ></text>
</g>
<g >
<title>__fdget (19 samples, 0.32%)</title><rect x="446.6" y="1973" width="3.8" height="15.0" fill="rgb(250,22,49)" rx="2" ry="2" />
<text  x="449.64" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="615.5" y="2021" width="0.4" height="15.0" fill="rgb(224,202,24)" rx="2" ry="2" />
<text  x="618.47" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.4" y="213" width="15.4" height="15.0" fill="rgb(207,175,1)" rx="2" ry="2" />
<text  x="108.39" y="223.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="525.3" y="1957" width="0.2" height="15.0" fill="rgb(222,148,46)" rx="2" ry="2" />
<text  x="528.26" y="1967.5" ></text>
</g>
<g >
<title>security_sock_graft (2 samples, 0.03%)</title><rect x="383.0" y="1941" width="0.4" height="15.0" fill="rgb(226,118,18)" rx="2" ry="2" />
<text  x="385.98" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="452.0" y="1701" width="0.2" height="15.0" fill="rgb(234,21,42)" rx="2" ry="2" />
<text  x="455.03" y="1711.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="777.5" y="1285" width="0.2" height="15.0" fill="rgb(245,123,43)" rx="2" ry="2" />
<text  x="780.51" y="1295.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="462.0" y="1717" width="0.2" height="15.0" fill="rgb(225,52,14)" rx="2" ry="2" />
<text  x="465.00" y="1727.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="460.4" y="1909" width="0.2" height="15.0" fill="rgb(214,107,16)" rx="2" ry="2" />
<text  x="463.41" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1108.6" y="1637" width="0.4" height="15.0" fill="rgb(217,218,47)" rx="2" ry="2" />
<text  x="1111.58" y="1647.5" ></text>
</g>
<g >
<title>skb_free_head (18 samples, 0.30%)</title><rect x="1071.7" y="1877" width="3.6" height="15.0" fill="rgb(226,185,48)" rx="2" ry="2" />
<text  x="1074.66" y="1887.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (2 samples, 0.03%)</title><rect x="924.4" y="1893" width="0.4" height="15.0" fill="rgb(251,141,14)" rx="2" ry="2" />
<text  x="927.39" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="175.2" y="2005" width="0.2" height="15.0" fill="rgb(230,69,11)" rx="2" ry="2" />
<text  x="178.24" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="582.1" y="1941" width="2.8" height="15.0" fill="rgb(211,202,38)" rx="2" ry="2" />
<text  x="585.14" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1083.2" y="1877" width="0.2" height="15.0" fill="rgb(251,77,36)" rx="2" ry="2" />
<text  x="1086.24" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="933" width="16.0" height="15.0" fill="rgb(232,184,50)" rx="2" ry="2" />
<text  x="108.39" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="702.3" y="1941" width="0.2" height="15.0" fill="rgb(210,147,38)" rx="2" ry="2" />
<text  x="705.27" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="602.3" y="1749" width="0.2" height="15.0" fill="rgb(212,91,22)" rx="2" ry="2" />
<text  x="605.29" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="111.8" y="37" width="0.2" height="15.0" fill="rgb(223,115,47)" rx="2" ry="2" />
<text  x="114.78" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="459.8" y="1749" width="0.4" height="15.0" fill="rgb(232,158,54)" rx="2" ry="2" />
<text  x="462.81" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (86 samples, 1.45%)</title><rect x="916.2" y="2005" width="17.2" height="15.0" fill="rgb(215,17,0)" rx="2" ry="2" />
<text  x="919.20" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1018.6" y="1845" width="0.2" height="15.0" fill="rgb(249,176,49)" rx="2" ry="2" />
<text  x="1021.58" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="23.0" y="1717" width="0.2" height="15.0" fill="rgb(223,39,43)" rx="2" ry="2" />
<text  x="25.97" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (1 samples, 0.02%)</title><rect x="170.6" y="2021" width="0.2" height="15.0" fill="rgb(209,3,19)" rx="2" ry="2" />
<text  x="173.65" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="842.0" y="1941" width="0.2" height="15.0" fill="rgb(243,153,16)" rx="2" ry="2" />
<text  x="844.97" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="951.1" y="1621" width="0.2" height="15.0" fill="rgb(225,221,32)" rx="2" ry="2" />
<text  x="954.13" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1049.3" y="1829" width="0.2" height="15.0" fill="rgb(226,119,31)" rx="2" ry="2" />
<text  x="1052.31" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="71.5" y="1829" width="0.4" height="15.0" fill="rgb(254,133,12)" rx="2" ry="2" />
<text  x="74.46" y="1839.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (1 samples, 0.02%)</title><rect x="522.5" y="1957" width="0.2" height="15.0" fill="rgb(249,138,15)" rx="2" ry="2" />
<text  x="525.47" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="884.1" y="1861" width="0.2" height="15.0" fill="rgb(233,167,19)" rx="2" ry="2" />
<text  x="887.07" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (4 samples, 0.07%)</title><rect x="862.9" y="1989" width="0.8" height="15.0" fill="rgb(236,153,1)" rx="2" ry="2" />
<text  x="865.92" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="1176.0" y="1989" width="0.6" height="15.0" fill="rgb(213,222,33)" rx="2" ry="2" />
<text  x="1179.03" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="462.0" y="1845" width="0.2" height="15.0" fill="rgb(229,96,24)" rx="2" ry="2" />
<text  x="465.00" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (34 samples, 0.58%)</title><rect x="224.5" y="1909" width="6.8" height="15.0" fill="rgb(230,7,41)" rx="2" ry="2" />
<text  x="227.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="293" width="15.6" height="15.0" fill="rgb(227,228,19)" rx="2" ry="2" />
<text  x="108.39" y="303.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1104.4" y="1653" width="0.2" height="15.0" fill="rgb(247,195,4)" rx="2" ry="2" />
<text  x="1107.39" y="1663.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="117.4" y="69" width="0.2" height="15.0" fill="rgb(205,120,5)" rx="2" ry="2" />
<text  x="120.36" y="79.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (386 samples, 6.53%)</title><rect x="1049.7" y="1989" width="77.0" height="15.0" fill="rgb(217,106,39)" rx="2" ry="2" />
<text  x="1052.71" y="1999.5" >SYSC_rec..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="614.1" y="1989" width="0.4" height="15.0" fill="rgb(221,166,29)" rx="2" ry="2" />
<text  x="617.07" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (2 samples, 0.03%)</title><rect x="957.7" y="2037" width="0.4" height="15.0" fill="rgb(212,77,36)" rx="2" ry="2" />
<text  x="960.71" y="2047.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.08%)</title><rect x="69.5" y="1909" width="1.0" height="15.0" fill="rgb(216,153,16)" rx="2" ry="2" />
<text  x="72.47" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="100.6" y="1973" width="0.2" height="15.0" fill="rgb(234,128,20)" rx="2" ry="2" />
<text  x="103.60" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (9 samples, 0.15%)</title><rect x="175.8" y="1989" width="1.8" height="15.0" fill="rgb(247,216,46)" rx="2" ry="2" />
<text  x="178.83" y="1999.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="694.3" y="1877" width="0.8" height="15.0" fill="rgb(223,84,52)" rx="2" ry="2" />
<text  x="697.29" y="1887.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="401.3" y="1909" width="0.2" height="15.0" fill="rgb(253,86,33)" rx="2" ry="2" />
<text  x="404.34" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="253.1" y="1717" width="0.2" height="15.0" fill="rgb(252,32,48)" rx="2" ry="2" />
<text  x="256.06" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="900.4" y="1797" width="0.2" height="15.0" fill="rgb(242,151,33)" rx="2" ry="2" />
<text  x="903.44" y="1807.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="289.4" y="1461" width="0.2" height="15.0" fill="rgb(223,209,31)" rx="2" ry="2" />
<text  x="292.38" y="1471.5" ></text>
</g>
<g >
<title>std::thread::id::id (3 samples, 0.05%)</title><rect x="92.4" y="1941" width="0.6" height="15.0" fill="rgb(225,224,27)" rx="2" ry="2" />
<text  x="95.42" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="32.6" y="1893" width="0.1" height="15.0" fill="rgb(229,127,42)" rx="2" ry="2" />
<text  x="35.55" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="12.4" y="2021" width="0.2" height="15.0" fill="rgb(247,45,25)" rx="2" ry="2" />
<text  x="15.39" y="2031.5" ></text>
</g>
<g >
<title>inode_has_buffers (1 samples, 0.02%)</title><rect x="732.8" y="1669" width="0.2" height="15.0" fill="rgb(243,28,27)" rx="2" ry="2" />
<text  x="735.81" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (14 samples, 0.24%)</title><rect x="170.8" y="2021" width="2.8" height="15.0" fill="rgb(213,180,2)" rx="2" ry="2" />
<text  x="173.85" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2 samples, 0.03%)</title><rect x="609.7" y="1829" width="0.4" height="15.0" fill="rgb(249,30,44)" rx="2" ry="2" />
<text  x="612.68" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="501.5" y="1893" width="0.8" height="15.0" fill="rgb(207,135,26)" rx="2" ry="2" />
<text  x="504.52" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="382.8" y="1925" width="0.2" height="15.0" fill="rgb(246,124,50)" rx="2" ry="2" />
<text  x="385.78" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="892.1" y="1877" width="0.2" height="15.0" fill="rgb(221,4,41)" rx="2" ry="2" />
<text  x="895.06" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1072.3" y="1605" width="0.2" height="15.0" fill="rgb(207,166,11)" rx="2" ry="2" />
<text  x="1075.26" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1077" width="16.0" height="15.0" fill="rgb(205,42,31)" rx="2" ry="2" />
<text  x="108.39" y="1087.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="229.5" y="1877" width="0.2" height="15.0" fill="rgb(253,217,14)" rx="2" ry="2" />
<text  x="232.52" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="789" width="16.0" height="15.0" fill="rgb(246,175,16)" rx="2" ry="2" />
<text  x="108.39" y="799.5" ></text>
</g>
<g >
<title>accept4 (1 samples, 0.02%)</title><rect x="1167.6" y="2021" width="0.2" height="15.0" fill="rgb(237,206,13)" rx="2" ry="2" />
<text  x="1170.65" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="900.4" y="1893" width="0.2" height="15.0" fill="rgb(252,13,13)" rx="2" ry="2" />
<text  x="903.44" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="64.9" y="1909" width="0.8" height="15.0" fill="rgb(254,153,30)" rx="2" ry="2" />
<text  x="67.88" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="964.7" y="1781" width="0.2" height="15.0" fill="rgb(216,83,26)" rx="2" ry="2" />
<text  x="967.70" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="982.1" y="1893" width="0.2" height="15.0" fill="rgb(239,183,48)" rx="2" ry="2" />
<text  x="985.06" y="1903.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (5 samples, 0.08%)</title><rect x="167.7" y="1973" width="1.0" height="15.0" fill="rgb(237,120,5)" rx="2" ry="2" />
<text  x="170.65" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="521.1" y="1941" width="0.2" height="15.0" fill="rgb(224,183,53)" rx="2" ry="2" />
<text  x="524.07" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.25%)</title><rect x="12.6" y="2037" width="3.0" height="15.0" fill="rgb(232,96,48)" rx="2" ry="2" />
<text  x="15.59" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="23.0" y="1941" width="0.2" height="15.0" fill="rgb(228,105,34)" rx="2" ry="2" />
<text  x="25.97" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (4 samples, 0.07%)</title><rect x="164.3" y="2021" width="0.8" height="15.0" fill="rgb(240,179,45)" rx="2" ry="2" />
<text  x="167.26" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1088.0" y="1781" width="0.2" height="15.0" fill="rgb(254,102,34)" rx="2" ry="2" />
<text  x="1091.02" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="114.2" y="37" width="0.2" height="15.0" fill="rgb(205,24,5)" rx="2" ry="2" />
<text  x="117.17" y="47.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (4 samples, 0.07%)</title><rect x="732.0" y="1669" width="0.8" height="15.0" fill="rgb(221,42,32)" rx="2" ry="2" />
<text  x="735.01" y="1679.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="209.0" y="1893" width="0.8" height="15.0" fill="rgb(214,133,54)" rx="2" ry="2" />
<text  x="211.96" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="900.4" y="1957" width="0.2" height="15.0" fill="rgb(232,36,20)" rx="2" ry="2" />
<text  x="903.44" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="524.9" y="1925" width="0.2" height="15.0" fill="rgb(244,73,19)" rx="2" ry="2" />
<text  x="527.87" y="1935.5" ></text>
</g>
<g >
<title>skb_release_head_state (28 samples, 0.47%)</title><rect x="1075.3" y="1893" width="5.5" height="15.0" fill="rgb(218,103,43)" rx="2" ry="2" />
<text  x="1078.25" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (2 samples, 0.03%)</title><rect x="885.5" y="1941" width="0.4" height="15.0" fill="rgb(228,6,31)" rx="2" ry="2" />
<text  x="888.47" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="152.1" y="1893" width="0.4" height="15.0" fill="rgb(232,182,37)" rx="2" ry="2" />
<text  x="155.09" y="1903.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="1136.3" y="2053" width="0.2" height="15.0" fill="rgb(252,176,12)" rx="2" ry="2" />
<text  x="1139.32" y="2063.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="209.0" y="1989" width="0.8" height="15.0" fill="rgb(244,214,25)" rx="2" ry="2" />
<text  x="211.96" y="1999.5" ></text>
</g>
<g >
<title>tcp_mtup_init (1 samples, 0.02%)</title><rect x="459.8" y="1605" width="0.2" height="15.0" fill="rgb(208,162,9)" rx="2" ry="2" />
<text  x="462.81" y="1615.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="474.0" y="1637" width="0.2" height="15.0" fill="rgb(251,195,6)" rx="2" ry="2" />
<text  x="476.98" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="364.2" y="1941" width="0.2" height="15.0" fill="rgb(254,148,13)" rx="2" ry="2" />
<text  x="367.22" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="91.0" y="1877" width="0.2" height="15.0" fill="rgb(207,115,32)" rx="2" ry="2" />
<text  x="94.02" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1072.3" y="1749" width="0.2" height="15.0" fill="rgb(227,209,47)" rx="2" ry="2" />
<text  x="1075.26" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (47 samples, 0.79%)</title><rect x="221.9" y="1925" width="9.4" height="15.0" fill="rgb(211,38,53)" rx="2" ry="2" />
<text  x="224.93" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (8 samples, 0.14%)</title><rect x="229.7" y="1877" width="1.6" height="15.0" fill="rgb(245,137,8)" rx="2" ry="2" />
<text  x="232.72" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="410.3" y="2021" width="0.4" height="15.0" fill="rgb(210,20,47)" rx="2" ry="2" />
<text  x="413.32" y="2031.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (5 samples, 0.08%)</title><rect x="978.5" y="1989" width="1.0" height="15.0" fill="rgb(208,223,8)" rx="2" ry="2" />
<text  x="981.47" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="321.3" y="1605" width="0.2" height="15.0" fill="rgb(227,58,28)" rx="2" ry="2" />
<text  x="324.31" y="1615.5" ></text>
</g>
<g >
<title>sock_alloc (44 samples, 0.74%)</title><rect x="387.2" y="1957" width="8.7" height="15.0" fill="rgb(228,131,7)" rx="2" ry="2" />
<text  x="390.17" y="1967.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::bitsPerBlock (1 samples, 0.02%)</title><rect x="521.1" y="1909" width="0.2" height="15.0" fill="rgb(211,50,15)" rx="2" ry="2" />
<text  x="524.07" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::close (1 samples, 0.02%)</title><rect x="851.1" y="1941" width="0.2" height="15.0" fill="rgb(205,129,45)" rx="2" ry="2" />
<text  x="854.15" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (11 samples, 0.19%)</title><rect x="308.5" y="1685" width="2.2" height="15.0" fill="rgb(250,189,27)" rx="2" ry="2" />
<text  x="311.54" y="1695.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="69.7" y="1861" width="0.4" height="15.0" fill="rgb(227,198,11)" rx="2" ry="2" />
<text  x="72.67" y="1871.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="914.6" y="1989" width="0.2" height="15.0" fill="rgb(232,39,50)" rx="2" ry="2" />
<text  x="917.61" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="63.7" y="1861" width="0.2" height="15.0" fill="rgb(230,174,3)" rx="2" ry="2" />
<text  x="66.68" y="1871.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (47 samples, 0.79%)</title><rect x="452.8" y="1973" width="9.4" height="15.0" fill="rgb(218,62,32)" rx="2" ry="2" />
<text  x="455.82" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="904.2" y="1989" width="1.2" height="15.0" fill="rgb(208,163,48)" rx="2" ry="2" />
<text  x="907.23" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (87 samples, 1.47%)</title><rect x="105.0" y="1557" width="17.4" height="15.0" fill="rgb(220,15,41)" rx="2" ry="2" />
<text  x="107.99" y="1567.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="1122.1" y="1605" width="0.2" height="15.0" fill="rgb(236,181,17)" rx="2" ry="2" />
<text  x="1125.15" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="914.2" y="1813" width="0.2" height="15.0" fill="rgb(244,132,20)" rx="2" ry="2" />
<text  x="917.21" y="1823.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="357.6" y="1909" width="0.2" height="15.0" fill="rgb(218,221,44)" rx="2" ry="2" />
<text  x="360.63" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="316.3" y="1765" width="0.2" height="15.0" fill="rgb(243,162,40)" rx="2" ry="2" />
<text  x="319.33" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="246.7" y="1813" width="0.2" height="15.0" fill="rgb(238,118,2)" rx="2" ry="2" />
<text  x="249.68" y="1823.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="750.4" y="1733" width="0.2" height="15.0" fill="rgb(235,173,21)" rx="2" ry="2" />
<text  x="753.37" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="178.6" y="1957" width="0.8" height="15.0" fill="rgb(217,37,39)" rx="2" ry="2" />
<text  x="181.63" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (81 samples, 1.37%)</title><rect x="510.7" y="2005" width="16.2" height="15.0" fill="rgb(212,46,40)" rx="2" ry="2" />
<text  x="513.70" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (4 samples, 0.07%)</title><rect x="550.8" y="1957" width="0.8" height="15.0" fill="rgb(238,109,32)" rx="2" ry="2" />
<text  x="553.81" y="1967.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="360.6" y="1957" width="0.2" height="15.0" fill="rgb(251,132,9)" rx="2" ry="2" />
<text  x="363.63" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1148.7" y="2053" width="0.4" height="15.0" fill="rgb(241,215,32)" rx="2" ry="2" />
<text  x="1151.69" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="528.1" y="2021" width="0.2" height="15.0" fill="rgb(219,151,50)" rx="2" ry="2" />
<text  x="531.06" y="2031.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="318.1" y="1797" width="0.2" height="15.0" fill="rgb(234,146,38)" rx="2" ry="2" />
<text  x="321.12" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="955.1" y="1957" width="0.2" height="15.0" fill="rgb(249,46,42)" rx="2" ry="2" />
<text  x="958.12" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="1145.5" y="1957" width="0.2" height="15.0" fill="rgb(229,111,15)" rx="2" ry="2" />
<text  x="1148.50" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (5 samples, 0.08%)</title><rect x="955.3" y="1957" width="1.0" height="15.0" fill="rgb(208,100,35)" rx="2" ry="2" />
<text  x="958.32" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="82.8" y="1909" width="0.6" height="15.0" fill="rgb(220,114,41)" rx="2" ry="2" />
<text  x="85.84" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="607.9" y="1861" width="0.2" height="15.0" fill="rgb(249,174,5)" rx="2" ry="2" />
<text  x="610.88" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="900.4" y="1973" width="0.2" height="15.0" fill="rgb(212,180,50)" rx="2" ry="2" />
<text  x="903.44" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="146.3" y="1893" width="0.4" height="15.0" fill="rgb(246,217,19)" rx="2" ry="2" />
<text  x="149.30" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (16 samples, 0.27%)</title><rect x="889.3" y="2005" width="3.2" height="15.0" fill="rgb(224,32,34)" rx="2" ry="2" />
<text  x="892.26" y="2015.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.02%)</title><rect x="842.8" y="1749" width="0.2" height="15.0" fill="rgb(207,128,34)" rx="2" ry="2" />
<text  x="845.77" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="229.1" y="1861" width="0.4" height="15.0" fill="rgb(231,44,54)" rx="2" ry="2" />
<text  x="232.12" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1067.5" y="1717" width="0.2" height="15.0" fill="rgb(218,128,23)" rx="2" ry="2" />
<text  x="1070.47" y="1727.5" ></text>
</g>
<g >
<title>ep_poll (97 samples, 1.64%)</title><rect x="488.9" y="1973" width="19.4" height="15.0" fill="rgb(224,136,39)" rx="2" ry="2" />
<text  x="491.94" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.19%)</title><rect x="1078.6" y="1877" width="2.2" height="15.0" fill="rgb(210,147,27)" rx="2" ry="2" />
<text  x="1081.65" y="1887.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="373.6" y="1925" width="0.6" height="15.0" fill="rgb(226,21,31)" rx="2" ry="2" />
<text  x="376.60" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.40%)</title><rect x="105.2" y="1317" width="16.6" height="15.0" fill="rgb(221,77,13)" rx="2" ry="2" />
<text  x="108.19" y="1327.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="161.9" y="2005" width="0.2" height="15.0" fill="rgb(235,101,41)" rx="2" ry="2" />
<text  x="164.87" y="2015.5" ></text>
</g>
<g >
<title>sock_rfree (13 samples, 0.22%)</title><rect x="1080.8" y="1893" width="2.6" height="15.0" fill="rgb(244,178,12)" rx="2" ry="2" />
<text  x="1083.84" y="1903.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="289.8" y="1349" width="0.2" height="15.0" fill="rgb(252,102,1)" rx="2" ry="2" />
<text  x="292.78" y="1359.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="842.0" y="1909" width="0.2" height="15.0" fill="rgb(238,92,30)" rx="2" ry="2" />
<text  x="844.97" y="1919.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="255.9" y="1893" width="0.2" height="15.0" fill="rgb(240,18,43)" rx="2" ry="2" />
<text  x="258.86" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (1 samples, 0.02%)</title><rect x="59.9" y="1941" width="0.2" height="15.0" fill="rgb(250,4,32)" rx="2" ry="2" />
<text  x="62.89" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="156.1" y="1893" width="0.4" height="15.0" fill="rgb(216,173,35)" rx="2" ry="2" />
<text  x="159.08" y="1903.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="363.2" y="1621" width="0.2" height="15.0" fill="rgb(242,133,4)" rx="2" ry="2" />
<text  x="366.22" y="1631.5" ></text>
</g>
<g >
<title>netdev_pick_tx (8 samples, 0.14%)</title><rect x="779.3" y="1557" width="1.6" height="15.0" fill="rgb(249,61,53)" rx="2" ry="2" />
<text  x="782.30" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="850.9" y="1861" width="0.2" height="15.0" fill="rgb(221,89,36)" rx="2" ry="2" />
<text  x="853.95" y="1871.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="262.4" y="1861" width="0.2" height="15.0" fill="rgb(207,97,19)" rx="2" ry="2" />
<text  x="265.44" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="844.4" y="1845" width="0.2" height="15.0" fill="rgb(244,91,37)" rx="2" ry="2" />
<text  x="847.36" y="1855.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1119.8" y="1941" width="0.2" height="15.0" fill="rgb(216,186,52)" rx="2" ry="2" />
<text  x="1122.75" y="1951.5" ></text>
</g>
<g >
<title>ip_copy_addrs (6 samples, 0.10%)</title><rect x="279.8" y="1813" width="1.2" height="15.0" fill="rgb(246,198,6)" rx="2" ry="2" />
<text  x="282.81" y="1823.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="1083.8" y="1909" width="0.8" height="15.0" fill="rgb(228,25,11)" rx="2" ry="2" />
<text  x="1086.83" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="153.7" y="1877" width="1.4" height="15.0" fill="rgb(241,198,20)" rx="2" ry="2" />
<text  x="156.68" y="1887.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="409.1" y="1957" width="0.2" height="15.0" fill="rgb(230,55,42)" rx="2" ry="2" />
<text  x="412.12" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="340.3" y="1813" width="0.2" height="15.0" fill="rgb(235,5,31)" rx="2" ry="2" />
<text  x="343.27" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (34 samples, 0.58%)</title><rect x="631.4" y="1989" width="6.8" height="15.0" fill="rgb(227,79,5)" rx="2" ry="2" />
<text  x="634.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="321.3" y="1493" width="0.2" height="15.0" fill="rgb(232,176,21)" rx="2" ry="2" />
<text  x="324.31" y="1503.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="311.3" y="1813" width="0.2" height="15.0" fill="rgb(249,62,52)" rx="2" ry="2" />
<text  x="314.34" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="120.4" y="101" width="0.2" height="15.0" fill="rgb(244,59,11)" rx="2" ry="2" />
<text  x="123.36" y="111.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="993.0" y="1957" width="0.8" height="15.0" fill="rgb(218,132,4)" rx="2" ry="2" />
<text  x="996.03" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="150.7" y="1605" width="0.2" height="15.0" fill="rgb(248,110,50)" rx="2" ry="2" />
<text  x="153.69" y="1615.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="983.1" y="1973" width="0.2" height="15.0" fill="rgb(246,78,39)" rx="2" ry="2" />
<text  x="986.06" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="969.3" y="1893" width="0.2" height="15.0" fill="rgb(212,226,41)" rx="2" ry="2" />
<text  x="972.29" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (2 samples, 0.03%)</title><rect x="112.2" y="37" width="0.4" height="15.0" fill="rgb(235,78,43)" rx="2" ry="2" />
<text  x="115.17" y="47.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="481.0" y="1845" width="0.4" height="15.0" fill="rgb(229,194,29)" rx="2" ry="2" />
<text  x="483.96" y="1855.5" ></text>
</g>
<g >
<title>__fget (6 samples, 0.10%)</title><rect x="670.7" y="1813" width="1.2" height="15.0" fill="rgb(242,31,38)" rx="2" ry="2" />
<text  x="673.74" y="1823.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="479.6" y="1941" width="0.2" height="15.0" fill="rgb(241,147,23)" rx="2" ry="2" />
<text  x="482.57" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="340.3" y="1989" width="0.2" height="15.0" fill="rgb(220,170,16)" rx="2" ry="2" />
<text  x="343.27" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="150.7" y="1813" width="0.2" height="15.0" fill="rgb(226,1,0)" rx="2" ry="2" />
<text  x="153.69" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="888.9" y="1925" width="0.2" height="15.0" fill="rgb(239,201,24)" rx="2" ry="2" />
<text  x="891.86" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="158.9" y="1941" width="0.2" height="15.0" fill="rgb(251,68,22)" rx="2" ry="2" />
<text  x="161.87" y="1951.5" ></text>
</g>
<g >
<title>all (5,913 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(211,63,48)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (2 samples, 0.03%)</title><rect x="796.5" y="1509" width="0.4" height="15.0" fill="rgb(216,169,49)" rx="2" ry="2" />
<text  x="799.47" y="1519.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="721.4" y="1733" width="0.2" height="15.0" fill="rgb(227,213,9)" rx="2" ry="2" />
<text  x="724.43" y="1743.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="121.2" y="69" width="0.2" height="15.0" fill="rgb(248,185,35)" rx="2" ry="2" />
<text  x="124.16" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="943.9" y="2005" width="0.2" height="15.0" fill="rgb(229,42,12)" rx="2" ry="2" />
<text  x="946.94" y="2015.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1133.9" y="1989" width="0.2" height="15.0" fill="rgb(216,66,50)" rx="2" ry="2" />
<text  x="1136.92" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="962.1" y="1973" width="0.8" height="15.0" fill="rgb(254,64,36)" rx="2" ry="2" />
<text  x="965.10" y="1983.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="10.2" y="2053" width="1.0" height="15.0" fill="rgb(221,165,50)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="790.3" y="1509" width="0.2" height="15.0" fill="rgb(229,89,0)" rx="2" ry="2" />
<text  x="793.28" y="1519.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="272.6" y="1813" width="0.4" height="15.0" fill="rgb(239,31,19)" rx="2" ry="2" />
<text  x="275.62" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="91.0" y="1717" width="0.2" height="15.0" fill="rgb(212,226,43)" rx="2" ry="2" />
<text  x="94.02" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="146.1" y="1877" width="0.2" height="15.0" fill="rgb(205,82,40)" rx="2" ry="2" />
<text  x="149.10" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (1 samples, 0.02%)</title><rect x="1164.1" y="2053" width="0.2" height="15.0" fill="rgb(233,120,14)" rx="2" ry="2" />
<text  x="1167.06" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="150.7" y="1669" width="0.2" height="15.0" fill="rgb(234,15,12)" rx="2" ry="2" />
<text  x="153.69" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="562.0" y="1893" width="0.2" height="15.0" fill="rgb(238,71,47)" rx="2" ry="2" />
<text  x="564.98" y="1903.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1 samples, 0.02%)</title><rect x="816.0" y="1685" width="0.2" height="15.0" fill="rgb(228,227,30)" rx="2" ry="2" />
<text  x="819.02" y="1695.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="501.5" y="1589" width="0.2" height="15.0" fill="rgb(221,206,45)" rx="2" ry="2" />
<text  x="504.52" y="1599.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="105.2" y="1269" width="0.2" height="15.0" fill="rgb(231,192,39)" rx="2" ry="2" />
<text  x="108.19" y="1279.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="399.9" y="1877" width="0.2" height="15.0" fill="rgb(229,5,24)" rx="2" ry="2" />
<text  x="402.94" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="919.2" y="1925" width="0.4" height="15.0" fill="rgb(238,6,7)" rx="2" ry="2" />
<text  x="922.20" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (2 samples, 0.03%)</title><rect x="612.3" y="1845" width="0.4" height="15.0" fill="rgb(220,225,13)" rx="2" ry="2" />
<text  x="615.27" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.02%)</title><rect x="739.8" y="1685" width="0.2" height="15.0" fill="rgb(244,75,17)" rx="2" ry="2" />
<text  x="742.79" y="1695.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1002.4" y="1989" width="0.2" height="15.0" fill="rgb(212,217,29)" rx="2" ry="2" />
<text  x="1005.41" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="228.1" y="1813" width="0.2" height="15.0" fill="rgb(218,99,7)" rx="2" ry="2" />
<text  x="231.12" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (5 samples, 0.08%)</title><rect x="574.2" y="1989" width="1.0" height="15.0" fill="rgb(215,184,53)" rx="2" ry="2" />
<text  x="577.16" y="1999.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="452.0" y="1669" width="0.2" height="15.0" fill="rgb(212,90,40)" rx="2" ry="2" />
<text  x="455.03" y="1679.5" ></text>
</g>
<g >
<title>dst_release (15 samples, 0.25%)</title><rect x="1075.7" y="1877" width="2.9" height="15.0" fill="rgb(210,41,45)" rx="2" ry="2" />
<text  x="1078.65" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getAncillaryDataSize (1 samples, 0.02%)</title><rect x="1138.5" y="2005" width="0.2" height="15.0" fill="rgb(216,73,44)" rx="2" ry="2" />
<text  x="1141.51" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="534.8" y="1957" width="0.8" height="15.0" fill="rgb(246,95,16)" rx="2" ry="2" />
<text  x="537.84" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="805.8" y="1605" width="0.4" height="15.0" fill="rgb(244,48,25)" rx="2" ry="2" />
<text  x="808.85" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="316.5" y="1573" width="0.4" height="15.0" fill="rgb(246,86,51)" rx="2" ry="2" />
<text  x="319.52" y="1583.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="769.1" y="1685" width="0.2" height="15.0" fill="rgb(235,127,26)" rx="2" ry="2" />
<text  x="772.13" y="1695.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1049.1" y="1941" width="0.2" height="15.0" fill="rgb(217,16,49)" rx="2" ry="2" />
<text  x="1052.11" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="672.3" y="1797" width="0.2" height="15.0" fill="rgb(244,71,39)" rx="2" ry="2" />
<text  x="675.34" y="1807.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="914.2" y="1557" width="0.2" height="15.0" fill="rgb(221,92,10)" rx="2" ry="2" />
<text  x="917.21" y="1567.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="60.7" y="1893" width="0.6" height="15.0" fill="rgb(242,63,17)" rx="2" ry="2" />
<text  x="63.69" y="1903.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1018.6" y="1717" width="0.2" height="15.0" fill="rgb(233,228,23)" rx="2" ry="2" />
<text  x="1021.58" y="1727.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="529.5" y="1909" width="0.2" height="15.0" fill="rgb(212,143,15)" rx="2" ry="2" />
<text  x="532.46" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="10.4" y="1925" width="0.8" height="15.0" fill="rgb(226,46,35)" rx="2" ry="2" />
<text  x="13.40" y="1935.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="658.2" y="1909" width="0.4" height="15.0" fill="rgb(248,161,44)" rx="2" ry="2" />
<text  x="661.17" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (2 samples, 0.03%)</title><rect x="860.7" y="1989" width="0.4" height="15.0" fill="rgb(219,182,35)" rx="2" ry="2" />
<text  x="863.73" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (3 samples, 0.05%)</title><rect x="166.9" y="1989" width="0.6" height="15.0" fill="rgb(240,37,39)" rx="2" ry="2" />
<text  x="169.85" y="1999.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="399.5" y="1829" width="0.2" height="15.0" fill="rgb(219,125,51)" rx="2" ry="2" />
<text  x="402.54" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="253.1" y="1781" width="0.2" height="15.0" fill="rgb(231,215,47)" rx="2" ry="2" />
<text  x="256.06" y="1791.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (406 samples, 6.87%)</title><rect x="15.6" y="2053" width="81.0" height="15.0" fill="rgb(236,180,52)" rx="2" ry="2" />
<text  x="18.59" y="2063.5" >[libevent..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="651.0" y="2021" width="0.2" height="15.0" fill="rgb(213,184,13)" rx="2" ry="2" />
<text  x="653.99" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="185.6" y="1861" width="0.8" height="15.0" fill="rgb(235,6,10)" rx="2" ry="2" />
<text  x="188.61" y="1871.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="11.6" y="1957" width="0.8" height="15.0" fill="rgb(241,29,52)" rx="2" ry="2" />
<text  x="14.60" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="79.2" y="1957" width="0.2" height="15.0" fill="rgb(233,33,23)" rx="2" ry="2" />
<text  x="82.25" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="481.0" y="1925" width="0.4" height="15.0" fill="rgb(216,38,34)" rx="2" ry="2" />
<text  x="483.96" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="213.8" y="1941" width="0.2" height="15.0" fill="rgb(250,149,3)" rx="2" ry="2" />
<text  x="216.75" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="562.2" y="1893" width="0.2" height="15.0" fill="rgb(226,10,18)" rx="2" ry="2" />
<text  x="565.18" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (4 samples, 0.07%)</title><rect x="1140.1" y="2005" width="0.8" height="15.0" fill="rgb(221,41,51)" rx="2" ry="2" />
<text  x="1143.11" y="2015.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="710.1" y="1941" width="0.2" height="15.0" fill="rgb(241,91,11)" rx="2" ry="2" />
<text  x="713.06" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (13 samples, 0.22%)</title><rect x="542.4" y="1973" width="2.6" height="15.0" fill="rgb(231,41,25)" rx="2" ry="2" />
<text  x="545.43" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="452.0" y="1829" width="0.2" height="15.0" fill="rgb(209,211,47)" rx="2" ry="2" />
<text  x="455.03" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="481.0" y="2021" width="0.4" height="15.0" fill="rgb(221,33,16)" rx="2" ry="2" />
<text  x="483.96" y="2031.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="363.0" y="1925" width="0.2" height="15.0" fill="rgb(215,11,40)" rx="2" ry="2" />
<text  x="366.02" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (1 samples, 0.02%)</title><rect x="637.6" y="1957" width="0.2" height="15.0" fill="rgb(206,229,44)" rx="2" ry="2" />
<text  x="640.62" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="844.6" y="1909" width="0.4" height="15.0" fill="rgb(225,19,33)" rx="2" ry="2" />
<text  x="847.56" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="209.0" y="1973" width="0.8" height="15.0" fill="rgb(232,145,51)" rx="2" ry="2" />
<text  x="211.96" y="1983.5" ></text>
</g>
<g >
<title>tcp_close (391 samples, 6.61%)</title><rect x="747.6" y="1749" width="78.0" height="15.0" fill="rgb(250,26,41)" rx="2" ry="2" />
<text  x="750.57" y="1759.5" >tcp_close</text>
</g>
<g >
<title>folly::RequestContext::saveContext (4 samples, 0.07%)</title><rect x="182.8" y="1989" width="0.8" height="15.0" fill="rgb(246,90,17)" rx="2" ry="2" />
<text  x="185.82" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="842.0" y="1877" width="0.2" height="15.0" fill="rgb(249,43,11)" rx="2" ry="2" />
<text  x="844.97" y="1887.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.5" y="1797" width="0.2" height="15.0" fill="rgb(253,140,50)" rx="2" ry="2" />
<text  x="126.55" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="373.4" y="1717" width="0.2" height="15.0" fill="rgb(247,57,32)" rx="2" ry="2" />
<text  x="376.40" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (5 samples, 0.08%)</title><rect x="651.4" y="2037" width="1.0" height="15.0" fill="rgb(230,187,24)" rx="2" ry="2" />
<text  x="654.39" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runInMainContext&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="989.0" y="1989" width="0.2" height="15.0" fill="rgb(250,75,22)" rx="2" ry="2" />
<text  x="992.04" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="358.4" y="1973" width="0.2" height="15.0" fill="rgb(241,64,38)" rx="2" ry="2" />
<text  x="361.43" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="71.3" y="1845" width="0.6" height="15.0" fill="rgb(216,86,7)" rx="2" ry="2" />
<text  x="74.27" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="451.8" y="1829" width="0.2" height="15.0" fill="rgb(243,177,11)" rx="2" ry="2" />
<text  x="454.83" y="1839.5" ></text>
</g>
<g >
<title>__destroy_inode (9 samples, 0.15%)</title><rect x="732.0" y="1685" width="1.8" height="15.0" fill="rgb(225,174,24)" rx="2" ry="2" />
<text  x="735.01" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="501.5" y="1829" width="0.8" height="15.0" fill="rgb(234,90,18)" rx="2" ry="2" />
<text  x="504.52" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="842.0" y="1893" width="0.2" height="15.0" fill="rgb(235,219,3)" rx="2" ry="2" />
<text  x="844.97" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="672.7" y="1813" width="0.8" height="15.0" fill="rgb(242,126,12)" rx="2" ry="2" />
<text  x="675.74" y="1823.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1108.8" y="1525" width="0.2" height="15.0" fill="rgb(230,190,0)" rx="2" ry="2" />
<text  x="1111.78" y="1535.5" ></text>
</g>
<g >
<title>__pm_relax (1 samples, 0.02%)</title><rect x="489.1" y="1957" width="0.2" height="15.0" fill="rgb(213,229,48)" rx="2" ry="2" />
<text  x="492.14" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="406.1" y="1893" width="0.4" height="15.0" fill="rgb(236,229,48)" rx="2" ry="2" />
<text  x="409.13" y="1903.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="692.5" y="1845" width="0.2" height="15.0" fill="rgb(218,63,36)" rx="2" ry="2" />
<text  x="695.50" y="1855.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1146.9" y="1941" width="0.8" height="15.0" fill="rgb(209,23,3)" rx="2" ry="2" />
<text  x="1149.89" y="1951.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="823.2" y="1701" width="0.6" height="15.0" fill="rgb(205,216,39)" rx="2" ry="2" />
<text  x="826.21" y="1711.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.02%)</title><rect x="739.8" y="1701" width="0.2" height="15.0" fill="rgb(239,15,29)" rx="2" ry="2" />
<text  x="742.79" y="1711.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (3 samples, 0.05%)</title><rect x="931.6" y="1941" width="0.6" height="15.0" fill="rgb(227,173,1)" rx="2" ry="2" />
<text  x="934.57" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="1084.6" y="1909" width="1.8" height="15.0" fill="rgb(205,134,15)" rx="2" ry="2" />
<text  x="1087.63" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (3 samples, 0.05%)</title><rect x="300.8" y="1653" width="0.6" height="15.0" fill="rgb(209,209,50)" rx="2" ry="2" />
<text  x="303.76" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="40.3" y="1989" width="0.2" height="15.0" fill="rgb(234,179,42)" rx="2" ry="2" />
<text  x="43.33" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (15 samples, 0.25%)</title><rect x="986.0" y="1941" width="3.0" height="15.0" fill="rgb(242,133,48)" rx="2" ry="2" />
<text  x="989.05" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (104 samples, 1.76%)</title><rect x="104.2" y="1941" width="20.7" height="15.0" fill="rgb(244,1,17)" rx="2" ry="2" />
<text  x="107.19" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (7 samples, 0.12%)</title><rect x="84.4" y="1941" width="1.4" height="15.0" fill="rgb(245,24,24)" rx="2" ry="2" />
<text  x="87.44" y="1951.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (5 samples, 0.08%)</title><rect x="294.8" y="1669" width="1.0" height="15.0" fill="rgb(207,151,35)" rx="2" ry="2" />
<text  x="297.77" y="1679.5" ></text>
</g>
<g >
<title>[mcrouter] (122 samples, 2.06%)</title><rect x="210.8" y="2021" width="24.3" height="15.0" fill="rgb(206,143,42)" rx="2" ry="2" />
<text  x="213.76" y="2031.5" >[..</text>
</g>
<g >
<title>event_active_nolock_ (2 samples, 0.03%)</title><rect x="99.8" y="2005" width="0.4" height="15.0" fill="rgb(207,0,34)" rx="2" ry="2" />
<text  x="102.80" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1179.6" y="2021" width="0.2" height="15.0" fill="rgb(251,221,30)" rx="2" ry="2" />
<text  x="1182.62" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="340.3" y="1909" width="0.2" height="15.0" fill="rgb(227,83,34)" rx="2" ry="2" />
<text  x="343.27" y="1919.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="71.9" y="1861" width="0.2" height="15.0" fill="rgb(220,202,12)" rx="2" ry="2" />
<text  x="74.86" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="1088.4" y="1813" width="0.4" height="15.0" fill="rgb(209,109,50)" rx="2" ry="2" />
<text  x="1091.42" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="982.1" y="1861" width="0.2" height="15.0" fill="rgb(221,178,53)" rx="2" ry="2" />
<text  x="985.06" y="1871.5" ></text>
</g>
<g >
<title>folly::FormatArg::splitKey&lt;true&gt; (4 samples, 0.07%)</title><rect x="965.5" y="2037" width="0.8" height="15.0" fill="rgb(243,53,24)" rx="2" ry="2" />
<text  x="968.49" y="2047.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.05%)</title><rect x="195.0" y="2021" width="0.6" height="15.0" fill="rgb(248,87,51)" rx="2" ry="2" />
<text  x="197.99" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (1 samples, 0.02%)</title><rect x="121.2" y="501" width="0.2" height="15.0" fill="rgb(237,192,48)" rx="2" ry="2" />
<text  x="124.16" y="511.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (13 samples, 0.22%)</title><rect x="618.3" y="2037" width="2.6" height="15.0" fill="rgb(232,192,48)" rx="2" ry="2" />
<text  x="621.26" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="619.3" y="1973" width="1.0" height="15.0" fill="rgb(251,200,8)" rx="2" ry="2" />
<text  x="622.26" y="1983.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="501.9" y="1557" width="0.2" height="15.0" fill="rgb(218,169,24)" rx="2" ry="2" />
<text  x="504.92" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="501.5" y="1637" width="0.2" height="15.0" fill="rgb(210,187,29)" rx="2" ry="2" />
<text  x="504.52" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="575.8" y="1973" width="0.2" height="15.0" fill="rgb(245,10,45)" rx="2" ry="2" />
<text  x="578.75" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (183 samples, 3.09%)</title><rect x="578.9" y="2037" width="36.6" height="15.0" fill="rgb(232,214,23)" rx="2" ry="2" />
<text  x="581.95" y="2047.5" >fac..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (4 samples, 0.07%)</title><rect x="523.7" y="1973" width="0.8" height="15.0" fill="rgb(220,123,4)" rx="2" ry="2" />
<text  x="526.67" y="1983.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1017.8" y="2037" width="0.2" height="15.0" fill="rgb(253,66,53)" rx="2" ry="2" />
<text  x="1020.78" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="906.2" y="1973" width="0.2" height="15.0" fill="rgb(250,171,14)" rx="2" ry="2" />
<text  x="909.23" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (4 samples, 0.07%)</title><rect x="1090.0" y="1909" width="0.8" height="15.0" fill="rgb(247,142,17)" rx="2" ry="2" />
<text  x="1093.02" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="311.3" y="1669" width="0.2" height="15.0" fill="rgb(226,209,52)" rx="2" ry="2" />
<text  x="314.34" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1108.6" y="1701" width="0.4" height="15.0" fill="rgb(230,155,25)" rx="2" ry="2" />
<text  x="1111.58" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="373.4" y="1861" width="0.2" height="15.0" fill="rgb(247,182,2)" rx="2" ry="2" />
<text  x="376.40" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="602.3" y="1733" width="0.2" height="15.0" fill="rgb(244,162,30)" rx="2" ry="2" />
<text  x="605.29" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="481.0" y="1973" width="0.4" height="15.0" fill="rgb(239,35,15)" rx="2" ry="2" />
<text  x="483.96" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="64.9" y="1877" width="0.4" height="15.0" fill="rgb(249,171,15)" rx="2" ry="2" />
<text  x="67.88" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="85.8" y="1941" width="0.4" height="15.0" fill="rgb(225,138,7)" rx="2" ry="2" />
<text  x="88.83" y="1951.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="541.2" y="1861" width="0.2" height="15.0" fill="rgb(213,75,41)" rx="2" ry="2" />
<text  x="544.23" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="886.5" y="1893" width="0.6" height="15.0" fill="rgb(245,76,50)" rx="2" ry="2" />
<text  x="889.47" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="949.3" y="2021" width="0.8" height="15.0" fill="rgb(207,187,39)" rx="2" ry="2" />
<text  x="952.33" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="951.1" y="1829" width="0.2" height="15.0" fill="rgb(224,34,34)" rx="2" ry="2" />
<text  x="954.13" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="614.3" y="1957" width="0.2" height="15.0" fill="rgb(207,72,44)" rx="2" ry="2" />
<text  x="617.27" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (14 samples, 0.24%)</title><rect x="287.8" y="1685" width="2.8" height="15.0" fill="rgb(247,34,53)" rx="2" ry="2" />
<text  x="290.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1477" width="17.2" height="15.0" fill="rgb(230,185,4)" rx="2" ry="2" />
<text  x="107.99" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (9 samples, 0.15%)</title><rect x="50.9" y="1925" width="1.8" height="15.0" fill="rgb(245,169,52)" rx="2" ry="2" />
<text  x="53.91" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="888.7" y="1973" width="0.2" height="15.0" fill="rgb(234,87,37)" rx="2" ry="2" />
<text  x="891.66" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="300.2" y="1589" width="0.2" height="15.0" fill="rgb(210,79,16)" rx="2" ry="2" />
<text  x="303.16" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (7 samples, 0.12%)</title><rect x="670.5" y="1829" width="1.4" height="15.0" fill="rgb(244,218,33)" rx="2" ry="2" />
<text  x="673.54" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="90.0" y="1957" width="0.2" height="15.0" fill="rgb(220,199,20)" rx="2" ry="2" />
<text  x="93.02" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_xmit (253 samples, 4.28%)</title><rect x="275.6" y="1845" width="50.5" height="15.0" fill="rgb(249,72,25)" rx="2" ry="2" />
<text  x="278.61" y="1855.5" >tcp_w..</text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1072.1" y="1845" width="0.4" height="15.0" fill="rgb(230,106,15)" rx="2" ry="2" />
<text  x="1075.06" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="886.7" y="1877" width="0.4" height="15.0" fill="rgb(253,167,53)" rx="2" ry="2" />
<text  x="889.67" y="1887.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (2 samples, 0.03%)</title><rect x="395.4" y="1893" width="0.4" height="15.0" fill="rgb(246,216,20)" rx="2" ry="2" />
<text  x="398.35" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (10 samples, 0.17%)</title><rect x="30.8" y="1973" width="1.9" height="15.0" fill="rgb(215,216,49)" rx="2" ry="2" />
<text  x="33.75" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="602.3" y="1925" width="0.2" height="15.0" fill="rgb(229,98,45)" rx="2" ry="2" />
<text  x="605.29" y="1935.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="332.7" y="1893" width="0.2" height="15.0" fill="rgb(245,160,15)" rx="2" ry="2" />
<text  x="335.69" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="909.4" y="1733" width="0.2" height="15.0" fill="rgb(229,146,41)" rx="2" ry="2" />
<text  x="912.42" y="1743.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1144.1" y="1973" width="0.2" height="15.0" fill="rgb(205,44,36)" rx="2" ry="2" />
<text  x="1147.10" y="1983.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="1121.4" y="1909" width="0.7" height="15.0" fill="rgb(222,226,31)" rx="2" ry="2" />
<text  x="1124.35" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="474.0" y="1813" width="0.2" height="15.0" fill="rgb(225,75,11)" rx="2" ry="2" />
<text  x="476.98" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="341" width="15.6" height="15.0" fill="rgb(219,106,50)" rx="2" ry="2" />
<text  x="108.39" y="351.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (7 samples, 0.12%)</title><rect x="950.3" y="2005" width="1.4" height="15.0" fill="rgb(224,12,29)" rx="2" ry="2" />
<text  x="953.33" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6 samples, 0.10%)</title><rect x="610.3" y="1829" width="1.2" height="15.0" fill="rgb(253,110,29)" rx="2" ry="2" />
<text  x="613.28" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (5 samples, 0.08%)</title><rect x="133.9" y="1989" width="1.0" height="15.0" fill="rgb(252,214,50)" rx="2" ry="2" />
<text  x="136.93" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="999.4" y="1925" width="0.2" height="15.0" fill="rgb(240,110,21)" rx="2" ry="2" />
<text  x="1002.42" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="982.1" y="1877" width="0.2" height="15.0" fill="rgb(209,20,30)" rx="2" ry="2" />
<text  x="985.06" y="1887.5" ></text>
</g>
<g >
<title>__alloc_fd (8 samples, 0.14%)</title><rect x="361.8" y="1941" width="1.6" height="15.0" fill="rgb(244,186,25)" rx="2" ry="2" />
<text  x="364.82" y="1951.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="470.6" y="1749" width="0.2" height="15.0" fill="rgb(241,100,37)" rx="2" ry="2" />
<text  x="473.59" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (99 samples, 1.67%)</title><rect x="104.2" y="1845" width="19.7" height="15.0" fill="rgb(226,163,21)" rx="2" ry="2" />
<text  x="107.19" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (15 samples, 0.25%)</title><rect x="61.9" y="1925" width="3.0" height="15.0" fill="rgb(252,75,32)" rx="2" ry="2" />
<text  x="64.89" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="957.7" y="1989" width="0.2" height="15.0" fill="rgb(228,199,9)" rx="2" ry="2" />
<text  x="960.71" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1004.4" y="2005" width="0.2" height="15.0" fill="rgb(223,36,15)" rx="2" ry="2" />
<text  x="1007.41" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="316.5" y="1733" width="0.4" height="15.0" fill="rgb(227,158,52)" rx="2" ry="2" />
<text  x="319.52" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="469" width="15.8" height="15.0" fill="rgb(222,222,5)" rx="2" ry="2" />
<text  x="108.39" y="479.5" ></text>
</g>
<g >
<title>folly::netops::recv (10 samples, 0.17%)</title><rect x="52.7" y="1957" width="2.0" height="15.0" fill="rgb(206,63,39)" rx="2" ry="2" />
<text  x="55.71" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (5 samples, 0.08%)</title><rect x="220.9" y="1861" width="1.0" height="15.0" fill="rgb(233,159,34)" rx="2" ry="2" />
<text  x="223.94" y="1871.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (4 samples, 0.07%)</title><rect x="550.8" y="1973" width="0.8" height="15.0" fill="rgb(242,208,11)" rx="2" ry="2" />
<text  x="553.81" y="1983.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="989.8" y="1989" width="0.2" height="15.0" fill="rgb(206,48,18)" rx="2" ry="2" />
<text  x="992.84" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="53.9" y="1893" width="0.2" height="15.0" fill="rgb(228,27,5)" rx="2" ry="2" />
<text  x="56.90" y="1903.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="672.3" y="1605" width="0.2" height="15.0" fill="rgb(235,130,32)" rx="2" ry="2" />
<text  x="675.34" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="964.7" y="1829" width="0.2" height="15.0" fill="rgb(213,87,3)" rx="2" ry="2" />
<text  x="967.70" y="1839.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (17 samples, 0.29%)</title><rect x="457.2" y="1925" width="3.4" height="15.0" fill="rgb(227,110,4)" rx="2" ry="2" />
<text  x="460.21" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="240.1" y="2021" width="0.2" height="15.0" fill="rgb(238,226,10)" rx="2" ry="2" />
<text  x="243.09" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="597.7" y="1829" width="0.2" height="15.0" fill="rgb(223,47,34)" rx="2" ry="2" />
<text  x="600.71" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="121.2" y="277" width="0.2" height="15.0" fill="rgb(214,37,54)" rx="2" ry="2" />
<text  x="124.16" y="287.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="112.0" y="37" width="0.2" height="15.0" fill="rgb(234,161,50)" rx="2" ry="2" />
<text  x="114.98" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (3 samples, 0.05%)</title><rect x="842.4" y="1941" width="0.6" height="15.0" fill="rgb(224,77,36)" rx="2" ry="2" />
<text  x="845.37" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="625.2" y="2005" width="0.4" height="15.0" fill="rgb(205,81,40)" rx="2" ry="2" />
<text  x="628.24" y="2015.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (16 samples, 0.27%)</title><rect x="1119.2" y="1957" width="3.1" height="15.0" fill="rgb(207,109,24)" rx="2" ry="2" />
<text  x="1122.16" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="900.0" y="1989" width="2.0" height="15.0" fill="rgb(249,71,46)" rx="2" ry="2" />
<text  x="903.04" y="1999.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1004.2" y="1973" width="0.2" height="15.0" fill="rgb(245,189,41)" rx="2" ry="2" />
<text  x="1007.21" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="884.1" y="1893" width="0.2" height="15.0" fill="rgb(236,220,26)" rx="2" ry="2" />
<text  x="887.07" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="753.6" y="1733" width="1.0" height="15.0" fill="rgb(237,141,13)" rx="2" ry="2" />
<text  x="756.56" y="1743.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="900.0" y="1973" width="0.2" height="15.0" fill="rgb(208,175,14)" rx="2" ry="2" />
<text  x="903.04" y="1983.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="1048.9" y="2005" width="0.2" height="15.0" fill="rgb(236,211,53)" rx="2" ry="2" />
<text  x="1051.91" y="2015.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="194.4" y="2021" width="0.4" height="15.0" fill="rgb(228,158,37)" rx="2" ry="2" />
<text  x="197.39" y="2031.5" ></text>
</g>
<g >
<title>ip_local_out (144 samples, 2.44%)</title><rect x="282.4" y="1797" width="28.7" height="15.0" fill="rgb(219,221,9)" rx="2" ry="2" />
<text  x="285.40" y="1807.5" >ip..</text>
</g>
<g >
<title>__entry_trampoline_start (20 samples, 0.34%)</title><rect x="1031.0" y="2037" width="3.9" height="15.0" fill="rgb(251,116,7)" rx="2" ry="2" />
<text  x="1033.95" y="2047.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (7 samples, 0.12%)</title><rect x="393.2" y="1877" width="1.4" height="15.0" fill="rgb(236,134,39)" rx="2" ry="2" />
<text  x="396.16" y="1887.5" ></text>
</g>
<g >
<title>release_sock (6 samples, 0.10%)</title><rect x="381.8" y="1941" width="1.2" height="15.0" fill="rgb(229,53,28)" rx="2" ry="2" />
<text  x="384.78" y="1951.5" ></text>
</g>
<g >
<title>event_del_nolock_ (6 samples, 0.10%)</title><rect x="100.8" y="2005" width="1.2" height="15.0" fill="rgb(227,199,41)" rx="2" ry="2" />
<text  x="103.80" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="568.8" y="1893" width="0.2" height="15.0" fill="rgb(247,190,8)" rx="2" ry="2" />
<text  x="571.77" y="1903.5" ></text>
</g>
<g >
<title>sys_getpeername (24 samples, 0.41%)</title><rect x="667.4" y="1893" width="4.7" height="15.0" fill="rgb(251,84,13)" rx="2" ry="2" />
<text  x="670.35" y="1903.5" ></text>
</g>
<g >
<title>process_backlog (30 samples, 0.51%)</title><rect x="1109.0" y="1701" width="6.0" height="15.0" fill="rgb(214,57,34)" rx="2" ry="2" />
<text  x="1111.98" y="1711.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="77.7" y="1925" width="0.2" height="15.0" fill="rgb(228,118,52)" rx="2" ry="2" />
<text  x="80.65" y="1935.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="459.4" y="1893" width="0.4" height="15.0" fill="rgb(223,193,8)" rx="2" ry="2" />
<text  x="462.41" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (485 samples, 8.20%)</title><rect x="241.7" y="2005" width="96.8" height="15.0" fill="rgb(212,140,17)" rx="2" ry="2" />
<text  x="244.69" y="2015.5" >do_syscall_64</text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="1167.6" y="1957" width="0.2" height="15.0" fill="rgb(228,94,30)" rx="2" ry="2" />
<text  x="1170.65" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="999.4" y="1893" width="0.2" height="15.0" fill="rgb(245,114,9)" rx="2" ry="2" />
<text  x="1002.42" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="880.9" y="1893" width="0.8" height="15.0" fill="rgb(229,84,19)" rx="2" ry="2" />
<text  x="883.88" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (2 samples, 0.03%)</title><rect x="61.5" y="1925" width="0.4" height="15.0" fill="rgb(217,77,6)" rx="2" ry="2" />
<text  x="64.49" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1925" width="0.2" height="15.0" fill="rgb(210,180,13)" rx="2" ry="2" />
<text  x="1143.31" y="1935.5" ></text>
</g>
<g >
<title>get_empty_filp (1 samples, 0.02%)</title><rect x="407.7" y="1941" width="0.2" height="15.0" fill="rgb(217,212,17)" rx="2" ry="2" />
<text  x="410.72" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="602.3" y="1685" width="0.2" height="15.0" fill="rgb(227,76,52)" rx="2" ry="2" />
<text  x="605.29" y="1695.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="253.1" y="1669" width="0.2" height="15.0" fill="rgb(210,117,36)" rx="2" ry="2" />
<text  x="256.06" y="1679.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1108.8" y="1493" width="0.2" height="15.0" fill="rgb(244,147,4)" rx="2" ry="2" />
<text  x="1111.78" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="899.8" y="2037" width="0.2" height="15.0" fill="rgb(206,146,1)" rx="2" ry="2" />
<text  x="902.84" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (91 samples, 1.54%)</title><rect x="510.1" y="2037" width="18.2" height="15.0" fill="rgb(208,177,46)" rx="2" ry="2" />
<text  x="513.10" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_ack (43 samples, 0.73%)</title><rect x="1107.4" y="1909" width="8.6" height="15.0" fill="rgb(244,76,49)" rx="2" ry="2" />
<text  x="1110.38" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (3 samples, 0.05%)</title><rect x="904.8" y="1973" width="0.6" height="15.0" fill="rgb(225,103,53)" rx="2" ry="2" />
<text  x="907.83" y="1983.5" ></text>
</g>
<g >
<title>ksize (8 samples, 0.14%)</title><rect x="765.3" y="1701" width="1.6" height="15.0" fill="rgb(236,139,30)" rx="2" ry="2" />
<text  x="768.34" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="566.0" y="1909" width="0.2" height="15.0" fill="rgb(244,169,18)" rx="2" ry="2" />
<text  x="568.97" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="180.6" y="1941" width="0.2" height="15.0" fill="rgb(250,105,32)" rx="2" ry="2" />
<text  x="183.62" y="1951.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="458.0" y="1797" width="0.2" height="15.0" fill="rgb(207,112,18)" rx="2" ry="2" />
<text  x="461.01" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="995.6" y="1941" width="0.2" height="15.0" fill="rgb(223,72,47)" rx="2" ry="2" />
<text  x="998.63" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="841.2" y="1637" width="0.2" height="15.0" fill="rgb(243,151,51)" rx="2" ry="2" />
<text  x="844.17" y="1647.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="979.3" y="1973" width="0.2" height="15.0" fill="rgb(245,154,1)" rx="2" ry="2" />
<text  x="982.26" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="549.4" y="1973" width="0.2" height="15.0" fill="rgb(215,154,25)" rx="2" ry="2" />
<text  x="552.41" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="11.6" y="1845" width="0.8" height="15.0" fill="rgb(207,23,19)" rx="2" ry="2" />
<text  x="14.60" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="951.1" y="1701" width="0.2" height="15.0" fill="rgb(233,207,25)" rx="2" ry="2" />
<text  x="954.13" y="1711.5" ></text>
</g>
<g >
<title>folly::sizedFree (1 samples, 0.02%)</title><rect x="891.9" y="1957" width="0.2" height="15.0" fill="rgb(228,106,17)" rx="2" ry="2" />
<text  x="894.86" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="451.8" y="1733" width="0.2" height="15.0" fill="rgb(241,153,42)" rx="2" ry="2" />
<text  x="454.83" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="23.0" y="1957" width="0.2" height="15.0" fill="rgb(245,40,36)" rx="2" ry="2" />
<text  x="25.97" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (3 samples, 0.05%)</title><rect x="571.4" y="1973" width="0.6" height="15.0" fill="rgb(230,15,25)" rx="2" ry="2" />
<text  x="574.36" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="615.1" y="2021" width="0.2" height="15.0" fill="rgb(240,122,20)" rx="2" ry="2" />
<text  x="618.07" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="581" width="16.0" height="15.0" fill="rgb(211,119,36)" rx="2" ry="2" />
<text  x="108.39" y="591.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="121.2" y="373" width="0.2" height="15.0" fill="rgb(216,198,42)" rx="2" ry="2" />
<text  x="124.16" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="620.9" y="2021" width="0.4" height="15.0" fill="rgb(229,28,16)" rx="2" ry="2" />
<text  x="623.85" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="158.5" y="1925" width="0.4" height="15.0" fill="rgb(235,66,21)" rx="2" ry="2" />
<text  x="161.47" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (1 samples, 0.02%)</title><rect x="912.6" y="1989" width="0.2" height="15.0" fill="rgb(215,33,29)" rx="2" ry="2" />
<text  x="915.61" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="886.3" y="1909" width="0.8" height="15.0" fill="rgb(214,44,35)" rx="2" ry="2" />
<text  x="889.27" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="805.8" y="1429" width="0.4" height="15.0" fill="rgb(216,30,17)" rx="2" ry="2" />
<text  x="808.85" y="1439.5" ></text>
</g>
<g >
<title>strcmp@plt (2 samples, 0.03%)</title><rect x="960.1" y="2005" width="0.4" height="15.0" fill="rgb(208,24,22)" rx="2" ry="2" />
<text  x="963.11" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="121.2" y="405" width="0.2" height="15.0" fill="rgb(212,35,4)" rx="2" ry="2" />
<text  x="124.16" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="738.8" y="1685" width="0.2" height="15.0" fill="rgb(233,142,33)" rx="2" ry="2" />
<text  x="741.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="309" width="15.6" height="15.0" fill="rgb(213,123,15)" rx="2" ry="2" />
<text  x="108.39" y="319.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="234.7" y="1957" width="0.2" height="15.0" fill="rgb(241,95,30)" rx="2" ry="2" />
<text  x="237.70" y="1967.5" ></text>
</g>
<g >
<title>sch_direct_xmit (75 samples, 1.27%)</title><rect x="295.8" y="1701" width="14.9" height="15.0" fill="rgb(227,144,43)" rx="2" ry="2" />
<text  x="298.77" y="1711.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="882.9" y="1925" width="0.4" height="15.0" fill="rgb(214,80,4)" rx="2" ry="2" />
<text  x="885.88" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_fd (1 samples, 0.02%)</title><rect x="19.8" y="2037" width="0.2" height="15.0" fill="rgb(211,78,35)" rx="2" ry="2" />
<text  x="22.78" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="651.2" y="2037" width="0.2" height="15.0" fill="rgb(218,215,6)" rx="2" ry="2" />
<text  x="654.19" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="676.3" y="2021" width="0.2" height="15.0" fill="rgb(222,177,43)" rx="2" ry="2" />
<text  x="679.33" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="150.7" y="1637" width="0.2" height="15.0" fill="rgb(237,122,4)" rx="2" ry="2" />
<text  x="153.69" y="1647.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="162.1" y="2005" width="0.4" height="15.0" fill="rgb(228,49,6)" rx="2" ry="2" />
<text  x="165.06" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="562.2" y="1957" width="0.2" height="15.0" fill="rgb(233,177,50)" rx="2" ry="2" />
<text  x="565.18" y="1967.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="214.2" y="1941" width="2.1" height="15.0" fill="rgb(228,81,6)" rx="2" ry="2" />
<text  x="217.15" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="981" width="16.0" height="15.0" fill="rgb(252,169,18)" rx="2" ry="2" />
<text  x="108.39" y="991.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="584.9" y="1957" width="0.2" height="15.0" fill="rgb(248,181,26)" rx="2" ry="2" />
<text  x="587.93" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="10.4" y="1893" width="0.8" height="15.0" fill="rgb(247,183,7)" rx="2" ry="2" />
<text  x="13.40" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="887.3" y="1909" width="0.8" height="15.0" fill="rgb(242,198,34)" rx="2" ry="2" />
<text  x="890.27" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="129.9" y="1925" width="0.2" height="15.0" fill="rgb(232,153,18)" rx="2" ry="2" />
<text  x="132.94" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.2" y="1877" width="0.2" height="15.0" fill="rgb(229,164,0)" rx="2" ry="2" />
<text  x="547.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="951.1" y="1669" width="0.2" height="15.0" fill="rgb(231,145,44)" rx="2" ry="2" />
<text  x="954.13" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="144.3" y="1893" width="0.2" height="15.0" fill="rgb(221,98,47)" rx="2" ry="2" />
<text  x="147.30" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (3 samples, 0.05%)</title><rect x="78.6" y="1957" width="0.6" height="15.0" fill="rgb(218,73,45)" rx="2" ry="2" />
<text  x="81.65" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="321.3" y="1509" width="0.2" height="15.0" fill="rgb(237,133,54)" rx="2" ry="2" />
<text  x="324.31" y="1519.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="608.3" y="1829" width="0.2" height="15.0" fill="rgb(234,54,48)" rx="2" ry="2" />
<text  x="611.28" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (12 samples, 0.20%)</title><rect x="1168.0" y="2021" width="2.4" height="15.0" fill="rgb(208,8,47)" rx="2" ry="2" />
<text  x="1171.05" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1509" width="17.2" height="15.0" fill="rgb(234,157,21)" rx="2" ry="2" />
<text  x="107.99" y="1519.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (12 samples, 0.20%)</title><rect x="1120.0" y="1941" width="2.3" height="15.0" fill="rgb(234,125,5)" rx="2" ry="2" />
<text  x="1122.95" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="528.5" y="1957" width="1.6" height="15.0" fill="rgb(253,69,53)" rx="2" ry="2" />
<text  x="531.46" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (96 samples, 1.62%)</title><rect x="104.4" y="1765" width="19.1" height="15.0" fill="rgb(248,149,26)" rx="2" ry="2" />
<text  x="107.39" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="919.6" y="1909" width="0.2" height="15.0" fill="rgb(221,115,54)" rx="2" ry="2" />
<text  x="922.60" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="845.4" y="1941" width="0.2" height="15.0" fill="rgb(243,215,23)" rx="2" ry="2" />
<text  x="848.36" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(239,90,12)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="982.1" y="1925" width="0.2" height="15.0" fill="rgb(237,193,4)" rx="2" ry="2" />
<text  x="985.06" y="1935.5" ></text>
</g>
<g >
<title>__libc_recv (6 samples, 0.10%)</title><rect x="955.1" y="1973" width="1.2" height="15.0" fill="rgb(238,136,51)" rx="2" ry="2" />
<text  x="958.12" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::AsyncWriter (1 samples, 0.02%)</title><rect x="565.6" y="1989" width="0.2" height="15.0" fill="rgb(245,91,1)" rx="2" ry="2" />
<text  x="568.58" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="672.5" y="1813" width="0.2" height="15.0" fill="rgb(254,173,37)" rx="2" ry="2" />
<text  x="675.54" y="1823.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="11.2" y="2069" width="1.2" height="15.0" fill="rgb(208,161,13)" rx="2" ry="2" />
<text  x="14.20" y="2079.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="478.4" y="1941" width="0.4" height="15.0" fill="rgb(247,205,0)" rx="2" ry="2" />
<text  x="481.37" y="1951.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="841.2" y="1589" width="0.2" height="15.0" fill="rgb(244,139,48)" rx="2" ry="2" />
<text  x="844.17" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="597.9" y="1845" width="0.2" height="15.0" fill="rgb(214,43,35)" rx="2" ry="2" />
<text  x="600.90" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="213.6" y="1941" width="0.2" height="15.0" fill="rgb(250,2,9)" rx="2" ry="2" />
<text  x="216.55" y="1951.5" ></text>
</g>
<g >
<title>__libc_recv (5 samples, 0.08%)</title><rect x="53.1" y="1941" width="1.0" height="15.0" fill="rgb(239,208,20)" rx="2" ry="2" />
<text  x="56.11" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (75 samples, 1.27%)</title><rect x="1149.1" y="2053" width="15.0" height="15.0" fill="rgb(243,189,49)" rx="2" ry="2" />
<text  x="1152.09" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="675.9" y="2005" width="0.2" height="15.0" fill="rgb(240,162,7)" rx="2" ry="2" />
<text  x="678.93" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="914.2" y="1781" width="0.2" height="15.0" fill="rgb(223,223,24)" rx="2" ry="2" />
<text  x="917.21" y="1791.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (16 samples, 0.27%)</title><rect x="287.4" y="1733" width="3.2" height="15.0" fill="rgb(250,215,24)" rx="2" ry="2" />
<text  x="290.39" y="1743.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (11 samples, 0.19%)</title><rect x="333.3" y="1925" width="2.2" height="15.0" fill="rgb(247,163,5)" rx="2" ry="2" />
<text  x="336.29" y="1935.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="325.1" y="1813" width="0.2" height="15.0" fill="rgb(220,119,31)" rx="2" ry="2" />
<text  x="328.11" y="1823.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="413.1" y="2037" width="0.4" height="15.0" fill="rgb(225,138,19)" rx="2" ry="2" />
<text  x="416.11" y="2047.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="672.3" y="1685" width="0.2" height="15.0" fill="rgb(249,34,8)" rx="2" ry="2" />
<text  x="675.34" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="945.5" y="2005" width="0.4" height="15.0" fill="rgb(235,141,53)" rx="2" ry="2" />
<text  x="948.54" y="2015.5" ></text>
</g>
<g >
<title>rb_erase_cached (5 samples, 0.08%)</title><rect x="474.2" y="1957" width="1.0" height="15.0" fill="rgb(249,220,11)" rx="2" ry="2" />
<text  x="477.18" y="1967.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (7 samples, 0.12%)</title><rect x="1133.9" y="2053" width="1.4" height="15.0" fill="rgb(225,219,46)" rx="2" ry="2" />
<text  x="1136.92" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="888.9" y="1941" width="0.2" height="15.0" fill="rgb(222,199,40)" rx="2" ry="2" />
<text  x="891.86" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (6 samples, 0.10%)</title><rect x="968.3" y="2005" width="1.2" height="15.0" fill="rgb(252,84,52)" rx="2" ry="2" />
<text  x="971.29" y="2015.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="808.8" y="1685" width="0.2" height="15.0" fill="rgb(234,111,35)" rx="2" ry="2" />
<text  x="811.84" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (13 samples, 0.22%)</title><rect x="1086.6" y="1893" width="2.6" height="15.0" fill="rgb(232,4,50)" rx="2" ry="2" />
<text  x="1089.63" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (18 samples, 0.30%)</title><rect x="151.9" y="1909" width="3.6" height="15.0" fill="rgb(214,137,39)" rx="2" ry="2" />
<text  x="154.89" y="1919.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="740.6" y="1749" width="0.8" height="15.0" fill="rgb(233,47,45)" rx="2" ry="2" />
<text  x="743.59" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="113.6" y="53" width="0.4" height="15.0" fill="rgb(242,29,4)" rx="2" ry="2" />
<text  x="116.57" y="63.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="358.2" y="1941" width="0.2" height="15.0" fill="rgb(222,47,49)" rx="2" ry="2" />
<text  x="361.23" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (19 samples, 0.32%)</title><rect x="166.3" y="2005" width="3.7" height="15.0" fill="rgb(243,16,27)" rx="2" ry="2" />
<text  x="169.26" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="695.5" y="1717" width="0.2" height="15.0" fill="rgb(239,42,16)" rx="2" ry="2" />
<text  x="698.49" y="1727.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="363.2" y="1589" width="0.2" height="15.0" fill="rgb(205,29,14)" rx="2" ry="2" />
<text  x="366.22" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="763.1" y="1541" width="0.2" height="15.0" fill="rgb(241,156,21)" rx="2" ry="2" />
<text  x="766.14" y="1551.5" ></text>
</g>
<g >
<title>task_work_run (4 samples, 0.07%)</title><rect x="357.6" y="1973" width="0.8" height="15.0" fill="rgb(226,228,11)" rx="2" ry="2" />
<text  x="360.63" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::advance (2 samples, 0.03%)</title><rect x="999.0" y="2021" width="0.4" height="15.0" fill="rgb(238,39,22)" rx="2" ry="2" />
<text  x="1002.02" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="316.3" y="1781" width="0.2" height="15.0" fill="rgb(223,57,28)" rx="2" ry="2" />
<text  x="319.33" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="62.9" y="1893" width="0.8" height="15.0" fill="rgb(240,45,24)" rx="2" ry="2" />
<text  x="65.88" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="363.2" y="1461" width="0.2" height="15.0" fill="rgb(221,48,42)" rx="2" ry="2" />
<text  x="366.22" y="1471.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="29.4" y="1781" width="0.2" height="15.0" fill="rgb(240,30,53)" rx="2" ry="2" />
<text  x="32.36" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="569.4" y="2005" width="0.2" height="15.0" fill="rgb(225,133,50)" rx="2" ry="2" />
<text  x="572.37" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="474.0" y="1877" width="0.2" height="15.0" fill="rgb(247,94,10)" rx="2" ry="2" />
<text  x="476.98" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="373.4" y="1925" width="0.2" height="15.0" fill="rgb(246,132,30)" rx="2" ry="2" />
<text  x="376.40" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="884.1" y="1877" width="0.2" height="15.0" fill="rgb(222,6,20)" rx="2" ry="2" />
<text  x="887.07" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1493" width="17.2" height="15.0" fill="rgb(222,193,0)" rx="2" ry="2" />
<text  x="107.99" y="1503.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="186.4" y="2005" width="0.2" height="15.0" fill="rgb(223,34,23)" rx="2" ry="2" />
<text  x="189.41" y="2015.5" ></text>
</g>
<g >
<title>vfprintf (5 samples, 0.08%)</title><rect x="1134.3" y="2037" width="1.0" height="15.0" fill="rgb(238,118,34)" rx="2" ry="2" />
<text  x="1137.32" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1018.6" y="1861" width="0.2" height="15.0" fill="rgb(232,40,48)" rx="2" ry="2" />
<text  x="1021.58" y="1871.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="873.7" y="1893" width="0.2" height="15.0" fill="rgb(236,171,7)" rx="2" ry="2" />
<text  x="876.70" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="316.5" y="1653" width="0.4" height="15.0" fill="rgb(245,214,48)" rx="2" ry="2" />
<text  x="319.52" y="1663.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="691.7" y="1877" width="0.2" height="15.0" fill="rgb(233,203,23)" rx="2" ry="2" />
<text  x="694.70" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="512.5" y="1941" width="0.6" height="15.0" fill="rgb(250,165,44)" rx="2" ry="2" />
<text  x="515.49" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (36 samples, 0.61%)</title><rect x="1108.4" y="1797" width="7.2" height="15.0" fill="rgb(225,84,39)" rx="2" ry="2" />
<text  x="1111.38" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (2 samples, 0.03%)</title><rect x="875.5" y="1925" width="0.4" height="15.0" fill="rgb(244,223,41)" rx="2" ry="2" />
<text  x="878.49" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="459.8" y="1733" width="0.4" height="15.0" fill="rgb(220,76,54)" rx="2" ry="2" />
<text  x="462.81" y="1743.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="1052.3" y="1973" width="0.2" height="15.0" fill="rgb(250,172,18)" rx="2" ry="2" />
<text  x="1055.30" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="452.2" y="1973" width="0.2" height="15.0" fill="rgb(216,47,25)" rx="2" ry="2" />
<text  x="455.23" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (72 samples, 1.22%)</title><rect x="218.3" y="1941" width="14.4" height="15.0" fill="rgb(241,214,38)" rx="2" ry="2" />
<text  x="221.34" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="105.0" y="1333" width="16.8" height="15.0" fill="rgb(237,221,38)" rx="2" ry="2" />
<text  x="107.99" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (14 samples, 0.24%)</title><rect x="471.0" y="1925" width="2.8" height="15.0" fill="rgb(252,62,28)" rx="2" ry="2" />
<text  x="473.98" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="848.4" y="1877" width="0.2" height="15.0" fill="rgb(206,33,5)" rx="2" ry="2" />
<text  x="851.35" y="1887.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.02%)</title><rect x="12.4" y="2005" width="0.2" height="15.0" fill="rgb(206,196,24)" rx="2" ry="2" />
<text  x="15.39" y="2015.5" ></text>
</g>
<g >
<title>__fdget (12 samples, 0.20%)</title><rect x="336.1" y="1941" width="2.4" height="15.0" fill="rgb(235,135,14)" rx="2" ry="2" />
<text  x="339.08" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="889.1" y="1989" width="0.2" height="15.0" fill="rgb(245,25,11)" rx="2" ry="2" />
<text  x="892.06" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="66.3" y="1973" width="0.2" height="15.0" fill="rgb(223,0,47)" rx="2" ry="2" />
<text  x="69.28" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (3 samples, 0.05%)</title><rect x="223.9" y="1877" width="0.6" height="15.0" fill="rgb(213,32,0)" rx="2" ry="2" />
<text  x="226.93" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="358.4" y="1957" width="0.2" height="15.0" fill="rgb(210,19,8)" rx="2" ry="2" />
<text  x="361.43" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="395.8" y="1893" width="0.1" height="15.0" fill="rgb(231,125,19)" rx="2" ry="2" />
<text  x="398.75" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="202.2" y="2005" width="0.2" height="15.0" fill="rgb(228,211,9)" rx="2" ry="2" />
<text  x="205.18" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="287.2" y="1733" width="0.2" height="15.0" fill="rgb(212,183,8)" rx="2" ry="2" />
<text  x="290.19" y="1743.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1122.1" y="1669" width="0.2" height="15.0" fill="rgb(254,192,17)" rx="2" ry="2" />
<text  x="1125.15" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="23.0" y="1989" width="0.2" height="15.0" fill="rgb(216,120,35)" rx="2" ry="2" />
<text  x="25.97" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="951.1" y="1573" width="0.2" height="15.0" fill="rgb(208,131,3)" rx="2" ry="2" />
<text  x="954.13" y="1583.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (1 samples, 0.02%)</title><rect x="28.4" y="1973" width="0.2" height="15.0" fill="rgb(211,160,48)" rx="2" ry="2" />
<text  x="31.36" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="91.2" y="1941" width="0.2" height="15.0" fill="rgb(230,146,36)" rx="2" ry="2" />
<text  x="94.22" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1018.6" y="1797" width="0.2" height="15.0" fill="rgb(208,79,16)" rx="2" ry="2" />
<text  x="1021.58" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="121.0" y="117" width="0.2" height="15.0" fill="rgb(231,106,4)" rx="2" ry="2" />
<text  x="123.96" y="127.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="60.7" y="1877" width="0.6" height="15.0" fill="rgb(235,116,20)" rx="2" ry="2" />
<text  x="63.69" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncReader::~AsyncReader (1 samples, 0.02%)</title><rect x="74.5" y="1941" width="0.2" height="15.0" fill="rgb(214,147,0)" rx="2" ry="2" />
<text  x="77.46" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="87.4" y="1973" width="0.2" height="15.0" fill="rgb(234,121,30)" rx="2" ry="2" />
<text  x="90.43" y="1983.5" ></text>
</g>
<g >
<title>copy_page_to_iter (11 samples, 0.19%)</title><rect x="1102.2" y="1909" width="2.2" height="15.0" fill="rgb(252,4,23)" rx="2" ry="2" />
<text  x="1105.19" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="65.9" y="1957" width="0.2" height="15.0" fill="rgb(224,139,29)" rx="2" ry="2" />
<text  x="68.88" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1108.6" y="1557" width="0.4" height="15.0" fill="rgb(234,222,33)" rx="2" ry="2" />
<text  x="1111.58" y="1567.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="962.1" y="1925" width="0.8" height="15.0" fill="rgb(248,172,27)" rx="2" ry="2" />
<text  x="965.10" y="1935.5" ></text>
</g>
<g >
<title>snprintf@plt (2 samples, 0.03%)</title><rect x="1019.2" y="2037" width="0.4" height="15.0" fill="rgb(209,142,19)" rx="2" ry="2" />
<text  x="1022.18" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_queue_purge (1 samples, 0.02%)</title><rect x="451.8" y="1637" width="0.2" height="15.0" fill="rgb(223,90,44)" rx="2" ry="2" />
<text  x="454.83" y="1647.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="408.5" y="1941" width="0.6" height="15.0" fill="rgb(206,107,16)" rx="2" ry="2" />
<text  x="411.52" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="154.5" y="1861" width="0.6" height="15.0" fill="rgb(224,75,38)" rx="2" ry="2" />
<text  x="157.48" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="120.6" y="181" width="0.2" height="15.0" fill="rgb(239,88,19)" rx="2" ry="2" />
<text  x="123.56" y="191.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="1135.5" y="2053" width="0.2" height="15.0" fill="rgb(246,161,47)" rx="2" ry="2" />
<text  x="1138.52" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1989" width="0.2" height="15.0" fill="rgb(235,164,5)" rx="2" ry="2" />
<text  x="1143.31" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (11 samples, 0.19%)</title><rect x="572.0" y="2005" width="2.2" height="15.0" fill="rgb(218,217,46)" rx="2" ry="2" />
<text  x="574.96" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="744.8" y="1749" width="0.2" height="15.0" fill="rgb(212,65,34)" rx="2" ry="2" />
<text  x="747.78" y="1759.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="909.4" y="1701" width="0.2" height="15.0" fill="rgb(253,87,54)" rx="2" ry="2" />
<text  x="912.42" y="1711.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="730.6" y="1701" width="0.2" height="15.0" fill="rgb(237,189,34)" rx="2" ry="2" />
<text  x="733.61" y="1711.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (6 samples, 0.10%)</title><rect x="849.9" y="1941" width="1.2" height="15.0" fill="rgb(212,27,7)" rx="2" ry="2" />
<text  x="852.95" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="226.9" y="1765" width="0.2" height="15.0" fill="rgb(237,108,54)" rx="2" ry="2" />
<text  x="229.92" y="1775.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="91.0" y="1573" width="0.2" height="15.0" fill="rgb(222,185,9)" rx="2" ry="2" />
<text  x="94.02" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (75 samples, 1.27%)</title><rect x="1149.1" y="1989" width="15.0" height="15.0" fill="rgb(215,195,16)" rx="2" ry="2" />
<text  x="1152.09" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="575.8" y="1957" width="0.2" height="15.0" fill="rgb(225,186,13)" rx="2" ry="2" />
<text  x="578.75" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="909.4" y="1797" width="0.2" height="15.0" fill="rgb(227,198,7)" rx="2" ry="2" />
<text  x="912.42" y="1807.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="671.9" y="1877" width="0.2" height="15.0" fill="rgb(252,48,34)" rx="2" ry="2" />
<text  x="674.94" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="763.1" y="1669" width="0.2" height="15.0" fill="rgb(207,31,17)" rx="2" ry="2" />
<text  x="766.14" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::runLoop (1 samples, 0.02%)</title><rect x="158.3" y="1941" width="0.2" height="15.0" fill="rgb(236,11,9)" rx="2" ry="2" />
<text  x="161.27" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (6 samples, 0.10%)</title><rect x="645.4" y="2005" width="1.2" height="15.0" fill="rgb(251,53,28)" rx="2" ry="2" />
<text  x="648.40" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (12 samples, 0.20%)</title><rect x="68.1" y="1957" width="2.4" height="15.0" fill="rgb(231,213,19)" rx="2" ry="2" />
<text  x="71.07" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="63.9" y="1813" width="0.2" height="15.0" fill="rgb(248,195,29)" rx="2" ry="2" />
<text  x="66.88" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (17 samples, 0.29%)</title><rect x="413.7" y="2021" width="3.4" height="15.0" fill="rgb(220,8,43)" rx="2" ry="2" />
<text  x="416.71" y="2031.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="332.3" y="1877" width="0.2" height="15.0" fill="rgb(250,159,10)" rx="2" ry="2" />
<text  x="335.29" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (6 samples, 0.10%)</title><rect x="289.4" y="1509" width="1.2" height="15.0" fill="rgb(251,100,2)" rx="2" ry="2" />
<text  x="292.38" y="1519.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="119.8" y="37" width="0.2" height="15.0" fill="rgb(239,221,24)" rx="2" ry="2" />
<text  x="122.76" y="47.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="209.0" y="1877" width="0.8" height="15.0" fill="rgb(225,84,43)" rx="2" ry="2" />
<text  x="211.96" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="202.2" y="1893" width="0.2" height="15.0" fill="rgb(220,105,33)" rx="2" ry="2" />
<text  x="205.18" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="91.0" y="1813" width="0.2" height="15.0" fill="rgb(219,84,9)" rx="2" ry="2" />
<text  x="94.02" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="884.1" y="1925" width="0.2" height="15.0" fill="rgb(212,107,1)" rx="2" ry="2" />
<text  x="887.07" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="999.4" y="1909" width="0.2" height="15.0" fill="rgb(211,135,34)" rx="2" ry="2" />
<text  x="1002.42" y="1919.5" ></text>
</g>
<g >
<title>___sys_sendmsg (1 samples, 0.02%)</title><rect x="246.9" y="1973" width="0.2" height="15.0" fill="rgb(216,219,8)" rx="2" ry="2" />
<text  x="249.88" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="117.2" y="53" width="0.2" height="15.0" fill="rgb(222,36,36)" rx="2" ry="2" />
<text  x="120.16" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (29 samples, 0.49%)</title><rect x="922.4" y="1957" width="5.8" height="15.0" fill="rgb(230,68,13)" rx="2" ry="2" />
<text  x="925.39" y="1967.5" ></text>
</g>
<g >
<title>isspace (3 samples, 0.05%)</title><rect x="1007.8" y="2021" width="0.6" height="15.0" fill="rgb(253,127,39)" rx="2" ry="2" />
<text  x="1010.80" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="861.9" y="1957" width="0.6" height="15.0" fill="rgb(224,3,47)" rx="2" ry="2" />
<text  x="864.92" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="633.8" y="1941" width="0.4" height="15.0" fill="rgb(211,121,26)" rx="2" ry="2" />
<text  x="636.83" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (118 samples, 2.00%)</title><rect x="211.6" y="1989" width="23.5" height="15.0" fill="rgb(225,67,27)" rx="2" ry="2" />
<text  x="214.56" y="1999.5" >f..</text>
</g>
<g >
<title>[unknown] (97 samples, 1.64%)</title><rect x="104.2" y="1781" width="19.3" height="15.0" fill="rgb(234,63,41)" rx="2" ry="2" />
<text  x="107.19" y="1791.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (3 samples, 0.05%)</title><rect x="400.1" y="1893" width="0.6" height="15.0" fill="rgb(230,107,8)" rx="2" ry="2" />
<text  x="403.14" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="150.5" y="1861" width="0.4" height="15.0" fill="rgb(247,148,41)" rx="2" ry="2" />
<text  x="153.49" y="1871.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="1144.7" y="1957" width="0.2" height="15.0" fill="rgb(254,57,22)" rx="2" ry="2" />
<text  x="1147.70" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="405" width="15.8" height="15.0" fill="rgb(231,37,22)" rx="2" ry="2" />
<text  x="108.39" y="415.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (2 samples, 0.03%)</title><rect x="986.6" y="1909" width="0.4" height="15.0" fill="rgb(228,109,3)" rx="2" ry="2" />
<text  x="989.65" y="1919.5" ></text>
</g>
<g >
<title>__d_alloc (17 samples, 0.29%)</title><rect x="403.3" y="1925" width="3.4" height="15.0" fill="rgb(226,187,30)" rx="2" ry="2" />
<text  x="406.33" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (65 samples, 1.10%)</title><rect x="551.6" y="2005" width="13.0" height="15.0" fill="rgb(244,162,25)" rx="2" ry="2" />
<text  x="554.61" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (8 samples, 0.14%)</title><rect x="220.3" y="1893" width="1.6" height="15.0" fill="rgb(240,58,31)" rx="2" ry="2" />
<text  x="223.34" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="121.0" y="229" width="0.2" height="15.0" fill="rgb(205,158,20)" rx="2" ry="2" />
<text  x="123.96" y="239.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="120.8" y="149" width="0.2" height="15.0" fill="rgb(246,122,25)" rx="2" ry="2" />
<text  x="123.76" y="159.5" ></text>
</g>
<g >
<title>sched_clock_cpu (3 samples, 0.05%)</title><rect x="1117.8" y="1909" width="0.6" height="15.0" fill="rgb(235,229,4)" rx="2" ry="2" />
<text  x="1120.76" y="1919.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="837.8" y="1909" width="0.2" height="15.0" fill="rgb(214,135,3)" rx="2" ry="2" />
<text  x="840.78" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="121.2" y="229" width="0.2" height="15.0" fill="rgb(251,89,7)" rx="2" ry="2" />
<text  x="124.16" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="56.5" y="1893" width="0.2" height="15.0" fill="rgb(231,147,52)" rx="2" ry="2" />
<text  x="59.50" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="124.7" y="1925" width="0.2" height="15.0" fill="rgb(222,2,14)" rx="2" ry="2" />
<text  x="127.75" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="892.1" y="1893" width="0.2" height="15.0" fill="rgb(238,89,17)" rx="2" ry="2" />
<text  x="895.06" y="1903.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1018.6" y="1781" width="0.2" height="15.0" fill="rgb(220,28,39)" rx="2" ry="2" />
<text  x="1021.58" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="202.2" y="1861" width="0.2" height="15.0" fill="rgb(214,29,37)" rx="2" ry="2" />
<text  x="205.18" y="1871.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="806.2" y="1653" width="0.2" height="15.0" fill="rgb(210,196,15)" rx="2" ry="2" />
<text  x="809.25" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="100.6" y="1957" width="0.2" height="15.0" fill="rgb(234,229,50)" rx="2" ry="2" />
<text  x="103.60" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="805.8" y="1509" width="0.4" height="15.0" fill="rgb(247,28,50)" rx="2" ry="2" />
<text  x="808.85" y="1519.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="185.4" y="1957" width="0.2" height="15.0" fill="rgb(212,216,13)" rx="2" ry="2" />
<text  x="188.41" y="1967.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="288.8" y="1525" width="0.4" height="15.0" fill="rgb(216,103,10)" rx="2" ry="2" />
<text  x="291.79" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (5 samples, 0.08%)</title><rect x="643.4" y="1973" width="1.0" height="15.0" fill="rgb(215,190,24)" rx="2" ry="2" />
<text  x="646.40" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (5 samples, 0.08%)</title><rect x="338.9" y="2021" width="1.0" height="15.0" fill="rgb(216,41,21)" rx="2" ry="2" />
<text  x="341.88" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (14 samples, 0.24%)</title><rect x="287.8" y="1669" width="2.8" height="15.0" fill="rgb(216,115,22)" rx="2" ry="2" />
<text  x="290.79" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (1 samples, 0.02%)</title><rect x="135.1" y="2005" width="0.2" height="15.0" fill="rgb(221,88,40)" rx="2" ry="2" />
<text  x="138.12" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="805.8" y="1589" width="0.4" height="15.0" fill="rgb(206,110,42)" rx="2" ry="2" />
<text  x="808.85" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="900.4" y="1717" width="0.2" height="15.0" fill="rgb(216,94,15)" rx="2" ry="2" />
<text  x="903.44" y="1727.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="65.1" y="1845" width="0.2" height="15.0" fill="rgb(225,178,25)" rx="2" ry="2" />
<text  x="68.08" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="150.7" y="1733" width="0.2" height="15.0" fill="rgb(230,70,50)" rx="2" ry="2" />
<text  x="153.69" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (101 samples, 1.71%)</title><rect x="581.7" y="1989" width="20.2" height="15.0" fill="rgb(254,67,37)" rx="2" ry="2" />
<text  x="584.74" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="470.6" y="1877" width="0.2" height="15.0" fill="rgb(228,72,0)" rx="2" ry="2" />
<text  x="473.59" y="1887.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="70.1" y="1861" width="0.2" height="15.0" fill="rgb(235,148,6)" rx="2" ry="2" />
<text  x="73.07" y="1871.5" ></text>
</g>
<g >
<title>dput.part.26 (83 samples, 1.40%)</title><rect x="725.6" y="1781" width="16.6" height="15.0" fill="rgb(241,183,22)" rx="2" ry="2" />
<text  x="728.62" y="1791.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1018.0" y="2037" width="0.2" height="15.0" fill="rgb(246,136,8)" rx="2" ry="2" />
<text  x="1020.98" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="949.1" y="1973" width="0.2" height="15.0" fill="rgb(218,82,26)" rx="2" ry="2" />
<text  x="952.13" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="888.9" y="1957" width="0.2" height="15.0" fill="rgb(206,172,8)" rx="2" ry="2" />
<text  x="891.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.29%)</title><rect x="105.4" y="149" width="15.2" height="15.0" fill="rgb(229,161,14)" rx="2" ry="2" />
<text  x="108.39" y="159.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (6 samples, 0.10%)</title><rect x="183.8" y="1989" width="1.2" height="15.0" fill="rgb(245,41,50)" rx="2" ry="2" />
<text  x="186.82" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="133.5" y="1813" width="0.2" height="15.0" fill="rgb(233,18,51)" rx="2" ry="2" />
<text  x="136.53" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="978.3" y="1989" width="0.2" height="15.0" fill="rgb(252,174,38)" rx="2" ry="2" />
<text  x="981.27" y="1999.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="742.2" y="1781" width="0.2" height="15.0" fill="rgb(225,123,7)" rx="2" ry="2" />
<text  x="745.19" y="1791.5" ></text>
</g>
<g >
<title>inet_recvmsg (328 samples, 5.55%)</title><rect x="1053.7" y="1957" width="65.5" height="15.0" fill="rgb(232,110,19)" rx="2" ry="2" />
<text  x="1056.70" y="1967.5" >inet_re..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="538.8" y="1877" width="0.8" height="15.0" fill="rgb(222,212,3)" rx="2" ry="2" />
<text  x="541.83" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="971.3" y="2037" width="0.2" height="15.0" fill="rgb(225,201,40)" rx="2" ry="2" />
<text  x="974.28" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="637.2" y="1941" width="0.4" height="15.0" fill="rgb(206,170,17)" rx="2" ry="2" />
<text  x="640.22" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="884.1" y="1829" width="0.2" height="15.0" fill="rgb(240,13,53)" rx="2" ry="2" />
<text  x="887.07" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="892.1" y="1925" width="0.2" height="15.0" fill="rgb(209,107,45)" rx="2" ry="2" />
<text  x="895.06" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::(anonymous namespace)::findFirstNonDigit (1 samples, 0.02%)</title><rect x="999.4" y="2021" width="0.2" height="15.0" fill="rgb(226,18,13)" rx="2" ry="2" />
<text  x="1002.42" y="2031.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="789.9" y="1509" width="0.4" height="15.0" fill="rgb(230,124,6)" rx="2" ry="2" />
<text  x="792.88" y="1519.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 0.07%)</title><rect x="776.9" y="1589" width="0.8" height="15.0" fill="rgb(239,16,4)" rx="2" ry="2" />
<text  x="779.91" y="1599.5" ></text>
</g>
<g >
<title>sock_sendmsg (427 samples, 7.22%)</title><rect x="250.5" y="1941" width="85.2" height="15.0" fill="rgb(229,85,24)" rx="2" ry="2" />
<text  x="253.47" y="1951.5" >sock_sendmsg</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="535.0" y="1941" width="0.4" height="15.0" fill="rgb(212,54,8)" rx="2" ry="2" />
<text  x="538.04" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="844.4" y="1861" width="0.2" height="15.0" fill="rgb(205,67,52)" rx="2" ry="2" />
<text  x="847.36" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="462.0" y="1877" width="0.2" height="15.0" fill="rgb(225,168,41)" rx="2" ry="2" />
<text  x="465.00" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.2" y="2005" width="0.2" height="15.0" fill="rgb(207,138,15)" rx="2" ry="2" />
<text  x="1186.21" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="726.8" y="1733" width="0.6" height="15.0" fill="rgb(236,18,46)" rx="2" ry="2" />
<text  x="729.82" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (30 samples, 0.51%)</title><rect x="1109.0" y="1669" width="6.0" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="1111.98" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1139.5" y="1925" width="0.2" height="15.0" fill="rgb(247,19,1)" rx="2" ry="2" />
<text  x="1142.51" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="119.8" y="53" width="0.2" height="15.0" fill="rgb(229,70,37)" rx="2" ry="2" />
<text  x="122.76" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="517.5" y="1957" width="0.2" height="15.0" fill="rgb(250,109,1)" rx="2" ry="2" />
<text  x="520.48" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::~AsyncSocketBase (1 samples, 0.02%)</title><rect x="73.3" y="1957" width="0.2" height="15.0" fill="rgb(234,75,31)" rx="2" ry="2" />
<text  x="76.26" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="170.6" y="1989" width="0.2" height="15.0" fill="rgb(246,213,43)" rx="2" ry="2" />
<text  x="173.65" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="32.6" y="1621" width="0.1" height="15.0" fill="rgb(209,140,23)" rx="2" ry="2" />
<text  x="35.55" y="1631.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1147.1" y="1845" width="0.6" height="15.0" fill="rgb(244,203,18)" rx="2" ry="2" />
<text  x="1150.09" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="805.8" y="1621" width="0.4" height="15.0" fill="rgb(238,55,46)" rx="2" ry="2" />
<text  x="808.85" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="817.6" y="1669" width="0.2" height="15.0" fill="rgb(249,4,8)" rx="2" ry="2" />
<text  x="820.62" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="91.0" y="1941" width="0.2" height="15.0" fill="rgb(231,114,8)" rx="2" ry="2" />
<text  x="94.02" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="121.0" y="197" width="0.2" height="15.0" fill="rgb(219,127,3)" rx="2" ry="2" />
<text  x="123.96" y="207.5" ></text>
</g>
<g >
<title>security_inode_alloc (2 samples, 0.03%)</title><rect x="391.0" y="1893" width="0.4" height="15.0" fill="rgb(252,191,9)" rx="2" ry="2" />
<text  x="393.96" y="1903.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (86 samples, 1.45%)</title><rect x="658.6" y="1957" width="17.1" height="15.0" fill="rgb(236,47,46)" rx="2" ry="2" />
<text  x="661.57" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="121.2" y="213" width="0.2" height="15.0" fill="rgb(216,0,5)" rx="2" ry="2" />
<text  x="124.16" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="636.2" y="1925" width="0.4" height="15.0" fill="rgb(226,220,50)" rx="2" ry="2" />
<text  x="639.22" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="614.3" y="1973" width="0.2" height="15.0" fill="rgb(248,72,9)" rx="2" ry="2" />
<text  x="617.27" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (40 samples, 0.68%)</title><rect x="789.5" y="1541" width="8.0" height="15.0" fill="rgb(244,172,19)" rx="2" ry="2" />
<text  x="792.48" y="1551.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="650.4" y="2005" width="0.4" height="15.0" fill="rgb(252,142,16)" rx="2" ry="2" />
<text  x="653.39" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="120.2" y="53" width="0.2" height="15.0" fill="rgb(244,124,44)" rx="2" ry="2" />
<text  x="123.16" y="63.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="914.2" y="1765" width="0.2" height="15.0" fill="rgb(214,49,23)" rx="2" ry="2" />
<text  x="917.21" y="1775.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="964.5" y="2005" width="0.2" height="15.0" fill="rgb(214,226,29)" rx="2" ry="2" />
<text  x="967.50" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="962.1" y="1845" width="0.2" height="15.0" fill="rgb(206,165,20)" rx="2" ry="2" />
<text  x="965.10" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.3" y="1877" width="0.2" height="15.0" fill="rgb(247,160,42)" rx="2" ry="2" />
<text  x="127.35" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="90.0" y="1925" width="0.2" height="15.0" fill="rgb(224,134,13)" rx="2" ry="2" />
<text  x="93.02" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="695.5" y="1941" width="0.6" height="15.0" fill="rgb(219,8,39)" rx="2" ry="2" />
<text  x="698.49" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (41 samples, 0.69%)</title><rect x="874.3" y="1957" width="8.2" height="15.0" fill="rgb(237,146,48)" rx="2" ry="2" />
<text  x="877.30" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (3 samples, 0.05%)</title><rect x="843.4" y="1909" width="0.6" height="15.0" fill="rgb(214,65,25)" rx="2" ry="2" />
<text  x="846.36" y="1919.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (4 samples, 0.07%)</title><rect x="602.1" y="2005" width="0.8" height="15.0" fill="rgb(216,185,43)" rx="2" ry="2" />
<text  x="605.10" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="619.7" y="1957" width="0.6" height="15.0" fill="rgb(238,37,29)" rx="2" ry="2" />
<text  x="622.66" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7 samples, 0.12%)</title><rect x="387.6" y="1925" width="1.4" height="15.0" fill="rgb(223,89,33)" rx="2" ry="2" />
<text  x="390.57" y="1935.5" ></text>
</g>
<g >
<title>__fdget (18 samples, 0.30%)</title><rect x="1123.1" y="1957" width="3.6" height="15.0" fill="rgb(250,127,22)" rx="2" ry="2" />
<text  x="1126.15" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="626.4" y="2005" width="1.0" height="15.0" fill="rgb(205,134,17)" rx="2" ry="2" />
<text  x="629.44" y="2015.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="893.7" y="2005" width="0.2" height="15.0" fill="rgb(208,174,29)" rx="2" ry="2" />
<text  x="896.65" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (11 samples, 0.19%)</title><rect x="669.7" y="1861" width="2.2" height="15.0" fill="rgb(219,76,9)" rx="2" ry="2" />
<text  x="672.75" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="798.9" y="1493" width="0.2" height="15.0" fill="rgb(244,213,46)" rx="2" ry="2" />
<text  x="801.86" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="105.8" y="37" width="0.4" height="15.0" fill="rgb(225,94,19)" rx="2" ry="2" />
<text  x="108.79" y="47.5" ></text>
</g>
<g >
<title>sys_getsockname (1 samples, 0.02%)</title><rect x="598.5" y="1909" width="0.2" height="15.0" fill="rgb(218,64,33)" rx="2" ry="2" />
<text  x="601.50" y="1919.5" ></text>
</g>
<g >
<title>tcp_push (258 samples, 4.36%)</title><rect x="274.8" y="1877" width="51.5" height="15.0" fill="rgb(213,13,43)" rx="2" ry="2" />
<text  x="277.82" y="1887.5" >tcp_p..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="913.4" y="1989" width="0.2" height="15.0" fill="rgb(231,124,3)" rx="2" ry="2" />
<text  x="916.41" y="1999.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="407.9" y="1941" width="0.2" height="15.0" fill="rgb(219,148,8)" rx="2" ry="2" />
<text  x="410.92" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="568.8" y="1717" width="0.2" height="15.0" fill="rgb(211,156,42)" rx="2" ry="2" />
<text  x="571.77" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.07%)</title><rect x="126.7" y="1989" width="0.8" height="15.0" fill="rgb(244,33,35)" rx="2" ry="2" />
<text  x="129.74" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1093" width="16.0" height="15.0" fill="rgb(212,198,46)" rx="2" ry="2" />
<text  x="108.39" y="1103.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="182.6" y="1941" width="0.2" height="15.0" fill="rgb(254,193,35)" rx="2" ry="2" />
<text  x="185.62" y="1951.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="568.2" y="1957" width="0.2" height="15.0" fill="rgb(210,40,5)" rx="2" ry="2" />
<text  x="571.17" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="865.3" y="1989" width="0.2" height="15.0" fill="rgb(238,17,3)" rx="2" ry="2" />
<text  x="868.32" y="1999.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="536.8" y="1973" width="0.2" height="15.0" fill="rgb(239,138,53)" rx="2" ry="2" />
<text  x="539.84" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="116.8" y="37" width="0.4" height="15.0" fill="rgb(207,109,29)" rx="2" ry="2" />
<text  x="119.76" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="816.2" y="1685" width="0.2" height="15.0" fill="rgb(249,49,3)" rx="2" ry="2" />
<text  x="819.22" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="146.7" y="1893" width="0.2" height="15.0" fill="rgb(250,22,51)" rx="2" ry="2" />
<text  x="149.70" y="1903.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="121.2" y="149" width="0.2" height="15.0" fill="rgb(214,137,8)" rx="2" ry="2" />
<text  x="124.16" y="159.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (32 samples, 0.54%)</title><rect x="1108.6" y="1765" width="6.4" height="15.0" fill="rgb(232,62,49)" rx="2" ry="2" />
<text  x="1111.58" y="1775.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="11.6" y="1989" width="0.8" height="15.0" fill="rgb(219,84,31)" rx="2" ry="2" />
<text  x="14.60" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="1181.8" y="2005" width="0.4" height="15.0" fill="rgb(226,83,5)" rx="2" ry="2" />
<text  x="1184.82" y="2015.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="363.0" y="1909" width="0.2" height="15.0" fill="rgb(209,86,39)" rx="2" ry="2" />
<text  x="366.02" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="121.0" y="85" width="0.2" height="15.0" fill="rgb(249,50,4)" rx="2" ry="2" />
<text  x="123.96" y="95.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1053.3" y="1957" width="0.4" height="15.0" fill="rgb(245,187,35)" rx="2" ry="2" />
<text  x="1056.30" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (15 samples, 0.25%)</title><rect x="12.6" y="1925" width="3.0" height="15.0" fill="rgb(224,43,20)" rx="2" ry="2" />
<text  x="15.59" y="1935.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="321.1" y="1605" width="0.2" height="15.0" fill="rgb(210,89,16)" rx="2" ry="2" />
<text  x="324.11" y="1615.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="941.7" y="1989" width="0.6" height="15.0" fill="rgb(208,149,5)" rx="2" ry="2" />
<text  x="944.75" y="1999.5" ></text>
</g>
<g >
<title>event_set (4 samples, 0.07%)</title><rect x="541.4" y="1973" width="0.8" height="15.0" fill="rgb(238,204,39)" rx="2" ry="2" />
<text  x="544.43" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (84 samples, 1.42%)</title><rect x="658.8" y="1941" width="16.7" height="15.0" fill="rgb(226,184,1)" rx="2" ry="2" />
<text  x="661.77" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (7 samples, 0.12%)</title><rect x="610.1" y="1845" width="1.4" height="15.0" fill="rgb(236,13,14)" rx="2" ry="2" />
<text  x="613.08" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="999.4" y="1957" width="0.2" height="15.0" fill="rgb(224,71,3)" rx="2" ry="2" />
<text  x="1002.42" y="1967.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (3 samples, 0.05%)</title><rect x="743.0" y="1781" width="0.6" height="15.0" fill="rgb(224,93,54)" rx="2" ry="2" />
<text  x="745.98" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="517.5" y="1941" width="0.2" height="15.0" fill="rgb(239,67,42)" rx="2" ry="2" />
<text  x="520.48" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="884.1" y="1845" width="0.2" height="15.0" fill="rgb(215,206,18)" rx="2" ry="2" />
<text  x="887.07" y="1855.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="105.0" y="1317" width="0.2" height="15.0" fill="rgb(219,167,24)" rx="2" ry="2" />
<text  x="107.99" y="1327.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="53.9" y="1813" width="0.2" height="15.0" fill="rgb(233,158,39)" rx="2" ry="2" />
<text  x="56.90" y="1823.5" ></text>
</g>
<g >
<title>__d_instantiate (1 samples, 0.02%)</title><rect x="396.5" y="1941" width="0.2" height="15.0" fill="rgb(211,183,45)" rx="2" ry="2" />
<text  x="399.55" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="999.4" y="1973" width="0.2" height="15.0" fill="rgb(218,201,42)" rx="2" ry="2" />
<text  x="1002.42" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="885.7" y="1877" width="0.2" height="15.0" fill="rgb(246,112,28)" rx="2" ry="2" />
<text  x="888.67" y="1887.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr (1 samples, 0.02%)</title><rect x="927.6" y="1909" width="0.2" height="15.0" fill="rgb(239,189,7)" rx="2" ry="2" />
<text  x="930.58" y="1919.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="273.2" y="1829" width="0.2" height="15.0" fill="rgb(246,222,19)" rx="2" ry="2" />
<text  x="276.22" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="457.8" y="1861" width="0.2" height="15.0" fill="rgb(217,78,50)" rx="2" ry="2" />
<text  x="460.81" y="1871.5" ></text>
</g>
<g >
<title>tcp_poll (38 samples, 0.64%)</title><rect x="453.6" y="1941" width="7.6" height="15.0" fill="rgb(218,28,37)" rx="2" ry="2" />
<text  x="456.62" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="538.4" y="1925" width="0.2" height="15.0" fill="rgb(227,68,38)" rx="2" ry="2" />
<text  x="541.44" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="516.1" y="1957" width="0.2" height="15.0" fill="rgb(207,129,54)" rx="2" ry="2" />
<text  x="519.08" y="1967.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="474.0" y="1589" width="0.2" height="15.0" fill="rgb(213,130,24)" rx="2" ry="2" />
<text  x="476.98" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="918.8" y="1925" width="0.4" height="15.0" fill="rgb(235,104,5)" rx="2" ry="2" />
<text  x="921.80" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="913.4" y="2005" width="0.2" height="15.0" fill="rgb(252,223,3)" rx="2" ry="2" />
<text  x="916.41" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="91.0" y="1685" width="0.2" height="15.0" fill="rgb(239,73,3)" rx="2" ry="2" />
<text  x="94.02" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="763.1" y="1637" width="0.2" height="15.0" fill="rgb(205,149,17)" rx="2" ry="2" />
<text  x="766.14" y="1647.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (32 samples, 0.54%)</title><rect x="318.3" y="1829" width="6.4" height="15.0" fill="rgb(237,120,50)" rx="2" ry="2" />
<text  x="321.32" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="568.8" y="1733" width="0.2" height="15.0" fill="rgb(210,44,32)" rx="2" ry="2" />
<text  x="571.77" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::~unique_ptr (7 samples, 0.12%)</title><rect x="80.2" y="1957" width="1.4" height="15.0" fill="rgb(237,16,8)" rx="2" ry="2" />
<text  x="83.25" y="1967.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1182.4" y="1989" width="0.2" height="15.0" fill="rgb(252,153,21)" rx="2" ry="2" />
<text  x="1185.42" y="1999.5" ></text>
</g>
<g >
<title>d_set_d_op (1 samples, 0.02%)</title><rect x="404.3" y="1909" width="0.2" height="15.0" fill="rgb(250,19,17)" rx="2" ry="2" />
<text  x="407.33" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="982.1" y="1781" width="0.2" height="15.0" fill="rgb(217,53,21)" rx="2" ry="2" />
<text  x="985.06" y="1791.5" ></text>
</g>
<g >
<title>sys_close (13 samples, 0.22%)</title><rect x="830.4" y="1861" width="2.6" height="15.0" fill="rgb(237,79,23)" rx="2" ry="2" />
<text  x="833.39" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (5 samples, 0.08%)</title><rect x="823.8" y="1701" width="1.0" height="15.0" fill="rgb(208,229,28)" rx="2" ry="2" />
<text  x="826.81" y="1711.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="59.7" y="1925" width="0.2" height="15.0" fill="rgb(220,130,32)" rx="2" ry="2" />
<text  x="62.69" y="1935.5" ></text>
</g>
<g >
<title>skb_clone (28 samples, 0.47%)</title><rect x="311.5" y="1813" width="5.6" height="15.0" fill="rgb(251,215,24)" rx="2" ry="2" />
<text  x="314.54" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1180.8" y="2021" width="0.2" height="15.0" fill="rgb(227,194,11)" rx="2" ry="2" />
<text  x="1183.82" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1080.6" y="1557" width="0.2" height="15.0" fill="rgb(250,20,13)" rx="2" ry="2" />
<text  x="1083.64" y="1567.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="393.8" y="1861" width="0.8" height="15.0" fill="rgb(214,165,36)" rx="2" ry="2" />
<text  x="396.75" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="999.4" y="1829" width="0.2" height="15.0" fill="rgb(241,158,26)" rx="2" ry="2" />
<text  x="1002.42" y="1839.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="702.3" y="1957" width="0.2" height="15.0" fill="rgb(226,182,27)" rx="2" ry="2" />
<text  x="705.27" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="373.4" y="1909" width="0.2" height="15.0" fill="rgb(234,203,32)" rx="2" ry="2" />
<text  x="376.40" y="1919.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1067.5" y="1669" width="0.2" height="15.0" fill="rgb(224,217,30)" rx="2" ry="2" />
<text  x="1070.47" y="1679.5" ></text>
</g>
<g >
<title>__fdget_raw (3 samples, 0.05%)</title><rect x="560.4" y="1925" width="0.6" height="15.0" fill="rgb(227,26,48)" rx="2" ry="2" />
<text  x="563.39" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="81.2" y="1909" width="0.2" height="15.0" fill="rgb(216,37,9)" rx="2" ry="2" />
<text  x="84.24" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="121.2" y="293" width="0.2" height="15.0" fill="rgb(214,111,45)" rx="2" ry="2" />
<text  x="124.16" y="303.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (80 samples, 1.35%)</title><rect x="140.9" y="1941" width="16.0" height="15.0" fill="rgb(231,193,49)" rx="2" ry="2" />
<text  x="143.91" y="1951.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="815.4" y="1685" width="0.6" height="15.0" fill="rgb(229,134,21)" rx="2" ry="2" />
<text  x="818.43" y="1695.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="363.2" y="1477" width="0.2" height="15.0" fill="rgb(241,182,15)" rx="2" ry="2" />
<text  x="366.22" y="1487.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.02%)</title><rect x="832.4" y="1797" width="0.2" height="15.0" fill="rgb(205,111,23)" rx="2" ry="2" />
<text  x="835.39" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="620.1" y="1925" width="0.2" height="15.0" fill="rgb(237,33,33)" rx="2" ry="2" />
<text  x="623.06" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="568.2" y="1909" width="0.2" height="15.0" fill="rgb(215,225,24)" rx="2" ry="2" />
<text  x="571.17" y="1919.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="122.2" y="1541" width="0.2" height="15.0" fill="rgb(244,121,42)" rx="2" ry="2" />
<text  x="125.15" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="561.8" y="1909" width="0.2" height="15.0" fill="rgb(244,61,37)" rx="2" ry="2" />
<text  x="564.78" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="698.7" y="1989" width="0.2" height="15.0" fill="rgb(242,137,42)" rx="2" ry="2" />
<text  x="701.68" y="1999.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1088.0" y="1765" width="0.2" height="15.0" fill="rgb(235,172,1)" rx="2" ry="2" />
<text  x="1091.02" y="1775.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1088.0" y="1797" width="0.4" height="15.0" fill="rgb(242,47,29)" rx="2" ry="2" />
<text  x="1091.02" y="1807.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="274.4" y="1813" width="0.2" height="15.0" fill="rgb(233,74,22)" rx="2" ry="2" />
<text  x="277.42" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.08%)</title><rect x="659.6" y="1925" width="12.7" height="15.0" fill="rgb(208,188,9)" rx="2" ry="2" />
<text  x="662.57" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="884.1" y="1701" width="0.2" height="15.0" fill="rgb(230,197,4)" rx="2" ry="2" />
<text  x="887.07" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="636.8" y="1909" width="0.2" height="15.0" fill="rgb(242,101,4)" rx="2" ry="2" />
<text  x="639.82" y="1919.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1 samples, 0.02%)</title><rect x="385.4" y="1957" width="0.2" height="15.0" fill="rgb(234,215,33)" rx="2" ry="2" />
<text  x="388.37" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="997.2" y="2005" width="0.4" height="15.0" fill="rgb(206,180,5)" rx="2" ry="2" />
<text  x="1000.22" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="501" width="15.8" height="15.0" fill="rgb(247,167,3)" rx="2" ry="2" />
<text  x="108.39" y="511.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="987.8" y="1877" width="0.2" height="15.0" fill="rgb(244,146,47)" rx="2" ry="2" />
<text  x="990.85" y="1887.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1189.4" y="2037" width="0.4" height="15.0" fill="rgb(214,188,12)" rx="2" ry="2" />
<text  x="1192.40" y="2047.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (4 samples, 0.07%)</title><rect x="41.7" y="1973" width="0.8" height="15.0" fill="rgb(247,205,30)" rx="2" ry="2" />
<text  x="44.73" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="160.1" y="2005" width="0.2" height="15.0" fill="rgb(205,64,31)" rx="2" ry="2" />
<text  x="163.07" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="501.9" y="1621" width="0.2" height="15.0" fill="rgb(253,180,30)" rx="2" ry="2" />
<text  x="504.92" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (319 samples, 5.39%)</title><rect x="417.3" y="2021" width="63.7" height="15.0" fill="rgb(221,70,43)" rx="2" ry="2" />
<text  x="420.30" y="2031.5" >entry_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.14%)</title><rect x="1181.4" y="2021" width="1.6" height="15.0" fill="rgb(234,111,42)" rx="2" ry="2" />
<text  x="1184.42" y="2031.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1175.4" y="1973" width="0.2" height="15.0" fill="rgb(224,201,40)" rx="2" ry="2" />
<text  x="1178.43" y="1983.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="895.6" y="2005" width="0.2" height="15.0" fill="rgb(213,157,9)" rx="2" ry="2" />
<text  x="898.65" y="2015.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="451.8" y="1605" width="0.2" height="15.0" fill="rgb(248,14,24)" rx="2" ry="2" />
<text  x="454.83" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="1021.4" y="2021" width="1.8" height="15.0" fill="rgb(234,164,19)" rx="2" ry="2" />
<text  x="1024.37" y="2031.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="699.9" y="1957" width="0.2" height="15.0" fill="rgb(218,79,13)" rx="2" ry="2" />
<text  x="702.88" y="1967.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="612.9" y="1957" width="0.4" height="15.0" fill="rgb(221,61,46)" rx="2" ry="2" />
<text  x="615.87" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="841.8" y="1877" width="0.2" height="15.0" fill="rgb(216,182,38)" rx="2" ry="2" />
<text  x="844.77" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1018.6" y="1973" width="0.2" height="15.0" fill="rgb(254,46,44)" rx="2" ry="2" />
<text  x="1021.58" y="1983.5" ></text>
</g>
<g >
<title>__memchr_avx2 (5 samples, 0.08%)</title><rect x="343.5" y="2037" width="1.0" height="15.0" fill="rgb(236,194,12)" rx="2" ry="2" />
<text  x="346.47" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="988.8" y="1925" width="0.2" height="15.0" fill="rgb(252,17,42)" rx="2" ry="2" />
<text  x="991.84" y="1935.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="695.5" y="1701" width="0.2" height="15.0" fill="rgb(211,90,8)" rx="2" ry="2" />
<text  x="698.49" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="145.7" y="1877" width="0.2" height="15.0" fill="rgb(247,219,9)" rx="2" ry="2" />
<text  x="148.70" y="1887.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (8 samples, 0.14%)</title><rect x="863.7" y="1989" width="1.6" height="15.0" fill="rgb(221,197,7)" rx="2" ry="2" />
<text  x="866.72" y="1999.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="1107.6" y="1813" width="0.4" height="15.0" fill="rgb(214,144,4)" rx="2" ry="2" />
<text  x="1110.58" y="1823.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (550 samples, 9.30%)</title><rect x="720.4" y="1861" width="109.8" height="15.0" fill="rgb(243,115,42)" rx="2" ry="2" />
<text  x="723.43" y="1871.5" >exit_to_userm..</text>
</g>
<g >
<title>__task_pid_nr_ns (6 samples, 0.10%)</title><rect x="1158.3" y="1909" width="1.2" height="15.0" fill="rgb(223,76,10)" rx="2" ry="2" />
<text  x="1161.27" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="851.7" y="1941" width="0.2" height="15.0" fill="rgb(221,149,31)" rx="2" ry="2" />
<text  x="854.75" y="1951.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="122.8" y="1685" width="0.4" height="15.0" fill="rgb(210,188,3)" rx="2" ry="2" />
<text  x="125.75" y="1695.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="311.1" y="1797" width="0.2" height="15.0" fill="rgb(243,7,6)" rx="2" ry="2" />
<text  x="314.14" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="363.2" y="1813" width="0.2" height="15.0" fill="rgb(243,155,24)" rx="2" ry="2" />
<text  x="366.22" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1080.6" y="1765" width="0.2" height="15.0" fill="rgb(254,77,34)" rx="2" ry="2" />
<text  x="1083.64" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.0" y="2005" width="0.2" height="15.0" fill="rgb(235,57,5)" rx="2" ry="2" />
<text  x="1186.02" y="2015.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="775.7" y="1605" width="0.6" height="15.0" fill="rgb(213,19,11)" rx="2" ry="2" />
<text  x="778.71" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="150.7" y="1845" width="0.2" height="15.0" fill="rgb(228,190,44)" rx="2" ry="2" />
<text  x="153.69" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="705.9" y="1957" width="0.2" height="15.0" fill="rgb(242,180,34)" rx="2" ry="2" />
<text  x="708.87" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1029.2" y="2053" width="0.2" height="15.0" fill="rgb(219,98,48)" rx="2" ry="2" />
<text  x="1032.15" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="117.4" y="37" width="0.2" height="15.0" fill="rgb(209,148,53)" rx="2" ry="2" />
<text  x="120.36" y="47.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="76.9" y="1941" width="0.2" height="15.0" fill="rgb(230,204,19)" rx="2" ry="2" />
<text  x="79.85" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="560.6" y="1909" width="0.4" height="15.0" fill="rgb(249,121,37)" rx="2" ry="2" />
<text  x="563.59" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (1 samples, 0.02%)</title><rect x="386.2" y="1941" width="0.2" height="15.0" fill="rgb(230,19,51)" rx="2" ry="2" />
<text  x="389.17" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.25%)</title><rect x="12.6" y="2021" width="3.0" height="15.0" fill="rgb(208,166,44)" rx="2" ry="2" />
<text  x="15.59" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="123.7" y="1813" width="0.2" height="15.0" fill="rgb(234,102,23)" rx="2" ry="2" />
<text  x="126.75" y="1823.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="705.7" y="1973" width="0.4" height="15.0" fill="rgb(244,196,28)" rx="2" ry="2" />
<text  x="708.67" y="1983.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (1 samples, 0.02%)</title><rect x="724.2" y="1797" width="0.2" height="15.0" fill="rgb(231,196,22)" rx="2" ry="2" />
<text  x="727.23" y="1807.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.05%)</title><rect x="777.1" y="1557" width="0.6" height="15.0" fill="rgb(243,48,14)" rx="2" ry="2" />
<text  x="780.11" y="1567.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="995.6" y="1909" width="0.2" height="15.0" fill="rgb(217,204,30)" rx="2" ry="2" />
<text  x="998.63" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="452.0" y="1925" width="0.2" height="15.0" fill="rgb(230,120,53)" rx="2" ry="2" />
<text  x="455.03" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1147.9" y="1973" width="0.2" height="15.0" fill="rgb(225,185,2)" rx="2" ry="2" />
<text  x="1150.89" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="112.6" y="37" width="1.0" height="15.0" fill="rgb(250,79,35)" rx="2" ry="2" />
<text  x="115.57" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="32.6" y="1861" width="0.1" height="15.0" fill="rgb(239,98,24)" rx="2" ry="2" />
<text  x="35.55" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="209.0" y="1925" width="0.8" height="15.0" fill="rgb(239,148,26)" rx="2" ry="2" />
<text  x="211.96" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1072.3" y="1621" width="0.2" height="15.0" fill="rgb(226,127,0)" rx="2" ry="2" />
<text  x="1075.26" y="1631.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="501.5" y="1653" width="0.2" height="15.0" fill="rgb(237,3,53)" rx="2" ry="2" />
<text  x="504.52" y="1663.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="410.1" y="2005" width="0.2" height="15.0" fill="rgb(211,42,45)" rx="2" ry="2" />
<text  x="413.12" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="996.4" y="1989" width="0.4" height="15.0" fill="rgb(248,108,18)" rx="2" ry="2" />
<text  x="999.43" y="1999.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (6 samples, 0.10%)</title><rect x="734.8" y="1653" width="1.2" height="15.0" fill="rgb(214,8,4)" rx="2" ry="2" />
<text  x="737.80" y="1663.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="672.7" y="1781" width="0.8" height="15.0" fill="rgb(217,90,1)" rx="2" ry="2" />
<text  x="675.74" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="850.9" y="1925" width="0.2" height="15.0" fill="rgb(251,66,17)" rx="2" ry="2" />
<text  x="853.95" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1018.6" y="1829" width="0.2" height="15.0" fill="rgb(205,178,6)" rx="2" ry="2" />
<text  x="1021.58" y="1839.5" ></text>
</g>
<g >
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="501.7" y="1621" width="0.2" height="15.0" fill="rgb(241,137,24)" rx="2" ry="2" />
<text  x="504.72" y="1631.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (8 samples, 0.14%)</title><rect x="750.6" y="1733" width="1.6" height="15.0" fill="rgb(228,130,4)" rx="2" ry="2" />
<text  x="753.57" y="1743.5" ></text>
</g>
<g >
<title>epoll_ctl (369 samples, 6.24%)</title><rect x="413.5" y="2037" width="73.6" height="15.0" fill="rgb(210,28,31)" rx="2" ry="2" />
<text  x="416.51" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="120.4" y="37" width="0.2" height="15.0" fill="rgb(252,100,53)" rx="2" ry="2" />
<text  x="123.36" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="805.8" y="1445" width="0.4" height="15.0" fill="rgb(215,160,46)" rx="2" ry="2" />
<text  x="808.85" y="1455.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="363.2" y="1749" width="0.2" height="15.0" fill="rgb(247,185,48)" rx="2" ry="2" />
<text  x="366.22" y="1759.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="340.1" y="1989" width="0.2" height="15.0" fill="rgb(244,98,52)" rx="2" ry="2" />
<text  x="343.07" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="116.6" y="37" width="0.2" height="15.0" fill="rgb(221,144,30)" rx="2" ry="2" />
<text  x="119.57" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="117.6" y="53" width="0.6" height="15.0" fill="rgb(250,113,9)" rx="2" ry="2" />
<text  x="120.56" y="63.5" ></text>
</g>
<g >
<title>sys_setsockopt (1 samples, 0.02%)</title><rect x="695.3" y="1957" width="0.2" height="15.0" fill="rgb(243,84,12)" rx="2" ry="2" />
<text  x="698.29" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="227.5" y="1861" width="1.6" height="15.0" fill="rgb(216,79,45)" rx="2" ry="2" />
<text  x="230.52" y="1871.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="390.8" y="1877" width="0.2" height="15.0" fill="rgb(223,12,17)" rx="2" ry="2" />
<text  x="393.76" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="451.8" y="1941" width="0.2" height="15.0" fill="rgb(218,53,51)" rx="2" ry="2" />
<text  x="454.83" y="1951.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1103.2" y="1893" width="0.6" height="15.0" fill="rgb(225,193,34)" rx="2" ry="2" />
<text  x="1106.19" y="1903.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="966.3" y="2037" width="0.2" height="15.0" fill="rgb(236,128,19)" rx="2" ry="2" />
<text  x="969.29" y="2047.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (3 samples, 0.05%)</title><rect x="853.1" y="1957" width="0.6" height="15.0" fill="rgb(215,167,30)" rx="2" ry="2" />
<text  x="856.14" y="1967.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="1087.4" y="1861" width="0.4" height="15.0" fill="rgb(230,193,13)" rx="2" ry="2" />
<text  x="1090.43" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1088.2" y="1781" width="0.2" height="15.0" fill="rgb(251,77,36)" rx="2" ry="2" />
<text  x="1091.22" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="896.6" y="1925" width="0.2" height="15.0" fill="rgb(228,201,10)" rx="2" ry="2" />
<text  x="899.65" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="763.1" y="1557" width="0.2" height="15.0" fill="rgb(244,108,44)" rx="2" ry="2" />
<text  x="766.14" y="1567.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="124.1" y="1845" width="0.2" height="15.0" fill="rgb(224,149,48)" rx="2" ry="2" />
<text  x="127.15" y="1855.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (6 samples, 0.10%)</title><rect x="668.5" y="1845" width="1.2" height="15.0" fill="rgb(247,91,26)" rx="2" ry="2" />
<text  x="671.55" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="144.5" y="1909" width="0.4" height="15.0" fill="rgb(236,62,38)" rx="2" ry="2" />
<text  x="147.50" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="58.9" y="1541" width="0.2" height="15.0" fill="rgb(233,128,4)" rx="2" ry="2" />
<text  x="61.89" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="144.9" y="1909" width="0.2" height="15.0" fill="rgb(238,144,24)" rx="2" ry="2" />
<text  x="147.90" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="65.7" y="1957" width="0.2" height="15.0" fill="rgb(207,88,13)" rx="2" ry="2" />
<text  x="68.68" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1108.8" y="1509" width="0.2" height="15.0" fill="rgb(210,37,27)" rx="2" ry="2" />
<text  x="1111.78" y="1519.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="255.1" y="1813" width="0.2" height="15.0" fill="rgb(241,44,47)" rx="2" ry="2" />
<text  x="258.06" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="993.0" y="1925" width="0.8" height="15.0" fill="rgb(242,10,31)" rx="2" ry="2" />
<text  x="996.03" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="183.4" y="1973" width="0.2" height="15.0" fill="rgb(218,11,12)" rx="2" ry="2" />
<text  x="186.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (31 samples, 0.52%)</title><rect x="128.7" y="2005" width="6.2" height="15.0" fill="rgb(238,210,53)" rx="2" ry="2" />
<text  x="131.74" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="81.0" y="1893" width="0.2" height="15.0" fill="rgb(219,52,36)" rx="2" ry="2" />
<text  x="84.04" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="672.3" y="1717" width="0.2" height="15.0" fill="rgb(247,53,6)" rx="2" ry="2" />
<text  x="675.34" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="1174.4" y="1973" width="0.2" height="15.0" fill="rgb(240,11,4)" rx="2" ry="2" />
<text  x="1177.43" y="1983.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="771.5" y="1669" width="0.2" height="15.0" fill="rgb(217,110,18)" rx="2" ry="2" />
<text  x="774.52" y="1679.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="248.3" y="1925" width="0.2" height="15.0" fill="rgb(210,132,1)" rx="2" ry="2" />
<text  x="251.27" y="1935.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="198.0" y="2021" width="0.2" height="15.0" fill="rgb(220,55,25)" rx="2" ry="2" />
<text  x="200.99" y="2031.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic (1 samples, 0.02%)</title><rect x="167.1" y="1973" width="0.2" height="15.0" fill="rgb(224,196,45)" rx="2" ry="2" />
<text  x="170.05" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="10.4" y="2021" width="0.8" height="15.0" fill="rgb(235,156,34)" rx="2" ry="2" />
<text  x="13.40" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="929.8" y="1957" width="0.2" height="15.0" fill="rgb(242,156,52)" rx="2" ry="2" />
<text  x="932.77" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (113 samples, 1.91%)</title><rect x="777.7" y="1573" width="22.6" height="15.0" fill="rgb(243,14,1)" rx="2" ry="2" />
<text  x="780.71" y="1583.5" >_..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="928.0" y="1909" width="0.2" height="15.0" fill="rgb(225,180,39)" rx="2" ry="2" />
<text  x="930.98" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.8" y="1877" width="0.2" height="15.0" fill="rgb(231,9,44)" rx="2" ry="2" />
<text  x="547.82" y="1887.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="914.2" y="1669" width="0.2" height="15.0" fill="rgb(233,9,38)" rx="2" ry="2" />
<text  x="917.21" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="63.9" y="1845" width="0.2" height="15.0" fill="rgb(214,216,0)" rx="2" ry="2" />
<text  x="66.88" y="1855.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="547.2" y="1957" width="0.2" height="15.0" fill="rgb(226,39,33)" rx="2" ry="2" />
<text  x="550.22" y="1967.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="1139.7" y="1989" width="0.2" height="15.0" fill="rgb(215,12,19)" rx="2" ry="2" />
<text  x="1142.71" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="90.0" y="1877" width="0.2" height="15.0" fill="rgb(210,137,22)" rx="2" ry="2" />
<text  x="93.02" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::reply_type facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="108.0" y="37" width="0.4" height="15.0" fill="rgb(243,182,1)" rx="2" ry="2" />
<text  x="110.98" y="47.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.4" y="261" width="15.4" height="15.0" fill="rgb(219,82,10)" rx="2" ry="2" />
<text  x="108.39" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="253.3" y="1877" width="0.8" height="15.0" fill="rgb(213,161,26)" rx="2" ry="2" />
<text  x="256.26" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="340.3" y="1893" width="0.2" height="15.0" fill="rgb(220,82,12)" rx="2" ry="2" />
<text  x="343.27" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="29.4" y="1861" width="0.2" height="15.0" fill="rgb(236,164,22)" rx="2" ry="2" />
<text  x="32.36" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="996.6" y="1973" width="0.2" height="15.0" fill="rgb(246,61,7)" rx="2" ry="2" />
<text  x="999.63" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17 samples, 0.29%)</title><rect x="475.6" y="1973" width="3.4" height="15.0" fill="rgb(211,9,28)" rx="2" ry="2" />
<text  x="478.57" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="311.3" y="1653" width="0.2" height="15.0" fill="rgb(210,132,51)" rx="2" ry="2" />
<text  x="314.34" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (314 samples, 5.31%)</title><rect x="418.1" y="2005" width="62.7" height="15.0" fill="rgb(236,214,38)" rx="2" ry="2" />
<text  x="421.10" y="2015.5" >do_sys..</text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (6 samples, 0.10%)</title><rect x="968.3" y="2037" width="1.2" height="15.0" fill="rgb(207,63,48)" rx="2" ry="2" />
<text  x="971.29" y="2047.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="541.2" y="1877" width="0.2" height="15.0" fill="rgb(228,123,20)" rx="2" ry="2" />
<text  x="544.23" y="1887.5" ></text>
</g>
<g >
<title>__mutex_init (1 samples, 0.02%)</title><rect x="396.9" y="1925" width="0.2" height="15.0" fill="rgb(211,187,41)" rx="2" ry="2" />
<text  x="399.95" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="32.6" y="1925" width="0.1" height="15.0" fill="rgb(232,176,35)" rx="2" ry="2" />
<text  x="35.55" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="541.2" y="1925" width="0.2" height="15.0" fill="rgb(227,79,34)" rx="2" ry="2" />
<text  x="544.23" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="321.3" y="1525" width="0.2" height="15.0" fill="rgb(233,21,22)" rx="2" ry="2" />
<text  x="324.31" y="1535.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="883.3" y="1941" width="0.2" height="15.0" fill="rgb(210,223,40)" rx="2" ry="2" />
<text  x="886.28" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="501.5" y="1765" width="0.8" height="15.0" fill="rgb(211,135,36)" rx="2" ry="2" />
<text  x="504.52" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="571.6" y="1957" width="0.4" height="15.0" fill="rgb(238,166,38)" rx="2" ry="2" />
<text  x="574.56" y="1967.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="378.6" y="1925" width="1.0" height="15.0" fill="rgb(253,122,44)" rx="2" ry="2" />
<text  x="381.59" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="517.3" y="1957" width="0.2" height="15.0" fill="rgb(208,160,1)" rx="2" ry="2" />
<text  x="520.28" y="1967.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (2 samples, 0.03%)</title><rect x="577.5" y="2005" width="0.4" height="15.0" fill="rgb(225,82,0)" rx="2" ry="2" />
<text  x="580.55" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="844.0" y="1893" width="0.4" height="15.0" fill="rgb(253,201,42)" rx="2" ry="2" />
<text  x="846.96" y="1903.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1126.9" y="1989" width="0.2" height="15.0" fill="rgb(213,129,6)" rx="2" ry="2" />
<text  x="1129.94" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (24 samples, 0.41%)</title><rect x="88.4" y="1973" width="4.8" height="15.0" fill="rgb(211,64,5)" rx="2" ry="2" />
<text  x="91.43" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (19 samples, 0.32%)</title><rect x="1110.6" y="1493" width="3.8" height="15.0" fill="rgb(250,190,37)" rx="2" ry="2" />
<text  x="1113.58" y="1503.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="597.7" y="1861" width="0.4" height="15.0" fill="rgb(232,130,50)" rx="2" ry="2" />
<text  x="600.71" y="1871.5" ></text>
</g>
<g >
<title>ip_send_check (8 samples, 0.14%)</title><rect x="773.5" y="1621" width="1.6" height="15.0" fill="rgb(226,99,28)" rx="2" ry="2" />
<text  x="776.52" y="1631.5" ></text>
</g>
<g >
<title>__fget (18 samples, 0.30%)</title><rect x="446.8" y="1941" width="3.6" height="15.0" fill="rgb(234,229,39)" rx="2" ry="2" />
<text  x="449.84" y="1951.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="672.5" y="1877" width="1.0" height="15.0" fill="rgb(252,62,13)" rx="2" ry="2" />
<text  x="675.54" y="1887.5" ></text>
</g>
<g >
<title>security_inode_free (1 samples, 0.02%)</title><rect x="733.6" y="1669" width="0.2" height="15.0" fill="rgb(218,152,5)" rx="2" ry="2" />
<text  x="736.61" y="1679.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="562.2" y="1925" width="0.2" height="15.0" fill="rgb(254,86,10)" rx="2" ry="2" />
<text  x="565.18" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="527.7" y="1989" width="0.2" height="15.0" fill="rgb(227,209,3)" rx="2" ry="2" />
<text  x="530.66" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="459.8" y="1765" width="0.4" height="15.0" fill="rgb(223,52,54)" rx="2" ry="2" />
<text  x="462.81" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="700.9" y="2037" width="0.2" height="15.0" fill="rgb(215,84,46)" rx="2" ry="2" />
<text  x="703.88" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (3 samples, 0.05%)</title><rect x="157.7" y="1925" width="0.6" height="15.0" fill="rgb(250,49,53)" rx="2" ry="2" />
<text  x="160.67" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="930.2" y="1941" width="1.0" height="15.0" fill="rgb(245,34,31)" rx="2" ry="2" />
<text  x="933.17" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1067.9" y="1685" width="0.2" height="15.0" fill="rgb(207,134,37)" rx="2" ry="2" />
<text  x="1070.87" y="1695.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="253.1" y="1813" width="0.2" height="15.0" fill="rgb(242,226,52)" rx="2" ry="2" />
<text  x="256.06" y="1823.5" ></text>
</g>
<g >
<title>dput.part.26 (2 samples, 0.03%)</title><rect x="357.8" y="1909" width="0.4" height="15.0" fill="rgb(250,202,3)" rx="2" ry="2" />
<text  x="360.83" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="515.5" y="1973" width="1.0" height="15.0" fill="rgb(211,4,14)" rx="2" ry="2" />
<text  x="518.49" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="321.3" y="1461" width="0.2" height="15.0" fill="rgb(254,144,45)" rx="2" ry="2" />
<text  x="324.31" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="705.1" y="1989" width="0.2" height="15.0" fill="rgb(233,210,10)" rx="2" ry="2" />
<text  x="708.07" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="246.7" y="1861" width="0.2" height="15.0" fill="rgb(210,224,15)" rx="2" ry="2" />
<text  x="249.68" y="1871.5" ></text>
</g>
<g >
<title>tcp_ack (26 samples, 0.44%)</title><rect x="1109.6" y="1541" width="5.2" height="15.0" fill="rgb(254,73,52)" rx="2" ry="2" />
<text  x="1112.58" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="892.1" y="1941" width="0.2" height="15.0" fill="rgb(214,120,48)" rx="2" ry="2" />
<text  x="895.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="105.4" y="101" width="15.0" height="15.0" fill="rgb(211,85,35)" rx="2" ry="2" />
<text  x="108.39" y="111.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="253.1" y="1733" width="0.2" height="15.0" fill="rgb(230,54,44)" rx="2" ry="2" />
<text  x="256.06" y="1743.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1132.9" y="2053" width="0.2" height="15.0" fill="rgb(218,25,23)" rx="2" ry="2" />
<text  x="1135.93" y="2063.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (1 samples, 0.02%)</title><rect x="522.9" y="1957" width="0.2" height="15.0" fill="rgb(239,44,41)" rx="2" ry="2" />
<text  x="525.87" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="777.5" y="1413" width="0.2" height="15.0" fill="rgb(217,23,50)" rx="2" ry="2" />
<text  x="780.51" y="1423.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="150.7" y="1589" width="0.2" height="15.0" fill="rgb(254,157,25)" rx="2" ry="2" />
<text  x="153.69" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (4 samples, 0.07%)</title><rect x="857.5" y="1989" width="0.8" height="15.0" fill="rgb(219,153,22)" rx="2" ry="2" />
<text  x="860.53" y="1999.5" ></text>
</g>
<g >
<title>inet_release (1 samples, 0.02%)</title><rect x="829.2" y="1781" width="0.2" height="15.0" fill="rgb(253,208,19)" rx="2" ry="2" />
<text  x="832.19" y="1791.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (4 samples, 0.07%)</title><rect x="293.8" y="1685" width="0.8" height="15.0" fill="rgb(243,57,45)" rx="2" ry="2" />
<text  x="296.77" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="363.2" y="1781" width="0.2" height="15.0" fill="rgb(243,80,6)" rx="2" ry="2" />
<text  x="366.22" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (12 samples, 0.20%)</title><rect x="26.2" y="1989" width="2.4" height="15.0" fill="rgb(247,26,24)" rx="2" ry="2" />
<text  x="29.16" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="550.6" y="1973" width="0.2" height="15.0" fill="rgb(252,82,29)" rx="2" ry="2" />
<text  x="553.61" y="1983.5" ></text>
</g>
<g >
<title>locks_remove_posix (2 samples, 0.03%)</title><rect x="832.6" y="1813" width="0.4" height="15.0" fill="rgb(213,227,20)" rx="2" ry="2" />
<text  x="835.59" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="501.5" y="1813" width="0.8" height="15.0" fill="rgb(226,46,17)" rx="2" ry="2" />
<text  x="504.52" y="1823.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="566.0" y="1685" width="0.2" height="15.0" fill="rgb(214,38,18)" rx="2" ry="2" />
<text  x="568.97" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1167.6" y="1989" width="0.2" height="15.0" fill="rgb(227,29,6)" rx="2" ry="2" />
<text  x="1170.65" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="407.7" y="1893" width="0.2" height="15.0" fill="rgb(225,129,53)" rx="2" ry="2" />
<text  x="410.72" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1122.1" y="1877" width="0.2" height="15.0" fill="rgb(207,70,20)" rx="2" ry="2" />
<text  x="1125.15" y="1887.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1067.3" y="1813" width="0.2" height="15.0" fill="rgb(233,226,23)" rx="2" ry="2" />
<text  x="1070.27" y="1823.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="958.3" y="2005" width="0.2" height="15.0" fill="rgb(209,36,52)" rx="2" ry="2" />
<text  x="961.31" y="2015.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1090.8" y="1829" width="0.2" height="15.0" fill="rgb(247,2,26)" rx="2" ry="2" />
<text  x="1093.82" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="102.0" y="2005" width="0.2" height="15.0" fill="rgb(221,1,8)" rx="2" ry="2" />
<text  x="105.00" y="2015.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="865.5" y="1989" width="0.2" height="15.0" fill="rgb(252,97,30)" rx="2" ry="2" />
<text  x="868.51" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="755.0" y="1717" width="0.4" height="15.0" fill="rgb(233,94,0)" rx="2" ry="2" />
<text  x="757.96" y="1727.5" ></text>
</g>
<g >
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="377.8" y="1925" width="0.8" height="15.0" fill="rgb(209,169,48)" rx="2" ry="2" />
<text  x="380.79" y="1935.5" ></text>
</g>
<g >
<title>sys_futex (15 samples, 0.25%)</title><rect x="12.6" y="2005" width="3.0" height="15.0" fill="rgb(251,33,16)" rx="2" ry="2" />
<text  x="15.59" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="105.4" y="133" width="15.0" height="15.0" fill="rgb(229,213,41)" rx="2" ry="2" />
<text  x="108.39" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="100.6" y="1925" width="0.2" height="15.0" fill="rgb(205,202,46)" rx="2" ry="2" />
<text  x="103.60" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="763.1" y="1493" width="0.2" height="15.0" fill="rgb(217,17,30)" rx="2" ry="2" />
<text  x="766.14" y="1503.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="777.5" y="1349" width="0.2" height="15.0" fill="rgb(252,90,1)" rx="2" ry="2" />
<text  x="780.51" y="1359.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (2 samples, 0.03%)</title><rect x="271.4" y="1781" width="0.4" height="15.0" fill="rgb(207,83,27)" rx="2" ry="2" />
<text  x="274.42" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="451.8" y="1781" width="0.2" height="15.0" fill="rgb(238,81,0)" rx="2" ry="2" />
<text  x="454.83" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="81.2" y="1893" width="0.2" height="15.0" fill="rgb(219,14,7)" rx="2" ry="2" />
<text  x="84.24" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="545.2" y="1973" width="0.2" height="15.0" fill="rgb(222,84,43)" rx="2" ry="2" />
<text  x="548.22" y="1983.5" ></text>
</g>
<g >
<title>__GI___setsockopt (105 samples, 1.78%)</title><rect x="677.7" y="1989" width="21.0" height="15.0" fill="rgb(252,1,14)" rx="2" ry="2" />
<text  x="680.73" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1109.4" y="1541" width="0.2" height="15.0" fill="rgb(251,195,8)" rx="2" ry="2" />
<text  x="1112.38" y="1551.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="566.0" y="1717" width="0.2" height="15.0" fill="rgb(239,219,54)" rx="2" ry="2" />
<text  x="568.97" y="1727.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (1 samples, 0.02%)</title><rect x="601.7" y="1973" width="0.2" height="15.0" fill="rgb(243,111,50)" rx="2" ry="2" />
<text  x="604.70" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (2 samples, 0.03%)</title><rect x="895.4" y="2037" width="0.4" height="15.0" fill="rgb(208,188,53)" rx="2" ry="2" />
<text  x="898.45" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="231.1" y="1797" width="0.2" height="15.0" fill="rgb(252,103,18)" rx="2" ry="2" />
<text  x="234.11" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="23.0" y="1765" width="0.2" height="15.0" fill="rgb(231,113,35)" rx="2" ry="2" />
<text  x="25.97" y="1775.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (2 samples, 0.03%)</title><rect x="962.9" y="2021" width="0.4" height="15.0" fill="rgb(213,200,50)" rx="2" ry="2" />
<text  x="965.90" y="2031.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="360.8" y="1957" width="0.4" height="15.0" fill="rgb(238,222,51)" rx="2" ry="2" />
<text  x="363.83" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="452.0" y="1909" width="0.2" height="15.0" fill="rgb(213,125,32)" rx="2" ry="2" />
<text  x="455.03" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="32.6" y="1781" width="0.1" height="15.0" fill="rgb(209,194,15)" rx="2" ry="2" />
<text  x="35.55" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (2 samples, 0.03%)</title><rect x="80.8" y="1925" width="0.4" height="15.0" fill="rgb(218,19,4)" rx="2" ry="2" />
<text  x="83.84" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="581.5" y="1973" width="0.2" height="15.0" fill="rgb(236,104,17)" rx="2" ry="2" />
<text  x="584.54" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="120.6" y="117" width="0.2" height="15.0" fill="rgb(210,152,38)" rx="2" ry="2" />
<text  x="123.56" y="127.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="1146.9" y="2005" width="0.8" height="15.0" fill="rgb(227,37,27)" rx="2" ry="2" />
<text  x="1149.89" y="2015.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (6 samples, 0.10%)</title><rect x="248.9" y="1909" width="1.2" height="15.0" fill="rgb(229,204,23)" rx="2" ry="2" />
<text  x="251.87" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (7 samples, 0.12%)</title><rect x="649.6" y="2021" width="1.4" height="15.0" fill="rgb(207,33,26)" rx="2" ry="2" />
<text  x="652.59" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="474.0" y="1749" width="0.2" height="15.0" fill="rgb(229,10,41)" rx="2" ry="2" />
<text  x="476.98" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (2 samples, 0.03%)</title><rect x="524.7" y="1957" width="0.4" height="15.0" fill="rgb(219,111,9)" rx="2" ry="2" />
<text  x="527.67" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="993.0" y="1941" width="0.8" height="15.0" fill="rgb(221,106,23)" rx="2" ry="2" />
<text  x="996.03" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="405.7" y="1877" width="0.4" height="15.0" fill="rgb(216,217,50)" rx="2" ry="2" />
<text  x="408.73" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="407.7" y="1925" width="0.2" height="15.0" fill="rgb(225,136,12)" rx="2" ry="2" />
<text  x="410.72" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="752.8" y="1733" width="0.2" height="15.0" fill="rgb(215,131,30)" rx="2" ry="2" />
<text  x="755.76" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="622.3" y="2037" width="0.2" height="15.0" fill="rgb(251,93,19)" rx="2" ry="2" />
<text  x="625.25" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="451.8" y="1909" width="0.2" height="15.0" fill="rgb(225,109,21)" rx="2" ry="2" />
<text  x="454.83" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="53.9" y="1797" width="0.2" height="15.0" fill="rgb(235,20,26)" rx="2" ry="2" />
<text  x="56.90" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="177.8" y="1973" width="0.6" height="15.0" fill="rgb(214,50,43)" rx="2" ry="2" />
<text  x="180.83" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="23.0" y="1925" width="0.2" height="15.0" fill="rgb(214,56,18)" rx="2" ry="2" />
<text  x="25.97" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="763.1" y="1445" width="0.2" height="15.0" fill="rgb(208,219,30)" rx="2" ry="2" />
<text  x="766.14" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (3 samples, 0.05%)</title><rect x="1019.8" y="2037" width="0.6" height="15.0" fill="rgb(231,39,0)" rx="2" ry="2" />
<text  x="1022.78" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="616.5" y="2005" width="0.2" height="15.0" fill="rgb(237,106,37)" rx="2" ry="2" />
<text  x="619.46" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="134.9" y="1989" width="0.2" height="15.0" fill="rgb(208,162,46)" rx="2" ry="2" />
<text  x="137.92" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="969.3" y="1765" width="0.2" height="15.0" fill="rgb(223,184,25)" rx="2" ry="2" />
<text  x="972.29" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (6 samples, 0.10%)</title><rect x="539.6" y="1909" width="1.2" height="15.0" fill="rgb(223,185,50)" rx="2" ry="2" />
<text  x="542.63" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.27%)</title><rect x="608.5" y="1893" width="3.2" height="15.0" fill="rgb(233,146,16)" rx="2" ry="2" />
<text  x="611.48" y="1903.5" ></text>
</g>
<g >
<title>__sock_release (1 samples, 0.02%)</title><rect x="724.4" y="1797" width="0.2" height="15.0" fill="rgb(238,23,19)" rx="2" ry="2" />
<text  x="727.43" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.2" y="1877" width="0.2" height="15.0" fill="rgb(205,1,44)" rx="2" ry="2" />
<text  x="844.17" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="176.4" y="1973" width="0.4" height="15.0" fill="rgb(241,33,26)" rx="2" ry="2" />
<text  x="179.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="616.9" y="2005" width="1.0" height="15.0" fill="rgb(212,155,19)" rx="2" ry="2" />
<text  x="619.86" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="32.6" y="1829" width="0.1" height="15.0" fill="rgb(243,22,19)" rx="2" ry="2" />
<text  x="35.55" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="311.3" y="1685" width="0.2" height="15.0" fill="rgb(242,37,47)" rx="2" ry="2" />
<text  x="314.34" y="1695.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="27.6" y="1957" width="0.8" height="15.0" fill="rgb(232,103,41)" rx="2" ry="2" />
<text  x="30.56" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="949.3" y="1989" width="0.2" height="15.0" fill="rgb(215,28,47)" rx="2" ry="2" />
<text  x="952.33" y="1999.5" ></text>
</g>
<g >
<title>event_base_set (3 samples, 0.05%)</title><rect x="100.2" y="2005" width="0.6" height="15.0" fill="rgb(227,110,52)" rx="2" ry="2" />
<text  x="103.20" y="2015.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1067.9" y="1653" width="0.2" height="15.0" fill="rgb(232,48,21)" rx="2" ry="2" />
<text  x="1070.87" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="458.0" y="1813" width="0.2" height="15.0" fill="rgb(238,16,49)" rx="2" ry="2" />
<text  x="461.01" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="865.1" y="1973" width="0.2" height="15.0" fill="rgb(214,223,40)" rx="2" ry="2" />
<text  x="868.12" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="170.6" y="1973" width="0.2" height="15.0" fill="rgb(214,122,8)" rx="2" ry="2" />
<text  x="173.65" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (4 samples, 0.07%)</title><rect x="908.8" y="2005" width="0.8" height="15.0" fill="rgb(214,228,22)" rx="2" ry="2" />
<text  x="911.82" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="730.8" y="1701" width="0.2" height="15.0" fill="rgb(234,12,52)" rx="2" ry="2" />
<text  x="733.81" y="1711.5" ></text>
</g>
<g >
<title>event_assign (6 samples, 0.10%)</title><rect x="956.3" y="2005" width="1.2" height="15.0" fill="rgb(251,136,18)" rx="2" ry="2" />
<text  x="959.31" y="2015.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (66 samples, 1.12%)</title><rect x="727.4" y="1749" width="13.2" height="15.0" fill="rgb(206,122,36)" rx="2" ry="2" />
<text  x="730.42" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="634.6" y="1925" width="0.4" height="15.0" fill="rgb(223,137,26)" rx="2" ry="2" />
<text  x="637.62" y="1935.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="358.4" y="1909" width="0.2" height="15.0" fill="rgb(236,162,13)" rx="2" ry="2" />
<text  x="361.43" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="459.8" y="1829" width="0.4" height="15.0" fill="rgb(217,210,4)" rx="2" ry="2" />
<text  x="462.81" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="29.4" y="1749" width="0.2" height="15.0" fill="rgb(230,127,11)" rx="2" ry="2" />
<text  x="32.36" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="969.3" y="1925" width="0.2" height="15.0" fill="rgb(246,198,46)" rx="2" ry="2" />
<text  x="972.29" y="1935.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="951.1" y="1605" width="0.2" height="15.0" fill="rgb(221,58,25)" rx="2" ry="2" />
<text  x="954.13" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="839.2" y="1909" width="0.6" height="15.0" fill="rgb(212,14,18)" rx="2" ry="2" />
<text  x="842.17" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::begin (2 samples, 0.03%)</title><rect x="33.9" y="1973" width="0.4" height="15.0" fill="rgb(221,86,44)" rx="2" ry="2" />
<text  x="36.95" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.4" y="69" width="0.2" height="15.0" fill="rgb(232,180,37)" rx="2" ry="2" />
<text  x="123.36" y="79.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="363.2" y="1509" width="0.2" height="15.0" fill="rgb(212,14,51)" rx="2" ry="2" />
<text  x="366.22" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1159.7" y="1957" width="0.2" height="15.0" fill="rgb(243,38,7)" rx="2" ry="2" />
<text  x="1162.67" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (1 samples, 0.02%)</title><rect x="565.8" y="1989" width="0.2" height="15.0" fill="rgb(252,47,41)" rx="2" ry="2" />
<text  x="568.78" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="274.4" y="1861" width="0.2" height="15.0" fill="rgb(223,186,46)" rx="2" ry="2" />
<text  x="277.42" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="290.0" y="1413" width="0.2" height="15.0" fill="rgb(211,1,41)" rx="2" ry="2" />
<text  x="292.98" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="538.8" y="1909" width="0.8" height="15.0" fill="rgb(252,67,30)" rx="2" ry="2" />
<text  x="541.83" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="909.4" y="1861" width="0.2" height="15.0" fill="rgb(242,55,31)" rx="2" ry="2" />
<text  x="912.42" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="630.2" y="1989" width="0.2" height="15.0" fill="rgb(219,171,17)" rx="2" ry="2" />
<text  x="633.23" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="155.3" y="1861" width="0.2" height="15.0" fill="rgb(210,140,43)" rx="2" ry="2" />
<text  x="158.28" y="1871.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="1115.0" y="1765" width="0.6" height="15.0" fill="rgb(208,85,0)" rx="2" ry="2" />
<text  x="1117.97" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1049.1" y="1989" width="0.6" height="15.0" fill="rgb(244,150,41)" rx="2" ry="2" />
<text  x="1052.11" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::atomic_ref_base (2 samples, 0.03%)</title><rect x="168.3" y="1941" width="0.4" height="15.0" fill="rgb(233,67,9)" rx="2" ry="2" />
<text  x="171.25" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="405.7" y="1893" width="0.4" height="15.0" fill="rgb(221,29,33)" rx="2" ry="2" />
<text  x="408.73" y="1903.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="993.0" y="1861" width="0.8" height="15.0" fill="rgb(222,203,53)" rx="2" ry="2" />
<text  x="996.03" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="624.6" y="2005" width="0.6" height="15.0" fill="rgb(236,90,49)" rx="2" ry="2" />
<text  x="627.65" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="147.9" y="1925" width="0.2" height="15.0" fill="rgb(208,122,35)" rx="2" ry="2" />
<text  x="150.90" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="850.9" y="1845" width="0.2" height="15.0" fill="rgb(249,63,11)" rx="2" ry="2" />
<text  x="853.95" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="884.1" y="1813" width="0.2" height="15.0" fill="rgb(254,181,20)" rx="2" ry="2" />
<text  x="887.07" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="220.7" y="1877" width="1.2" height="15.0" fill="rgb(207,205,23)" rx="2" ry="2" />
<text  x="223.74" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="1182.2" y="2005" width="0.6" height="15.0" fill="rgb(227,66,16)" rx="2" ry="2" />
<text  x="1185.22" y="2015.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="265.4" y="1877" width="0.2" height="15.0" fill="rgb(249,41,2)" rx="2" ry="2" />
<text  x="268.44" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="452.0" y="1973" width="0.2" height="15.0" fill="rgb(236,97,53)" rx="2" ry="2" />
<text  x="455.03" y="1983.5" ></text>
</g>
<g >
<title>__fget_light (18 samples, 0.30%)</title><rect x="1123.1" y="1941" width="3.6" height="15.0" fill="rgb(216,144,45)" rx="2" ry="2" />
<text  x="1126.15" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="462.0" y="1685" width="0.2" height="15.0" fill="rgb(208,28,7)" rx="2" ry="2" />
<text  x="465.00" y="1695.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="1067.3" y="1829" width="0.2" height="15.0" fill="rgb(227,48,34)" rx="2" ry="2" />
<text  x="1070.27" y="1839.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2 samples, 0.03%)</title><rect x="612.3" y="1861" width="0.4" height="15.0" fill="rgb(244,81,43)" rx="2" ry="2" />
<text  x="615.27" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="910.0" y="2005" width="0.2" height="15.0" fill="rgb(252,123,22)" rx="2" ry="2" />
<text  x="913.02" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="417.9" y="2005" width="0.2" height="15.0" fill="rgb(209,53,37)" rx="2" ry="2" />
<text  x="420.90" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (4 samples, 0.07%)</title><rect x="656.0" y="1989" width="0.8" height="15.0" fill="rgb(223,29,48)" rx="2" ry="2" />
<text  x="658.98" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1653" width="0.2" height="15.0" fill="rgb(209,31,13)" rx="2" ry="2" />
<text  x="847.36" y="1663.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (22 samples, 0.37%)</title><rect x="960.5" y="2037" width="4.4" height="15.0" fill="rgb(236,205,17)" rx="2" ry="2" />
<text  x="963.51" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1018.6" y="1877" width="0.2" height="15.0" fill="rgb(238,184,6)" rx="2" ry="2" />
<text  x="1021.58" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="274.4" y="1829" width="0.2" height="15.0" fill="rgb(240,59,54)" rx="2" ry="2" />
<text  x="277.42" y="1839.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="77.9" y="1941" width="0.5" height="15.0" fill="rgb(226,95,20)" rx="2" ry="2" />
<text  x="80.85" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="178.2" y="1941" width="0.2" height="15.0" fill="rgb(242,146,5)" rx="2" ry="2" />
<text  x="181.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="825.4" y="1733" width="0.2" height="15.0" fill="rgb(212,66,10)" rx="2" ry="2" />
<text  x="828.40" y="1743.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (9 samples, 0.15%)</title><rect x="463.6" y="1941" width="1.8" height="15.0" fill="rgb(231,211,43)" rx="2" ry="2" />
<text  x="466.60" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="700.9" y="2005" width="0.2" height="15.0" fill="rgb(247,87,51)" rx="2" ry="2" />
<text  x="703.88" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="859.9" y="1989" width="0.2" height="15.0" fill="rgb(243,220,39)" rx="2" ry="2" />
<text  x="862.93" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="700.3" y="1973" width="0.2" height="15.0" fill="rgb(240,211,9)" rx="2" ry="2" />
<text  x="703.28" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="136.9" y="1925" width="0.4" height="15.0" fill="rgb(252,79,17)" rx="2" ry="2" />
<text  x="139.92" y="1935.5" ></text>
</g>
<g >
<title>copyin (2 samples, 0.03%)</title><rect x="265.6" y="1877" width="0.4" height="15.0" fill="rgb(239,154,36)" rx="2" ry="2" />
<text  x="268.64" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="363.2" y="1733" width="0.2" height="15.0" fill="rgb(223,149,28)" rx="2" ry="2" />
<text  x="366.22" y="1743.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="209.0" y="1941" width="0.8" height="15.0" fill="rgb(245,163,52)" rx="2" ry="2" />
<text  x="211.96" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="602.3" y="1765" width="0.2" height="15.0" fill="rgb(233,211,34)" rx="2" ry="2" />
<text  x="605.29" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="514.3" y="1973" width="0.2" height="15.0" fill="rgb(237,199,22)" rx="2" ry="2" />
<text  x="517.29" y="1983.5" ></text>
</g>
<g >
<title>new_inode_pseudo (42 samples, 0.71%)</title><rect x="387.6" y="1941" width="8.3" height="15.0" fill="rgb(206,38,29)" rx="2" ry="2" />
<text  x="390.57" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="358.4" y="1989" width="0.2" height="15.0" fill="rgb(240,99,27)" rx="2" ry="2" />
<text  x="361.43" y="1999.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="959.5" y="2005" width="0.6" height="15.0" fill="rgb(240,4,25)" rx="2" ry="2" />
<text  x="962.51" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="151.1" y="1909" width="0.2" height="15.0" fill="rgb(225,46,1)" rx="2" ry="2" />
<text  x="154.09" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="884.1" y="1941" width="0.2" height="15.0" fill="rgb(212,226,43)" rx="2" ry="2" />
<text  x="887.07" y="1951.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="121.0" y="37" width="0.2" height="15.0" fill="rgb(229,228,50)" rx="2" ry="2" />
<text  x="123.96" y="47.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="950.1" y="2021" width="2.0" height="15.0" fill="rgb(229,156,3)" rx="2" ry="2" />
<text  x="953.13" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="561.0" y="1925" width="0.6" height="15.0" fill="rgb(210,27,29)" rx="2" ry="2" />
<text  x="563.99" y="1935.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="157.1" y="1941" width="0.2" height="15.0" fill="rgb(249,60,24)" rx="2" ry="2" />
<text  x="160.08" y="1951.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (40 samples, 0.68%)</title><rect x="300.4" y="1685" width="7.9" height="15.0" fill="rgb(222,36,25)" rx="2" ry="2" />
<text  x="303.36" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="72.9" y="1909" width="0.2" height="15.0" fill="rgb(254,102,17)" rx="2" ry="2" />
<text  x="75.86" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="373.4" y="1621" width="0.2" height="15.0" fill="rgb(207,48,35)" rx="2" ry="2" />
<text  x="376.40" y="1631.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="185.6" y="1829" width="0.2" height="15.0" fill="rgb(236,41,46)" rx="2" ry="2" />
<text  x="188.61" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1104.4" y="1813" width="0.2" height="15.0" fill="rgb(232,23,9)" rx="2" ry="2" />
<text  x="1107.39" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="881.5" y="1861" width="0.2" height="15.0" fill="rgb(232,117,4)" rx="2" ry="2" />
<text  x="884.48" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="844.6" y="1925" width="0.8" height="15.0" fill="rgb(213,187,40)" rx="2" ry="2" />
<text  x="847.56" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="881.3" y="1877" width="0.4" height="15.0" fill="rgb(216,145,36)" rx="2" ry="2" />
<text  x="884.28" y="1887.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (4 samples, 0.07%)</title><rect x="739.0" y="1701" width="0.8" height="15.0" fill="rgb(238,98,18)" rx="2" ry="2" />
<text  x="741.99" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="317.7" y="1813" width="0.2" height="15.0" fill="rgb(227,45,12)" rx="2" ry="2" />
<text  x="320.72" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="566.0" y="1749" width="0.2" height="15.0" fill="rgb(237,75,15)" rx="2" ry="2" />
<text  x="568.97" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_active_ (6 samples, 0.10%)</title><rect x="1136.7" y="2053" width="1.2" height="15.0" fill="rgb(244,136,24)" rx="2" ry="2" />
<text  x="1139.72" y="2063.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8 samples, 0.14%)</title><rect x="91.4" y="1957" width="1.6" height="15.0" fill="rgb(252,22,20)" rx="2" ry="2" />
<text  x="94.42" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (4 samples, 0.07%)</title><rect x="160.5" y="2005" width="0.8" height="15.0" fill="rgb(222,112,8)" rx="2" ry="2" />
<text  x="163.47" y="2015.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="53.9" y="1621" width="0.2" height="15.0" fill="rgb(205,8,34)" rx="2" ry="2" />
<text  x="56.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="577.2" y="1957" width="0.3" height="15.0" fill="rgb(251,207,35)" rx="2" ry="2" />
<text  x="580.15" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="163.9" y="2021" width="0.2" height="15.0" fill="rgb(227,128,21)" rx="2" ry="2" />
<text  x="166.86" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1067.5" y="1701" width="0.2" height="15.0" fill="rgb(243,34,37)" rx="2" ry="2" />
<text  x="1070.47" y="1711.5" ></text>
</g>
<g >
<title>alloc_file (1 samples, 0.02%)</title><rect x="361.2" y="1957" width="0.2" height="15.0" fill="rgb(246,160,47)" rx="2" ry="2" />
<text  x="364.23" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.81%)</title><rect x="552.6" y="1973" width="9.6" height="15.0" fill="rgb(221,88,41)" rx="2" ry="2" />
<text  x="555.60" y="1983.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (30 samples, 0.51%)</title><rect x="318.7" y="1797" width="6.0" height="15.0" fill="rgb(212,52,42)" rx="2" ry="2" />
<text  x="321.72" y="1807.5" ></text>
</g>
<g >
<title>skb_release_data (19 samples, 0.32%)</title><rect x="1110.6" y="1477" width="3.8" height="15.0" fill="rgb(212,153,9)" rx="2" ry="2" />
<text  x="1113.58" y="1487.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="567.2" y="1973" width="0.4" height="15.0" fill="rgb(237,69,39)" rx="2" ry="2" />
<text  x="570.17" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1067.5" y="1685" width="0.2" height="15.0" fill="rgb(215,115,36)" rx="2" ry="2" />
<text  x="1070.47" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="540.4" y="1845" width="0.2" height="15.0" fill="rgb(246,120,41)" rx="2" ry="2" />
<text  x="543.43" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="964.7" y="1717" width="0.2" height="15.0" fill="rgb(220,189,4)" rx="2" ry="2" />
<text  x="967.70" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="340.3" y="1861" width="0.2" height="15.0" fill="rgb(220,222,51)" rx="2" ry="2" />
<text  x="343.27" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="32.6" y="1701" width="0.1" height="15.0" fill="rgb(236,1,39)" rx="2" ry="2" />
<text  x="35.55" y="1711.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (4 samples, 0.07%)</title><rect x="974.5" y="2005" width="0.8" height="15.0" fill="rgb(214,206,0)" rx="2" ry="2" />
<text  x="977.47" y="2015.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="727.2" y="1717" width="0.2" height="15.0" fill="rgb(218,82,38)" rx="2" ry="2" />
<text  x="730.22" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="964.7" y="1925" width="0.2" height="15.0" fill="rgb(208,53,51)" rx="2" ry="2" />
<text  x="967.70" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="876.5" y="1925" width="0.2" height="15.0" fill="rgb(205,182,3)" rx="2" ry="2" />
<text  x="879.49" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="53.9" y="1861" width="0.2" height="15.0" fill="rgb(223,29,13)" rx="2" ry="2" />
<text  x="56.90" y="1871.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="27.6" y="1925" width="0.8" height="15.0" fill="rgb(241,81,26)" rx="2" ry="2" />
<text  x="30.56" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (1 samples, 0.02%)</title><rect x="614.7" y="2021" width="0.2" height="15.0" fill="rgb(208,93,38)" rx="2" ry="2" />
<text  x="617.67" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="982.1" y="1797" width="0.2" height="15.0" fill="rgb(207,152,35)" rx="2" ry="2" />
<text  x="985.06" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="946.1" y="2005" width="0.2" height="15.0" fill="rgb(238,174,37)" rx="2" ry="2" />
<text  x="949.14" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1018.6" y="1813" width="0.2" height="15.0" fill="rgb(218,66,36)" rx="2" ry="2" />
<text  x="1021.58" y="1823.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="614.3" y="1925" width="0.2" height="15.0" fill="rgb(205,71,50)" rx="2" ry="2" />
<text  x="617.27" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="777.3" y="1477" width="0.4" height="15.0" fill="rgb(244,144,29)" rx="2" ry="2" />
<text  x="780.31" y="1487.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="451.8" y="1621" width="0.2" height="15.0" fill="rgb(231,4,29)" rx="2" ry="2" />
<text  x="454.83" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="133.5" y="1765" width="0.2" height="15.0" fill="rgb(223,63,40)" rx="2" ry="2" />
<text  x="136.53" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (3 samples, 0.05%)</title><rect x="856.1" y="1973" width="0.6" height="15.0" fill="rgb(221,198,46)" rx="2" ry="2" />
<text  x="859.14" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="45.3" y="1973" width="0.2" height="15.0" fill="rgb(222,9,50)" rx="2" ry="2" />
<text  x="48.32" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1067.5" y="1781" width="0.2" height="15.0" fill="rgb(242,162,34)" rx="2" ry="2" />
<text  x="1070.47" y="1791.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="93.8" y="1989" width="0.2" height="15.0" fill="rgb(206,136,7)" rx="2" ry="2" />
<text  x="96.82" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="272.2" y="1845" width="0.2" height="15.0" fill="rgb(243,191,9)" rx="2" ry="2" />
<text  x="275.22" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 1.73%)</title><rect x="104.2" y="1909" width="20.3" height="15.0" fill="rgb(243,119,54)" rx="2" ry="2" />
<text  x="107.19" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.03%)</title><rect x="86.2" y="1941" width="0.4" height="15.0" fill="rgb(225,40,6)" rx="2" ry="2" />
<text  x="89.23" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="635.4" y="1909" width="0.4" height="15.0" fill="rgb(248,16,21)" rx="2" ry="2" />
<text  x="638.42" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="995.4" y="1925" width="0.2" height="15.0" fill="rgb(243,41,3)" rx="2" ry="2" />
<text  x="998.43" y="1935.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="202.2" y="1813" width="0.2" height="15.0" fill="rgb(215,97,32)" rx="2" ry="2" />
<text  x="205.18" y="1823.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="488.7" y="1973" width="0.2" height="15.0" fill="rgb(250,144,51)" rx="2" ry="2" />
<text  x="491.75" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="364.4" y="1941" width="0.2" height="15.0" fill="rgb(248,98,50)" rx="2" ry="2" />
<text  x="367.42" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="452.0" y="1781" width="0.2" height="15.0" fill="rgb(206,112,27)" rx="2" ry="2" />
<text  x="455.03" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="895.0" y="2021" width="0.4" height="15.0" fill="rgb(219,67,12)" rx="2" ry="2" />
<text  x="898.05" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (28 samples, 0.47%)</title><rect x="165.1" y="2021" width="5.5" height="15.0" fill="rgb(241,136,18)" rx="2" ry="2" />
<text  x="168.06" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (121 samples, 2.05%)</title><rect x="776.3" y="1605" width="24.2" height="15.0" fill="rgb(233,87,17)" rx="2" ry="2" />
<text  x="779.31" y="1615.5" >i..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (119 samples, 2.01%)</title><rect x="135.9" y="1989" width="23.8" height="15.0" fill="rgb(207,193,15)" rx="2" ry="2" />
<text  x="138.92" y="1999.5" >s..</text>
</g>
<g >
<title>sk_prot_alloc (1 samples, 0.02%)</title><rect x="841.2" y="1573" width="0.2" height="15.0" fill="rgb(224,102,40)" rx="2" ry="2" />
<text  x="844.17" y="1583.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="993.0" y="1829" width="0.2" height="15.0" fill="rgb(216,98,36)" rx="2" ry="2" />
<text  x="996.03" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="50.7" y="1941" width="0.2" height="15.0" fill="rgb(212,35,42)" rx="2" ry="2" />
<text  x="53.71" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="940.2" y="1973" width="0.9" height="15.0" fill="rgb(237,50,13)" rx="2" ry="2" />
<text  x="943.15" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="971.1" y="2005" width="0.2" height="15.0" fill="rgb(226,205,27)" rx="2" ry="2" />
<text  x="974.08" y="2015.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="317.9" y="1829" width="0.4" height="15.0" fill="rgb(233,91,23)" rx="2" ry="2" />
<text  x="320.92" y="1839.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="1051.3" y="1973" width="0.4" height="15.0" fill="rgb(212,120,32)" rx="2" ry="2" />
<text  x="1054.31" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="136.7" y="1877" width="0.2" height="15.0" fill="rgb(217,22,13)" rx="2" ry="2" />
<text  x="139.72" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="646.4" y="1973" width="0.2" height="15.0" fill="rgb(236,12,13)" rx="2" ry="2" />
<text  x="649.40" y="1983.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (22 samples, 0.37%)</title><rect x="689.3" y="1893" width="4.4" height="15.0" fill="rgb(250,45,3)" rx="2" ry="2" />
<text  x="692.30" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="941.3" y="1989" width="0.4" height="15.0" fill="rgb(225,154,1)" rx="2" ry="2" />
<text  x="944.35" y="1999.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="255.1" y="1877" width="0.2" height="15.0" fill="rgb(227,37,43)" rx="2" ry="2" />
<text  x="258.06" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="119.4" y="53" width="0.2" height="15.0" fill="rgb(246,39,33)" rx="2" ry="2" />
<text  x="122.36" y="63.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="63.7" y="1845" width="0.2" height="15.0" fill="rgb(253,221,22)" rx="2" ry="2" />
<text  x="66.68" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="1020.4" y="2037" width="0.2" height="15.0" fill="rgb(220,170,25)" rx="2" ry="2" />
<text  x="1023.37" y="2047.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="379.6" y="1925" width="0.2" height="15.0" fill="rgb(225,194,36)" rx="2" ry="2" />
<text  x="382.59" y="1935.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1022.6" y="2005" width="0.2" height="15.0" fill="rgb(243,188,18)" rx="2" ry="2" />
<text  x="1025.57" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (34 samples, 0.58%)</title><rect x="1068.5" y="1893" width="6.8" height="15.0" fill="rgb(212,31,47)" rx="2" ry="2" />
<text  x="1071.47" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (6 samples, 0.10%)</title><rect x="77.3" y="1957" width="1.1" height="15.0" fill="rgb(243,151,13)" rx="2" ry="2" />
<text  x="80.25" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="974.3" y="2005" width="0.2" height="15.0" fill="rgb(220,78,14)" rx="2" ry="2" />
<text  x="977.28" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1122.1" y="1861" width="0.2" height="15.0" fill="rgb(248,144,49)" rx="2" ry="2" />
<text  x="1125.15" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="763.1" y="1605" width="0.2" height="15.0" fill="rgb(231,38,43)" rx="2" ry="2" />
<text  x="766.14" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (60 samples, 1.01%)</title><rect x="105.4" y="69" width="12.0" height="15.0" fill="rgb(238,84,7)" rx="2" ry="2" />
<text  x="108.39" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="63.9" y="1669" width="0.2" height="15.0" fill="rgb(244,125,10)" rx="2" ry="2" />
<text  x="66.88" y="1679.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="581.5" y="1989" width="0.2" height="15.0" fill="rgb(246,121,27)" rx="2" ry="2" />
<text  x="584.54" y="1999.5" ></text>
</g>
<g >
<title>inet_ehash_insert (1 samples, 0.02%)</title><rect x="1104.4" y="1637" width="0.2" height="15.0" fill="rgb(235,90,38)" rx="2" ry="2" />
<text  x="1107.39" y="1647.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="699.7" y="1957" width="0.2" height="15.0" fill="rgb(248,25,43)" rx="2" ry="2" />
<text  x="702.68" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="524.3" y="1925" width="0.2" height="15.0" fill="rgb(245,123,9)" rx="2" ry="2" />
<text  x="527.27" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="914.2" y="1493" width="0.2" height="15.0" fill="rgb(227,173,48)" rx="2" ry="2" />
<text  x="917.21" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="911.6" y="1989" width="0.2" height="15.0" fill="rgb(216,142,0)" rx="2" ry="2" />
<text  x="914.61" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1018.6" y="1893" width="0.2" height="15.0" fill="rgb(228,185,0)" rx="2" ry="2" />
<text  x="1021.58" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="546.0" y="1989" width="0.2" height="15.0" fill="rgb(217,62,41)" rx="2" ry="2" />
<text  x="549.02" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::isEmptyFunction&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="924.2" y="1893" width="0.2" height="15.0" fill="rgb(225,203,1)" rx="2" ry="2" />
<text  x="927.19" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="340.3" y="1781" width="0.2" height="15.0" fill="rgb(237,10,13)" rx="2" ry="2" />
<text  x="343.27" y="1791.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="274.4" y="1845" width="0.2" height="15.0" fill="rgb(238,135,13)" rx="2" ry="2" />
<text  x="277.42" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1182.8" y="1941" width="0.2" height="15.0" fill="rgb(228,107,26)" rx="2" ry="2" />
<text  x="1185.82" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="363.2" y="1685" width="0.2" height="15.0" fill="rgb(214,40,4)" rx="2" ry="2" />
<text  x="366.22" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1067.5" y="1733" width="0.2" height="15.0" fill="rgb(233,69,12)" rx="2" ry="2" />
<text  x="1070.47" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="121.0" y="325" width="0.2" height="15.0" fill="rgb(229,218,20)" rx="2" ry="2" />
<text  x="123.96" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="82.2" y="1925" width="0.2" height="15.0" fill="rgb(247,142,45)" rx="2" ry="2" />
<text  x="85.24" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="86.8" y="1973" width="0.2" height="15.0" fill="rgb(251,116,20)" rx="2" ry="2" />
<text  x="89.83" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (2 samples, 0.03%)</title><rect x="141.9" y="1925" width="0.4" height="15.0" fill="rgb(208,11,12)" rx="2" ry="2" />
<text  x="144.91" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="900.2" y="1973" width="0.2" height="15.0" fill="rgb(225,27,53)" rx="2" ry="2" />
<text  x="903.24" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="91.0" y="1925" width="0.2" height="15.0" fill="rgb(231,153,24)" rx="2" ry="2" />
<text  x="94.02" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="951.1" y="1877" width="0.2" height="15.0" fill="rgb(225,206,9)" rx="2" ry="2" />
<text  x="954.13" y="1887.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="1018.8" y="2037" width="0.4" height="15.0" fill="rgb(251,0,47)" rx="2" ry="2" />
<text  x="1021.78" y="2047.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (10 samples, 0.17%)</title><rect x="153.1" y="1893" width="2.0" height="15.0" fill="rgb(237,45,8)" rx="2" ry="2" />
<text  x="156.08" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="501.5" y="1749" width="0.8" height="15.0" fill="rgb(232,168,18)" rx="2" ry="2" />
<text  x="504.52" y="1759.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="408.5" y="1925" width="0.6" height="15.0" fill="rgb(241,150,33)" rx="2" ry="2" />
<text  x="411.52" y="1935.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="470.6" y="1813" width="0.2" height="15.0" fill="rgb(210,49,6)" rx="2" ry="2" />
<text  x="473.59" y="1823.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="629.4" y="1973" width="0.6" height="15.0" fill="rgb(226,187,36)" rx="2" ry="2" />
<text  x="632.44" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="602.3" y="1877" width="0.2" height="15.0" fill="rgb(214,8,30)" rx="2" ry="2" />
<text  x="605.29" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (14 samples, 0.24%)</title><rect x="70.5" y="1957" width="2.8" height="15.0" fill="rgb(235,221,18)" rx="2" ry="2" />
<text  x="73.47" y="1967.5" ></text>
</g>
<g >
<title>htons (1 samples, 0.02%)</title><rect x="32.2" y="1957" width="0.2" height="15.0" fill="rgb(232,183,47)" rx="2" ry="2" />
<text  x="35.15" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="816.4" y="1717" width="0.8" height="15.0" fill="rgb(222,228,47)" rx="2" ry="2" />
<text  x="819.42" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (1 samples, 0.02%)</title><rect x="69.3" y="1909" width="0.2" height="15.0" fill="rgb(207,14,8)" rx="2" ry="2" />
<text  x="72.27" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="617.5" y="1989" width="0.4" height="15.0" fill="rgb(205,218,14)" rx="2" ry="2" />
<text  x="620.46" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (3 samples, 0.05%)</title><rect x="708.1" y="1973" width="0.6" height="15.0" fill="rgb(233,43,20)" rx="2" ry="2" />
<text  x="711.06" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="672.3" y="1861" width="0.2" height="15.0" fill="rgb(214,137,38)" rx="2" ry="2" />
<text  x="675.34" y="1871.5" ></text>
</g>
<g >
<title>mod_timer (28 samples, 0.47%)</title><rect x="319.1" y="1765" width="5.6" height="15.0" fill="rgb(229,204,20)" rx="2" ry="2" />
<text  x="322.12" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="71.3" y="1893" width="1.0" height="15.0" fill="rgb(236,83,5)" rx="2" ry="2" />
<text  x="74.27" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="185.0" y="1989" width="0.6" height="15.0" fill="rgb(253,180,50)" rx="2" ry="2" />
<text  x="188.01" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="1089.2" y="1909" width="0.8" height="15.0" fill="rgb(205,71,22)" rx="2" ry="2" />
<text  x="1092.22" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="805.8" y="1541" width="0.4" height="15.0" fill="rgb(235,125,39)" rx="2" ry="2" />
<text  x="808.85" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="951.1" y="1717" width="0.2" height="15.0" fill="rgb(210,16,2)" rx="2" ry="2" />
<text  x="954.13" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (2 samples, 0.03%)</title><rect x="910.8" y="2037" width="0.4" height="15.0" fill="rgb(210,181,16)" rx="2" ry="2" />
<text  x="913.82" y="2047.5" ></text>
</g>
<g >
<title>__release_sock (13 samples, 0.22%)</title><rect x="1086.6" y="1909" width="2.6" height="15.0" fill="rgb(223,121,30)" rx="2" ry="2" />
<text  x="1089.63" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1067.1" y="1829" width="0.2" height="15.0" fill="rgb(215,108,3)" rx="2" ry="2" />
<text  x="1070.07" y="1839.5" ></text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.02%)</title><rect x="321.5" y="1749" width="0.2" height="15.0" fill="rgb(243,114,45)" rx="2" ry="2" />
<text  x="324.51" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="53.9" y="1877" width="0.2" height="15.0" fill="rgb(210,102,29)" rx="2" ry="2" />
<text  x="56.90" y="1887.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="542.6" y="1957" width="0.2" height="15.0" fill="rgb(226,26,14)" rx="2" ry="2" />
<text  x="545.63" y="1967.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="672.3" y="1589" width="0.2" height="15.0" fill="rgb(251,43,0)" rx="2" ry="2" />
<text  x="675.34" y="1599.5" ></text>
</g>
<g >
<title>call_rcu_sched (2 samples, 0.03%)</title><rect x="724.8" y="1797" width="0.4" height="15.0" fill="rgb(246,128,20)" rx="2" ry="2" />
<text  x="727.82" y="1807.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="620.5" y="2005" width="0.4" height="15.0" fill="rgb(237,229,50)" rx="2" ry="2" />
<text  x="623.45" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (107 samples, 1.81%)</title><rect x="581.5" y="2021" width="21.4" height="15.0" fill="rgb(206,117,51)" rx="2" ry="2" />
<text  x="584.54" y="2031.5" >f..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="909.4" y="1877" width="0.2" height="15.0" fill="rgb(209,184,42)" rx="2" ry="2" />
<text  x="912.42" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="920.2" y="1925" width="0.2" height="15.0" fill="rgb(241,101,45)" rx="2" ry="2" />
<text  x="923.19" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (2 samples, 0.03%)</title><rect x="1147.7" y="2021" width="0.4" height="15.0" fill="rgb(215,56,54)" rx="2" ry="2" />
<text  x="1150.69" y="2031.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="839.8" y="1909" width="0.2" height="15.0" fill="rgb(212,65,18)" rx="2" ry="2" />
<text  x="842.77" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="23.0" y="1829" width="0.2" height="15.0" fill="rgb(229,117,26)" rx="2" ry="2" />
<text  x="25.97" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="372.4" y="1925" width="0.2" height="15.0" fill="rgb(231,33,0)" rx="2" ry="2" />
<text  x="375.40" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="64.1" y="1909" width="0.8" height="15.0" fill="rgb(247,175,47)" rx="2" ry="2" />
<text  x="67.08" y="1919.5" ></text>
</g>
<g >
<title>ip_output (137 samples, 2.32%)</title><rect x="283.6" y="1781" width="27.3" height="15.0" fill="rgb(218,33,38)" rx="2" ry="2" />
<text  x="286.60" y="1791.5" >i..</text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="944.7" y="2005" width="0.8" height="15.0" fill="rgb(252,24,34)" rx="2" ry="2" />
<text  x="947.74" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="155.1" y="1893" width="0.4" height="15.0" fill="rgb(244,30,8)" rx="2" ry="2" />
<text  x="158.08" y="1903.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="892.1" y="1861" width="0.2" height="15.0" fill="rgb(240,50,51)" rx="2" ry="2" />
<text  x="895.06" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="996.0" y="1957" width="0.2" height="15.0" fill="rgb(246,23,45)" rx="2" ry="2" />
<text  x="999.03" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (3 samples, 0.05%)</title><rect x="317.1" y="1813" width="0.6" height="15.0" fill="rgb(250,114,40)" rx="2" ry="2" />
<text  x="320.12" y="1823.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.02%)</title><rect x="470.6" y="1781" width="0.2" height="15.0" fill="rgb(254,139,4)" rx="2" ry="2" />
<text  x="473.59" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1165.9" y="2053" width="0.2" height="15.0" fill="rgb(212,145,19)" rx="2" ry="2" />
<text  x="1168.85" y="2063.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="386.4" y="1909" width="0.8" height="15.0" fill="rgb(242,182,30)" rx="2" ry="2" />
<text  x="389.37" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="202.2" y="1845" width="0.2" height="15.0" fill="rgb(228,1,44)" rx="2" ry="2" />
<text  x="205.18" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="219.7" y="1909" width="0.2" height="15.0" fill="rgb(247,19,40)" rx="2" ry="2" />
<text  x="222.74" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="167.3" y="1973" width="0.2" height="15.0" fill="rgb(213,192,0)" rx="2" ry="2" />
<text  x="170.25" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1018.6" y="1989" width="0.2" height="15.0" fill="rgb(248,172,19)" rx="2" ry="2" />
<text  x="1021.58" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="549" width="16.0" height="15.0" fill="rgb(220,190,40)" rx="2" ry="2" />
<text  x="108.39" y="559.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="452.0" y="1861" width="0.2" height="15.0" fill="rgb(214,162,33)" rx="2" ry="2" />
<text  x="455.03" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="951.1" y="1733" width="0.2" height="15.0" fill="rgb(254,100,7)" rx="2" ry="2" />
<text  x="954.13" y="1743.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (5 samples, 0.08%)</title><rect x="958.5" y="2005" width="1.0" height="15.0" fill="rgb(232,184,28)" rx="2" ry="2" />
<text  x="961.51" y="2015.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="261.8" y="1797" width="0.2" height="15.0" fill="rgb(234,139,22)" rx="2" ry="2" />
<text  x="264.85" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="226.9" y="1781" width="0.2" height="15.0" fill="rgb(243,100,23)" rx="2" ry="2" />
<text  x="229.92" y="1791.5" ></text>
</g>
<g >
<title>timespec64_add_safe (1 samples, 0.02%)</title><rect x="508.3" y="1973" width="0.2" height="15.0" fill="rgb(254,195,24)" rx="2" ry="2" />
<text  x="511.30" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="150.9" y="1877" width="0.2" height="15.0" fill="rgb(249,184,32)" rx="2" ry="2" />
<text  x="153.89" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (121 samples, 2.05%)</title><rect x="676.7" y="2037" width="24.2" height="15.0" fill="rgb(219,209,12)" rx="2" ry="2" />
<text  x="679.73" y="2047.5" >f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (87 samples, 1.47%)</title><rect x="678.1" y="1973" width="17.4" height="15.0" fill="rgb(205,1,22)" rx="2" ry="2" />
<text  x="681.13" y="1983.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (2 samples, 0.03%)</title><rect x="998.6" y="2021" width="0.4" height="15.0" fill="rgb(224,55,39)" rx="2" ry="2" />
<text  x="1001.62" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="777.3" y="1493" width="0.4" height="15.0" fill="rgb(227,227,10)" rx="2" ry="2" />
<text  x="780.31" y="1503.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (5 samples, 0.08%)</title><rect x="806.6" y="1653" width="1.0" height="15.0" fill="rgb(228,27,3)" rx="2" ry="2" />
<text  x="809.64" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1067.9" y="1701" width="0.2" height="15.0" fill="rgb(206,25,33)" rx="2" ry="2" />
<text  x="1070.87" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (9 samples, 0.15%)</title><rect x="50.9" y="1941" width="1.8" height="15.0" fill="rgb(235,82,3)" rx="2" ry="2" />
<text  x="53.91" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (79 samples, 1.34%)</title><rect x="975.3" y="2005" width="15.7" height="15.0" fill="rgb(229,0,16)" rx="2" ry="2" />
<text  x="978.27" y="2015.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (26 samples, 0.44%)</title><rect x="688.5" y="1925" width="5.2" height="15.0" fill="rgb(250,52,26)" rx="2" ry="2" />
<text  x="691.50" y="1935.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.03%)</title><rect x="451.4" y="1957" width="0.4" height="15.0" fill="rgb(224,56,19)" rx="2" ry="2" />
<text  x="454.43" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1139.5" y="1893" width="0.2" height="15.0" fill="rgb(238,30,34)" rx="2" ry="2" />
<text  x="1142.51" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1174.2" y="1989" width="0.2" height="15.0" fill="rgb(240,117,37)" rx="2" ry="2" />
<text  x="1177.23" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (14 samples, 0.24%)</title><rect x="1005.0" y="2005" width="2.8" height="15.0" fill="rgb(215,123,54)" rx="2" ry="2" />
<text  x="1008.01" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="219.9" y="1893" width="0.4" height="15.0" fill="rgb(221,111,42)" rx="2" ry="2" />
<text  x="222.94" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="186.8" y="2021" width="0.2" height="15.0" fill="rgb(206,19,26)" rx="2" ry="2" />
<text  x="189.81" y="2031.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="182.4" y="1941" width="0.2" height="15.0" fill="rgb(206,16,21)" rx="2" ry="2" />
<text  x="185.42" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="574.8" y="1957" width="0.4" height="15.0" fill="rgb(249,193,7)" rx="2" ry="2" />
<text  x="577.76" y="1967.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="32.9" y="1989" width="0.4" height="15.0" fill="rgb(251,134,8)" rx="2" ry="2" />
<text  x="35.95" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (11 samples, 0.19%)</title><rect x="1144.1" y="2005" width="2.2" height="15.0" fill="rgb(217,175,9)" rx="2" ry="2" />
<text  x="1147.10" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="892.1" y="1829" width="0.2" height="15.0" fill="rgb(218,37,5)" rx="2" ry="2" />
<text  x="895.06" y="1839.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (7 samples, 0.12%)</title><rect x="963.3" y="2021" width="1.4" height="15.0" fill="rgb(225,194,33)" rx="2" ry="2" />
<text  x="966.30" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="970.5" y="1989" width="0.6" height="15.0" fill="rgb(229,93,10)" rx="2" ry="2" />
<text  x="973.48" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="948.3" y="1973" width="0.8" height="15.0" fill="rgb(218,112,15)" rx="2" ry="2" />
<text  x="951.33" y="1983.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (1 samples, 0.02%)</title><rect x="644.4" y="1989" width="0.2" height="15.0" fill="rgb(236,129,32)" rx="2" ry="2" />
<text  x="647.40" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1080.6" y="1797" width="0.2" height="15.0" fill="rgb(228,136,40)" rx="2" ry="2" />
<text  x="1083.64" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="565" width="16.0" height="15.0" fill="rgb(226,113,47)" rx="2" ry="2" />
<text  x="108.39" y="575.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="515.1" y="1957" width="0.4" height="15.0" fill="rgb(210,187,17)" rx="2" ry="2" />
<text  x="518.09" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="462.0" y="1605" width="0.2" height="15.0" fill="rgb(254,23,31)" rx="2" ry="2" />
<text  x="465.00" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="914.2" y="1525" width="0.2" height="15.0" fill="rgb(253,218,13)" rx="2" ry="2" />
<text  x="917.21" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="109.8" y="37" width="0.8" height="15.0" fill="rgb(237,105,12)" rx="2" ry="2" />
<text  x="112.78" y="47.5" ></text>
</g>
<g >
<title>task_work_run (544 samples, 9.20%)</title><rect x="721.6" y="1845" width="108.6" height="15.0" fill="rgb(254,89,11)" rx="2" ry="2" />
<text  x="724.63" y="1855.5" >task_work_run</text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (43 samples, 0.73%)</title><rect x="1170.4" y="2053" width="8.6" height="15.0" fill="rgb(251,43,14)" rx="2" ry="2" />
<text  x="1173.44" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="636.6" y="1909" width="0.2" height="15.0" fill="rgb(245,128,5)" rx="2" ry="2" />
<text  x="639.62" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="33.7" y="1973" width="0.2" height="15.0" fill="rgb(222,220,51)" rx="2" ry="2" />
<text  x="36.75" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="844.4" y="1765" width="0.2" height="15.0" fill="rgb(252,91,2)" rx="2" ry="2" />
<text  x="847.36" y="1775.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="10.4" y="1909" width="0.8" height="15.0" fill="rgb(253,4,34)" rx="2" ry="2" />
<text  x="13.40" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="964.9" y="2037" width="0.2" height="15.0" fill="rgb(246,25,12)" rx="2" ry="2" />
<text  x="967.90" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="326.1" y="1861" width="0.2" height="15.0" fill="rgb(216,38,16)" rx="2" ry="2" />
<text  x="329.10" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="125.7" y="1957" width="0.2" height="15.0" fill="rgb(220,106,37)" rx="2" ry="2" />
<text  x="128.74" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="277.0" y="1829" width="0.2" height="15.0" fill="rgb(254,36,54)" rx="2" ry="2" />
<text  x="280.01" y="1839.5" ></text>
</g>
<g >
<title>__slab_free (6 samples, 0.10%)</title><rect x="737.0" y="1653" width="1.2" height="15.0" fill="rgb(244,167,50)" rx="2" ry="2" />
<text  x="740.00" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1049.3" y="1861" width="0.4" height="15.0" fill="rgb(240,165,13)" rx="2" ry="2" />
<text  x="1052.31" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="40.5" y="1989" width="0.2" height="15.0" fill="rgb(253,148,17)" rx="2" ry="2" />
<text  x="43.53" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (1 samples, 0.02%)</title><rect x="1142.5" y="2005" width="0.2" height="15.0" fill="rgb(240,107,40)" rx="2" ry="2" />
<text  x="1145.50" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="568.2" y="1893" width="0.2" height="15.0" fill="rgb(246,23,29)" rx="2" ry="2" />
<text  x="571.17" y="1903.5" ></text>
</g>
<g >
<title>security_file_fcntl (1 samples, 0.02%)</title><rect x="559.8" y="1941" width="0.2" height="15.0" fill="rgb(246,98,27)" rx="2" ry="2" />
<text  x="562.79" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1080.6" y="1733" width="0.2" height="15.0" fill="rgb(228,51,50)" rx="2" ry="2" />
<text  x="1083.64" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.4" y="2021" width="0.2" height="15.0" fill="rgb(221,126,49)" rx="2" ry="2" />
<text  x="1186.41" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="227.7" y="1829" width="0.6" height="15.0" fill="rgb(237,121,5)" rx="2" ry="2" />
<text  x="230.72" y="1839.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1108.0" y="1813" width="0.2" height="15.0" fill="rgb(210,122,26)" rx="2" ry="2" />
<text  x="1110.98" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1139.5" y="1941" width="0.2" height="15.0" fill="rgb(226,186,14)" rx="2" ry="2" />
<text  x="1142.51" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="54.9" y="1957" width="0.2" height="15.0" fill="rgb(245,44,3)" rx="2" ry="2" />
<text  x="57.90" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="73.1" y="1941" width="0.2" height="15.0" fill="rgb(248,115,13)" rx="2" ry="2" />
<text  x="76.06" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (14 samples, 0.24%)</title><rect x="986.0" y="1925" width="2.8" height="15.0" fill="rgb(222,155,6)" rx="2" ry="2" />
<text  x="989.05" y="1935.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="317.7" y="1829" width="0.2" height="15.0" fill="rgb(239,45,51)" rx="2" ry="2" />
<text  x="320.72" y="1839.5" ></text>
</g>
<g >
<title>d_instantiate (4 samples, 0.07%)</title><rect x="406.9" y="1941" width="0.8" height="15.0" fill="rgb(253,149,30)" rx="2" ry="2" />
<text  x="409.93" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="562.2" y="1973" width="0.2" height="15.0" fill="rgb(214,0,18)" rx="2" ry="2" />
<text  x="565.18" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="459.8" y="1653" width="0.4" height="15.0" fill="rgb(211,205,48)" rx="2" ry="2" />
<text  x="462.81" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="903.0" y="1973" width="0.4" height="15.0" fill="rgb(229,163,46)" rx="2" ry="2" />
<text  x="906.03" y="1983.5" ></text>
</g>
<g >
<title>malloc (24 samples, 0.41%)</title><rect x="1184.6" y="2053" width="4.8" height="15.0" fill="rgb(247,182,31)" rx="2" ry="2" />
<text  x="1187.61" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.25%)</title><rect x="608.7" y="1861" width="3.0" height="15.0" fill="rgb(222,174,47)" rx="2" ry="2" />
<text  x="611.68" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="982.1" y="1829" width="0.2" height="15.0" fill="rgb(245,52,5)" rx="2" ry="2" />
<text  x="985.06" y="1839.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.02%)</title><rect x="732.2" y="1637" width="0.2" height="15.0" fill="rgb(237,17,13)" rx="2" ry="2" />
<text  x="735.21" y="1647.5" ></text>
</g>
<g >
<title>sys_sendmsg (2 samples, 0.03%)</title><rect x="338.5" y="2005" width="0.4" height="15.0" fill="rgb(231,165,11)" rx="2" ry="2" />
<text  x="341.48" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (136 samples, 2.30%)</title><rect x="773.3" y="1653" width="27.2" height="15.0" fill="rgb(237,152,50)" rx="2" ry="2" />
<text  x="776.32" y="1663.5" >i..</text>
</g>
<g >
<title>__kfree_skb (22 samples, 0.37%)</title><rect x="1110.2" y="1509" width="4.4" height="15.0" fill="rgb(244,100,2)" rx="2" ry="2" />
<text  x="1113.18" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1205" width="16.0" height="15.0" fill="rgb(250,109,33)" rx="2" ry="2" />
<text  x="108.39" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1072.3" y="1653" width="0.2" height="15.0" fill="rgb(212,40,41)" rx="2" ry="2" />
<text  x="1075.26" y="1663.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="300.2" y="1605" width="0.2" height="15.0" fill="rgb(236,124,3)" rx="2" ry="2" />
<text  x="303.16" y="1615.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (1 samples, 0.02%)</title><rect x="964.7" y="2021" width="0.2" height="15.0" fill="rgb(205,20,5)" rx="2" ry="2" />
<text  x="967.70" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (42 samples, 0.71%)</title><rect x="933.4" y="2005" width="8.3" height="15.0" fill="rgb(239,44,2)" rx="2" ry="2" />
<text  x="936.37" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (6 samples, 0.10%)</title><rect x="884.3" y="1941" width="1.2" height="15.0" fill="rgb(205,110,2)" rx="2" ry="2" />
<text  x="887.27" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="316.5" y="1765" width="0.4" height="15.0" fill="rgb(230,6,44)" rx="2" ry="2" />
<text  x="319.52" y="1775.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="886.9" y="1861" width="0.2" height="15.0" fill="rgb(230,29,16)" rx="2" ry="2" />
<text  x="889.87" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="144.5" y="1893" width="0.4" height="15.0" fill="rgb(210,84,2)" rx="2" ry="2" />
<text  x="147.50" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11 samples, 0.19%)</title><rect x="288.4" y="1557" width="2.2" height="15.0" fill="rgb(221,175,5)" rx="2" ry="2" />
<text  x="291.39" y="1567.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="974.1" y="2005" width="0.2" height="15.0" fill="rgb(225,150,41)" rx="2" ry="2" />
<text  x="977.08" y="2015.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (247 samples, 4.18%)</title><rect x="767.1" y="1717" width="49.3" height="15.0" fill="rgb(210,152,33)" rx="2" ry="2" />
<text  x="770.13" y="1727.5" >__tc..</text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (1 samples, 0.02%)</title><rect x="603.7" y="1925" width="0.2" height="15.0" fill="rgb(235,203,19)" rx="2" ry="2" />
<text  x="606.69" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="962.1" y="2005" width="0.8" height="15.0" fill="rgb(234,2,9)" rx="2" ry="2" />
<text  x="965.10" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="63.7" y="1909" width="0.4" height="15.0" fill="rgb(253,167,33)" rx="2" ry="2" />
<text  x="66.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="568.8" y="1685" width="0.2" height="15.0" fill="rgb(215,99,12)" rx="2" ry="2" />
<text  x="571.77" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="501.5" y="1733" width="0.8" height="15.0" fill="rgb(208,163,51)" rx="2" ry="2" />
<text  x="504.52" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="523.5" y="1973" width="0.2" height="15.0" fill="rgb(214,80,10)" rx="2" ry="2" />
<text  x="526.47" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="363.2" y="1829" width="0.2" height="15.0" fill="rgb(205,133,54)" rx="2" ry="2" />
<text  x="366.22" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="721.4" y="1845" width="0.2" height="15.0" fill="rgb(232,53,34)" rx="2" ry="2" />
<text  x="724.43" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (4 samples, 0.07%)</title><rect x="635.0" y="1925" width="0.8" height="15.0" fill="rgb(240,206,19)" rx="2" ry="2" />
<text  x="638.02" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1110.4" y="1461" width="0.2" height="15.0" fill="rgb(207,132,6)" rx="2" ry="2" />
<text  x="1113.38" y="1471.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (1 samples, 0.02%)</title><rect x="603.1" y="1989" width="0.2" height="15.0" fill="rgb(236,150,50)" rx="2" ry="2" />
<text  x="606.09" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="272.2" y="1797" width="0.2" height="15.0" fill="rgb(232,37,5)" rx="2" ry="2" />
<text  x="275.22" y="1807.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="905.2" y="1893" width="0.2" height="15.0" fill="rgb(240,217,15)" rx="2" ry="2" />
<text  x="908.23" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (5 samples, 0.08%)</title><rect x="1144.1" y="1989" width="1.0" height="15.0" fill="rgb(238,221,43)" rx="2" ry="2" />
<text  x="1147.10" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (464 samples, 7.85%)</title><rect x="103.6" y="2037" width="92.6" height="15.0" fill="rgb(251,4,16)" rx="2" ry="2" />
<text  x="106.59" y="2047.5" >[unknown]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="12.4" y="2037" width="0.2" height="15.0" fill="rgb(241,147,11)" rx="2" ry="2" />
<text  x="15.39" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="58.9" y="1733" width="0.2" height="15.0" fill="rgb(212,141,27)" rx="2" ry="2" />
<text  x="61.89" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1127.3" y="2037" width="0.2" height="15.0" fill="rgb(239,54,19)" rx="2" ry="2" />
<text  x="1130.34" y="2047.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="27.6" y="1797" width="0.8" height="15.0" fill="rgb(208,76,40)" rx="2" ry="2" />
<text  x="30.56" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="951.1" y="1685" width="0.2" height="15.0" fill="rgb(205,33,13)" rx="2" ry="2" />
<text  x="954.13" y="1695.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="460.6" y="1925" width="0.4" height="15.0" fill="rgb(234,71,39)" rx="2" ry="2" />
<text  x="463.61" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="951.1" y="1781" width="0.2" height="15.0" fill="rgb(228,22,1)" rx="2" ry="2" />
<text  x="954.13" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="914.2" y="1509" width="0.2" height="15.0" fill="rgb(243,59,54)" rx="2" ry="2" />
<text  x="917.21" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1108.6" y="1621" width="0.4" height="15.0" fill="rgb(237,101,29)" rx="2" ry="2" />
<text  x="1111.58" y="1631.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="844.4" y="1477" width="0.2" height="15.0" fill="rgb(228,113,18)" rx="2" ry="2" />
<text  x="847.36" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="321.3" y="1557" width="0.2" height="15.0" fill="rgb(228,197,39)" rx="2" ry="2" />
<text  x="324.31" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="1145.1" y="1941" width="0.2" height="15.0" fill="rgb(222,194,17)" rx="2" ry="2" />
<text  x="1148.10" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (301 samples, 5.09%)</title><rect x="350.3" y="2021" width="60.0" height="15.0" fill="rgb(237,168,12)" rx="2" ry="2" />
<text  x="353.25" y="2031.5" >entry_..</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="178.8" y="1941" width="0.2" height="15.0" fill="rgb(228,188,29)" rx="2" ry="2" />
<text  x="181.83" y="1951.5" ></text>
</g>
<g >
<title>__alloc_skb (37 samples, 0.63%)</title><rect x="266.4" y="1861" width="7.4" height="15.0" fill="rgb(240,206,13)" rx="2" ry="2" />
<text  x="269.43" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="914.2" y="1941" width="0.2" height="15.0" fill="rgb(206,73,23)" rx="2" ry="2" />
<text  x="917.21" y="1951.5" ></text>
</g>
<g >
<title>calc_wheel_index (1 samples, 0.02%)</title><rect x="452.0" y="1605" width="0.2" height="15.0" fill="rgb(239,190,48)" rx="2" ry="2" />
<text  x="455.03" y="1615.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="672.7" y="1829" width="0.8" height="15.0" fill="rgb(216,2,33)" rx="2" ry="2" />
<text  x="675.74" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="984.1" y="1941" width="1.7" height="15.0" fill="rgb(212,76,9)" rx="2" ry="2" />
<text  x="987.05" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (4 samples, 0.07%)</title><rect x="519.9" y="1973" width="0.8" height="15.0" fill="rgb(237,34,4)" rx="2" ry="2" />
<text  x="522.88" y="1983.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="324.7" y="1829" width="0.2" height="15.0" fill="rgb(222,39,5)" rx="2" ry="2" />
<text  x="327.71" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (3 samples, 0.05%)</title><rect x="926.6" y="1893" width="0.6" height="15.0" fill="rgb(224,195,0)" rx="2" ry="2" />
<text  x="929.58" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="672.5" y="1893" width="1.0" height="15.0" fill="rgb(252,217,25)" rx="2" ry="2" />
<text  x="675.54" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="904.4" y="1973" width="0.2" height="15.0" fill="rgb(233,194,40)" rx="2" ry="2" />
<text  x="907.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (1 samples, 0.02%)</title><rect x="615.5" y="2005" width="0.2" height="15.0" fill="rgb(214,195,1)" rx="2" ry="2" />
<text  x="618.47" y="2015.5" ></text>
</g>
<g >
<title>swiotlb_sync_single_for_device (1 samples, 0.02%)</title><rect x="90.0" y="1861" width="0.2" height="15.0" fill="rgb(234,44,0)" rx="2" ry="2" />
<text  x="93.02" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="900.4" y="1765" width="0.2" height="15.0" fill="rgb(212,166,50)" rx="2" ry="2" />
<text  x="903.44" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_init_ts_off (1 samples, 0.02%)</title><rect x="964.7" y="1685" width="0.2" height="15.0" fill="rgb(236,66,52)" rx="2" ry="2" />
<text  x="967.70" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="842.8" y="1829" width="0.2" height="15.0" fill="rgb(239,18,13)" rx="2" ry="2" />
<text  x="845.77" y="1839.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="607.9" y="1813" width="0.2" height="15.0" fill="rgb(209,8,24)" rx="2" ry="2" />
<text  x="610.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.63%)</title><rect x="623.0" y="2021" width="7.4" height="15.0" fill="rgb(228,90,40)" rx="2" ry="2" />
<text  x="626.05" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="523.3" y="1973" width="0.2" height="15.0" fill="rgb(214,133,23)" rx="2" ry="2" />
<text  x="526.27" y="1983.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="357.4" y="1989" width="1.0" height="15.0" fill="rgb(227,227,38)" rx="2" ry="2" />
<text  x="360.43" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (19 samples, 0.32%)</title><rect x="446.6" y="1957" width="3.8" height="15.0" fill="rgb(213,192,51)" rx="2" ry="2" />
<text  x="449.64" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (20 samples, 0.34%)</title><rect x="917.8" y="1957" width="4.0" height="15.0" fill="rgb(216,205,18)" rx="2" ry="2" />
<text  x="920.80" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="1142.7" y="2037" width="0.2" height="15.0" fill="rgb(253,98,24)" rx="2" ry="2" />
<text  x="1145.70" y="2047.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="989.2" y="1989" width="0.6" height="15.0" fill="rgb(228,185,0)" rx="2" ry="2" />
<text  x="992.24" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (5 samples, 0.08%)</title><rect x="69.5" y="1893" width="1.0" height="15.0" fill="rgb(229,2,6)" rx="2" ry="2" />
<text  x="72.47" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="28.8" y="1893" width="0.2" height="15.0" fill="rgb(220,43,23)" rx="2" ry="2" />
<text  x="31.76" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="462.0" y="1925" width="0.2" height="15.0" fill="rgb(241,223,40)" rx="2" ry="2" />
<text  x="465.00" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (2 samples, 0.03%)</title><rect x="1004.0" y="1989" width="0.4" height="15.0" fill="rgb(221,176,35)" rx="2" ry="2" />
<text  x="1007.01" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1178.6" y="2021" width="0.4" height="15.0" fill="rgb(210,131,4)" rx="2" ry="2" />
<text  x="1181.63" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="573.6" y="1957" width="0.4" height="15.0" fill="rgb(212,54,48)" rx="2" ry="2" />
<text  x="576.56" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="867.5" y="1973" width="0.6" height="15.0" fill="rgb(234,185,27)" rx="2" ry="2" />
<text  x="870.51" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (20 samples, 0.34%)</title><rect x="884.1" y="1957" width="4.0" height="15.0" fill="rgb(218,223,2)" rx="2" ry="2" />
<text  x="887.07" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1088.4" y="1797" width="0.2" height="15.0" fill="rgb(225,4,50)" rx="2" ry="2" />
<text  x="1091.42" y="1807.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="596.9" y="1829" width="0.4" height="15.0" fill="rgb(228,69,33)" rx="2" ry="2" />
<text  x="599.91" y="1839.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="844.4" y="1525" width="0.2" height="15.0" fill="rgb(217,221,8)" rx="2" ry="2" />
<text  x="847.36" y="1535.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="528.9" y="1845" width="0.2" height="15.0" fill="rgb(223,21,5)" rx="2" ry="2" />
<text  x="531.86" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="32.7" y="1989" width="0.2" height="15.0" fill="rgb(228,33,50)" rx="2" ry="2" />
<text  x="35.75" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (5 samples, 0.08%)</title><rect x="142.3" y="1925" width="1.0" height="15.0" fill="rgb(226,211,14)" rx="2" ry="2" />
<text  x="145.31" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="58.9" y="1637" width="0.2" height="15.0" fill="rgb(215,202,20)" rx="2" ry="2" />
<text  x="61.89" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="842.8" y="1797" width="0.2" height="15.0" fill="rgb(210,128,26)" rx="2" ry="2" />
<text  x="845.77" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="373.4" y="1797" width="0.2" height="15.0" fill="rgb(230,134,29)" rx="2" ry="2" />
<text  x="376.40" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1067.5" y="1845" width="0.2" height="15.0" fill="rgb(215,119,16)" rx="2" ry="2" />
<text  x="1070.47" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="892.3" y="1973" width="0.2" height="15.0" fill="rgb(233,115,34)" rx="2" ry="2" />
<text  x="895.26" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (1 samples, 0.02%)</title><rect x="957.5" y="2037" width="0.2" height="15.0" fill="rgb(207,222,7)" rx="2" ry="2" />
<text  x="960.51" y="2047.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="198.4" y="2021" width="0.2" height="15.0" fill="rgb(226,108,5)" rx="2" ry="2" />
<text  x="201.38" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="800.3" y="1573" width="0.2" height="15.0" fill="rgb(226,188,33)" rx="2" ry="2" />
<text  x="803.26" y="1583.5" ></text>
</g>
<g >
<title>inode_init_always (10 samples, 0.17%)</title><rect x="389.4" y="1909" width="2.0" height="15.0" fill="rgb(231,196,52)" rx="2" ry="2" />
<text  x="392.36" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (14 samples, 0.24%)</title><rect x="12.6" y="1877" width="2.8" height="15.0" fill="rgb(224,221,20)" rx="2" ry="2" />
<text  x="15.59" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="11.6" y="1909" width="0.8" height="15.0" fill="rgb(237,7,13)" rx="2" ry="2" />
<text  x="14.60" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1072.3" y="1717" width="0.2" height="15.0" fill="rgb(254,180,3)" rx="2" ry="2" />
<text  x="1075.26" y="1727.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="435.5" y="1989" width="0.2" height="15.0" fill="rgb(224,95,41)" rx="2" ry="2" />
<text  x="438.46" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="964.7" y="1893" width="0.2" height="15.0" fill="rgb(211,190,14)" rx="2" ry="2" />
<text  x="967.70" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="338.3" y="1797" width="0.2" height="15.0" fill="rgb(234,89,27)" rx="2" ry="2" />
<text  x="341.28" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="501.7" y="1653" width="0.4" height="15.0" fill="rgb(208,70,33)" rx="2" ry="2" />
<text  x="504.72" y="1663.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1090.8" y="1877" width="0.2" height="15.0" fill="rgb(213,109,27)" rx="2" ry="2" />
<text  x="1093.82" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="32.6" y="1845" width="0.1" height="15.0" fill="rgb(230,149,33)" rx="2" ry="2" />
<text  x="35.55" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="657.0" y="1957" width="1.6" height="15.0" fill="rgb(223,212,33)" rx="2" ry="2" />
<text  x="659.97" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (4 samples, 0.07%)</title><rect x="858.3" y="1989" width="0.8" height="15.0" fill="rgb(246,117,27)" rx="2" ry="2" />
<text  x="861.33" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="157.5" y="1925" width="0.2" height="15.0" fill="rgb(231,119,41)" rx="2" ry="2" />
<text  x="160.48" y="1935.5" ></text>
</g>
<g >
<title>sock_recvmsg (353 samples, 5.97%)</title><rect x="1052.5" y="1973" width="70.4" height="15.0" fill="rgb(207,10,29)" rx="2" ry="2" />
<text  x="1055.50" y="1983.5" >sock_re..</text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="58.9" y="1589" width="0.2" height="15.0" fill="rgb(240,126,53)" rx="2" ry="2" />
<text  x="61.89" y="1599.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="752.2" y="1733" width="0.2" height="15.0" fill="rgb(208,154,50)" rx="2" ry="2" />
<text  x="755.16" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1067.5" y="1861" width="0.2" height="15.0" fill="rgb(220,179,25)" rx="2" ry="2" />
<text  x="1070.47" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="373" width="15.8" height="15.0" fill="rgb(214,192,5)" rx="2" ry="2" />
<text  x="108.39" y="383.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (4 samples, 0.07%)</title><rect x="648.8" y="2021" width="0.8" height="15.0" fill="rgb(228,100,24)" rx="2" ry="2" />
<text  x="651.79" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="47.5" y="1909" width="0.6" height="15.0" fill="rgb(224,127,4)" rx="2" ry="2" />
<text  x="50.52" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="529.3" y="1941" width="0.2" height="15.0" fill="rgb(223,137,19)" rx="2" ry="2" />
<text  x="532.26" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (2 samples, 0.03%)</title><rect x="157.3" y="1941" width="0.4" height="15.0" fill="rgb(228,37,46)" rx="2" ry="2" />
<text  x="160.28" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="570.8" y="2005" width="0.4" height="15.0" fill="rgb(250,80,53)" rx="2" ry="2" />
<text  x="573.76" y="2015.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="12.4" y="2053" width="0.2" height="15.0" fill="rgb(231,183,34)" rx="2" ry="2" />
<text  x="15.39" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="951.9" y="2005" width="0.2" height="15.0" fill="rgb(245,180,3)" rx="2" ry="2" />
<text  x="954.92" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="910.2" y="2037" width="0.4" height="15.0" fill="rgb(222,34,27)" rx="2" ry="2" />
<text  x="913.22" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (5 samples, 0.08%)</title><rect x="178.4" y="1973" width="1.0" height="15.0" fill="rgb(213,6,20)" rx="2" ry="2" />
<text  x="181.43" y="1983.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (17 samples, 0.29%)</title><rect x="148.1" y="1925" width="3.4" height="15.0" fill="rgb(213,25,47)" rx="2" ry="2" />
<text  x="151.10" y="1935.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="155.5" y="1909" width="0.2" height="15.0" fill="rgb(241,181,47)" rx="2" ry="2" />
<text  x="158.48" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="539.4" y="1829" width="0.2" height="15.0" fill="rgb(244,51,4)" rx="2" ry="2" />
<text  x="542.43" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="950.1" y="2005" width="0.2" height="15.0" fill="rgb(234,107,12)" rx="2" ry="2" />
<text  x="953.13" y="2015.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="83.6" y="1877" width="0.4" height="15.0" fill="rgb(245,79,34)" rx="2" ry="2" />
<text  x="86.64" y="1887.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="730.4" y="1701" width="0.2" height="15.0" fill="rgb(224,118,38)" rx="2" ry="2" />
<text  x="733.41" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="338.3" y="1813" width="0.2" height="15.0" fill="rgb(240,83,8)" rx="2" ry="2" />
<text  x="341.28" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="949.3" y="2005" width="0.2" height="15.0" fill="rgb(205,214,52)" rx="2" ry="2" />
<text  x="952.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="623.6" y="2005" width="0.6" height="15.0" fill="rgb(206,201,6)" rx="2" ry="2" />
<text  x="626.65" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (3 samples, 0.05%)</title><rect x="656.2" y="1973" width="0.6" height="15.0" fill="rgb(242,105,27)" rx="2" ry="2" />
<text  x="659.18" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="741.4" y="1749" width="0.2" height="15.0" fill="rgb(251,2,38)" rx="2" ry="2" />
<text  x="744.39" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="234.9" y="1957" width="0.2" height="15.0" fill="rgb(216,64,50)" rx="2" ry="2" />
<text  x="237.90" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="721.4" y="1781" width="0.2" height="15.0" fill="rgb(208,119,32)" rx="2" ry="2" />
<text  x="724.43" y="1791.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="452.0" y="1637" width="0.2" height="15.0" fill="rgb(216,201,40)" rx="2" ry="2" />
<text  x="455.03" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="958.5" y="2021" width="2.0" height="15.0" fill="rgb(239,111,52)" rx="2" ry="2" />
<text  x="961.51" y="2031.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1114.2" y="1413" width="0.2" height="15.0" fill="rgb(205,133,14)" rx="2" ry="2" />
<text  x="1117.17" y="1423.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (6 samples, 0.10%)</title><rect x="1006.4" y="1989" width="1.2" height="15.0" fill="rgb(242,83,32)" rx="2" ry="2" />
<text  x="1009.40" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (152 samples, 2.57%)</title><rect x="281.0" y="1813" width="30.3" height="15.0" fill="rgb(235,19,20)" rx="2" ry="2" />
<text  x="284.00" y="1823.5" >ip..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (3 samples, 0.05%)</title><rect x="878.5" y="1925" width="0.6" height="15.0" fill="rgb(208,41,7)" rx="2" ry="2" />
<text  x="881.49" y="1935.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="120.6" y="53" width="0.2" height="15.0" fill="rgb(209,71,16)" rx="2" ry="2" />
<text  x="123.56" y="63.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (1 samples, 0.02%)</title><rect x="170.0" y="2005" width="0.2" height="15.0" fill="rgb(237,228,47)" rx="2" ry="2" />
<text  x="173.05" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="566.0" y="1941" width="0.2" height="15.0" fill="rgb(232,213,23)" rx="2" ry="2" />
<text  x="568.97" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="321.3" y="1589" width="0.2" height="15.0" fill="rgb(220,190,13)" rx="2" ry="2" />
<text  x="324.31" y="1599.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="777.5" y="1301" width="0.2" height="15.0" fill="rgb(219,68,13)" rx="2" ry="2" />
<text  x="780.51" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="920.4" y="1941" width="0.4" height="15.0" fill="rgb(231,52,5)" rx="2" ry="2" />
<text  x="923.39" y="1951.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="27.6" y="1813" width="0.8" height="15.0" fill="rgb(250,10,5)" rx="2" ry="2" />
<text  x="30.56" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="99.8" y="2021" width="2.4" height="15.0" fill="rgb(222,51,19)" rx="2" ry="2" />
<text  x="102.80" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="995.4" y="1957" width="0.2" height="15.0" fill="rgb(208,161,33)" rx="2" ry="2" />
<text  x="998.43" y="1967.5" ></text>
</g>
<g >
<title>destroy_inode (31 samples, 0.52%)</title><rect x="732.0" y="1701" width="6.2" height="15.0" fill="rgb(226,62,13)" rx="2" ry="2" />
<text  x="735.01" y="1711.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="952.1" y="2005" width="0.2" height="15.0" fill="rgb(245,207,36)" rx="2" ry="2" />
<text  x="955.12" y="2015.5" ></text>
</g>
<g >
<title>tcp_poll (3 samples, 0.05%)</title><rect x="461.6" y="1957" width="0.6" height="15.0" fill="rgb(208,100,46)" rx="2" ry="2" />
<text  x="464.60" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="451.8" y="1957" width="0.2" height="15.0" fill="rgb(238,125,43)" rx="2" ry="2" />
<text  x="454.83" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="288.6" y="1525" width="0.2" height="15.0" fill="rgb(229,13,23)" rx="2" ry="2" />
<text  x="291.59" y="1535.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1083.8" y="1813" width="0.8" height="15.0" fill="rgb(229,55,19)" rx="2" ry="2" />
<text  x="1086.83" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="169.4" y="1973" width="0.2" height="15.0" fill="rgb(224,187,36)" rx="2" ry="2" />
<text  x="172.45" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="150.7" y="1701" width="0.2" height="15.0" fill="rgb(241,175,45)" rx="2" ry="2" />
<text  x="153.69" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1104.4" y="1877" width="0.2" height="15.0" fill="rgb(215,86,3)" rx="2" ry="2" />
<text  x="1107.39" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1139.5" y="1973" width="0.2" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="1142.51" y="1983.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="273.6" y="1845" width="0.2" height="15.0" fill="rgb(225,12,16)" rx="2" ry="2" />
<text  x="276.62" y="1855.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="66.1" y="1973" width="0.2" height="15.0" fill="rgb(242,66,31)" rx="2" ry="2" />
<text  x="69.08" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="887.3" y="1893" width="0.2" height="15.0" fill="rgb(245,199,45)" rx="2" ry="2" />
<text  x="890.27" y="1903.5" ></text>
</g>
<g >
<title>__alloc_skb (49 samples, 0.83%)</title><rect x="757.4" y="1717" width="9.7" height="15.0" fill="rgb(247,124,5)" rx="2" ry="2" />
<text  x="760.35" y="1727.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="969.3" y="1749" width="0.2" height="15.0" fill="rgb(208,92,16)" rx="2" ry="2" />
<text  x="972.29" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="457.8" y="1893" width="0.4" height="15.0" fill="rgb(239,166,13)" rx="2" ry="2" />
<text  x="460.81" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="474.0" y="1797" width="0.2" height="15.0" fill="rgb(225,47,51)" rx="2" ry="2" />
<text  x="476.98" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="896.6" y="1941" width="0.2" height="15.0" fill="rgb(210,207,39)" rx="2" ry="2" />
<text  x="899.65" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="618.1" y="2005" width="0.2" height="15.0" fill="rgb(206,206,38)" rx="2" ry="2" />
<text  x="621.06" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="678.3" y="1957" width="0.2" height="15.0" fill="rgb(239,39,20)" rx="2" ry="2" />
<text  x="681.33" y="1967.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="799.7" y="1509" width="0.4" height="15.0" fill="rgb(216,22,22)" rx="2" ry="2" />
<text  x="802.66" y="1519.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::init (1 samples, 0.02%)</title><rect x="1004.8" y="2005" width="0.2" height="15.0" fill="rgb(231,205,38)" rx="2" ry="2" />
<text  x="1007.81" y="2015.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="753.0" y="1733" width="0.4" height="15.0" fill="rgb(210,13,8)" rx="2" ry="2" />
<text  x="755.96" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="120.8" y="53" width="0.2" height="15.0" fill="rgb(225,9,1)" rx="2" ry="2" />
<text  x="123.76" y="63.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="123.7" y="1829" width="0.2" height="15.0" fill="rgb(246,144,10)" rx="2" ry="2" />
<text  x="126.75" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="909.4" y="1925" width="0.2" height="15.0" fill="rgb(215,196,19)" rx="2" ry="2" />
<text  x="912.42" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1088.0" y="1813" width="0.4" height="15.0" fill="rgb(251,185,42)" rx="2" ry="2" />
<text  x="1091.02" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.8" y="197" width="0.2" height="15.0" fill="rgb(247,182,9)" rx="2" ry="2" />
<text  x="123.76" y="207.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="951.1" y="1861" width="0.2" height="15.0" fill="rgb(235,177,33)" rx="2" ry="2" />
<text  x="954.13" y="1871.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="384.6" y="1941" width="0.6" height="15.0" fill="rgb(222,118,19)" rx="2" ry="2" />
<text  x="387.57" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="951.1" y="1765" width="0.2" height="15.0" fill="rgb(237,66,34)" rx="2" ry="2" />
<text  x="954.13" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (2 samples, 0.03%)</title><rect x="911.2" y="2005" width="0.4" height="15.0" fill="rgb(253,202,41)" rx="2" ry="2" />
<text  x="914.21" y="2015.5" ></text>
</g>
<g >
<title>SYSC_getsockname (24 samples, 0.41%)</title><rect x="593.3" y="1877" width="4.8" height="15.0" fill="rgb(218,133,4)" rx="2" ry="2" />
<text  x="596.31" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="568.8" y="1765" width="0.2" height="15.0" fill="rgb(231,95,54)" rx="2" ry="2" />
<text  x="571.77" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="528.7" y="1909" width="0.2" height="15.0" fill="rgb(252,216,29)" rx="2" ry="2" />
<text  x="531.66" y="1919.5" ></text>
</g>
<g >
<title>ep_remove (65 samples, 1.10%)</title><rect x="462.2" y="1973" width="13.0" height="15.0" fill="rgb(223,126,44)" rx="2" ry="2" />
<text  x="465.20" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (4 samples, 0.07%)</title><rect x="902.2" y="1973" width="0.8" height="15.0" fill="rgb(211,158,47)" rx="2" ry="2" />
<text  x="905.23" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="973.5" y="2005" width="0.2" height="15.0" fill="rgb(228,40,33)" rx="2" ry="2" />
<text  x="976.48" y="2015.5" ></text>
</g>
<g >
<title>inet_unhash (1 samples, 0.02%)</title><rect x="58.9" y="1573" width="0.2" height="15.0" fill="rgb(205,23,18)" rx="2" ry="2" />
<text  x="61.89" y="1583.5" ></text>
</g>
<g >
<title>_cond_resched (3 samples, 0.05%)</title><rect x="380.0" y="1925" width="0.6" height="15.0" fill="rgb(227,170,24)" rx="2" ry="2" />
<text  x="382.98" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (2 samples, 0.03%)</title><rect x="990.2" y="1989" width="0.4" height="15.0" fill="rgb(239,62,49)" rx="2" ry="2" />
<text  x="993.24" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="614.9" y="2005" width="0.2" height="15.0" fill="rgb(230,50,17)" rx="2" ry="2" />
<text  x="617.87" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="150.7" y="1781" width="0.2" height="15.0" fill="rgb(254,170,24)" rx="2" ry="2" />
<text  x="153.69" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (3 samples, 0.05%)</title><rect x="135.3" y="2005" width="0.6" height="15.0" fill="rgb(250,83,41)" rx="2" ry="2" />
<text  x="138.32" y="2015.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="914.2" y="2005" width="0.2" height="15.0" fill="rgb(239,149,6)" rx="2" ry="2" />
<text  x="917.21" y="2015.5" ></text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="124.9" y="1941" width="0.4" height="15.0" fill="rgb(247,216,3)" rx="2" ry="2" />
<text  x="127.95" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (2 samples, 0.03%)</title><rect x="1145.1" y="1957" width="0.4" height="15.0" fill="rgb(207,171,10)" rx="2" ry="2" />
<text  x="1148.10" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="116.0" y="37" width="0.4" height="15.0" fill="rgb(251,185,5)" rx="2" ry="2" />
<text  x="118.97" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (119 samples, 2.01%)</title><rect x="135.9" y="2005" width="23.8" height="15.0" fill="rgb(236,153,51)" rx="2" ry="2" />
<text  x="138.92" y="2015.5" >f..</text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="917" width="16.0" height="15.0" fill="rgb(233,226,11)" rx="2" ry="2" />
<text  x="108.39" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="121.0" y="165" width="0.2" height="15.0" fill="rgb(243,15,4)" rx="2" ry="2" />
<text  x="123.96" y="175.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="883.9" y="1957" width="0.2" height="15.0" fill="rgb(215,1,3)" rx="2" ry="2" />
<text  x="886.87" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="996.8" y="1989" width="0.2" height="15.0" fill="rgb(240,149,54)" rx="2" ry="2" />
<text  x="999.83" y="1999.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="611.7" y="1877" width="0.2" height="15.0" fill="rgb(240,206,27)" rx="2" ry="2" />
<text  x="614.67" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="121.0" y="133" width="0.2" height="15.0" fill="rgb(247,149,36)" rx="2" ry="2" />
<text  x="123.96" y="143.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="134.9" y="2005" width="0.2" height="15.0" fill="rgb(253,220,28)" rx="2" ry="2" />
<text  x="137.92" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1018.6" y="1909" width="0.2" height="15.0" fill="rgb(215,21,0)" rx="2" ry="2" />
<text  x="1021.58" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="136.5" y="1909" width="0.4" height="15.0" fill="rgb(223,104,23)" rx="2" ry="2" />
<text  x="139.52" y="1919.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="866.5" y="2005" width="0.4" height="15.0" fill="rgb(224,96,29)" rx="2" ry="2" />
<text  x="869.51" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1621" width="17.8" height="15.0" fill="rgb(235,150,39)" rx="2" ry="2" />
<text  x="107.99" y="1631.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="325.7" y="1829" width="0.4" height="15.0" fill="rgb(249,1,21)" rx="2" ry="2" />
<text  x="328.70" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.2" y="1749" width="0.2" height="15.0" fill="rgb(214,111,7)" rx="2" ry="2" />
<text  x="844.17" y="1759.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="209.0" y="1909" width="0.8" height="15.0" fill="rgb(239,115,30)" rx="2" ry="2" />
<text  x="211.96" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="888.9" y="1973" width="0.2" height="15.0" fill="rgb(212,65,7)" rx="2" ry="2" />
<text  x="891.86" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="308.3" y="1685" width="0.2" height="15.0" fill="rgb(208,17,51)" rx="2" ry="2" />
<text  x="311.34" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="909.4" y="1829" width="0.2" height="15.0" fill="rgb(240,143,32)" rx="2" ry="2" />
<text  x="912.42" y="1839.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="702.9" y="1973" width="0.2" height="15.0" fill="rgb(208,142,23)" rx="2" ry="2" />
<text  x="705.87" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.5" y="1781" width="0.2" height="15.0" fill="rgb(229,6,37)" rx="2" ry="2" />
<text  x="126.55" y="1791.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="409.7" y="1973" width="0.2" height="15.0" fill="rgb(222,119,1)" rx="2" ry="2" />
<text  x="412.72" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="527.1" y="2005" width="0.2" height="15.0" fill="rgb(252,215,19)" rx="2" ry="2" />
<text  x="530.06" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="23.0" y="1797" width="0.2" height="15.0" fill="rgb(206,18,23)" rx="2" ry="2" />
<text  x="25.97" y="1807.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="11.6" y="1893" width="0.8" height="15.0" fill="rgb(229,107,51)" rx="2" ry="2" />
<text  x="14.60" y="1903.5" ></text>
</g>
<g >
<title>std::function&lt;void  (18 samples, 0.30%)</title><rect x="929.2" y="1973" width="3.6" height="15.0" fill="rgb(208,184,18)" rx="2" ry="2" />
<text  x="932.17" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="121.2" y="485" width="0.2" height="15.0" fill="rgb(211,93,33)" rx="2" ry="2" />
<text  x="124.16" y="495.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (4 samples, 0.07%)</title><rect x="217.5" y="1941" width="0.8" height="15.0" fill="rgb(237,225,48)" rx="2" ry="2" />
<text  x="220.54" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="993.0" y="1989" width="0.8" height="15.0" fill="rgb(205,115,42)" rx="2" ry="2" />
<text  x="996.03" y="1999.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="597.5" y="1845" width="0.2" height="15.0" fill="rgb(241,100,37)" rx="2" ry="2" />
<text  x="600.51" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (39 samples, 0.66%)</title><rect x="300.6" y="1669" width="7.7" height="15.0" fill="rgb(253,4,12)" rx="2" ry="2" />
<text  x="303.56" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="451.8" y="1701" width="0.2" height="15.0" fill="rgb(208,59,26)" rx="2" ry="2" />
<text  x="454.83" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="831.6" y="1829" width="0.2" height="15.0" fill="rgb(206,106,37)" rx="2" ry="2" />
<text  x="834.59" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="501.9" y="1589" width="0.2" height="15.0" fill="rgb(251,11,4)" rx="2" ry="2" />
<text  x="504.92" y="1599.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="134.5" y="1973" width="0.4" height="15.0" fill="rgb(250,179,12)" rx="2" ry="2" />
<text  x="137.53" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="277" width="15.6" height="15.0" fill="rgb(245,161,20)" rx="2" ry="2" />
<text  x="108.39" y="287.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1253" width="16.0" height="15.0" fill="rgb(236,111,30)" rx="2" ry="2" />
<text  x="108.39" y="1263.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (3 samples, 0.05%)</title><rect x="480.0" y="1973" width="0.6" height="15.0" fill="rgb(238,49,47)" rx="2" ry="2" />
<text  x="482.96" y="1983.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (48 samples, 0.81%)</title><rect x="603.3" y="1989" width="9.6" height="15.0" fill="rgb(238,209,25)" rx="2" ry="2" />
<text  x="606.29" y="1999.5" ></text>
</g>
<g >
<title>up_write (13 samples, 0.22%)</title><rect x="826.6" y="1765" width="2.6" height="15.0" fill="rgb(222,152,27)" rx="2" ry="2" />
<text  x="829.60" y="1775.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="330.9" y="1845" width="0.2" height="15.0" fill="rgb(225,166,41)" rx="2" ry="2" />
<text  x="333.89" y="1855.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="185.6" y="1989" width="0.8" height="15.0" fill="rgb(206,139,45)" rx="2" ry="2" />
<text  x="188.61" y="1999.5" ></text>
</g>
<g >
<title>filp_close (5 samples, 0.08%)</title><rect x="832.0" y="1829" width="1.0" height="15.0" fill="rgb(223,209,1)" rx="2" ry="2" />
<text  x="834.99" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (25 samples, 0.42%)</title><rect x="151.5" y="1925" width="5.0" height="15.0" fill="rgb(225,103,47)" rx="2" ry="2" />
<text  x="154.49" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="69.9" y="1829" width="0.2" height="15.0" fill="rgb(243,138,45)" rx="2" ry="2" />
<text  x="72.87" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="121.2" y="357" width="0.2" height="15.0" fill="rgb(219,159,29)" rx="2" ry="2" />
<text  x="124.16" y="367.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1080.6" y="1749" width="0.2" height="15.0" fill="rgb(213,108,2)" rx="2" ry="2" />
<text  x="1083.64" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="912.2" y="2037" width="0.2" height="15.0" fill="rgb(232,191,22)" rx="2" ry="2" />
<text  x="915.21" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="728.4" y="1701" width="0.6" height="15.0" fill="rgb(235,59,13)" rx="2" ry="2" />
<text  x="731.42" y="1711.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="63.9" y="1637" width="0.2" height="15.0" fill="rgb(234,98,10)" rx="2" ry="2" />
<text  x="66.88" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="817.6" y="1717" width="0.2" height="15.0" fill="rgb(213,107,15)" rx="2" ry="2" />
<text  x="820.62" y="1727.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="808.2" y="1669" width="0.6" height="15.0" fill="rgb(215,40,36)" rx="2" ry="2" />
<text  x="811.24" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="914.2" y="1925" width="0.2" height="15.0" fill="rgb(228,74,5)" rx="2" ry="2" />
<text  x="917.21" y="1935.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="12.4" y="1989" width="0.2" height="15.0" fill="rgb(252,87,25)" rx="2" ry="2" />
<text  x="15.39" y="1999.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1175.0" y="1973" width="0.2" height="15.0" fill="rgb(230,74,30)" rx="2" ry="2" />
<text  x="1178.03" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="980.7" y="1957" width="0.2" height="15.0" fill="rgb(238,25,21)" rx="2" ry="2" />
<text  x="983.66" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (2 samples, 0.03%)</title><rect x="106.4" y="37" width="0.4" height="15.0" fill="rgb(232,4,30)" rx="2" ry="2" />
<text  x="109.39" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="91.0" y="1733" width="0.2" height="15.0" fill="rgb(229,29,30)" rx="2" ry="2" />
<text  x="94.02" y="1743.5" ></text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="799.1" y="1493" width="0.4" height="15.0" fill="rgb(251,78,19)" rx="2" ry="2" />
<text  x="802.06" y="1503.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="777.3" y="1445" width="0.4" height="15.0" fill="rgb(249,201,53)" rx="2" ry="2" />
<text  x="780.31" y="1455.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (29 samples, 0.49%)</title><rect x="88.0" y="1989" width="5.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="91.03" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="817.6" y="1653" width="0.2" height="15.0" fill="rgb(229,35,17)" rx="2" ry="2" />
<text  x="820.62" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="914.2" y="1909" width="0.2" height="15.0" fill="rgb(235,100,26)" rx="2" ry="2" />
<text  x="917.21" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (103 samples, 1.74%)</title><rect x="487.9" y="2005" width="20.6" height="15.0" fill="rgb(243,78,30)" rx="2" ry="2" />
<text  x="490.95" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="817.6" y="1637" width="0.2" height="15.0" fill="rgb(240,66,30)" rx="2" ry="2" />
<text  x="820.62" y="1647.5" ></text>
</g>
<g >
<title>inet_csk_accept (2 samples, 0.03%)</title><rect x="383.4" y="1957" width="0.4" height="15.0" fill="rgb(229,94,37)" rx="2" ry="2" />
<text  x="386.38" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="91.0" y="1909" width="0.2" height="15.0" fill="rgb(252,116,8)" rx="2" ry="2" />
<text  x="94.02" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="138.7" y="1941" width="0.6" height="15.0" fill="rgb(249,124,49)" rx="2" ry="2" />
<text  x="141.72" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (40 samples, 0.68%)</title><rect x="789.5" y="1525" width="8.0" height="15.0" fill="rgb(241,15,4)" rx="2" ry="2" />
<text  x="792.48" y="1535.5" ></text>
</g>
<g >
<title>__libc_fcntl (3 samples, 0.05%)</title><rect x="235.9" y="2037" width="0.6" height="15.0" fill="rgb(230,166,33)" rx="2" ry="2" />
<text  x="238.90" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (26 samples, 0.44%)</title><rect x="540.8" y="1989" width="5.2" height="15.0" fill="rgb(242,169,34)" rx="2" ry="2" />
<text  x="543.83" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="60.5" y="1925" width="0.8" height="15.0" fill="rgb(240,56,17)" rx="2" ry="2" />
<text  x="63.49" y="1935.5" ></text>
</g>
<g >
<title>event_set@plt (2 samples, 0.03%)</title><rect x="846.2" y="1925" width="0.4" height="15.0" fill="rgb(219,14,17)" rx="2" ry="2" />
<text  x="849.16" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="437" width="15.8" height="15.0" fill="rgb(253,73,44)" rx="2" ry="2" />
<text  x="108.39" y="447.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="406.3" y="1877" width="0.2" height="15.0" fill="rgb(213,81,41)" rx="2" ry="2" />
<text  x="409.33" y="1887.5" ></text>
</g>
<g >
<title>__inet_lookup_listener (1 samples, 0.02%)</title><rect x="481.0" y="1781" width="0.2" height="15.0" fill="rgb(233,157,34)" rx="2" ry="2" />
<text  x="483.96" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (3 samples, 0.05%)</title><rect x="1167.1" y="2053" width="0.5" height="15.0" fill="rgb(223,43,1)" rx="2" ry="2" />
<text  x="1170.05" y="2063.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (1 samples, 0.02%)</title><rect x="361.4" y="1957" width="0.2" height="15.0" fill="rgb(251,158,5)" rx="2" ry="2" />
<text  x="364.43" y="1967.5" ></text>
</g>
<g >
<title>lock_timer_base (9 samples, 0.15%)</title><rect x="813.6" y="1605" width="1.8" height="15.0" fill="rgb(246,24,37)" rx="2" ry="2" />
<text  x="816.63" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="721.4" y="1797" width="0.2" height="15.0" fill="rgb(228,166,16)" rx="2" ry="2" />
<text  x="724.43" y="1807.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="321.1" y="1637" width="0.4" height="15.0" fill="rgb(216,192,51)" rx="2" ry="2" />
<text  x="324.11" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="121.0" y="245" width="0.2" height="15.0" fill="rgb(241,75,31)" rx="2" ry="2" />
<text  x="123.96" y="255.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="512.1" y="1941" width="0.4" height="15.0" fill="rgb(213,20,40)" rx="2" ry="2" />
<text  x="515.09" y="1951.5" ></text>
</g>
<g >
<title>sys_getsockname (26 samples, 0.44%)</title><rect x="593.3" y="1893" width="5.2" height="15.0" fill="rgb(222,162,49)" rx="2" ry="2" />
<text  x="596.31" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="121.0" y="293" width="0.2" height="15.0" fill="rgb(227,156,29)" rx="2" ry="2" />
<text  x="123.96" y="303.5" ></text>
</g>
<g >
<title>sys_accept4 (258 samples, 4.36%)</title><rect x="358.6" y="1989" width="51.5" height="15.0" fill="rgb(240,2,48)" rx="2" ry="2" />
<text  x="361.63" y="1999.5" >sys_a..</text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="672.3" y="1653" width="0.2" height="15.0" fill="rgb(238,174,0)" rx="2" ry="2" />
<text  x="675.34" y="1663.5" ></text>
</g>
<g >
<title>sys_gettid (6 samples, 0.10%)</title><rect x="1158.3" y="1925" width="1.2" height="15.0" fill="rgb(234,105,0)" rx="2" ry="2" />
<text  x="1161.27" y="1935.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="462.0" y="1669" width="0.2" height="15.0" fill="rgb(242,174,40)" rx="2" ry="2" />
<text  x="465.00" y="1679.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="962.1" y="1909" width="0.8" height="15.0" fill="rgb(217,49,34)" rx="2" ry="2" />
<text  x="965.10" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="459.8" y="1861" width="0.4" height="15.0" fill="rgb(247,26,40)" rx="2" ry="2" />
<text  x="462.81" y="1871.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="548.4" y="1941" width="0.2" height="15.0" fill="rgb(206,229,15)" rx="2" ry="2" />
<text  x="551.41" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="451.8" y="1845" width="0.2" height="15.0" fill="rgb(210,112,42)" rx="2" ry="2" />
<text  x="454.83" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (2 samples, 0.03%)</title><rect x="913.8" y="2037" width="0.4" height="15.0" fill="rgb(254,45,27)" rx="2" ry="2" />
<text  x="916.81" y="2047.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.2" y="1717" width="0.2" height="15.0" fill="rgb(249,116,45)" rx="2" ry="2" />
<text  x="126.15" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (2 samples, 0.03%)</title><rect x="642.0" y="1989" width="0.4" height="15.0" fill="rgb(205,1,1)" rx="2" ry="2" />
<text  x="645.01" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="120.8" y="133" width="0.2" height="15.0" fill="rgb(210,146,0)" rx="2" ry="2" />
<text  x="123.76" y="143.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="602.3" y="1941" width="0.2" height="15.0" fill="rgb(245,222,40)" rx="2" ry="2" />
<text  x="605.29" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="142.5" y="1893" width="0.8" height="15.0" fill="rgb(212,24,23)" rx="2" ry="2" />
<text  x="145.51" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="574.0" y="1989" width="0.2" height="15.0" fill="rgb(214,10,35)" rx="2" ry="2" />
<text  x="576.96" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="227.9" y="1797" width="0.2" height="15.0" fill="rgb(254,174,34)" rx="2" ry="2" />
<text  x="230.92" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="909.4" y="1957" width="0.2" height="15.0" fill="rgb(215,100,40)" rx="2" ry="2" />
<text  x="912.42" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (966 samples, 16.34%)</title><rect x="702.3" y="2037" width="192.7" height="15.0" fill="rgb(205,172,15)" rx="2" ry="2" />
<text  x="705.27" y="2047.5" >facebook::memcache::McSer..</text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1110.4" y="1477" width="0.2" height="15.0" fill="rgb(233,56,40)" rx="2" ry="2" />
<text  x="1113.38" y="1487.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="539.2" y="1845" width="0.4" height="15.0" fill="rgb(205,12,49)" rx="2" ry="2" />
<text  x="542.23" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="524.3" y="1941" width="0.2" height="15.0" fill="rgb(215,176,27)" rx="2" ry="2" />
<text  x="527.27" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (2 samples, 0.03%)</title><rect x="581.1" y="2021" width="0.4" height="15.0" fill="rgb(237,153,38)" rx="2" ry="2" />
<text  x="584.14" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="85.0" y="1909" width="0.2" height="15.0" fill="rgb(249,178,2)" rx="2" ry="2" />
<text  x="88.03" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="996.0" y="1973" width="0.2" height="15.0" fill="rgb(242,116,21)" rx="2" ry="2" />
<text  x="999.03" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="849.0" y="1861" width="0.2" height="15.0" fill="rgb(207,37,53)" rx="2" ry="2" />
<text  x="851.95" y="1871.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (7 samples, 0.12%)</title><rect x="167.5" y="1989" width="1.3" height="15.0" fill="rgb(214,20,26)" rx="2" ry="2" />
<text  x="170.45" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="640.0" y="1957" width="0.2" height="15.0" fill="rgb(244,37,49)" rx="2" ry="2" />
<text  x="643.01" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="695.5" y="1877" width="0.6" height="15.0" fill="rgb(217,134,22)" rx="2" ry="2" />
<text  x="698.49" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1122.1" y="1829" width="0.2" height="15.0" fill="rgb(253,56,32)" rx="2" ry="2" />
<text  x="1125.15" y="1839.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (8 samples, 0.14%)</title><rect x="511.5" y="1957" width="1.6" height="15.0" fill="rgb(248,213,11)" rx="2" ry="2" />
<text  x="514.50" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="847.8" y="1861" width="0.6" height="15.0" fill="rgb(241,50,24)" rx="2" ry="2" />
<text  x="850.75" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="90.0" y="1909" width="0.2" height="15.0" fill="rgb(235,6,15)" rx="2" ry="2" />
<text  x="93.02" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="844.4" y="1573" width="0.2" height="15.0" fill="rgb(216,139,4)" rx="2" ry="2" />
<text  x="847.36" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="451.8" y="1797" width="0.2" height="15.0" fill="rgb(254,156,21)" rx="2" ry="2" />
<text  x="454.83" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="602.3" y="1781" width="0.2" height="15.0" fill="rgb(216,28,39)" rx="2" ry="2" />
<text  x="605.29" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="121.0" y="357" width="0.2" height="15.0" fill="rgb(233,7,1)" rx="2" ry="2" />
<text  x="123.96" y="367.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="105.0" y="1381" width="17.0" height="15.0" fill="rgb(243,24,39)" rx="2" ry="2" />
<text  x="107.99" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11 samples, 0.19%)</title><rect x="458.2" y="1909" width="2.2" height="15.0" fill="rgb(216,32,38)" rx="2" ry="2" />
<text  x="461.21" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1114.2" y="1381" width="0.2" height="15.0" fill="rgb(220,8,23)" rx="2" ry="2" />
<text  x="1117.17" y="1391.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1122.1" y="1797" width="0.2" height="15.0" fill="rgb(249,19,48)" rx="2" ry="2" />
<text  x="1125.15" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="462.0" y="1893" width="0.2" height="15.0" fill="rgb(239,9,37)" rx="2" ry="2" />
<text  x="465.00" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (10 samples, 0.17%)</title><rect x="897.2" y="2037" width="2.0" height="15.0" fill="rgb(247,27,40)" rx="2" ry="2" />
<text  x="900.25" y="2047.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="78.2" y="1925" width="0.2" height="15.0" fill="rgb(209,106,41)" rx="2" ry="2" />
<text  x="81.25" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="869" width="16.0" height="15.0" fill="rgb(217,128,24)" rx="2" ry="2" />
<text  x="108.39" y="879.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="321.1" y="1717" width="0.4" height="15.0" fill="rgb(209,45,40)" rx="2" ry="2" />
<text  x="324.11" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (8 samples, 0.14%)</title><rect x="843.0" y="1941" width="1.6" height="15.0" fill="rgb(250,147,18)" rx="2" ry="2" />
<text  x="845.96" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1007.0" y="1957" width="0.2" height="15.0" fill="rgb(246,145,27)" rx="2" ry="2" />
<text  x="1010.00" y="1967.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.02%)</title><rect x="502.1" y="1669" width="0.2" height="15.0" fill="rgb(223,137,5)" rx="2" ry="2" />
<text  x="505.12" y="1679.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="1084.0" y="1797" width="0.6" height="15.0" fill="rgb(219,71,45)" rx="2" ry="2" />
<text  x="1087.03" y="1807.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (3 samples, 0.05%)</title><rect x="293.2" y="1701" width="0.6" height="15.0" fill="rgb(240,106,48)" rx="2" ry="2" />
<text  x="296.18" y="1711.5" ></text>
</g>
<g >
<title>calloc@plt (2 samples, 0.03%)</title><rect x="198.6" y="2021" width="0.4" height="15.0" fill="rgb(207,117,49)" rx="2" ry="2" />
<text  x="201.58" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1179.6" y="2037" width="0.2" height="15.0" fill="rgb(207,149,21)" rx="2" ry="2" />
<text  x="1182.62" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="763.1" y="1461" width="0.2" height="15.0" fill="rgb(207,203,2)" rx="2" ry="2" />
<text  x="766.14" y="1471.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="721.4" y="1717" width="0.2" height="15.0" fill="rgb(208,226,49)" rx="2" ry="2" />
<text  x="724.43" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="528.3" y="1989" width="1.8" height="15.0" fill="rgb(220,128,42)" rx="2" ry="2" />
<text  x="531.26" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="120.4" y="85" width="0.2" height="15.0" fill="rgb(237,64,34)" rx="2" ry="2" />
<text  x="123.36" y="95.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="695.5" y="1749" width="0.6" height="15.0" fill="rgb(217,96,50)" rx="2" ry="2" />
<text  x="698.49" y="1759.5" ></text>
</g>
<g >
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1114.8" y="1541" width="0.2" height="15.0" fill="rgb(250,110,23)" rx="2" ry="2" />
<text  x="1117.77" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="32.6" y="1717" width="0.1" height="15.0" fill="rgb(221,150,16)" rx="2" ry="2" />
<text  x="35.55" y="1727.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10 samples, 0.17%)</title><rect x="404.5" y="1909" width="2.0" height="15.0" fill="rgb(208,3,46)" rx="2" ry="2" />
<text  x="407.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="911.6" y="2005" width="0.6" height="15.0" fill="rgb(221,154,4)" rx="2" ry="2" />
<text  x="914.61" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (13 samples, 0.22%)</title><rect x="12.8" y="1861" width="2.6" height="15.0" fill="rgb(237,193,10)" rx="2" ry="2" />
<text  x="15.79" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (11 samples, 0.19%)</title><rect x="925.4" y="1909" width="2.2" height="15.0" fill="rgb(216,121,10)" rx="2" ry="2" />
<text  x="928.38" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (40 samples, 0.68%)</title><rect x="1107.6" y="1845" width="8.0" height="15.0" fill="rgb(224,123,35)" rx="2" ry="2" />
<text  x="1110.58" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (11 samples, 0.19%)</title><rect x="980.9" y="1973" width="2.2" height="15.0" fill="rgb(239,191,23)" rx="2" ry="2" />
<text  x="983.86" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="602.3" y="1829" width="0.2" height="15.0" fill="rgb(247,153,0)" rx="2" ry="2" />
<text  x="605.29" y="1839.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="91.0" y="1589" width="0.2" height="15.0" fill="rgb(210,120,48)" rx="2" ry="2" />
<text  x="94.02" y="1599.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (2 samples, 0.03%)</title><rect x="1001.6" y="2005" width="0.4" height="15.0" fill="rgb(233,193,30)" rx="2" ry="2" />
<text  x="1004.62" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (4 samples, 0.07%)</title><rect x="571.2" y="2005" width="0.8" height="15.0" fill="rgb(251,143,25)" rx="2" ry="2" />
<text  x="574.16" y="2015.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="800.5" y="1653" width="0.4" height="15.0" fill="rgb(254,119,35)" rx="2" ry="2" />
<text  x="803.46" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="566.0" y="1861" width="0.2" height="15.0" fill="rgb(252,162,40)" rx="2" ry="2" />
<text  x="568.97" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (2 samples, 0.03%)</title><rect x="892.9" y="2005" width="0.4" height="15.0" fill="rgb(251,183,20)" rx="2" ry="2" />
<text  x="895.85" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="777.5" y="1397" width="0.2" height="15.0" fill="rgb(232,28,36)" rx="2" ry="2" />
<text  x="780.51" y="1407.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="86.6" y="1957" width="0.2" height="15.0" fill="rgb(247,175,10)" rx="2" ry="2" />
<text  x="89.63" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1067.9" y="1893" width="0.2" height="15.0" fill="rgb(246,86,34)" rx="2" ry="2" />
<text  x="1070.87" y="1903.5" ></text>
</g>
<g >
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="1107.6" y="1829" width="0.4" height="15.0" fill="rgb(237,11,8)" rx="2" ry="2" />
<text  x="1110.58" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="316.5" y="1621" width="0.4" height="15.0" fill="rgb(240,30,48)" rx="2" ry="2" />
<text  x="319.52" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="646.4" y="1941" width="0.2" height="15.0" fill="rgb(210,121,21)" rx="2" ry="2" />
<text  x="649.40" y="1951.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1067.3" y="1845" width="0.2" height="15.0" fill="rgb(245,16,52)" rx="2" ry="2" />
<text  x="1070.27" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="995.6" y="1973" width="0.2" height="15.0" fill="rgb(240,143,23)" rx="2" ry="2" />
<text  x="998.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="331.1" y="1845" width="1.2" height="15.0" fill="rgb(224,119,1)" rx="2" ry="2" />
<text  x="334.09" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="877.7" y="1893" width="0.2" height="15.0" fill="rgb(253,129,26)" rx="2" ry="2" />
<text  x="880.69" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="608.3" y="1845" width="0.2" height="15.0" fill="rgb(225,171,7)" rx="2" ry="2" />
<text  x="611.28" y="1855.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="289.8" y="1317" width="0.2" height="15.0" fill="rgb(234,191,38)" rx="2" ry="2" />
<text  x="292.78" y="1327.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="981.7" y="1957" width="1.2" height="15.0" fill="rgb(238,49,4)" rx="2" ry="2" />
<text  x="984.66" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1122.1" y="1909" width="0.2" height="15.0" fill="rgb(228,72,6)" rx="2" ry="2" />
<text  x="1125.15" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (10 samples, 0.17%)</title><rect x="847.2" y="1909" width="2.0" height="15.0" fill="rgb(214,92,32)" rx="2" ry="2" />
<text  x="850.16" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="133.5" y="1733" width="0.2" height="15.0" fill="rgb(243,194,10)" rx="2" ry="2" />
<text  x="136.53" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (11 samples, 0.19%)</title><rect x="171.2" y="1957" width="2.2" height="15.0" fill="rgb(211,183,43)" rx="2" ry="2" />
<text  x="174.24" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="842.4" y="1829" width="0.2" height="15.0" fill="rgb(226,189,10)" rx="2" ry="2" />
<text  x="845.37" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1088.6" y="1733" width="0.2" height="15.0" fill="rgb(215,149,4)" rx="2" ry="2" />
<text  x="1091.62" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.66%)</title><rect x="104.2" y="1829" width="19.5" height="15.0" fill="rgb(214,9,14)" rx="2" ry="2" />
<text  x="107.19" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.2" y="1701" width="0.2" height="15.0" fill="rgb(226,95,22)" rx="2" ry="2" />
<text  x="844.17" y="1711.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="185.6" y="1925" width="0.8" height="15.0" fill="rgb(228,174,21)" rx="2" ry="2" />
<text  x="188.61" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="63.9" y="1861" width="0.2" height="15.0" fill="rgb(212,225,22)" rx="2" ry="2" />
<text  x="66.88" y="1871.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1167.6" y="1941" width="0.2" height="15.0" fill="rgb(234,92,46)" rx="2" ry="2" />
<text  x="1170.65" y="1951.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="266.0" y="1877" width="0.2" height="15.0" fill="rgb(220,177,53)" rx="2" ry="2" />
<text  x="269.04" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="993.2" y="1829" width="0.6" height="15.0" fill="rgb(242,171,39)" rx="2" ry="2" />
<text  x="996.23" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (94 samples, 1.59%)</title><rect x="104.6" y="1733" width="18.8" height="15.0" fill="rgb(245,89,9)" rx="2" ry="2" />
<text  x="107.59" y="1743.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="957.7" y="2005" width="0.2" height="15.0" fill="rgb(229,210,36)" rx="2" ry="2" />
<text  x="960.71" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="63.9" y="1653" width="0.2" height="15.0" fill="rgb(210,215,43)" rx="2" ry="2" />
<text  x="66.88" y="1663.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="30.0" y="1957" width="0.2" height="15.0" fill="rgb(234,78,11)" rx="2" ry="2" />
<text  x="32.96" y="1967.5" ></text>
</g>
<g >
<title>epoll_wait (106 samples, 1.79%)</title><rect x="487.3" y="2037" width="21.2" height="15.0" fill="rgb(246,82,23)" rx="2" ry="2" />
<text  x="490.35" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="253.1" y="1829" width="0.2" height="15.0" fill="rgb(242,163,53)" rx="2" ry="2" />
<text  x="256.06" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (9 samples, 0.15%)</title><rect x="70.9" y="1925" width="1.8" height="15.0" fill="rgb(228,141,47)" rx="2" ry="2" />
<text  x="73.87" y="1935.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="780.7" y="1525" width="0.2" height="15.0" fill="rgb(248,33,40)" rx="2" ry="2" />
<text  x="783.70" y="1535.5" ></text>
</g>
<g >
<title>kfree_call_rcu (1 samples, 0.02%)</title><rect x="734.2" y="1685" width="0.2" height="15.0" fill="rgb(218,75,28)" rx="2" ry="2" />
<text  x="737.20" y="1695.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="363.8" y="1941" width="0.4" height="15.0" fill="rgb(245,25,10)" rx="2" ry="2" />
<text  x="366.82" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (92 samples, 1.56%)</title><rect x="104.8" y="1701" width="18.4" height="15.0" fill="rgb(239,109,6)" rx="2" ry="2" />
<text  x="107.79" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1104.4" y="1685" width="0.2" height="15.0" fill="rgb(239,1,43)" rx="2" ry="2" />
<text  x="1107.39" y="1695.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="694.1" y="1893" width="1.0" height="15.0" fill="rgb(240,106,41)" rx="2" ry="2" />
<text  x="697.09" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="373.4" y="1685" width="0.2" height="15.0" fill="rgb(238,201,7)" rx="2" ry="2" />
<text  x="376.40" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="462.0" y="1813" width="0.2" height="15.0" fill="rgb(215,170,46)" rx="2" ry="2" />
<text  x="465.00" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="227.7" y="1845" width="0.6" height="15.0" fill="rgb(205,210,8)" rx="2" ry="2" />
<text  x="230.72" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="32.6" y="1733" width="0.1" height="15.0" fill="rgb(206,95,9)" rx="2" ry="2" />
<text  x="35.55" y="1743.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="841.2" y="1621" width="0.2" height="15.0" fill="rgb(222,1,3)" rx="2" ry="2" />
<text  x="844.17" y="1631.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="119.6" y="69" width="0.2" height="15.0" fill="rgb(237,169,45)" rx="2" ry="2" />
<text  x="122.56" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="943.5" y="2005" width="0.2" height="15.0" fill="rgb(219,194,33)" rx="2" ry="2" />
<text  x="946.54" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="691.5" y="1877" width="0.2" height="15.0" fill="rgb(254,2,23)" rx="2" ry="2" />
<text  x="694.50" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (37 samples, 0.63%)</title><rect x="623.0" y="2037" width="7.4" height="15.0" fill="rgb(254,111,29)" rx="2" ry="2" />
<text  x="626.05" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (3 samples, 0.05%)</title><rect x="537.0" y="1973" width="0.6" height="15.0" fill="rgb(216,31,54)" rx="2" ry="2" />
<text  x="540.04" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="630.4" y="1989" width="0.4" height="15.0" fill="rgb(238,150,5)" rx="2" ry="2" />
<text  x="633.43" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="614.9" y="1989" width="0.2" height="15.0" fill="rgb(207,204,19)" rx="2" ry="2" />
<text  x="617.87" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="568.8" y="1861" width="0.2" height="15.0" fill="rgb(231,2,9)" rx="2" ry="2" />
<text  x="571.77" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="778.9" y="1557" width="0.4" height="15.0" fill="rgb(210,84,38)" rx="2" ry="2" />
<text  x="781.91" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="53.9" y="1717" width="0.2" height="15.0" fill="rgb(254,94,30)" rx="2" ry="2" />
<text  x="56.90" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="32.6" y="1941" width="0.1" height="15.0" fill="rgb(223,135,21)" rx="2" ry="2" />
<text  x="35.55" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="340.3" y="1749" width="0.2" height="15.0" fill="rgb(233,98,3)" rx="2" ry="2" />
<text  x="343.27" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (48 samples, 0.81%)</title><rect x="552.6" y="1957" width="9.6" height="15.0" fill="rgb(232,84,7)" rx="2" ry="2" />
<text  x="555.60" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="501.9" y="1573" width="0.2" height="15.0" fill="rgb(229,108,43)" rx="2" ry="2" />
<text  x="504.92" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="513.7" y="1973" width="0.6" height="15.0" fill="rgb(247,123,2)" rx="2" ry="2" />
<text  x="516.69" y="1983.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (2 samples, 0.03%)</title><rect x="532.4" y="2021" width="0.4" height="15.0" fill="rgb(214,175,9)" rx="2" ry="2" />
<text  x="535.45" y="2031.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="10.4" y="1845" width="0.8" height="15.0" fill="rgb(207,124,39)" rx="2" ry="2" />
<text  x="13.40" y="1855.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1067.1" y="1813" width="0.2" height="15.0" fill="rgb(245,82,46)" rx="2" ry="2" />
<text  x="1070.07" y="1823.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="668.0" y="1861" width="0.1" height="15.0" fill="rgb(207,201,43)" rx="2" ry="2" />
<text  x="670.95" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="481.0" y="1909" width="0.4" height="15.0" fill="rgb(231,152,51)" rx="2" ry="2" />
<text  x="483.96" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McGetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="627.8" y="2005" width="0.2" height="15.0" fill="rgb(223,113,30)" rx="2" ry="2" />
<text  x="630.84" y="2015.5" ></text>
</g>
<g >
<title>sch_direct_xmit (96 samples, 1.62%)</title><rect x="780.9" y="1557" width="19.2" height="15.0" fill="rgb(250,213,16)" rx="2" ry="2" />
<text  x="783.90" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="378.0" y="1909" width="0.6" height="15.0" fill="rgb(213,210,43)" rx="2" ry="2" />
<text  x="380.99" y="1919.5" ></text>
</g>
<g >
<title>sk_reset_timer (18 samples, 0.30%)</title><rect x="811.8" y="1637" width="3.6" height="15.0" fill="rgb(247,30,33)" rx="2" ry="2" />
<text  x="814.83" y="1647.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (8 samples, 0.14%)</title><rect x="938.6" y="1973" width="1.6" height="15.0" fill="rgb(220,226,28)" rx="2" ry="2" />
<text  x="941.55" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="139.1" y="1861" width="0.2" height="15.0" fill="rgb(242,98,24)" rx="2" ry="2" />
<text  x="142.12" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29 samples, 0.49%)</title><rect x="481.4" y="2021" width="5.7" height="15.0" fill="rgb(208,79,35)" rx="2" ry="2" />
<text  x="484.36" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="55.3" y="1941" width="0.2" height="15.0" fill="rgb(235,205,41)" rx="2" ry="2" />
<text  x="58.30" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1067.9" y="1813" width="0.2" height="15.0" fill="rgb(207,134,16)" rx="2" ry="2" />
<text  x="1070.87" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="1146.7" y="1989" width="0.2" height="15.0" fill="rgb(235,12,3)" rx="2" ry="2" />
<text  x="1149.70" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (15 samples, 0.25%)</title><rect x="346.9" y="2021" width="3.0" height="15.0" fill="rgb(223,47,16)" rx="2" ry="2" />
<text  x="349.86" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="914.2" y="1829" width="0.2" height="15.0" fill="rgb(210,16,1)" rx="2" ry="2" />
<text  x="917.21" y="1839.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (5 samples, 0.08%)</title><rect x="112.6" y="53" width="1.0" height="15.0" fill="rgb(242,200,53)" rx="2" ry="2" />
<text  x="115.57" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="897.0" y="1973" width="0.2" height="15.0" fill="rgb(250,88,18)" rx="2" ry="2" />
<text  x="900.05" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (5 samples, 0.08%)</title><rect x="1141.1" y="2005" width="1.0" height="15.0" fill="rgb(242,52,3)" rx="2" ry="2" />
<text  x="1144.11" y="2015.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="289.4" y="1477" width="0.2" height="15.0" fill="rgb(247,154,13)" rx="2" ry="2" />
<text  x="292.38" y="1487.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="185.6" y="1973" width="0.8" height="15.0" fill="rgb(228,82,4)" rx="2" ry="2" />
<text  x="188.61" y="1983.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="501.9" y="1493" width="0.2" height="15.0" fill="rgb(234,189,33)" rx="2" ry="2" />
<text  x="504.92" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="373.4" y="1573" width="0.2" height="15.0" fill="rgb(247,35,15)" rx="2" ry="2" />
<text  x="376.40" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (3 samples, 0.05%)</title><rect x="41.7" y="1957" width="0.6" height="15.0" fill="rgb(237,186,23)" rx="2" ry="2" />
<text  x="44.73" y="1967.5" ></text>
</g>
<g >
<title>sock_poll (74 samples, 1.25%)</title><rect x="493.1" y="1909" width="14.8" height="15.0" fill="rgb(254,82,50)" rx="2" ry="2" />
<text  x="496.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1669" width="17.8" height="15.0" fill="rgb(248,118,32)" rx="2" ry="2" />
<text  x="107.99" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="23.0" y="1877" width="0.2" height="15.0" fill="rgb(253,226,2)" rx="2" ry="2" />
<text  x="25.97" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="149.1" y="1893" width="0.2" height="15.0" fill="rgb(207,183,8)" rx="2" ry="2" />
<text  x="152.09" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="136.5" y="1893" width="0.4" height="15.0" fill="rgb(250,178,44)" rx="2" ry="2" />
<text  x="139.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="120.8" y="261" width="0.2" height="15.0" fill="rgb(236,44,50)" rx="2" ry="2" />
<text  x="123.76" y="271.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="805.8" y="1637" width="0.4" height="15.0" fill="rgb(225,211,51)" rx="2" ry="2" />
<text  x="808.85" y="1647.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="310.7" y="1749" width="0.2" height="15.0" fill="rgb(250,34,35)" rx="2" ry="2" />
<text  x="313.74" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="928.6" y="1957" width="0.6" height="15.0" fill="rgb(221,26,38)" rx="2" ry="2" />
<text  x="931.58" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="72.9" y="1893" width="0.2" height="15.0" fill="rgb(216,133,36)" rx="2" ry="2" />
<text  x="75.86" y="1903.5" ></text>
</g>
<g >
<title>mutex_lock (4 samples, 0.07%)</title><rect x="479.0" y="1973" width="0.8" height="15.0" fill="rgb(213,64,44)" rx="2" ry="2" />
<text  x="481.97" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1067.9" y="1877" width="0.2" height="15.0" fill="rgb(249,104,17)" rx="2" ry="2" />
<text  x="1070.87" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="140.5" y="1925" width="0.2" height="15.0" fill="rgb(251,106,49)" rx="2" ry="2" />
<text  x="143.51" y="1935.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12 samples, 0.20%)</title><rect x="410.7" y="2021" width="2.4" height="15.0" fill="rgb(218,10,4)" rx="2" ry="2" />
<text  x="413.72" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1080.6" y="1637" width="0.2" height="15.0" fill="rgb(210,9,3)" rx="2" ry="2" />
<text  x="1083.64" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (49 samples, 0.83%)</title><rect x="630.4" y="2037" width="9.8" height="15.0" fill="rgb(244,19,47)" rx="2" ry="2" />
<text  x="633.43" y="2047.5" ></text>
</g>
<g >
<title>dnotify_flush (1 samples, 0.02%)</title><rect x="831.8" y="1829" width="0.2" height="15.0" fill="rgb(236,131,39)" rx="2" ry="2" />
<text  x="834.79" y="1839.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="180.2" y="1957" width="0.2" height="15.0" fill="rgb(227,188,3)" rx="2" ry="2" />
<text  x="183.22" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1049.3" y="1925" width="0.4" height="15.0" fill="rgb(213,95,7)" rx="2" ry="2" />
<text  x="1052.31" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1669" width="0.2" height="15.0" fill="rgb(241,46,39)" rx="2" ry="2" />
<text  x="847.36" y="1679.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="159.1" y="1941" width="0.4" height="15.0" fill="rgb(241,183,17)" rx="2" ry="2" />
<text  x="162.07" y="1951.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (20 samples, 0.34%)</title><rect x="98.2" y="2037" width="4.0" height="15.0" fill="rgb(205,145,21)" rx="2" ry="2" />
<text  x="101.21" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="973.9" y="2005" width="0.2" height="15.0" fill="rgb(208,125,10)" rx="2" ry="2" />
<text  x="976.88" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (2 samples, 0.03%)</title><rect x="840.8" y="1893" width="0.4" height="15.0" fill="rgb(209,152,6)" rx="2" ry="2" />
<text  x="843.77" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="252.9" y="1893" width="1.2" height="15.0" fill="rgb(211,18,48)" rx="2" ry="2" />
<text  x="255.86" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (44 samples, 0.74%)</title><rect x="603.9" y="1925" width="8.8" height="15.0" fill="rgb(227,117,7)" rx="2" ry="2" />
<text  x="606.89" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="541.2" y="1941" width="0.2" height="15.0" fill="rgb(242,77,3)" rx="2" ry="2" />
<text  x="544.23" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (1 samples, 0.02%)</title><rect x="145.7" y="1893" width="0.2" height="15.0" fill="rgb(252,155,26)" rx="2" ry="2" />
<text  x="148.70" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="28.8" y="1941" width="0.2" height="15.0" fill="rgb(242,133,34)" rx="2" ry="2" />
<text  x="31.76" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="289.6" y="1461" width="0.6" height="15.0" fill="rgb(227,39,26)" rx="2" ry="2" />
<text  x="292.58" y="1471.5" ></text>
</g>
<g >
<title>__copy_skb_header (7 samples, 0.12%)</title><rect x="314.9" y="1781" width="1.4" height="15.0" fill="rgb(209,225,22)" rx="2" ry="2" />
<text  x="317.93" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (10 samples, 0.17%)</title><rect x="219.9" y="1909" width="2.0" height="15.0" fill="rgb(239,125,46)" rx="2" ry="2" />
<text  x="222.94" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="273.4" y="1797" width="0.2" height="15.0" fill="rgb(243,105,42)" rx="2" ry="2" />
<text  x="276.42" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1067.9" y="1765" width="0.2" height="15.0" fill="rgb(241,20,29)" rx="2" ry="2" />
<text  x="1070.87" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="909.4" y="1893" width="0.2" height="15.0" fill="rgb(209,175,1)" rx="2" ry="2" />
<text  x="912.42" y="1903.5" ></text>
</g>
<g >
<title>__libc_recv (517 samples, 8.74%)</title><rect x="1029.8" y="2053" width="103.1" height="15.0" fill="rgb(211,154,32)" rx="2" ry="2" />
<text  x="1032.75" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="140.7" y="1941" width="0.2" height="15.0" fill="rgb(245,51,16)" rx="2" ry="2" />
<text  x="143.71" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="501.5" y="1701" width="0.6" height="15.0" fill="rgb(252,16,4)" rx="2" ry="2" />
<text  x="504.52" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (7 samples, 0.12%)</title><rect x="450.6" y="1973" width="1.4" height="15.0" fill="rgb(252,103,0)" rx="2" ry="2" />
<text  x="453.63" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (3 samples, 0.05%)</title><rect x="213.6" y="1957" width="0.6" height="15.0" fill="rgb(224,114,23)" rx="2" ry="2" />
<text  x="216.55" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1067.3" y="1749" width="0.2" height="15.0" fill="rgb(220,184,54)" rx="2" ry="2" />
<text  x="1070.27" y="1759.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="401.5" y="1909" width="0.2" height="15.0" fill="rgb(243,72,41)" rx="2" ry="2" />
<text  x="404.54" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="133.5" y="1829" width="0.2" height="15.0" fill="rgb(220,129,42)" rx="2" ry="2" />
<text  x="136.53" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="150.7" y="1717" width="0.2" height="15.0" fill="rgb(213,51,21)" rx="2" ry="2" />
<text  x="153.69" y="1727.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (1 samples, 0.02%)</title><rect x="1184.4" y="2053" width="0.2" height="15.0" fill="rgb(252,45,13)" rx="2" ry="2" />
<text  x="1187.41" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="566.0" y="1845" width="0.2" height="15.0" fill="rgb(205,25,4)" rx="2" ry="2" />
<text  x="568.97" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="373.4" y="1781" width="0.2" height="15.0" fill="rgb(227,206,34)" rx="2" ry="2" />
<text  x="376.40" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="32.6" y="1813" width="0.1" height="15.0" fill="rgb(213,8,25)" rx="2" ry="2" />
<text  x="35.55" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1072.3" y="1781" width="0.2" height="15.0" fill="rgb(218,172,26)" rx="2" ry="2" />
<text  x="1075.26" y="1791.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.07%)</title><rect x="209.0" y="2005" width="0.8" height="15.0" fill="rgb(222,52,48)" rx="2" ry="2" />
<text  x="211.96" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="66.5" y="1973" width="0.2" height="15.0" fill="rgb(248,81,35)" rx="2" ry="2" />
<text  x="69.48" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="880.9" y="1877" width="0.4" height="15.0" fill="rgb(219,74,11)" rx="2" ry="2" />
<text  x="883.88" y="1887.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="998.2" y="2037" width="0.2" height="15.0" fill="rgb(215,137,29)" rx="2" ry="2" />
<text  x="1001.22" y="2047.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="967.9" y="2037" width="0.4" height="15.0" fill="rgb(216,79,44)" rx="2" ry="2" />
<text  x="970.89" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="567.4" y="1957" width="0.2" height="15.0" fill="rgb(254,146,35)" rx="2" ry="2" />
<text  x="570.37" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="459.8" y="1717" width="0.4" height="15.0" fill="rgb(213,30,49)" rx="2" ry="2" />
<text  x="462.81" y="1727.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="964.7" y="2005" width="0.2" height="15.0" fill="rgb(250,152,22)" rx="2" ry="2" />
<text  x="967.70" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="969.3" y="1877" width="0.2" height="15.0" fill="rgb(222,191,22)" rx="2" ry="2" />
<text  x="972.29" y="1887.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="777.5" y="1317" width="0.2" height="15.0" fill="rgb(208,76,22)" rx="2" ry="2" />
<text  x="780.51" y="1327.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="944.1" y="2005" width="0.2" height="15.0" fill="rgb(233,8,7)" rx="2" ry="2" />
<text  x="947.14" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (105 samples, 1.78%)</title><rect x="972.9" y="2021" width="20.9" height="15.0" fill="rgb(211,84,5)" rx="2" ry="2" />
<text  x="975.88" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="452.0" y="1957" width="0.2" height="15.0" fill="rgb(252,15,32)" rx="2" ry="2" />
<text  x="455.03" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="152.5" y="1893" width="0.4" height="15.0" fill="rgb(224,174,25)" rx="2" ry="2" />
<text  x="155.49" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="672.3" y="1749" width="0.2" height="15.0" fill="rgb(251,55,1)" rx="2" ry="2" />
<text  x="675.34" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="914.2" y="1989" width="0.2" height="15.0" fill="rgb(222,80,30)" rx="2" ry="2" />
<text  x="917.21" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="311.3" y="1749" width="0.2" height="15.0" fill="rgb(225,51,46)" rx="2" ry="2" />
<text  x="314.34" y="1759.5" ></text>
</g>
<g >
<title>security_socket_getsockname (1 samples, 0.02%)</title><rect x="597.5" y="1861" width="0.2" height="15.0" fill="rgb(229,158,10)" rx="2" ry="2" />
<text  x="600.51" y="1871.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="692.5" y="1861" width="0.2" height="15.0" fill="rgb(252,224,4)" rx="2" ry="2" />
<text  x="695.50" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="927.4" y="1861" width="0.2" height="15.0" fill="rgb(245,180,27)" rx="2" ry="2" />
<text  x="930.38" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_free (18 samples, 0.30%)</title><rect x="374.2" y="1925" width="3.6" height="15.0" fill="rgb(211,67,31)" rx="2" ry="2" />
<text  x="377.20" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (12 samples, 0.20%)</title><rect x="760.9" y="1701" width="2.4" height="15.0" fill="rgb(226,39,24)" rx="2" ry="2" />
<text  x="763.95" y="1711.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="451.8" y="1685" width="0.2" height="15.0" fill="rgb(226,176,38)" rx="2" ry="2" />
<text  x="454.83" y="1695.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="10.4" y="1973" width="0.8" height="15.0" fill="rgb(216,80,23)" rx="2" ry="2" />
<text  x="13.40" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="363.2" y="1701" width="0.2" height="15.0" fill="rgb(244,11,0)" rx="2" ry="2" />
<text  x="366.22" y="1711.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="345.1" y="2037" width="0.6" height="15.0" fill="rgb(249,69,17)" rx="2" ry="2" />
<text  x="348.06" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="452.0" y="1813" width="0.2" height="15.0" fill="rgb(242,98,31)" rx="2" ry="2" />
<text  x="455.03" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (5 samples, 0.08%)</title><rect x="638.2" y="1989" width="1.0" height="15.0" fill="rgb(217,95,53)" rx="2" ry="2" />
<text  x="641.22" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1637" width="17.8" height="15.0" fill="rgb(214,102,48)" rx="2" ry="2" />
<text  x="107.99" y="1647.5" ></text>
</g>
<g >
<title>apparmor_socket_accept (4 samples, 0.07%)</title><rect x="386.4" y="1941" width="0.8" height="15.0" fill="rgb(239,24,51)" rx="2" ry="2" />
<text  x="389.37" y="1951.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="92.2" y="1941" width="0.2" height="15.0" fill="rgb(224,110,48)" rx="2" ry="2" />
<text  x="95.22" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="895.6" y="1989" width="0.2" height="15.0" fill="rgb(250,183,20)" rx="2" ry="2" />
<text  x="898.65" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="535.8" y="1973" width="0.6" height="15.0" fill="rgb(250,82,23)" rx="2" ry="2" />
<text  x="538.84" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt; (1 samples, 0.02%)</title><rect x="81.2" y="1925" width="0.2" height="15.0" fill="rgb(235,62,20)" rx="2" ry="2" />
<text  x="84.24" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="535.4" y="1909" width="0.2" height="15.0" fill="rgb(211,180,19)" rx="2" ry="2" />
<text  x="538.44" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="970.9" y="1973" width="0.2" height="15.0" fill="rgb(219,181,17)" rx="2" ry="2" />
<text  x="973.88" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="89.6" y="1957" width="0.4" height="15.0" fill="rgb(238,191,7)" rx="2" ry="2" />
<text  x="92.62" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (22 samples, 0.37%)</title><rect x="1172.2" y="2005" width="4.4" height="15.0" fill="rgb(235,137,52)" rx="2" ry="2" />
<text  x="1175.24" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="933.0" y="1941" width="0.2" height="15.0" fill="rgb(209,151,51)" rx="2" ry="2" />
<text  x="935.97" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="911.8" y="1989" width="0.4" height="15.0" fill="rgb(225,36,6)" rx="2" ry="2" />
<text  x="914.81" y="1999.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (3 samples, 0.05%)</title><rect x="520.1" y="1941" width="0.6" height="15.0" fill="rgb(219,210,38)" rx="2" ry="2" />
<text  x="523.08" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="651.2" y="2005" width="0.2" height="15.0" fill="rgb(222,160,22)" rx="2" ry="2" />
<text  x="654.19" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="882.3" y="1925" width="0.2" height="15.0" fill="rgb(253,103,20)" rx="2" ry="2" />
<text  x="885.28" y="1935.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (5 samples, 0.08%)</title><rect x="966.9" y="2037" width="1.0" height="15.0" fill="rgb(213,118,12)" rx="2" ry="2" />
<text  x="969.89" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="183.2" y="1973" width="0.2" height="15.0" fill="rgb(250,65,25)" rx="2" ry="2" />
<text  x="186.22" y="1983.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="235.3" y="2037" width="0.6" height="15.0" fill="rgb(237,183,2)" rx="2" ry="2" />
<text  x="238.30" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1049.1" y="1973" width="0.6" height="15.0" fill="rgb(213,42,52)" rx="2" ry="2" />
<text  x="1052.11" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="634.2" y="1941" width="0.2" height="15.0" fill="rgb(241,47,46)" rx="2" ry="2" />
<text  x="637.22" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::SendWritesCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="140.1" y="1941" width="0.2" height="15.0" fill="rgb(241,216,28)" rx="2" ry="2" />
<text  x="143.11" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="888.1" y="1973" width="0.4" height="15.0" fill="rgb(208,57,21)" rx="2" ry="2" />
<text  x="891.07" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="122.2" y="1525" width="0.2" height="15.0" fill="rgb(233,227,12)" rx="2" ry="2" />
<text  x="125.15" y="1535.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (6 samples, 0.10%)</title><rect x="970.1" y="2037" width="1.2" height="15.0" fill="rgb(244,143,53)" rx="2" ry="2" />
<text  x="973.08" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1143.9" y="2005" width="0.2" height="15.0" fill="rgb(234,3,48)" rx="2" ry="2" />
<text  x="1146.90" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1067.5" y="1797" width="0.2" height="15.0" fill="rgb(238,41,2)" rx="2" ry="2" />
<text  x="1070.47" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (7 samples, 0.12%)</title><rect x="1164.5" y="2053" width="1.4" height="15.0" fill="rgb(209,56,6)" rx="2" ry="2" />
<text  x="1167.46" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1605" width="17.8" height="15.0" fill="rgb(223,156,15)" rx="2" ry="2" />
<text  x="107.99" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1080.6" y="1653" width="0.2" height="15.0" fill="rgb(215,188,24)" rx="2" ry="2" />
<text  x="1083.64" y="1663.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="731.8" y="1685" width="0.2" height="15.0" fill="rgb(222,104,27)" rx="2" ry="2" />
<text  x="734.81" y="1695.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7 samples, 0.12%)</title><rect x="693.7" y="1925" width="1.4" height="15.0" fill="rgb(247,222,20)" rx="2" ry="2" />
<text  x="696.69" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (5 samples, 0.08%)</title><rect x="514.5" y="1973" width="1.0" height="15.0" fill="rgb(217,66,34)" rx="2" ry="2" />
<text  x="517.49" y="1983.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="470.6" y="1765" width="0.2" height="15.0" fill="rgb(220,40,49)" rx="2" ry="2" />
<text  x="473.59" y="1775.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="133.7" y="1973" width="0.2" height="15.0" fill="rgb(208,120,47)" rx="2" ry="2" />
<text  x="136.73" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="982.9" y="1957" width="0.2" height="15.0" fill="rgb(213,224,37)" rx="2" ry="2" />
<text  x="985.86" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="544.6" y="1925" width="0.4" height="15.0" fill="rgb(221,44,34)" rx="2" ry="2" />
<text  x="547.62" y="1935.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="332.1" y="1829" width="0.2" height="15.0" fill="rgb(208,226,49)" rx="2" ry="2" />
<text  x="335.09" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="50.9" y="1909" width="0.2" height="15.0" fill="rgb(232,62,32)" rx="2" ry="2" />
<text  x="53.91" y="1919.5" ></text>
</g>
<g >
<title>security_file_alloc (5 samples, 0.08%)</title><rect x="402.1" y="1909" width="1.0" height="15.0" fill="rgb(215,139,20)" rx="2" ry="2" />
<text  x="405.14" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="602.3" y="1813" width="0.2" height="15.0" fill="rgb(223,8,8)" rx="2" ry="2" />
<text  x="605.29" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (1 samples, 0.02%)</title><rect x="1166.1" y="2053" width="0.2" height="15.0" fill="rgb(214,9,16)" rx="2" ry="2" />
<text  x="1169.05" y="2063.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (43 samples, 0.73%)</title><rect x="1107.4" y="1877" width="8.6" height="15.0" fill="rgb(213,21,12)" rx="2" ry="2" />
<text  x="1110.38" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1067.9" y="1861" width="0.2" height="15.0" fill="rgb(214,23,4)" rx="2" ry="2" />
<text  x="1070.87" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="121.2" y="117" width="0.2" height="15.0" fill="rgb(231,210,8)" rx="2" ry="2" />
<text  x="124.16" y="127.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="146.7" y="1877" width="0.2" height="15.0" fill="rgb(205,93,38)" rx="2" ry="2" />
<text  x="149.70" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="120.4" y="117" width="0.2" height="15.0" fill="rgb(221,35,12)" rx="2" ry="2" />
<text  x="123.36" y="127.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (5 samples, 0.08%)</title><rect x="840.2" y="1925" width="1.0" height="15.0" fill="rgb(213,112,54)" rx="2" ry="2" />
<text  x="843.17" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1080.6" y="1781" width="0.2" height="15.0" fill="rgb(249,220,13)" rx="2" ry="2" />
<text  x="1083.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="866.1" y="1989" width="0.2" height="15.0" fill="rgb(252,166,16)" rx="2" ry="2" />
<text  x="869.11" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="289.6" y="1477" width="0.6" height="15.0" fill="rgb(236,177,41)" rx="2" ry="2" />
<text  x="292.58" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="316.5" y="1781" width="0.6" height="15.0" fill="rgb(248,57,42)" rx="2" ry="2" />
<text  x="319.52" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="675.7" y="2005" width="0.2" height="15.0" fill="rgb(245,131,4)" rx="2" ry="2" />
<text  x="678.73" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="541.2" y="1973" width="0.2" height="15.0" fill="rgb(240,125,34)" rx="2" ry="2" />
<text  x="544.23" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1159.7" y="1925" width="0.2" height="15.0" fill="rgb(215,17,29)" rx="2" ry="2" />
<text  x="1162.67" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="1147.9" y="1957" width="0.2" height="15.0" fill="rgb(223,36,1)" rx="2" ry="2" />
<text  x="1150.89" y="1967.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1119.0" y="1925" width="0.2" height="15.0" fill="rgb(250,52,17)" rx="2" ry="2" />
<text  x="1121.96" y="1935.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="568.8" y="1637" width="0.2" height="15.0" fill="rgb(221,125,45)" rx="2" ry="2" />
<text  x="571.77" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="147.7" y="1909" width="0.2" height="15.0" fill="rgb(220,208,43)" rx="2" ry="2" />
<text  x="150.70" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_mss (29 samples, 0.49%)</title><rect x="326.5" y="1877" width="5.8" height="15.0" fill="rgb(229,179,36)" rx="2" ry="2" />
<text  x="329.50" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (1 samples, 0.02%)</title><rect x="969.5" y="2037" width="0.2" height="15.0" fill="rgb(227,71,36)" rx="2" ry="2" />
<text  x="972.49" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="629" width="16.0" height="15.0" fill="rgb(217,97,44)" rx="2" ry="2" />
<text  x="108.39" y="639.5" ></text>
</g>
<g >
<title>dev_queue_xmit (3 samples, 0.05%)</title><rect x="1115.0" y="1781" width="0.6" height="15.0" fill="rgb(222,218,18)" rx="2" ry="2" />
<text  x="1117.97" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="951.1" y="1797" width="0.2" height="15.0" fill="rgb(228,211,54)" rx="2" ry="2" />
<text  x="954.13" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (4 samples, 0.07%)</title><rect x="1173.0" y="1973" width="0.8" height="15.0" fill="rgb(212,159,37)" rx="2" ry="2" />
<text  x="1176.04" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="575.0" y="1925" width="0.2" height="15.0" fill="rgb(237,223,53)" rx="2" ry="2" />
<text  x="577.96" y="1935.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="338.3" y="1685" width="0.2" height="15.0" fill="rgb(214,60,2)" rx="2" ry="2" />
<text  x="341.28" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="634.2" y="1925" width="0.2" height="15.0" fill="rgb(244,145,48)" rx="2" ry="2" />
<text  x="637.22" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="246.7" y="1973" width="0.2" height="15.0" fill="rgb(250,195,4)" rx="2" ry="2" />
<text  x="249.68" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="885" width="16.0" height="15.0" fill="rgb(212,151,31)" rx="2" ry="2" />
<text  x="108.39" y="895.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="704.9" y="1989" width="0.2" height="15.0" fill="rgb(248,138,40)" rx="2" ry="2" />
<text  x="707.87" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="255.1" y="1861" width="0.2" height="15.0" fill="rgb(223,194,12)" rx="2" ry="2" />
<text  x="258.06" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="540.4" y="1829" width="0.2" height="15.0" fill="rgb(208,200,21)" rx="2" ry="2" />
<text  x="543.43" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="525.1" y="1989" width="0.2" height="15.0" fill="rgb(229,137,23)" rx="2" ry="2" />
<text  x="528.07" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="321.3" y="1621" width="0.2" height="15.0" fill="rgb(216,15,16)" rx="2" ry="2" />
<text  x="324.31" y="1631.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.07%)</title><rect x="11.6" y="1973" width="0.8" height="15.0" fill="rgb(225,5,37)" rx="2" ry="2" />
<text  x="14.60" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (2 samples, 0.03%)</title><rect x="891.5" y="1957" width="0.4" height="15.0" fill="rgb(242,66,23)" rx="2" ry="2" />
<text  x="894.46" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="474.0" y="1669" width="0.2" height="15.0" fill="rgb(221,179,19)" rx="2" ry="2" />
<text  x="476.98" y="1679.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="501.9" y="1541" width="0.2" height="15.0" fill="rgb(234,209,44)" rx="2" ry="2" />
<text  x="504.92" y="1551.5" ></text>
</g>
<g >
<title>tcp_gro_receive (1 samples, 0.02%)</title><rect x="321.1" y="1589" width="0.2" height="15.0" fill="rgb(223,172,50)" rx="2" ry="2" />
<text  x="324.11" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1049.3" y="1941" width="0.4" height="15.0" fill="rgb(239,50,29)" rx="2" ry="2" />
<text  x="1052.31" y="1951.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="452.0" y="1685" width="0.2" height="15.0" fill="rgb(235,109,40)" rx="2" ry="2" />
<text  x="455.03" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="964.7" y="1957" width="0.2" height="15.0" fill="rgb(248,32,7)" rx="2" ry="2" />
<text  x="967.70" y="1967.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="138.5" y="1941" width="0.2" height="15.0" fill="rgb(243,198,21)" rx="2" ry="2" />
<text  x="141.52" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="31.4" y="1957" width="0.8" height="15.0" fill="rgb(244,181,0)" rx="2" ry="2" />
<text  x="34.35" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="543.4" y="1941" width="1.6" height="15.0" fill="rgb(211,13,28)" rx="2" ry="2" />
<text  x="546.42" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="170.8" y="1989" width="0.2" height="15.0" fill="rgb(215,171,13)" rx="2" ry="2" />
<text  x="173.85" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="1146.9" y="1973" width="0.8" height="15.0" fill="rgb(242,157,28)" rx="2" ry="2" />
<text  x="1149.89" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (4 samples, 0.07%)</title><rect x="136.5" y="1941" width="0.8" height="15.0" fill="rgb(211,9,13)" rx="2" ry="2" />
<text  x="139.52" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="805.8" y="1461" width="0.4" height="15.0" fill="rgb(252,56,24)" rx="2" ry="2" />
<text  x="808.85" y="1471.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (3 samples, 0.05%)</title><rect x="83.4" y="1909" width="0.6" height="15.0" fill="rgb(240,31,27)" rx="2" ry="2" />
<text  x="86.44" y="1919.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="568.8" y="1669" width="0.2" height="15.0" fill="rgb(217,227,3)" rx="2" ry="2" />
<text  x="571.77" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="649.4" y="2005" width="0.2" height="15.0" fill="rgb(220,50,43)" rx="2" ry="2" />
<text  x="652.39" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (30 samples, 0.51%)</title><rect x="1109.0" y="1637" width="6.0" height="15.0" fill="rgb(215,20,46)" rx="2" ry="2" />
<text  x="1111.98" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="84.0" y="1941" width="0.2" height="15.0" fill="rgb(205,107,13)" rx="2" ry="2" />
<text  x="87.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="897.2" y="2021" width="2.0" height="15.0" fill="rgb(245,98,42)" rx="2" ry="2" />
<text  x="900.25" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="373.4" y="1701" width="0.2" height="15.0" fill="rgb(238,177,31)" rx="2" ry="2" />
<text  x="376.40" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="623.4" y="2005" width="0.2" height="15.0" fill="rgb(239,188,20)" rx="2" ry="2" />
<text  x="626.45" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="114.0" y="37" width="0.2" height="15.0" fill="rgb(205,78,53)" rx="2" ry="2" />
<text  x="116.97" y="47.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (3 samples, 0.05%)</title><rect x="79.6" y="1957" width="0.6" height="15.0" fill="rgb(236,194,33)" rx="2" ry="2" />
<text  x="82.65" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="474.0" y="1765" width="0.2" height="15.0" fill="rgb(242,135,13)" rx="2" ry="2" />
<text  x="476.98" y="1775.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (12 samples, 0.20%)</title><rect x="1120.0" y="1925" width="2.3" height="15.0" fill="rgb(250,44,48)" rx="2" ry="2" />
<text  x="1122.95" y="1935.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="399.7" y="1893" width="0.4" height="15.0" fill="rgb(212,221,53)" rx="2" ry="2" />
<text  x="402.74" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="566.6" y="1989" width="0.2" height="15.0" fill="rgb(216,135,4)" rx="2" ry="2" />
<text  x="569.57" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="763.1" y="1429" width="0.2" height="15.0" fill="rgb(251,202,13)" rx="2" ry="2" />
<text  x="766.14" y="1439.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (3 samples, 0.05%)</title><rect x="129.7" y="1989" width="0.6" height="15.0" fill="rgb(253,134,25)" rx="2" ry="2" />
<text  x="132.74" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (2 samples, 0.03%)</title><rect x="571.6" y="1941" width="0.4" height="15.0" fill="rgb(252,229,38)" rx="2" ry="2" />
<text  x="574.56" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="63.9" y="1877" width="0.2" height="15.0" fill="rgb(242,94,5)" rx="2" ry="2" />
<text  x="66.88" y="1887.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="373.4" y="1877" width="0.2" height="15.0" fill="rgb(225,229,26)" rx="2" ry="2" />
<text  x="376.40" y="1887.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (18 samples, 0.30%)</title><rect x="206.2" y="2021" width="3.6" height="15.0" fill="rgb(207,59,10)" rx="2" ry="2" />
<text  x="209.17" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="921.2" y="1909" width="0.4" height="15.0" fill="rgb(215,204,15)" rx="2" ry="2" />
<text  x="924.19" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="177.4" y="1973" width="0.2" height="15.0" fill="rgb(239,194,42)" rx="2" ry="2" />
<text  x="180.43" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="311.3" y="1637" width="0.2" height="15.0" fill="rgb(213,225,21)" rx="2" ry="2" />
<text  x="314.34" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (8 samples, 0.14%)</title><rect x="890.9" y="1989" width="1.6" height="15.0" fill="rgb(236,176,14)" rx="2" ry="2" />
<text  x="893.86" y="1999.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="865.7" y="1989" width="0.2" height="15.0" fill="rgb(222,219,13)" rx="2" ry="2" />
<text  x="868.71" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="914.2" y="1797" width="0.2" height="15.0" fill="rgb(235,224,14)" rx="2" ry="2" />
<text  x="917.21" y="1807.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="185.6" y="1877" width="0.8" height="15.0" fill="rgb(235,98,2)" rx="2" ry="2" />
<text  x="188.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="957.7" y="2021" width="0.4" height="15.0" fill="rgb(238,31,27)" rx="2" ry="2" />
<text  x="960.71" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="568.8" y="1845" width="0.2" height="15.0" fill="rgb(219,98,25)" rx="2" ry="2" />
<text  x="571.77" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1080.6" y="1829" width="0.2" height="15.0" fill="rgb(224,78,0)" rx="2" ry="2" />
<text  x="1083.64" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="63.7" y="1893" width="0.4" height="15.0" fill="rgb(233,22,10)" rx="2" ry="2" />
<text  x="66.68" y="1903.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="932.6" y="1957" width="0.2" height="15.0" fill="rgb(252,140,9)" rx="2" ry="2" />
<text  x="935.57" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="501.5" y="1845" width="0.8" height="15.0" fill="rgb(235,84,18)" rx="2" ry="2" />
<text  x="504.52" y="1855.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="320.5" y="1749" width="0.2" height="15.0" fill="rgb(222,199,14)" rx="2" ry="2" />
<text  x="323.52" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (13 samples, 0.22%)</title><rect x="1086.6" y="1877" width="2.6" height="15.0" fill="rgb(230,130,48)" rx="2" ry="2" />
<text  x="1089.63" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="458.0" y="1877" width="0.2" height="15.0" fill="rgb(246,5,48)" rx="2" ry="2" />
<text  x="461.01" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (3 samples, 0.05%)</title><rect x="887.5" y="1861" width="0.6" height="15.0" fill="rgb(243,227,2)" rx="2" ry="2" />
<text  x="890.47" y="1871.5" ></text>
</g>
<g >
<title>alloc_inode (35 samples, 0.59%)</title><rect x="389.0" y="1925" width="6.9" height="15.0" fill="rgb(237,48,25)" rx="2" ry="2" />
<text  x="391.96" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="892.1" y="1781" width="0.2" height="15.0" fill="rgb(231,78,18)" rx="2" ry="2" />
<text  x="895.06" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="142.7" y="1861" width="0.6" height="15.0" fill="rgb(223,104,14)" rx="2" ry="2" />
<text  x="145.71" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="566.0" y="1829" width="0.2" height="15.0" fill="rgb(206,123,4)" rx="2" ry="2" />
<text  x="568.97" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10 samples, 0.17%)</title><rect x="763.3" y="1701" width="2.0" height="15.0" fill="rgb(219,216,49)" rx="2" ry="2" />
<text  x="766.34" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (3 samples, 0.05%)</title><rect x="95.6" y="2021" width="0.6" height="15.0" fill="rgb(225,94,29)" rx="2" ry="2" />
<text  x="98.61" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="693" width="16.0" height="15.0" fill="rgb(239,101,25)" rx="2" ry="2" />
<text  x="108.39" y="703.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="261.8" y="1829" width="0.2" height="15.0" fill="rgb(206,88,19)" rx="2" ry="2" />
<text  x="264.85" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.2" y="2053" width="0.2" height="15.0" fill="rgb(220,226,15)" rx="2" ry="2" />
<text  x="14.20" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="255.3" y="1877" width="0.4" height="15.0" fill="rgb(211,145,5)" rx="2" ry="2" />
<text  x="258.26" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="842.8" y="1781" width="0.2" height="15.0" fill="rgb(245,84,41)" rx="2" ry="2" />
<text  x="845.77" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (23 samples, 0.39%)</title><rect x="143.3" y="1925" width="4.6" height="15.0" fill="rgb(249,48,2)" rx="2" ry="2" />
<text  x="146.31" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="995.8" y="1973" width="0.2" height="15.0" fill="rgb(249,130,2)" rx="2" ry="2" />
<text  x="998.83" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="120.8" y="37" width="0.2" height="15.0" fill="rgb(235,28,40)" rx="2" ry="2" />
<text  x="123.76" y="47.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.9" y="1829" width="0.2" height="15.0" fill="rgb(211,89,50)" rx="2" ry="2" />
<text  x="126.95" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="135.7" y="1989" width="0.2" height="15.0" fill="rgb(235,107,48)" rx="2" ry="2" />
<text  x="138.72" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="914.2" y="1749" width="0.2" height="15.0" fill="rgb(242,180,25)" rx="2" ry="2" />
<text  x="917.21" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="373.4" y="1829" width="0.2" height="15.0" fill="rgb(241,48,54)" rx="2" ry="2" />
<text  x="376.40" y="1839.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="602.1" y="1989" width="0.4" height="15.0" fill="rgb(235,45,16)" rx="2" ry="2" />
<text  x="605.10" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="695.5" y="1765" width="0.6" height="15.0" fill="rgb(216,140,42)" rx="2" ry="2" />
<text  x="698.49" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="969.3" y="1973" width="0.2" height="15.0" fill="rgb(214,150,49)" rx="2" ry="2" />
<text  x="972.29" y="1983.5" ></text>
</g>
<g >
<title>process_backlog (13 samples, 0.22%)</title><rect x="288.0" y="1653" width="2.6" height="15.0" fill="rgb(251,52,24)" rx="2" ry="2" />
<text  x="290.99" y="1663.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="152.3" y="1877" width="0.2" height="15.0" fill="rgb(223,16,16)" rx="2" ry="2" />
<text  x="155.29" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="246.7" y="1957" width="0.2" height="15.0" fill="rgb(247,208,45)" rx="2" ry="2" />
<text  x="249.68" y="1967.5" ></text>
</g>
<g >
<title>security_socket_accept (7 samples, 0.12%)</title><rect x="385.8" y="1957" width="1.4" height="15.0" fill="rgb(245,16,31)" rx="2" ry="2" />
<text  x="388.77" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="621.1" y="2005" width="0.2" height="15.0" fill="rgb(241,21,32)" rx="2" ry="2" />
<text  x="624.05" y="2015.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="762.9" y="1669" width="0.2" height="15.0" fill="rgb(249,35,42)" rx="2" ry="2" />
<text  x="765.94" y="1679.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1083.2" y="1781" width="0.2" height="15.0" fill="rgb(243,225,33)" rx="2" ry="2" />
<text  x="1086.24" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="602.3" y="1909" width="0.2" height="15.0" fill="rgb(251,79,33)" rx="2" ry="2" />
<text  x="605.29" y="1919.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (37 samples, 0.63%)</title><rect x="266.4" y="1877" width="7.4" height="15.0" fill="rgb(227,190,1)" rx="2" ry="2" />
<text  x="269.43" y="1887.5" ></text>
</g>
<g >
<title>kfree (3 samples, 0.05%)</title><rect x="1071.9" y="1861" width="0.6" height="15.0" fill="rgb(242,93,53)" rx="2" ry="2" />
<text  x="1074.86" y="1871.5" ></text>
</g>
<g >
<title>kmem_cache_free (10 samples, 0.17%)</title><rect x="736.2" y="1669" width="2.0" height="15.0" fill="rgb(210,135,50)" rx="2" ry="2" />
<text  x="739.20" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (17 samples, 0.29%)</title><rect x="179.4" y="1973" width="3.4" height="15.0" fill="rgb(228,40,19)" rx="2" ry="2" />
<text  x="182.43" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.2" y="1765" width="0.2" height="15.0" fill="rgb(224,146,26)" rx="2" ry="2" />
<text  x="107.19" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="228.3" y="1829" width="0.8" height="15.0" fill="rgb(235,196,22)" rx="2" ry="2" />
<text  x="231.32" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1072.3" y="1637" width="0.2" height="15.0" fill="rgb(231,209,40)" rx="2" ry="2" />
<text  x="1075.26" y="1647.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (1 samples, 0.02%)</title><rect x="525.5" y="1989" width="0.2" height="15.0" fill="rgb(207,9,46)" rx="2" ry="2" />
<text  x="528.46" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="451.8" y="1717" width="0.2" height="15.0" fill="rgb(252,0,35)" rx="2" ry="2" />
<text  x="454.83" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (21 samples, 0.36%)</title><rect x="536.6" y="1989" width="4.2" height="15.0" fill="rgb(252,199,49)" rx="2" ry="2" />
<text  x="539.64" y="1999.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (1 samples, 0.02%)</title><rect x="487.1" y="2037" width="0.2" height="15.0" fill="rgb(246,56,36)" rx="2" ry="2" />
<text  x="490.15" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (9 samples, 0.15%)</title><rect x="616.5" y="2037" width="1.8" height="15.0" fill="rgb(213,177,7)" rx="2" ry="2" />
<text  x="619.46" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="459.8" y="1685" width="0.4" height="15.0" fill="rgb(254,180,11)" rx="2" ry="2" />
<text  x="462.81" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="321.3" y="1541" width="0.2" height="15.0" fill="rgb(234,190,10)" rx="2" ry="2" />
<text  x="324.31" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (2 samples, 0.03%)</title><rect x="625.6" y="2005" width="0.4" height="15.0" fill="rgb(224,171,33)" rx="2" ry="2" />
<text  x="628.64" y="2015.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="128.5" y="2005" width="0.2" height="15.0" fill="rgb(222,167,23)" rx="2" ry="2" />
<text  x="131.54" y="2015.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1067.3" y="1861" width="0.2" height="15.0" fill="rgb(217,55,16)" rx="2" ry="2" />
<text  x="1070.27" y="1871.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="121.0" y="69" width="0.2" height="15.0" fill="rgb(242,181,7)" rx="2" ry="2" />
<text  x="123.96" y="79.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1 samples, 0.02%)</title><rect x="724.6" y="1797" width="0.2" height="15.0" fill="rgb(209,37,15)" rx="2" ry="2" />
<text  x="727.63" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="623.2" y="2005" width="0.2" height="15.0" fill="rgb(225,52,43)" rx="2" ry="2" />
<text  x="626.25" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.07%)</title><rect x="1183.6" y="2037" width="0.8" height="15.0" fill="rgb(210,86,26)" rx="2" ry="2" />
<text  x="1186.61" y="2047.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (3 samples, 0.05%)</title><rect x="881.9" y="1941" width="0.6" height="15.0" fill="rgb(236,199,42)" rx="2" ry="2" />
<text  x="884.88" y="1951.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (5 samples, 0.08%)</title><rect x="687.5" y="1925" width="1.0" height="15.0" fill="rgb(225,6,1)" rx="2" ry="2" />
<text  x="690.51" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="967.9" y="2021" width="0.4" height="15.0" fill="rgb(230,160,36)" rx="2" ry="2" />
<text  x="970.89" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.2" y="1733" width="0.2" height="15.0" fill="rgb(217,23,27)" rx="2" ry="2" />
<text  x="844.17" y="1743.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="452.0" y="1621" width="0.2" height="15.0" fill="rgb(237,66,46)" rx="2" ry="2" />
<text  x="455.03" y="1631.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (4 samples, 0.07%)</title><rect x="324.9" y="1829" width="0.8" height="15.0" fill="rgb(220,102,2)" rx="2" ry="2" />
<text  x="327.91" y="1839.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="695.7" y="1701" width="0.2" height="15.0" fill="rgb(223,189,8)" rx="2" ry="2" />
<text  x="698.69" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="156.7" y="1925" width="0.2" height="15.0" fill="rgb(211,97,23)" rx="2" ry="2" />
<text  x="159.68" y="1935.5" ></text>
</g>
<g >
<title>sched_clock (3 samples, 0.05%)</title><rect x="1117.8" y="1893" width="0.6" height="15.0" fill="rgb(250,98,28)" rx="2" ry="2" />
<text  x="1120.76" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="140.5" y="1909" width="0.2" height="15.0" fill="rgb(214,151,23)" rx="2" ry="2" />
<text  x="143.51" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (5 samples, 0.08%)</title><rect x="880.9" y="1909" width="1.0" height="15.0" fill="rgb(219,73,3)" rx="2" ry="2" />
<text  x="883.88" y="1919.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="307.9" y="1637" width="0.2" height="15.0" fill="rgb(218,188,27)" rx="2" ry="2" />
<text  x="310.94" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="63.9" y="1781" width="0.2" height="15.0" fill="rgb(224,55,18)" rx="2" ry="2" />
<text  x="66.88" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="913.0" y="2037" width="0.6" height="15.0" fill="rgb(248,213,41)" rx="2" ry="2" />
<text  x="916.01" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="695.5" y="1797" width="0.6" height="15.0" fill="rgb(222,158,51)" rx="2" ry="2" />
<text  x="698.49" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (1 samples, 0.02%)</title><rect x="838.2" y="1925" width="0.2" height="15.0" fill="rgb(229,203,31)" rx="2" ry="2" />
<text  x="841.18" y="1935.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="470.6" y="1797" width="0.2" height="15.0" fill="rgb(232,79,24)" rx="2" ry="2" />
<text  x="473.59" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1685" width="17.8" height="15.0" fill="rgb(220,119,5)" rx="2" ry="2" />
<text  x="107.99" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="538.8" y="1893" width="0.8" height="15.0" fill="rgb(251,189,44)" rx="2" ry="2" />
<text  x="541.83" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="997.4" y="1989" width="0.2" height="15.0" fill="rgb(250,8,50)" rx="2" ry="2" />
<text  x="1000.42" y="1999.5" ></text>
</g>
<g >
<title>mcrouter (5,885 samples, 99.53%)</title><rect x="15.6" y="2069" width="1174.4" height="15.0" fill="rgb(243,80,23)" rx="2" ry="2" />
<text  x="18.59" y="2079.5" >mcrouter</text>
</g>
<g >
<title>__fput (3 samples, 0.05%)</title><rect x="357.6" y="1941" width="0.6" height="15.0" fill="rgb(230,206,44)" rx="2" ry="2" />
<text  x="360.63" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::init (1 samples, 0.02%)</title><rect x="1007.6" y="1989" width="0.2" height="15.0" fill="rgb(254,181,19)" rx="2" ry="2" />
<text  x="1010.60" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1007.4" y="1909" width="0.2" height="15.0" fill="rgb(243,208,31)" rx="2" ry="2" />
<text  x="1010.40" y="1919.5" ></text>
</g>
<g >
<title>kfree_call_rcu (8 samples, 0.14%)</title><rect x="734.6" y="1669" width="1.6" height="15.0" fill="rgb(212,144,20)" rx="2" ry="2" />
<text  x="737.60" y="1679.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="137.1" y="1893" width="0.2" height="15.0" fill="rgb(230,61,17)" rx="2" ry="2" />
<text  x="140.12" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="138.9" y="1909" width="0.4" height="15.0" fill="rgb(249,194,48)" rx="2" ry="2" />
<text  x="141.92" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1049.3" y="1877" width="0.4" height="15.0" fill="rgb(246,47,15)" rx="2" ry="2" />
<text  x="1052.31" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="147.1" y="1893" width="0.2" height="15.0" fill="rgb(234,122,16)" rx="2" ry="2" />
<text  x="150.10" y="1903.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (55 samples, 0.93%)</title><rect x="1105.0" y="1925" width="11.0" height="15.0" fill="rgb(245,196,22)" rx="2" ry="2" />
<text  x="1107.99" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (5 samples, 0.08%)</title><rect x="107.0" y="37" width="1.0" height="15.0" fill="rgb(229,33,12)" rx="2" ry="2" />
<text  x="109.99" y="47.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (382 samples, 6.46%)</title><rect x="256.3" y="1893" width="76.2" height="15.0" fill="rgb(243,55,24)" rx="2" ry="2" />
<text  x="259.26" y="1903.5" >tcp_send..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="528.5" y="1941" width="0.4" height="15.0" fill="rgb(232,195,32)" rx="2" ry="2" />
<text  x="531.46" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1140.7" y="1941" width="0.2" height="15.0" fill="rgb(219,167,21)" rx="2" ry="2" />
<text  x="1143.71" y="1951.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="373.4" y="1589" width="0.2" height="15.0" fill="rgb(217,192,14)" rx="2" ry="2" />
<text  x="376.40" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="80.0" y="1941" width="0.2" height="15.0" fill="rgb(225,134,17)" rx="2" ry="2" />
<text  x="83.05" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="918.6" y="1941" width="0.2" height="15.0" fill="rgb(237,210,49)" rx="2" ry="2" />
<text  x="921.60" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="290.2" y="1493" width="0.4" height="15.0" fill="rgb(211,9,50)" rx="2" ry="2" />
<text  x="293.18" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="726.4" y="1749" width="0.2" height="15.0" fill="rgb(239,31,52)" rx="2" ry="2" />
<text  x="729.42" y="1759.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="675.5" y="1941" width="0.2" height="15.0" fill="rgb(206,155,40)" rx="2" ry="2" />
<text  x="678.53" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="338.3" y="1845" width="0.2" height="15.0" fill="rgb(214,192,10)" rx="2" ry="2" />
<text  x="341.28" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="151.3" y="1909" width="0.2" height="15.0" fill="rgb(229,153,23)" rx="2" ry="2" />
<text  x="154.29" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="223.1" y="1893" width="1.4" height="15.0" fill="rgb(243,134,7)" rx="2" ry="2" />
<text  x="226.13" y="1903.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="32.6" y="1669" width="0.1" height="15.0" fill="rgb(221,27,11)" rx="2" ry="2" />
<text  x="35.55" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="602.3" y="1957" width="0.2" height="15.0" fill="rgb(211,155,29)" rx="2" ry="2" />
<text  x="605.29" y="1967.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="152.9" y="1893" width="0.2" height="15.0" fill="rgb(233,2,31)" rx="2" ry="2" />
<text  x="155.89" y="1903.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="122.4" y="1557" width="0.2" height="15.0" fill="rgb(234,225,42)" rx="2" ry="2" />
<text  x="125.35" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="865.1" y="1925" width="0.2" height="15.0" fill="rgb(253,42,53)" rx="2" ry="2" />
<text  x="868.12" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.6" y="133" width="0.2" height="15.0" fill="rgb(209,181,24)" rx="2" ry="2" />
<text  x="123.56" y="143.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="311.3" y="1781" width="0.2" height="15.0" fill="rgb(216,174,52)" rx="2" ry="2" />
<text  x="314.34" y="1791.5" ></text>
</g>
<g >
<title>inet_reqsk_alloc (1 samples, 0.02%)</title><rect x="316.7" y="1477" width="0.2" height="15.0" fill="rgb(214,129,9)" rx="2" ry="2" />
<text  x="319.72" y="1487.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="390.8" y="1893" width="0.2" height="15.0" fill="rgb(224,174,3)" rx="2" ry="2" />
<text  x="393.76" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (12 samples, 0.20%)</title><rect x="336.1" y="1925" width="2.4" height="15.0" fill="rgb(242,199,19)" rx="2" ry="2" />
<text  x="339.08" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="132.1" y="1941" width="0.4" height="15.0" fill="rgb(234,89,38)" rx="2" ry="2" />
<text  x="135.13" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1147.9" y="2005" width="0.2" height="15.0" fill="rgb(247,9,5)" rx="2" ry="2" />
<text  x="1150.89" y="2015.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1083.8" y="1893" width="0.8" height="15.0" fill="rgb(214,122,21)" rx="2" ry="2" />
<text  x="1086.83" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (30 samples, 0.51%)</title><rect x="790.5" y="1509" width="6.0" height="15.0" fill="rgb(206,204,16)" rx="2" ry="2" />
<text  x="793.48" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="568.8" y="1925" width="0.2" height="15.0" fill="rgb(239,120,47)" rx="2" ry="2" />
<text  x="571.77" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="55.5" y="1925" width="1.4" height="15.0" fill="rgb(221,16,48)" rx="2" ry="2" />
<text  x="58.50" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1013" width="16.0" height="15.0" fill="rgb(224,20,32)" rx="2" ry="2" />
<text  x="108.39" y="1023.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="548.6" y="1941" width="0.4" height="15.0" fill="rgb(254,169,51)" rx="2" ry="2" />
<text  x="551.61" y="1951.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="1139.9" y="1957" width="0.2" height="15.0" fill="rgb(223,217,47)" rx="2" ry="2" />
<text  x="1142.91" y="1967.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="283.2" y="1765" width="0.4" height="15.0" fill="rgb(233,71,28)" rx="2" ry="2" />
<text  x="286.20" y="1775.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="562.0" y="1909" width="0.2" height="15.0" fill="rgb(207,174,16)" rx="2" ry="2" />
<text  x="564.98" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="231.9" y="1893" width="0.2" height="15.0" fill="rgb(213,112,23)" rx="2" ry="2" />
<text  x="234.91" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.61%)</title><rect x="105.4" y="53" width="7.2" height="15.0" fill="rgb(209,90,28)" rx="2" ry="2" />
<text  x="108.39" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="457.4" y="1893" width="0.4" height="15.0" fill="rgb(224,229,28)" rx="2" ry="2" />
<text  x="460.41" y="1903.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="1127.1" y="1989" width="0.2" height="15.0" fill="rgb(219,88,51)" rx="2" ry="2" />
<text  x="1130.14" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="1146.9" y="1989" width="0.8" height="15.0" fill="rgb(209,191,53)" rx="2" ry="2" />
<text  x="1149.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="597" width="16.0" height="15.0" fill="rgb(224,120,23)" rx="2" ry="2" />
<text  x="108.39" y="607.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="133.5" y="1749" width="0.2" height="15.0" fill="rgb(228,2,18)" rx="2" ry="2" />
<text  x="136.53" y="1759.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1139.9" y="2005" width="0.2" height="15.0" fill="rgb(236,14,21)" rx="2" ry="2" />
<text  x="1142.91" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="63.9" y="1829" width="0.2" height="15.0" fill="rgb(244,144,17)" rx="2" ry="2" />
<text  x="66.88" y="1839.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="385.2" y="1941" width="0.2" height="15.0" fill="rgb(241,90,30)" rx="2" ry="2" />
<text  x="388.17" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="951.1" y="1813" width="0.2" height="15.0" fill="rgb(210,53,42)" rx="2" ry="2" />
<text  x="954.13" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="474.0" y="1829" width="0.2" height="15.0" fill="rgb(228,86,25)" rx="2" ry="2" />
<text  x="476.98" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="932.0" y="1925" width="0.2" height="15.0" fill="rgb(249,43,39)" rx="2" ry="2" />
<text  x="934.97" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="964.7" y="1797" width="0.2" height="15.0" fill="rgb(221,162,23)" rx="2" ry="2" />
<text  x="967.70" y="1807.5" ></text>
</g>
<g >
<title>iput (64 samples, 1.08%)</title><rect x="727.8" y="1733" width="12.8" height="15.0" fill="rgb(220,32,45)" rx="2" ry="2" />
<text  x="730.82" y="1743.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="170.2" y="2005" width="0.2" height="15.0" fill="rgb(230,61,16)" rx="2" ry="2" />
<text  x="173.25" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="56.7" y="1893" width="0.2" height="15.0" fill="rgb(210,92,47)" rx="2" ry="2" />
<text  x="59.70" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="15.4" y="1893" width="0.2" height="15.0" fill="rgb(226,217,21)" rx="2" ry="2" />
<text  x="18.39" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (6 samples, 0.10%)</title><rect x="779.7" y="1541" width="1.2" height="15.0" fill="rgb(215,221,52)" rx="2" ry="2" />
<text  x="782.70" y="1551.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="905.2" y="1829" width="0.2" height="15.0" fill="rgb(211,65,45)" rx="2" ry="2" />
<text  x="908.23" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (4 samples, 0.07%)</title><rect x="844.6" y="1941" width="0.8" height="15.0" fill="rgb(251,83,25)" rx="2" ry="2" />
<text  x="847.56" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="150.7" y="1749" width="0.2" height="15.0" fill="rgb(226,192,0)" rx="2" ry="2" />
<text  x="153.69" y="1759.5" ></text>
</g>
<g >
<title>event_del (1 samples, 0.02%)</title><rect x="62.3" y="1909" width="0.2" height="15.0" fill="rgb(240,160,41)" rx="2" ry="2" />
<text  x="65.28" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1088.6" y="1685" width="0.2" height="15.0" fill="rgb(211,200,25)" rx="2" ry="2" />
<text  x="1091.62" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 1.32%)</title><rect x="105.4" y="357" width="15.6" height="15.0" fill="rgb(254,205,54)" rx="2" ry="2" />
<text  x="108.39" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="1088.4" y="1653" width="0.2" height="15.0" fill="rgb(242,205,14)" rx="2" ry="2" />
<text  x="1091.42" y="1663.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (3 samples, 0.05%)</title><rect x="29.0" y="1989" width="0.6" height="15.0" fill="rgb(230,99,23)" rx="2" ry="2" />
<text  x="31.96" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="202.2" y="1877" width="0.2" height="15.0" fill="rgb(209,170,10)" rx="2" ry="2" />
<text  x="205.18" y="1887.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.02%)</title><rect x="340.3" y="1717" width="0.2" height="15.0" fill="rgb(228,173,52)" rx="2" ry="2" />
<text  x="343.27" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="91.0" y="1749" width="0.2" height="15.0" fill="rgb(244,13,29)" rx="2" ry="2" />
<text  x="94.02" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="462.0" y="1781" width="0.2" height="15.0" fill="rgb(238,49,35)" rx="2" ry="2" />
<text  x="465.00" y="1791.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (7 samples, 0.12%)</title><rect x="102.2" y="2037" width="1.4" height="15.0" fill="rgb(222,118,8)" rx="2" ry="2" />
<text  x="105.20" y="2047.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.02%)</title><rect x="127.7" y="2005" width="0.2" height="15.0" fill="rgb(250,12,31)" rx="2" ry="2" />
<text  x="130.74" y="2015.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (11 samples, 0.19%)</title><rect x="270.0" y="1829" width="2.2" height="15.0" fill="rgb(235,66,12)" rx="2" ry="2" />
<text  x="273.03" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="972.9" y="2005" width="0.6" height="15.0" fill="rgb(211,32,44)" rx="2" ry="2" />
<text  x="975.88" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (7 samples, 0.12%)</title><rect x="950.3" y="1989" width="1.4" height="15.0" fill="rgb(207,88,44)" rx="2" ry="2" />
<text  x="953.33" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="287.8" y="1637" width="0.2" height="15.0" fill="rgb(231,191,10)" rx="2" ry="2" />
<text  x="290.79" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="896.8" y="1973" width="0.2" height="15.0" fill="rgb(237,9,22)" rx="2" ry="2" />
<text  x="899.85" y="1983.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="611.1" y="1813" width="0.4" height="15.0" fill="rgb(238,110,3)" rx="2" ry="2" />
<text  x="614.08" y="1823.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="875.9" y="1925" width="0.4" height="15.0" fill="rgb(216,81,30)" rx="2" ry="2" />
<text  x="878.89" y="1935.5" ></text>
</g>
<g >
<title>inode_has_buffers (1 samples, 0.02%)</title><rect x="734.0" y="1685" width="0.2" height="15.0" fill="rgb(218,145,10)" rx="2" ry="2" />
<text  x="737.00" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="142.3" y="1909" width="1.0" height="15.0" fill="rgb(230,161,52)" rx="2" ry="2" />
<text  x="145.31" y="1919.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="261.0" y="1861" width="1.0" height="15.0" fill="rgb(228,226,1)" rx="2" ry="2" />
<text  x="264.05" y="1871.5" ></text>
</g>
<g >
<title>expand_files (2 samples, 0.03%)</title><rect x="362.6" y="1925" width="0.4" height="15.0" fill="rgb(248,2,48)" rx="2" ry="2" />
<text  x="365.62" y="1935.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="470.4" y="1909" width="0.2" height="15.0" fill="rgb(240,47,42)" rx="2" ry="2" />
<text  x="473.39" y="1919.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="799.5" y="1509" width="0.2" height="15.0" fill="rgb(239,102,7)" rx="2" ry="2" />
<text  x="802.46" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1182.8" y="1973" width="0.2" height="15.0" fill="rgb(234,67,43)" rx="2" ry="2" />
<text  x="1185.82" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="232.5" y="1925" width="0.2" height="15.0" fill="rgb(210,124,0)" rx="2" ry="2" />
<text  x="235.51" y="1935.5" ></text>
</g>
<g >
<title>event_base_set@plt (1 samples, 0.02%)</title><rect x="537.6" y="1957" width="0.2" height="15.0" fill="rgb(207,143,0)" rx="2" ry="2" />
<text  x="540.64" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="316.7" y="1541" width="0.2" height="15.0" fill="rgb(218,122,23)" rx="2" ry="2" />
<text  x="319.72" y="1551.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="271.0" y="1797" width="1.2" height="15.0" fill="rgb(206,85,53)" rx="2" ry="2" />
<text  x="274.02" y="1807.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="252.7" y="1893" width="0.2" height="15.0" fill="rgb(241,51,48)" rx="2" ry="2" />
<text  x="255.67" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="104.6" y="1701" width="0.2" height="15.0" fill="rgb(207,108,3)" rx="2" ry="2" />
<text  x="107.59" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (292 samples, 4.94%)</title><rect x="36.1" y="2005" width="58.3" height="15.0" fill="rgb(220,199,9)" rx="2" ry="2" />
<text  x="39.14" y="2015.5" >folly:..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="988.2" y="1893" width="0.2" height="15.0" fill="rgb(209,153,24)" rx="2" ry="2" />
<text  x="991.24" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (3 samples, 0.05%)</title><rect x="873.3" y="1957" width="0.6" height="15.0" fill="rgb(210,176,15)" rx="2" ry="2" />
<text  x="876.30" y="1967.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="27.6" y="1973" width="0.8" height="15.0" fill="rgb(217,51,42)" rx="2" ry="2" />
<text  x="30.56" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="528.7" y="1893" width="0.2" height="15.0" fill="rgb(240,93,30)" rx="2" ry="2" />
<text  x="531.66" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (597 samples, 10.10%)</title><rect x="713.8" y="1877" width="119.2" height="15.0" fill="rgb(206,44,22)" rx="2" ry="2" />
<text  x="716.85" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="865.9" y="1989" width="0.2" height="15.0" fill="rgb(254,117,3)" rx="2" ry="2" />
<text  x="868.91" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1080.6" y="1845" width="0.2" height="15.0" fill="rgb(252,131,16)" rx="2" ry="2" />
<text  x="1083.64" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="22.2" y="2005" width="0.2" height="15.0" fill="rgb(210,160,0)" rx="2" ry="2" />
<text  x="25.17" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="1176.6" y="2005" width="0.8" height="15.0" fill="rgb(219,194,28)" rx="2" ry="2" />
<text  x="1179.63" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (23 samples, 0.39%)</title><rect x="608.1" y="1909" width="4.6" height="15.0" fill="rgb(205,67,32)" rx="2" ry="2" />
<text  x="611.08" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1067.7" y="1877" width="0.2" height="15.0" fill="rgb(232,61,52)" rx="2" ry="2" />
<text  x="1070.67" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="528.3" y="2021" width="2.0" height="15.0" fill="rgb(232,34,51)" rx="2" ry="2" />
<text  x="531.26" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1104.4" y="1845" width="0.2" height="15.0" fill="rgb(253,35,46)" rx="2" ry="2" />
<text  x="1107.39" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="470.6" y="1845" width="0.2" height="15.0" fill="rgb(219,163,30)" rx="2" ry="2" />
<text  x="473.59" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1018.6" y="2021" width="0.2" height="15.0" fill="rgb(211,55,19)" rx="2" ry="2" />
<text  x="1021.58" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="111.0" y="37" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="113.98" y="47.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="1167.6" y="1973" width="0.2" height="15.0" fill="rgb(218,110,5)" rx="2" ry="2" />
<text  x="1170.65" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="459.8" y="1701" width="0.4" height="15.0" fill="rgb(251,163,38)" rx="2" ry="2" />
<text  x="462.81" y="1711.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="481.2" y="1829" width="0.2" height="15.0" fill="rgb(245,46,8)" rx="2" ry="2" />
<text  x="484.16" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="122.8" y="1669" width="0.4" height="15.0" fill="rgb(226,138,36)" rx="2" ry="2" />
<text  x="125.75" y="1679.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="11.6" y="1877" width="0.8" height="15.0" fill="rgb(251,219,39)" rx="2" ry="2" />
<text  x="14.60" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66 samples, 1.12%)</title><rect x="585.5" y="1925" width="13.2" height="15.0" fill="rgb(236,193,45)" rx="2" ry="2" />
<text  x="588.53" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1088.4" y="1733" width="0.2" height="15.0" fill="rgb(214,146,27)" rx="2" ry="2" />
<text  x="1091.42" y="1743.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1108.2" y="1797" width="0.2" height="15.0" fill="rgb(252,162,35)" rx="2" ry="2" />
<text  x="1111.18" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="862.7" y="1989" width="0.2" height="15.0" fill="rgb(234,82,3)" rx="2" ry="2" />
<text  x="865.72" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (13 samples, 0.22%)</title><rect x="81.6" y="1957" width="2.6" height="15.0" fill="rgb(246,1,41)" rx="2" ry="2" />
<text  x="84.64" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="477.6" y="1957" width="0.2" height="15.0" fill="rgb(211,144,38)" rx="2" ry="2" />
<text  x="480.57" y="1967.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="11.2" y="2037" width="0.2" height="15.0" fill="rgb(251,114,30)" rx="2" ry="2" />
<text  x="14.20" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="29.4" y="1877" width="0.2" height="15.0" fill="rgb(212,172,2)" rx="2" ry="2" />
<text  x="32.36" y="1887.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (122 samples, 2.06%)</title><rect x="210.8" y="2037" width="24.3" height="15.0" fill="rgb(243,14,39)" rx="2" ry="2" />
<text  x="213.76" y="2047.5" >_..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1072.3" y="1813" width="0.2" height="15.0" fill="rgb(246,115,54)" rx="2" ry="2" />
<text  x="1075.26" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 1.27%)</title><rect x="105.4" y="117" width="15.0" height="15.0" fill="rgb(213,163,18)" rx="2" ry="2" />
<text  x="108.39" y="127.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="512.1" y="1925" width="0.4" height="15.0" fill="rgb(218,25,54)" rx="2" ry="2" />
<text  x="515.09" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="516.3" y="1957" width="0.2" height="15.0" fill="rgb(207,81,5)" rx="2" ry="2" />
<text  x="519.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7 samples, 0.12%)</title><rect x="289.2" y="1525" width="1.4" height="15.0" fill="rgb(242,209,23)" rx="2" ry="2" />
<text  x="292.18" y="1535.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="815.8" y="1669" width="0.2" height="15.0" fill="rgb(205,207,49)" rx="2" ry="2" />
<text  x="818.82" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="231.3" y="1925" width="1.2" height="15.0" fill="rgb(242,96,29)" rx="2" ry="2" />
<text  x="234.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::handleAscii (1 samples, 0.02%)</title><rect x="1164.3" y="2053" width="0.2" height="15.0" fill="rgb(233,141,15)" rx="2" ry="2" />
<text  x="1167.26" y="2063.5" ></text>
</g>
<g >
<title>netif_skb_features (6 samples, 0.10%)</title><rect x="309.1" y="1653" width="1.2" height="15.0" fill="rgb(223,191,37)" rx="2" ry="2" />
<text  x="312.14" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="1173.8" y="1973" width="0.4" height="15.0" fill="rgb(230,88,6)" rx="2" ry="2" />
<text  x="1176.84" y="1983.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="620.9" y="2005" width="0.2" height="15.0" fill="rgb(206,187,0)" rx="2" ry="2" />
<text  x="623.85" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="30.2" y="1957" width="0.2" height="15.0" fill="rgb(217,43,50)" rx="2" ry="2" />
<text  x="33.16" y="1967.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.34%)</title><rect x="1159.9" y="1957" width="4.0" height="15.0" fill="rgb(225,28,16)" rx="2" ry="2" />
<text  x="1162.87" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="23.0" y="1749" width="0.2" height="15.0" fill="rgb(206,227,52)" rx="2" ry="2" />
<text  x="25.97" y="1759.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="399.1" y="1893" width="0.6" height="15.0" fill="rgb(206,72,5)" rx="2" ry="2" />
<text  x="402.14" y="1903.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="310.1" y="1637" width="0.2" height="15.0" fill="rgb(251,69,22)" rx="2" ry="2" />
<text  x="313.14" y="1647.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (3 samples, 0.05%)</title><rect x="1118.4" y="1925" width="0.6" height="15.0" fill="rgb(244,147,48)" rx="2" ry="2" />
<text  x="1121.36" y="1935.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1109.2" y="1557" width="0.2" height="15.0" fill="rgb(225,137,45)" rx="2" ry="2" />
<text  x="1112.18" y="1567.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="513.9" y="1957" width="0.4" height="15.0" fill="rgb(214,108,37)" rx="2" ry="2" />
<text  x="516.89" y="1967.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.02%)</title><rect x="1067.3" y="1765" width="0.2" height="15.0" fill="rgb(213,3,14)" rx="2" ry="2" />
<text  x="1070.27" y="1775.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (3 samples, 0.05%)</title><rect x="521.3" y="1957" width="0.6" height="15.0" fill="rgb(214,205,35)" rx="2" ry="2" />
<text  x="524.27" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="121.2" y="101" width="0.2" height="15.0" fill="rgb(246,156,37)" rx="2" ry="2" />
<text  x="124.16" y="111.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="630.0" y="1973" width="0.2" height="15.0" fill="rgb(243,86,42)" rx="2" ry="2" />
<text  x="633.03" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="909.4" y="1781" width="0.2" height="15.0" fill="rgb(253,13,39)" rx="2" ry="2" />
<text  x="912.42" y="1791.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (10 samples, 0.17%)</title><rect x="84.2" y="1957" width="2.0" height="15.0" fill="rgb(237,177,31)" rx="2" ry="2" />
<text  x="87.24" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="922.0" y="1957" width="0.2" height="15.0" fill="rgb(240,168,16)" rx="2" ry="2" />
<text  x="924.99" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="452.0" y="1845" width="0.2" height="15.0" fill="rgb(218,220,38)" rx="2" ry="2" />
<text  x="455.03" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="120.8" y="181" width="0.2" height="15.0" fill="rgb(244,109,53)" rx="2" ry="2" />
<text  x="123.76" y="191.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 1.30%)</title><rect x="105.4" y="197" width="15.4" height="15.0" fill="rgb(249,208,29)" rx="2" ry="2" />
<text  x="108.39" y="207.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (3 samples, 0.05%)</title><rect x="522.1" y="1973" width="0.6" height="15.0" fill="rgb(248,102,8)" rx="2" ry="2" />
<text  x="525.07" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1067.1" y="1717" width="0.2" height="15.0" fill="rgb(251,226,33)" rx="2" ry="2" />
<text  x="1070.07" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="569.0" y="2005" width="0.2" height="15.0" fill="rgb(214,179,49)" rx="2" ry="2" />
<text  x="571.97" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="176.6" y="1957" width="0.2" height="15.0" fill="rgb(239,44,23)" rx="2" ry="2" />
<text  x="179.63" y="1967.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (2 samples, 0.03%)</title><rect x="402.1" y="1893" width="0.4" height="15.0" fill="rgb(248,87,32)" rx="2" ry="2" />
<text  x="405.14" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (105 samples, 1.78%)</title><rect x="972.9" y="2037" width="20.9" height="15.0" fill="rgb(219,119,50)" rx="2" ry="2" />
<text  x="975.88" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="536.2" y="1957" width="0.2" height="15.0" fill="rgb(236,208,37)" rx="2" ry="2" />
<text  x="539.24" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (11 samples, 0.19%)</title><rect x="50.5" y="1957" width="2.2" height="15.0" fill="rgb(211,227,3)" rx="2" ry="2" />
<text  x="53.51" y="1967.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="460.0" y="1573" width="0.2" height="15.0" fill="rgb(232,156,49)" rx="2" ry="2" />
<text  x="463.01" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="914.2" y="1877" width="0.2" height="15.0" fill="rgb(216,50,50)" rx="2" ry="2" />
<text  x="917.21" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="943.7" y="2005" width="0.2" height="15.0" fill="rgb(217,146,6)" rx="2" ry="2" />
<text  x="946.74" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="481.0" y="1829" width="0.2" height="15.0" fill="rgb(210,13,35)" rx="2" ry="2" />
<text  x="483.96" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="77.7" y="1909" width="0.2" height="15.0" fill="rgb(249,187,19)" rx="2" ry="2" />
<text  x="80.65" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1049.3" y="1909" width="0.4" height="15.0" fill="rgb(243,99,43)" rx="2" ry="2" />
<text  x="1052.31" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="174.2" y="2005" width="0.2" height="15.0" fill="rgb(239,186,17)" rx="2" ry="2" />
<text  x="177.24" y="2015.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="227.9" y="1749" width="0.2" height="15.0" fill="rgb(235,144,22)" rx="2" ry="2" />
<text  x="230.92" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="150.7" y="1829" width="0.2" height="15.0" fill="rgb(247,72,8)" rx="2" ry="2" />
<text  x="153.69" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1088.6" y="1749" width="0.2" height="15.0" fill="rgb(235,188,28)" rx="2" ry="2" />
<text  x="1091.62" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (62 samples, 1.05%)</title><rect x="586.1" y="1909" width="12.4" height="15.0" fill="rgb(254,113,34)" rx="2" ry="2" />
<text  x="589.13" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="63.9" y="1701" width="0.2" height="15.0" fill="rgb(240,12,10)" rx="2" ry="2" />
<text  x="66.88" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="848.6" y="1861" width="0.4" height="15.0" fill="rgb(223,170,51)" rx="2" ry="2" />
<text  x="851.55" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="518.9" y="1957" width="1.0" height="15.0" fill="rgb(249,61,51)" rx="2" ry="2" />
<text  x="521.88" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="543.8" y="1909" width="0.2" height="15.0" fill="rgb(254,35,33)" rx="2" ry="2" />
<text  x="546.82" y="1919.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.02%)</title><rect x="481.2" y="1813" width="0.2" height="15.0" fill="rgb(206,86,28)" rx="2" ry="2" />
<text  x="484.16" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="909.4" y="1749" width="0.2" height="15.0" fill="rgb(254,201,38)" rx="2" ry="2" />
<text  x="912.42" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="23.0" y="1781" width="0.2" height="15.0" fill="rgb(212,172,34)" rx="2" ry="2" />
<text  x="25.97" y="1791.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="409.9" y="1973" width="0.2" height="15.0" fill="rgb(213,27,51)" rx="2" ry="2" />
<text  x="412.92" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="842.4" y="1845" width="0.2" height="15.0" fill="rgb(211,38,39)" rx="2" ry="2" />
<text  x="845.37" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="481.0" y="2005" width="0.4" height="15.0" fill="rgb(237,219,30)" rx="2" ry="2" />
<text  x="483.96" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (44 samples, 0.74%)</title><rect x="48.1" y="1973" width="8.8" height="15.0" fill="rgb(213,221,54)" rx="2" ry="2" />
<text  x="51.12" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="230.9" y="1813" width="0.4" height="15.0" fill="rgb(216,145,51)" rx="2" ry="2" />
<text  x="233.91" y="1823.5" ></text>
</g>
<g >
<title>dput (2 samples, 0.03%)</title><rect x="357.8" y="1925" width="0.4" height="15.0" fill="rgb(230,103,19)" rx="2" ry="2" />
<text  x="360.83" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="528.9" y="1893" width="0.4" height="15.0" fill="rgb(241,192,48)" rx="2" ry="2" />
<text  x="531.86" y="1903.5" ></text>
</g>
<g >
<title>add_wait_queue (4 samples, 0.07%)</title><rect x="457.4" y="1909" width="0.8" height="15.0" fill="rgb(231,4,20)" rx="2" ry="2" />
<text  x="460.41" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="481.0" y="1813" width="0.2" height="15.0" fill="rgb(230,65,11)" rx="2" ry="2" />
<text  x="483.96" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="927.4" y="1877" width="0.2" height="15.0" fill="rgb(221,181,30)" rx="2" ry="2" />
<text  x="930.38" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="509.3" y="2037" width="0.2" height="15.0" fill="rgb(216,110,2)" rx="2" ry="2" />
<text  x="512.30" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="951.1" y="1925" width="0.2" height="15.0" fill="rgb(231,173,38)" rx="2" ry="2" />
<text  x="954.13" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="570.4" y="2005" width="0.4" height="15.0" fill="rgb(209,96,50)" rx="2" ry="2" />
<text  x="573.37" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="645" width="16.0" height="15.0" fill="rgb(247,28,42)" rx="2" ry="2" />
<text  x="108.39" y="655.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (27 samples, 0.46%)</title><rect x="540.8" y="2005" width="5.4" height="15.0" fill="rgb(248,48,13)" rx="2" ry="2" />
<text  x="543.83" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="90.0" y="1893" width="0.2" height="15.0" fill="rgb(208,40,14)" rx="2" ry="2" />
<text  x="93.02" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="538.6" y="1909" width="0.2" height="15.0" fill="rgb(246,158,5)" rx="2" ry="2" />
<text  x="541.64" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (2 samples, 0.03%)</title><rect x="892.5" y="2005" width="0.4" height="15.0" fill="rgb(240,113,36)" rx="2" ry="2" />
<text  x="895.46" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="58.9" y="1669" width="0.2" height="15.0" fill="rgb(253,108,20)" rx="2" ry="2" />
<text  x="61.89" y="1679.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="894.5" y="2005" width="0.5" height="15.0" fill="rgb(224,20,22)" rx="2" ry="2" />
<text  x="897.45" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1122.1" y="1765" width="0.2" height="15.0" fill="rgb(210,20,28)" rx="2" ry="2" />
<text  x="1125.15" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (4 samples, 0.07%)</title><rect x="118.2" y="37" width="0.8" height="15.0" fill="rgb(244,188,32)" rx="2" ry="2" />
<text  x="121.16" y="47.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="125.9" y="1989" width="0.6" height="15.0" fill="rgb(254,67,35)" rx="2" ry="2" />
<text  x="128.94" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::IntegralSizePolicyBase (1 samples, 0.02%)</title><rect x="568.2" y="1941" width="0.2" height="15.0" fill="rgb(253,203,51)" rx="2" ry="2" />
<text  x="571.17" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (13 samples, 0.22%)</title><rect x="288.0" y="1637" width="2.6" height="15.0" fill="rgb(209,29,34)" rx="2" ry="2" />
<text  x="290.99" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="129.9" y="1957" width="0.4" height="15.0" fill="rgb(233,56,36)" rx="2" ry="2" />
<text  x="132.94" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="899.2" y="2037" width="0.2" height="15.0" fill="rgb(249,142,22)" rx="2" ry="2" />
<text  x="902.24" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="695.7" y="1717" width="0.2" height="15.0" fill="rgb(207,159,42)" rx="2" ry="2" />
<text  x="698.69" y="1727.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="686.9" y="1925" width="0.2" height="15.0" fill="rgb(207,170,53)" rx="2" ry="2" />
<text  x="689.91" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (4 samples, 0.07%)</title><rect x="657.8" y="1941" width="0.8" height="15.0" fill="rgb(207,4,5)" rx="2" ry="2" />
<text  x="660.77" y="1951.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="520.5" y="1925" width="0.2" height="15.0" fill="rgb(227,8,12)" rx="2" ry="2" />
<text  x="523.48" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="602.3" y="1861" width="0.2" height="15.0" fill="rgb(232,220,16)" rx="2" ry="2" />
<text  x="605.29" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1018.6" y="2005" width="0.2" height="15.0" fill="rgb(212,11,38)" rx="2" ry="2" />
<text  x="1021.58" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (4 samples, 0.07%)</title><rect x="1003.6" y="2005" width="0.8" height="15.0" fill="rgb(216,200,35)" rx="2" ry="2" />
<text  x="1006.61" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="399.5" y="1845" width="0.2" height="15.0" fill="rgb(236,161,42)" rx="2" ry="2" />
<text  x="402.54" y="1855.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="1146.9" y="1909" width="0.8" height="15.0" fill="rgb(235,34,2)" rx="2" ry="2" />
<text  x="1149.89" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="451.8" y="1765" width="0.2" height="15.0" fill="rgb(233,100,18)" rx="2" ry="2" />
<text  x="454.83" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="568.8" y="1877" width="0.2" height="15.0" fill="rgb(216,10,16)" rx="2" ry="2" />
<text  x="571.77" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="725" width="16.0" height="15.0" fill="rgb(214,217,47)" rx="2" ry="2" />
<text  x="108.39" y="735.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="460.2" y="1893" width="0.2" height="15.0" fill="rgb(206,70,20)" rx="2" ry="2" />
<text  x="463.21" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1072.3" y="1685" width="0.2" height="15.0" fill="rgb(219,18,4)" rx="2" ry="2" />
<text  x="1075.26" y="1695.5" ></text>
</g>
<g >
<title>page_frag_free (14 samples, 0.24%)</title><rect x="1072.5" y="1861" width="2.8" height="15.0" fill="rgb(247,198,51)" rx="2" ry="2" />
<text  x="1075.46" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="964.7" y="1845" width="0.2" height="15.0" fill="rgb(237,24,16)" rx="2" ry="2" />
<text  x="967.70" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="452.0" y="1941" width="0.2" height="15.0" fill="rgb(205,134,7)" rx="2" ry="2" />
<text  x="455.03" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="990.4" y="1973" width="0.2" height="15.0" fill="rgb(236,85,14)" rx="2" ry="2" />
<text  x="993.44" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="1180.2" y="2037" width="0.2" height="15.0" fill="rgb(247,139,52)" rx="2" ry="2" />
<text  x="1183.22" y="2047.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="380.2" y="1909" width="0.2" height="15.0" fill="rgb(230,99,30)" rx="2" ry="2" />
<text  x="383.18" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (32 samples, 0.54%)</title><rect x="1108.6" y="1733" width="6.4" height="15.0" fill="rgb(248,114,31)" rx="2" ry="2" />
<text  x="1111.58" y="1743.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="185.6" y="1909" width="0.8" height="15.0" fill="rgb(251,158,0)" rx="2" ry="2" />
<text  x="188.61" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="744.0" y="1765" width="0.2" height="15.0" fill="rgb(226,31,38)" rx="2" ry="2" />
<text  x="746.98" y="1775.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="284.0" y="1765" width="0.2" height="15.0" fill="rgb(253,58,11)" rx="2" ry="2" />
<text  x="287.00" y="1775.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (83 samples, 1.40%)</title><rect x="585.1" y="1957" width="16.6" height="15.0" fill="rgb(246,126,16)" rx="2" ry="2" />
<text  x="588.13" y="1967.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="452.4" y="1973" width="0.4" height="15.0" fill="rgb(235,31,15)" rx="2" ry="2" />
<text  x="455.43" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="158.5" y="1941" width="0.4" height="15.0" fill="rgb(242,155,20)" rx="2" ry="2" />
<text  x="161.47" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="228.3" y="1845" width="0.8" height="15.0" fill="rgb(246,74,39)" rx="2" ry="2" />
<text  x="231.32" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (2 samples, 0.03%)</title><rect x="913.0" y="1989" width="0.4" height="15.0" fill="rgb(217,209,44)" rx="2" ry="2" />
<text  x="916.01" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="159.5" y="1957" width="0.2" height="15.0" fill="rgb(244,155,14)" rx="2" ry="2" />
<text  x="162.47" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.05%)</title><rect x="1024.0" y="2037" width="0.6" height="15.0" fill="rgb(245,110,12)" rx="2" ry="2" />
<text  x="1026.97" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="459.8" y="1877" width="0.4" height="15.0" fill="rgb(237,145,43)" rx="2" ry="2" />
<text  x="462.81" y="1887.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="77.1" y="1957" width="0.2" height="15.0" fill="rgb(208,95,28)" rx="2" ry="2" />
<text  x="80.05" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="841.4" y="1893" width="0.2" height="15.0" fill="rgb(221,184,27)" rx="2" ry="2" />
<text  x="844.37" y="1903.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="33.3" y="1989" width="0.2" height="15.0" fill="rgb(235,178,35)" rx="2" ry="2" />
<text  x="36.35" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (3 samples, 0.05%)</title><rect x="642.4" y="1989" width="0.6" height="15.0" fill="rgb(250,175,24)" rx="2" ry="2" />
<text  x="645.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="118.2" y="53" width="1.0" height="15.0" fill="rgb(238,178,31)" rx="2" ry="2" />
<text  x="121.16" y="63.5" ></text>
</g>
<g >
<title>dev_queue_xmit (114 samples, 1.93%)</title><rect x="777.7" y="1589" width="22.8" height="15.0" fill="rgb(243,140,27)" rx="2" ry="2" />
<text  x="780.71" y="1599.5" >d..</text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="951.1" y="1653" width="0.2" height="15.0" fill="rgb(242,137,1)" rx="2" ry="2" />
<text  x="954.13" y="1663.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="363.2" y="1573" width="0.2" height="15.0" fill="rgb(206,140,17)" rx="2" ry="2" />
<text  x="366.22" y="1583.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="195.8" y="2005" width="0.2" height="15.0" fill="rgb(208,111,46)" rx="2" ry="2" />
<text  x="198.79" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (3 samples, 0.05%)</title><rect x="163.3" y="2021" width="0.6" height="15.0" fill="rgb(249,77,11)" rx="2" ry="2" />
<text  x="166.26" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="58.9" y="1749" width="0.2" height="15.0" fill="rgb(246,34,4)" rx="2" ry="2" />
<text  x="61.89" y="1759.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="474.0" y="1605" width="0.2" height="15.0" fill="rgb(225,214,52)" rx="2" ry="2" />
<text  x="476.98" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (50 samples, 0.85%)</title><rect x="900.0" y="2037" width="10.0" height="15.0" fill="rgb(227,8,10)" rx="2" ry="2" />
<text  x="903.04" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="907.2" y="2005" width="0.8" height="15.0" fill="rgb(224,167,1)" rx="2" ry="2" />
<text  x="910.22" y="2015.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (2 samples, 0.03%)</title><rect x="197.0" y="2037" width="0.4" height="15.0" fill="rgb(243,102,0)" rx="2" ry="2" />
<text  x="199.99" y="2047.5" ></text>
</g>
<g >
<title>event_add (2 samples, 0.03%)</title><rect x="1135.9" y="2053" width="0.4" height="15.0" fill="rgb(222,93,42)" rx="2" ry="2" />
<text  x="1138.92" y="2063.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="225.5" y="1877" width="0.2" height="15.0" fill="rgb(216,66,53)" rx="2" ry="2" />
<text  x="228.53" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="32.6" y="1797" width="0.1" height="15.0" fill="rgb(205,47,2)" rx="2" ry="2" />
<text  x="35.55" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="562.2" y="1909" width="0.2" height="15.0" fill="rgb(224,91,35)" rx="2" ry="2" />
<text  x="565.18" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="755.4" y="1701" width="0.4" height="15.0" fill="rgb(226,10,38)" rx="2" ry="2" />
<text  x="758.36" y="1711.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="566.0" y="1621" width="0.2" height="15.0" fill="rgb(221,76,37)" rx="2" ry="2" />
<text  x="568.97" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (32 samples, 0.54%)</title><rect x="1108.6" y="1781" width="6.4" height="15.0" fill="rgb(211,73,8)" rx="2" ry="2" />
<text  x="1111.58" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (55 samples, 0.93%)</title><rect x="175.4" y="2005" width="11.0" height="15.0" fill="rgb(211,95,36)" rx="2" ry="2" />
<text  x="178.44" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (121 samples, 2.05%)</title><rect x="42.5" y="1989" width="24.2" height="15.0" fill="rgb(244,134,45)" rx="2" ry="2" />
<text  x="45.53" y="1999.5" >f..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1176.0" y="1973" width="0.4" height="15.0" fill="rgb(210,147,48)" rx="2" ry="2" />
<text  x="1179.03" y="1983.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="125.3" y="1941" width="0.2" height="15.0" fill="rgb(211,163,24)" rx="2" ry="2" />
<text  x="128.35" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="705.3" y="1989" width="0.8" height="15.0" fill="rgb(245,80,0)" rx="2" ry="2" />
<text  x="708.27" y="1999.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1006.8" y="1957" width="0.2" height="15.0" fill="rgb(224,125,49)" rx="2" ry="2" />
<text  x="1009.80" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="873.7" y="1909" width="0.2" height="15.0" fill="rgb(247,46,31)" rx="2" ry="2" />
<text  x="876.70" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocketBase::AsyncSocketBase (2 samples, 0.03%)</title><rect x="565.2" y="1989" width="0.4" height="15.0" fill="rgb(239,208,37)" rx="2" ry="2" />
<text  x="568.18" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (1 samples, 0.02%)</title><rect x="646.6" y="2021" width="0.2" height="15.0" fill="rgb(244,88,31)" rx="2" ry="2" />
<text  x="649.60" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1072.3" y="1525" width="0.2" height="15.0" fill="rgb(232,218,12)" rx="2" ry="2" />
<text  x="1075.26" y="1535.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1183.6" y="2021" width="0.2" height="15.0" fill="rgb(236,139,28)" rx="2" ry="2" />
<text  x="1186.61" y="2031.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="363.2" y="1605" width="0.2" height="15.0" fill="rgb(240,217,18)" rx="2" ry="2" />
<text  x="366.22" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="695.5" y="1781" width="0.6" height="15.0" fill="rgb(219,165,22)" rx="2" ry="2" />
<text  x="698.49" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="912.6" y="2021" width="0.4" height="15.0" fill="rgb(214,18,17)" rx="2" ry="2" />
<text  x="915.61" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="106.2" y="37" width="0.2" height="15.0" fill="rgb(211,85,39)" rx="2" ry="2" />
<text  x="109.19" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="320.7" y="1749" width="0.2" height="15.0" fill="rgb(237,199,23)" rx="2" ry="2" />
<text  x="323.72" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1007.4" y="1925" width="0.2" height="15.0" fill="rgb(213,68,18)" rx="2" ry="2" />
<text  x="1010.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="576.0" y="1973" width="0.2" height="15.0" fill="rgb(219,64,43)" rx="2" ry="2" />
<text  x="578.95" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1088.4" y="1717" width="0.2" height="15.0" fill="rgb(254,132,31)" rx="2" ry="2" />
<text  x="1091.42" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="895.8" y="1989" width="0.2" height="15.0" fill="rgb(210,195,17)" rx="2" ry="2" />
<text  x="898.85" y="1999.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="300.2" y="1573" width="0.2" height="15.0" fill="rgb(253,200,43)" rx="2" ry="2" />
<text  x="303.16" y="1583.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="468.4" y="1941" width="0.2" height="15.0" fill="rgb(215,150,38)" rx="2" ry="2" />
<text  x="471.39" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="905.2" y="1925" width="0.2" height="15.0" fill="rgb(246,171,22)" rx="2" ry="2" />
<text  x="908.23" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="995.8" y="1957" width="0.2" height="15.0" fill="rgb(236,127,20)" rx="2" ry="2" />
<text  x="998.83" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="1147.9" y="1941" width="0.2" height="15.0" fill="rgb(228,217,51)" rx="2" ry="2" />
<text  x="1150.89" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1941" width="0.2" height="15.0" fill="rgb(220,45,15)" rx="2" ry="2" />
<text  x="1143.31" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="547.4" y="1957" width="0.6" height="15.0" fill="rgb(248,154,28)" rx="2" ry="2" />
<text  x="550.42" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="950.7" y="1973" width="0.6" height="15.0" fill="rgb(209,5,22)" rx="2" ry="2" />
<text  x="953.73" y="1983.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (3 samples, 0.05%)</title><rect x="149.3" y="1893" width="0.6" height="15.0" fill="rgb(230,139,18)" rx="2" ry="2" />
<text  x="152.29" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="763.1" y="1621" width="0.2" height="15.0" fill="rgb(220,91,6)" rx="2" ry="2" />
<text  x="766.14" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="338.3" y="1893" width="0.2" height="15.0" fill="rgb(251,176,8)" rx="2" ry="2" />
<text  x="341.28" y="1903.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="475.2" y="1973" width="0.4" height="15.0" fill="rgb(220,25,13)" rx="2" ry="2" />
<text  x="478.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="533" width="16.0" height="15.0" fill="rgb(250,5,22)" rx="2" ry="2" />
<text  x="108.39" y="543.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1133.9" y="1925" width="0.2" height="15.0" fill="rgb(236,111,19)" rx="2" ry="2" />
<text  x="1136.92" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="623.0" y="2005" width="0.2" height="15.0" fill="rgb(226,182,38)" rx="2" ry="2" />
<text  x="626.05" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="119.4" y="37" width="0.2" height="15.0" fill="rgb(225,168,48)" rx="2" ry="2" />
<text  x="122.36" y="47.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (2 samples, 0.03%)</title><rect x="1179.2" y="2053" width="0.4" height="15.0" fill="rgb(250,63,35)" rx="2" ry="2" />
<text  x="1182.22" y="2063.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (3 samples, 0.05%)</title><rect x="181.2" y="1957" width="0.6" height="15.0" fill="rgb(234,177,7)" rx="2" ry="2" />
<text  x="184.22" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="470.6" y="1893" width="0.2" height="15.0" fill="rgb(238,179,17)" rx="2" ry="2" />
<text  x="473.59" y="1903.5" ></text>
</g>
<g >
<title>swiotlb_map_page (3 samples, 0.05%)</title><rect x="796.9" y="1509" width="0.6" height="15.0" fill="rgb(227,122,19)" rx="2" ry="2" />
<text  x="799.87" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (6 samples, 0.10%)</title><rect x="942.3" y="2005" width="1.2" height="15.0" fill="rgb(250,68,43)" rx="2" ry="2" />
<text  x="945.35" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="913.0" y="2021" width="0.4" height="15.0" fill="rgb(230,111,15)" rx="2" ry="2" />
<text  x="916.01" y="2031.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (15 samples, 0.25%)</title><rect x="12.6" y="1957" width="3.0" height="15.0" fill="rgb(245,180,33)" rx="2" ry="2" />
<text  x="15.59" y="1967.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (11 samples, 0.19%)</title><rect x="333.3" y="1909" width="2.2" height="15.0" fill="rgb(252,101,43)" rx="2" ry="2" />
<text  x="336.29" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="958.3" y="1973" width="0.2" height="15.0" fill="rgb(233,192,0)" rx="2" ry="2" />
<text  x="961.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="140.3" y="1941" width="0.4" height="15.0" fill="rgb(248,92,31)" rx="2" ry="2" />
<text  x="143.31" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="840.6" y="1909" width="0.6" height="15.0" fill="rgb(228,53,19)" rx="2" ry="2" />
<text  x="843.57" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (9 samples, 0.15%)</title><rect x="1065.5" y="1861" width="1.8" height="15.0" fill="rgb(253,155,9)" rx="2" ry="2" />
<text  x="1068.47" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="646.4" y="1989" width="0.2" height="15.0" fill="rgb(248,148,44)" rx="2" ry="2" />
<text  x="649.40" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="209.8" y="2021" width="0.6" height="15.0" fill="rgb(253,157,35)" rx="2" ry="2" />
<text  x="212.76" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="969.3" y="1845" width="0.2" height="15.0" fill="rgb(235,159,13)" rx="2" ry="2" />
<text  x="972.29" y="1855.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="462.0" y="1653" width="0.2" height="15.0" fill="rgb(238,210,8)" rx="2" ry="2" />
<text  x="465.00" y="1663.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (3 samples, 0.05%)</title><rect x="71.3" y="1861" width="0.6" height="15.0" fill="rgb(237,127,52)" rx="2" ry="2" />
<text  x="74.27" y="1871.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="964.7" y="1733" width="0.2" height="15.0" fill="rgb(250,138,25)" rx="2" ry="2" />
<text  x="967.70" y="1743.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (2 samples, 0.03%)</title><rect x="76.1" y="1957" width="0.4" height="15.0" fill="rgb(210,158,20)" rx="2" ry="2" />
<text  x="79.05" y="1967.5" ></text>
</g>
<g >
<title>vfprintf (11 samples, 0.19%)</title><rect x="199.0" y="2021" width="2.2" height="15.0" fill="rgb(212,35,51)" rx="2" ry="2" />
<text  x="201.98" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="121.2" y="309" width="0.2" height="15.0" fill="rgb(233,75,48)" rx="2" ry="2" />
<text  x="124.16" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.19%)</title><rect x="171.2" y="1973" width="2.2" height="15.0" fill="rgb(245,51,30)" rx="2" ry="2" />
<text  x="174.24" y="1983.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (3 samples, 0.05%)</title><rect x="1149.7" y="1973" width="0.6" height="15.0" fill="rgb(252,41,41)" rx="2" ry="2" />
<text  x="1152.69" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (37 samples, 0.63%)</title><rect x="1171.2" y="2021" width="7.4" height="15.0" fill="rgb(220,224,17)" rx="2" ry="2" />
<text  x="1174.24" y="2031.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="87.8" y="1973" width="0.2" height="15.0" fill="rgb(237,221,43)" rx="2" ry="2" />
<text  x="90.83" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (13 samples, 0.22%)</title><rect x="930.0" y="1957" width="2.6" height="15.0" fill="rgb(219,92,40)" rx="2" ry="2" />
<text  x="932.97" y="1967.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="318.7" y="1717" width="0.2" height="15.0" fill="rgb(240,12,0)" rx="2" ry="2" />
<text  x="321.72" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="700.5" y="2021" width="0.4" height="15.0" fill="rgb(239,36,35)" rx="2" ry="2" />
<text  x="703.48" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="143.1" y="1829" width="0.2" height="15.0" fill="rgb(210,100,33)" rx="2" ry="2" />
<text  x="146.11" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (1 samples, 0.02%)</title><rect x="854.1" y="1973" width="0.2" height="15.0" fill="rgb(219,37,23)" rx="2" ry="2" />
<text  x="857.14" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="363.2" y="1541" width="0.2" height="15.0" fill="rgb(209,219,39)" rx="2" ry="2" />
<text  x="366.22" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="995.6" y="1957" width="0.2" height="15.0" fill="rgb(208,100,45)" rx="2" ry="2" />
<text  x="998.63" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="1083.8" y="1845" width="0.8" height="15.0" fill="rgb(228,137,4)" rx="2" ry="2" />
<text  x="1086.83" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="672.7" y="1765" width="0.8" height="15.0" fill="rgb(224,77,13)" rx="2" ry="2" />
<text  x="675.74" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="185.2" y="1973" width="0.4" height="15.0" fill="rgb(250,168,9)" rx="2" ry="2" />
<text  x="188.21" y="1983.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="620.5" y="1989" width="0.4" height="15.0" fill="rgb(223,95,37)" rx="2" ry="2" />
<text  x="623.45" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="929.0" y="1941" width="0.2" height="15.0" fill="rgb(239,153,42)" rx="2" ry="2" />
<text  x="931.98" y="1951.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="94.2" y="1989" width="0.2" height="15.0" fill="rgb(225,69,30)" rx="2" ry="2" />
<text  x="97.21" y="1999.5" ></text>
</g>
<g >
<title>sys_fcntl (11 samples, 0.19%)</title><rect x="560.0" y="1941" width="2.2" height="15.0" fill="rgb(234,109,36)" rx="2" ry="2" />
<text  x="562.99" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="63.1" y="1877" width="0.6" height="15.0" fill="rgb(253,182,31)" rx="2" ry="2" />
<text  x="66.08" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="300.2" y="1669" width="0.2" height="15.0" fill="rgb(239,126,35)" rx="2" ry="2" />
<text  x="303.16" y="1679.5" ></text>
</g>
<g >
<title>aa_sk_perm (6 samples, 0.10%)</title><rect x="668.5" y="1813" width="1.2" height="15.0" fill="rgb(245,63,50)" rx="2" ry="2" />
<text  x="671.55" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="132.5" y="1941" width="0.2" height="15.0" fill="rgb(205,3,3)" rx="2" ry="2" />
<text  x="135.53" y="1951.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="461.2" y="1941" width="0.4" height="15.0" fill="rgb(233,125,43)" rx="2" ry="2" />
<text  x="464.21" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.2" y="1861" width="0.2" height="15.0" fill="rgb(219,212,11)" rx="2" ry="2" />
<text  x="844.17" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (46 samples, 0.78%)</title><rect x="603.7" y="1941" width="9.2" height="15.0" fill="rgb(237,186,41)" rx="2" ry="2" />
<text  x="606.69" y="1951.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="406.7" y="1925" width="0.2" height="15.0" fill="rgb(228,222,28)" rx="2" ry="2" />
<text  x="409.73" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(205,152,52)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="316.3" y="1749" width="0.2" height="15.0" fill="rgb(236,101,10)" rx="2" ry="2" />
<text  x="319.33" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="695.7" y="1733" width="0.4" height="15.0" fill="rgb(207,124,11)" rx="2" ry="2" />
<text  x="698.69" y="1743.5" ></text>
</g>
<g >
<title>__GI___setsockopt (1 samples, 0.02%)</title><rect x="1167.8" y="2037" width="0.2" height="15.0" fill="rgb(215,126,3)" rx="2" ry="2" />
<text  x="1170.85" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="27.6" y="1877" width="0.8" height="15.0" fill="rgb(211,32,51)" rx="2" ry="2" />
<text  x="30.56" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (98 samples, 1.66%)</title><rect x="104.2" y="1813" width="19.5" height="15.0" fill="rgb(248,25,29)" rx="2" ry="2" />
<text  x="107.19" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (7 samples, 0.12%)</title><rect x="229.9" y="1861" width="1.4" height="15.0" fill="rgb(238,125,4)" rx="2" ry="2" />
<text  x="232.92" y="1871.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="577.5" y="1989" width="0.4" height="15.0" fill="rgb(245,97,15)" rx="2" ry="2" />
<text  x="580.55" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="393.0" y="1861" width="0.2" height="15.0" fill="rgb(215,200,9)" rx="2" ry="2" />
<text  x="395.96" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1067.9" y="1749" width="0.2" height="15.0" fill="rgb(247,169,26)" rx="2" ry="2" />
<text  x="1070.87" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="150.7" y="1765" width="0.2" height="15.0" fill="rgb(226,4,47)" rx="2" ry="2" />
<text  x="153.69" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="226.5" y="1829" width="0.6" height="15.0" fill="rgb(236,113,46)" rx="2" ry="2" />
<text  x="229.52" y="1839.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="597.3" y="1845" width="0.2" height="15.0" fill="rgb(206,229,16)" rx="2" ry="2" />
<text  x="600.31" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (5 samples, 0.08%)</title><rect x="1177.4" y="2005" width="1.0" height="15.0" fill="rgb(213,127,6)" rx="2" ry="2" />
<text  x="1180.43" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="120.8" y="117" width="0.2" height="15.0" fill="rgb(245,139,26)" rx="2" ry="2" />
<text  x="123.76" y="127.5" ></text>
</g>
<g >
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1159.5" y="1941" width="0.2" height="15.0" fill="rgb(245,96,22)" rx="2" ry="2" />
<text  x="1162.47" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="123.4" y="1733" width="0.1" height="15.0" fill="rgb(229,122,12)" rx="2" ry="2" />
<text  x="126.35" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="876.7" y="1925" width="1.2" height="15.0" fill="rgb(206,106,5)" rx="2" ry="2" />
<text  x="879.69" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="474.0" y="1845" width="0.2" height="15.0" fill="rgb(253,90,23)" rx="2" ry="2" />
<text  x="476.98" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="176.4" y="1893" width="0.2" height="15.0" fill="rgb(247,145,54)" rx="2" ry="2" />
<text  x="179.43" y="1903.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (76 samples, 1.29%)</title><rect x="492.7" y="1925" width="15.2" height="15.0" fill="rgb(209,173,42)" rx="2" ry="2" />
<text  x="495.74" y="1935.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (257 samples, 4.35%)</title><rect x="274.8" y="1861" width="51.3" height="15.0" fill="rgb(243,229,2)" rx="2" ry="2" />
<text  x="277.82" y="1871.5" >__tcp..</text>
</g>
<g >
<title>memchr@plt (2 samples, 0.03%)</title><rect x="1150.3" y="1973" width="0.4" height="15.0" fill="rgb(237,188,6)" rx="2" ry="2" />
<text  x="1153.29" y="1983.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="193.2" y="2021" width="0.2" height="15.0" fill="rgb(250,20,44)" rx="2" ry="2" />
<text  x="196.20" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="58.9" y="1701" width="0.2" height="15.0" fill="rgb(217,57,2)" rx="2" ry="2" />
<text  x="61.89" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1049.1" y="2005" width="0.6" height="15.0" fill="rgb(236,100,31)" rx="2" ry="2" />
<text  x="1052.11" y="2015.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="767.3" y="1701" width="0.2" height="15.0" fill="rgb(231,104,1)" rx="2" ry="2" />
<text  x="770.33" y="1711.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="70.3" y="1861" width="0.2" height="15.0" fill="rgb(215,194,48)" rx="2" ry="2" />
<text  x="73.27" y="1871.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="274.8" y="1845" width="0.2" height="15.0" fill="rgb(208,86,13)" rx="2" ry="2" />
<text  x="277.82" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="777.3" y="1461" width="0.4" height="15.0" fill="rgb(245,193,36)" rx="2" ry="2" />
<text  x="780.31" y="1471.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.08%)</title><rect x="69.5" y="1877" width="1.0" height="15.0" fill="rgb(236,4,33)" rx="2" ry="2" />
<text  x="72.47" y="1887.5" ></text>
</g>
<g >
<title>__libc_sendmsg (536 samples, 9.06%)</title><rect x="236.5" y="2037" width="107.0" height="15.0" fill="rgb(245,41,3)" rx="2" ry="2" />
<text  x="239.50" y="2047.5" >__libc_sendmsg</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11 samples, 0.19%)</title><rect x="994.2" y="1989" width="2.2" height="15.0" fill="rgb(228,211,40)" rx="2" ry="2" />
<text  x="997.23" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="150.7" y="1493" width="0.2" height="15.0" fill="rgb(246,220,54)" rx="2" ry="2" />
<text  x="153.69" y="1503.5" ></text>
</g>
<g >
<title>lock_sock_nested (9 samples, 0.15%)</title><rect x="380.0" y="1941" width="1.8" height="15.0" fill="rgb(227,72,21)" rx="2" ry="2" />
<text  x="382.98" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (14 samples, 0.24%)</title><rect x="879.1" y="1941" width="2.8" height="15.0" fill="rgb(246,224,18)" rx="2" ry="2" />
<text  x="882.09" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="721.4" y="1765" width="0.2" height="15.0" fill="rgb(215,159,0)" rx="2" ry="2" />
<text  x="724.43" y="1775.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="838.0" y="1925" width="0.2" height="15.0" fill="rgb(205,143,52)" rx="2" ry="2" />
<text  x="840.98" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="695.5" y="1845" width="0.6" height="15.0" fill="rgb(206,114,44)" rx="2" ry="2" />
<text  x="698.49" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="566.0" y="1637" width="0.2" height="15.0" fill="rgb(231,184,38)" rx="2" ry="2" />
<text  x="568.97" y="1647.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (10 samples, 0.17%)</title><rect x="1021.2" y="2037" width="2.0" height="15.0" fill="rgb(254,108,20)" rx="2" ry="2" />
<text  x="1024.17" y="2047.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (1 samples, 0.02%)</title><rect x="1007.2" y="1973" width="0.2" height="15.0" fill="rgb(212,149,48)" rx="2" ry="2" />
<text  x="1010.20" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (1 samples, 0.02%)</title><rect x="87.0" y="1973" width="0.2" height="15.0" fill="rgb(229,176,38)" rx="2" ry="2" />
<text  x="90.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="853" width="16.0" height="15.0" fill="rgb(209,121,46)" rx="2" ry="2" />
<text  x="108.39" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="87.2" y="1973" width="0.2" height="15.0" fill="rgb(228,33,1)" rx="2" ry="2" />
<text  x="90.23" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (2 samples, 0.03%)</title><rect x="41.9" y="1941" width="0.4" height="15.0" fill="rgb(241,9,17)" rx="2" ry="2" />
<text  x="44.93" y="1951.5" ></text>
</g>
<g >
<title>_copy_to_iter (13 samples, 0.22%)</title><rect x="1099.4" y="1909" width="2.6" height="15.0" fill="rgb(242,139,53)" rx="2" ry="2" />
<text  x="1102.40" y="1919.5" ></text>
</g>
<g >
<title>sk_reset_timer (29 samples, 0.49%)</title><rect x="318.9" y="1781" width="5.8" height="15.0" fill="rgb(238,0,12)" rx="2" ry="2" />
<text  x="321.92" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="964.7" y="1765" width="0.2" height="15.0" fill="rgb(230,7,30)" rx="2" ry="2" />
<text  x="967.70" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (1 samples, 0.02%)</title><rect x="87.6" y="1973" width="0.2" height="15.0" fill="rgb(231,148,39)" rx="2" ry="2" />
<text  x="90.63" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (297 samples, 5.02%)</title><rect x="350.8" y="2005" width="59.3" height="15.0" fill="rgb(241,27,49)" rx="2" ry="2" />
<text  x="353.85" y="2015.5" >do_sys..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="202.2" y="1989" width="0.2" height="15.0" fill="rgb(211,130,32)" rx="2" ry="2" />
<text  x="205.18" y="1999.5" ></text>
</g>
<g >
<title>syscall@plt (1 samples, 0.02%)</title><rect x="1163.9" y="1973" width="0.2" height="15.0" fill="rgb(243,190,47)" rx="2" ry="2" />
<text  x="1166.86" y="1983.5" ></text>
</g>
<g >
<title>schedule (15 samples, 0.25%)</title><rect x="12.6" y="1941" width="3.0" height="15.0" fill="rgb(245,185,20)" rx="2" ry="2" />
<text  x="15.59" y="1951.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="508.5" y="2037" width="0.2" height="15.0" fill="rgb(253,102,39)" rx="2" ry="2" />
<text  x="511.50" y="2047.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="909.4" y="1717" width="0.2" height="15.0" fill="rgb(243,125,53)" rx="2" ry="2" />
<text  x="912.42" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1072.3" y="1733" width="0.2" height="15.0" fill="rgb(225,183,35)" rx="2" ry="2" />
<text  x="1075.26" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="155.1" y="1877" width="0.4" height="15.0" fill="rgb(214,158,10)" rx="2" ry="2" />
<text  x="158.08" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (8 samples, 0.14%)</title><rect x="876.3" y="1941" width="1.6" height="15.0" fill="rgb(224,172,44)" rx="2" ry="2" />
<text  x="879.29" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="646.4" y="1893" width="0.2" height="15.0" fill="rgb(236,136,31)" rx="2" ry="2" />
<text  x="649.40" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.03%)</title><rect x="613.7" y="2005" width="0.4" height="15.0" fill="rgb(224,147,40)" rx="2" ry="2" />
<text  x="616.67" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="817.6" y="1701" width="0.2" height="15.0" fill="rgb(229,168,16)" rx="2" ry="2" />
<text  x="820.62" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="968.1" y="2005" width="0.2" height="15.0" fill="rgb(223,155,13)" rx="2" ry="2" />
<text  x="971.09" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="246.7" y="1909" width="0.2" height="15.0" fill="rgb(232,169,51)" rx="2" ry="2" />
<text  x="249.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1067.9" y="1669" width="0.2" height="15.0" fill="rgb(253,32,13)" rx="2" ry="2" />
<text  x="1070.87" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (14 samples, 0.24%)</title><rect x="517.1" y="1973" width="2.8" height="15.0" fill="rgb(247,18,10)" rx="2" ry="2" />
<text  x="520.08" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="35.1" y="1957" width="0.2" height="15.0" fill="rgb(229,77,33)" rx="2" ry="2" />
<text  x="38.14" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1104.4" y="1701" width="0.2" height="15.0" fill="rgb(228,93,20)" rx="2" ry="2" />
<text  x="1107.39" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.15%)</title><rect x="813.6" y="1589" width="1.8" height="15.0" fill="rgb(224,73,23)" rx="2" ry="2" />
<text  x="816.63" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="545.0" y="1973" width="0.2" height="15.0" fill="rgb(245,14,49)" rx="2" ry="2" />
<text  x="548.02" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1221" width="16.0" height="15.0" fill="rgb(253,182,6)" rx="2" ry="2" />
<text  x="108.39" y="1231.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="844.4" y="1733" width="0.2" height="15.0" fill="rgb(224,124,52)" rx="2" ry="2" />
<text  x="847.36" y="1743.5" ></text>
</g>
<g >
<title>sock_alloc_file (61 samples, 1.03%)</title><rect x="395.9" y="1957" width="12.2" height="15.0" fill="rgb(250,6,31)" rx="2" ry="2" />
<text  x="398.95" y="1967.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="62.1" y="1909" width="0.2" height="15.0" fill="rgb(229,62,25)" rx="2" ry="2" />
<text  x="65.09" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="910.6" y="2037" width="0.2" height="15.0" fill="rgb(243,186,41)" rx="2" ry="2" />
<text  x="913.62" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="373.4" y="1765" width="0.2" height="15.0" fill="rgb(249,120,5)" rx="2" ry="2" />
<text  x="376.40" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1067.9" y="1717" width="0.2" height="15.0" fill="rgb(234,168,26)" rx="2" ry="2" />
<text  x="1070.87" y="1727.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="316.3" y="1701" width="0.2" height="15.0" fill="rgb(233,183,47)" rx="2" ry="2" />
<text  x="319.33" y="1711.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="11.6" y="1829" width="0.8" height="15.0" fill="rgb(254,187,35)" rx="2" ry="2" />
<text  x="14.60" y="1839.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="837.0" y="1909" width="0.4" height="15.0" fill="rgb(231,25,45)" rx="2" ry="2" />
<text  x="839.98" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="584.7" y="1909" width="0.2" height="15.0" fill="rgb(254,14,23)" rx="2" ry="2" />
<text  x="587.73" y="1919.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="289.8" y="1365" width="0.2" height="15.0" fill="rgb(234,9,38)" rx="2" ry="2" />
<text  x="292.78" y="1375.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (4 samples, 0.07%)</title><rect x="687.7" y="1893" width="0.8" height="15.0" fill="rgb(226,75,48)" rx="2" ry="2" />
<text  x="690.71" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="460.0" y="1637" width="0.2" height="15.0" fill="rgb(247,37,28)" rx="2" ry="2" />
<text  x="463.01" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="619.3" y="1989" width="1.0" height="15.0" fill="rgb(222,168,46)" rx="2" ry="2" />
<text  x="622.26" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="608.3" y="1893" width="0.2" height="15.0" fill="rgb(227,33,34)" rx="2" ry="2" />
<text  x="611.28" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (82 samples, 1.39%)</title><rect x="917.0" y="1989" width="16.4" height="15.0" fill="rgb(240,6,5)" rx="2" ry="2" />
<text  x="920.00" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="289.6" y="1397" width="0.4" height="15.0" fill="rgb(212,47,45)" rx="2" ry="2" />
<text  x="292.58" y="1407.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="535.4" y="1925" width="0.2" height="15.0" fill="rgb(221,15,15)" rx="2" ry="2" />
<text  x="538.44" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (1 samples, 0.02%)</title><rect x="651.2" y="1989" width="0.2" height="15.0" fill="rgb(221,184,38)" rx="2" ry="2" />
<text  x="654.19" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="516.5" y="1973" width="0.2" height="15.0" fill="rgb(231,48,29)" rx="2" ry="2" />
<text  x="519.48" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="227.7" y="1813" width="0.4" height="15.0" fill="rgb(224,121,54)" rx="2" ry="2" />
<text  x="230.72" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1269" width="16.0" height="15.0" fill="rgb(215,94,36)" rx="2" ry="2" />
<text  x="108.39" y="1279.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="1115.2" y="1749" width="0.4" height="15.0" fill="rgb(232,160,5)" rx="2" ry="2" />
<text  x="1118.16" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="91.0" y="1781" width="0.2" height="15.0" fill="rgb(236,116,46)" rx="2" ry="2" />
<text  x="94.02" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="121.0" y="261" width="0.2" height="15.0" fill="rgb(219,45,28)" rx="2" ry="2" />
<text  x="123.96" y="271.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1007.4" y="1893" width="0.2" height="15.0" fill="rgb(207,21,39)" rx="2" ry="2" />
<text  x="1010.40" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (38 samples, 0.64%)</title><rect x="781.9" y="1541" width="7.6" height="15.0" fill="rgb(217,70,29)" rx="2" ry="2" />
<text  x="784.90" y="1551.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="932.8" y="1973" width="0.4" height="15.0" fill="rgb(233,56,16)" rx="2" ry="2" />
<text  x="935.77" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (743 samples, 12.57%)</title><rect x="706.1" y="1989" width="148.2" height="15.0" fill="rgb(217,169,13)" rx="2" ry="2" />
<text  x="709.07" y="1999.5" >facebook::memcache..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="952.1" y="2021" width="0.2" height="15.0" fill="rgb(231,105,11)" rx="2" ry="2" />
<text  x="955.12" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="451.8" y="1861" width="0.2" height="15.0" fill="rgb(222,189,9)" rx="2" ry="2" />
<text  x="454.83" y="1871.5" ></text>
</g>
<g >
<title>__libc_fcntl (12 samples, 0.20%)</title><rect x="1168.0" y="2037" width="2.4" height="15.0" fill="rgb(227,57,42)" rx="2" ry="2" />
<text  x="1171.05" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="317.7" y="1781" width="0.2" height="15.0" fill="rgb(229,186,3)" rx="2" ry="2" />
<text  x="320.72" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="628.0" y="2005" width="0.2" height="15.0" fill="rgb(246,110,0)" rx="2" ry="2" />
<text  x="631.04" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (5 samples, 0.08%)</title><rect x="1141.1" y="1989" width="1.0" height="15.0" fill="rgb(248,78,30)" rx="2" ry="2" />
<text  x="1144.11" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="777.3" y="1429" width="0.4" height="15.0" fill="rgb(247,16,54)" rx="2" ry="2" />
<text  x="780.31" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="119.4" y="69" width="0.2" height="15.0" fill="rgb(233,168,43)" rx="2" ry="2" />
<text  x="122.36" y="79.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (15 samples, 0.25%)</title><rect x="924.8" y="1925" width="3.0" height="15.0" fill="rgb(209,191,16)" rx="2" ry="2" />
<text  x="927.78" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.07%)</title><rect x="1174.4" y="1989" width="0.8" height="15.0" fill="rgb(248,22,27)" rx="2" ry="2" />
<text  x="1177.43" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="474.0" y="1893" width="0.2" height="15.0" fill="rgb(248,67,39)" rx="2" ry="2" />
<text  x="476.98" y="1903.5" ></text>
</g>
<g >
<title>tcp_recvmsg (323 samples, 5.46%)</title><rect x="1054.7" y="1941" width="64.5" height="15.0" fill="rgb(205,39,31)" rx="2" ry="2" />
<text  x="1057.70" y="1951.5" >tcp_rec..</text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="754.8" y="1733" width="1.0" height="15.0" fill="rgb(223,84,45)" rx="2" ry="2" />
<text  x="757.76" y="1743.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="607.9" y="1877" width="0.2" height="15.0" fill="rgb(214,111,2)" rx="2" ry="2" />
<text  x="610.88" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="945.9" y="2005" width="0.2" height="15.0" fill="rgb(210,16,29)" rx="2" ry="2" />
<text  x="948.94" y="2015.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="93.6" y="1973" width="0.2" height="15.0" fill="rgb(219,55,15)" rx="2" ry="2" />
<text  x="96.62" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1108.8" y="1445" width="0.2" height="15.0" fill="rgb(224,150,17)" rx="2" ry="2" />
<text  x="1111.78" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1061" width="16.0" height="15.0" fill="rgb(206,32,36)" rx="2" ry="2" />
<text  x="108.39" y="1071.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (16 samples, 0.27%)</title><rect x="364.6" y="1941" width="3.2" height="15.0" fill="rgb(225,154,45)" rx="2" ry="2" />
<text  x="367.62" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="523.5" y="1989" width="0.2" height="15.0" fill="rgb(211,108,10)" rx="2" ry="2" />
<text  x="526.47" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="124.5" y="1909" width="0.2" height="15.0" fill="rgb(210,170,42)" rx="2" ry="2" />
<text  x="127.55" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="253.1" y="1797" width="0.2" height="15.0" fill="rgb(220,221,8)" rx="2" ry="2" />
<text  x="256.06" y="1807.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="951.1" y="1589" width="0.2" height="15.0" fill="rgb(248,15,8)" rx="2" ry="2" />
<text  x="954.13" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="914.2" y="1957" width="0.2" height="15.0" fill="rgb(230,220,53)" rx="2" ry="2" />
<text  x="917.21" y="1967.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1133.9" y="2037" width="0.2" height="15.0" fill="rgb(243,187,27)" rx="2" ry="2" />
<text  x="1136.92" y="2047.5" ></text>
</g>
<g >
<title>copyout (3 samples, 0.05%)</title><rect x="1103.8" y="1893" width="0.6" height="15.0" fill="rgb(246,29,21)" rx="2" ry="2" />
<text  x="1106.79" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="912.4" y="2037" width="0.2" height="15.0" fill="rgb(234,36,11)" rx="2" ry="2" />
<text  x="915.41" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.08%)</title><rect x="672.5" y="1845" width="1.0" height="15.0" fill="rgb(252,226,27)" rx="2" ry="2" />
<text  x="675.54" y="1855.5" ></text>
</g>
<g >
<title>__kfree_skb (104 samples, 1.76%)</title><rect x="1062.7" y="1925" width="20.7" height="15.0" fill="rgb(251,211,43)" rx="2" ry="2" />
<text  x="1065.68" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="541.2" y="1957" width="0.2" height="15.0" fill="rgb(216,165,52)" rx="2" ry="2" />
<text  x="544.23" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="452.2" y="1941" width="0.2" height="15.0" fill="rgb(242,55,10)" rx="2" ry="2" />
<text  x="455.23" y="1951.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="842.0" y="1861" width="0.2" height="15.0" fill="rgb(245,65,50)" rx="2" ry="2" />
<text  x="844.97" y="1871.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.02%)</title><rect x="279.2" y="1813" width="0.2" height="15.0" fill="rgb(220,71,40)" rx="2" ry="2" />
<text  x="282.21" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="58.9" y="1797" width="0.2" height="15.0" fill="rgb(236,142,38)" rx="2" ry="2" />
<text  x="61.89" y="1807.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="290.4" y="1445" width="0.2" height="15.0" fill="rgb(221,135,7)" rx="2" ry="2" />
<text  x="293.38" y="1455.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="91.0" y="1637" width="0.2" height="15.0" fill="rgb(232,64,45)" rx="2" ry="2" />
<text  x="94.02" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="513.5" y="1941" width="0.2" height="15.0" fill="rgb(235,208,11)" rx="2" ry="2" />
<text  x="516.49" y="1951.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (19 samples, 0.32%)</title><rect x="197.4" y="2037" width="3.8" height="15.0" fill="rgb(209,143,46)" rx="2" ry="2" />
<text  x="200.39" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="321.3" y="1573" width="0.2" height="15.0" fill="rgb(238,211,41)" rx="2" ry="2" />
<text  x="324.31" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1125" width="16.0" height="15.0" fill="rgb(253,221,45)" rx="2" ry="2" />
<text  x="108.39" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="1176.0" y="1957" width="0.4" height="15.0" fill="rgb(243,207,9)" rx="2" ry="2" />
<text  x="1179.03" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (1 samples, 0.02%)</title><rect x="966.7" y="2037" width="0.2" height="15.0" fill="rgb(221,208,6)" rx="2" ry="2" />
<text  x="969.69" y="2047.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (1 samples, 0.02%)</title><rect x="612.7" y="1925" width="0.2" height="15.0" fill="rgb(217,4,3)" rx="2" ry="2" />
<text  x="615.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="910.0" y="1989" width="0.2" height="15.0" fill="rgb(205,225,48)" rx="2" ry="2" />
<text  x="913.02" y="1999.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="1134.1" y="2037" width="0.2" height="15.0" fill="rgb(245,182,8)" rx="2" ry="2" />
<text  x="1137.12" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="915.4" y="2005" width="0.8" height="15.0" fill="rgb(230,103,47)" rx="2" ry="2" />
<text  x="918.41" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="895.6" y="1973" width="0.2" height="15.0" fill="rgb(209,134,10)" rx="2" ry="2" />
<text  x="898.65" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="63.5" y="1861" width="0.2" height="15.0" fill="rgb(233,111,53)" rx="2" ry="2" />
<text  x="66.48" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (3 samples, 0.05%)</title><rect x="512.5" y="1925" width="0.6" height="15.0" fill="rgb(249,34,1)" rx="2" ry="2" />
<text  x="515.49" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="59.1" y="1909" width="0.4" height="15.0" fill="rgb(230,12,18)" rx="2" ry="2" />
<text  x="62.09" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="619.7" y="1941" width="0.6" height="15.0" fill="rgb(253,105,14)" rx="2" ry="2" />
<text  x="622.66" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="753.4" y="1717" width="0.2" height="15.0" fill="rgb(224,166,48)" rx="2" ry="2" />
<text  x="756.36" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (16 samples, 0.27%)</title><rect x="537.6" y="1973" width="3.2" height="15.0" fill="rgb(236,206,31)" rx="2" ry="2" />
<text  x="540.64" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="340.3" y="1877" width="0.2" height="15.0" fill="rgb(229,156,6)" rx="2" ry="2" />
<text  x="343.27" y="1887.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (34 samples, 0.58%)</title><rect x="224.5" y="1893" width="6.8" height="15.0" fill="rgb(237,4,25)" rx="2" ry="2" />
<text  x="227.53" y="1903.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1088.4" y="1701" width="0.2" height="15.0" fill="rgb(228,73,23)" rx="2" ry="2" />
<text  x="1091.42" y="1711.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="273.4" y="1829" width="0.2" height="15.0" fill="rgb(243,84,14)" rx="2" ry="2" />
<text  x="276.42" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (101 samples, 1.71%)</title><rect x="66.7" y="1973" width="20.1" height="15.0" fill="rgb(248,32,30)" rx="2" ry="2" />
<text  x="69.68" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.2" y="1845" width="0.2" height="15.0" fill="rgb(226,131,40)" rx="2" ry="2" />
<text  x="844.17" y="1855.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1174.0" y="1957" width="0.2" height="15.0" fill="rgb(216,164,26)" rx="2" ry="2" />
<text  x="1177.04" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="246.7" y="1781" width="0.2" height="15.0" fill="rgb(244,6,9)" rx="2" ry="2" />
<text  x="249.68" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="29.4" y="1829" width="0.2" height="15.0" fill="rgb(243,147,50)" rx="2" ry="2" />
<text  x="32.36" y="1839.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="120.6" y="85" width="0.2" height="15.0" fill="rgb(236,136,50)" rx="2" ry="2" />
<text  x="123.56" y="95.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="915.0" y="1989" width="0.4" height="15.0" fill="rgb(206,137,17)" rx="2" ry="2" />
<text  x="918.01" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="927.2" y="1893" width="0.4" height="15.0" fill="rgb(251,99,3)" rx="2" ry="2" />
<text  x="930.18" y="1903.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (5 samples, 0.08%)</title><rect x="548.0" y="1957" width="1.0" height="15.0" fill="rgb(209,205,34)" rx="2" ry="2" />
<text  x="551.01" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="272.2" y="1813" width="0.2" height="15.0" fill="rgb(233,200,9)" rx="2" ry="2" />
<text  x="275.22" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1104.4" y="1749" width="0.2" height="15.0" fill="rgb(249,169,52)" rx="2" ry="2" />
<text  x="1107.39" y="1759.5" ></text>
</g>
<g >
<title>__GI___setsockopt (11 samples, 0.19%)</title><rect x="214.2" y="1957" width="2.1" height="15.0" fill="rgb(236,150,54)" rx="2" ry="2" />
<text  x="217.15" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="513.5" y="1957" width="0.2" height="15.0" fill="rgb(235,157,42)" rx="2" ry="2" />
<text  x="516.49" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="120.0" y="37" width="0.2" height="15.0" fill="rgb(229,204,26)" rx="2" ry="2" />
<text  x="122.96" y="47.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.07%)</title><rect x="962.1" y="1989" width="0.8" height="15.0" fill="rgb(220,97,12)" rx="2" ry="2" />
<text  x="965.10" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (103 samples, 1.74%)</title><rect x="104.2" y="1925" width="20.5" height="15.0" fill="rgb(254,202,4)" rx="2" ry="2" />
<text  x="107.19" y="1935.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="321.1" y="1621" width="0.2" height="15.0" fill="rgb(230,190,3)" rx="2" ry="2" />
<text  x="324.11" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="566.0" y="1893" width="0.2" height="15.0" fill="rgb(232,207,18)" rx="2" ry="2" />
<text  x="568.97" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="752.4" y="1733" width="0.4" height="15.0" fill="rgb(241,88,50)" rx="2" ry="2" />
<text  x="755.36" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="133.5" y="1909" width="0.2" height="15.0" fill="rgb(236,96,43)" rx="2" ry="2" />
<text  x="136.53" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.5" y="1813" width="0.2" height="15.0" fill="rgb(210,10,11)" rx="2" ry="2" />
<text  x="229.52" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="850.9" y="1909" width="0.2" height="15.0" fill="rgb(250,52,33)" rx="2" ry="2" />
<text  x="853.95" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1108.6" y="1685" width="0.4" height="15.0" fill="rgb(246,168,31)" rx="2" ry="2" />
<text  x="1111.58" y="1695.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="842.0" y="1925" width="0.2" height="15.0" fill="rgb(240,216,35)" rx="2" ry="2" />
<text  x="844.97" y="1935.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="849.6" y="1941" width="0.3" height="15.0" fill="rgb(254,92,28)" rx="2" ry="2" />
<text  x="852.55" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="209.0" y="1845" width="0.2" height="15.0" fill="rgb(253,107,7)" rx="2" ry="2" />
<text  x="211.96" y="1855.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="933.0" y="1957" width="0.2" height="15.0" fill="rgb(217,223,52)" rx="2" ry="2" />
<text  x="935.97" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (2 samples, 0.03%)</title><rect x="459.8" y="1893" width="0.4" height="15.0" fill="rgb(254,185,8)" rx="2" ry="2" />
<text  x="462.81" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::set_size (1 samples, 0.02%)</title><rect x="142.1" y="1909" width="0.2" height="15.0" fill="rgb(234,28,50)" rx="2" ry="2" />
<text  x="145.11" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="636.4" y="1893" width="0.2" height="15.0" fill="rgb(206,61,28)" rx="2" ry="2" />
<text  x="639.42" y="1903.5" ></text>
</g>
<g >
<title>clear_inode (4 samples, 0.07%)</title><rect x="731.2" y="1701" width="0.8" height="15.0" fill="rgb(240,37,4)" rx="2" ry="2" />
<text  x="734.21" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.44%)</title><rect x="952.3" y="2021" width="5.2" height="15.0" fill="rgb(228,158,48)" rx="2" ry="2" />
<text  x="955.32" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1104.4" y="1765" width="0.2" height="15.0" fill="rgb(254,104,28)" rx="2" ry="2" />
<text  x="1107.39" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1007.4" y="1941" width="0.2" height="15.0" fill="rgb(207,118,22)" rx="2" ry="2" />
<text  x="1010.40" y="1951.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="358.0" y="1813" width="0.2" height="15.0" fill="rgb(246,150,25)" rx="2" ry="2" />
<text  x="361.03" y="1823.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="597.7" y="1845" width="0.2" height="15.0" fill="rgb(247,67,22)" rx="2" ry="2" />
<text  x="600.71" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (3 samples, 0.05%)</title><rect x="903.6" y="1973" width="0.6" height="15.0" fill="rgb(222,97,26)" rx="2" ry="2" />
<text  x="906.63" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="149.7" y="1877" width="0.2" height="15.0" fill="rgb(226,190,8)" rx="2" ry="2" />
<text  x="152.69" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="91.0" y="1861" width="0.2" height="15.0" fill="rgb(252,123,43)" rx="2" ry="2" />
<text  x="94.02" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (5 samples, 0.08%)</title><rect x="574.2" y="2005" width="1.0" height="15.0" fill="rgb(208,144,44)" rx="2" ry="2" />
<text  x="577.16" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1140.9" y="2021" width="0.2" height="15.0" fill="rgb(236,3,49)" rx="2" ry="2" />
<text  x="1143.91" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (22 samples, 0.37%)</title><rect x="993.8" y="2021" width="4.4" height="15.0" fill="rgb(228,17,53)" rx="2" ry="2" />
<text  x="996.83" y="2031.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (2 samples, 0.03%)</title><rect x="1142.1" y="2005" width="0.4" height="15.0" fill="rgb(229,39,0)" rx="2" ry="2" />
<text  x="1145.11" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="28.8" y="1925" width="0.2" height="15.0" fill="rgb(210,155,50)" rx="2" ry="2" />
<text  x="31.76" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="525.9" y="1957" width="0.8" height="15.0" fill="rgb(208,39,32)" rx="2" ry="2" />
<text  x="528.86" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="363.2" y="1909" width="0.2" height="15.0" fill="rgb(254,222,14)" rx="2" ry="2" />
<text  x="366.22" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="228.7" y="1813" width="0.2" height="15.0" fill="rgb(226,65,50)" rx="2" ry="2" />
<text  x="231.72" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1541" width="17.2" height="15.0" fill="rgb(229,101,13)" rx="2" ry="2" />
<text  x="107.99" y="1551.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="501.9" y="1509" width="0.2" height="15.0" fill="rgb(208,52,33)" rx="2" ry="2" />
<text  x="504.92" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="566.0" y="1957" width="0.2" height="15.0" fill="rgb(244,179,6)" rx="2" ry="2" />
<text  x="568.97" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="731.0" y="1701" width="0.2" height="15.0" fill="rgb(216,198,47)" rx="2" ry="2" />
<text  x="734.01" y="1711.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (32 samples, 0.54%)</title><rect x="516.7" y="1989" width="6.4" height="15.0" fill="rgb(209,172,28)" rx="2" ry="2" />
<text  x="519.68" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="646.4" y="1925" width="0.2" height="15.0" fill="rgb(217,208,7)" rx="2" ry="2" />
<text  x="649.40" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="982.1" y="1749" width="0.2" height="15.0" fill="rgb(210,184,34)" rx="2" ry="2" />
<text  x="985.06" y="1759.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="524.3" y="1893" width="0.2" height="15.0" fill="rgb(213,63,29)" rx="2" ry="2" />
<text  x="527.27" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="253.1" y="1749" width="0.2" height="15.0" fill="rgb(207,175,48)" rx="2" ry="2" />
<text  x="256.06" y="1759.5" ></text>
</g>
<g >
<title>secure_tcp_ts_off (1 samples, 0.02%)</title><rect x="964.7" y="1669" width="0.2" height="15.0" fill="rgb(233,143,14)" rx="2" ry="2" />
<text  x="967.70" y="1679.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="566.0" y="1669" width="0.2" height="15.0" fill="rgb(231,166,8)" rx="2" ry="2" />
<text  x="568.97" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="150.7" y="1797" width="0.2" height="15.0" fill="rgb(207,171,21)" rx="2" ry="2" />
<text  x="153.69" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1007.4" y="1973" width="0.2" height="15.0" fill="rgb(234,160,51)" rx="2" ry="2" />
<text  x="1010.40" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="865.1" y="1909" width="0.2" height="15.0" fill="rgb(245,161,8)" rx="2" ry="2" />
<text  x="868.12" y="1919.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="310.9" y="1781" width="0.2" height="15.0" fill="rgb(222,210,47)" rx="2" ry="2" />
<text  x="313.94" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="29.4" y="1845" width="0.2" height="15.0" fill="rgb(227,139,8)" rx="2" ry="2" />
<text  x="32.36" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (9 samples, 0.15%)</title><rect x="177.6" y="1989" width="1.8" height="15.0" fill="rgb(253,35,11)" rx="2" ry="2" />
<text  x="180.63" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (2 samples, 0.03%)</title><rect x="75.7" y="1957" width="0.4" height="15.0" fill="rgb(253,33,24)" rx="2" ry="2" />
<text  x="78.66" y="1967.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="962.1" y="1957" width="0.8" height="15.0" fill="rgb(210,207,7)" rx="2" ry="2" />
<text  x="965.10" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.08%)</title><rect x="920.8" y="1941" width="1.0" height="15.0" fill="rgb(233,180,5)" rx="2" ry="2" />
<text  x="923.79" y="1951.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="800.1" y="1557" width="0.2" height="15.0" fill="rgb(206,24,24)" rx="2" ry="2" />
<text  x="803.06" y="1567.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="103.6" y="2021" width="0.2" height="15.0" fill="rgb(218,177,24)" rx="2" ry="2" />
<text  x="106.59" y="2031.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1115.8" y="1861" width="0.2" height="15.0" fill="rgb(222,24,5)" rx="2" ry="2" />
<text  x="1118.76" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15 samples, 0.25%)</title><rect x="598.7" y="1925" width="3.0" height="15.0" fill="rgb(226,50,32)" rx="2" ry="2" />
<text  x="601.70" y="1935.5" ></text>
</g>
<g >
<title>inet_sendmsg (412 samples, 6.97%)</title><rect x="251.1" y="1925" width="82.2" height="15.0" fill="rgb(240,133,41)" rx="2" ry="2" />
<text  x="254.07" y="1935.5" >inet_send..</text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="897.2" y="2005" width="0.2" height="15.0" fill="rgb(231,170,4)" rx="2" ry="2" />
<text  x="900.25" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="865.1" y="1941" width="0.2" height="15.0" fill="rgb(220,50,53)" rx="2" ry="2" />
<text  x="868.12" y="1951.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="1146.5" y="2005" width="0.4" height="15.0" fill="rgb(222,200,50)" rx="2" ry="2" />
<text  x="1149.50" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (11 samples, 0.19%)</title><rect x="582.7" y="1925" width="2.2" height="15.0" fill="rgb(242,137,45)" rx="2" ry="2" />
<text  x="585.74" y="1935.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="261.8" y="1813" width="0.2" height="15.0" fill="rgb(247,13,18)" rx="2" ry="2" />
<text  x="264.85" y="1823.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 0.20%)</title><rect x="13.0" y="1829" width="2.4" height="15.0" fill="rgb(235,211,4)" rx="2" ry="2" />
<text  x="15.99" y="1839.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="452.0" y="1653" width="0.2" height="15.0" fill="rgb(233,92,24)" rx="2" ry="2" />
<text  x="455.03" y="1663.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="274.6" y="1877" width="0.2" height="15.0" fill="rgb(245,198,19)" rx="2" ry="2" />
<text  x="277.62" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="602.3" y="1845" width="0.2" height="15.0" fill="rgb(219,7,33)" rx="2" ry="2" />
<text  x="605.29" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="300.2" y="1653" width="0.2" height="15.0" fill="rgb(246,210,1)" rx="2" ry="2" />
<text  x="303.16" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.07%)</title><rect x="1175.2" y="1989" width="0.8" height="15.0" fill="rgb(236,115,45)" rx="2" ry="2" />
<text  x="1178.23" y="1999.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="668.1" y="1861" width="0.2" height="15.0" fill="rgb(227,111,25)" rx="2" ry="2" />
<text  x="671.15" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="417.1" y="2021" width="0.2" height="15.0" fill="rgb(237,94,42)" rx="2" ry="2" />
<text  x="420.10" y="2031.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="766.9" y="1701" width="0.2" height="15.0" fill="rgb(214,190,35)" rx="2" ry="2" />
<text  x="769.93" y="1711.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="764.9" y="1685" width="0.4" height="15.0" fill="rgb(223,177,5)" rx="2" ry="2" />
<text  x="767.94" y="1695.5" ></text>
</g>
<g >
<title>prefetch_freepointer (4 samples, 0.07%)</title><rect x="394.6" y="1877" width="0.8" height="15.0" fill="rgb(227,158,7)" rx="2" ry="2" />
<text  x="397.55" y="1887.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="575.8" y="1941" width="0.2" height="15.0" fill="rgb(241,166,2)" rx="2" ry="2" />
<text  x="578.75" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="379.2" y="1893" width="0.4" height="15.0" fill="rgb(232,105,18)" rx="2" ry="2" />
<text  x="382.19" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="372.6" y="1925" width="0.8" height="15.0" fill="rgb(249,179,8)" rx="2" ry="2" />
<text  x="375.60" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.85%)</title><rect x="900.0" y="2021" width="10.0" height="15.0" fill="rgb(208,222,47)" rx="2" ry="2" />
<text  x="903.04" y="2031.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="763.1" y="1413" width="0.2" height="15.0" fill="rgb(223,83,4)" rx="2" ry="2" />
<text  x="766.14" y="1423.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="383.8" y="1957" width="0.2" height="15.0" fill="rgb(228,26,2)" rx="2" ry="2" />
<text  x="386.78" y="1967.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (94 samples, 1.59%)</title><rect x="489.3" y="1957" width="18.8" height="15.0" fill="rgb(221,174,44)" rx="2" ry="2" />
<text  x="492.34" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="121.0" y="181" width="0.2" height="15.0" fill="rgb(236,208,49)" rx="2" ry="2" />
<text  x="123.96" y="191.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="408.7" y="1909" width="0.4" height="15.0" fill="rgb(247,187,51)" rx="2" ry="2" />
<text  x="411.72" y="1919.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="316.3" y="1717" width="0.2" height="15.0" fill="rgb(221,78,11)" rx="2" ry="2" />
<text  x="319.33" y="1727.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="195.8" y="1973" width="0.2" height="15.0" fill="rgb(209,8,44)" rx="2" ry="2" />
<text  x="198.79" y="1983.5" ></text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="1136.5" y="2053" width="0.2" height="15.0" fill="rgb(221,175,14)" rx="2" ry="2" />
<text  x="1139.52" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="842.8" y="1765" width="0.2" height="15.0" fill="rgb(210,52,6)" rx="2" ry="2" />
<text  x="845.77" y="1775.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="993.0" y="1893" width="0.8" height="15.0" fill="rgb(250,55,26)" rx="2" ry="2" />
<text  x="996.03" y="1903.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (68 samples, 1.15%)</title><rect x="1091.0" y="1925" width="13.6" height="15.0" fill="rgb(205,55,50)" rx="2" ry="2" />
<text  x="1094.02" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="321.1" y="1685" width="0.4" height="15.0" fill="rgb(214,181,49)" rx="2" ry="2" />
<text  x="324.11" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1088.8" y="1829" width="0.2" height="15.0" fill="rgb(246,113,37)" rx="2" ry="2" />
<text  x="1091.82" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (12 samples, 0.20%)</title><rect x="854.3" y="1989" width="2.4" height="15.0" fill="rgb(240,155,30)" rx="2" ry="2" />
<text  x="857.34" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="1182.8" y="1989" width="0.2" height="15.0" fill="rgb(246,7,20)" rx="2" ry="2" />
<text  x="1185.82" y="1999.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="457.8" y="1829" width="0.2" height="15.0" fill="rgb(250,221,51)" rx="2" ry="2" />
<text  x="460.81" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="930.8" y="1925" width="0.4" height="15.0" fill="rgb(223,82,17)" rx="2" ry="2" />
<text  x="933.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (108 samples, 1.83%)</title><rect x="104.2" y="1973" width="21.5" height="15.0" fill="rgb(235,35,51)" rx="2" ry="2" />
<text  x="107.19" y="1983.5" >[..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="32.6" y="1749" width="0.1" height="15.0" fill="rgb(220,169,49)" rx="2" ry="2" />
<text  x="35.55" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (10 samples, 0.17%)</title><rect x="950.1" y="2037" width="2.0" height="15.0" fill="rgb(247,13,36)" rx="2" ry="2" />
<text  x="953.13" y="2047.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (14 samples, 0.24%)</title><rect x="287.8" y="1717" width="2.8" height="15.0" fill="rgb(227,149,26)" rx="2" ry="2" />
<text  x="290.79" y="1727.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="253.1" y="1765" width="0.2" height="15.0" fill="rgb(224,106,38)" rx="2" ry="2" />
<text  x="256.06" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="942.1" y="1973" width="0.2" height="15.0" fill="rgb(236,186,16)" rx="2" ry="2" />
<text  x="945.15" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="542.8" y="1957" width="0.2" height="15.0" fill="rgb(240,86,54)" rx="2" ry="2" />
<text  x="545.83" y="1967.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="29.2" y="1973" width="0.2" height="15.0" fill="rgb(215,171,48)" rx="2" ry="2" />
<text  x="32.16" y="1983.5" ></text>
</g>
<g >
<title>folly::netops::set_socket_close_on_exec (1 samples, 0.02%)</title><rect x="567.6" y="2005" width="0.2" height="15.0" fill="rgb(216,51,35)" rx="2" ry="2" />
<text  x="570.57" y="2015.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="698.9" y="2005" width="0.2" height="15.0" fill="rgb(222,44,41)" rx="2" ry="2" />
<text  x="701.88" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="121.0" y="277" width="0.2" height="15.0" fill="rgb(247,112,16)" rx="2" ry="2" />
<text  x="123.96" y="287.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="565.8" y="1973" width="0.2" height="15.0" fill="rgb(206,119,2)" rx="2" ry="2" />
<text  x="568.78" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="462.0" y="1733" width="0.2" height="15.0" fill="rgb(223,63,17)" rx="2" ry="2" />
<text  x="465.00" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="316.5" y="1605" width="0.4" height="15.0" fill="rgb(250,212,47)" rx="2" ry="2" />
<text  x="319.52" y="1615.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="169.2" y="1973" width="0.2" height="15.0" fill="rgb(243,83,20)" rx="2" ry="2" />
<text  x="172.25" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="612.1" y="1861" width="0.2" height="15.0" fill="rgb(243,17,10)" rx="2" ry="2" />
<text  x="615.07" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="119.8" y="69" width="0.4" height="15.0" fill="rgb(231,122,46)" rx="2" ry="2" />
<text  x="122.76" y="79.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="400.7" y="1893" width="0.4" height="15.0" fill="rgb(231,120,41)" rx="2" ry="2" />
<text  x="403.74" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (10 samples, 0.17%)</title><rect x="511.1" y="1989" width="2.0" height="15.0" fill="rgb(240,174,44)" rx="2" ry="2" />
<text  x="514.10" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="905.2" y="1957" width="0.2" height="15.0" fill="rgb(216,157,42)" rx="2" ry="2" />
<text  x="908.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="568.8" y="1701" width="0.2" height="15.0" fill="rgb(214,94,6)" rx="2" ry="2" />
<text  x="571.77" y="1711.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="815.2" y="1573" width="0.2" height="15.0" fill="rgb(234,23,32)" rx="2" ry="2" />
<text  x="818.23" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (4 samples, 0.07%)</title><rect x="1173.0" y="1957" width="0.8" height="15.0" fill="rgb(229,149,17)" rx="2" ry="2" />
<text  x="1176.04" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (43 samples, 0.73%)</title><rect x="57.5" y="1973" width="8.6" height="15.0" fill="rgb(216,47,21)" rx="2" ry="2" />
<text  x="60.50" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="120.2" y="69" width="0.2" height="15.0" fill="rgb(245,211,44)" rx="2" ry="2" />
<text  x="123.16" y="79.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.8" y="1861" width="0.2" height="15.0" fill="rgb(228,173,44)" rx="2" ry="2" />
<text  x="547.82" y="1871.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="272.2" y="1765" width="0.2" height="15.0" fill="rgb(216,52,20)" rx="2" ry="2" />
<text  x="275.22" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="124.9" y="1925" width="0.4" height="15.0" fill="rgb(238,207,26)" rx="2" ry="2" />
<text  x="127.95" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="702.1" y="2037" width="0.2" height="15.0" fill="rgb(236,5,32)" rx="2" ry="2" />
<text  x="705.08" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="837" width="16.0" height="15.0" fill="rgb(221,82,30)" rx="2" ry="2" />
<text  x="108.39" y="847.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="253.1" y="1685" width="0.2" height="15.0" fill="rgb(212,45,54)" rx="2" ry="2" />
<text  x="256.06" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="982.1" y="1845" width="0.2" height="15.0" fill="rgb(230,183,39)" rx="2" ry="2" />
<text  x="985.06" y="1855.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (46 samples, 0.78%)</title><rect x="603.7" y="1957" width="9.2" height="15.0" fill="rgb(236,155,36)" rx="2" ry="2" />
<text  x="606.69" y="1967.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="753.4" y="1733" width="0.2" height="15.0" fill="rgb(205,229,49)" rx="2" ry="2" />
<text  x="756.36" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="996.0" y="1941" width="0.2" height="15.0" fill="rgb(214,61,7)" rx="2" ry="2" />
<text  x="999.03" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="847.8" y="1845" width="0.6" height="15.0" fill="rgb(226,135,11)" rx="2" ry="2" />
<text  x="850.75" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="608.3" y="1861" width="0.2" height="15.0" fill="rgb(216,100,50)" rx="2" ry="2" />
<text  x="611.28" y="1871.5" ></text>
</g>
<g >
<title>__close (5 samples, 0.08%)</title><rect x="209.8" y="2037" width="1.0" height="15.0" fill="rgb(246,222,53)" rx="2" ry="2" />
<text  x="212.76" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="311.3" y="1701" width="0.2" height="15.0" fill="rgb(217,153,52)" rx="2" ry="2" />
<text  x="314.34" y="1711.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="644.2" y="1957" width="0.2" height="15.0" fill="rgb(223,76,2)" rx="2" ry="2" />
<text  x="647.20" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="913.4" y="2021" width="0.2" height="15.0" fill="rgb(245,215,53)" rx="2" ry="2" />
<text  x="916.41" y="2031.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="566.0" y="1701" width="0.2" height="15.0" fill="rgb(215,83,31)" rx="2" ry="2" />
<text  x="568.97" y="1711.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="1067.9" y="1621" width="0.2" height="15.0" fill="rgb(216,124,8)" rx="2" ry="2" />
<text  x="1070.87" y="1631.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="117.2" y="37" width="0.2" height="15.0" fill="rgb(230,202,28)" rx="2" ry="2" />
<text  x="120.16" y="47.5" ></text>
</g>
<g >
<title>ntohs@plt (2 samples, 0.03%)</title><rect x="32.4" y="1957" width="0.3" height="15.0" fill="rgb(240,145,17)" rx="2" ry="2" />
<text  x="35.35" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1049.3" y="1893" width="0.4" height="15.0" fill="rgb(246,186,28)" rx="2" ry="2" />
<text  x="1052.31" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="226.9" y="1797" width="0.2" height="15.0" fill="rgb(217,141,8)" rx="2" ry="2" />
<text  x="229.92" y="1807.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="844.4" y="1781" width="0.2" height="15.0" fill="rgb(244,24,30)" rx="2" ry="2" />
<text  x="847.36" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="84.4" y="1925" width="0.6" height="15.0" fill="rgb(208,146,50)" rx="2" ry="2" />
<text  x="87.44" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="566.0" y="1925" width="0.2" height="15.0" fill="rgb(228,90,11)" rx="2" ry="2" />
<text  x="568.97" y="1935.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="308.1" y="1653" width="0.2" height="15.0" fill="rgb(215,118,32)" rx="2" ry="2" />
<text  x="311.14" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="58.9" y="1813" width="0.2" height="15.0" fill="rgb(232,21,3)" rx="2" ry="2" />
<text  x="61.89" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1072.3" y="1765" width="0.2" height="15.0" fill="rgb(231,40,24)" rx="2" ry="2" />
<text  x="1075.26" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (5 samples, 0.08%)</title><rect x="513.3" y="1989" width="1.0" height="15.0" fill="rgb(209,99,42)" rx="2" ry="2" />
<text  x="516.29" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="1189.4" y="2053" width="0.4" height="15.0" fill="rgb(245,189,2)" rx="2" ry="2" />
<text  x="1192.40" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="311.3" y="1621" width="0.2" height="15.0" fill="rgb(216,37,13)" rx="2" ry="2" />
<text  x="314.34" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="462.0" y="1941" width="0.2" height="15.0" fill="rgb(239,137,11)" rx="2" ry="2" />
<text  x="465.00" y="1951.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="250.1" y="1941" width="0.4" height="15.0" fill="rgb(240,186,35)" rx="2" ry="2" />
<text  x="253.07" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="53.9" y="1637" width="0.2" height="15.0" fill="rgb(253,74,43)" rx="2" ry="2" />
<text  x="56.90" y="1647.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (5 samples, 0.08%)</title><rect x="1088.0" y="1845" width="1.0" height="15.0" fill="rgb(252,28,36)" rx="2" ry="2" />
<text  x="1091.02" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="862.1" y="1941" width="0.2" height="15.0" fill="rgb(210,18,7)" rx="2" ry="2" />
<text  x="865.12" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="1072.3" y="1557" width="0.2" height="15.0" fill="rgb(206,42,54)" rx="2" ry="2" />
<text  x="1075.26" y="1567.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (8 samples, 0.14%)</title><rect x="376.2" y="1893" width="1.6" height="15.0" fill="rgb(234,182,3)" rx="2" ry="2" />
<text  x="379.19" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (1 samples, 0.02%)</title><rect x="973.7" y="2005" width="0.2" height="15.0" fill="rgb(232,2,34)" rx="2" ry="2" />
<text  x="976.68" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="474.0" y="1909" width="0.2" height="15.0" fill="rgb(205,127,37)" rx="2" ry="2" />
<text  x="476.98" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="901" width="16.0" height="15.0" fill="rgb(231,215,44)" rx="2" ry="2" />
<text  x="108.39" y="911.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="602.3" y="1797" width="0.2" height="15.0" fill="rgb(228,198,28)" rx="2" ry="2" />
<text  x="605.29" y="1807.5" ></text>
</g>
<g >
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="798.5" y="1509" width="1.0" height="15.0" fill="rgb(216,48,39)" rx="2" ry="2" />
<text  x="801.46" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="130.1" y="1941" width="0.2" height="15.0" fill="rgb(222,152,32)" rx="2" ry="2" />
<text  x="133.14" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (112 samples, 1.89%)</title><rect x="212.8" y="1973" width="22.3" height="15.0" fill="rgb(220,202,22)" rx="2" ry="2" />
<text  x="215.75" y="1983.5" >f..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="951.5" y="1973" width="0.2" height="15.0" fill="rgb(220,143,50)" rx="2" ry="2" />
<text  x="954.53" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (59 samples, 1.00%)</title><rect x="602.9" y="2021" width="11.8" height="15.0" fill="rgb(219,16,29)" rx="2" ry="2" />
<text  x="605.89" y="2031.5" ></text>
</g>
<g >
<title>free (33 samples, 0.56%)</title><rect x="1008.4" y="2037" width="6.6" height="15.0" fill="rgb(232,220,37)" rx="2" ry="2" />
<text  x="1011.40" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="501.5" y="1797" width="0.8" height="15.0" fill="rgb(215,124,40)" rx="2" ry="2" />
<text  x="504.52" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::(anonymous namespace)::findFirstNonDigit (1 samples, 0.02%)</title><rect x="1003.4" y="2005" width="0.2" height="15.0" fill="rgb(216,161,51)" rx="2" ry="2" />
<text  x="1006.41" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="501.9" y="1525" width="0.2" height="15.0" fill="rgb(211,121,21)" rx="2" ry="2" />
<text  x="504.92" y="1535.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (9 samples, 0.15%)</title><rect x="262.6" y="1861" width="1.8" height="15.0" fill="rgb(210,53,11)" rx="2" ry="2" />
<text  x="265.64" y="1871.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="915.2" y="1973" width="0.2" height="15.0" fill="rgb(207,179,8)" rx="2" ry="2" />
<text  x="918.21" y="1983.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="1175.2" y="1973" width="0.2" height="15.0" fill="rgb(212,3,13)" rx="2" ry="2" />
<text  x="1178.23" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (29 samples, 0.49%)</title><rect x="1109.2" y="1605" width="5.8" height="15.0" fill="rgb(244,104,28)" rx="2" ry="2" />
<text  x="1112.18" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="129.5" y="1989" width="0.2" height="15.0" fill="rgb(226,55,5)" rx="2" ry="2" />
<text  x="132.54" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="838.2" y="1909" width="0.2" height="15.0" fill="rgb(213,153,16)" rx="2" ry="2" />
<text  x="841.18" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="608.3" y="1877" width="0.2" height="15.0" fill="rgb(241,39,24)" rx="2" ry="2" />
<text  x="611.28" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="53.9" y="1765" width="0.2" height="15.0" fill="rgb(216,203,42)" rx="2" ry="2" />
<text  x="56.90" y="1775.5" ></text>
</g>
<g >
<title>__get_user_4 (2 samples, 0.03%)</title><rect x="688.9" y="1893" width="0.4" height="15.0" fill="rgb(251,106,6)" rx="2" ry="2" />
<text  x="691.90" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (5 samples, 0.08%)</title><rect x="806.6" y="1669" width="1.0" height="15.0" fill="rgb(239,190,21)" rx="2" ry="2" />
<text  x="809.64" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="630.2" y="1973" width="0.2" height="15.0" fill="rgb(251,80,14)" rx="2" ry="2" />
<text  x="633.23" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="946.3" y="2005" width="0.2" height="15.0" fill="rgb(223,77,31)" rx="2" ry="2" />
<text  x="949.34" y="2015.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1002.2" y="1989" width="0.2" height="15.0" fill="rgb(227,131,29)" rx="2" ry="2" />
<text  x="1005.21" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="721.4" y="1829" width="0.2" height="15.0" fill="rgb(213,132,30)" rx="2" ry="2" />
<text  x="724.43" y="1839.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (6 samples, 0.10%)</title><rect x="567.8" y="1989" width="1.2" height="15.0" fill="rgb(210,155,22)" rx="2" ry="2" />
<text  x="570.77" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="29.4" y="1797" width="0.2" height="15.0" fill="rgb(213,112,44)" rx="2" ry="2" />
<text  x="32.36" y="1807.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="452.2" y="1909" width="0.2" height="15.0" fill="rgb(223,115,12)" rx="2" ry="2" />
<text  x="455.23" y="1919.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1149.1" y="1973" width="0.4" height="15.0" fill="rgb(242,132,32)" rx="2" ry="2" />
<text  x="1152.09" y="1983.5" ></text>
</g>
<g >
<title>futex_wait (15 samples, 0.25%)</title><rect x="12.6" y="1973" width="3.0" height="15.0" fill="rgb(220,42,15)" rx="2" ry="2" />
<text  x="15.59" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="93.0" y="1957" width="0.2" height="15.0" fill="rgb(222,147,6)" rx="2" ry="2" />
<text  x="96.02" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="65.5" y="1861" width="0.2" height="15.0" fill="rgb(224,106,13)" rx="2" ry="2" />
<text  x="68.48" y="1871.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="611.9" y="1877" width="0.8" height="15.0" fill="rgb(218,195,46)" rx="2" ry="2" />
<text  x="614.87" y="1887.5" ></text>
</g>
<g >
<title>tcp_openreq_init_rwin (1 samples, 0.02%)</title><rect x="602.3" y="1669" width="0.2" height="15.0" fill="rgb(234,187,31)" rx="2" ry="2" />
<text  x="605.29" y="1679.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (14 samples, 0.24%)</title><rect x="287.8" y="1701" width="2.8" height="15.0" fill="rgb(242,37,19)" rx="2" ry="2" />
<text  x="290.79" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.03%)</title><rect x="997.6" y="2005" width="0.4" height="15.0" fill="rgb(214,49,41)" rx="2" ry="2" />
<text  x="1000.62" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="121.2" y="453" width="0.2" height="15.0" fill="rgb(208,159,51)" rx="2" ry="2" />
<text  x="124.16" y="463.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="805.8" y="1381" width="0.4" height="15.0" fill="rgb(224,142,48)" rx="2" ry="2" />
<text  x="808.85" y="1391.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="573.4" y="1973" width="0.6" height="15.0" fill="rgb(240,223,47)" rx="2" ry="2" />
<text  x="576.36" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="23.0" y="1861" width="0.2" height="15.0" fill="rgb(251,73,35)" rx="2" ry="2" />
<text  x="25.97" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="529.9" y="1909" width="0.2" height="15.0" fill="rgb(215,132,40)" rx="2" ry="2" />
<text  x="532.85" y="1919.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="116.8" y="53" width="0.4" height="15.0" fill="rgb(223,170,30)" rx="2" ry="2" />
<text  x="119.76" y="63.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="459.8" y="1781" width="0.4" height="15.0" fill="rgb(206,192,33)" rx="2" ry="2" />
<text  x="462.81" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (1 samples, 0.02%)</title><rect x="527.5" y="2005" width="0.2" height="15.0" fill="rgb(242,171,6)" rx="2" ry="2" />
<text  x="530.46" y="2015.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="32.0" y="1941" width="0.2" height="15.0" fill="rgb(254,131,19)" rx="2" ry="2" />
<text  x="34.95" y="1951.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="274.4" y="1717" width="0.2" height="15.0" fill="rgb(213,107,50)" rx="2" ry="2" />
<text  x="277.42" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="29.4" y="1765" width="0.2" height="15.0" fill="rgb(210,7,53)" rx="2" ry="2" />
<text  x="32.36" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="844.4" y="1877" width="0.2" height="15.0" fill="rgb(230,205,3)" rx="2" ry="2" />
<text  x="847.36" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="562.2" y="1941" width="0.2" height="15.0" fill="rgb(218,139,46)" rx="2" ry="2" />
<text  x="565.18" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="340.3" y="1941" width="0.2" height="15.0" fill="rgb(244,121,12)" rx="2" ry="2" />
<text  x="343.27" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (9 samples, 0.15%)</title><rect x="923.0" y="1925" width="1.8" height="15.0" fill="rgb(230,56,48)" rx="2" ry="2" />
<text  x="925.99" y="1935.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (25 samples, 0.42%)</title><rect x="1109.8" y="1525" width="5.0" height="15.0" fill="rgb(249,78,40)" rx="2" ry="2" />
<text  x="1112.78" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="119.0" y="37" width="0.2" height="15.0" fill="rgb(228,34,28)" rx="2" ry="2" />
<text  x="121.96" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="481.0" y="1797" width="0.2" height="15.0" fill="rgb(248,7,26)" rx="2" ry="2" />
<text  x="483.96" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (292 samples, 4.94%)</title><rect x="103.8" y="2021" width="58.3" height="15.0" fill="rgb(209,136,25)" rx="2" ry="2" />
<text  x="106.79" y="2031.5" >[unkno..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="300.2" y="1621" width="0.2" height="15.0" fill="rgb(221,162,53)" rx="2" ry="2" />
<text  x="303.16" y="1631.5" ></text>
</g>
<g >
<title>evict (55 samples, 0.93%)</title><rect x="729.0" y="1717" width="11.0" height="15.0" fill="rgb(241,188,22)" rx="2" ry="2" />
<text  x="732.02" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="452.0" y="1797" width="0.2" height="15.0" fill="rgb(211,8,34)" rx="2" ry="2" />
<text  x="455.03" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="884.1" y="1765" width="0.2" height="15.0" fill="rgb(227,200,27)" rx="2" ry="2" />
<text  x="887.07" y="1775.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="174.2" y="1989" width="0.2" height="15.0" fill="rgb(254,118,43)" rx="2" ry="2" />
<text  x="177.24" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1018.6" y="1765" width="0.2" height="15.0" fill="rgb(208,219,43)" rx="2" ry="2" />
<text  x="1021.58" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="528.5" y="1925" width="0.4" height="15.0" fill="rgb(237,188,15)" rx="2" ry="2" />
<text  x="531.46" y="1935.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="993.0" y="1909" width="0.8" height="15.0" fill="rgb(210,220,48)" rx="2" ry="2" />
<text  x="996.03" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="613" width="16.0" height="15.0" fill="rgb(217,171,48)" rx="2" ry="2" />
<text  x="108.39" y="623.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1067.5" y="1829" width="0.2" height="15.0" fill="rgb(236,177,28)" rx="2" ry="2" />
<text  x="1070.47" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="452.0" y="1749" width="0.2" height="15.0" fill="rgb(253,68,5)" rx="2" ry="2" />
<text  x="455.03" y="1759.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="474.0" y="1621" width="0.2" height="15.0" fill="rgb(226,218,38)" rx="2" ry="2" />
<text  x="476.98" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1067.9" y="1829" width="0.2" height="15.0" fill="rgb(240,195,24)" rx="2" ry="2" />
<text  x="1070.87" y="1839.5" ></text>
</g>
<g >
<title>tcp_sendmsg (409 samples, 6.92%)</title><rect x="251.3" y="1909" width="81.6" height="15.0" fill="rgb(233,29,24)" rx="2" ry="2" />
<text  x="254.27" y="1919.5" >tcp_sendmsg</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="983.1" y="1957" width="0.2" height="15.0" fill="rgb(223,78,49)" rx="2" ry="2" />
<text  x="986.06" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="844.4" y="1749" width="0.2" height="15.0" fill="rgb(241,137,47)" rx="2" ry="2" />
<text  x="847.36" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="287.8" y="1653" width="0.2" height="15.0" fill="rgb(240,104,10)" rx="2" ry="2" />
<text  x="290.79" y="1663.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 0.02%)</title><rect x="755.8" y="1733" width="0.2" height="15.0" fill="rgb(211,36,49)" rx="2" ry="2" />
<text  x="758.76" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10 samples, 0.17%)</title><rect x="288.6" y="1541" width="2.0" height="15.0" fill="rgb(224,181,48)" rx="2" ry="2" />
<text  x="291.59" y="1551.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="830.2" y="1861" width="0.2" height="15.0" fill="rgb(208,49,53)" rx="2" ry="2" />
<text  x="833.19" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="528.9" y="1941" width="0.4" height="15.0" fill="rgb(237,96,11)" rx="2" ry="2" />
<text  x="531.86" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="501.5" y="1669" width="0.6" height="15.0" fill="rgb(208,55,43)" rx="2" ry="2" />
<text  x="504.52" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="568.8" y="1941" width="0.2" height="15.0" fill="rgb(231,115,49)" rx="2" ry="2" />
<text  x="571.77" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="474.0" y="1781" width="0.2" height="15.0" fill="rgb(234,22,11)" rx="2" ry="2" />
<text  x="476.98" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="300.2" y="1557" width="0.2" height="15.0" fill="rgb(250,124,40)" rx="2" ry="2" />
<text  x="303.16" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (2 samples, 0.03%)</title><rect x="885.5" y="1925" width="0.4" height="15.0" fill="rgb(223,8,18)" rx="2" ry="2" />
<text  x="888.47" y="1935.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="672.3" y="1637" width="0.2" height="15.0" fill="rgb(254,148,44)" rx="2" ry="2" />
<text  x="675.34" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="763.1" y="1589" width="0.2" height="15.0" fill="rgb(210,97,44)" rx="2" ry="2" />
<text  x="766.14" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (21 samples, 0.36%)</title><rect x="1143.5" y="2021" width="4.2" height="15.0" fill="rgb(239,85,14)" rx="2" ry="2" />
<text  x="1146.50" y="2031.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="841.2" y="1653" width="0.2" height="15.0" fill="rgb(220,159,20)" rx="2" ry="2" />
<text  x="844.17" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="133.5" y="1893" width="0.2" height="15.0" fill="rgb(210,215,9)" rx="2" ry="2" />
<text  x="136.53" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.2" y="1829" width="0.2" height="15.0" fill="rgb(228,202,48)" rx="2" ry="2" />
<text  x="844.17" y="1839.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (4 samples, 0.07%)</title><rect x="568.2" y="1973" width="0.8" height="15.0" fill="rgb(236,80,51)" rx="2" ry="2" />
<text  x="571.17" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="622.7" y="2037" width="0.1" height="15.0" fill="rgb(207,56,37)" rx="2" ry="2" />
<text  x="625.65" y="2047.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (18 samples, 0.30%)</title><rect x="811.8" y="1653" width="3.6" height="15.0" fill="rgb(226,21,29)" rx="2" ry="2" />
<text  x="814.83" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="805.8" y="1413" width="0.4" height="15.0" fill="rgb(241,92,11)" rx="2" ry="2" />
<text  x="808.85" y="1423.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (1 samples, 0.02%)</title><rect x="676.1" y="2005" width="0.2" height="15.0" fill="rgb(219,59,28)" rx="2" ry="2" />
<text  x="679.13" y="2015.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="122.0" y="1413" width="0.2" height="15.0" fill="rgb(236,167,4)" rx="2" ry="2" />
<text  x="124.95" y="1423.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (14 samples, 0.24%)</title><rect x="12.6" y="1893" width="2.8" height="15.0" fill="rgb(238,224,31)" rx="2" ry="2" />
<text  x="15.59" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="639.0" y="1957" width="0.2" height="15.0" fill="rgb(218,102,44)" rx="2" ry="2" />
<text  x="642.01" y="1967.5" ></text>
</g>
<g >
<title>release_sock (8 samples, 0.14%)</title><rect x="254.1" y="1893" width="1.6" height="15.0" fill="rgb(239,131,13)" rx="2" ry="2" />
<text  x="257.06" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncWriter::~AsyncWriter (1 samples, 0.02%)</title><rect x="74.7" y="1941" width="0.2" height="15.0" fill="rgb(243,202,4)" rx="2" ry="2" />
<text  x="77.66" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="545.6" y="1973" width="0.4" height="15.0" fill="rgb(231,219,12)" rx="2" ry="2" />
<text  x="548.62" y="1983.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="832.4" y="1813" width="0.2" height="15.0" fill="rgb(210,44,19)" rx="2" ry="2" />
<text  x="835.39" y="1823.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1080.6" y="1605" width="0.2" height="15.0" fill="rgb(245,212,42)" rx="2" ry="2" />
<text  x="1083.64" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (8 samples, 0.14%)</title><rect x="534.8" y="1989" width="1.6" height="15.0" fill="rgb(219,50,21)" rx="2" ry="2" />
<text  x="537.84" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1049.3" y="1845" width="0.4" height="15.0" fill="rgb(243,122,5)" rx="2" ry="2" />
<text  x="1052.31" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (24 samples, 0.41%)</title><rect x="1142.9" y="2053" width="4.8" height="15.0" fill="rgb(207,204,30)" rx="2" ry="2" />
<text  x="1145.90" y="2063.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="161.3" y="2005" width="0.6" height="15.0" fill="rgb(240,126,31)" rx="2" ry="2" />
<text  x="164.27" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="124.7" y="1909" width="0.2" height="15.0" fill="rgb(246,132,33)" rx="2" ry="2" />
<text  x="127.75" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="358.4" y="1893" width="0.2" height="15.0" fill="rgb(252,67,37)" rx="2" ry="2" />
<text  x="361.43" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="921.0" y="1925" width="0.6" height="15.0" fill="rgb(242,109,37)" rx="2" ry="2" />
<text  x="923.99" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1014.8" y="2021" width="0.2" height="15.0" fill="rgb(214,8,0)" rx="2" ry="2" />
<text  x="1017.79" y="2031.5" ></text>
</g>
<g >
<title>__close_fd (12 samples, 0.20%)</title><rect x="830.6" y="1845" width="2.4" height="15.0" fill="rgb(244,197,34)" rx="2" ry="2" />
<text  x="833.59" y="1855.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="316.5" y="1669" width="0.4" height="15.0" fill="rgb(223,161,21)" rx="2" ry="2" />
<text  x="319.52" y="1679.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="614.3" y="1941" width="0.2" height="15.0" fill="rgb(215,80,13)" rx="2" ry="2" />
<text  x="617.27" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (10 samples, 0.17%)</title><rect x="958.5" y="2037" width="2.0" height="15.0" fill="rgb(215,228,2)" rx="2" ry="2" />
<text  x="961.51" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (2 samples, 0.03%)</title><rect x="658.2" y="1877" width="0.4" height="15.0" fill="rgb(223,206,26)" rx="2" ry="2" />
<text  x="661.17" y="1887.5" ></text>
</g>
<g >
<title>malloc (14 samples, 0.24%)</title><rect x="1015.0" y="2037" width="2.8" height="15.0" fill="rgb(234,179,32)" rx="2" ry="2" />
<text  x="1017.99" y="2047.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="767.1" y="1701" width="0.2" height="15.0" fill="rgb(248,198,26)" rx="2" ry="2" />
<text  x="770.13" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (4 samples, 0.07%)</title><rect x="583.9" y="1909" width="0.8" height="15.0" fill="rgb(208,13,46)" rx="2" ry="2" />
<text  x="586.94" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="877.7" y="1877" width="0.2" height="15.0" fill="rgb(221,153,6)" rx="2" ry="2" />
<text  x="880.69" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (89 samples, 1.51%)</title><rect x="105.0" y="1653" width="17.8" height="15.0" fill="rgb(242,64,4)" rx="2" ry="2" />
<text  x="107.99" y="1663.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="121.8" y="1349" width="0.2" height="15.0" fill="rgb(241,174,41)" rx="2" ry="2" />
<text  x="124.75" y="1359.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="316.7" y="1493" width="0.2" height="15.0" fill="rgb(220,218,33)" rx="2" ry="2" />
<text  x="319.72" y="1503.5" ></text>
</g>
<g >
<title>inet_unhash (1 samples, 0.02%)</title><rect x="806.0" y="1333" width="0.2" height="15.0" fill="rgb(223,26,49)" rx="2" ry="2" />
<text  x="809.05" y="1343.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="53.9" y="1669" width="0.2" height="15.0" fill="rgb(240,113,36)" rx="2" ry="2" />
<text  x="56.90" y="1679.5" ></text>
</g>
<g >
<title>aa_sock_accept_perm (4 samples, 0.07%)</title><rect x="386.4" y="1925" width="0.8" height="15.0" fill="rgb(212,212,25)" rx="2" ry="2" />
<text  x="389.37" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (79 samples, 1.34%)</title><rect x="105.4" y="453" width="15.8" height="15.0" fill="rgb(239,53,7)" rx="2" ry="2" />
<text  x="108.39" y="463.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="805.8" y="1397" width="0.4" height="15.0" fill="rgb(224,92,20)" rx="2" ry="2" />
<text  x="808.85" y="1407.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1174.4" y="1957" width="0.2" height="15.0" fill="rgb(223,170,30)" rx="2" ry="2" />
<text  x="1177.43" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (2 samples, 0.03%)</title><rect x="528.9" y="1877" width="0.4" height="15.0" fill="rgb(208,192,6)" rx="2" ry="2" />
<text  x="531.86" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1173.6" y="1925" width="0.2" height="15.0" fill="rgb(211,139,53)" rx="2" ry="2" />
<text  x="1176.64" y="1935.5" ></text>
</g>
<g >
<title>sock_close (430 samples, 7.27%)</title><rect x="743.6" y="1797" width="85.8" height="15.0" fill="rgb(239,121,5)" rx="2" ry="2" />
<text  x="746.58" y="1807.5" >sock_close</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="980.3" y="1973" width="0.4" height="15.0" fill="rgb(247,63,21)" rx="2" ry="2" />
<text  x="983.26" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="950.1" y="1989" width="0.2" height="15.0" fill="rgb(246,5,10)" rx="2" ry="2" />
<text  x="953.13" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (1 samples, 0.02%)</title><rect x="952.1" y="2037" width="0.2" height="15.0" fill="rgb(225,67,34)" rx="2" ry="2" />
<text  x="955.12" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="958.3" y="2021" width="0.2" height="15.0" fill="rgb(226,210,34)" rx="2" ry="2" />
<text  x="961.31" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="886.1" y="1909" width="0.2" height="15.0" fill="rgb(231,197,40)" rx="2" ry="2" />
<text  x="889.07" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="692.3" y="1861" width="0.2" height="15.0" fill="rgb(221,182,28)" rx="2" ry="2" />
<text  x="695.30" y="1871.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="289.8" y="1333" width="0.2" height="15.0" fill="rgb(212,58,50)" rx="2" ry="2" />
<text  x="292.78" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (463 samples, 7.83%)</title><rect x="1034.9" y="2037" width="92.4" height="15.0" fill="rgb(205,137,39)" rx="2" ry="2" />
<text  x="1037.94" y="2047.5" >entry_SYSCA..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="235.1" y="2037" width="0.2" height="15.0" fill="rgb(236,227,38)" rx="2" ry="2" />
<text  x="238.10" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="529.5" y="1941" width="0.2" height="15.0" fill="rgb(237,181,18)" rx="2" ry="2" />
<text  x="532.46" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tokenlessSlotValue (1 samples, 0.02%)</title><rect x="166.1" y="2005" width="0.2" height="15.0" fill="rgb(215,168,49)" rx="2" ry="2" />
<text  x="169.06" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="844.4" y="1429" width="0.2" height="15.0" fill="rgb(233,102,42)" rx="2" ry="2" />
<text  x="847.36" y="1439.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1104.4" y="1733" width="0.2" height="15.0" fill="rgb(232,38,25)" rx="2" ry="2" />
<text  x="1107.39" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="982.1" y="1733" width="0.2" height="15.0" fill="rgb(248,68,28)" rx="2" ry="2" />
<text  x="985.06" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="40.1" y="1989" width="0.2" height="15.0" fill="rgb(251,165,19)" rx="2" ry="2" />
<text  x="43.13" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="318.7" y="1749" width="0.2" height="15.0" fill="rgb(206,50,1)" rx="2" ry="2" />
<text  x="321.72" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="58.9" y="1877" width="0.2" height="15.0" fill="rgb(214,29,23)" rx="2" ry="2" />
<text  x="61.89" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (107 samples, 1.81%)</title><rect x="66.7" y="1989" width="21.3" height="15.0" fill="rgb(253,54,37)" rx="2" ry="2" />
<text  x="69.68" y="1999.5" >f..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (10 samples, 0.17%)</title><rect x="82.0" y="1941" width="2.0" height="15.0" fill="rgb(237,21,51)" rx="2" ry="2" />
<text  x="85.04" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (4,658 samples, 78.78%)</title><rect x="98.2" y="2053" width="929.6" height="15.0" fill="rgb(218,72,31)" rx="2" ry="2" />
<text  x="101.21" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="773" width="16.0" height="15.0" fill="rgb(252,25,12)" rx="2" ry="2" />
<text  x="108.39" y="783.5" ></text>
</g>
<g >
<title>mntget (1 samples, 0.02%)</title><rect x="384.0" y="1957" width="0.2" height="15.0" fill="rgb(238,126,15)" rx="2" ry="2" />
<text  x="386.98" y="1967.5" ></text>
</g>
<g >
<title>sys_setsockopt (46 samples, 0.78%)</title><rect x="686.1" y="1941" width="9.2" height="15.0" fill="rgb(209,184,32)" rx="2" ry="2" />
<text  x="689.11" y="1951.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (3 samples, 0.05%)</title><rect x="1002.8" y="2005" width="0.6" height="15.0" fill="rgb(250,167,54)" rx="2" ry="2" />
<text  x="1005.81" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="919.4" y="1909" width="0.2" height="15.0" fill="rgb(215,145,36)" rx="2" ry="2" />
<text  x="922.40" y="1919.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="253.1" y="1877" width="0.2" height="15.0" fill="rgb(237,176,20)" rx="2" ry="2" />
<text  x="256.06" y="1887.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (1 samples, 0.02%)</title><rect x="274.4" y="1701" width="0.2" height="15.0" fill="rgb(228,89,20)" rx="2" ry="2" />
<text  x="277.42" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (14 samples, 0.24%)</title><rect x="538.0" y="1941" width="2.8" height="15.0" fill="rgb(219,165,51)" rx="2" ry="2" />
<text  x="541.04" y="1951.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.4" y="1285" width="0.2" height="15.0" fill="rgb(213,170,33)" rx="2" ry="2" />
<text  x="124.35" y="1295.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="221.5" y="1845" width="0.4" height="15.0" fill="rgb(211,37,33)" rx="2" ry="2" />
<text  x="224.53" y="1855.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="672.3" y="1621" width="0.2" height="15.0" fill="rgb(213,172,13)" rx="2" ry="2" />
<text  x="675.34" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (75 samples, 1.27%)</title><rect x="1149.1" y="2005" width="15.0" height="15.0" fill="rgb(241,130,4)" rx="2" ry="2" />
<text  x="1152.09" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1108.6" y="1653" width="0.4" height="15.0" fill="rgb(253,152,35)" rx="2" ry="2" />
<text  x="1111.58" y="1663.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="133.5" y="1861" width="0.2" height="15.0" fill="rgb(249,30,37)" rx="2" ry="2" />
<text  x="136.53" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (6 samples, 0.10%)</title><rect x="566.4" y="2005" width="1.2" height="15.0" fill="rgb(249,165,44)" rx="2" ry="2" />
<text  x="569.37" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="672.3" y="1925" width="0.2" height="15.0" fill="rgb(227,19,30)" rx="2" ry="2" />
<text  x="675.34" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1022.8" y="2005" width="0.2" height="15.0" fill="rgb(253,77,32)" rx="2" ry="2" />
<text  x="1025.77" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="1023.6" y="2037" width="0.2" height="15.0" fill="rgb(251,67,6)" rx="2" ry="2" />
<text  x="1026.57" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (4 samples, 0.07%)</title><rect x="882.5" y="1941" width="0.8" height="15.0" fill="rgb(219,86,53)" rx="2" ry="2" />
<text  x="885.48" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="23.0" y="1909" width="0.2" height="15.0" fill="rgb(230,206,48)" rx="2" ry="2" />
<text  x="25.97" y="1919.5" ></text>
</g>
<g >
<title>ip_output (38 samples, 0.64%)</title><rect x="1108.0" y="1829" width="7.6" height="15.0" fill="rgb(216,94,18)" rx="2" ry="2" />
<text  x="1110.98" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (18 samples, 0.30%)</title><rect x="130.3" y="1989" width="3.6" height="15.0" fill="rgb(227,143,31)" rx="2" ry="2" />
<text  x="133.33" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (30 samples, 0.51%)</title><rect x="922.2" y="1973" width="6.0" height="15.0" fill="rgb(220,42,2)" rx="2" ry="2" />
<text  x="925.19" y="1983.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="1024.6" y="2021" width="2.6" height="15.0" fill="rgb(239,153,15)" rx="2" ry="2" />
<text  x="1027.56" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="113.8" y="37" width="0.2" height="15.0" fill="rgb(239,78,6)" rx="2" ry="2" />
<text  x="116.77" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="529.5" y="1925" width="0.2" height="15.0" fill="rgb(220,73,26)" rx="2" ry="2" />
<text  x="532.46" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (111 samples, 1.88%)</title><rect x="676.9" y="2021" width="22.2" height="15.0" fill="rgb(224,88,18)" rx="2" ry="2" />
<text  x="679.93" y="2031.5" >f..</text>
</g>
<g >
<title>[unknown] (101 samples, 1.71%)</title><rect x="104.2" y="1893" width="20.1" height="15.0" fill="rgb(227,11,50)" rx="2" ry="2" />
<text  x="107.19" y="1903.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="470.6" y="1733" width="0.2" height="15.0" fill="rgb(234,5,34)" rx="2" ry="2" />
<text  x="473.59" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="115.4" y="37" width="0.4" height="15.0" fill="rgb(214,215,52)" rx="2" ry="2" />
<text  x="118.37" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="969.3" y="1797" width="0.2" height="15.0" fill="rgb(218,178,26)" rx="2" ry="2" />
<text  x="972.29" y="1807.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="844.4" y="1557" width="0.2" height="15.0" fill="rgb(233,31,39)" rx="2" ry="2" />
<text  x="847.36" y="1567.5" ></text>
</g>
<g >
<title>dput (86 samples, 1.45%)</title><rect x="725.2" y="1797" width="17.2" height="15.0" fill="rgb(215,82,10)" rx="2" ry="2" />
<text  x="728.22" y="1807.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="282.0" y="1797" width="0.4" height="15.0" fill="rgb(216,133,1)" rx="2" ry="2" />
<text  x="285.00" y="1807.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (4 samples, 0.07%)</title><rect x="728.2" y="1717" width="0.8" height="15.0" fill="rgb(225,115,12)" rx="2" ry="2" />
<text  x="731.22" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1088.6" y="1797" width="0.2" height="15.0" fill="rgb(229,37,13)" rx="2" ry="2" />
<text  x="1091.62" y="1807.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1088.4" y="1765" width="0.2" height="15.0" fill="rgb(215,175,26)" rx="2" ry="2" />
<text  x="1091.42" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="228.9" y="1813" width="0.2" height="15.0" fill="rgb(244,61,29)" rx="2" ry="2" />
<text  x="231.92" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="672.3" y="1701" width="0.2" height="15.0" fill="rgb(226,66,22)" rx="2" ry="2" />
<text  x="675.34" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (8 samples, 0.14%)</title><rect x="1141.1" y="2021" width="1.6" height="15.0" fill="rgb(252,69,6)" rx="2" ry="2" />
<text  x="1144.11" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="170.6" y="2005" width="0.2" height="15.0" fill="rgb(210,7,40)" rx="2" ry="2" />
<text  x="173.65" y="2015.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::~allocator (1 samples, 0.02%)</title><rect x="85.6" y="1909" width="0.2" height="15.0" fill="rgb(247,49,12)" rx="2" ry="2" />
<text  x="88.63" y="1919.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="201.8" y="2021" width="0.2" height="15.0" fill="rgb(234,98,8)" rx="2" ry="2" />
<text  x="204.78" y="2031.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="699.9" y="1973" width="0.2" height="15.0" fill="rgb(226,58,25)" rx="2" ry="2" />
<text  x="702.88" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="318.7" y="1733" width="0.2" height="15.0" fill="rgb(228,136,39)" rx="2" ry="2" />
<text  x="321.72" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1067.9" y="1781" width="0.2" height="15.0" fill="rgb(239,7,22)" rx="2" ry="2" />
<text  x="1070.87" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="607.9" y="1845" width="0.2" height="15.0" fill="rgb(212,53,32)" rx="2" ry="2" />
<text  x="610.88" y="1855.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="11.6" y="1941" width="0.8" height="15.0" fill="rgb(245,88,2)" rx="2" ry="2" />
<text  x="14.60" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (2 samples, 0.03%)</title><rect x="216.3" y="1957" width="0.4" height="15.0" fill="rgb(221,195,21)" rx="2" ry="2" />
<text  x="219.35" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.15%)</title><rect x="528.3" y="2005" width="1.8" height="15.0" fill="rgb(241,53,0)" rx="2" ry="2" />
<text  x="531.26" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="900.4" y="1941" width="0.2" height="15.0" fill="rgb(240,222,24)" rx="2" ry="2" />
<text  x="903.44" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="844.4" y="1829" width="0.2" height="15.0" fill="rgb(240,122,47)" rx="2" ry="2" />
<text  x="847.36" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="120.4" y="133" width="0.2" height="15.0" fill="rgb(219,96,30)" rx="2" ry="2" />
<text  x="123.36" y="143.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="618.7" y="2005" width="0.6" height="15.0" fill="rgb(254,58,16)" rx="2" ry="2" />
<text  x="621.66" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="927.8" y="1941" width="0.4" height="15.0" fill="rgb(239,152,37)" rx="2" ry="2" />
<text  x="930.78" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1189" width="16.0" height="15.0" fill="rgb(250,181,21)" rx="2" ry="2" />
<text  x="108.39" y="1199.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="847.8" y="1829" width="0.6" height="15.0" fill="rgb(229,200,50)" rx="2" ry="2" />
<text  x="850.75" y="1839.5" ></text>
</g>
<g >
<title>__clock_gettime (24 samples, 0.41%)</title><rect x="205.0" y="2037" width="4.8" height="15.0" fill="rgb(213,225,12)" rx="2" ry="2" />
<text  x="207.97" y="2047.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="318.1" y="1813" width="0.2" height="15.0" fill="rgb(220,172,22)" rx="2" ry="2" />
<text  x="321.12" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="121.2" y="261" width="0.2" height="15.0" fill="rgb(246,189,46)" rx="2" ry="2" />
<text  x="124.16" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="519.3" y="1925" width="0.6" height="15.0" fill="rgb(242,1,21)" rx="2" ry="2" />
<text  x="522.28" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="981.3" y="1957" width="0.4" height="15.0" fill="rgb(244,91,52)" rx="2" ry="2" />
<text  x="984.26" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1090.8" y="1893" width="0.2" height="15.0" fill="rgb(242,51,33)" rx="2" ry="2" />
<text  x="1093.82" y="1903.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1122.1" y="1637" width="0.2" height="15.0" fill="rgb(218,179,49)" rx="2" ry="2" />
<text  x="1125.15" y="1647.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="806.2" y="1669" width="0.4" height="15.0" fill="rgb(207,159,54)" rx="2" ry="2" />
<text  x="809.25" y="1679.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="23.0" y="1733" width="0.2" height="15.0" fill="rgb(247,228,49)" rx="2" ry="2" />
<text  x="25.97" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="462.0" y="1701" width="0.2" height="15.0" fill="rgb(253,130,9)" rx="2" ry="2" />
<text  x="465.00" y="1711.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="435.3" y="1989" width="0.2" height="15.0" fill="rgb(251,202,7)" rx="2" ry="2" />
<text  x="438.26" y="1999.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="64.9" y="1893" width="0.8" height="15.0" fill="rgb(219,182,9)" rx="2" ry="2" />
<text  x="67.88" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="178.0" y="1957" width="0.4" height="15.0" fill="rgb(235,144,6)" rx="2" ry="2" />
<text  x="181.03" y="1967.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="1083.8" y="1797" width="0.2" height="15.0" fill="rgb(249,208,4)" rx="2" ry="2" />
<text  x="1086.83" y="1807.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="205.8" y="2021" width="0.4" height="15.0" fill="rgb(233,61,34)" rx="2" ry="2" />
<text  x="208.77" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1088.4" y="1781" width="0.2" height="15.0" fill="rgb(216,170,13)" rx="2" ry="2" />
<text  x="1091.42" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="100.6" y="1989" width="0.2" height="15.0" fill="rgb(238,10,45)" rx="2" ry="2" />
<text  x="103.60" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="951.1" y="1845" width="0.2" height="15.0" fill="rgb(220,209,44)" rx="2" ry="2" />
<text  x="954.13" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (21 samples, 0.36%)</title><rect x="1143.5" y="2037" width="4.2" height="15.0" fill="rgb(232,101,16)" rx="2" ry="2" />
<text  x="1146.50" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (13 samples, 0.22%)</title><rect x="148.5" y="1909" width="2.6" height="15.0" fill="rgb(207,108,10)" rx="2" ry="2" />
<text  x="151.49" y="1919.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="1135.7" y="2053" width="0.2" height="15.0" fill="rgb(253,208,48)" rx="2" ry="2" />
<text  x="1138.72" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="900.4" y="1749" width="0.2" height="15.0" fill="rgb(212,3,43)" rx="2" ry="2" />
<text  x="903.44" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="906.4" y="1989" width="0.4" height="15.0" fill="rgb(235,113,41)" rx="2" ry="2" />
<text  x="909.42" y="1999.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(226,53,36)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="246.7" y="1941" width="0.2" height="15.0" fill="rgb(227,123,40)" rx="2" ry="2" />
<text  x="249.68" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="619.1" y="1973" width="0.2" height="15.0" fill="rgb(250,78,0)" rx="2" ry="2" />
<text  x="622.06" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (6 samples, 0.10%)</title><rect x="1087.8" y="1861" width="1.2" height="15.0" fill="rgb(217,1,42)" rx="2" ry="2" />
<text  x="1090.83" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (11 samples, 0.19%)</title><rect x="288.4" y="1589" width="2.2" height="15.0" fill="rgb(211,48,11)" rx="2" ry="2" />
<text  x="291.39" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="340.3" y="1973" width="0.2" height="15.0" fill="rgb(218,70,26)" rx="2" ry="2" />
<text  x="343.27" y="1983.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="54.1" y="1941" width="0.6" height="15.0" fill="rgb(214,106,37)" rx="2" ry="2" />
<text  x="57.10" y="1951.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (2 samples, 0.03%)</title><rect x="732.0" y="1653" width="0.4" height="15.0" fill="rgb(214,85,42)" rx="2" ry="2" />
<text  x="735.01" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="928.6" y="1973" width="0.6" height="15.0" fill="rgb(206,204,9)" rx="2" ry="2" />
<text  x="931.58" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="119.6" y="37" width="0.2" height="15.0" fill="rgb(209,6,5)" rx="2" ry="2" />
<text  x="122.56" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="571.0" y="1989" width="0.2" height="15.0" fill="rgb(226,78,40)" rx="2" ry="2" />
<text  x="573.96" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="805.8" y="1573" width="0.4" height="15.0" fill="rgb(213,154,8)" rx="2" ry="2" />
<text  x="808.85" y="1583.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (12 samples, 0.20%)</title><rect x="1181.2" y="2053" width="2.4" height="15.0" fill="rgb(210,62,16)" rx="2" ry="2" />
<text  x="1184.22" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (2 samples, 0.03%)</title><rect x="131.3" y="1925" width="0.4" height="15.0" fill="rgb(222,211,18)" rx="2" ry="2" />
<text  x="134.33" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="451.8" y="1749" width="0.2" height="15.0" fill="rgb(251,181,10)" rx="2" ry="2" />
<text  x="454.83" y="1759.5" ></text>
</g>
<g >
<title>iput (1 samples, 0.02%)</title><rect x="358.0" y="1861" width="0.2" height="15.0" fill="rgb(235,9,2)" rx="2" ry="2" />
<text  x="361.03" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="844.4" y="1717" width="0.2" height="15.0" fill="rgb(234,168,10)" rx="2" ry="2" />
<text  x="847.36" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="1145.3" y="1925" width="0.2" height="15.0" fill="rgb(212,165,53)" rx="2" ry="2" />
<text  x="1148.30" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="618.5" y="2021" width="2.4" height="15.0" fill="rgb(213,169,23)" rx="2" ry="2" />
<text  x="621.46" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (13 samples, 0.22%)</title><rect x="375.2" y="1909" width="2.6" height="15.0" fill="rgb(235,145,35)" rx="2" ry="2" />
<text  x="378.20" y="1919.5" ></text>
</g>
<g >
<title>netdev_pick_tx (10 samples, 0.17%)</title><rect x="293.8" y="1701" width="2.0" height="15.0" fill="rgb(254,100,19)" rx="2" ry="2" />
<text  x="296.77" y="1711.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="119.2" y="37" width="0.2" height="15.0" fill="rgb(205,115,31)" rx="2" ry="2" />
<text  x="122.16" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="58.9" y="1685" width="0.2" height="15.0" fill="rgb(235,122,31)" rx="2" ry="2" />
<text  x="61.89" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (11 samples, 0.19%)</title><rect x="514.3" y="1989" width="2.2" height="15.0" fill="rgb(246,92,31)" rx="2" ry="2" />
<text  x="517.29" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (10 samples, 0.17%)</title><rect x="879.9" y="1925" width="2.0" height="15.0" fill="rgb(243,203,0)" rx="2" ry="2" />
<text  x="882.88" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.14%)</title><rect x="628.6" y="1989" width="1.6" height="15.0" fill="rgb(217,205,20)" rx="2" ry="2" />
<text  x="631.64" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="695.5" y="1893" width="0.6" height="15.0" fill="rgb(227,52,21)" rx="2" ry="2" />
<text  x="698.49" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="630.2" y="2005" width="0.2" height="15.0" fill="rgb(243,91,26)" rx="2" ry="2" />
<text  x="633.23" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="479.6" y="1957" width="0.2" height="15.0" fill="rgb(226,134,36)" rx="2" ry="2" />
<text  x="482.57" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="798.3" y="1509" width="0.2" height="15.0" fill="rgb(241,153,25)" rx="2" ry="2" />
<text  x="801.26" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="914.2" y="1717" width="0.2" height="15.0" fill="rgb(207,59,20)" rx="2" ry="2" />
<text  x="917.21" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="516.3" y="1925" width="0.2" height="15.0" fill="rgb(229,60,1)" rx="2" ry="2" />
<text  x="519.28" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="128.1" y="1989" width="0.2" height="15.0" fill="rgb(205,104,23)" rx="2" ry="2" />
<text  x="131.14" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="94.6" y="2005" width="0.8" height="15.0" fill="rgb(254,53,34)" rx="2" ry="2" />
<text  x="97.61" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="63.9" y="1685" width="0.2" height="15.0" fill="rgb(226,122,54)" rx="2" ry="2" />
<text  x="66.88" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1080.6" y="1701" width="0.2" height="15.0" fill="rgb(246,92,28)" rx="2" ry="2" />
<text  x="1083.64" y="1711.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="906.8" y="1989" width="0.2" height="15.0" fill="rgb(248,94,39)" rx="2" ry="2" />
<text  x="909.82" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (6 samples, 0.10%)</title><rect x="539.6" y="1925" width="1.2" height="15.0" fill="rgb(228,183,26)" rx="2" ry="2" />
<text  x="542.63" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (14 samples, 0.24%)</title><rect x="170.8" y="2005" width="2.8" height="15.0" fill="rgb(209,34,28)" rx="2" ry="2" />
<text  x="173.85" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (5 samples, 0.08%)</title><rect x="984.9" y="1909" width="0.9" height="15.0" fill="rgb(213,52,25)" rx="2" ry="2" />
<text  x="987.85" y="1919.5" ></text>
</g>
<g >
<title>ima_file_free (1 samples, 0.02%)</title><rect x="829.4" y="1813" width="0.2" height="15.0" fill="rgb(241,56,31)" rx="2" ry="2" />
<text  x="832.39" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1122.1" y="1717" width="0.2" height="15.0" fill="rgb(207,150,25)" rx="2" ry="2" />
<text  x="1125.15" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="125.5" y="1957" width="0.2" height="15.0" fill="rgb(238,98,39)" rx="2" ry="2" />
<text  x="128.55" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="892.1" y="1909" width="0.2" height="15.0" fill="rgb(213,40,8)" rx="2" ry="2" />
<text  x="895.06" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="650.8" y="2005" width="0.2" height="15.0" fill="rgb(248,12,16)" rx="2" ry="2" />
<text  x="653.79" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="140.3" y="1925" width="0.2" height="15.0" fill="rgb(222,70,45)" rx="2" ry="2" />
<text  x="143.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (9 samples, 0.15%)</title><rect x="1141.1" y="2053" width="1.8" height="15.0" fill="rgb(248,51,54)" rx="2" ry="2" />
<text  x="1144.11" y="2063.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="460.0" y="1589" width="0.2" height="15.0" fill="rgb(234,109,19)" rx="2" ry="2" />
<text  x="463.01" y="1599.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="1101.2" y="1893" width="0.8" height="15.0" fill="rgb(222,14,41)" rx="2" ry="2" />
<text  x="1104.20" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="849.2" y="1909" width="0.2" height="15.0" fill="rgb(218,224,23)" rx="2" ry="2" />
<text  x="852.15" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1067.1" y="1781" width="0.2" height="15.0" fill="rgb(251,99,43)" rx="2" ry="2" />
<text  x="1070.07" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (6 samples, 0.10%)</title><rect x="699.3" y="1989" width="1.2" height="15.0" fill="rgb(247,36,40)" rx="2" ry="2" />
<text  x="702.28" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="990.6" y="1989" width="0.4" height="15.0" fill="rgb(216,14,21)" rx="2" ry="2" />
<text  x="993.64" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="111.6" y="37" width="0.2" height="15.0" fill="rgb(245,209,15)" rx="2" ry="2" />
<text  x="114.58" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="898.4" y="1973" width="0.8" height="15.0" fill="rgb(215,73,41)" rx="2" ry="2" />
<text  x="901.44" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1029" width="16.0" height="15.0" fill="rgb(220,61,9)" rx="2" ry="2" />
<text  x="108.39" y="1039.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (33 samples, 0.56%)</title><rect x="640.2" y="2037" width="6.6" height="15.0" fill="rgb(237,207,45)" rx="2" ry="2" />
<text  x="643.21" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (4 samples, 0.07%)</title><rect x="908.0" y="2005" width="0.8" height="15.0" fill="rgb(236,25,10)" rx="2" ry="2" />
<text  x="911.02" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (12 samples, 0.20%)</title><rect x="847.0" y="1925" width="2.4" height="15.0" fill="rgb(238,19,37)" rx="2" ry="2" />
<text  x="849.96" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="528.9" y="1925" width="0.4" height="15.0" fill="rgb(221,194,39)" rx="2" ry="2" />
<text  x="531.86" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (2 samples, 0.03%)</title><rect x="873.9" y="1957" width="0.4" height="15.0" fill="rgb(251,170,54)" rx="2" ry="2" />
<text  x="876.90" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="340.3" y="1797" width="0.2" height="15.0" fill="rgb(238,151,28)" rx="2" ry="2" />
<text  x="343.27" y="1807.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="549.0" y="1957" width="0.4" height="15.0" fill="rgb(241,119,19)" rx="2" ry="2" />
<text  x="552.01" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="462.0" y="1797" width="0.2" height="15.0" fill="rgb(217,44,20)" rx="2" ry="2" />
<text  x="465.00" y="1807.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="459.4" y="1877" width="0.4" height="15.0" fill="rgb(254,87,25)" rx="2" ry="2" />
<text  x="462.41" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="982.3" y="1941" width="0.6" height="15.0" fill="rgb(213,198,27)" rx="2" ry="2" />
<text  x="985.26" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="528.9" y="1861" width="0.2" height="15.0" fill="rgb(226,149,39)" rx="2" ry="2" />
<text  x="531.86" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="527.7" y="1973" width="0.2" height="15.0" fill="rgb(226,12,50)" rx="2" ry="2" />
<text  x="530.66" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="120.8" y="85" width="0.2" height="15.0" fill="rgb(210,144,17)" rx="2" ry="2" />
<text  x="123.76" y="95.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="373.4" y="1893" width="0.2" height="15.0" fill="rgb(241,61,5)" rx="2" ry="2" />
<text  x="376.40" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (20 samples, 0.34%)</title><rect x="952.3" y="1989" width="4.0" height="15.0" fill="rgb(243,52,36)" rx="2" ry="2" />
<text  x="955.32" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="235.9" y="2021" width="0.2" height="15.0" fill="rgb(243,32,49)" rx="2" ry="2" />
<text  x="238.90" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (2 samples, 0.03%)</title><rect x="848.6" y="1797" width="0.4" height="15.0" fill="rgb(210,52,36)" rx="2" ry="2" />
<text  x="851.55" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="672.3" y="1765" width="0.2" height="15.0" fill="rgb(245,99,13)" rx="2" ry="2" />
<text  x="675.34" y="1775.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (384 samples, 6.49%)</title><rect x="20.0" y="2037" width="76.6" height="15.0" fill="rgb(229,179,2)" rx="2" ry="2" />
<text  x="22.98" y="2047.5" >folly::E..</text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (5 samples, 0.08%)</title><rect x="884.5" y="1925" width="1.0" height="15.0" fill="rgb(215,11,40)" rx="2" ry="2" />
<text  x="887.47" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="340.1" y="1941" width="0.2" height="15.0" fill="rgb(233,85,37)" rx="2" ry="2" />
<text  x="343.07" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="870.3" y="1973" width="0.2" height="15.0" fill="rgb(238,2,5)" rx="2" ry="2" />
<text  x="873.30" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="825.2" y="1717" width="0.2" height="15.0" fill="rgb(227,19,35)" rx="2" ry="2" />
<text  x="828.20" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1145.7" y="1989" width="0.2" height="15.0" fill="rgb(212,42,7)" rx="2" ry="2" />
<text  x="1148.70" y="1999.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.14%)</title><rect x="469.0" y="1925" width="1.6" height="15.0" fill="rgb(210,140,0)" rx="2" ry="2" />
<text  x="471.99" y="1935.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="842.4" y="1861" width="0.2" height="15.0" fill="rgb(228,207,1)" rx="2" ry="2" />
<text  x="845.37" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="575.0" y="1941" width="0.2" height="15.0" fill="rgb(238,210,40)" rx="2" ry="2" />
<text  x="577.96" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="1146.9" y="1877" width="0.8" height="15.0" fill="rgb(221,58,4)" rx="2" ry="2" />
<text  x="1149.89" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="848.6" y="1877" width="0.6" height="15.0" fill="rgb(251,199,51)" rx="2" ry="2" />
<text  x="851.55" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="121.2" y="389" width="0.2" height="15.0" fill="rgb(233,210,48)" rx="2" ry="2" />
<text  x="124.16" y="399.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.2" y="1797" width="0.2" height="15.0" fill="rgb(218,202,54)" rx="2" ry="2" />
<text  x="844.17" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="338.3" y="1717" width="0.2" height="15.0" fill="rgb(239,204,5)" rx="2" ry="2" />
<text  x="341.28" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1179.6" y="2053" width="0.2" height="15.0" fill="rgb(230,93,17)" rx="2" ry="2" />
<text  x="1182.62" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="631.2" y="1989" width="0.2" height="15.0" fill="rgb(251,122,38)" rx="2" ry="2" />
<text  x="634.23" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="965" width="16.0" height="15.0" fill="rgb(216,82,41)" rx="2" ry="2" />
<text  x="108.39" y="975.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="513.1" y="1989" width="0.2" height="15.0" fill="rgb(226,156,53)" rx="2" ry="2" />
<text  x="516.09" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (118 samples, 2.00%)</title><rect x="136.1" y="1973" width="23.6" height="15.0" fill="rgb(209,6,16)" rx="2" ry="2" />
<text  x="139.12" y="1983.5" >f..</text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="255.1" y="1845" width="0.2" height="15.0" fill="rgb(219,120,50)" rx="2" ry="2" />
<text  x="258.06" y="1855.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="580.5" y="2021" width="0.6" height="15.0" fill="rgb(253,6,22)" rx="2" ry="2" />
<text  x="583.54" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="316.5" y="1685" width="0.4" height="15.0" fill="rgb(242,197,29)" rx="2" ry="2" />
<text  x="319.52" y="1695.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="120.0" y="53" width="0.2" height="15.0" fill="rgb(238,140,25)" rx="2" ry="2" />
<text  x="122.96" y="63.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readEOF (1 samples, 0.02%)</title><rect x="94.0" y="1989" width="0.2" height="15.0" fill="rgb(233,162,51)" rx="2" ry="2" />
<text  x="97.01" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="618.7" y="1989" width="0.2" height="15.0" fill="rgb(238,160,25)" rx="2" ry="2" />
<text  x="621.66" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::scheduleTimeout (1 samples, 0.02%)</title><rect x="622.5" y="2037" width="0.2" height="15.0" fill="rgb(233,76,3)" rx="2" ry="2" />
<text  x="625.45" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="568.8" y="1829" width="0.2" height="15.0" fill="rgb(233,15,15)" rx="2" ry="2" />
<text  x="571.77" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="687.1" y="1925" width="0.4" height="15.0" fill="rgb(208,92,2)" rx="2" ry="2" />
<text  x="690.11" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="612.9" y="1973" width="0.4" height="15.0" fill="rgb(223,145,4)" rx="2" ry="2" />
<text  x="615.87" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="602.3" y="1973" width="0.2" height="15.0" fill="rgb(223,189,40)" rx="2" ry="2" />
<text  x="605.29" y="1983.5" ></text>
</g>
<g >
<title>_cond_resched (5 samples, 0.08%)</title><rect x="740.6" y="1765" width="1.0" height="15.0" fill="rgb(213,48,28)" rx="2" ry="2" />
<text  x="743.59" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="900.4" y="1845" width="0.2" height="15.0" fill="rgb(227,123,41)" rx="2" ry="2" />
<text  x="903.44" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="928.2" y="1973" width="0.4" height="15.0" fill="rgb(238,178,17)" rx="2" ry="2" />
<text  x="931.18" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="452.0" y="1893" width="0.2" height="15.0" fill="rgb(224,63,19)" rx="2" ry="2" />
<text  x="455.03" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (7 samples, 0.12%)</title><rect x="843.2" y="1925" width="1.4" height="15.0" fill="rgb(248,154,30)" rx="2" ry="2" />
<text  x="846.16" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (6 samples, 0.10%)</title><rect x="294.6" y="1685" width="1.2" height="15.0" fill="rgb(236,22,47)" rx="2" ry="2" />
<text  x="297.57" y="1695.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="103.8" y="2005" width="0.2" height="15.0" fill="rgb(215,202,16)" rx="2" ry="2" />
<text  x="106.79" y="2015.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="290.2" y="1477" width="0.4" height="15.0" fill="rgb(214,41,11)" rx="2" ry="2" />
<text  x="293.18" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="635.2" y="1909" width="0.2" height="15.0" fill="rgb(205,189,16)" rx="2" ry="2" />
<text  x="638.22" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="459.8" y="1669" width="0.4" height="15.0" fill="rgb(232,184,46)" rx="2" ry="2" />
<text  x="462.81" y="1679.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (1 samples, 0.02%)</title><rect x="862.5" y="1989" width="0.2" height="15.0" fill="rgb(228,140,33)" rx="2" ry="2" />
<text  x="865.52" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (86 samples, 1.45%)</title><rect x="105.0" y="1525" width="17.2" height="15.0" fill="rgb(230,137,50)" rx="2" ry="2" />
<text  x="107.99" y="1535.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="47.9" y="1877" width="0.2" height="15.0" fill="rgb(238,179,25)" rx="2" ry="2" />
<text  x="50.92" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;, folly::Range&lt;char const*&gt;&amp;, char const  (2 samples, 0.03%)</title><rect x="508.9" y="2037" width="0.4" height="15.0" fill="rgb(211,139,39)" rx="2" ry="2" />
<text  x="511.90" y="2047.5" ></text>
</g>
<g >
<title>ep_send_events_proc (89 samples, 1.51%)</title><rect x="490.1" y="1941" width="17.8" height="15.0" fill="rgb(205,128,45)" rx="2" ry="2" />
<text  x="493.14" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (9 samples, 0.15%)</title><rect x="55.1" y="1957" width="1.8" height="15.0" fill="rgb(220,89,24)" rx="2" ry="2" />
<text  x="58.10" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="139.3" y="1941" width="0.8" height="15.0" fill="rgb(213,143,48)" rx="2" ry="2" />
<text  x="142.32" y="1951.5" ></text>
</g>
<g >
<title>__copy_skb_header (4 samples, 0.07%)</title><rect x="805.0" y="1637" width="0.8" height="15.0" fill="rgb(222,197,12)" rx="2" ry="2" />
<text  x="808.05" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="63.9" y="1765" width="0.2" height="15.0" fill="rgb(231,146,4)" rx="2" ry="2" />
<text  x="66.88" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="693.5" y="1861" width="0.2" height="15.0" fill="rgb(236,209,36)" rx="2" ry="2" />
<text  x="696.49" y="1871.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="326.3" y="1877" width="0.2" height="15.0" fill="rgb(209,47,17)" rx="2" ry="2" />
<text  x="329.30" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="1145.7" y="1957" width="0.2" height="15.0" fill="rgb(219,166,24)" rx="2" ry="2" />
<text  x="1148.70" y="1967.5" ></text>
</g>
<g >
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="687.7" y="1877" width="0.8" height="15.0" fill="rgb(254,123,38)" rx="2" ry="2" />
<text  x="690.71" y="1887.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="261.8" y="1781" width="0.2" height="15.0" fill="rgb(244,144,54)" rx="2" ry="2" />
<text  x="264.85" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="117.6" y="37" width="0.4" height="15.0" fill="rgb(237,208,31)" rx="2" ry="2" />
<text  x="120.56" y="47.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="126.5" y="1989" width="0.2" height="15.0" fill="rgb(251,89,17)" rx="2" ry="2" />
<text  x="129.54" y="1999.5" ></text>
</g>
<g >
<title>import_iovec (8 samples, 0.14%)</title><rect x="248.5" y="1925" width="1.6" height="15.0" fill="rgb(206,64,9)" rx="2" ry="2" />
<text  x="251.47" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (1 samples, 0.02%)</title><rect x="1023.0" y="2005" width="0.2" height="15.0" fill="rgb(251,214,31)" rx="2" ry="2" />
<text  x="1025.97" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.71%)</title><rect x="1151.3" y="1957" width="8.4" height="15.0" fill="rgb(220,144,54)" rx="2" ry="2" />
<text  x="1154.29" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="616.1" y="2037" width="0.2" height="15.0" fill="rgb(209,165,5)" rx="2" ry="2" />
<text  x="619.06" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="806.4" y="1653" width="0.2" height="15.0" fill="rgb(219,135,18)" rx="2" ry="2" />
<text  x="809.45" y="1663.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.08%)</title><rect x="11.4" y="2053" width="1.0" height="15.0" fill="rgb(221,145,43)" rx="2" ry="2" />
<text  x="14.40" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="914.2" y="1845" width="0.2" height="15.0" fill="rgb(241,176,22)" rx="2" ry="2" />
<text  x="917.21" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="538.8" y="1861" width="0.8" height="15.0" fill="rgb(254,142,17)" rx="2" ry="2" />
<text  x="541.83" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1080.6" y="1685" width="0.2" height="15.0" fill="rgb(223,57,3)" rx="2" ry="2" />
<text  x="1083.64" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1104.4" y="1797" width="0.2" height="15.0" fill="rgb(239,42,23)" rx="2" ry="2" />
<text  x="1107.39" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="236.1" y="2021" width="0.4" height="15.0" fill="rgb(225,201,19)" rx="2" ry="2" />
<text  x="239.10" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (75 samples, 1.27%)</title><rect x="1149.1" y="2037" width="15.0" height="15.0" fill="rgb(221,159,32)" rx="2" ry="2" />
<text  x="1152.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="912.6" y="2005" width="0.2" height="15.0" fill="rgb(221,102,2)" rx="2" ry="2" />
<text  x="915.61" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="637.8" y="1957" width="0.4" height="15.0" fill="rgb(225,206,12)" rx="2" ry="2" />
<text  x="640.82" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="964.7" y="1941" width="0.2" height="15.0" fill="rgb(229,50,49)" rx="2" ry="2" />
<text  x="967.70" y="1951.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="566.0" y="1653" width="0.2" height="15.0" fill="rgb(229,102,34)" rx="2" ry="2" />
<text  x="568.97" y="1663.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="541.2" y="1893" width="0.2" height="15.0" fill="rgb(230,24,21)" rx="2" ry="2" />
<text  x="544.23" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (110 samples, 1.86%)</title><rect x="137.5" y="1957" width="22.0" height="15.0" fill="rgb(254,212,20)" rx="2" ry="2" />
<text  x="140.52" y="1967.5" >f..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="272.2" y="1829" width="0.2" height="15.0" fill="rgb(221,151,4)" rx="2" ry="2" />
<text  x="275.22" y="1839.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="544.6" y="1877" width="0.2" height="15.0" fill="rgb(242,189,44)" rx="2" ry="2" />
<text  x="547.62" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="619.3" y="2005" width="1.0" height="15.0" fill="rgb(243,182,53)" rx="2" ry="2" />
<text  x="622.26" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="913.0" y="2005" width="0.4" height="15.0" fill="rgb(246,32,35)" rx="2" ry="2" />
<text  x="916.01" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="28.8" y="1973" width="0.2" height="15.0" fill="rgb(241,16,11)" rx="2" ry="2" />
<text  x="31.76" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="474.0" y="1685" width="0.2" height="15.0" fill="rgb(244,106,15)" rx="2" ry="2" />
<text  x="476.98" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1020.6" y="2037" width="0.2" height="15.0" fill="rgb(223,73,44)" rx="2" ry="2" />
<text  x="1023.57" y="2047.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (26 samples, 0.44%)</title><rect x="1127.7" y="2037" width="5.2" height="15.0" fill="rgb(248,54,16)" rx="2" ry="2" />
<text  x="1130.74" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (11 samples, 0.19%)</title><rect x="288.4" y="1605" width="2.2" height="15.0" fill="rgb(221,66,26)" rx="2" ry="2" />
<text  x="291.39" y="1615.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="1146.9" y="1957" width="0.8" height="15.0" fill="rgb(250,51,43)" rx="2" ry="2" />
<text  x="1149.89" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (12 samples, 0.20%)</title><rect x="30.4" y="1989" width="2.3" height="15.0" fill="rgb(241,27,25)" rx="2" ry="2" />
<text  x="33.36" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="156.5" y="1925" width="0.2" height="15.0" fill="rgb(253,78,5)" rx="2" ry="2" />
<text  x="159.48" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="695.5" y="1973" width="0.6" height="15.0" fill="rgb(239,158,0)" rx="2" ry="2" />
<text  x="698.49" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::getReadBuffer (1 samples, 0.02%)</title><rect x="530.1" y="2005" width="0.2" height="15.0" fill="rgb(221,67,16)" rx="2" ry="2" />
<text  x="533.05" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="842.4" y="1893" width="0.6" height="15.0" fill="rgb(225,175,39)" rx="2" ry="2" />
<text  x="845.37" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (2 samples, 0.03%)</title><rect x="838.6" y="1909" width="0.4" height="15.0" fill="rgb(206,68,46)" rx="2" ry="2" />
<text  x="841.57" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="32.6" y="1653" width="0.1" height="15.0" fill="rgb(254,14,1)" rx="2" ry="2" />
<text  x="35.55" y="1663.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="296.2" y="1685" width="0.2" height="15.0" fill="rgb(243,175,43)" rx="2" ry="2" />
<text  x="299.17" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1141" width="16.0" height="15.0" fill="rgb(229,84,50)" rx="2" ry="2" />
<text  x="108.39" y="1151.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="316.5" y="1589" width="0.4" height="15.0" fill="rgb(253,126,32)" rx="2" ry="2" />
<text  x="319.52" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="568.8" y="1813" width="0.2" height="15.0" fill="rgb(212,172,30)" rx="2" ry="2" />
<text  x="571.77" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1072.3" y="1829" width="0.2" height="15.0" fill="rgb(221,221,8)" rx="2" ry="2" />
<text  x="1075.26" y="1839.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (2 samples, 0.03%)</title><rect x="724.8" y="1781" width="0.4" height="15.0" fill="rgb(231,159,29)" rx="2" ry="2" />
<text  x="727.82" y="1791.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="373.4" y="1813" width="0.2" height="15.0" fill="rgb(220,221,2)" rx="2" ry="2" />
<text  x="376.40" y="1823.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="477.4" y="1925" width="0.2" height="15.0" fill="rgb(248,75,44)" rx="2" ry="2" />
<text  x="480.37" y="1935.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="27.6" y="1893" width="0.8" height="15.0" fill="rgb(216,69,23)" rx="2" ry="2" />
<text  x="30.56" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="988.0" y="1877" width="0.2" height="15.0" fill="rgb(209,11,50)" rx="2" ry="2" />
<text  x="991.04" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="842.4" y="1925" width="0.6" height="15.0" fill="rgb(250,84,39)" rx="2" ry="2" />
<text  x="845.37" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="122.6" y="1557" width="0.2" height="15.0" fill="rgb(240,166,33)" rx="2" ry="2" />
<text  x="125.55" y="1567.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="47.1" y="1925" width="0.2" height="15.0" fill="rgb(245,3,12)" rx="2" ry="2" />
<text  x="50.12" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="136.3" y="1941" width="0.2" height="15.0" fill="rgb(237,73,36)" rx="2" ry="2" />
<text  x="139.32" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="246.7" y="1925" width="0.2" height="15.0" fill="rgb(241,4,44)" rx="2" ry="2" />
<text  x="249.68" y="1935.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1088.4" y="1669" width="0.2" height="15.0" fill="rgb(246,59,15)" rx="2" ry="2" />
<text  x="1091.42" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="316.5" y="1557" width="0.4" height="15.0" fill="rgb(251,53,46)" rx="2" ry="2" />
<text  x="319.52" y="1567.5" ></text>
</g>
<g >
<title>sys_futex (4 samples, 0.07%)</title><rect x="10.4" y="2005" width="0.8" height="15.0" fill="rgb(252,19,4)" rx="2" ry="2" />
<text  x="13.40" y="2015.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (1 samples, 0.02%)</title><rect x="358.0" y="1877" width="0.2" height="15.0" fill="rgb(214,219,33)" rx="2" ry="2" />
<text  x="361.03" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (14 samples, 0.24%)</title><rect x="582.1" y="1957" width="2.8" height="15.0" fill="rgb(250,205,52)" rx="2" ry="2" />
<text  x="585.14" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="407.1" y="1925" width="0.6" height="15.0" fill="rgb(225,50,46)" rx="2" ry="2" />
<text  x="410.12" y="1935.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="58.9" y="1893" width="0.2" height="15.0" fill="rgb(237,168,22)" rx="2" ry="2" />
<text  x="61.89" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="861.1" y="1989" width="0.2" height="15.0" fill="rgb(235,196,50)" rx="2" ry="2" />
<text  x="864.12" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="897.6" y="2005" width="0.2" height="15.0" fill="rgb(237,167,8)" rx="2" ry="2" />
<text  x="900.64" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="121.0" y="53" width="0.2" height="15.0" fill="rgb(229,196,18)" rx="2" ry="2" />
<text  x="123.96" y="63.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (226 samples, 3.82%)</title><rect x="435.7" y="1989" width="45.1" height="15.0" fill="rgb(225,111,42)" rx="2" ry="2" />
<text  x="438.66" y="1999.5" >sys_..</text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (69 samples, 1.17%)</title><rect x="21.8" y="2021" width="13.7" height="15.0" fill="rgb(233,72,42)" rx="2" ry="2" />
<text  x="24.77" y="2031.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1090.8" y="1845" width="0.2" height="15.0" fill="rgb(230,31,53)" rx="2" ry="2" />
<text  x="1093.82" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="539.8" y="1893" width="0.8" height="15.0" fill="rgb(214,84,10)" rx="2" ry="2" />
<text  x="542.83" y="1903.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="196.2" y="2037" width="0.2" height="15.0" fill="rgb(210,79,51)" rx="2" ry="2" />
<text  x="199.19" y="2047.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8 samples, 0.14%)</title><rect x="361.8" y="1957" width="1.6" height="15.0" fill="rgb(226,125,10)" rx="2" ry="2" />
<text  x="364.82" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="568.8" y="1749" width="0.2" height="15.0" fill="rgb(243,143,46)" rx="2" ry="2" />
<text  x="571.77" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="969.3" y="1989" width="0.2" height="15.0" fill="rgb(207,82,41)" rx="2" ry="2" />
<text  x="972.29" y="1999.5" ></text>
</g>
<g >
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="293.4" y="1685" width="0.4" height="15.0" fill="rgb(251,80,53)" rx="2" ry="2" />
<text  x="296.38" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (3 samples, 0.05%)</title><rect x="1145.1" y="1989" width="0.6" height="15.0" fill="rgb(245,207,15)" rx="2" ry="2" />
<text  x="1148.10" y="1999.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="284.6" y="1749" width="0.6" height="15.0" fill="rgb(214,186,51)" rx="2" ry="2" />
<text  x="287.59" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.2" y="1813" width="0.2" height="15.0" fill="rgb(208,75,52)" rx="2" ry="2" />
<text  x="844.17" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1049.3" y="1781" width="0.2" height="15.0" fill="rgb(235,49,40)" rx="2" ry="2" />
<text  x="1052.31" y="1791.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="120.6" y="37" width="0.2" height="15.0" fill="rgb(247,25,3)" rx="2" ry="2" />
<text  x="123.56" y="47.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="311.3" y="1605" width="0.2" height="15.0" fill="rgb(223,26,54)" rx="2" ry="2" />
<text  x="314.34" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="1178.4" y="2005" width="0.2" height="15.0" fill="rgb(208,124,51)" rx="2" ry="2" />
<text  x="1181.43" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="29.4" y="1813" width="0.2" height="15.0" fill="rgb(225,180,47)" rx="2" ry="2" />
<text  x="32.36" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1146.1" y="1989" width="0.2" height="15.0" fill="rgb(230,107,0)" rx="2" ry="2" />
<text  x="1149.10" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::getEvent (1 samples, 0.02%)</title><rect x="542.2" y="1973" width="0.2" height="15.0" fill="rgb(240,84,23)" rx="2" ry="2" />
<text  x="545.23" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="246.7" y="1797" width="0.2" height="15.0" fill="rgb(217,22,44)" rx="2" ry="2" />
<text  x="249.68" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="63.9" y="1749" width="0.2" height="15.0" fill="rgb(213,84,14)" rx="2" ry="2" />
<text  x="66.88" y="1759.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="566.0" y="1877" width="0.2" height="15.0" fill="rgb(231,5,28)" rx="2" ry="2" />
<text  x="568.97" y="1887.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="596.7" y="1845" width="0.6" height="15.0" fill="rgb(205,99,2)" rx="2" ry="2" />
<text  x="599.71" y="1855.5" ></text>
</g>
<g >
<title>SYSC_getpeername (23 samples, 0.39%)</title><rect x="667.4" y="1877" width="4.5" height="15.0" fill="rgb(208,27,48)" rx="2" ry="2" />
<text  x="670.35" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="982.1" y="1941" width="0.2" height="15.0" fill="rgb(243,18,53)" rx="2" ry="2" />
<text  x="985.06" y="1951.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="10.4" y="1941" width="0.8" height="15.0" fill="rgb(222,163,54)" rx="2" ry="2" />
<text  x="13.40" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="29.4" y="1925" width="0.2" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="32.36" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="183.6" y="1989" width="0.2" height="15.0" fill="rgb(205,179,14)" rx="2" ry="2" />
<text  x="186.62" y="1999.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1135.3" y="2053" width="0.2" height="15.0" fill="rgb(240,196,26)" rx="2" ry="2" />
<text  x="1138.32" y="2063.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (4 samples, 0.07%)</title><rect x="71.3" y="1877" width="0.8" height="15.0" fill="rgb(230,222,54)" rx="2" ry="2" />
<text  x="74.27" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="373.4" y="1845" width="0.2" height="15.0" fill="rgb(239,172,38)" rx="2" ry="2" />
<text  x="376.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1019.6" y="2037" width="0.2" height="15.0" fill="rgb(251,179,32)" rx="2" ry="2" />
<text  x="1022.58" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.07%)</title><rect x="1088.0" y="1829" width="0.8" height="15.0" fill="rgb(246,56,1)" rx="2" ry="2" />
<text  x="1091.02" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (4 samples, 0.07%)</title><rect x="226.3" y="1877" width="0.8" height="15.0" fill="rgb(234,58,38)" rx="2" ry="2" />
<text  x="229.32" y="1887.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="676.5" y="2021" width="0.2" height="15.0" fill="rgb(218,79,32)" rx="2" ry="2" />
<text  x="679.53" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.24%)</title><rect x="946.5" y="2005" width="2.8" height="15.0" fill="rgb(252,169,39)" rx="2" ry="2" />
<text  x="949.54" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="763.1" y="1525" width="0.2" height="15.0" fill="rgb(244,130,8)" rx="2" ry="2" />
<text  x="766.14" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="918.8" y="1909" width="0.4" height="15.0" fill="rgb(239,119,14)" rx="2" ry="2" />
<text  x="921.80" y="1919.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (7 samples, 0.12%)</title><rect x="750.8" y="1717" width="1.4" height="15.0" fill="rgb(209,166,40)" rx="2" ry="2" />
<text  x="753.77" y="1727.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="862.3" y="1941" width="0.2" height="15.0" fill="rgb(227,90,25)" rx="2" ry="2" />
<text  x="865.32" y="1951.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1089.0" y="1861" width="0.2" height="15.0" fill="rgb(235,2,10)" rx="2" ry="2" />
<text  x="1092.02" y="1871.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="672.1" y="1909" width="0.2" height="15.0" fill="rgb(232,77,53)" rx="2" ry="2" />
<text  x="675.14" y="1919.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="598.3" y="1877" width="0.2" height="15.0" fill="rgb(221,208,13)" rx="2" ry="2" />
<text  x="601.30" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="702.3" y="1989" width="0.2" height="15.0" fill="rgb(237,8,46)" rx="2" ry="2" />
<text  x="705.27" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="921.8" y="1957" width="0.2" height="15.0" fill="rgb(240,193,17)" rx="2" ry="2" />
<text  x="924.79" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init_header (1 samples, 0.02%)</title><rect x="142.5" y="1861" width="0.2" height="15.0" fill="rgb(253,82,31)" rx="2" ry="2" />
<text  x="145.51" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="528.7" y="1877" width="0.2" height="15.0" fill="rgb(237,68,39)" rx="2" ry="2" />
<text  x="531.66" y="1887.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="399.5" y="1813" width="0.2" height="15.0" fill="rgb(215,180,52)" rx="2" ry="2" />
<text  x="402.54" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="865.1" y="1893" width="0.2" height="15.0" fill="rgb(245,142,7)" rx="2" ry="2" />
<text  x="868.12" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="120.2" y="37" width="0.2" height="15.0" fill="rgb(254,190,48)" rx="2" ry="2" />
<text  x="123.16" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="474.0" y="1653" width="0.2" height="15.0" fill="rgb(206,189,5)" rx="2" ry="2" />
<text  x="476.98" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (5 samples, 0.08%)</title><rect x="538.6" y="1925" width="1.0" height="15.0" fill="rgb(210,74,1)" rx="2" ry="2" />
<text  x="541.64" y="1935.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="256.1" y="1893" width="0.2" height="15.0" fill="rgb(250,132,1)" rx="2" ry="2" />
<text  x="259.06" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="63.9" y="1621" width="0.2" height="15.0" fill="rgb(213,122,32)" rx="2" ry="2" />
<text  x="66.88" y="1631.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1115.4" y="1717" width="0.2" height="15.0" fill="rgb(219,38,44)" rx="2" ry="2" />
<text  x="1118.36" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1139.5" y="1989" width="0.2" height="15.0" fill="rgb(237,120,3)" rx="2" ry="2" />
<text  x="1142.51" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (2 samples, 0.03%)</title><rect x="1166.3" y="2053" width="0.4" height="15.0" fill="rgb(230,64,35)" rx="2" ry="2" />
<text  x="1169.25" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (1 samples, 0.02%)</title><rect x="510.5" y="2005" width="0.2" height="15.0" fill="rgb(244,11,44)" rx="2" ry="2" />
<text  x="513.50" y="2015.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (11 samples, 0.19%)</title><rect x="247.9" y="1941" width="2.2" height="15.0" fill="rgb(220,131,45)" rx="2" ry="2" />
<text  x="250.88" y="1951.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1083.8" y="1877" width="0.8" height="15.0" fill="rgb(231,184,4)" rx="2" ry="2" />
<text  x="1086.83" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (9 samples, 0.15%)</title><rect x="222.7" y="1909" width="1.8" height="15.0" fill="rgb(219,6,4)" rx="2" ry="2" />
<text  x="225.73" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="132.7" y="1941" width="0.6" height="15.0" fill="rgb(219,101,1)" rx="2" ry="2" />
<text  x="135.73" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="316.5" y="1717" width="0.4" height="15.0" fill="rgb(208,81,48)" rx="2" ry="2" />
<text  x="319.52" y="1727.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="457.8" y="1877" width="0.2" height="15.0" fill="rgb(222,163,23)" rx="2" ry="2" />
<text  x="460.81" y="1887.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="155.7" y="1909" width="0.8" height="15.0" fill="rgb(251,163,38)" rx="2" ry="2" />
<text  x="158.68" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (12 samples, 0.20%)</title><rect x="1116.0" y="1925" width="2.4" height="15.0" fill="rgb(239,118,6)" rx="2" ry="2" />
<text  x="1118.96" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (15 samples, 0.25%)</title><rect x="537.8" y="1957" width="3.0" height="15.0" fill="rgb(210,18,14)" rx="2" ry="2" />
<text  x="540.84" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="614.3" y="1909" width="0.2" height="15.0" fill="rgb(231,156,36)" rx="2" ry="2" />
<text  x="617.27" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (100 samples, 1.69%)</title><rect x="655.8" y="2005" width="19.9" height="15.0" fill="rgb(234,167,36)" rx="2" ry="2" />
<text  x="658.78" y="2015.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="279.4" y="1813" width="0.4" height="15.0" fill="rgb(207,80,2)" rx="2" ry="2" />
<text  x="282.41" y="1823.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="340.1" y="1957" width="0.2" height="15.0" fill="rgb(212,38,10)" rx="2" ry="2" />
<text  x="343.07" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (3 samples, 0.05%)</title><rect x="109.2" y="37" width="0.6" height="15.0" fill="rgb(233,144,48)" rx="2" ry="2" />
<text  x="112.18" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (1 samples, 0.02%)</title><rect x="1167.6" y="2053" width="0.2" height="15.0" fill="rgb(242,51,24)" rx="2" ry="2" />
<text  x="1170.65" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="912.6" y="2037" width="0.4" height="15.0" fill="rgb(205,132,26)" rx="2" ry="2" />
<text  x="915.61" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="458.0" y="1781" width="0.2" height="15.0" fill="rgb(251,49,39)" rx="2" ry="2" />
<text  x="461.01" y="1791.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1174.4" y="1941" width="0.2" height="15.0" fill="rgb(228,172,3)" rx="2" ry="2" />
<text  x="1177.43" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="867.3" y="1957" width="0.2" height="15.0" fill="rgb(248,134,35)" rx="2" ry="2" />
<text  x="870.31" y="1967.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (1 samples, 0.02%)</title><rect x="1171.0" y="2021" width="0.2" height="15.0" fill="rgb(243,110,38)" rx="2" ry="2" />
<text  x="1174.04" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="695.5" y="1957" width="0.6" height="15.0" fill="rgb(253,125,11)" rx="2" ry="2" />
<text  x="698.49" y="1967.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1909" width="0.2" height="15.0" fill="rgb(209,55,6)" rx="2" ry="2" />
<text  x="1143.31" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="602.3" y="1893" width="0.2" height="15.0" fill="rgb(229,177,42)" rx="2" ry="2" />
<text  x="605.29" y="1903.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="900.4" y="1669" width="0.2" height="15.0" fill="rgb(205,199,4)" rx="2" ry="2" />
<text  x="903.44" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="210.8" y="2005" width="0.2" height="15.0" fill="rgb(210,53,38)" rx="2" ry="2" />
<text  x="213.76" y="2015.5" ></text>
</g>
<g >
<title>sys_recvfrom (389 samples, 6.58%)</title><rect x="1049.7" y="2005" width="77.6" height="15.0" fill="rgb(205,16,54)" rx="2" ry="2" />
<text  x="1052.71" y="2015.5" >sys_recv..</text>
</g>
<g >
<title>__skb_clone (28 samples, 0.47%)</title><rect x="311.5" y="1797" width="5.6" height="15.0" fill="rgb(223,42,9)" rx="2" ry="2" />
<text  x="314.54" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1237" width="16.0" height="15.0" fill="rgb(241,10,8)" rx="2" ry="2" />
<text  x="108.39" y="1247.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="53.9" y="1653" width="0.2" height="15.0" fill="rgb(243,186,47)" rx="2" ry="2" />
<text  x="56.90" y="1663.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="120.6" y="149" width="0.2" height="15.0" fill="rgb(214,25,50)" rx="2" ry="2" />
<text  x="123.56" y="159.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="91.0" y="1701" width="0.2" height="15.0" fill="rgb(230,196,35)" rx="2" ry="2" />
<text  x="94.02" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (11 samples, 0.19%)</title><rect x="171.2" y="1941" width="2.2" height="15.0" fill="rgb(229,126,54)" rx="2" ry="2" />
<text  x="174.24" y="1951.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="274.4" y="1765" width="0.2" height="15.0" fill="rgb(248,21,7)" rx="2" ry="2" />
<text  x="277.42" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="969.3" y="1829" width="0.2" height="15.0" fill="rgb(205,160,20)" rx="2" ry="2" />
<text  x="972.29" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="617.9" y="2005" width="0.2" height="15.0" fill="rgb(206,65,1)" rx="2" ry="2" />
<text  x="620.86" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="971.5" y="2037" width="0.2" height="15.0" fill="rgb(211,44,38)" rx="2" ry="2" />
<text  x="974.48" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (6 samples, 0.10%)</title><rect x="136.1" y="1957" width="1.2" height="15.0" fill="rgb(234,101,47)" rx="2" ry="2" />
<text  x="139.12" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="909.4" y="1941" width="0.2" height="15.0" fill="rgb(235,42,44)" rx="2" ry="2" />
<text  x="912.42" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (103 samples, 1.74%)</title><rect x="655.8" y="2021" width="20.5" height="15.0" fill="rgb(216,146,42)" rx="2" ry="2" />
<text  x="658.78" y="2031.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="125.7" y="1973" width="0.2" height="15.0" fill="rgb(220,65,6)" rx="2" ry="2" />
<text  x="128.74" y="1983.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1189.4" y="2021" width="0.4" height="15.0" fill="rgb(225,140,0)" rx="2" ry="2" />
<text  x="1192.40" y="2031.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="318.7" y="1685" width="0.2" height="15.0" fill="rgb(231,109,50)" rx="2" ry="2" />
<text  x="321.72" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (85 samples, 1.44%)</title><rect x="105.0" y="1365" width="17.0" height="15.0" fill="rgb(207,170,25)" rx="2" ry="2" />
<text  x="107.99" y="1375.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="460.0" y="1541" width="0.2" height="15.0" fill="rgb(254,30,11)" rx="2" ry="2" />
<text  x="463.01" y="1551.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (17 samples, 0.29%)</title><rect x="130.3" y="1973" width="3.4" height="15.0" fill="rgb(222,74,33)" rx="2" ry="2" />
<text  x="133.33" y="1983.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="996.2" y="1973" width="0.2" height="15.0" fill="rgb(240,9,14)" rx="2" ry="2" />
<text  x="999.23" y="1983.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="465.4" y="1941" width="0.2" height="15.0" fill="rgb(239,100,17)" rx="2" ry="2" />
<text  x="468.40" y="1951.5" ></text>
</g>
<g >
<title>sched_clock_cpu (6 samples, 0.10%)</title><rect x="807.6" y="1685" width="1.2" height="15.0" fill="rgb(249,87,30)" rx="2" ry="2" />
<text  x="810.64" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1145.7" y="1973" width="0.2" height="15.0" fill="rgb(210,13,16)" rx="2" ry="2" />
<text  x="1148.70" y="1983.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (2 samples, 0.03%)</title><rect x="537.2" y="1957" width="0.4" height="15.0" fill="rgb(222,120,46)" rx="2" ry="2" />
<text  x="540.24" y="1967.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="162.5" y="2021" width="0.2" height="15.0" fill="rgb(251,187,42)" rx="2" ry="2" />
<text  x="165.46" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="27.6" y="1829" width="0.8" height="15.0" fill="rgb(234,134,42)" rx="2" ry="2" />
<text  x="30.56" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="841.4" y="1909" width="0.6" height="15.0" fill="rgb(239,144,52)" rx="2" ry="2" />
<text  x="844.37" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="172.2" y="1909" width="1.0" height="15.0" fill="rgb(213,205,40)" rx="2" ry="2" />
<text  x="175.24" y="1919.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.05%)</title><rect x="399.1" y="1861" width="0.6" height="15.0" fill="rgb(246,170,19)" rx="2" ry="2" />
<text  x="402.14" y="1871.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (192 samples, 3.25%)</title><rect x="769.3" y="1685" width="38.3" height="15.0" fill="rgb(247,106,31)" rx="2" ry="2" />
<text  x="772.33" y="1695.5" >__t..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1122.1" y="1701" width="0.2" height="15.0" fill="rgb(212,211,54)" rx="2" ry="2" />
<text  x="1125.15" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (20 samples, 0.34%)</title><rect x="296.4" y="1685" width="4.0" height="15.0" fill="rgb(211,179,18)" rx="2" ry="2" />
<text  x="299.37" y="1695.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="520.9" y="1941" width="0.2" height="15.0" fill="rgb(218,55,3)" rx="2" ry="2" />
<text  x="523.87" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="903.4" y="1973" width="0.2" height="15.0" fill="rgb(242,50,33)" rx="2" ry="2" />
<text  x="906.43" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="28.6" y="1989" width="0.4" height="15.0" fill="rgb(252,34,30)" rx="2" ry="2" />
<text  x="31.56" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="524.9" y="1941" width="0.2" height="15.0" fill="rgb(253,86,40)" rx="2" ry="2" />
<text  x="527.87" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="338.3" y="1861" width="0.2" height="15.0" fill="rgb(242,15,20)" rx="2" ry="2" />
<text  x="341.28" y="1871.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="1146.9" y="1861" width="0.8" height="15.0" fill="rgb(238,202,16)" rx="2" ry="2" />
<text  x="1149.89" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (144 samples, 2.44%)</title><rect x="772.1" y="1669" width="28.8" height="15.0" fill="rgb(214,0,50)" rx="2" ry="2" />
<text  x="775.12" y="1679.5" >ip..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="844.4" y="1509" width="0.2" height="15.0" fill="rgb(249,73,10)" rx="2" ry="2" />
<text  x="847.36" y="1519.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="813.4" y="1605" width="0.2" height="15.0" fill="rgb(231,150,41)" rx="2" ry="2" />
<text  x="816.43" y="1615.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1109.6" y="1525" width="0.2" height="15.0" fill="rgb(212,173,44)" rx="2" ry="2" />
<text  x="1112.58" y="1535.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.25%)</title><rect x="12.6" y="2053" width="3.0" height="15.0" fill="rgb(213,135,27)" rx="2" ry="2" />
<text  x="15.59" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (3 samples, 0.05%)</title><rect x="56.9" y="1973" width="0.6" height="15.0" fill="rgb(217,134,29)" rx="2" ry="2" />
<text  x="59.90" y="1983.5" ></text>
</g>
<g >
<title>__fget (11 samples, 0.19%)</title><rect x="336.3" y="1909" width="2.2" height="15.0" fill="rgb(224,113,22)" rx="2" ry="2" />
<text  x="339.28" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1083.2" y="1813" width="0.2" height="15.0" fill="rgb(232,24,30)" rx="2" ry="2" />
<text  x="1086.24" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="619.5" y="1941" width="0.2" height="15.0" fill="rgb(251,32,6)" rx="2" ry="2" />
<text  x="622.46" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="285.2" y="1749" width="0.2" height="15.0" fill="rgb(218,128,27)" rx="2" ry="2" />
<text  x="288.19" y="1759.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="115.8" y="37" width="0.2" height="15.0" fill="rgb(216,212,4)" rx="2" ry="2" />
<text  x="118.77" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::Notifier::drainWhileNonEmpty&lt;facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::drain (1 samples, 0.02%)</title><rect x="137.3" y="1957" width="0.2" height="15.0" fill="rgb(213,31,13)" rx="2" ry="2" />
<text  x="140.32" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="287.8" y="1621" width="0.2" height="15.0" fill="rgb(225,205,28)" rx="2" ry="2" />
<text  x="290.79" y="1631.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="201.2" y="2037" width="0.4" height="15.0" fill="rgb(207,52,54)" rx="2" ry="2" />
<text  x="204.18" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1083.2" y="1861" width="0.2" height="15.0" fill="rgb(245,57,15)" rx="2" ry="2" />
<text  x="1086.24" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="601.9" y="2005" width="0.2" height="15.0" fill="rgb(238,68,24)" rx="2" ry="2" />
<text  x="604.90" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="127.5" y="1989" width="0.2" height="15.0" fill="rgb(226,60,33)" rx="2" ry="2" />
<text  x="130.54" y="1999.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="232.1" y="1893" width="0.2" height="15.0" fill="rgb(246,121,14)" rx="2" ry="2" />
<text  x="235.11" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="100.6" y="1941" width="0.2" height="15.0" fill="rgb(230,107,36)" rx="2" ry="2" />
<text  x="103.60" y="1951.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="393.0" y="1877" width="0.2" height="15.0" fill="rgb(235,79,52)" rx="2" ry="2" />
<text  x="395.96" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (122 samples, 2.06%)</title><rect x="652.4" y="2037" width="24.3" height="15.0" fill="rgb(220,79,41)" rx="2" ry="2" />
<text  x="655.38" y="2047.5" >f..</text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="693.1" y="1861" width="0.4" height="15.0" fill="rgb(211,206,13)" rx="2" ry="2" />
<text  x="696.09" y="1871.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1090.4" y="1893" width="0.4" height="15.0" fill="rgb(208,151,51)" rx="2" ry="2" />
<text  x="1093.42" y="1903.5" ></text>
</g>
<g >
<title>event_assign (2 samples, 0.03%)</title><rect x="162.9" y="2021" width="0.4" height="15.0" fill="rgb(251,163,36)" rx="2" ry="2" />
<text  x="165.86" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="363.2" y="1877" width="0.2" height="15.0" fill="rgb(241,92,51)" rx="2" ry="2" />
<text  x="366.22" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1173" width="16.0" height="15.0" fill="rgb(208,83,50)" rx="2" ry="2" />
<text  x="108.39" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="909.4" y="1813" width="0.2" height="15.0" fill="rgb(206,30,14)" rx="2" ry="2" />
<text  x="912.42" y="1823.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="754.6" y="1733" width="0.2" height="15.0" fill="rgb(231,97,21)" rx="2" ry="2" />
<text  x="757.56" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="113.6" y="37" width="0.2" height="15.0" fill="rgb(254,155,53)" rx="2" ry="2" />
<text  x="116.57" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="672.3" y="1845" width="0.2" height="15.0" fill="rgb(214,136,32)" rx="2" ry="2" />
<text  x="675.34" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (84 samples, 1.42%)</title><rect x="105.0" y="1349" width="16.8" height="15.0" fill="rgb(213,189,27)" rx="2" ry="2" />
<text  x="107.99" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="1109" width="16.0" height="15.0" fill="rgb(220,118,14)" rx="2" ry="2" />
<text  x="108.39" y="1119.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="909.4" y="1973" width="0.2" height="15.0" fill="rgb(208,192,38)" rx="2" ry="2" />
<text  x="912.42" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (2 samples, 0.03%)</title><rect x="895.0" y="2005" width="0.4" height="15.0" fill="rgb(243,27,27)" rx="2" ry="2" />
<text  x="898.05" y="2015.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="251.9" y="1893" width="0.6" height="15.0" fill="rgb(209,21,15)" rx="2" ry="2" />
<text  x="254.87" y="1903.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="980.7" y="1973" width="0.2" height="15.0" fill="rgb(232,120,23)" rx="2" ry="2" />
<text  x="983.66" y="1983.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="740.8" y="1653" width="0.6" height="15.0" fill="rgb(253,222,28)" rx="2" ry="2" />
<text  x="743.79" y="1663.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="373.4" y="1605" width="0.2" height="15.0" fill="rgb(212,60,23)" rx="2" ry="2" />
<text  x="376.40" y="1615.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.02%)</title><rect x="1083.2" y="1717" width="0.2" height="15.0" fill="rgb(235,162,18)" rx="2" ry="2" />
<text  x="1086.24" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="474.0" y="1861" width="0.2" height="15.0" fill="rgb(232,66,24)" rx="2" ry="2" />
<text  x="476.98" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="900.4" y="1877" width="0.2" height="15.0" fill="rgb(252,63,50)" rx="2" ry="2" />
<text  x="903.44" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="646.4" y="1909" width="0.2" height="15.0" fill="rgb(227,127,41)" rx="2" ry="2" />
<text  x="649.40" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="1140.5" y="1957" width="0.4" height="15.0" fill="rgb(228,42,36)" rx="2" ry="2" />
<text  x="1143.51" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="134.9" y="1973" width="0.2" height="15.0" fill="rgb(227,22,34)" rx="2" ry="2" />
<text  x="137.92" y="1983.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.02%)</title><rect x="1109.4" y="1493" width="0.2" height="15.0" fill="rgb(220,148,52)" rx="2" ry="2" />
<text  x="1112.38" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="704.7" y="1989" width="0.2" height="15.0" fill="rgb(219,68,34)" rx="2" ry="2" />
<text  x="707.67" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="944.9" y="1989" width="0.6" height="15.0" fill="rgb(216,181,6)" rx="2" ry="2" />
<text  x="947.94" y="1999.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (109 samples, 1.84%)</title><rect x="677.1" y="2005" width="21.8" height="15.0" fill="rgb(210,153,5)" rx="2" ry="2" />
<text  x="680.13" y="2015.5" >f..</text>
</g>
<g >
<title>tcp_current_mss (17 samples, 0.29%)</title><rect x="821.8" y="1717" width="3.4" height="15.0" fill="rgb(210,102,9)" rx="2" ry="2" />
<text  x="824.81" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.6" y="1893" width="0.2" height="15.0" fill="rgb(249,4,1)" rx="2" ry="2" />
<text  x="543.63" y="1903.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="866.3" y="2005" width="0.2" height="15.0" fill="rgb(225,117,3)" rx="2" ry="2" />
<text  x="869.31" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.03%)</title><rect x="529.7" y="1925" width="0.4" height="15.0" fill="rgb(247,152,0)" rx="2" ry="2" />
<text  x="532.65" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="174.4" y="2021" width="0.2" height="15.0" fill="rgb(234,77,19)" rx="2" ry="2" />
<text  x="177.44" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1184.4" y="2037" width="0.2" height="15.0" fill="rgb(225,200,49)" rx="2" ry="2" />
<text  x="1187.41" y="2047.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (1 samples, 0.02%)</title><rect x="521.9" y="1973" width="0.2" height="15.0" fill="rgb(218,69,17)" rx="2" ry="2" />
<text  x="524.87" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="1180.4" y="2037" width="0.8" height="15.0" fill="rgb(210,87,46)" rx="2" ry="2" />
<text  x="1183.42" y="2047.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.8" y="1333" width="0.2" height="15.0" fill="rgb(246,51,50)" rx="2" ry="2" />
<text  x="124.75" y="1343.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1049.3" y="1765" width="0.2" height="15.0" fill="rgb(208,48,36)" rx="2" ry="2" />
<text  x="1052.31" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1027.6" y="2021" width="0.2" height="15.0" fill="rgb(240,78,7)" rx="2" ry="2" />
<text  x="1030.56" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11 samples, 0.19%)</title><rect x="322.5" y="1733" width="2.2" height="15.0" fill="rgb(210,30,40)" rx="2" ry="2" />
<text  x="325.51" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="873.5" y="1925" width="0.4" height="15.0" fill="rgb(225,161,20)" rx="2" ry="2" />
<text  x="876.50" y="1935.5" ></text>
</g>
<g >
<title>__ip_local_out (9 samples, 0.15%)</title><rect x="773.3" y="1637" width="1.8" height="15.0" fill="rgb(212,13,15)" rx="2" ry="2" />
<text  x="776.32" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1122.1" y="1653" width="0.2" height="15.0" fill="rgb(226,187,28)" rx="2" ry="2" />
<text  x="1125.15" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (95 samples, 1.61%)</title><rect x="104.4" y="1749" width="19.0" height="15.0" fill="rgb(253,88,30)" rx="2" ry="2" />
<text  x="107.39" y="1759.5" ></text>
</g>
<g >
<title>__slab_free (9 samples, 0.15%)</title><rect x="1112.6" y="1429" width="1.8" height="15.0" fill="rgb(211,188,52)" rx="2" ry="2" />
<text  x="1115.57" y="1439.5" ></text>
</g>
<g >
<title>jump_fcontext (14 samples, 0.24%)</title><rect x="991.0" y="2005" width="2.8" height="15.0" fill="rgb(228,73,0)" rx="2" ry="2" />
<text  x="994.04" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (1 samples, 0.02%)</title><rect x="1148.5" y="2053" width="0.2" height="15.0" fill="rgb(246,93,32)" rx="2" ry="2" />
<text  x="1151.49" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="340.3" y="1829" width="0.2" height="15.0" fill="rgb(246,47,13)" rx="2" ry="2" />
<text  x="343.27" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (5 samples, 0.08%)</title><rect x="34.3" y="1973" width="1.0" height="15.0" fill="rgb(213,209,41)" rx="2" ry="2" />
<text  x="37.35" y="1983.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="248.1" y="1925" width="0.2" height="15.0" fill="rgb(227,85,20)" rx="2" ry="2" />
<text  x="251.08" y="1935.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="32.6" y="1605" width="0.1" height="15.0" fill="rgb(221,84,27)" rx="2" ry="2" />
<text  x="35.55" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="616.3" y="2037" width="0.2" height="15.0" fill="rgb(221,167,50)" rx="2" ry="2" />
<text  x="619.26" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1088.6" y="1765" width="0.2" height="15.0" fill="rgb(209,30,48)" rx="2" ry="2" />
<text  x="1091.62" y="1775.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="764.9" y="1669" width="0.4" height="15.0" fill="rgb(235,142,40)" rx="2" ry="2" />
<text  x="767.94" y="1679.5" ></text>
</g>
<g >
<title>mod_timer (17 samples, 0.29%)</title><rect x="812.0" y="1621" width="3.4" height="15.0" fill="rgb(227,40,4)" rx="2" ry="2" />
<text  x="815.03" y="1631.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.08%)</title><rect x="672.5" y="1925" width="1.0" height="15.0" fill="rgb(227,15,53)" rx="2" ry="2" />
<text  x="675.54" y="1935.5" ></text>
</g>
<g >
<title>carbon-global-s (6 samples, 0.10%)</title><rect x="10.0" y="2069" width="1.2" height="15.0" fill="rgb(207,160,24)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="133.5" y="1877" width="0.2" height="15.0" fill="rgb(238,198,42)" rx="2" ry="2" />
<text  x="136.53" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="516.3" y="1941" width="0.2" height="15.0" fill="rgb(233,117,39)" rx="2" ry="2" />
<text  x="519.28" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (5 samples, 0.08%)</title><rect x="575.2" y="1989" width="1.0" height="15.0" fill="rgb(250,84,23)" rx="2" ry="2" />
<text  x="578.15" y="1999.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="516.5" y="1957" width="0.2" height="15.0" fill="rgb(221,188,32)" rx="2" ry="2" />
<text  x="519.48" y="1967.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="121.2" y="181" width="0.2" height="15.0" fill="rgb(233,10,25)" rx="2" ry="2" />
<text  x="124.16" y="191.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (5 samples, 0.08%)</title><rect x="621.3" y="2037" width="1.0" height="15.0" fill="rgb(226,50,51)" rx="2" ry="2" />
<text  x="624.25" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="964.7" y="1909" width="0.2" height="15.0" fill="rgb(252,60,39)" rx="2" ry="2" />
<text  x="967.70" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="861.3" y="1989" width="1.2" height="15.0" fill="rgb(251,60,42)" rx="2" ry="2" />
<text  x="864.32" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="40.7" y="1989" width="0.2" height="15.0" fill="rgb(254,133,10)" rx="2" ry="2" />
<text  x="43.73" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (13 samples, 0.22%)</title><rect x="1167.8" y="2053" width="2.6" height="15.0" fill="rgb(229,91,21)" rx="2" ry="2" />
<text  x="1170.85" y="2063.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1173.6" y="1941" width="0.2" height="15.0" fill="rgb(243,101,29)" rx="2" ry="2" />
<text  x="1176.64" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="177.4" y="1941" width="0.2" height="15.0" fill="rgb(245,40,7)" rx="2" ry="2" />
<text  x="180.43" y="1951.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="508.1" y="1957" width="0.2" height="15.0" fill="rgb(246,70,1)" rx="2" ry="2" />
<text  x="511.10" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="1052.7" y="1957" width="0.6" height="15.0" fill="rgb(208,189,44)" rx="2" ry="2" />
<text  x="1055.70" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="1067.9" y="1637" width="0.2" height="15.0" fill="rgb(239,144,46)" rx="2" ry="2" />
<text  x="1070.87" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="186.6" y="2021" width="0.2" height="15.0" fill="rgb(232,153,7)" rx="2" ry="2" />
<text  x="189.61" y="2031.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="12.8" y="1829" width="0.2" height="15.0" fill="rgb(247,36,5)" rx="2" ry="2" />
<text  x="15.79" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="459.8" y="1797" width="0.4" height="15.0" fill="rgb(238,181,27)" rx="2" ry="2" />
<text  x="462.81" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1104.4" y="1781" width="0.2" height="15.0" fill="rgb(240,22,4)" rx="2" ry="2" />
<text  x="1107.39" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (300 samples, 5.07%)</title><rect x="35.5" y="2021" width="59.9" height="15.0" fill="rgb(249,35,7)" rx="2" ry="2" />
<text  x="38.54" y="2031.5" >folly:..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="901.4" y="1973" width="0.2" height="15.0" fill="rgb(229,112,40)" rx="2" ry="2" />
<text  x="904.44" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="459.8" y="1813" width="0.4" height="15.0" fill="rgb(241,174,9)" rx="2" ry="2" />
<text  x="462.81" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (9 samples, 0.15%)</title><rect x="33.5" y="1989" width="1.8" height="15.0" fill="rgb(234,224,49)" rx="2" ry="2" />
<text  x="36.55" y="1999.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (12 samples, 0.20%)</title><rect x="336.1" y="1957" width="2.4" height="15.0" fill="rgb(253,146,17)" rx="2" ry="2" />
<text  x="339.08" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1140.3" y="1973" width="0.2" height="15.0" fill="rgb(223,183,51)" rx="2" ry="2" />
<text  x="1143.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (3 samples, 0.05%)</title><rect x="911.6" y="2037" width="0.6" height="15.0" fill="rgb(235,224,19)" rx="2" ry="2" />
<text  x="914.61" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="544.6" y="1893" width="0.4" height="15.0" fill="rgb(213,126,45)" rx="2" ry="2" />
<text  x="547.62" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.34%)</title><rect x="952.3" y="2005" width="4.0" height="15.0" fill="rgb(208,110,37)" rx="2" ry="2" />
<text  x="955.32" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.83%)</title><rect x="630.4" y="2005" width="9.8" height="15.0" fill="rgb(228,161,39)" rx="2" ry="2" />
<text  x="633.43" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="519.1" y="1941" width="0.8" height="15.0" fill="rgb(245,189,22)" rx="2" ry="2" />
<text  x="522.08" y="1951.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="23.2" y="2005" width="0.2" height="15.0" fill="rgb(245,79,16)" rx="2" ry="2" />
<text  x="26.17" y="2015.5" ></text>
</g>
<g >
<title>__GI___getsockname (83 samples, 1.40%)</title><rect x="585.1" y="1941" width="16.6" height="15.0" fill="rgb(215,185,8)" rx="2" ry="2" />
<text  x="588.13" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="844.4" y="1493" width="0.2" height="15.0" fill="rgb(228,114,19)" rx="2" ry="2" />
<text  x="847.36" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="884.1" y="1685" width="0.2" height="15.0" fill="rgb(222,188,7)" rx="2" ry="2" />
<text  x="887.07" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="573.0" y="1973" width="0.4" height="15.0" fill="rgb(211,186,17)" rx="2" ry="2" />
<text  x="575.96" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="120.8" y="101" width="0.2" height="15.0" fill="rgb(251,207,47)" rx="2" ry="2" />
<text  x="123.76" y="111.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="121.2" y="165" width="0.2" height="15.0" fill="rgb(248,78,17)" rx="2" ry="2" />
<text  x="124.16" y="175.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="363.2" y="1845" width="0.2" height="15.0" fill="rgb(221,182,22)" rx="2" ry="2" />
<text  x="366.22" y="1855.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="1183.8" y="2021" width="0.6" height="15.0" fill="rgb(224,171,21)" rx="2" ry="2" />
<text  x="1186.81" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="721.4" y="1749" width="0.2" height="15.0" fill="rgb(242,209,28)" rx="2" ry="2" />
<text  x="724.43" y="1759.5" ></text>
</g>
<g >
<title>siphash_1u64 (1 samples, 0.02%)</title><rect x="964.7" y="1653" width="0.2" height="15.0" fill="rgb(235,126,27)" rx="2" ry="2" />
<text  x="967.70" y="1663.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="1178.0" y="1957" width="0.4" height="15.0" fill="rgb(229,149,44)" rx="2" ry="2" />
<text  x="1181.03" y="1967.5" ></text>
</g>
<g >
<title>down_write (4 samples, 0.07%)</title><rect x="744.2" y="1765" width="0.8" height="15.0" fill="rgb(242,54,28)" rx="2" ry="2" />
<text  x="747.18" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="615.3" y="2021" width="0.2" height="15.0" fill="rgb(232,62,41)" rx="2" ry="2" />
<text  x="618.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="86.4" y="1925" width="0.2" height="15.0" fill="rgb(246,209,40)" rx="2" ry="2" />
<text  x="89.43" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="892.1" y="1957" width="0.2" height="15.0" fill="rgb(243,140,24)" rx="2" ry="2" />
<text  x="895.06" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="227.9" y="1781" width="0.2" height="15.0" fill="rgb(225,117,8)" rx="2" ry="2" />
<text  x="230.92" y="1791.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="86.6" y="1941" width="0.2" height="15.0" fill="rgb(225,67,26)" rx="2" ry="2" />
<text  x="89.63" y="1951.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (5 samples, 0.08%)</title><rect x="506.9" y="1893" width="1.0" height="15.0" fill="rgb(231,149,24)" rx="2" ry="2" />
<text  x="509.91" y="1903.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="133.5" y="1717" width="0.2" height="15.0" fill="rgb(224,101,34)" rx="2" ry="2" />
<text  x="136.53" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="848.6" y="1813" width="0.4" height="15.0" fill="rgb(221,23,45)" rx="2" ry="2" />
<text  x="851.55" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="740.6" y="1733" width="0.8" height="15.0" fill="rgb(206,10,45)" rx="2" ry="2" />
<text  x="743.59" y="1743.5" ></text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="150.7" y="1525" width="0.2" height="15.0" fill="rgb(247,37,23)" rx="2" ry="2" />
<text  x="153.69" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="316.5" y="1701" width="0.4" height="15.0" fill="rgb(245,50,54)" rx="2" ry="2" />
<text  x="319.52" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (15 samples, 0.25%)</title><rect x="608.7" y="1877" width="3.0" height="15.0" fill="rgb(222,179,28)" rx="2" ry="2" />
<text  x="611.68" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="900.4" y="1701" width="0.2" height="15.0" fill="rgb(215,132,45)" rx="2" ry="2" />
<text  x="903.44" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="851.5" y="1941" width="0.2" height="15.0" fill="rgb(227,187,52)" rx="2" ry="2" />
<text  x="854.55" y="1951.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="122.6" y="1573" width="0.2" height="15.0" fill="rgb(251,145,25)" rx="2" ry="2" />
<text  x="125.55" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="884.1" y="1749" width="0.2" height="15.0" fill="rgb(242,42,38)" rx="2" ry="2" />
<text  x="887.07" y="1759.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="1108.8" y="1461" width="0.2" height="15.0" fill="rgb(224,113,35)" rx="2" ry="2" />
<text  x="1111.78" y="1471.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="1080.6" y="1621" width="0.2" height="15.0" fill="rgb(242,16,44)" rx="2" ry="2" />
<text  x="1083.64" y="1631.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="344.5" y="2037" width="0.6" height="15.0" fill="rgb(215,191,13)" rx="2" ry="2" />
<text  x="347.46" y="2047.5" ></text>
</g>
<g >
<title>__skb_clone (27 samples, 0.46%)</title><rect x="800.9" y="1653" width="5.3" height="15.0" fill="rgb(218,220,54)" rx="2" ry="2" />
<text  x="803.86" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (2 samples, 0.03%)</title><rect x="846.6" y="1925" width="0.4" height="15.0" fill="rgb(220,41,37)" rx="2" ry="2" />
<text  x="849.56" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="457.8" y="1845" width="0.2" height="15.0" fill="rgb(205,64,37)" rx="2" ry="2" />
<text  x="460.81" y="1855.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="289.6" y="1429" width="0.6" height="15.0" fill="rgb(234,16,9)" rx="2" ry="2" />
<text  x="292.58" y="1439.5" ></text>
</g>
<g >
<title>__fdget (9 samples, 0.15%)</title><rect x="670.1" y="1845" width="1.8" height="15.0" fill="rgb(239,162,53)" rx="2" ry="2" />
<text  x="673.15" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (119 samples, 2.01%)</title><rect x="104.0" y="2005" width="23.7" height="15.0" fill="rgb(205,164,39)" rx="2" ry="2" />
<text  x="106.99" y="2015.5" >[..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (106 samples, 1.79%)</title><rect x="868.1" y="2005" width="21.2" height="15.0" fill="rgb(237,221,41)" rx="2" ry="2" />
<text  x="871.11" y="2015.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1109.2" y="1573" width="0.2" height="15.0" fill="rgb(217,160,6)" rx="2" ry="2" />
<text  x="1112.18" y="1583.5" ></text>
</g>
<g >
<title>epi_rcu_free (1 samples, 0.02%)</title><rect x="905.2" y="1877" width="0.2" height="15.0" fill="rgb(225,133,53)" rx="2" ry="2" />
<text  x="908.23" y="1887.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (20 samples, 0.34%)</title><rect x="817.8" y="1717" width="4.0" height="15.0" fill="rgb(215,157,25)" rx="2" ry="2" />
<text  x="820.82" y="1727.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="540.4" y="1861" width="0.2" height="15.0" fill="rgb(212,21,21)" rx="2" ry="2" />
<text  x="543.43" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="160.3" y="2005" width="0.2" height="15.0" fill="rgb(215,227,43)" rx="2" ry="2" />
<text  x="163.27" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="900.4" y="1829" width="0.2" height="15.0" fill="rgb(252,185,16)" rx="2" ry="2" />
<text  x="903.44" y="1839.5" ></text>
</g>
<g >
<title>native_sched_clock (3 samples, 0.05%)</title><rect x="808.2" y="1653" width="0.6" height="15.0" fill="rgb(239,26,7)" rx="2" ry="2" />
<text  x="811.24" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="882.5" y="1957" width="1.2" height="15.0" fill="rgb(209,88,52)" rx="2" ry="2" />
<text  x="885.48" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (3 samples, 0.05%)</title><rect x="520.7" y="1957" width="0.6" height="15.0" fill="rgb(247,14,8)" rx="2" ry="2" />
<text  x="523.67" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (96 samples, 1.62%)</title><rect x="869.9" y="1989" width="19.2" height="15.0" fill="rgb(242,121,51)" rx="2" ry="2" />
<text  x="872.91" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="501.5" y="1861" width="0.8" height="15.0" fill="rgb(206,213,32)" rx="2" ry="2" />
<text  x="504.52" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="1172.0" y="2005" width="0.2" height="15.0" fill="rgb(232,182,11)" rx="2" ry="2" />
<text  x="1175.04" y="2015.5" ></text>
</g>
<g >
<title>__fput (537 samples, 9.08%)</title><rect x="722.2" y="1813" width="107.2" height="15.0" fill="rgb(234,91,11)" rx="2" ry="2" />
<text  x="725.23" y="1823.5" >__fput</text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (60 samples, 1.01%)</title><rect x="23.4" y="2005" width="11.9" height="15.0" fill="rgb(229,93,20)" rx="2" ry="2" />
<text  x="26.37" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="602.5" y="1989" width="0.4" height="15.0" fill="rgb(221,212,22)" rx="2" ry="2" />
<text  x="605.49" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="176.4" y="1957" width="0.2" height="15.0" fill="rgb(222,200,29)" rx="2" ry="2" />
<text  x="179.43" y="1967.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="806.0" y="1349" width="0.2" height="15.0" fill="rgb(221,194,29)" rx="2" ry="2" />
<text  x="809.05" y="1359.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1139.5" y="1909" width="0.2" height="15.0" fill="rgb(215,84,18)" rx="2" ry="2" />
<text  x="1142.51" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="32.6" y="1909" width="0.1" height="15.0" fill="rgb(212,205,34)" rx="2" ry="2" />
<text  x="35.55" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (2 samples, 0.03%)</title><rect x="1141.7" y="1957" width="0.4" height="15.0" fill="rgb(221,196,22)" rx="2" ry="2" />
<text  x="1144.71" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (6 samples, 0.10%)</title><rect x="885.9" y="1925" width="1.2" height="15.0" fill="rgb(232,54,41)" rx="2" ry="2" />
<text  x="888.87" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="177.4" y="1957" width="0.2" height="15.0" fill="rgb(223,68,27)" rx="2" ry="2" />
<text  x="180.43" y="1967.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1083.4" y="1925" width="0.2" height="15.0" fill="rgb(243,132,18)" rx="2" ry="2" />
<text  x="1086.43" y="1935.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="502.1" y="1701" width="0.2" height="15.0" fill="rgb(210,171,45)" rx="2" ry="2" />
<text  x="505.12" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (51 samples, 0.86%)</title><rect x="603.1" y="2005" width="10.2" height="15.0" fill="rgb(246,134,31)" rx="2" ry="2" />
<text  x="606.09" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="847.8" y="1893" width="0.6" height="15.0" fill="rgb(228,48,3)" rx="2" ry="2" />
<text  x="850.75" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="11.4" y="2037" width="1.0" height="15.0" fill="rgb(205,71,49)" rx="2" ry="2" />
<text  x="14.40" y="2047.5" ></text>
</g>
<g >
<title>__libc_fcntl (63 samples, 1.07%)</title><rect x="552.0" y="1989" width="12.6" height="15.0" fill="rgb(249,196,44)" rx="2" ry="2" />
<text  x="555.01" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="777.5" y="1269" width="0.2" height="15.0" fill="rgb(205,103,5)" rx="2" ry="2" />
<text  x="780.51" y="1279.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="806.0" y="1365" width="0.2" height="15.0" fill="rgb(231,16,33)" rx="2" ry="2" />
<text  x="809.05" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="970.1" y="2021" width="1.2" height="15.0" fill="rgb(218,208,3)" rx="2" ry="2" />
<text  x="973.08" y="2031.5" ></text>
</g>
<g >
<title>inet_accept (100 samples, 1.69%)</title><rect x="363.4" y="1957" width="20.0" height="15.0" fill="rgb(247,38,14)" rx="2" ry="2" />
<text  x="366.42" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="763.1" y="1477" width="0.2" height="15.0" fill="rgb(231,88,22)" rx="2" ry="2" />
<text  x="766.14" y="1487.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="884.1" y="1669" width="0.2" height="15.0" fill="rgb(230,120,15)" rx="2" ry="2" />
<text  x="887.07" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="909.4" y="1765" width="0.2" height="15.0" fill="rgb(208,228,26)" rx="2" ry="2" />
<text  x="912.42" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="452.0" y="1733" width="0.2" height="15.0" fill="rgb(230,53,5)" rx="2" ry="2" />
<text  x="455.03" y="1743.5" ></text>
</g>
<g >
<title>folly::netops::close (633 samples, 10.71%)</title><rect x="711.3" y="1925" width="126.3" height="15.0" fill="rgb(212,133,19)" rx="2" ry="2" />
<text  x="714.25" y="1935.5" >folly::netops::..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="842.8" y="1813" width="0.2" height="15.0" fill="rgb(245,184,3)" rx="2" ry="2" />
<text  x="845.77" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="900.4" y="1861" width="0.2" height="15.0" fill="rgb(205,20,47)" rx="2" ry="2" />
<text  x="903.44" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="865.1" y="1957" width="0.2" height="15.0" fill="rgb(229,129,42)" rx="2" ry="2" />
<text  x="868.12" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1108.6" y="1669" width="0.4" height="15.0" fill="rgb(227,68,2)" rx="2" ry="2" />
<text  x="1111.58" y="1679.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="72.9" y="1925" width="0.2" height="15.0" fill="rgb(220,56,7)" rx="2" ry="2" />
<text  x="75.86" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="731.6" y="1685" width="0.2" height="15.0" fill="rgb(235,170,38)" rx="2" ry="2" />
<text  x="734.61" y="1695.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="91.0" y="1557" width="0.2" height="15.0" fill="rgb(224,168,2)" rx="2" ry="2" />
<text  x="94.02" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (12 samples, 0.20%)</title><rect x="145.1" y="1909" width="2.4" height="15.0" fill="rgb(206,189,28)" rx="2" ry="2" />
<text  x="148.10" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="858.7" y="1973" width="0.4" height="15.0" fill="rgb(219,62,49)" rx="2" ry="2" />
<text  x="861.73" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="481.0" y="1941" width="0.4" height="15.0" fill="rgb(254,89,45)" rx="2" ry="2" />
<text  x="483.96" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1090.8" y="1909" width="0.2" height="15.0" fill="rgb(210,47,13)" rx="2" ry="2" />
<text  x="1093.82" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="10.4" y="1829" width="0.8" height="15.0" fill="rgb(217,197,23)" rx="2" ry="2" />
<text  x="13.40" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="951.1" y="1957" width="0.2" height="15.0" fill="rgb(219,120,20)" rx="2" ry="2" />
<text  x="954.13" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="121.6" y="1285" width="0.2" height="15.0" fill="rgb(205,143,1)" rx="2" ry="2" />
<text  x="124.55" y="1295.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="1182.6" y="1989" width="0.2" height="15.0" fill="rgb(207,222,26)" rx="2" ry="2" />
<text  x="1185.62" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="474.0" y="1701" width="0.2" height="15.0" fill="rgb(220,37,1)" rx="2" ry="2" />
<text  x="476.98" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="777.1" y="1525" width="0.6" height="15.0" fill="rgb(218,20,39)" rx="2" ry="2" />
<text  x="780.11" y="1535.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="985.8" y="1989" width="0.2" height="15.0" fill="rgb(233,178,17)" rx="2" ry="2" />
<text  x="988.85" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="568.8" y="1781" width="0.2" height="15.0" fill="rgb(226,55,5)" rx="2" ry="2" />
<text  x="571.77" y="1791.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="610.7" y="1813" width="0.4" height="15.0" fill="rgb(218,221,23)" rx="2" ry="2" />
<text  x="613.68" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="246.7" y="1877" width="0.2" height="15.0" fill="rgb(219,185,13)" rx="2" ry="2" />
<text  x="249.68" y="1887.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="255.1" y="1829" width="0.2" height="15.0" fill="rgb(249,74,25)" rx="2" ry="2" />
<text  x="258.06" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="914.2" y="1685" width="0.2" height="15.0" fill="rgb(253,117,47)" rx="2" ry="2" />
<text  x="917.21" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1122.1" y="1685" width="0.2" height="15.0" fill="rgb(224,38,51)" rx="2" ry="2" />
<text  x="1125.15" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(248,229,35)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="881.7" y="1893" width="0.2" height="15.0" fill="rgb(207,86,21)" rx="2" ry="2" />
<text  x="884.68" y="1903.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="914.2" y="1701" width="0.2" height="15.0" fill="rgb(232,223,31)" rx="2" ry="2" />
<text  x="917.21" y="1711.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(236,178,38)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (43 samples, 0.73%)</title><rect x="1107.4" y="1893" width="8.6" height="15.0" fill="rgb(230,2,49)" rx="2" ry="2" />
<text  x="1110.38" y="1903.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1114.2" y="1397" width="0.2" height="15.0" fill="rgb(241,3,51)" rx="2" ry="2" />
<text  x="1117.17" y="1407.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="202.2" y="1973" width="0.2" height="15.0" fill="rgb(235,8,49)" rx="2" ry="2" />
<text  x="205.18" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (2 samples, 0.03%)</title><rect x="895.0" y="2037" width="0.4" height="15.0" fill="rgb(222,15,22)" rx="2" ry="2" />
<text  x="898.05" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="755.4" y="1717" width="0.4" height="15.0" fill="rgb(229,128,41)" rx="2" ry="2" />
<text  x="758.36" y="1727.5" ></text>
</g>
<g >
<title>____fput (540 samples, 9.13%)</title><rect x="722.2" y="1829" width="107.8" height="15.0" fill="rgb(246,192,47)" rx="2" ry="2" />
<text  x="725.23" y="1839.5" >____fput</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (9 samples, 0.15%)</title><rect x="528.3" y="1973" width="1.8" height="15.0" fill="rgb(232,64,14)" rx="2" ry="2" />
<text  x="531.26" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.08%)</title><rect x="639.2" y="1989" width="1.0" height="15.0" fill="rgb(235,68,51)" rx="2" ry="2" />
<text  x="642.21" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="202.2" y="1829" width="0.2" height="15.0" fill="rgb(209,224,21)" rx="2" ry="2" />
<text  x="205.18" y="1839.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1109.4" y="1509" width="0.2" height="15.0" fill="rgb(252,24,22)" rx="2" ry="2" />
<text  x="1112.38" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (2 samples, 0.03%)</title><rect x="136.5" y="1925" width="0.4" height="15.0" fill="rgb(254,156,24)" rx="2" ry="2" />
<text  x="139.52" y="1935.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="289.8" y="1381" width="0.2" height="15.0" fill="rgb(227,34,49)" rx="2" ry="2" />
<text  x="292.78" y="1391.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1072.3" y="1509" width="0.2" height="15.0" fill="rgb(243,95,11)" rx="2" ry="2" />
<text  x="1075.26" y="1519.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="574.6" y="1957" width="0.2" height="15.0" fill="rgb(236,78,53)" rx="2" ry="2" />
<text  x="577.56" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="53.9" y="1733" width="0.2" height="15.0" fill="rgb(237,67,3)" rx="2" ry="2" />
<text  x="56.90" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (1 samples, 0.02%)</title><rect x="577.9" y="2021" width="0.2" height="15.0" fill="rgb(228,75,2)" rx="2" ry="2" />
<text  x="580.95" y="2031.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="261.8" y="1749" width="0.2" height="15.0" fill="rgb(205,215,19)" rx="2" ry="2" />
<text  x="264.85" y="1759.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="123.4" y="1749" width="0.1" height="15.0" fill="rgb(235,219,25)" rx="2" ry="2" />
<text  x="126.35" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (494 samples, 8.35%)</title><rect x="240.3" y="2021" width="98.6" height="15.0" fill="rgb(216,95,49)" rx="2" ry="2" />
<text  x="243.29" y="2031.5" >entry_SYSCA..</text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="896.2" y="1989" width="0.6" height="15.0" fill="rgb(215,218,13)" rx="2" ry="2" />
<text  x="899.25" y="1999.5" ></text>
</g>
<g >
<title>skb_push (2 samples, 0.03%)</title><rect x="809.0" y="1685" width="0.4" height="15.0" fill="rgb(250,112,6)" rx="2" ry="2" />
<text  x="812.04" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="177.6" y="1973" width="0.2" height="15.0" fill="rgb(250,57,2)" rx="2" ry="2" />
<text  x="180.63" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (1 samples, 0.02%)</title><rect x="842.8" y="1861" width="0.2" height="15.0" fill="rgb(218,42,39)" rx="2" ry="2" />
<text  x="845.77" y="1871.5" ></text>
</g>
<g >
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1110.2" y="1493" width="0.4" height="15.0" fill="rgb(209,147,53)" rx="2" ry="2" />
<text  x="1113.18" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.07%)</title><rect x="609.3" y="1845" width="0.8" height="15.0" fill="rgb(218,13,3)" rx="2" ry="2" />
<text  x="612.28" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="753.6" y="1717" width="0.8" height="15.0" fill="rgb(230,81,30)" rx="2" ry="2" />
<text  x="756.56" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (6 samples, 0.10%)</title><rect x="703.1" y="1973" width="1.2" height="15.0" fill="rgb(228,191,29)" rx="2" ry="2" />
<text  x="706.07" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="535.2" y="1925" width="0.2" height="15.0" fill="rgb(234,134,47)" rx="2" ry="2" />
<text  x="538.24" y="1935.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="316.3" y="1669" width="0.2" height="15.0" fill="rgb(223,154,19)" rx="2" ry="2" />
<text  x="319.33" y="1679.5" ></text>
</g>
<g >
<title>kfree (10 samples, 0.17%)</title><rect x="1112.4" y="1445" width="2.0" height="15.0" fill="rgb(211,188,25)" rx="2" ry="2" />
<text  x="1115.37" y="1455.5" ></text>
</g>
<g >
<title>rb_erase (1 samples, 0.02%)</title><rect x="1114.6" y="1509" width="0.2" height="15.0" fill="rgb(231,221,39)" rx="2" ry="2" />
<text  x="1117.57" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="53.9" y="1781" width="0.2" height="15.0" fill="rgb(235,6,37)" rx="2" ry="2" />
<text  x="56.90" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (3 samples, 0.05%)</title><rect x="524.5" y="1989" width="0.6" height="15.0" fill="rgb(215,215,4)" rx="2" ry="2" />
<text  x="527.47" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (2 samples, 0.03%)</title><rect x="612.9" y="1989" width="0.4" height="15.0" fill="rgb(218,86,40)" rx="2" ry="2" />
<text  x="615.87" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (5 samples, 0.08%)</title><rect x="51.3" y="1893" width="1.0" height="15.0" fill="rgb(252,203,22)" rx="2" ry="2" />
<text  x="54.31" y="1903.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::requireValue (2 samples, 0.03%)</title><rect x="965.1" y="2037" width="0.4" height="15.0" fill="rgb(220,125,26)" rx="2" ry="2" />
<text  x="968.10" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="29.4" y="1733" width="0.2" height="15.0" fill="rgb(253,181,31)" rx="2" ry="2" />
<text  x="32.36" y="1743.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (5 samples, 0.08%)</title><rect x="55.9" y="1909" width="1.0" height="15.0" fill="rgb(242,146,18)" rx="2" ry="2" />
<text  x="58.90" y="1919.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="450.4" y="1973" width="0.2" height="15.0" fill="rgb(248,100,41)" rx="2" ry="2" />
<text  x="453.43" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (3 samples, 0.05%)</title><rect x="941.7" y="2005" width="0.6" height="15.0" fill="rgb(225,48,15)" rx="2" ry="2" />
<text  x="944.75" y="2015.5" ></text>
</g>
<g >
<title>ip_queue_xmit (42 samples, 0.71%)</title><rect x="1107.4" y="1861" width="8.4" height="15.0" fill="rgb(219,138,17)" rx="2" ry="2" />
<text  x="1110.38" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="150.7" y="1621" width="0.2" height="15.0" fill="rgb(237,191,1)" rx="2" ry="2" />
<text  x="153.69" y="1631.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="964.7" y="1989" width="0.2" height="15.0" fill="rgb(205,83,39)" rx="2" ry="2" />
<text  x="967.70" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="982.1" y="1717" width="0.2" height="15.0" fill="rgb(219,93,44)" rx="2" ry="2" />
<text  x="985.06" y="1727.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="335.7" y="1957" width="0.4" height="15.0" fill="rgb(243,49,1)" rx="2" ry="2" />
<text  x="338.68" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="195.8" y="1989" width="0.2" height="15.0" fill="rgb(227,194,54)" rx="2" ry="2" />
<text  x="198.79" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="997.0" y="1989" width="0.2" height="15.0" fill="rgb(209,66,14)" rx="2" ry="2" />
<text  x="1000.03" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (30 samples, 0.51%)</title><rect x="1109.0" y="1653" width="6.0" height="15.0" fill="rgb(229,209,33)" rx="2" ry="2" />
<text  x="1111.98" y="1663.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="253.1" y="1845" width="0.2" height="15.0" fill="rgb(223,75,32)" rx="2" ry="2" />
<text  x="256.06" y="1855.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="754.4" y="1717" width="0.2" height="15.0" fill="rgb(243,40,48)" rx="2" ry="2" />
<text  x="757.36" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="29.4" y="1893" width="0.2" height="15.0" fill="rgb(220,217,16)" rx="2" ry="2" />
<text  x="32.36" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1072.3" y="1541" width="0.2" height="15.0" fill="rgb(206,99,46)" rx="2" ry="2" />
<text  x="1075.26" y="1551.5" ></text>
</g>
<g >
<title>__close (629 samples, 10.64%)</title><rect x="711.5" y="1909" width="125.5" height="15.0" fill="rgb(221,168,0)" rx="2" ry="2" />
<text  x="714.45" y="1919.5" >__close</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="320.9" y="1749" width="0.6" height="15.0" fill="rgb(246,85,6)" rx="2" ry="2" />
<text  x="323.91" y="1759.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="121.2" y="53" width="0.2" height="15.0" fill="rgb(238,65,33)" rx="2" ry="2" />
<text  x="124.16" y="63.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="281.8" y="1797" width="0.2" height="15.0" fill="rgb(232,52,35)" rx="2" ry="2" />
<text  x="284.80" y="1807.5" ></text>
</g>
<g >
<title>close@plt (1 samples, 0.02%)</title><rect x="837.4" y="1909" width="0.2" height="15.0" fill="rgb(218,136,53)" rx="2" ry="2" />
<text  x="840.38" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="470.6" y="1925" width="0.2" height="15.0" fill="rgb(238,99,3)" rx="2" ry="2" />
<text  x="473.59" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="958.3" y="1989" width="0.2" height="15.0" fill="rgb(246,84,24)" rx="2" ry="2" />
<text  x="961.31" y="1999.5" ></text>
</g>
<g >
<title>folly::operator!= (4 samples, 0.07%)</title><rect x="1183.6" y="2053" width="0.8" height="15.0" fill="rgb(237,148,7)" rx="2" ry="2" />
<text  x="1186.61" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="524.3" y="1909" width="0.2" height="15.0" fill="rgb(211,31,41)" rx="2" ry="2" />
<text  x="527.27" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (20 samples, 0.34%)</title><rect x="604.1" y="1909" width="4.0" height="15.0" fill="rgb(218,169,42)" rx="2" ry="2" />
<text  x="607.09" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="962.1" y="1861" width="0.8" height="15.0" fill="rgb(233,191,53)" rx="2" ry="2" />
<text  x="965.10" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (2 samples, 0.03%)</title><rect x="958.1" y="2037" width="0.4" height="15.0" fill="rgb(246,33,45)" rx="2" ry="2" />
<text  x="961.11" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="32.6" y="1877" width="0.1" height="15.0" fill="rgb(242,102,19)" rx="2" ry="2" />
<text  x="35.55" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="906.6" y="1973" width="0.2" height="15.0" fill="rgb(208,53,19)" rx="2" ry="2" />
<text  x="909.62" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="133.5" y="1845" width="0.2" height="15.0" fill="rgb(213,24,43)" rx="2" ry="2" />
<text  x="136.53" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="995.2" y="1957" width="0.2" height="15.0" fill="rgb(231,177,15)" rx="2" ry="2" />
<text  x="998.23" y="1967.5" ></text>
</g>
<g >
<title>call_rcu_sched (1 samples, 0.02%)</title><rect x="357.6" y="1925" width="0.2" height="15.0" fill="rgb(243,92,37)" rx="2" ry="2" />
<text  x="360.63" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="346.5" y="2037" width="0.4" height="15.0" fill="rgb(212,11,43)" rx="2" ry="2" />
<text  x="349.46" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="847.6" y="1893" width="0.2" height="15.0" fill="rgb(240,45,31)" rx="2" ry="2" />
<text  x="850.55" y="1903.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="170.4" y="2005" width="0.2" height="15.0" fill="rgb(216,67,35)" rx="2" ry="2" />
<text  x="173.45" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="646.4" y="1957" width="0.2" height="15.0" fill="rgb(227,148,3)" rx="2" ry="2" />
<text  x="649.40" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="638.2" y="1973" width="0.4" height="15.0" fill="rgb(235,137,8)" rx="2" ry="2" />
<text  x="641.22" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1122.1" y="1749" width="0.2" height="15.0" fill="rgb(233,64,33)" rx="2" ry="2" />
<text  x="1125.15" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="905.4" y="1989" width="1.0" height="15.0" fill="rgb(210,152,8)" rx="2" ry="2" />
<text  x="908.43" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="949" width="16.0" height="15.0" fill="rgb(241,100,20)" rx="2" ry="2" />
<text  x="108.39" y="959.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="672.3" y="1909" width="0.2" height="15.0" fill="rgb(214,35,18)" rx="2" ry="2" />
<text  x="675.34" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (13 samples, 0.22%)</title><rect x="1065.1" y="1877" width="2.6" height="15.0" fill="rgb(208,76,1)" rx="2" ry="2" />
<text  x="1068.08" y="1887.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1109.4" y="1525" width="0.2" height="15.0" fill="rgb(246,42,27)" rx="2" ry="2" />
<text  x="1112.38" y="1535.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="147.3" y="1893" width="0.2" height="15.0" fill="rgb(247,49,8)" rx="2" ry="2" />
<text  x="150.30" y="1903.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="541.2" y="1909" width="0.2" height="15.0" fill="rgb(241,167,41)" rx="2" ry="2" />
<text  x="544.23" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1133.9" y="2005" width="0.2" height="15.0" fill="rgb(246,48,4)" rx="2" ry="2" />
<text  x="1136.92" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (95 samples, 1.61%)</title><rect x="656.8" y="1973" width="18.9" height="15.0" fill="rgb(207,211,5)" rx="2" ry="2" />
<text  x="659.77" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="921.6" y="1925" width="0.2" height="15.0" fill="rgb(232,186,8)" rx="2" ry="2" />
<text  x="924.59" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="982.1" y="1813" width="0.2" height="15.0" fill="rgb(215,196,29)" rx="2" ry="2" />
<text  x="985.06" y="1823.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="289.0" y="1509" width="0.2" height="15.0" fill="rgb(209,23,0)" rx="2" ry="2" />
<text  x="291.99" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="63.9" y="1733" width="0.2" height="15.0" fill="rgb(210,210,23)" rx="2" ry="2" />
<text  x="66.88" y="1743.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.02%)</title><rect x="720.8" y="1845" width="0.2" height="15.0" fill="rgb(224,51,22)" rx="2" ry="2" />
<text  x="723.83" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="702.3" y="1973" width="0.2" height="15.0" fill="rgb(253,91,0)" rx="2" ry="2" />
<text  x="705.27" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="914.2" y="1973" width="0.2" height="15.0" fill="rgb(240,186,54)" rx="2" ry="2" />
<text  x="917.21" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (84 samples, 1.42%)</title><rect x="678.5" y="1957" width="16.8" height="15.0" fill="rgb(236,45,18)" rx="2" ry="2" />
<text  x="681.53" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="32.6" y="1765" width="0.1" height="15.0" fill="rgb(232,76,13)" rx="2" ry="2" />
<text  x="35.55" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="695.5" y="1925" width="0.6" height="15.0" fill="rgb(225,96,20)" rx="2" ry="2" />
<text  x="698.49" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="911.2" y="2021" width="0.4" height="15.0" fill="rgb(214,26,49)" rx="2" ry="2" />
<text  x="914.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (822 samples, 13.90%)</title><rect x="702.3" y="2005" width="164.0" height="15.0" fill="rgb(207,196,34)" rx="2" ry="2" />
<text  x="705.27" y="2015.5" >[unknown]</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="999.4" y="1989" width="0.2" height="15.0" fill="rgb(225,23,12)" rx="2" ry="2" />
<text  x="1002.42" y="1999.5" ></text>
</g>
<g >
<title>__dentry_kill (74 samples, 1.25%)</title><rect x="725.8" y="1765" width="14.8" height="15.0" fill="rgb(209,46,23)" rx="2" ry="2" />
<text  x="728.82" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="474.0" y="1717" width="0.2" height="15.0" fill="rgb(216,127,10)" rx="2" ry="2" />
<text  x="476.98" y="1727.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="91.0" y="1605" width="0.2" height="15.0" fill="rgb(250,31,48)" rx="2" ry="2" />
<text  x="94.02" y="1615.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="58.9" y="1909" width="0.2" height="15.0" fill="rgb(236,219,13)" rx="2" ry="2" />
<text  x="61.89" y="1919.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="272.2" y="1781" width="0.2" height="15.0" fill="rgb(214,105,41)" rx="2" ry="2" />
<text  x="275.22" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1072.3" y="1669" width="0.2" height="15.0" fill="rgb(234,183,10)" rx="2" ry="2" />
<text  x="1075.26" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1072.3" y="1701" width="0.2" height="15.0" fill="rgb(219,10,23)" rx="2" ry="2" />
<text  x="1075.26" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 1.35%)</title><rect x="105.4" y="709" width="16.0" height="15.0" fill="rgb(214,46,1)" rx="2" ry="2" />
<text  x="108.39" y="719.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1049.5" y="1829" width="0.2" height="15.0" fill="rgb(225,47,17)" rx="2" ry="2" />
<text  x="1052.51" y="1839.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="64.9" y="1925" width="0.8" height="15.0" fill="rgb(253,55,2)" rx="2" ry="2" />
<text  x="67.88" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="451.8" y="1813" width="0.2" height="15.0" fill="rgb(236,21,25)" rx="2" ry="2" />
<text  x="454.83" y="1823.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="478.8" y="1957" width="0.2" height="15.0" fill="rgb(249,214,11)" rx="2" ry="2" />
<text  x="481.77" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="119.8" y="85" width="0.6" height="15.0" fill="rgb(226,118,41)" rx="2" ry="2" />
<text  x="122.76" y="95.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="340.1" y="2005" width="0.4" height="15.0" fill="rgb(241,103,29)" rx="2" ry="2" />
<text  x="343.07" y="2015.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="453.4" y="1941" width="0.2" height="15.0" fill="rgb(248,221,46)" rx="2" ry="2" />
<text  x="456.42" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="848.6" y="1845" width="0.4" height="15.0" fill="rgb(221,208,50)" rx="2" ry="2" />
<text  x="851.55" y="1855.5" ></text>
</g>
</g>
</svg>
