<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="210.8" y="1925" width="0.2" height="15.0" fill="rgb(216,5,52)" rx="2" ry="2" />
<text  x="213.81" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (4 samples, 0.07%)</title><rect x="572.2" y="1989" width="0.7" height="15.0" fill="rgb(208,198,12)" rx="2" ry="2" />
<text  x="575.16" y="1999.5" ></text>
</g>
<g >
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="314.7" y="1861" width="0.6" height="15.0" fill="rgb(240,58,28)" rx="2" ry="2" />
<text  x="317.68" y="1871.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.02%)</title><rect x="850.8" y="1973" width="0.2" height="15.0" fill="rgb(228,58,42)" rx="2" ry="2" />
<text  x="853.77" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="620.9" y="1957" width="0.2" height="15.0" fill="rgb(224,112,20)" rx="2" ry="2" />
<text  x="623.93" y="1967.5" ></text>
</g>
<g >
<title>free (8 samples, 0.13%)</title><rect x="1172.0" y="2053" width="1.6" height="15.0" fill="rgb(254,154,49)" rx="2" ry="2" />
<text  x="1175.03" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="891.2" y="1989" width="0.2" height="15.0" fill="rgb(212,150,8)" rx="2" ry="2" />
<text  x="894.25" y="1999.5" ></text>
</g>
<g >
<title>futex_wait (25 samples, 0.42%)</title><rect x="13.6" y="1973" width="4.9" height="15.0" fill="rgb(242,120,2)" rx="2" ry="2" />
<text  x="16.55" y="1983.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="282.1" y="1797" width="0.2" height="15.0" fill="rgb(214,145,37)" rx="2" ry="2" />
<text  x="285.10" y="1807.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="381.0" y="1957" width="0.2" height="15.0" fill="rgb(206,131,34)" rx="2" ry="2" />
<text  x="384.02" y="1967.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="152.4" y="1941" width="0.2" height="15.0" fill="rgb(245,181,41)" rx="2" ry="2" />
<text  x="155.37" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1109" width="51.8" height="15.0" fill="rgb(215,39,0)" rx="2" ry="2" />
<text  x="73.42" y="1119.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="629.8" y="2005" width="0.2" height="15.0" fill="rgb(230,74,34)" rx="2" ry="2" />
<text  x="632.82" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="688.7" y="1925" width="0.2" height="15.0" fill="rgb(224,124,49)" rx="2" ry="2" />
<text  x="691.66" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="847.6" y="1989" width="1.0" height="15.0" fill="rgb(243,104,52)" rx="2" ry="2" />
<text  x="850.61" y="1999.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::set (1 samples, 0.02%)</title><rect x="386.5" y="1957" width="0.2" height="15.0" fill="rgb(241,210,7)" rx="2" ry="2" />
<text  x="389.55" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="412.8" y="1989" width="0.2" height="15.0" fill="rgb(230,216,27)" rx="2" ry="2" />
<text  x="415.81" y="1999.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="30.3" y="1957" width="0.2" height="15.0" fill="rgb(246,167,38)" rx="2" ry="2" />
<text  x="33.34" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (5 samples, 0.08%)</title><rect x="845.8" y="1973" width="1.0" height="15.0" fill="rgb(232,77,20)" rx="2" ry="2" />
<text  x="848.83" y="1983.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (104 samples, 1.74%)</title><rect x="1076.9" y="1925" width="20.5" height="15.0" fill="rgb(215,209,26)" rx="2" ry="2" />
<text  x="1079.86" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (1 samples, 0.02%)</title><rect x="421.7" y="1829" width="0.2" height="15.0" fill="rgb(205,159,27)" rx="2" ry="2" />
<text  x="424.70" y="1839.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1189.6" y="1925" width="0.2" height="15.0" fill="rgb(212,109,23)" rx="2" ry="2" />
<text  x="1192.61" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_md5_lookup (1 samples, 0.02%)</title><rect x="311.3" y="1813" width="0.2" height="15.0" fill="rgb(224,84,26)" rx="2" ry="2" />
<text  x="314.32" y="1823.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (4 samples, 0.07%)</title><rect x="1099.4" y="1925" width="0.8" height="15.0" fill="rgb(208,181,25)" rx="2" ry="2" />
<text  x="1102.37" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (9 samples, 0.15%)</title><rect x="766.9" y="1973" width="1.7" height="15.0" fill="rgb(207,106,11)" rx="2" ry="2" />
<text  x="769.85" y="1983.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="417.6" y="2021" width="0.1" height="15.0" fill="rgb(215,31,52)" rx="2" ry="2" />
<text  x="420.55" y="2031.5" ></text>
</g>
<g >
<title>__libc_sendmsg (373 samples, 6.24%)</title><rect x="249.3" y="2037" width="73.7" height="15.0" fill="rgb(218,227,47)" rx="2" ry="2" />
<text  x="252.32" y="2047.5" >__libc_s..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (14 samples, 0.23%)</title><rect x="105.2" y="37" width="2.7" height="15.0" fill="rgb(248,110,43)" rx="2" ry="2" />
<text  x="108.17" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::markAsActive (1 samples, 0.02%)</title><rect x="825.3" y="2005" width="0.2" height="15.0" fill="rgb(254,132,19)" rx="2" ry="2" />
<text  x="828.30" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="582.4" y="1989" width="0.2" height="15.0" fill="rgb(235,215,17)" rx="2" ry="2" />
<text  x="585.43" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::startProcessing (2 samples, 0.03%)</title><rect x="652.7" y="1973" width="0.4" height="15.0" fill="rgb(239,94,20)" rx="2" ry="2" />
<text  x="655.72" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="1164.9" y="2053" width="0.2" height="15.0" fill="rgb(222,217,43)" rx="2" ry="2" />
<text  x="1167.92" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (2 samples, 0.03%)</title><rect x="634.6" y="2005" width="0.3" height="15.0" fill="rgb(247,65,7)" rx="2" ry="2" />
<text  x="637.55" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8 samples, 0.13%)</title><rect x="445.4" y="2005" width="1.6" height="15.0" fill="rgb(239,69,0)" rx="2" ry="2" />
<text  x="448.39" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="916.7" y="1925" width="0.6" height="15.0" fill="rgb(233,70,7)" rx="2" ry="2" />
<text  x="919.72" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="302.4" y="1461" width="0.2" height="15.0" fill="rgb(237,22,26)" rx="2" ry="2" />
<text  x="305.43" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::addString (4 samples, 0.07%)</title><rect x="183.4" y="2021" width="0.8" height="15.0" fill="rgb(223,102,27)" rx="2" ry="2" />
<text  x="186.37" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="949.1" y="1893" width="1.0" height="15.0" fill="rgb(254,57,7)" rx="2" ry="2" />
<text  x="952.10" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (3 samples, 0.05%)</title><rect x="294.3" y="1461" width="0.6" height="15.0" fill="rgb(219,137,22)" rx="2" ry="2" />
<text  x="297.34" y="1471.5" ></text>
</g>
<g >
<title>skb_try_coalesce (1 samples, 0.02%)</title><rect x="1055.1" y="1829" width="0.2" height="15.0" fill="rgb(226,78,39)" rx="2" ry="2" />
<text  x="1058.14" y="1839.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="631.0" y="1973" width="1.0" height="15.0" fill="rgb(254,208,24)" rx="2" ry="2" />
<text  x="634.00" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::subpiece (2 samples, 0.03%)</title><rect x="859.7" y="2037" width="0.4" height="15.0" fill="rgb(254,81,28)" rx="2" ry="2" />
<text  x="862.66" y="2047.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="1054.7" y="1861" width="0.6" height="15.0" fill="rgb(250,54,21)" rx="2" ry="2" />
<text  x="1057.74" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="173.5" y="1893" width="0.2" height="15.0" fill="rgb(252,160,24)" rx="2" ry="2" />
<text  x="176.49" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (8 samples, 0.13%)</title><rect x="665.8" y="2005" width="1.5" height="15.0" fill="rgb(208,174,6)" rx="2" ry="2" />
<text  x="668.75" y="2015.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (2 samples, 0.03%)</title><rect x="1048.2" y="1925" width="0.4" height="15.0" fill="rgb(230,70,32)" rx="2" ry="2" />
<text  x="1051.23" y="1935.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="328.1" y="2037" width="0.2" height="15.0" fill="rgb(244,133,48)" rx="2" ry="2" />
<text  x="331.10" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="612.2" y="1925" width="0.2" height="15.0" fill="rgb(240,225,51)" rx="2" ry="2" />
<text  x="615.24" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (16 samples, 0.27%)</title><rect x="85.4" y="37" width="3.2" height="15.0" fill="rgb(220,223,16)" rx="2" ry="2" />
<text  x="88.43" y="47.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (14 samples, 0.23%)</title><rect x="382.4" y="1925" width="2.8" height="15.0" fill="rgb(207,175,1)" rx="2" ry="2" />
<text  x="385.40" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="170.7" y="1909" width="0.2" height="15.0" fill="rgb(246,227,40)" rx="2" ry="2" />
<text  x="173.73" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (1 samples, 0.02%)</title><rect x="850.4" y="1941" width="0.2" height="15.0" fill="rgb(249,150,42)" rx="2" ry="2" />
<text  x="853.37" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (2 samples, 0.03%)</title><rect x="444.0" y="1973" width="0.4" height="15.0" fill="rgb(214,12,9)" rx="2" ry="2" />
<text  x="447.01" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (154 samples, 2.58%)</title><rect x="452.9" y="2021" width="30.4" height="15.0" fill="rgb(248,25,49)" rx="2" ry="2" />
<text  x="455.89" y="2031.5" >[u..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="282.3" y="1813" width="0.2" height="15.0" fill="rgb(221,48,25)" rx="2" ry="2" />
<text  x="285.29" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="949" width="51.8" height="15.0" fill="rgb(231,209,9)" rx="2" ry="2" />
<text  x="73.42" y="959.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="191.9" y="1909" width="1.1" height="15.0" fill="rgb(225,133,9)" rx="2" ry="2" />
<text  x="194.86" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1829" width="51.8" height="15.0" fill="rgb(239,128,20)" rx="2" ry="2" />
<text  x="73.42" y="1839.5" >[unkn..</text>
</g>
<g >
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="311.7" y="1829" width="0.4" height="15.0" fill="rgb(247,31,12)" rx="2" ry="2" />
<text  x="314.71" y="1839.5" ></text>
</g>
<g >
<title>skb_release_all (42 samples, 0.70%)</title><rect x="1084.6" y="1493" width="8.3" height="15.0" fill="rgb(229,85,17)" rx="2" ry="2" />
<text  x="1087.56" y="1503.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="262.7" y="1893" width="0.2" height="15.0" fill="rgb(227,20,54)" rx="2" ry="2" />
<text  x="265.74" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="686.3" y="2005" width="0.2" height="15.0" fill="rgb(213,173,0)" rx="2" ry="2" />
<text  x="689.29" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.30%)</title><rect x="682.7" y="2021" width="3.6" height="15.0" fill="rgb(248,145,16)" rx="2" ry="2" />
<text  x="685.73" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (422 samples, 7.06%)</title><rect x="697.0" y="2005" width="83.3" height="15.0" fill="rgb(229,78,0)" rx="2" ry="2" />
<text  x="699.95" y="2015.5" >facebook:..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="617.8" y="1909" width="0.4" height="15.0" fill="rgb(235,136,7)" rx="2" ry="2" />
<text  x="620.77" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (8 samples, 0.13%)</title><rect x="1137.1" y="1973" width="1.6" height="15.0" fill="rgb(213,196,41)" rx="2" ry="2" />
<text  x="1140.08" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (2 samples, 0.03%)</title><rect x="447.6" y="2005" width="0.4" height="15.0" fill="rgb(213,136,39)" rx="2" ry="2" />
<text  x="450.56" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="463.0" y="2005" width="0.4" height="15.0" fill="rgb(237,65,0)" rx="2" ry="2" />
<text  x="465.97" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (29 samples, 0.49%)</title><rect x="347.5" y="1957" width="5.7" height="15.0" fill="rgb(245,224,27)" rx="2" ry="2" />
<text  x="350.45" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (37 samples, 0.62%)</title><rect x="371.3" y="1973" width="7.4" height="15.0" fill="rgb(232,64,1)" rx="2" ry="2" />
<text  x="374.35" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (73 samples, 1.22%)</title><rect x="1081.8" y="1557" width="14.4" height="15.0" fill="rgb(227,150,27)" rx="2" ry="2" />
<text  x="1084.79" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="372.7" y="1957" width="0.4" height="15.0" fill="rgb(236,85,20)" rx="2" ry="2" />
<text  x="375.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (3 samples, 0.05%)</title><rect x="993.9" y="2005" width="0.6" height="15.0" fill="rgb(205,97,3)" rx="2" ry="2" />
<text  x="996.93" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="90.4" y="37" width="0.2" height="15.0" fill="rgb(221,67,6)" rx="2" ry="2" />
<text  x="93.36" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (4 samples, 0.07%)</title><rect x="447.6" y="2037" width="0.8" height="15.0" fill="rgb(207,199,0)" rx="2" ry="2" />
<text  x="450.56" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="662.2" y="1957" width="0.2" height="15.0" fill="rgb(219,210,9)" rx="2" ry="2" />
<text  x="665.20" y="1967.5" ></text>
</g>
<g >
<title>__ip_local_out (5 samples, 0.08%)</title><rect x="290.4" y="1781" width="1.0" height="15.0" fill="rgb(209,30,0)" rx="2" ry="2" />
<text  x="293.39" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="294.1" y="1413" width="0.2" height="15.0" fill="rgb(215,159,20)" rx="2" ry="2" />
<text  x="297.14" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="201.5" y="1957" width="0.2" height="15.0" fill="rgb(224,0,14)" rx="2" ry="2" />
<text  x="204.53" y="1967.5" ></text>
</g>
<g >
<title>hash_futex (1 samples, 0.02%)</title><rect x="13.2" y="1957" width="0.2" height="15.0" fill="rgb(243,139,36)" rx="2" ry="2" />
<text  x="16.16" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="259.8" y="1941" width="0.2" height="15.0" fill="rgb(221,223,42)" rx="2" ry="2" />
<text  x="262.78" y="1951.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="1100.6" y="1973" width="0.5" height="15.0" fill="rgb(212,31,17)" rx="2" ry="2" />
<text  x="1103.55" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="614.6" y="1893" width="0.4" height="15.0" fill="rgb(237,106,31)" rx="2" ry="2" />
<text  x="617.61" y="1903.5" ></text>
</g>
<g >
<title>skb_push (1 samples, 0.02%)</title><rect x="310.1" y="1813" width="0.2" height="15.0" fill="rgb(206,140,31)" rx="2" ry="2" />
<text  x="313.13" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1925" width="51.8" height="15.0" fill="rgb(250,144,20)" rx="2" ry="2" />
<text  x="73.42" y="1935.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="400.0" y="1973" width="0.2" height="15.0" fill="rgb(242,108,45)" rx="2" ry="2" />
<text  x="402.98" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (4 samples, 0.07%)</title><rect x="1129.0" y="2053" width="0.8" height="15.0" fill="rgb(231,4,21)" rx="2" ry="2" />
<text  x="1131.99" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="628.6" y="1973" width="0.6" height="15.0" fill="rgb(208,41,5)" rx="2" ry="2" />
<text  x="631.63" y="1983.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="627.6" y="1989" width="0.2" height="15.0" fill="rgb(240,201,9)" rx="2" ry="2" />
<text  x="630.64" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (3 samples, 0.05%)</title><rect x="874.1" y="2005" width="0.6" height="15.0" fill="rgb(210,196,46)" rx="2" ry="2" />
<text  x="877.07" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="174.3" y="1877" width="0.6" height="15.0" fill="rgb(227,223,48)" rx="2" ry="2" />
<text  x="177.28" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.4" y="1925" width="0.2" height="15.0" fill="rgb(252,15,33)" rx="2" ry="2" />
<text  x="211.44" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="194.8" y="2005" width="0.2" height="15.0" fill="rgb(224,227,23)" rx="2" ry="2" />
<text  x="197.82" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="375.7" y="1941" width="0.6" height="15.0" fill="rgb(241,192,14)" rx="2" ry="2" />
<text  x="378.69" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="418.7" y="1893" width="0.2" height="15.0" fill="rgb(214,81,39)" rx="2" ry="2" />
<text  x="421.73" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (7 samples, 0.12%)</title><rect x="74.2" y="37" width="1.4" height="15.0" fill="rgb(205,8,5)" rx="2" ry="2" />
<text  x="77.17" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1053.8" y="1781" width="0.2" height="15.0" fill="rgb(237,215,4)" rx="2" ry="2" />
<text  x="1056.76" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (22 samples, 0.37%)</title><rect x="645.0" y="1973" width="4.4" height="15.0" fill="rgb(212,93,20)" rx="2" ry="2" />
<text  x="648.02" y="1983.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="725.4" y="1925" width="0.8" height="15.0" fill="rgb(253,176,19)" rx="2" ry="2" />
<text  x="728.38" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="171.3" y="1909" width="0.2" height="15.0" fill="rgb(230,118,5)" rx="2" ry="2" />
<text  x="174.32" y="1919.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="715.7" y="1941" width="0.2" height="15.0" fill="rgb(253,144,9)" rx="2" ry="2" />
<text  x="718.71" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="24.8" y="1973" width="0.2" height="15.0" fill="rgb(232,97,3)" rx="2" ry="2" />
<text  x="27.81" y="1983.5" ></text>
</g>
<g >
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="310.3" y="1813" width="0.8" height="15.0" fill="rgb(227,206,20)" rx="2" ry="2" />
<text  x="313.33" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1301" width="51.8" height="15.0" fill="rgb(215,89,46)" rx="2" ry="2" />
<text  x="73.42" y="1311.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (2 samples, 0.03%)</title><rect x="947.1" y="1893" width="0.4" height="15.0" fill="rgb(215,88,8)" rx="2" ry="2" />
<text  x="950.13" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="854.3" y="2005" width="0.2" height="15.0" fill="rgb(241,123,9)" rx="2" ry="2" />
<text  x="857.32" y="2015.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (103 samples, 1.72%)</title><rect x="1056.1" y="1925" width="20.4" height="15.0" fill="rgb(237,182,48)" rx="2" ry="2" />
<text  x="1059.12" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (407 samples, 6.81%)</title><rect x="337.4" y="2037" width="80.3" height="15.0" fill="rgb(238,150,24)" rx="2" ry="2" />
<text  x="340.38" y="2047.5" >facebook:..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="856.7" y="1989" width="0.2" height="15.0" fill="rgb(231,228,7)" rx="2" ry="2" />
<text  x="859.69" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (5 samples, 0.08%)</title><rect x="762.1" y="1909" width="1.0" height="15.0" fill="rgb(249,226,10)" rx="2" ry="2" />
<text  x="765.11" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (82 samples, 1.37%)</title><rect x="1080.6" y="1765" width="16.2" height="15.0" fill="rgb(221,58,24)" rx="2" ry="2" />
<text  x="1083.61" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (82 samples, 1.37%)</title><rect x="1080.6" y="1733" width="16.2" height="15.0" fill="rgb(208,60,27)" rx="2" ry="2" />
<text  x="1083.61" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="618.2" y="1925" width="0.2" height="15.0" fill="rgb(238,211,32)" rx="2" ry="2" />
<text  x="621.17" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (1 samples, 0.02%)</title><rect x="88.6" y="37" width="0.2" height="15.0" fill="rgb(229,17,22)" rx="2" ry="2" />
<text  x="91.59" y="47.5" ></text>
</g>
<g >
<title>[mcrouter] (147 samples, 2.46%)</title><rect x="926.8" y="1941" width="29.0" height="15.0" fill="rgb(238,87,36)" rx="2" ry="2" />
<text  x="929.79" y="1951.5" >[m..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="164.0" y="1957" width="0.4" height="15.0" fill="rgb(206,180,48)" rx="2" ry="2" />
<text  x="167.02" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="789" width="51.8" height="15.0" fill="rgb(210,12,38)" rx="2" ry="2" />
<text  x="73.42" y="799.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="693" width="51.8" height="15.0" fill="rgb(233,93,30)" rx="2" ry="2" />
<text  x="73.42" y="703.5" >[unkn..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1070.5" y="1909" width="0.2" height="15.0" fill="rgb(242,149,46)" rx="2" ry="2" />
<text  x="1073.54" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (50 samples, 0.84%)</title><rect x="941.4" y="1909" width="9.9" height="15.0" fill="rgb(241,153,43)" rx="2" ry="2" />
<text  x="944.40" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="121.2" y="37" width="0.4" height="15.0" fill="rgb(239,135,51)" rx="2" ry="2" />
<text  x="124.17" y="47.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="414.4" y="1989" width="0.2" height="15.0" fill="rgb(251,131,21)" rx="2" ry="2" />
<text  x="417.39" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (8 samples, 0.13%)</title><rect x="499.9" y="1925" width="1.6" height="15.0" fill="rgb(239,87,12)" rx="2" ry="2" />
<text  x="502.89" y="1935.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="725.4" y="1813" width="0.8" height="15.0" fill="rgb(213,139,51)" rx="2" ry="2" />
<text  x="728.38" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="28.8" y="1973" width="0.4" height="15.0" fill="rgb(235,40,22)" rx="2" ry="2" />
<text  x="31.76" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (56 samples, 0.94%)</title><rect x="471.1" y="2005" width="11.0" height="15.0" fill="rgb(250,113,36)" rx="2" ry="2" />
<text  x="474.06" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="12.4" y="2021" width="1.0" height="15.0" fill="rgb(234,38,42)" rx="2" ry="2" />
<text  x="15.37" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (15 samples, 0.25%)</title><rect x="708.2" y="1925" width="3.0" height="15.0" fill="rgb(241,186,54)" rx="2" ry="2" />
<text  x="711.21" y="1935.5" ></text>
</g>
<g >
<title>skb_release_data (50 samples, 0.84%)</title><rect x="1021.6" y="1893" width="9.8" height="15.0" fill="rgb(205,79,2)" rx="2" ry="2" />
<text  x="1024.57" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="711.6" y="1909" width="0.2" height="15.0" fill="rgb(246,83,8)" rx="2" ry="2" />
<text  x="714.56" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="653.9" y="1973" width="0.2" height="15.0" fill="rgb(233,84,45)" rx="2" ry="2" />
<text  x="656.91" y="1983.5" ></text>
</g>
<g >
<title>tcp_current_mss (11 samples, 0.18%)</title><rect x="315.3" y="1861" width="2.1" height="15.0" fill="rgb(222,17,6)" rx="2" ry="2" />
<text  x="318.27" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::fibers::LoopController*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="416.4" y="1909" width="0.2" height="15.0" fill="rgb(210,86,35)" rx="2" ry="2" />
<text  x="419.37" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="845.8" y="1989" width="1.0" height="15.0" fill="rgb(206,160,43)" rx="2" ry="2" />
<text  x="848.83" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (7 samples, 0.12%)</title><rect x="103.8" y="37" width="1.4" height="15.0" fill="rgb(241,171,8)" rx="2" ry="2" />
<text  x="106.79" y="47.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="335.6" y="2037" width="0.2" height="15.0" fill="rgb(243,224,17)" rx="2" ry="2" />
<text  x="338.61" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::reply&lt;facebook::memcache::McGetReply&gt; (5 samples, 0.08%)</title><rect x="636.7" y="1973" width="1.0" height="15.0" fill="rgb(254,160,30)" rx="2" ry="2" />
<text  x="639.73" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="405.1" y="1989" width="0.2" height="15.0" fill="rgb(232,166,40)" rx="2" ry="2" />
<text  x="408.11" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (44 samples, 0.74%)</title><rect x="293.9" y="1557" width="8.7" height="15.0" fill="rgb(252,229,35)" rx="2" ry="2" />
<text  x="296.94" y="1567.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="30.1" y="1957" width="0.2" height="15.0" fill="rgb(245,117,39)" rx="2" ry="2" />
<text  x="33.14" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.07%)</title><rect x="395.6" y="1989" width="0.8" height="15.0" fill="rgb(245,164,15)" rx="2" ry="2" />
<text  x="398.63" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (17 samples, 0.28%)</title><rect x="543.5" y="2021" width="3.4" height="15.0" fill="rgb(240,132,28)" rx="2" ry="2" />
<text  x="546.53" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="754.4" y="1861" width="0.4" height="15.0" fill="rgb(219,48,36)" rx="2" ry="2" />
<text  x="757.41" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="453" width="51.8" height="15.0" fill="rgb(253,49,7)" rx="2" ry="2" />
<text  x="73.42" y="463.5" >[unkn..</text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McSetReply&gt;::~Try (2 samples, 0.03%)</title><rect x="860.8" y="2037" width="0.4" height="15.0" fill="rgb(218,227,46)" rx="2" ry="2" />
<text  x="863.84" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (39 samples, 0.65%)</title><rect x="1118.5" y="2037" width="7.7" height="15.0" fill="rgb(210,161,43)" rx="2" ry="2" />
<text  x="1121.52" y="2047.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="285.6" y="1813" width="0.2" height="15.0" fill="rgb(251,193,7)" rx="2" ry="2" />
<text  x="288.65" y="1823.5" ></text>
</g>
<g >
<title>ip_output (89 samples, 1.49%)</title><rect x="291.4" y="1781" width="17.5" height="15.0" fill="rgb(235,158,20)" rx="2" ry="2" />
<text  x="294.38" y="1791.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (10 samples, 0.17%)</title><rect x="350.2" y="1909" width="2.0" height="15.0" fill="rgb(248,28,53)" rx="2" ry="2" />
<text  x="353.22" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="695.4" y="2005" width="1.4" height="15.0" fill="rgb(245,77,19)" rx="2" ry="2" />
<text  x="698.37" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1141.8" y="1989" width="0.2" height="15.0" fill="rgb(239,70,25)" rx="2" ry="2" />
<text  x="1144.82" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (78 samples, 1.31%)</title><rect x="1081.4" y="1637" width="15.4" height="15.0" fill="rgb(242,220,31)" rx="2" ry="2" />
<text  x="1084.40" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="210.4" y="1877" width="0.2" height="15.0" fill="rgb(237,219,22)" rx="2" ry="2" />
<text  x="213.42" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="200.5" y="1973" width="0.2" height="15.0" fill="rgb(219,8,43)" rx="2" ry="2" />
<text  x="203.55" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (23 samples, 0.38%)</title><rect x="538.4" y="2021" width="4.5" height="15.0" fill="rgb(213,125,19)" rx="2" ry="2" />
<text  x="541.39" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1893" width="51.8" height="15.0" fill="rgb(211,52,50)" rx="2" ry="2" />
<text  x="73.42" y="1903.5" >[unkn..</text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="10.6" y="1909" width="0.2" height="15.0" fill="rgb(227,19,37)" rx="2" ry="2" />
<text  x="13.59" y="1919.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1031.2" y="1829" width="0.2" height="15.0" fill="rgb(237,210,2)" rx="2" ry="2" />
<text  x="1034.24" y="1839.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (2 samples, 0.03%)</title><rect x="19.9" y="2037" width="0.4" height="15.0" fill="rgb(232,57,7)" rx="2" ry="2" />
<text  x="22.87" y="2047.5" ></text>
</g>
<g >
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1047.0" y="1893" width="0.4" height="15.0" fill="rgb(214,208,44)" rx="2" ry="2" />
<text  x="1050.04" y="1903.5" ></text>
</g>
<g >
<title>__kfree_skb (19 samples, 0.32%)</title><rect x="297.3" y="1461" width="3.8" height="15.0" fill="rgb(235,170,27)" rx="2" ry="2" />
<text  x="300.30" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (6 samples, 0.10%)</title><rect x="130.8" y="1925" width="1.2" height="15.0" fill="rgb(221,152,34)" rx="2" ry="2" />
<text  x="133.84" y="1935.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1086.7" y="1461" width="0.2" height="15.0" fill="rgb(223,20,19)" rx="2" ry="2" />
<text  x="1089.73" y="1471.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="313.7" y="1813" width="0.2" height="15.0" fill="rgb(242,163,13)" rx="2" ry="2" />
<text  x="316.69" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1685" width="51.8" height="15.0" fill="rgb(222,115,22)" rx="2" ry="2" />
<text  x="73.42" y="1695.5" >[unkn..</text>
</g>
<g >
<title>[libjemalloc.so.1] (122 samples, 2.04%)</title><rect x="31.7" y="2053" width="24.1" height="15.0" fill="rgb(251,161,24)" rx="2" ry="2" />
<text  x="34.72" y="2063.5" >[..</text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1100.2" y="1941" width="0.2" height="15.0" fill="rgb(233,11,46)" rx="2" ry="2" />
<text  x="1103.16" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="366.6" y="1909" width="0.4" height="15.0" fill="rgb(238,25,52)" rx="2" ry="2" />
<text  x="369.61" y="1919.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="420.1" y="1893" width="0.6" height="15.0" fill="rgb(229,24,17)" rx="2" ry="2" />
<text  x="423.12" y="1903.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="855.5" y="2005" width="0.2" height="15.0" fill="rgb(251,46,43)" rx="2" ry="2" />
<text  x="858.51" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="357.3" y="1941" width="0.6" height="15.0" fill="rgb(224,115,21)" rx="2" ry="2" />
<text  x="360.33" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (11 samples, 0.18%)</title><rect x="856.9" y="2037" width="2.2" height="15.0" fill="rgb(228,70,40)" rx="2" ry="2" />
<text  x="859.89" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (3 samples, 0.05%)</title><rect x="294.3" y="1477" width="0.6" height="15.0" fill="rgb(237,180,32)" rx="2" ry="2" />
<text  x="297.34" y="1487.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;unsigned long, unsigned long&gt; (1 samples, 0.02%)</title><rect x="1125.0" y="1989" width="0.2" height="15.0" fill="rgb(247,40,35)" rx="2" ry="2" />
<text  x="1128.04" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (1 samples, 0.02%)</title><rect x="21.8" y="1989" width="0.2" height="15.0" fill="rgb(210,80,24)" rx="2" ry="2" />
<text  x="24.85" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (122 samples, 2.04%)</title><rect x="134.0" y="1989" width="24.1" height="15.0" fill="rgb(254,26,5)" rx="2" ry="2" />
<text  x="137.00" y="1999.5" >f..</text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="443.0" y="1925" width="0.2" height="15.0" fill="rgb(237,101,36)" rx="2" ry="2" />
<text  x="446.02" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="764.1" y="1925" width="2.4" height="15.0" fill="rgb(221,64,48)" rx="2" ry="2" />
<text  x="767.09" y="1935.5" ></text>
</g>
<g >
<title>free (32 samples, 0.54%)</title><rect x="220.1" y="2021" width="6.3" height="15.0" fill="rgb(208,64,49)" rx="2" ry="2" />
<text  x="223.09" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::processRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="672.7" y="2037" width="0.2" height="15.0" fill="rgb(248,107,21)" rx="2" ry="2" />
<text  x="675.66" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (7 samples, 0.12%)</title><rect x="426.2" y="2005" width="1.4" height="15.0" fill="rgb(249,103,41)" rx="2" ry="2" />
<text  x="429.24" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="202.5" y="1973" width="1.2" height="15.0" fill="rgb(238,172,44)" rx="2" ry="2" />
<text  x="205.52" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="443.6" y="1925" width="0.2" height="15.0" fill="rgb(217,48,5)" rx="2" ry="2" />
<text  x="446.61" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (82 samples, 1.37%)</title><rect x="1080.6" y="1717" width="16.2" height="15.0" fill="rgb(243,73,13)" rx="2" ry="2" />
<text  x="1083.61" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (6 samples, 0.10%)</title><rect x="584.0" y="1989" width="1.2" height="15.0" fill="rgb(220,80,53)" rx="2" ry="2" />
<text  x="587.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_rcv_established (19 samples, 0.32%)</title><rect x="1051.6" y="1877" width="3.7" height="15.0" fill="rgb(236,119,28)" rx="2" ry="2" />
<text  x="1054.58" y="1887.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (6 samples, 0.10%)</title><rect x="319.0" y="1957" width="1.2" height="15.0" fill="rgb(254,46,27)" rx="2" ry="2" />
<text  x="322.02" y="1967.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (46 samples, 0.77%)</title><rect x="915.7" y="1957" width="9.1" height="15.0" fill="rgb(254,55,35)" rx="2" ry="2" />
<text  x="918.73" y="1967.5" ></text>
</g>
<g >
<title>sys_sendmsg (316 samples, 5.29%)</title><rect x="258.0" y="1989" width="62.4" height="15.0" fill="rgb(221,153,11)" rx="2" ry="2" />
<text  x="261.01" y="1999.5" >sys_se..</text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="311.5" y="1813" width="0.2" height="15.0" fill="rgb(209,92,19)" rx="2" ry="2" />
<text  x="314.52" y="1823.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="284.3" y="1845" width="0.2" height="15.0" fill="rgb(219,141,27)" rx="2" ry="2" />
<text  x="287.27" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1701" width="51.8" height="15.0" fill="rgb(217,87,37)" rx="2" ry="2" />
<text  x="73.42" y="1711.5" >[unkn..</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="260.2" y="1925" width="0.2" height="15.0" fill="rgb(205,176,24)" rx="2" ry="2" />
<text  x="263.18" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="825.1" y="1957" width="0.2" height="15.0" fill="rgb(251,150,8)" rx="2" ry="2" />
<text  x="828.10" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="613.8" y="1909" width="1.2" height="15.0" fill="rgb(218,24,13)" rx="2" ry="2" />
<text  x="616.82" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="663.0" y="1989" width="0.2" height="15.0" fill="rgb(208,84,13)" rx="2" ry="2" />
<text  x="665.99" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (18 samples, 0.30%)</title><rect x="195.6" y="2021" width="3.6" height="15.0" fill="rgb(226,207,34)" rx="2" ry="2" />
<text  x="198.61" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="165.8" y="1957" width="0.4" height="15.0" fill="rgb(240,193,49)" rx="2" ry="2" />
<text  x="168.79" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="871.7" y="1941" width="0.2" height="15.0" fill="rgb(215,44,7)" rx="2" ry="2" />
<text  x="874.70" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="891.1" y="1989" width="0.1" height="15.0" fill="rgb(237,74,43)" rx="2" ry="2" />
<text  x="894.05" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (3 samples, 0.05%)</title><rect x="626.3" y="1989" width="0.6" height="15.0" fill="rgb(234,43,38)" rx="2" ry="2" />
<text  x="629.26" y="1999.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="283.5" y="1829" width="0.2" height="15.0" fill="rgb(231,110,26)" rx="2" ry="2" />
<text  x="286.48" y="1839.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="326.3" y="2037" width="0.8" height="15.0" fill="rgb(223,128,42)" rx="2" ry="2" />
<text  x="329.33" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (7 samples, 0.12%)</title><rect x="217.7" y="2021" width="1.4" height="15.0" fill="rgb(236,180,42)" rx="2" ry="2" />
<text  x="220.72" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (85 samples, 1.42%)</title><rect x="1080.4" y="1797" width="16.8" height="15.0" fill="rgb(220,88,45)" rx="2" ry="2" />
<text  x="1083.41" y="1807.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="324.9" y="2037" width="0.2" height="15.0" fill="rgb(219,100,2)" rx="2" ry="2" />
<text  x="327.94" y="2047.5" ></text>
</g>
<g >
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="317.0" y="1845" width="0.4" height="15.0" fill="rgb(248,207,34)" rx="2" ry="2" />
<text  x="320.04" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (3 samples, 0.05%)</title><rect x="72.2" y="37" width="0.6" height="15.0" fill="rgb(230,120,17)" rx="2" ry="2" />
<text  x="75.20" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="621.1" y="1989" width="0.4" height="15.0" fill="rgb(233,63,10)" rx="2" ry="2" />
<text  x="624.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (3 samples, 0.05%)</title><rect x="76.0" y="37" width="0.5" height="15.0" fill="rgb(223,24,54)" rx="2" ry="2" />
<text  x="78.95" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="119.6" y="69" width="2.0" height="15.0" fill="rgb(254,38,44)" rx="2" ry="2" />
<text  x="122.59" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="418.1" y="1877" width="0.2" height="15.0" fill="rgb(212,141,9)" rx="2" ry="2" />
<text  x="421.14" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="618.8" y="1909" width="0.2" height="15.0" fill="rgb(214,61,53)" rx="2" ry="2" />
<text  x="621.76" y="1919.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="482.1" y="2005" width="1.2" height="15.0" fill="rgb(253,136,6)" rx="2" ry="2" />
<text  x="485.12" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="75.6" y="37" width="0.4" height="15.0" fill="rgb(227,1,40)" rx="2" ry="2" />
<text  x="78.56" y="47.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="204.5" y="1957" width="0.4" height="15.0" fill="rgb(246,42,3)" rx="2" ry="2" />
<text  x="207.49" y="1967.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="1154.5" y="1909" width="0.2" height="15.0" fill="rgb(240,11,35)" rx="2" ry="2" />
<text  x="1157.46" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1124.8" y="1925" width="0.2" height="15.0" fill="rgb(249,85,13)" rx="2" ry="2" />
<text  x="1127.84" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (4 samples, 0.07%)</title><rect x="150.4" y="1925" width="0.8" height="15.0" fill="rgb(241,134,27)" rx="2" ry="2" />
<text  x="153.39" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (81 samples, 1.36%)</title><rect x="1080.8" y="1669" width="16.0" height="15.0" fill="rgb(236,205,6)" rx="2" ry="2" />
<text  x="1083.81" y="1679.5" ></text>
</g>
<g >
<title>__kfree_skb (159 samples, 2.66%)</title><rect x="1016.2" y="1925" width="31.4" height="15.0" fill="rgb(248,98,41)" rx="2" ry="2" />
<text  x="1019.24" y="1935.5" >__..</text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (3 samples, 0.05%)</title><rect x="380.4" y="1925" width="0.6" height="15.0" fill="rgb(222,178,25)" rx="2" ry="2" />
<text  x="383.43" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.02%)</title><rect x="413.6" y="1989" width="0.2" height="15.0" fill="rgb(238,6,22)" rx="2" ry="2" />
<text  x="416.60" y="1999.5" ></text>
</g>
<g >
<title>evmap_io_active_ (2 samples, 0.03%)</title><rect x="335.8" y="2037" width="0.4" height="15.0" fill="rgb(209,28,50)" rx="2" ry="2" />
<text  x="338.80" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (11 samples, 0.18%)</title><rect x="663.2" y="2005" width="2.2" height="15.0" fill="rgb(222,28,37)" rx="2" ry="2" />
<text  x="666.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="435.3" y="2005" width="0.6" height="15.0" fill="rgb(229,84,48)" rx="2" ry="2" />
<text  x="438.32" y="2015.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1047.8" y="1909" width="0.2" height="15.0" fill="rgb(216,2,52)" rx="2" ry="2" />
<text  x="1050.83" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="612.2" y="1861" width="0.2" height="15.0" fill="rgb(216,65,53)" rx="2" ry="2" />
<text  x="615.24" y="1871.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="442.0" y="1941" width="0.2" height="15.0" fill="rgb(229,69,22)" rx="2" ry="2" />
<text  x="445.03" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (79 samples, 1.32%)</title><rect x="1031.4" y="1893" width="15.6" height="15.0" fill="rgb(236,39,14)" rx="2" ry="2" />
<text  x="1034.44" y="1903.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (7 samples, 0.12%)</title><rect x="211.0" y="1941" width="1.4" height="15.0" fill="rgb(233,163,52)" rx="2" ry="2" />
<text  x="214.01" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="166.4" y="1925" width="0.2" height="15.0" fill="rgb(253,198,26)" rx="2" ry="2" />
<text  x="169.39" y="1935.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="283.1" y="1813" width="0.4" height="15.0" fill="rgb(208,171,44)" rx="2" ry="2" />
<text  x="286.08" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="210.4" y="1893" width="0.2" height="15.0" fill="rgb(227,106,32)" rx="2" ry="2" />
<text  x="213.42" y="1903.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1095.2" y="1525" width="0.2" height="15.0" fill="rgb(212,57,9)" rx="2" ry="2" />
<text  x="1098.22" y="1535.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (8 samples, 0.13%)</title><rect x="961.3" y="1973" width="1.6" height="15.0" fill="rgb(236,0,47)" rx="2" ry="2" />
<text  x="964.35" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (24 samples, 0.40%)</title><rect x="113.9" y="69" width="4.7" height="15.0" fill="rgb(214,174,42)" rx="2" ry="2" />
<text  x="116.86" y="79.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="1142.0" y="1989" width="0.4" height="15.0" fill="rgb(217,124,19)" rx="2" ry="2" />
<text  x="1145.02" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="629" width="51.8" height="15.0" fill="rgb(225,87,20)" rx="2" ry="2" />
<text  x="73.42" y="639.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::setSharedCtx (2 samples, 0.03%)</title><rect x="484.1" y="1989" width="0.4" height="15.0" fill="rgb(223,189,16)" rx="2" ry="2" />
<text  x="487.09" y="1999.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="642.1" y="1973" width="0.6" height="15.0" fill="rgb(218,21,33)" rx="2" ry="2" />
<text  x="645.06" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="972.2" y="2005" width="0.2" height="15.0" fill="rgb(235,119,4)" rx="2" ry="2" />
<text  x="975.21" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="890.9" y="1989" width="0.2" height="15.0" fill="rgb(223,9,5)" rx="2" ry="2" />
<text  x="893.85" y="1999.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (13 samples, 0.22%)</title><rect x="932.9" y="1909" width="2.6" height="15.0" fill="rgb(215,188,37)" rx="2" ry="2" />
<text  x="935.91" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (3 samples, 0.05%)</title><rect x="1156.0" y="2053" width="0.6" height="15.0" fill="rgb(254,220,12)" rx="2" ry="2" />
<text  x="1159.04" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="549.5" y="2021" width="0.1" height="15.0" fill="rgb(253,210,46)" rx="2" ry="2" />
<text  x="552.45" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::~WriteBuffer (2 samples, 0.03%)</title><rect x="215.4" y="2021" width="0.3" height="15.0" fill="rgb(244,107,48)" rx="2" ry="2" />
<text  x="218.35" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="413.8" y="2005" width="0.2" height="15.0" fill="rgb(208,92,11)" rx="2" ry="2" />
<text  x="416.80" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (12 samples, 0.20%)</title><rect x="564.5" y="1989" width="2.3" height="15.0" fill="rgb(227,13,30)" rx="2" ry="2" />
<text  x="567.46" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="622.3" y="1973" width="0.4" height="15.0" fill="rgb(235,160,8)" rx="2" ry="2" />
<text  x="625.31" y="1983.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="538.0" y="1909" width="0.2" height="15.0" fill="rgb(205,133,40)" rx="2" ry="2" />
<text  x="541.00" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="464.7" y="2005" width="3.0" height="15.0" fill="rgb(239,159,49)" rx="2" ry="2" />
<text  x="467.74" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="821.0" y="2005" width="0.5" height="15.0" fill="rgb(231,7,32)" rx="2" ry="2" />
<text  x="823.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getPendingRequestCount (1 samples, 0.02%)</title><rect x="1129.8" y="2053" width="0.2" height="15.0" fill="rgb(215,111,10)" rx="2" ry="2" />
<text  x="1132.78" y="2063.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="616.4" y="1909" width="0.4" height="15.0" fill="rgb(212,16,43)" rx="2" ry="2" />
<text  x="619.39" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="25.2" y="1925" width="0.2" height="15.0" fill="rgb(252,14,13)" rx="2" ry="2" />
<text  x="28.20" y="1935.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="265.9" y="1893" width="0.2" height="15.0" fill="rgb(217,198,48)" rx="2" ry="2" />
<text  x="268.90" y="1903.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="302.4" y="1445" width="0.2" height="15.0" fill="rgb(245,151,27)" rx="2" ry="2" />
<text  x="305.43" y="1455.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="627.8" y="2005" width="0.2" height="15.0" fill="rgb(227,186,7)" rx="2" ry="2" />
<text  x="630.84" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="613.0" y="1909" width="0.2" height="15.0" fill="rgb(233,212,22)" rx="2" ry="2" />
<text  x="616.03" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="562.3" y="1973" width="0.4" height="15.0" fill="rgb(236,207,30)" rx="2" ry="2" />
<text  x="565.29" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (3 samples, 0.05%)</title><rect x="55.8" y="2037" width="0.6" height="15.0" fill="rgb(251,63,38)" rx="2" ry="2" />
<text  x="58.81" y="2047.5" ></text>
</g>
<g >
<title>x86_pmu_enable (25 samples, 0.42%)</title><rect x="13.6" y="1877" width="4.9" height="15.0" fill="rgb(207,210,0)" rx="2" ry="2" />
<text  x="16.55" y="1887.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="169.7" y="1941" width="0.2" height="15.0" fill="rgb(238,93,22)" rx="2" ry="2" />
<text  x="172.74" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="545.7" y="1989" width="0.2" height="15.0" fill="rgb(220,2,18)" rx="2" ry="2" />
<text  x="548.70" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (8 samples, 0.13%)</title><rect x="197.6" y="2005" width="1.6" height="15.0" fill="rgb(245,208,33)" rx="2" ry="2" />
<text  x="200.58" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1781" width="51.8" height="15.0" fill="rgb(210,12,1)" rx="2" ry="2" />
<text  x="73.42" y="1791.5" >[unkn..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (11 samples, 0.18%)</title><rect x="863.6" y="1989" width="2.2" height="15.0" fill="rgb(229,226,3)" rx="2" ry="2" />
<text  x="866.60" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="538.0" y="2021" width="0.2" height="15.0" fill="rgb(243,206,33)" rx="2" ry="2" />
<text  x="541.00" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::advanceRequestStatsBin (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(211,45,25)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="1142.8" y="2005" width="0.4" height="15.0" fill="rgb(248,9,35)" rx="2" ry="2" />
<text  x="1145.81" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (23 samples, 0.38%)</title><rect x="91.5" y="53" width="4.6" height="15.0" fill="rgb(210,10,39)" rx="2" ry="2" />
<text  x="94.55" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="714.9" y="1909" width="0.8" height="15.0" fill="rgb(236,168,37)" rx="2" ry="2" />
<text  x="717.92" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="164.4" y="1973" width="0.4" height="15.0" fill="rgb(243,127,18)" rx="2" ry="2" />
<text  x="167.41" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::runNoInline&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (1 samples, 0.02%)</title><rect x="926.0" y="1989" width="0.2" height="15.0" fill="rgb(227,79,22)" rx="2" ry="2" />
<text  x="929.00" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (9 samples, 0.15%)</title><rect x="405.5" y="1973" width="1.8" height="15.0" fill="rgb(209,86,29)" rx="2" ry="2" />
<text  x="408.51" y="1983.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="159.5" y="1973" width="0.2" height="15.0" fill="rgb(244,161,13)" rx="2" ry="2" />
<text  x="162.47" y="1983.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="208.0" y="1957" width="0.2" height="15.0" fill="rgb(213,85,47)" rx="2" ry="2" />
<text  x="211.05" y="1967.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="56.0" y="2021" width="0.4" height="15.0" fill="rgb(226,215,43)" rx="2" ry="2" />
<text  x="59.01" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (5 samples, 0.08%)</title><rect x="710.2" y="1909" width="1.0" height="15.0" fill="rgb(211,175,15)" rx="2" ry="2" />
<text  x="713.18" y="1919.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (31 samples, 0.52%)</title><rect x="302.6" y="1717" width="6.2" height="15.0" fill="rgb(250,142,11)" rx="2" ry="2" />
<text  x="305.63" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="776.9" y="1941" width="0.2" height="15.0" fill="rgb(218,0,34)" rx="2" ry="2" />
<text  x="779.92" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="425.4" y="2037" width="0.2" height="15.0" fill="rgb(224,138,22)" rx="2" ry="2" />
<text  x="428.45" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="495.7" y="1941" width="0.2" height="15.0" fill="rgb(239,170,1)" rx="2" ry="2" />
<text  x="498.74" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.37%)</title><rect x="675.4" y="2021" width="4.4" height="15.0" fill="rgb(249,212,43)" rx="2" ry="2" />
<text  x="678.43" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="231.3" y="2021" width="0.2" height="15.0" fill="rgb(235,209,18)" rx="2" ry="2" />
<text  x="234.35" y="2031.5" ></text>
</g>
<g >
<title>___sys_sendmsg (305 samples, 5.10%)</title><rect x="258.8" y="1957" width="60.2" height="15.0" fill="rgb(239,187,43)" rx="2" ry="2" />
<text  x="261.80" y="1967.5" >___sys..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (6 samples, 0.10%)</title><rect x="717.1" y="1925" width="1.2" height="15.0" fill="rgb(215,228,17)" rx="2" ry="2" />
<text  x="720.09" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="282.3" y="1797" width="0.2" height="15.0" fill="rgb(241,46,49)" rx="2" ry="2" />
<text  x="285.29" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="121.6" y="53" width="0.2" height="15.0" fill="rgb(205,166,16)" rx="2" ry="2" />
<text  x="124.56" y="63.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1605" width="51.8" height="15.0" fill="rgb(245,119,8)" rx="2" ry="2" />
<text  x="73.42" y="1615.5" >[unkn..</text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (10 samples, 0.17%)</title><rect x="386.7" y="1973" width="2.0" height="15.0" fill="rgb(214,61,25)" rx="2" ry="2" />
<text  x="389.75" y="1983.5" ></text>
</g>
<g >
<title>std::fill&lt;unsigned long*, unsigned long&gt; (2 samples, 0.03%)</title><rect x="513.1" y="1941" width="0.4" height="15.0" fill="rgb(239,221,6)" rx="2" ry="2" />
<text  x="516.12" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="302.4" y="1429" width="0.2" height="15.0" fill="rgb(222,169,8)" rx="2" ry="2" />
<text  x="305.43" y="1439.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="147.0" y="1909" width="0.4" height="15.0" fill="rgb(247,14,1)" rx="2" ry="2" />
<text  x="150.03" y="1919.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.02%)</title><rect x="335.4" y="2005" width="0.2" height="15.0" fill="rgb(235,184,31)" rx="2" ry="2" />
<text  x="338.41" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (1 samples, 0.02%)</title><rect x="168.4" y="1989" width="0.2" height="15.0" fill="rgb(218,57,46)" rx="2" ry="2" />
<text  x="171.36" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1765" width="51.8" height="15.0" fill="rgb(229,150,2)" rx="2" ry="2" />
<text  x="73.42" y="1775.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="165.8" y="1941" width="0.4" height="15.0" fill="rgb(206,205,0)" rx="2" ry="2" />
<text  x="168.79" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (44 samples, 0.74%)</title><rect x="293.9" y="1637" width="8.7" height="15.0" fill="rgb(218,13,35)" rx="2" ry="2" />
<text  x="296.94" y="1647.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1050.4" y="1877" width="0.4" height="15.0" fill="rgb(241,4,24)" rx="2" ry="2" />
<text  x="1053.40" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (1 samples, 0.02%)</title><rect x="916.5" y="1925" width="0.2" height="15.0" fill="rgb(218,140,16)" rx="2" ry="2" />
<text  x="919.52" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (15 samples, 0.25%)</title><rect x="364.0" y="1973" width="3.0" height="15.0" fill="rgb(226,161,37)" rx="2" ry="2" />
<text  x="367.04" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="360.9" y="1973" width="0.2" height="15.0" fill="rgb(223,21,24)" rx="2" ry="2" />
<text  x="363.88" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="955.6" y="1925" width="0.2" height="15.0" fill="rgb(205,27,4)" rx="2" ry="2" />
<text  x="958.62" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="619.2" y="1973" width="0.2" height="15.0" fill="rgb(237,163,34)" rx="2" ry="2" />
<text  x="622.15" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (84 samples, 1.41%)</title><rect x="292.2" y="1749" width="16.6" height="15.0" fill="rgb(245,149,2)" rx="2" ry="2" />
<text  x="295.17" y="1759.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (33 samples, 0.55%)</title><rect x="328.7" y="1957" width="6.5" height="15.0" fill="rgb(218,160,39)" rx="2" ry="2" />
<text  x="331.69" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="424.5" y="2021" width="0.4" height="15.0" fill="rgb(241,195,54)" rx="2" ry="2" />
<text  x="427.46" y="2031.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (2 samples, 0.03%)</title><rect x="69.8" y="2005" width="0.4" height="15.0" fill="rgb(216,2,28)" rx="2" ry="2" />
<text  x="72.83" y="2015.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="294.7" y="1349" width="0.2" height="15.0" fill="rgb(227,16,2)" rx="2" ry="2" />
<text  x="297.73" y="1359.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (4 samples, 0.07%)</title><rect x="467.7" y="2005" width="0.8" height="15.0" fill="rgb(210,80,29)" rx="2" ry="2" />
<text  x="470.70" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="97.9" y="37" width="0.2" height="15.0" fill="rgb(237,180,16)" rx="2" ry="2" />
<text  x="100.87" y="47.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="619.0" y="1973" width="0.2" height="15.0" fill="rgb(243,86,3)" rx="2" ry="2" />
<text  x="621.96" y="1983.5" ></text>
</g>
<g >
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="290.0" y="1797" width="0.4" height="15.0" fill="rgb(205,148,0)" rx="2" ry="2" />
<text  x="292.99" y="1807.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (37 samples, 0.62%)</title><rect x="359.7" y="1989" width="7.3" height="15.0" fill="rgb(254,109,16)" rx="2" ry="2" />
<text  x="362.70" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (7 samples, 0.12%)</title><rect x="661.0" y="1989" width="1.4" height="15.0" fill="rgb(231,124,21)" rx="2" ry="2" />
<text  x="664.01" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="172.5" y="1877" width="0.2" height="15.0" fill="rgb(254,78,0)" rx="2" ry="2" />
<text  x="175.51" y="1887.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="941.0" y="1877" width="0.4" height="15.0" fill="rgb(229,160,16)" rx="2" ry="2" />
<text  x="944.01" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (2 samples, 0.03%)</title><rect x="1147.3" y="2053" width="0.4" height="15.0" fill="rgb(223,133,25)" rx="2" ry="2" />
<text  x="1150.35" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (24 samples, 0.40%)</title><rect x="866.8" y="2037" width="4.7" height="15.0" fill="rgb(209,70,43)" rx="2" ry="2" />
<text  x="869.76" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="22.6" y="1973" width="0.2" height="15.0" fill="rgb(211,115,0)" rx="2" ry="2" />
<text  x="25.64" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (132 samples, 2.21%)</title><rect x="1021.4" y="1909" width="26.0" height="15.0" fill="rgb(240,190,23)" rx="2" ry="2" />
<text  x="1024.37" y="1919.5" >s..</text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (2 samples, 0.03%)</title><rect x="388.7" y="1957" width="0.4" height="15.0" fill="rgb(216,212,16)" rx="2" ry="2" />
<text  x="391.72" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="563.9" y="1989" width="0.2" height="15.0" fill="rgb(242,186,21)" rx="2" ry="2" />
<text  x="566.87" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1164.7" y="2053" width="0.2" height="15.0" fill="rgb(245,147,5)" rx="2" ry="2" />
<text  x="1167.73" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="508.8" y="1925" width="1.4" height="15.0" fill="rgb(220,121,6)" rx="2" ry="2" />
<text  x="511.78" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="118.6" y="37" width="0.4" height="15.0" fill="rgb(243,83,43)" rx="2" ry="2" />
<text  x="121.60" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="552.8" y="2037" width="0.2" height="15.0" fill="rgb(253,53,8)" rx="2" ry="2" />
<text  x="555.81" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (25 samples, 0.42%)</title><rect x="127.3" y="1957" width="4.9" height="15.0" fill="rgb(227,25,23)" rx="2" ry="2" />
<text  x="130.29" y="1967.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="1096.0" y="1541" width="0.2" height="15.0" fill="rgb(250,25,34)" rx="2" ry="2" />
<text  x="1099.01" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="163.6" y="1941" width="0.2" height="15.0" fill="rgb(245,101,26)" rx="2" ry="2" />
<text  x="166.62" y="1951.5" ></text>
</g>
<g >
<title>jump_fcontext (3 samples, 0.05%)</title><rect x="757.0" y="1877" width="0.6" height="15.0" fill="rgb(239,79,32)" rx="2" ry="2" />
<text  x="759.98" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="1162.6" y="2053" width="0.3" height="15.0" fill="rgb(251,200,31)" rx="2" ry="2" />
<text  x="1165.55" y="2063.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (9 samples, 0.15%)</title><rect x="728.9" y="1909" width="1.8" height="15.0" fill="rgb(217,106,2)" rx="2" ry="2" />
<text  x="731.94" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (6 samples, 0.10%)</title><rect x="745.1" y="1877" width="1.2" height="15.0" fill="rgb(239,209,2)" rx="2" ry="2" />
<text  x="748.13" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="821" width="51.8" height="15.0" fill="rgb(248,197,25)" rx="2" ry="2" />
<text  x="73.42" y="831.5" >[unkn..</text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="12.4" y="1957" width="0.8" height="15.0" fill="rgb(250,82,30)" rx="2" ry="2" />
<text  x="15.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (16 samples, 0.27%)</title><rect x="822.1" y="2005" width="3.2" height="15.0" fill="rgb(225,150,53)" rx="2" ry="2" />
<text  x="825.14" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (3 samples, 0.05%)</title><rect x="209.6" y="1925" width="0.6" height="15.0" fill="rgb(235,103,17)" rx="2" ry="2" />
<text  x="212.63" y="1935.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (12 samples, 0.20%)</title><rect x="378.8" y="1973" width="2.4" height="15.0" fill="rgb(208,99,52)" rx="2" ry="2" />
<text  x="381.85" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (33 samples, 0.55%)</title><rect x="169.1" y="1957" width="6.6" height="15.0" fill="rgb(233,205,51)" rx="2" ry="2" />
<text  x="172.15" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.8" y="1909" width="0.2" height="15.0" fill="rgb(216,75,5)" rx="2" ry="2" />
<text  x="211.84" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="1125.4" y="1973" width="0.2" height="15.0" fill="rgb(227,27,2)" rx="2" ry="2" />
<text  x="1128.43" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (8 samples, 0.13%)</title><rect x="498.3" y="1925" width="1.6" height="15.0" fill="rgb(209,139,5)" rx="2" ry="2" />
<text  x="501.31" y="1935.5" ></text>
</g>
<g >
<title>native_sched_clock (4 samples, 0.07%)</title><rect x="1098.6" y="1877" width="0.8" height="15.0" fill="rgb(216,148,48)" rx="2" ry="2" />
<text  x="1101.58" y="1887.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (6 samples, 0.10%)</title><rect x="997.3" y="2037" width="1.2" height="15.0" fill="rgb(220,16,11)" rx="2" ry="2" />
<text  x="1000.28" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="618.8" y="1861" width="0.2" height="15.0" fill="rgb(233,100,36)" rx="2" ry="2" />
<text  x="621.76" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="170.5" y="1925" width="0.4" height="15.0" fill="rgb(223,124,15)" rx="2" ry="2" />
<text  x="173.53" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="425.3" y="2037" width="0.1" height="15.0" fill="rgb(229,40,44)" rx="2" ry="2" />
<text  x="428.25" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="1187.2" y="2053" width="1.2" height="15.0" fill="rgb(239,225,45)" rx="2" ry="2" />
<text  x="1190.24" y="2063.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="394.6" y="1989" width="0.2" height="15.0" fill="rgb(212,7,28)" rx="2" ry="2" />
<text  x="397.65" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="26.4" y="1909" width="0.2" height="15.0" fill="rgb(207,129,52)" rx="2" ry="2" />
<text  x="29.39" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="960.6" y="1957" width="0.5" height="15.0" fill="rgb(228,107,50)" rx="2" ry="2" />
<text  x="963.56" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.12%)</title><rect x="11.0" y="1829" width="1.4" height="15.0" fill="rgb(218,81,19)" rx="2" ry="2" />
<text  x="13.99" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="170.3" y="1941" width="0.6" height="15.0" fill="rgb(243,145,25)" rx="2" ry="2" />
<text  x="173.33" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="25.2" y="1909" width="0.2" height="15.0" fill="rgb(243,171,50)" rx="2" ry="2" />
<text  x="28.20" y="1919.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="211.4" y="1909" width="0.4" height="15.0" fill="rgb(227,155,11)" rx="2" ry="2" />
<text  x="214.41" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="454.3" y="2005" width="0.2" height="15.0" fill="rgb(250,112,43)" rx="2" ry="2" />
<text  x="457.28" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="112.9" y="37" width="0.2" height="15.0" fill="rgb(209,34,49)" rx="2" ry="2" />
<text  x="115.87" y="47.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="211.0" y="1909" width="0.2" height="15.0" fill="rgb(219,6,26)" rx="2" ry="2" />
<text  x="214.01" y="1919.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="352.8" y="1925" width="0.4" height="15.0" fill="rgb(224,112,21)" rx="2" ry="2" />
<text  x="355.78" y="1935.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (2 samples, 0.03%)</title><rect x="453.9" y="2005" width="0.4" height="15.0" fill="rgb(243,208,23)" rx="2" ry="2" />
<text  x="456.88" y="2015.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.05%)</title><rect x="423.5" y="1925" width="0.6" height="15.0" fill="rgb(217,124,13)" rx="2" ry="2" />
<text  x="426.47" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="374.7" y="1941" width="0.2" height="15.0" fill="rgb(252,156,16)" rx="2" ry="2" />
<text  x="377.70" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (225 samples, 3.77%)</title><rect x="722.4" y="1957" width="44.5" height="15.0" fill="rgb(221,72,16)" rx="2" ry="2" />
<text  x="725.42" y="1967.5" >foll..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="685.3" y="2005" width="0.4" height="15.0" fill="rgb(237,196,32)" rx="2" ry="2" />
<text  x="688.30" y="2015.5" ></text>
</g>
<g >
<title>__gthread_active_p (5 samples, 0.08%)</title><rect x="940.0" y="1877" width="1.0" height="15.0" fill="rgb(228,9,42)" rx="2" ry="2" />
<text  x="943.02" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (9 samples, 0.15%)</title><rect x="874.7" y="2005" width="1.7" height="15.0" fill="rgb(219,17,14)" rx="2" ry="2" />
<text  x="877.66" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="689.4" y="2037" width="0.2" height="15.0" fill="rgb(229,60,33)" rx="2" ry="2" />
<text  x="692.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1397" width="51.8" height="15.0" fill="rgb(231,123,49)" rx="2" ry="2" />
<text  x="73.42" y="1407.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (103 samples, 1.72%)</title><rect x="137.2" y="1973" width="20.3" height="15.0" fill="rgb(225,171,50)" rx="2" ry="2" />
<text  x="140.16" y="1983.5" ></text>
</g>
<g >
<title>carbon-global-s (12 samples, 0.20%)</title><rect x="10.0" y="2069" width="2.4" height="15.0" fill="rgb(247,87,6)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="706.2" y="1941" width="0.2" height="15.0" fill="rgb(219,8,48)" rx="2" ry="2" />
<text  x="709.23" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (341 samples, 5.71%)</title><rect x="553.0" y="2037" width="67.3" height="15.0" fill="rgb(245,170,3)" rx="2" ry="2" />
<text  x="556.01" y="2047.5" >faceboo..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="12.4" y="2037" width="1.0" height="15.0" fill="rgb(220,73,27)" rx="2" ry="2" />
<text  x="15.37" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="688.7" y="1957" width="0.2" height="15.0" fill="rgb(208,110,24)" rx="2" ry="2" />
<text  x="691.66" y="1967.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.08%)</title><rect x="319.2" y="1925" width="1.0" height="15.0" fill="rgb(232,13,37)" rx="2" ry="2" />
<text  x="322.22" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="418.9" y="1893" width="0.2" height="15.0" fill="rgb(243,138,5)" rx="2" ry="2" />
<text  x="421.93" y="1903.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="291.8" y="1749" width="0.2" height="15.0" fill="rgb(241,115,3)" rx="2" ry="2" />
<text  x="294.77" y="1759.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="27.2" y="1941" width="0.2" height="15.0" fill="rgb(242,140,1)" rx="2" ry="2" />
<text  x="30.18" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="507.2" y="1925" width="0.4" height="15.0" fill="rgb(250,179,21)" rx="2" ry="2" />
<text  x="510.20" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (3 samples, 0.05%)</title><rect x="643.2" y="1989" width="0.6" height="15.0" fill="rgb(209,89,54)" rx="2" ry="2" />
<text  x="646.24" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="866.4" y="2037" width="0.4" height="15.0" fill="rgb(239,213,3)" rx="2" ry="2" />
<text  x="869.37" y="2047.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (10 samples, 0.17%)</title><rect x="896.8" y="1973" width="2.0" height="15.0" fill="rgb(229,197,10)" rx="2" ry="2" />
<text  x="899.78" y="1983.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="691.2" y="2005" width="0.2" height="15.0" fill="rgb(215,61,47)" rx="2" ry="2" />
<text  x="694.22" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (17 samples, 0.28%)</title><rect x="692.0" y="2005" width="3.4" height="15.0" fill="rgb(252,222,7)" rx="2" ry="2" />
<text  x="695.01" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (3 samples, 0.05%)</title><rect x="688.9" y="2037" width="0.5" height="15.0" fill="rgb(236,131,24)" rx="2" ry="2" />
<text  x="691.86" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="1126.8" y="2053" width="0.2" height="15.0" fill="rgb(254,96,38)" rx="2" ry="2" />
<text  x="1129.81" y="2063.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (147 samples, 2.46%)</title><rect x="926.8" y="1957" width="29.0" height="15.0" fill="rgb(241,67,5)" rx="2" ry="2" />
<text  x="929.79" y="1967.5" >fo..</text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (15 samples, 0.25%)</title><rect x="723.2" y="1941" width="3.0" height="15.0" fill="rgb(214,152,0)" rx="2" ry="2" />
<text  x="726.21" y="1951.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="394.8" y="1989" width="0.4" height="15.0" fill="rgb(234,197,3)" rx="2" ry="2" />
<text  x="397.84" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="132.8" y="1957" width="0.2" height="15.0" fill="rgb(215,162,24)" rx="2" ry="2" />
<text  x="135.82" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="680.0" y="2037" width="0.4" height="15.0" fill="rgb(250,64,30)" rx="2" ry="2" />
<text  x="682.97" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="632.0" y="1973" width="0.4" height="15.0" fill="rgb(245,174,41)" rx="2" ry="2" />
<text  x="634.99" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (1 samples, 0.02%)</title><rect x="71.4" y="37" width="0.2" height="15.0" fill="rgb(253,109,46)" rx="2" ry="2" />
<text  x="74.41" y="47.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="319.4" y="1909" width="0.8" height="15.0" fill="rgb(250,68,8)" rx="2" ry="2" />
<text  x="322.41" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="203.1" y="1957" width="0.6" height="15.0" fill="rgb(247,64,14)" rx="2" ry="2" />
<text  x="206.11" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="418.1" y="1893" width="0.4" height="15.0" fill="rgb(218,189,53)" rx="2" ry="2" />
<text  x="421.14" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.25%)</title><rect x="863.4" y="2021" width="3.0" height="15.0" fill="rgb(230,16,49)" rx="2" ry="2" />
<text  x="866.41" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.05%)</title><rect x="1100.6" y="1941" width="0.5" height="15.0" fill="rgb(253,225,5)" rx="2" ry="2" />
<text  x="1103.55" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="707.8" y="1909" width="0.2" height="15.0" fill="rgb(248,176,42)" rx="2" ry="2" />
<text  x="710.81" y="1919.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="318.0" y="1893" width="0.6" height="15.0" fill="rgb(210,37,8)" rx="2" ry="2" />
<text  x="321.03" y="1903.5" ></text>
</g>
<g >
<title>sock_poll (28 samples, 0.47%)</title><rect x="329.7" y="1909" width="5.5" height="15.0" fill="rgb(224,223,10)" rx="2" ry="2" />
<text  x="332.68" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (21 samples, 0.35%)</title><rect x="1150.5" y="2053" width="4.2" height="15.0" fill="rgb(205,202,54)" rx="2" ry="2" />
<text  x="1153.51" y="2063.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="1100.6" y="1957" width="0.5" height="15.0" fill="rgb(244,37,21)" rx="2" ry="2" />
<text  x="1103.55" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="925.2" y="1957" width="0.4" height="15.0" fill="rgb(222,103,29)" rx="2" ry="2" />
<text  x="928.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.44%)</title><rect x="127.1" y="1973" width="5.1" height="15.0" fill="rgb(239,37,7)" rx="2" ry="2" />
<text  x="130.09" y="1983.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1031.2" y="1797" width="0.2" height="15.0" fill="rgb(245,12,21)" rx="2" ry="2" />
<text  x="1034.24" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (37 samples, 0.62%)</title><rect x="168.6" y="1989" width="7.3" height="15.0" fill="rgb(238,220,33)" rx="2" ry="2" />
<text  x="171.56" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (25 samples, 0.42%)</title><rect x="13.6" y="1957" width="4.9" height="15.0" fill="rgb(233,228,28)" rx="2" ry="2" />
<text  x="16.55" y="1967.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (5 samples, 0.08%)</title><rect x="778.3" y="1941" width="1.0" height="15.0" fill="rgb(241,14,20)" rx="2" ry="2" />
<text  x="781.30" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::computeChainDataLength (1 samples, 0.02%)</title><rect x="686.3" y="1989" width="0.2" height="15.0" fill="rgb(253,65,12)" rx="2" ry="2" />
<text  x="689.29" y="1999.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="291.6" y="1765" width="0.2" height="15.0" fill="rgb(240,129,48)" rx="2" ry="2" />
<text  x="294.57" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (2 samples, 0.03%)</title><rect x="421.5" y="1845" width="0.4" height="15.0" fill="rgb(234,92,22)" rx="2" ry="2" />
<text  x="424.50" y="1855.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (7 samples, 0.12%)</title><rect x="281.1" y="1845" width="1.4" height="15.0" fill="rgb(243,160,36)" rx="2" ry="2" />
<text  x="284.11" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1669" width="51.8" height="15.0" fill="rgb(238,71,41)" rx="2" ry="2" />
<text  x="73.42" y="1679.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="444.0" y="1957" width="0.4" height="15.0" fill="rgb(252,179,24)" rx="2" ry="2" />
<text  x="447.01" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (6 samples, 0.10%)</title><rect x="547.9" y="2037" width="1.2" height="15.0" fill="rgb(220,165,48)" rx="2" ry="2" />
<text  x="550.87" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::initFreeStack (4 samples, 0.07%)</title><rect x="216.9" y="2021" width="0.8" height="15.0" fill="rgb(243,8,5)" rx="2" ry="2" />
<text  x="219.93" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="313.1" y="1733" width="0.6" height="15.0" fill="rgb(230,21,30)" rx="2" ry="2" />
<text  x="316.10" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="172.7" y="1893" width="0.2" height="15.0" fill="rgb(249,94,50)" rx="2" ry="2" />
<text  x="175.70" y="1903.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.15%)</title><rect x="10.6" y="1925" width="1.8" height="15.0" fill="rgb(217,118,2)" rx="2" ry="2" />
<text  x="13.59" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="565.6" y="1973" width="0.2" height="15.0" fill="rgb(214,156,0)" rx="2" ry="2" />
<text  x="568.64" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (44 samples, 0.74%)</title><rect x="293.9" y="1573" width="8.7" height="15.0" fill="rgb(225,87,42)" rx="2" ry="2" />
<text  x="296.94" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.25%)</title><rect x="113.9" y="53" width="2.9" height="15.0" fill="rgb(247,117,26)" rx="2" ry="2" />
<text  x="116.86" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="625.9" y="1941" width="0.2" height="15.0" fill="rgb(243,58,6)" rx="2" ry="2" />
<text  x="628.87" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="1125.8" y="1973" width="0.2" height="15.0" fill="rgb(228,70,32)" rx="2" ry="2" />
<text  x="1128.83" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="200.7" y="1973" width="0.4" height="15.0" fill="rgb(224,142,38)" rx="2" ry="2" />
<text  x="203.74" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1125.2" y="1989" width="0.4" height="15.0" fill="rgb(216,191,16)" rx="2" ry="2" />
<text  x="1128.23" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="849.8" y="2005" width="0.2" height="15.0" fill="rgb(238,38,9)" rx="2" ry="2" />
<text  x="852.78" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (73 samples, 1.22%)</title><rect x="1081.8" y="1573" width="14.4" height="15.0" fill="rgb(232,122,41)" rx="2" ry="2" />
<text  x="1084.79" y="1583.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1189.6" y="2037" width="0.2" height="15.0" fill="rgb(224,156,5)" rx="2" ry="2" />
<text  x="1192.61" y="2047.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="182.4" y="2005" width="0.4" height="15.0" fill="rgb(253,10,16)" rx="2" ry="2" />
<text  x="185.38" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (147 samples, 2.46%)</title><rect x="926.8" y="1973" width="29.0" height="15.0" fill="rgb(248,136,37)" rx="2" ry="2" />
<text  x="929.79" y="1983.5" >fo..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.03%)</title><rect x="669.9" y="2005" width="0.4" height="15.0" fill="rgb(245,160,5)" rx="2" ry="2" />
<text  x="672.90" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (20 samples, 0.33%)</title><rect x="845.4" y="2037" width="4.0" height="15.0" fill="rgb(217,105,21)" rx="2" ry="2" />
<text  x="848.44" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="825.9" y="2005" width="1.0" height="15.0" fill="rgb(231,176,4)" rx="2" ry="2" />
<text  x="828.89" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="357" width="51.8" height="15.0" fill="rgb(236,118,34)" rx="2" ry="2" />
<text  x="73.42" y="367.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="624.5" y="1925" width="0.2" height="15.0" fill="rgb(220,62,11)" rx="2" ry="2" />
<text  x="627.48" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (17 samples, 0.28%)</title><rect x="1121.9" y="2005" width="3.3" height="15.0" fill="rgb(248,60,17)" rx="2" ry="2" />
<text  x="1124.88" y="2015.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="413.6" y="2005" width="0.2" height="15.0" fill="rgb(229,219,43)" rx="2" ry="2" />
<text  x="416.60" y="2015.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1154.5" y="1989" width="0.2" height="15.0" fill="rgb(219,217,3)" rx="2" ry="2" />
<text  x="1157.46" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="660.0" y="1973" width="1.0" height="15.0" fill="rgb(212,162,39)" rx="2" ry="2" />
<text  x="663.03" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="620.3" y="2037" width="0.4" height="15.0" fill="rgb(233,86,49)" rx="2" ry="2" />
<text  x="623.34" y="2047.5" ></text>
</g>
<g >
<title>do_futex (25 samples, 0.42%)</title><rect x="13.6" y="1989" width="4.9" height="15.0" fill="rgb(239,165,40)" rx="2" ry="2" />
<text  x="16.55" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (3 samples, 0.05%)</title><rect x="505.2" y="1925" width="0.6" height="15.0" fill="rgb(244,150,13)" rx="2" ry="2" />
<text  x="508.22" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1053.6" y="1813" width="0.4" height="15.0" fill="rgb(205,61,25)" rx="2" ry="2" />
<text  x="1056.56" y="1823.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (470 samples, 7.86%)</title><rect x="1008.3" y="1989" width="92.8" height="15.0" fill="rgb(208,8,19)" rx="2" ry="2" />
<text  x="1011.34" y="1999.5" >SYSC_recvfrom</text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="76.9" y="37" width="0.4" height="15.0" fill="rgb(222,2,5)" rx="2" ry="2" />
<text  x="79.94" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="511.1" y="1957" width="0.2" height="15.0" fill="rgb(230,191,53)" rx="2" ry="2" />
<text  x="514.14" y="1967.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="741.8" y="1893" width="0.2" height="15.0" fill="rgb(230,221,28)" rx="2" ry="2" />
<text  x="744.77" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (31 samples, 0.52%)</title><rect x="399.0" y="1989" width="6.1" height="15.0" fill="rgb(238,82,37)" rx="2" ry="2" />
<text  x="401.99" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="121.6" y="69" width="0.4" height="15.0" fill="rgb(227,52,12)" rx="2" ry="2" />
<text  x="124.56" y="79.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="641.1" y="1941" width="0.2" height="15.0" fill="rgb(227,122,11)" rx="2" ry="2" />
<text  x="644.07" y="1951.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="845.4" y="2005" width="0.2" height="15.0" fill="rgb(236,168,36)" rx="2" ry="2" />
<text  x="848.44" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="612.8" y="1861" width="0.2" height="15.0" fill="rgb(221,26,10)" rx="2" ry="2" />
<text  x="615.83" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (37 samples, 0.62%)</title><rect x="126.3" y="1989" width="7.3" height="15.0" fill="rgb(222,50,18)" rx="2" ry="2" />
<text  x="129.30" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="229" width="51.8" height="15.0" fill="rgb(235,213,5)" rx="2" ry="2" />
<text  x="73.42" y="239.5" >[unkn..</text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="779.5" y="1973" width="0.8" height="15.0" fill="rgb(234,121,45)" rx="2" ry="2" />
<text  x="782.49" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="133.0" y="1941" width="0.2" height="15.0" fill="rgb(244,45,2)" rx="2" ry="2" />
<text  x="136.02" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="152.2" y="1941" width="0.2" height="15.0" fill="rgb(250,220,25)" rx="2" ry="2" />
<text  x="155.17" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1733" width="51.8" height="15.0" fill="rgb(247,191,30)" rx="2" ry="2" />
<text  x="73.42" y="1743.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="199.2" y="2021" width="0.2" height="15.0" fill="rgb(226,155,43)" rx="2" ry="2" />
<text  x="202.16" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="581" width="51.8" height="15.0" fill="rgb(220,166,43)" rx="2" ry="2" />
<text  x="73.42" y="591.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="690.0" y="1989" width="1.2" height="15.0" fill="rgb(212,12,49)" rx="2" ry="2" />
<text  x="693.04" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="31.3" y="2005" width="0.2" height="15.0" fill="rgb(251,98,44)" rx="2" ry="2" />
<text  x="34.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (8 samples, 0.13%)</title><rect x="681.2" y="2037" width="1.5" height="15.0" fill="rgb(224,38,13)" rx="2" ry="2" />
<text  x="684.15" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="172.3" y="1893" width="0.2" height="15.0" fill="rgb(236,42,24)" rx="2" ry="2" />
<text  x="175.31" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="761.7" y="1909" width="0.4" height="15.0" fill="rgb(234,226,22)" rx="2" ry="2" />
<text  x="764.72" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.22%)</title><rect x="682.7" y="2005" width="2.6" height="15.0" fill="rgb(231,112,3)" rx="2" ry="2" />
<text  x="685.73" y="2015.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="12.4" y="2069" width="1.2" height="15.0" fill="rgb(208,108,26)" rx="2" ry="2" />
<text  x="15.37" y="2079.5" ></text>
</g>
<g >
<title>net_rx_action (45 samples, 0.75%)</title><rect x="293.7" y="1669" width="8.9" height="15.0" fill="rgb(222,1,46)" rx="2" ry="2" />
<text  x="296.74" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (4 samples, 0.07%)</title><rect x="483.3" y="1989" width="0.8" height="15.0" fill="rgb(220,30,10)" rx="2" ry="2" />
<text  x="486.30" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="173.7" y="1877" width="0.2" height="15.0" fill="rgb(234,166,54)" rx="2" ry="2" />
<text  x="176.69" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (50 samples, 0.84%)</title><rect x="21.1" y="2005" width="9.8" height="15.0" fill="rgb(220,197,1)" rx="2" ry="2" />
<text  x="24.06" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1124.8" y="1909" width="0.2" height="15.0" fill="rgb(248,89,26)" rx="2" ry="2" />
<text  x="1127.84" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (3 samples, 0.05%)</title><rect x="26.2" y="1957" width="0.6" height="15.0" fill="rgb(234,45,14)" rx="2" ry="2" />
<text  x="29.19" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (40 samples, 0.67%)</title><rect x="439.7" y="2021" width="7.9" height="15.0" fill="rgb(222,3,2)" rx="2" ry="2" />
<text  x="442.67" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="885" width="51.8" height="15.0" fill="rgb(227,86,47)" rx="2" ry="2" />
<text  x="73.42" y="895.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (8 samples, 0.13%)</title><rect x="1159.2" y="2053" width="1.6" height="15.0" fill="rgb(236,81,11)" rx="2" ry="2" />
<text  x="1162.20" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="403.1" y="1925" width="0.8" height="15.0" fill="rgb(238,94,23)" rx="2" ry="2" />
<text  x="406.14" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="441.0" y="1973" width="0.4" height="15.0" fill="rgb(245,64,30)" rx="2" ry="2" />
<text  x="444.05" y="1983.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="229.4" y="2021" width="0.4" height="15.0" fill="rgb(233,184,40)" rx="2" ry="2" />
<text  x="232.37" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="688.7" y="2021" width="0.2" height="15.0" fill="rgb(226,173,15)" rx="2" ry="2" />
<text  x="691.66" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="1148.9" y="2053" width="0.2" height="15.0" fill="rgb(217,125,21)" rx="2" ry="2" />
<text  x="1151.93" y="2063.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="1095.0" y="1509" width="0.2" height="15.0" fill="rgb(223,228,27)" rx="2" ry="2" />
<text  x="1098.02" y="1519.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="828.5" y="1989" width="1.7" height="15.0" fill="rgb(216,117,29)" rx="2" ry="2" />
<text  x="831.46" y="1999.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="212.0" y="1925" width="0.2" height="15.0" fill="rgb(226,48,42)" rx="2" ry="2" />
<text  x="215.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (32 samples, 0.54%)</title><rect x="417.7" y="1973" width="6.4" height="15.0" fill="rgb(210,168,43)" rx="2" ry="2" />
<text  x="420.75" y="1983.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="294.5" y="1397" width="0.4" height="15.0" fill="rgb(215,122,42)" rx="2" ry="2" />
<text  x="297.53" y="1407.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (1 samples, 0.02%)</title><rect x="188.1" y="2005" width="0.2" height="15.0" fill="rgb(228,56,54)" rx="2" ry="2" />
<text  x="191.11" y="2015.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (35 samples, 0.59%)</title><rect x="917.7" y="1925" width="6.9" height="15.0" fill="rgb(211,116,30)" rx="2" ry="2" />
<text  x="920.71" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="1161.8" y="2053" width="0.8" height="15.0" fill="rgb(228,144,1)" rx="2" ry="2" />
<text  x="1164.76" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="440.9" y="1973" width="0.1" height="15.0" fill="rgb(214,137,44)" rx="2" ry="2" />
<text  x="443.85" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (10 samples, 0.17%)</title><rect x="1097.4" y="1925" width="2.0" height="15.0" fill="rgb(220,157,36)" rx="2" ry="2" />
<text  x="1100.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="997" width="51.8" height="15.0" fill="rgb(227,206,42)" rx="2" ry="2" />
<text  x="73.42" y="1007.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="612.2" y="1941" width="0.2" height="15.0" fill="rgb(238,129,7)" rx="2" ry="2" />
<text  x="615.24" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (10 samples, 0.17%)</title><rect x="414.6" y="1989" width="2.0" height="15.0" fill="rgb(207,114,4)" rx="2" ry="2" />
<text  x="417.59" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (76 samples, 1.27%)</title><rect x="1081.4" y="1621" width="15.0" height="15.0" fill="rgb(230,214,46)" rx="2" ry="2" />
<text  x="1084.40" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (9 samples, 0.15%)</title><rect x="448.4" y="2037" width="1.7" height="15.0" fill="rgb(252,136,0)" rx="2" ry="2" />
<text  x="451.35" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="988.8" y="2037" width="0.4" height="15.0" fill="rgb(228,188,16)" rx="2" ry="2" />
<text  x="991.79" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (399 samples, 6.68%)</title><rect x="701.5" y="1989" width="78.8" height="15.0" fill="rgb(240,58,28)" rx="2" ry="2" />
<text  x="704.49" y="1999.5" >folly::fi..</text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (10 samples, 0.17%)</title><rect x="111.9" y="69" width="2.0" height="15.0" fill="rgb(220,64,24)" rx="2" ry="2" />
<text  x="114.89" y="79.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="1145.0" y="1989" width="0.8" height="15.0" fill="rgb(207,204,4)" rx="2" ry="2" />
<text  x="1147.98" y="1999.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (8 samples, 0.13%)</title><rect x="312.1" y="1829" width="1.6" height="15.0" fill="rgb(216,164,16)" rx="2" ry="2" />
<text  x="315.11" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="624.9" y="1909" width="0.2" height="15.0" fill="rgb(243,213,51)" rx="2" ry="2" />
<text  x="627.88" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="759.1" y="1893" width="0.4" height="15.0" fill="rgb(226,201,52)" rx="2" ry="2" />
<text  x="762.15" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (5 samples, 0.08%)</title><rect x="358.5" y="1957" width="1.0" height="15.0" fill="rgb(232,123,41)" rx="2" ry="2" />
<text  x="361.51" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="856.1" y="1989" width="0.6" height="15.0" fill="rgb(227,70,44)" rx="2" ry="2" />
<text  x="859.10" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="400.2" y="1973" width="0.2" height="15.0" fill="rgb(219,180,18)" rx="2" ry="2" />
<text  x="403.17" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="168.2" y="2005" width="0.2" height="15.0" fill="rgb(240,4,30)" rx="2" ry="2" />
<text  x="171.16" y="2015.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1047.6" y="1925" width="0.2" height="15.0" fill="rgb(233,4,48)" rx="2" ry="2" />
<text  x="1050.63" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.05%)</title><rect x="294.3" y="1445" width="0.6" height="15.0" fill="rgb(233,7,19)" rx="2" ry="2" />
<text  x="297.34" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="618.4" y="1925" width="0.4" height="15.0" fill="rgb(236,104,8)" rx="2" ry="2" />
<text  x="621.36" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="29.2" y="1989" width="1.3" height="15.0" fill="rgb(242,51,50)" rx="2" ry="2" />
<text  x="32.15" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (7 samples, 0.12%)</title><rect x="440.1" y="2005" width="1.3" height="15.0" fill="rgb(238,191,28)" rx="2" ry="2" />
<text  x="443.06" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (353 samples, 5.91%)</title><rect x="250.9" y="2021" width="69.7" height="15.0" fill="rgb(218,52,28)" rx="2" ry="2" />
<text  x="253.90" y="2031.5" >entry_S..</text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (18 samples, 0.30%)</title><rect x="105.2" y="53" width="3.5" height="15.0" fill="rgb(212,170,5)" rx="2" ry="2" />
<text  x="108.17" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="377.5" y="1925" width="0.8" height="15.0" fill="rgb(242,202,24)" rx="2" ry="2" />
<text  x="380.47" y="1935.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="1021.0" y="1877" width="0.2" height="15.0" fill="rgb(215,74,23)" rx="2" ry="2" />
<text  x="1023.98" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (414 samples, 6.93%)</title><rect x="882.4" y="2005" width="81.7" height="15.0" fill="rgb(210,33,28)" rx="2" ry="2" />
<text  x="885.36" y="2015.5" >folly::fi..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="517" width="51.8" height="15.0" fill="rgb(238,56,41)" rx="2" ry="2" />
<text  x="73.42" y="527.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="992.1" y="2005" width="0.4" height="15.0" fill="rgb(215,134,15)" rx="2" ry="2" />
<text  x="995.15" y="2015.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (2 samples, 0.03%)</title><rect x="385.2" y="1941" width="0.4" height="15.0" fill="rgb(242,4,22)" rx="2" ry="2" />
<text  x="388.17" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="629.2" y="2005" width="0.6" height="15.0" fill="rgb(219,86,23)" rx="2" ry="2" />
<text  x="632.22" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1349" width="51.8" height="15.0" fill="rgb(217,162,27)" rx="2" ry="2" />
<text  x="73.42" y="1359.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="209.4" y="1909" width="0.2" height="15.0" fill="rgb(225,176,12)" rx="2" ry="2" />
<text  x="212.43" y="1919.5" ></text>
</g>
<g >
<title>malloc (69 samples, 1.15%)</title><rect x="1173.6" y="2053" width="13.6" height="15.0" fill="rgb(234,170,4)" rx="2" ry="2" />
<text  x="1176.61" y="2063.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="378.7" y="1973" width="0.1" height="15.0" fill="rgb(211,193,10)" rx="2" ry="2" />
<text  x="381.65" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::replyReady&lt;facebook::memcache::McGetReply&gt; (5 samples, 0.08%)</title><rect x="111.9" y="37" width="1.0" height="15.0" fill="rgb(232,87,50)" rx="2" ry="2" />
<text  x="114.89" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="166.2" y="1941" width="0.4" height="15.0" fill="rgb(210,7,49)" rx="2" ry="2" />
<text  x="169.19" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (16 samples, 0.27%)</title><rect x="587.8" y="1957" width="3.1" height="15.0" fill="rgb(234,173,31)" rx="2" ry="2" />
<text  x="590.76" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="688.7" y="2005" width="0.2" height="15.0" fill="rgb(229,32,53)" rx="2" ry="2" />
<text  x="691.66" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (25 samples, 0.42%)</title><rect x="407.9" y="1989" width="4.9" height="15.0" fill="rgb(213,151,48)" rx="2" ry="2" />
<text  x="410.87" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="538.0" y="1925" width="0.2" height="15.0" fill="rgb(240,175,24)" rx="2" ry="2" />
<text  x="541.00" y="1935.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1031.2" y="1813" width="0.2" height="15.0" fill="rgb(209,145,42)" rx="2" ry="2" />
<text  x="1034.24" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="25.0" y="1941" width="0.4" height="15.0" fill="rgb(244,179,20)" rx="2" ry="2" />
<text  x="28.01" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="498.9" y="1909" width="0.4" height="15.0" fill="rgb(237,14,19)" rx="2" ry="2" />
<text  x="501.90" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="441.0" y="1957" width="0.2" height="15.0" fill="rgb(244,38,41)" rx="2" ry="2" />
<text  x="444.05" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="420.3" y="1861" width="0.4" height="15.0" fill="rgb(224,179,23)" rx="2" ry="2" />
<text  x="423.31" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (2 samples, 0.03%)</title><rect x="424.9" y="2037" width="0.4" height="15.0" fill="rgb(205,134,24)" rx="2" ry="2" />
<text  x="427.86" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="443.4" y="1893" width="0.2" height="15.0" fill="rgb(223,131,24)" rx="2" ry="2" />
<text  x="446.42" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="862.4" y="2037" width="1.0" height="15.0" fill="rgb(243,138,32)" rx="2" ry="2" />
<text  x="865.42" y="2047.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="865.6" y="1941" width="0.2" height="15.0" fill="rgb(240,214,20)" rx="2" ry="2" />
<text  x="868.58" y="1951.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (2 samples, 0.03%)</title><rect x="304.2" y="1669" width="0.4" height="15.0" fill="rgb(240,21,35)" rx="2" ry="2" />
<text  x="307.21" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (23 samples, 0.38%)</title><rect x="208.0" y="1973" width="4.6" height="15.0" fill="rgb(251,91,37)" rx="2" ry="2" />
<text  x="211.05" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="170.9" y="1941" width="0.2" height="15.0" fill="rgb(225,42,15)" rx="2" ry="2" />
<text  x="173.93" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1141" width="51.8" height="15.0" fill="rgb(234,33,18)" rx="2" ry="2" />
<text  x="73.42" y="1151.5" >[unkn..</text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="723.0" y="1941" width="0.2" height="15.0" fill="rgb(211,35,45)" rx="2" ry="2" />
<text  x="726.02" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="22.8" y="1957" width="0.2" height="15.0" fill="rgb(211,122,42)" rx="2" ry="2" />
<text  x="25.83" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="545.9" y="2005" width="0.6" height="15.0" fill="rgb(247,21,3)" rx="2" ry="2" />
<text  x="548.90" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1957" width="51.8" height="15.0" fill="rgb(215,223,3)" rx="2" ry="2" />
<text  x="73.42" y="1967.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (10 samples, 0.17%)</title><rect x="442.0" y="1957" width="2.0" height="15.0" fill="rgb(241,137,45)" rx="2" ry="2" />
<text  x="445.03" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="955.4" y="1925" width="0.2" height="15.0" fill="rgb(226,86,50)" rx="2" ry="2" />
<text  x="958.42" y="1935.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1053.0" y="1861" width="0.2" height="15.0" fill="rgb(208,191,51)" rx="2" ry="2" />
<text  x="1055.97" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="706.4" y="1941" width="0.4" height="15.0" fill="rgb(208,22,28)" rx="2" ry="2" />
<text  x="709.43" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="625.5" y="1925" width="0.2" height="15.0" fill="rgb(252,179,50)" rx="2" ry="2" />
<text  x="628.47" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="157.7" y="1973" width="0.4" height="15.0" fill="rgb(214,187,37)" rx="2" ry="2" />
<text  x="160.70" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="546.5" y="2005" width="0.4" height="15.0" fill="rgb(251,157,23)" rx="2" ry="2" />
<text  x="549.49" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1055.5" y="1909" width="0.4" height="15.0" fill="rgb(242,71,19)" rx="2" ry="2" />
<text  x="1058.53" y="1919.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="620.7" y="2005" width="0.2" height="15.0" fill="rgb(230,102,47)" rx="2" ry="2" />
<text  x="623.73" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="170.1" y="1909" width="0.2" height="15.0" fill="rgb(247,55,21)" rx="2" ry="2" />
<text  x="173.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="871.5" y="2005" width="0.4" height="15.0" fill="rgb(245,70,52)" rx="2" ry="2" />
<text  x="874.50" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="626.9" y="1989" width="0.7" height="15.0" fill="rgb(227,11,29)" rx="2" ry="2" />
<text  x="629.85" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="393.5" y="1973" width="0.4" height="15.0" fill="rgb(236,4,3)" rx="2" ry="2" />
<text  x="396.46" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="890.9" y="1973" width="0.2" height="15.0" fill="rgb(207,87,47)" rx="2" ry="2" />
<text  x="893.85" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1381" width="51.8" height="15.0" fill="rgb(246,26,31)" rx="2" ry="2" />
<text  x="73.42" y="1391.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="165" width="51.8" height="15.0" fill="rgb(220,123,39)" rx="2" ry="2" />
<text  x="73.42" y="175.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="443.4" y="1909" width="0.2" height="15.0" fill="rgb(238,99,24)" rx="2" ry="2" />
<text  x="446.42" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (9 samples, 0.15%)</title><rect x="130.3" y="1941" width="1.7" height="15.0" fill="rgb(248,53,46)" rx="2" ry="2" />
<text  x="133.25" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="625.3" y="1925" width="0.2" height="15.0" fill="rgb(236,166,50)" rx="2" ry="2" />
<text  x="628.27" y="1935.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="470.1" y="1941" width="0.2" height="15.0" fill="rgb(248,99,32)" rx="2" ry="2" />
<text  x="473.07" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (6 samples, 0.10%)</title><rect x="367.0" y="1989" width="1.2" height="15.0" fill="rgb(241,67,21)" rx="2" ry="2" />
<text  x="370.00" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (15 samples, 0.25%)</title><rect x="441.6" y="2005" width="3.0" height="15.0" fill="rgb(212,61,6)" rx="2" ry="2" />
<text  x="444.64" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="219.3" y="2021" width="0.2" height="15.0" fill="rgb(218,47,48)" rx="2" ry="2" />
<text  x="222.30" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="208.4" y="1941" width="0.4" height="15.0" fill="rgb(224,188,50)" rx="2" ry="2" />
<text  x="211.44" y="1951.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="735.3" y="1909" width="0.2" height="15.0" fill="rgb(234,91,0)" rx="2" ry="2" />
<text  x="738.26" y="1919.5" ></text>
</g>
<g >
<title>swiotlb_map_page (2 samples, 0.03%)</title><rect x="308.0" y="1637" width="0.4" height="15.0" fill="rgb(252,31,22)" rx="2" ry="2" />
<text  x="310.96" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (5 samples, 0.08%)</title><rect x="583.0" y="1989" width="1.0" height="15.0" fill="rgb(245,196,34)" rx="2" ry="2" />
<text  x="586.02" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="25.0" y="1957" width="0.4" height="15.0" fill="rgb(248,144,46)" rx="2" ry="2" />
<text  x="28.01" y="1967.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1107.3" y="2037" width="0.2" height="15.0" fill="rgb(227,65,30)" rx="2" ry="2" />
<text  x="1110.27" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (36 samples, 0.60%)</title><rect x="748.7" y="1877" width="7.1" height="15.0" fill="rgb(236,76,8)" rx="2" ry="2" />
<text  x="751.68" y="1887.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1097.0" y="1701" width="0.2" height="15.0" fill="rgb(253,84,49)" rx="2" ry="2" />
<text  x="1100.00" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (2 samples, 0.03%)</title><rect x="1125.2" y="2005" width="0.4" height="15.0" fill="rgb(241,209,38)" rx="2" ry="2" />
<text  x="1128.23" y="2015.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="211.8" y="1909" width="0.2" height="15.0" fill="rgb(224,175,8)" rx="2" ry="2" />
<text  x="214.80" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="821.5" y="2005" width="0.6" height="15.0" fill="rgb(254,0,18)" rx="2" ry="2" />
<text  x="824.55" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (1 samples, 0.02%)</title><rect x="1124.8" y="1973" width="0.2" height="15.0" fill="rgb(216,185,40)" rx="2" ry="2" />
<text  x="1127.84" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="454.5" y="2005" width="0.6" height="15.0" fill="rgb(253,37,4)" rx="2" ry="2" />
<text  x="457.47" y="2015.5" ></text>
</g>
<g >
<title>jump_fcontext (3 samples, 0.05%)</title><rect x="950.7" y="1893" width="0.6" height="15.0" fill="rgb(216,86,14)" rx="2" ry="2" />
<text  x="953.68" y="1903.5" ></text>
</g>
<g >
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="1084.0" y="1445" width="0.6" height="15.0" fill="rgb(247,207,42)" rx="2" ry="2" />
<text  x="1086.97" y="1455.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (2 samples, 0.03%)</title><rect x="871.5" y="1973" width="0.4" height="15.0" fill="rgb(222,42,15)" rx="2" ry="2" />
<text  x="874.50" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (16 samples, 0.27%)</title><rect x="108.7" y="69" width="3.2" height="15.0" fill="rgb(247,156,33)" rx="2" ry="2" />
<text  x="111.73" y="79.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (12 samples, 0.20%)</title><rect x="392.3" y="1989" width="2.3" height="15.0" fill="rgb(221,155,0)" rx="2" ry="2" />
<text  x="395.28" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (20 samples, 0.33%)</title><rect x="522.2" y="1957" width="4.0" height="15.0" fill="rgb(227,119,37)" rx="2" ry="2" />
<text  x="525.20" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="871.7" y="1925" width="0.2" height="15.0" fill="rgb(254,63,3)" rx="2" ry="2" />
<text  x="874.70" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="773" width="51.8" height="15.0" fill="rgb(210,19,46)" rx="2" ry="2" />
<text  x="73.42" y="783.5" >[unkn..</text>
</g>
<g >
<title>__release_sock (2 samples, 0.03%)</title><rect x="265.3" y="1877" width="0.4" height="15.0" fill="rgb(247,203,44)" rx="2" ry="2" />
<text  x="268.31" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::null_disposer::operator (1 samples, 0.02%)</title><rect x="210.2" y="1909" width="0.2" height="15.0" fill="rgb(216,137,30)" rx="2" ry="2" />
<text  x="213.22" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="164.6" y="1941" width="0.2" height="15.0" fill="rgb(230,131,24)" rx="2" ry="2" />
<text  x="167.61" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="850.4" y="1957" width="0.4" height="15.0" fill="rgb(211,141,8)" rx="2" ry="2" />
<text  x="853.37" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="21.6" y="1989" width="0.2" height="15.0" fill="rgb(246,7,51)" rx="2" ry="2" />
<text  x="24.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="854.1" y="2005" width="0.2" height="15.0" fill="rgb(245,133,23)" rx="2" ry="2" />
<text  x="857.13" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1009.1" y="1957" width="0.2" height="15.0" fill="rgb(207,152,31)" rx="2" ry="2" />
<text  x="1012.13" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (6 samples, 0.10%)</title><rect x="851.8" y="1973" width="1.1" height="15.0" fill="rgb(212,184,47)" rx="2" ry="2" />
<text  x="854.76" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="354.4" y="1973" width="0.2" height="15.0" fill="rgb(246,29,54)" rx="2" ry="2" />
<text  x="357.36" y="1983.5" ></text>
</g>
<g >
<title>dst_release (63 samples, 1.05%)</title><rect x="1032.4" y="1877" width="12.5" height="15.0" fill="rgb(215,159,17)" rx="2" ry="2" />
<text  x="1035.43" y="1887.5" ></text>
</g>
<g >
<title>sched_clock_cpu (4 samples, 0.07%)</title><rect x="1098.6" y="1909" width="0.8" height="15.0" fill="rgb(221,125,31)" rx="2" ry="2" />
<text  x="1101.58" y="1919.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="668.5" y="2005" width="0.2" height="15.0" fill="rgb(239,97,51)" rx="2" ry="2" />
<text  x="671.52" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1124.6" y="1957" width="0.2" height="15.0" fill="rgb(215,37,43)" rx="2" ry="2" />
<text  x="1127.64" y="1967.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (15 samples, 0.25%)</title><rect x="260.0" y="1941" width="2.9" height="15.0" fill="rgb(220,137,15)" rx="2" ry="2" />
<text  x="262.98" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="440.9" y="1957" width="0.1" height="15.0" fill="rgb(251,195,31)" rx="2" ry="2" />
<text  x="443.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1157" width="51.8" height="15.0" fill="rgb(251,222,27)" rx="2" ry="2" />
<text  x="73.42" y="1167.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="850.4" y="1973" width="0.4" height="15.0" fill="rgb(240,68,15)" rx="2" ry="2" />
<text  x="853.37" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (2 samples, 0.03%)</title><rect x="207.7" y="2021" width="0.3" height="15.0" fill="rgb(221,44,45)" rx="2" ry="2" />
<text  x="210.65" y="2031.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.25%)</title><rect x="985.2" y="2037" width="3.0" height="15.0" fill="rgb(240,108,51)" rx="2" ry="2" />
<text  x="988.24" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (21 samples, 0.35%)</title><rect x="189.1" y="1989" width="4.1" height="15.0" fill="rgb(240,194,20)" rx="2" ry="2" />
<text  x="192.09" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="122.0" y="133" width="0.2" height="15.0" fill="rgb(221,30,28)" rx="2" ry="2" />
<text  x="124.96" y="143.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="505.8" y="1925" width="0.8" height="15.0" fill="rgb(236,17,13)" rx="2" ry="2" />
<text  x="508.81" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="203.7" y="1989" width="0.6" height="15.0" fill="rgb(226,208,20)" rx="2" ry="2" />
<text  x="206.70" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (11 samples, 0.18%)</title><rect x="511.3" y="1957" width="2.2" height="15.0" fill="rgb(213,164,28)" rx="2" ry="2" />
<text  x="514.34" y="1967.5" ></text>
</g>
<g >
<title>iov_iter_advance (5 samples, 0.08%)</title><rect x="278.7" y="1861" width="1.0" height="15.0" fill="rgb(240,126,7)" rx="2" ry="2" />
<text  x="281.74" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="447.4" y="2005" width="0.2" height="15.0" fill="rgb(230,125,41)" rx="2" ry="2" />
<text  x="450.37" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="373.1" y="1941" width="0.2" height="15.0" fill="rgb(253,189,35)" rx="2" ry="2" />
<text  x="376.12" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="670.3" y="2005" width="0.2" height="15.0" fill="rgb(223,159,47)" rx="2" ry="2" />
<text  x="673.29" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="447.6" y="2021" width="0.8" height="15.0" fill="rgb(213,28,3)" rx="2" ry="2" />
<text  x="450.56" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="29.2" y="1973" width="1.3" height="15.0" fill="rgb(244,215,43)" rx="2" ry="2" />
<text  x="32.15" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="122.0" y="117" width="0.2" height="15.0" fill="rgb(243,39,16)" rx="2" ry="2" />
<text  x="124.96" y="127.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="444.8" y="1989" width="0.6" height="15.0" fill="rgb(214,69,10)" rx="2" ry="2" />
<text  x="447.80" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="373" width="51.8" height="15.0" fill="rgb(245,227,43)" rx="2" ry="2" />
<text  x="73.42" y="383.5" >[unkn..</text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="328.3" y="2021" width="0.2" height="15.0" fill="rgb(219,204,19)" rx="2" ry="2" />
<text  x="331.30" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="372.7" y="1941" width="0.4" height="15.0" fill="rgb(238,14,41)" rx="2" ry="2" />
<text  x="375.73" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="848.6" y="2005" width="0.6" height="15.0" fill="rgb(221,182,18)" rx="2" ry="2" />
<text  x="851.60" y="2015.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="324.4" y="2037" width="0.5" height="15.0" fill="rgb(223,199,4)" rx="2" ry="2" />
<text  x="327.35" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="447.2" y="1989" width="0.2" height="15.0" fill="rgb(208,215,15)" rx="2" ry="2" />
<text  x="450.17" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="422.1" y="1829" width="0.2" height="15.0" fill="rgb(239,55,31)" rx="2" ry="2" />
<text  x="425.09" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="906.5" y="1957" width="0.1" height="15.0" fill="rgb(250,88,27)" rx="2" ry="2" />
<text  x="909.45" y="1967.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (2 samples, 0.03%)</title><rect x="636.3" y="1973" width="0.4" height="15.0" fill="rgb(206,150,12)" rx="2" ry="2" />
<text  x="639.33" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="283.1" y="1829" width="0.4" height="15.0" fill="rgb(211,95,49)" rx="2" ry="2" />
<text  x="286.08" y="1839.5" ></text>
</g>
<g >
<title>copyin (4 samples, 0.07%)</title><rect x="277.9" y="1861" width="0.8" height="15.0" fill="rgb(213,15,2)" rx="2" ry="2" />
<text  x="280.95" y="1871.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.18%)</title><rect x="1000.6" y="2037" width="2.2" height="15.0" fill="rgb(231,156,42)" rx="2" ry="2" />
<text  x="1003.64" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="837" width="51.8" height="15.0" fill="rgb(205,160,14)" rx="2" ry="2" />
<text  x="73.42" y="847.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="1161.6" y="2053" width="0.2" height="15.0" fill="rgb(229,132,18)" rx="2" ry="2" />
<text  x="1164.57" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (20 samples, 0.33%)</title><rect x="419.3" y="1925" width="4.0" height="15.0" fill="rgb(223,84,16)" rx="2" ry="2" />
<text  x="422.33" y="1935.5" ></text>
</g>
<g >
<title>free (9 samples, 0.15%)</title><rect x="180.4" y="2005" width="1.8" height="15.0" fill="rgb(209,75,35)" rx="2" ry="2" />
<text  x="183.40" y="2015.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (1 samples, 0.02%)</title><rect x="339.8" y="2005" width="0.1" height="15.0" fill="rgb(206,57,44)" rx="2" ry="2" />
<text  x="342.75" y="2015.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="890.9" y="1877" width="0.2" height="15.0" fill="rgb(236,26,23)" rx="2" ry="2" />
<text  x="893.85" y="1887.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (4 samples, 0.07%)</title><rect x="1054.0" y="1861" width="0.7" height="15.0" fill="rgb(228,196,40)" rx="2" ry="2" />
<text  x="1056.95" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="121.2" y="53" width="0.4" height="15.0" fill="rgb(215,4,52)" rx="2" ry="2" />
<text  x="124.17" y="63.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (9 samples, 0.15%)</title><rect x="414.8" y="1973" width="1.8" height="15.0" fill="rgb(217,121,44)" rx="2" ry="2" />
<text  x="417.79" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (10 samples, 0.17%)</title><rect x="1127.0" y="2053" width="2.0" height="15.0" fill="rgb(228,107,11)" rx="2" ry="2" />
<text  x="1130.01" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (5 samples, 0.08%)</title><rect x="655.5" y="1973" width="1.0" height="15.0" fill="rgb(252,103,4)" rx="2" ry="2" />
<text  x="658.49" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (25 samples, 0.42%)</title><rect x="163.2" y="2005" width="5.0" height="15.0" fill="rgb(222,135,11)" rx="2" ry="2" />
<text  x="166.23" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (9 samples, 0.15%)</title><rect x="823.5" y="1989" width="1.8" height="15.0" fill="rgb(251,193,33)" rx="2" ry="2" />
<text  x="826.52" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (6 samples, 0.10%)</title><rect x="861.2" y="2037" width="1.2" height="15.0" fill="rgb(222,18,31)" rx="2" ry="2" />
<text  x="864.23" y="2047.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="395.2" y="1989" width="0.4" height="15.0" fill="rgb(205,170,9)" rx="2" ry="2" />
<text  x="398.24" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (4 samples, 0.07%)</title><rect x="686.5" y="2005" width="0.8" height="15.0" fill="rgb(235,97,16)" rx="2" ry="2" />
<text  x="689.49" y="2015.5" ></text>
</g>
<g >
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="268.5" y="1861" width="0.4" height="15.0" fill="rgb(223,201,3)" rx="2" ry="2" />
<text  x="271.47" y="1871.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="27.0" y="1941" width="0.2" height="15.0" fill="rgb(229,76,49)" rx="2" ry="2" />
<text  x="29.98" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="503.6" y="1925" width="1.4" height="15.0" fill="rgb(210,112,29)" rx="2" ry="2" />
<text  x="506.64" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (43 samples, 0.72%)</title><rect x="294.1" y="1525" width="8.5" height="15.0" fill="rgb(206,180,18)" rx="2" ry="2" />
<text  x="297.14" y="1535.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="615.4" y="1957" width="1.4" height="15.0" fill="rgb(214,154,27)" rx="2" ry="2" />
<text  x="618.40" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1045" width="51.8" height="15.0" fill="rgb(214,221,36)" rx="2" ry="2" />
<text  x="73.42" y="1055.5" >[unkn..</text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (14 samples, 0.23%)</title><rect x="935.5" y="1909" width="2.7" height="15.0" fill="rgb(213,45,44)" rx="2" ry="2" />
<text  x="938.48" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.33%)</title><rect x="845.4" y="2021" width="4.0" height="15.0" fill="rgb(210,176,3)" rx="2" ry="2" />
<text  x="848.44" y="2031.5" ></text>
</g>
<g >
<title>kfree (33 samples, 0.55%)</title><rect x="1024.9" y="1861" width="6.5" height="15.0" fill="rgb(253,206,42)" rx="2" ry="2" />
<text  x="1027.93" y="1871.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (11 samples, 0.18%)</title><rect x="1070.9" y="1893" width="2.2" height="15.0" fill="rgb(206,40,38)" rx="2" ry="2" />
<text  x="1073.93" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="565" width="51.8" height="15.0" fill="rgb(227,186,30)" rx="2" ry="2" />
<text  x="73.42" y="575.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (3 samples, 0.05%)</title><rect x="464.1" y="2005" width="0.6" height="15.0" fill="rgb(223,33,4)" rx="2" ry="2" />
<text  x="467.15" y="2015.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.13%)</title><rect x="10.8" y="1861" width="1.6" height="15.0" fill="rgb(220,199,6)" rx="2" ry="2" />
<text  x="13.79" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="696.8" y="2005" width="0.2" height="15.0" fill="rgb(229,31,21)" rx="2" ry="2" />
<text  x="699.75" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="917" width="51.8" height="15.0" fill="rgb(248,168,39)" rx="2" ry="2" />
<text  x="73.42" y="927.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="869" width="51.8" height="15.0" fill="rgb(247,84,40)" rx="2" ry="2" />
<text  x="73.42" y="879.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="500.5" y="1909" width="0.2" height="15.0" fill="rgb(233,109,17)" rx="2" ry="2" />
<text  x="503.48" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="166.6" y="1941" width="0.2" height="15.0" fill="rgb(234,74,24)" rx="2" ry="2" />
<text  x="169.58" y="1951.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.18%)</title><rect x="10.2" y="2053" width="2.2" height="15.0" fill="rgb(243,143,8)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (8 samples, 0.13%)</title><rect x="173.3" y="1909" width="1.6" height="15.0" fill="rgb(238,16,6)" rx="2" ry="2" />
<text  x="176.30" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (41 samples, 0.69%)</title><rect x="518.8" y="1989" width="8.1" height="15.0" fill="rgb(233,192,31)" rx="2" ry="2" />
<text  x="521.85" y="1999.5" ></text>
</g>
<g >
<title>__sched_text_start (25 samples, 0.42%)</title><rect x="13.6" y="1925" width="4.9" height="15.0" fill="rgb(234,99,24)" rx="2" ry="2" />
<text  x="16.55" y="1935.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="890.9" y="1893" width="0.2" height="15.0" fill="rgb(242,187,22)" rx="2" ry="2" />
<text  x="893.85" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (173 samples, 2.89%)</title><rect x="636.3" y="2021" width="34.2" height="15.0" fill="rgb(208,43,34)" rx="2" ry="2" />
<text  x="639.33" y="2031.5" >[u..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (15 samples, 0.25%)</title><rect x="751.4" y="1861" width="3.0" height="15.0" fill="rgb(243,85,9)" rx="2" ry="2" />
<text  x="754.45" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="652.3" y="1973" width="0.4" height="15.0" fill="rgb(243,113,2)" rx="2" ry="2" />
<text  x="655.33" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (1 samples, 0.02%)</title><rect x="175.9" y="2005" width="0.2" height="15.0" fill="rgb(225,156,51)" rx="2" ry="2" />
<text  x="178.86" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (18 samples, 0.30%)</title><rect x="208.8" y="1957" width="3.6" height="15.0" fill="rgb(210,15,22)" rx="2" ry="2" />
<text  x="211.84" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (10 samples, 0.17%)</title><rect x="851.2" y="1989" width="1.9" height="15.0" fill="rgb(215,43,6)" rx="2" ry="2" />
<text  x="854.16" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (12 samples, 0.20%)</title><rect x="851.0" y="2005" width="2.3" height="15.0" fill="rgb(230,40,43)" rx="2" ry="2" />
<text  x="853.97" y="2015.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (5 samples, 0.08%)</title><rect x="327.1" y="2037" width="1.0" height="15.0" fill="rgb(233,181,53)" rx="2" ry="2" />
<text  x="330.12" y="2047.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 0.15%)</title><rect x="10.6" y="1973" width="1.8" height="15.0" fill="rgb(249,206,22)" rx="2" ry="2" />
<text  x="13.59" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="779.1" y="1925" width="0.2" height="15.0" fill="rgb(211,188,45)" rx="2" ry="2" />
<text  x="782.09" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="618.6" y="1861" width="0.2" height="15.0" fill="rgb(224,196,49)" rx="2" ry="2" />
<text  x="621.56" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 4.17%)</title><rect x="70.4" y="85" width="49.2" height="15.0" fill="rgb(251,164,42)" rx="2" ry="2" />
<text  x="73.42" y="95.5" >[unk..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="502.1" y="1909" width="0.6" height="15.0" fill="rgb(221,159,14)" rx="2" ry="2" />
<text  x="505.06" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="504.8" y="1909" width="0.2" height="15.0" fill="rgb(223,227,32)" rx="2" ry="2" />
<text  x="507.83" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="309" width="51.8" height="15.0" fill="rgb(220,134,5)" rx="2" ry="2" />
<text  x="73.42" y="319.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="625.1" y="1925" width="0.2" height="15.0" fill="rgb(205,229,30)" rx="2" ry="2" />
<text  x="628.08" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.8" y="1925" width="0.2" height="15.0" fill="rgb(215,212,31)" rx="2" ry="2" />
<text  x="211.84" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="96.9" y="37" width="0.2" height="15.0" fill="rgb(214,216,20)" rx="2" ry="2" />
<text  x="99.88" y="47.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1749" width="51.8" height="15.0" fill="rgb(231,169,31)" rx="2" ry="2" />
<text  x="73.42" y="1759.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="549.5" y="2037" width="0.1" height="15.0" fill="rgb(244,66,24)" rx="2" ry="2" />
<text  x="552.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1461" width="51.8" height="15.0" fill="rgb(219,64,6)" rx="2" ry="2" />
<text  x="73.42" y="1471.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.18%)</title><rect x="623.9" y="1957" width="2.2" height="15.0" fill="rgb(224,113,13)" rx="2" ry="2" />
<text  x="626.89" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="670.5" y="2037" width="0.6" height="15.0" fill="rgb(242,69,36)" rx="2" ry="2" />
<text  x="673.49" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (3 samples, 0.05%)</title><rect x="191.3" y="1909" width="0.6" height="15.0" fill="rgb(213,211,20)" rx="2" ry="2" />
<text  x="194.27" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="208.4" y="1909" width="0.2" height="15.0" fill="rgb(241,174,35)" rx="2" ry="2" />
<text  x="211.44" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="547.3" y="2021" width="0.2" height="15.0" fill="rgb(240,18,48)" rx="2" ry="2" />
<text  x="550.28" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="596.6" y="1989" width="0.2" height="15.0" fill="rgb(240,46,54)" rx="2" ry="2" />
<text  x="599.64" y="1999.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1097.2" y="1845" width="0.2" height="15.0" fill="rgb(210,36,34)" rx="2" ry="2" />
<text  x="1100.20" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="831.8" y="2005" width="0.2" height="15.0" fill="rgb(210,191,9)" rx="2" ry="2" />
<text  x="834.81" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (15 samples, 0.25%)</title><rect x="361.1" y="1973" width="2.9" height="15.0" fill="rgb(239,168,16)" rx="2" ry="2" />
<text  x="364.08" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (9 samples, 0.15%)</title><rect x="116.8" y="53" width="1.8" height="15.0" fill="rgb(249,53,9)" rx="2" ry="2" />
<text  x="119.82" y="63.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.13%)</title><rect x="200.2" y="1989" width="1.5" height="15.0" fill="rgb(243,46,38)" rx="2" ry="2" />
<text  x="203.15" y="1999.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (55 samples, 0.92%)</title><rect x="238.1" y="2021" width="10.8" height="15.0" fill="rgb(215,95,29)" rx="2" ry="2" />
<text  x="241.06" y="2031.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="12.4" y="1861" width="0.8" height="15.0" fill="rgb(249,51,1)" rx="2" ry="2" />
<text  x="15.37" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="504.0" y="1893" width="0.8" height="15.0" fill="rgb(227,85,12)" rx="2" ry="2" />
<text  x="507.04" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="26.4" y="1941" width="0.4" height="15.0" fill="rgb(209,2,33)" rx="2" ry="2" />
<text  x="29.39" y="1951.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="865.4" y="1957" width="0.4" height="15.0" fill="rgb(244,55,2)" rx="2" ry="2" />
<text  x="868.38" y="1967.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="28.6" y="1973" width="0.2" height="15.0" fill="rgb(249,149,42)" rx="2" ry="2" />
<text  x="31.56" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="619.9" y="2005" width="0.4" height="15.0" fill="rgb(207,71,31)" rx="2" ry="2" />
<text  x="622.94" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (12 samples, 0.20%)</title><rect x="441.6" y="1973" width="2.4" height="15.0" fill="rgb(227,145,20)" rx="2" ry="2" />
<text  x="444.64" y="1983.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1081.6" y="1573" width="0.2" height="15.0" fill="rgb(221,127,31)" rx="2" ry="2" />
<text  x="1084.60" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1173" width="51.8" height="15.0" fill="rgb(248,137,32)" rx="2" ry="2" />
<text  x="73.42" y="1183.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="854.9" y="1973" width="0.2" height="15.0" fill="rgb(254,219,35)" rx="2" ry="2" />
<text  x="857.92" y="1983.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="286.0" y="1845" width="0.4" height="15.0" fill="rgb(209,136,37)" rx="2" ry="2" />
<text  x="289.04" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (59 samples, 0.99%)</title><rect x="495.9" y="1941" width="11.7" height="15.0" fill="rgb(220,210,15)" rx="2" ry="2" />
<text  x="498.94" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="898.8" y="1973" width="0.1" height="15.0" fill="rgb(237,23,50)" rx="2" ry="2" />
<text  x="901.75" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (11 samples, 0.18%)</title><rect x="630.2" y="2005" width="2.2" height="15.0" fill="rgb(219,76,26)" rx="2" ry="2" />
<text  x="633.21" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (5 samples, 0.08%)</title><rect x="674.4" y="2005" width="1.0" height="15.0" fill="rgb(229,213,50)" rx="2" ry="2" />
<text  x="677.44" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (3 samples, 0.05%)</title><rect x="953.1" y="1909" width="0.5" height="15.0" fill="rgb(219,213,11)" rx="2" ry="2" />
<text  x="956.05" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="591.3" y="1989" width="0.2" height="15.0" fill="rgb(214,205,0)" rx="2" ry="2" />
<text  x="594.31" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (6 samples, 0.10%)</title><rect x="89.0" y="37" width="1.2" height="15.0" fill="rgb(226,212,47)" rx="2" ry="2" />
<text  x="91.98" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (28 samples, 0.47%)</title><rect x="556.2" y="1973" width="5.5" height="15.0" fill="rgb(221,131,7)" rx="2" ry="2" />
<text  x="559.16" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="294.3" y="1493" width="0.6" height="15.0" fill="rgb(220,21,18)" rx="2" ry="2" />
<text  x="297.34" y="1503.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::expectNext&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="72.8" y="37" width="1.4" height="15.0" fill="rgb(207,110,29)" rx="2" ry="2" />
<text  x="75.79" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (180 samples, 3.01%)</title><rect x="780.3" y="2005" width="35.5" height="15.0" fill="rgb(207,72,40)" rx="2" ry="2" />
<text  x="783.28" y="2015.5" >fac..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="620.9" y="1973" width="0.2" height="15.0" fill="rgb(229,8,23)" rx="2" ry="2" />
<text  x="623.93" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::connecting (1 samples, 0.02%)</title><rect x="1121.1" y="2021" width="0.2" height="15.0" fill="rgb(238,174,43)" rx="2" ry="2" />
<text  x="1124.09" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (18 samples, 0.30%)</title><rect x="920.5" y="1909" width="3.5" height="15.0" fill="rgb(210,123,36)" rx="2" ry="2" />
<text  x="923.47" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="194.2" y="2005" width="0.2" height="15.0" fill="rgb(215,208,5)" rx="2" ry="2" />
<text  x="197.23" y="2015.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="1100.6" y="1925" width="0.5" height="15.0" fill="rgb(238,113,14)" rx="2" ry="2" />
<text  x="1103.55" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="766.1" y="1909" width="0.4" height="15.0" fill="rgb(205,133,13)" rx="2" ry="2" />
<text  x="769.06" y="1919.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="470.1" y="1861" width="0.2" height="15.0" fill="rgb(244,102,30)" rx="2" ry="2" />
<text  x="473.07" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="708.0" y="1925" width="0.2" height="15.0" fill="rgb(224,62,8)" rx="2" ry="2" />
<text  x="711.01" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (787 samples, 13.17%)</title><rect x="690.0" y="2021" width="155.4" height="15.0" fill="rgb(232,34,9)" rx="2" ry="2" />
<text  x="693.04" y="2031.5" >[unknown]</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (24 samples, 0.40%)</title><rect x="13.6" y="1845" width="4.7" height="15.0" fill="rgb(206,56,53)" rx="2" ry="2" />
<text  x="16.55" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (5 samples, 0.08%)</title><rect x="416.6" y="2021" width="1.0" height="15.0" fill="rgb(224,11,23)" rx="2" ry="2" />
<text  x="419.56" y="2031.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="205.5" y="1957" width="0.2" height="15.0" fill="rgb(243,38,50)" rx="2" ry="2" />
<text  x="208.48" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1053.6" y="1781" width="0.2" height="15.0" fill="rgb(253,4,35)" rx="2" ry="2" />
<text  x="1056.56" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (5 samples, 0.08%)</title><rect x="458.0" y="2005" width="1.0" height="15.0" fill="rgb(210,52,46)" rx="2" ry="2" />
<text  x="461.03" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="212.4" y="1957" width="0.2" height="15.0" fill="rgb(231,2,3)" rx="2" ry="2" />
<text  x="215.39" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (39 samples, 0.65%)</title><rect x="294.9" y="1493" width="7.7" height="15.0" fill="rgb(212,136,42)" rx="2" ry="2" />
<text  x="297.93" y="1503.5" ></text>
</g>
<g >
<title>sys_sendmsg (1 samples, 0.02%)</title><rect x="320.4" y="2005" width="0.2" height="15.0" fill="rgb(245,46,35)" rx="2" ry="2" />
<text  x="323.40" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (1 samples, 0.02%)</title><rect x="776.3" y="1941" width="0.2" height="15.0" fill="rgb(232,212,35)" rx="2" ry="2" />
<text  x="779.33" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="507.0" y="1925" width="0.2" height="15.0" fill="rgb(243,163,40)" rx="2" ry="2" />
<text  x="510.00" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="924.0" y="1909" width="0.4" height="15.0" fill="rgb(242,166,23)" rx="2" ry="2" />
<text  x="927.03" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (4 samples, 0.07%)</title><rect x="452.1" y="2037" width="0.8" height="15.0" fill="rgb(231,117,37)" rx="2" ry="2" />
<text  x="455.11" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="116.8" y="37" width="0.4" height="15.0" fill="rgb(243,85,51)" rx="2" ry="2" />
<text  x="119.82" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (35 samples, 0.59%)</title><rect x="1165.1" y="2053" width="6.9" height="15.0" fill="rgb(250,6,15)" rx="2" ry="2" />
<text  x="1168.12" y="2063.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="618.8" y="1845" width="0.2" height="15.0" fill="rgb(210,135,17)" rx="2" ry="2" />
<text  x="621.76" y="1855.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (4 samples, 0.07%)</title><rect x="777.1" y="1941" width="0.8" height="15.0" fill="rgb(249,163,28)" rx="2" ry="2" />
<text  x="780.12" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="711.2" y="1925" width="0.6" height="15.0" fill="rgb(215,86,23)" rx="2" ry="2" />
<text  x="714.17" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="440.5" y="1973" width="0.4" height="15.0" fill="rgb(219,107,34)" rx="2" ry="2" />
<text  x="443.46" y="1983.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="470.1" y="1877" width="0.2" height="15.0" fill="rgb(207,82,40)" rx="2" ry="2" />
<text  x="473.07" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1573" width="51.8" height="15.0" fill="rgb(250,98,27)" rx="2" ry="2" />
<text  x="73.42" y="1583.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1429" width="51.8" height="15.0" fill="rgb(253,90,52)" rx="2" ry="2" />
<text  x="73.42" y="1439.5" >[unkn..</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="204.9" y="1957" width="0.4" height="15.0" fill="rgb(225,33,52)" rx="2" ry="2" />
<text  x="207.89" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="634.9" y="2005" width="0.2" height="15.0" fill="rgb(207,206,24)" rx="2" ry="2" />
<text  x="637.95" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (789 samples, 13.20%)</title><rect x="689.6" y="2037" width="155.8" height="15.0" fill="rgb(242,57,38)" rx="2" ry="2" />
<text  x="692.65" y="2047.5" >facebook::memcache::..</text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="170.9" y="1925" width="0.2" height="15.0" fill="rgb(240,4,32)" rx="2" ry="2" />
<text  x="173.93" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (1 samples, 0.02%)</title><rect x="169.0" y="1957" width="0.1" height="15.0" fill="rgb(235,117,41)" rx="2" ry="2" />
<text  x="171.95" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::coalesceAndGetRange (2 samples, 0.03%)</title><rect x="873.1" y="2005" width="0.4" height="15.0" fill="rgb(252,184,36)" rx="2" ry="2" />
<text  x="876.08" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1124.8" y="1941" width="0.2" height="15.0" fill="rgb(248,141,49)" rx="2" ry="2" />
<text  x="1127.84" y="1951.5" ></text>
</g>
<g >
<title>void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="641.3" y="1973" width="0.8" height="15.0" fill="rgb(206,16,16)" rx="2" ry="2" />
<text  x="644.27" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1147.7" y="2053" width="0.2" height="15.0" fill="rgb(254,67,20)" rx="2" ry="2" />
<text  x="1150.74" y="2063.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="422.9" y="1893" width="0.4" height="15.0" fill="rgb(240,216,51)" rx="2" ry="2" />
<text  x="425.88" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="170.1" y="1925" width="0.2" height="15.0" fill="rgb(222,83,30)" rx="2" ry="2" />
<text  x="173.14" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (7 samples, 0.12%)</title><rect x="1156.6" y="2053" width="1.4" height="15.0" fill="rgb(231,181,31)" rx="2" ry="2" />
<text  x="1159.63" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="194.4" y="2021" width="0.2" height="15.0" fill="rgb(207,175,50)" rx="2" ry="2" />
<text  x="197.42" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (5 samples, 0.08%)</title><rect x="173.9" y="1893" width="1.0" height="15.0" fill="rgb(229,154,26)" rx="2" ry="2" />
<text  x="176.89" y="1903.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1081.6" y="1557" width="0.2" height="15.0" fill="rgb(220,142,15)" rx="2" ry="2" />
<text  x="1084.60" y="1567.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (25 samples, 0.42%)</title><rect x="13.6" y="2053" width="4.9" height="15.0" fill="rgb(237,151,2)" rx="2" ry="2" />
<text  x="16.55" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="855.9" y="1989" width="0.2" height="15.0" fill="rgb(218,202,46)" rx="2" ry="2" />
<text  x="858.90" y="1999.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="1107.5" y="2037" width="0.2" height="15.0" fill="rgb(231,127,25)" rx="2" ry="2" />
<text  x="1110.46" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (31 samples, 0.52%)</title><rect x="302.6" y="1733" width="6.2" height="15.0" fill="rgb(229,23,36)" rx="2" ry="2" />
<text  x="305.63" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (11 samples, 0.18%)</title><rect x="815.8" y="2005" width="2.2" height="15.0" fill="rgb(207,17,0)" rx="2" ry="2" />
<text  x="818.82" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="285.6" y="1797" width="0.2" height="15.0" fill="rgb(242,41,1)" rx="2" ry="2" />
<text  x="288.65" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="853.3" y="2005" width="0.2" height="15.0" fill="rgb(243,20,3)" rx="2" ry="2" />
<text  x="856.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="97.5" y="37" width="0.4" height="15.0" fill="rgb(218,114,16)" rx="2" ry="2" />
<text  x="100.47" y="47.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="285.6" y="1829" width="0.2" height="15.0" fill="rgb(235,118,53)" rx="2" ry="2" />
<text  x="288.65" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="193.8" y="1973" width="0.4" height="15.0" fill="rgb(245,39,50)" rx="2" ry="2" />
<text  x="196.83" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (5 samples, 0.08%)</title><rect x="403.9" y="1957" width="1.0" height="15.0" fill="rgb(209,71,1)" rx="2" ry="2" />
<text  x="406.93" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1101.9" y="2037" width="0.6" height="15.0" fill="rgb(254,103,29)" rx="2" ry="2" />
<text  x="1104.93" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (132 samples, 2.21%)</title><rect x="735.5" y="1909" width="26.0" height="15.0" fill="rgb(248,20,44)" rx="2" ry="2" />
<text  x="738.46" y="1919.5" >f..</text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (6 samples, 0.10%)</title><rect x="411.6" y="1941" width="1.2" height="15.0" fill="rgb(206,204,34)" rx="2" ry="2" />
<text  x="414.63" y="1951.5" ></text>
</g>
<g >
<title>kfree (27 samples, 0.45%)</title><rect x="1086.9" y="1445" width="5.4" height="15.0" fill="rgb(251,34,39)" rx="2" ry="2" />
<text  x="1089.93" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="501" width="51.8" height="15.0" fill="rgb(245,86,34)" rx="2" ry="2" />
<text  x="73.42" y="511.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="816.2" y="1989" width="0.6" height="15.0" fill="rgb(214,218,23)" rx="2" ry="2" />
<text  x="819.21" y="1999.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (4 samples, 0.07%)</title><rect x="998.5" y="2053" width="0.8" height="15.0" fill="rgb(252,126,27)" rx="2" ry="2" />
<text  x="1001.47" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="250.7" y="2021" width="0.2" height="15.0" fill="rgb(227,24,15)" rx="2" ry="2" />
<text  x="253.70" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::list (1 samples, 0.02%)</title><rect x="208.2" y="1957" width="0.2" height="15.0" fill="rgb(228,206,3)" rx="2" ry="2" />
<text  x="211.25" y="1967.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="285.8" y="1845" width="0.2" height="15.0" fill="rgb(247,132,19)" rx="2" ry="2" />
<text  x="288.85" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (3 samples, 0.05%)</title><rect x="339.0" y="2005" width="0.6" height="15.0" fill="rgb(248,206,28)" rx="2" ry="2" />
<text  x="341.96" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="853" width="51.8" height="15.0" fill="rgb(221,185,51)" rx="2" ry="2" />
<text  x="73.42" y="863.5" >[unkn..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="951.3" y="1909" width="1.4" height="15.0" fill="rgb(239,193,52)" rx="2" ry="2" />
<text  x="954.28" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="108.1" y="37" width="0.4" height="15.0" fill="rgb(207,56,53)" rx="2" ry="2" />
<text  x="111.14" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (1 samples, 0.02%)</title><rect x="360.7" y="1973" width="0.2" height="15.0" fill="rgb(221,207,35)" rx="2" ry="2" />
<text  x="363.68" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (33 samples, 0.55%)</title><rect x="417.7" y="2037" width="6.6" height="15.0" fill="rgb(224,168,14)" rx="2" ry="2" />
<text  x="420.75" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (13 samples, 0.22%)</title><rect x="414.0" y="2005" width="2.6" height="15.0" fill="rgb(247,91,52)" rx="2" ry="2" />
<text  x="417.00" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="336.2" y="2037" width="0.2" height="15.0" fill="rgb(232,17,17)" rx="2" ry="2" />
<text  x="339.20" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (2 samples, 0.03%)</title><rect x="421.5" y="1861" width="0.4" height="15.0" fill="rgb(244,116,34)" rx="2" ry="2" />
<text  x="424.50" y="1871.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="923.0" y="1893" width="0.4" height="15.0" fill="rgb(249,169,40)" rx="2" ry="2" />
<text  x="926.04" y="1903.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (67 samples, 1.12%)</title><rect x="1082.0" y="1525" width="13.2" height="15.0" fill="rgb(254,226,41)" rx="2" ry="2" />
<text  x="1084.99" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="965" width="51.8" height="15.0" fill="rgb(210,218,34)" rx="2" ry="2" />
<text  x="73.42" y="975.5" >[unkn..</text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="26.6" y="1925" width="0.2" height="15.0" fill="rgb(212,161,47)" rx="2" ry="2" />
<text  x="29.59" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="628.0" y="2005" width="0.2" height="15.0" fill="rgb(210,61,28)" rx="2" ry="2" />
<text  x="631.04" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="833.2" y="1989" width="0.4" height="15.0" fill="rgb(224,93,21)" rx="2" ry="2" />
<text  x="836.20" y="1999.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="12.4" y="1845" width="0.8" height="15.0" fill="rgb(228,64,30)" rx="2" ry="2" />
<text  x="15.37" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (2 samples, 0.03%)</title><rect x="610.9" y="1957" width="0.4" height="15.0" fill="rgb(238,97,1)" rx="2" ry="2" />
<text  x="613.86" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="859.3" y="2037" width="0.4" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="862.26" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="725" width="51.8" height="15.0" fill="rgb(236,70,6)" rx="2" ry="2" />
<text  x="73.42" y="735.5" >[unkn..</text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="308.4" y="1685" width="0.2" height="15.0" fill="rgb(222,108,7)" rx="2" ry="2" />
<text  x="311.36" y="1695.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4 samples, 0.07%)</title><rect x="325.1" y="2037" width="0.8" height="15.0" fill="rgb(217,46,37)" rx="2" ry="2" />
<text  x="328.14" y="2047.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="230.2" y="2021" width="0.2" height="15.0" fill="rgb(206,19,34)" rx="2" ry="2" />
<text  x="233.16" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="914.2" y="1957" width="0.7" height="15.0" fill="rgb(254,110,13)" rx="2" ry="2" />
<text  x="917.15" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="186.5" y="2005" width="0.4" height="15.0" fill="rgb(240,121,9)" rx="2" ry="2" />
<text  x="189.53" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="151.2" y="1925" width="0.2" height="15.0" fill="rgb(213,33,20)" rx="2" ry="2" />
<text  x="154.18" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (82 samples, 1.37%)</title><rect x="1080.6" y="1749" width="16.2" height="15.0" fill="rgb(213,67,25)" rx="2" ry="2" />
<text  x="1083.61" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.57%)</title><rect x="621.1" y="2005" width="6.7" height="15.0" fill="rgb(238,3,21)" rx="2" ry="2" />
<text  x="624.13" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="627.1" y="1957" width="0.5" height="15.0" fill="rgb(235,114,16)" rx="2" ry="2" />
<text  x="630.05" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (5 samples, 0.08%)</title><rect x="513.5" y="1957" width="1.0" height="15.0" fill="rgb(224,128,9)" rx="2" ry="2" />
<text  x="516.51" y="1967.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (4 samples, 0.07%)</title><rect x="70.6" y="37" width="0.8" height="15.0" fill="rgb(241,110,2)" rx="2" ry="2" />
<text  x="73.62" y="47.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="917.5" y="1925" width="0.2" height="15.0" fill="rgb(246,14,33)" rx="2" ry="2" />
<text  x="920.51" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="121.6" y="37" width="0.2" height="15.0" fill="rgb(254,95,50)" rx="2" ry="2" />
<text  x="124.56" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="163.4" y="1957" width="0.4" height="15.0" fill="rgb(235,65,6)" rx="2" ry="2" />
<text  x="166.42" y="1967.5" ></text>
</g>
<g >
<title>__skb_clone (4 samples, 0.07%)</title><rect x="309.3" y="1797" width="0.8" height="15.0" fill="rgb(208,86,53)" rx="2" ry="2" />
<text  x="312.34" y="1807.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="122.0" y="53" width="0.2" height="15.0" fill="rgb(206,112,47)" rx="2" ry="2" />
<text  x="124.96" y="63.5" ></text>
</g>
<g >
<title>google::Check_NEImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="761.5" y="1909" width="0.2" height="15.0" fill="rgb(246,6,4)" rx="2" ry="2" />
<text  x="764.52" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="95.1" y="37" width="1.0" height="15.0" fill="rgb(250,186,45)" rx="2" ry="2" />
<text  x="98.10" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="996.7" y="2037" width="0.2" height="15.0" fill="rgb(206,164,33)" rx="2" ry="2" />
<text  x="999.69" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.22%)</title><rect x="713.1" y="1925" width="2.6" height="15.0" fill="rgb(219,122,23)" rx="2" ry="2" />
<text  x="716.14" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="620.7" y="2021" width="0.4" height="15.0" fill="rgb(234,82,23)" rx="2" ry="2" />
<text  x="623.73" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="119.0" y="53" width="0.6" height="15.0" fill="rgb(244,48,6)" rx="2" ry="2" />
<text  x="122.00" y="63.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (14 samples, 0.23%)</title><rect x="79.3" y="37" width="2.8" height="15.0" fill="rgb(226,135,26)" rx="2" ry="2" />
<text  x="82.31" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="624.5" y="1909" width="0.2" height="15.0" fill="rgb(215,159,9)" rx="2" ry="2" />
<text  x="627.48" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (19 samples, 0.32%)</title><rect x="808.5" y="1973" width="3.8" height="15.0" fill="rgb(229,209,8)" rx="2" ry="2" />
<text  x="811.51" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1125.8" y="1989" width="0.2" height="15.0" fill="rgb(243,51,17)" rx="2" ry="2" />
<text  x="1128.83" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (18 samples, 0.30%)</title><rect x="712.2" y="1941" width="3.5" height="15.0" fill="rgb(232,88,34)" rx="2" ry="2" />
<text  x="715.16" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="328.5" y="1957" width="0.2" height="15.0" fill="rgb(225,84,35)" rx="2" ry="2" />
<text  x="331.50" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (3 samples, 0.05%)</title><rect x="182.2" y="2021" width="0.6" height="15.0" fill="rgb(225,93,11)" rx="2" ry="2" />
<text  x="185.18" y="2031.5" ></text>
</g>
<g >
<title>sys_epoll_wait (35 samples, 0.59%)</title><rect x="328.5" y="1989" width="6.9" height="15.0" fill="rgb(242,161,45)" rx="2" ry="2" />
<text  x="331.50" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (7 samples, 0.12%)</title><rect x="913.6" y="1973" width="1.3" height="15.0" fill="rgb(244,44,31)" rx="2" ry="2" />
<text  x="916.56" y="1983.5" ></text>
</g>
<g >
<title>release_sock (38 samples, 0.64%)</title><rect x="1048.6" y="1925" width="7.5" height="15.0" fill="rgb(212,17,44)" rx="2" ry="2" />
<text  x="1051.62" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="403.7" y="1909" width="0.2" height="15.0" fill="rgb(211,94,47)" rx="2" ry="2" />
<text  x="406.73" y="1919.5" ></text>
</g>
<g >
<title>native_write_msr (20 samples, 0.33%)</title><rect x="14.1" y="1829" width="4.0" height="15.0" fill="rgb(238,166,9)" rx="2" ry="2" />
<text  x="17.15" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="163.4" y="1941" width="0.2" height="15.0" fill="rgb(219,210,16)" rx="2" ry="2" />
<text  x="166.42" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="113.1" y="37" width="0.4" height="15.0" fill="rgb(236,133,24)" rx="2" ry="2" />
<text  x="116.07" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (18 samples, 0.30%)</title><rect x="91.5" y="37" width="3.6" height="15.0" fill="rgb(240,180,43)" rx="2" ry="2" />
<text  x="94.55" y="47.5" ></text>
</g>
<g >
<title>__check_object_size (5 samples, 0.08%)</title><rect x="261.4" y="1893" width="0.9" height="15.0" fill="rgb(250,49,4)" rx="2" ry="2" />
<text  x="264.36" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (11 samples, 0.18%)</title><rect x="812.3" y="1989" width="2.1" height="15.0" fill="rgb(212,171,24)" rx="2" ry="2" />
<text  x="815.27" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::~McSerializedRequest (1 samples, 0.02%)</title><rect x="194.6" y="2021" width="0.2" height="15.0" fill="rgb(232,77,5)" rx="2" ry="2" />
<text  x="197.62" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="845.6" y="1989" width="0.2" height="15.0" fill="rgb(212,179,32)" rx="2" ry="2" />
<text  x="848.64" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="500.7" y="1909" width="0.4" height="15.0" fill="rgb(232,14,6)" rx="2" ry="2" />
<text  x="503.68" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (67 samples, 1.12%)</title><rect x="1131.4" y="2053" width="13.2" height="15.0" fill="rgb(233,196,38)" rx="2" ry="2" />
<text  x="1134.36" y="2063.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (16 samples, 0.27%)</title><rect x="233.1" y="2037" width="3.2" height="15.0" fill="rgb(250,184,42)" rx="2" ry="2" />
<text  x="236.13" y="2047.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="308.6" y="1685" width="0.2" height="15.0" fill="rgb(234,135,21)" rx="2" ry="2" />
<text  x="311.55" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="31.5" y="2021" width="0.2" height="15.0" fill="rgb(235,182,33)" rx="2" ry="2" />
<text  x="34.52" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="1143.2" y="2005" width="0.2" height="15.0" fill="rgb(213,18,30)" rx="2" ry="2" />
<text  x="1146.20" y="2015.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (3 samples, 0.05%)</title><rect x="860.2" y="2037" width="0.6" height="15.0" fill="rgb(237,218,36)" rx="2" ry="2" />
<text  x="863.25" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1221" width="51.8" height="15.0" fill="rgb(209,17,12)" rx="2" ry="2" />
<text  x="73.42" y="1231.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="855.7" y="2021" width="1.0" height="15.0" fill="rgb(232,141,21)" rx="2" ry="2" />
<text  x="858.71" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (5 samples, 0.08%)</title><rect x="1144.8" y="2021" width="1.0" height="15.0" fill="rgb(209,126,9)" rx="2" ry="2" />
<text  x="1147.78" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="126.1" y="1989" width="0.2" height="15.0" fill="rgb(233,141,22)" rx="2" ry="2" />
<text  x="129.10" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="440.7" y="1957" width="0.2" height="15.0" fill="rgb(246,170,53)" rx="2" ry="2" />
<text  x="443.65" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (29 samples, 0.49%)</title><rect x="802.8" y="1973" width="5.7" height="15.0" fill="rgb(229,199,16)" rx="2" ry="2" />
<text  x="805.79" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="417.7" y="1989" width="6.6" height="15.0" fill="rgb(221,130,51)" rx="2" ry="2" />
<text  x="420.75" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (2 samples, 0.03%)</title><rect x="501.1" y="1909" width="0.4" height="15.0" fill="rgb(217,135,48)" rx="2" ry="2" />
<text  x="504.07" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="455.3" y="2005" width="0.4" height="15.0" fill="rgb(207,33,1)" rx="2" ry="2" />
<text  x="458.26" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="186.1" y="2021" width="0.2" height="15.0" fill="rgb(241,204,14)" rx="2" ry="2" />
<text  x="189.13" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (13 samples, 0.22%)</title><rect x="127.7" y="1941" width="2.6" height="15.0" fill="rgb(224,136,24)" rx="2" ry="2" />
<text  x="130.68" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="856.3" y="1973" width="0.4" height="15.0" fill="rgb(230,123,22)" rx="2" ry="2" />
<text  x="859.30" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="157.5" y="1973" width="0.2" height="15.0" fill="rgb(220,134,19)" rx="2" ry="2" />
<text  x="160.50" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="264.1" y="1877" width="0.6" height="15.0" fill="rgb(225,166,6)" rx="2" ry="2" />
<text  x="267.13" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (31 samples, 0.52%)</title><rect x="417.9" y="1957" width="6.2" height="15.0" fill="rgb(215,11,36)" rx="2" ry="2" />
<text  x="420.95" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="27.4" y="1957" width="0.4" height="15.0" fill="rgb(244,26,49)" rx="2" ry="2" />
<text  x="30.38" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="993.7" y="2005" width="0.2" height="15.0" fill="rgb(230,122,48)" rx="2" ry="2" />
<text  x="996.73" y="2015.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (21 samples, 0.35%)</title><rect x="381.6" y="1973" width="4.2" height="15.0" fill="rgb(227,65,10)" rx="2" ry="2" />
<text  x="384.61" y="1983.5" ></text>
</g>
<g >
<title>sk_reset_timer (7 samples, 0.12%)</title><rect x="312.3" y="1781" width="1.4" height="15.0" fill="rgb(209,74,18)" rx="2" ry="2" />
<text  x="315.31" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="1121.7" y="2005" width="0.2" height="15.0" fill="rgb(226,205,34)" rx="2" ry="2" />
<text  x="1124.68" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (3 samples, 0.05%)</title><rect x="212.8" y="2021" width="0.6" height="15.0" fill="rgb(223,165,38)" rx="2" ry="2" />
<text  x="215.79" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="27.8" y="1957" width="0.2" height="15.0" fill="rgb(216,183,42)" rx="2" ry="2" />
<text  x="30.77" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="441.4" y="2005" width="0.2" height="15.0" fill="rgb(245,168,24)" rx="2" ry="2" />
<text  x="444.44" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (7 samples, 0.12%)</title><rect x="823.9" y="1973" width="1.4" height="15.0" fill="rgb(227,121,43)" rx="2" ry="2" />
<text  x="826.92" y="1983.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="294.5" y="1381" width="0.4" height="15.0" fill="rgb(225,41,8)" rx="2" ry="2" />
<text  x="297.53" y="1391.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="890.9" y="1941" width="0.2" height="15.0" fill="rgb(244,214,52)" rx="2" ry="2" />
<text  x="893.85" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (2 samples, 0.03%)</title><rect x="620.7" y="2037" width="0.4" height="15.0" fill="rgb(223,67,54)" rx="2" ry="2" />
<text  x="623.73" y="2047.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="566.6" y="1957" width="0.2" height="15.0" fill="rgb(243,119,44)" rx="2" ry="2" />
<text  x="569.63" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="444.8" y="1973" width="0.4" height="15.0" fill="rgb(235,65,35)" rx="2" ry="2" />
<text  x="447.80" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="624.1" y="1941" width="0.2" height="15.0" fill="rgb(244,186,35)" rx="2" ry="2" />
<text  x="627.09" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="995.9" y="1989" width="0.6" height="15.0" fill="rgb(219,53,6)" rx="2" ry="2" />
<text  x="998.90" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="618.2" y="1941" width="0.2" height="15.0" fill="rgb(208,122,43)" rx="2" ry="2" />
<text  x="621.17" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (6 samples, 0.10%)</title><rect x="654.1" y="1973" width="1.2" height="15.0" fill="rgb(213,218,29)" rx="2" ry="2" />
<text  x="657.10" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (45 samples, 0.75%)</title><rect x="293.7" y="1733" width="8.9" height="15.0" fill="rgb(227,40,17)" rx="2" ry="2" />
<text  x="296.74" y="1743.5" ></text>
</g>
<g >
<title>ip_send_check (2 samples, 0.03%)</title><rect x="1079.8" y="1813" width="0.4" height="15.0" fill="rgb(234,119,0)" rx="2" ry="2" />
<text  x="1082.82" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="149" width="51.8" height="15.0" fill="rgb(222,116,20)" rx="2" ry="2" />
<text  x="73.42" y="159.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1285" width="51.8" height="15.0" fill="rgb(245,153,32)" rx="2" ry="2" />
<text  x="73.42" y="1295.5" >[unkn..</text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1144.8" y="1973" width="0.2" height="15.0" fill="rgb(227,24,3)" rx="2" ry="2" />
<text  x="1147.78" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (7 samples, 0.12%)</title><rect x="417.9" y="1925" width="1.4" height="15.0" fill="rgb(237,195,22)" rx="2" ry="2" />
<text  x="420.95" y="1935.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="447.0" y="2005" width="0.4" height="15.0" fill="rgb(224,197,16)" rx="2" ry="2" />
<text  x="449.97" y="2015.5" ></text>
</g>
<g >
<title>ip_local_out (89 samples, 1.49%)</title><rect x="1079.6" y="1845" width="17.6" height="15.0" fill="rgb(207,166,22)" rx="2" ry="2" />
<text  x="1082.62" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="413.2" y="2005" width="0.2" height="15.0" fill="rgb(231,159,43)" rx="2" ry="2" />
<text  x="416.21" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="853.3" y="1973" width="0.2" height="15.0" fill="rgb(205,213,6)" rx="2" ry="2" />
<text  x="856.34" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (14 samples, 0.23%)</title><rect x="578.5" y="1989" width="2.7" height="15.0" fill="rgb(213,180,26)" rx="2" ry="2" />
<text  x="581.48" y="1999.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="263.9" y="1877" width="0.2" height="15.0" fill="rgb(242,134,44)" rx="2" ry="2" />
<text  x="266.93" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (5 samples, 0.08%)</title><rect x="211.0" y="1925" width="1.0" height="15.0" fill="rgb(214,194,29)" rx="2" ry="2" />
<text  x="214.01" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="293" width="51.8" height="15.0" fill="rgb(237,205,10)" rx="2" ry="2" />
<text  x="73.42" y="303.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="850.6" y="1941" width="0.2" height="15.0" fill="rgb(205,66,34)" rx="2" ry="2" />
<text  x="853.57" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (4 samples, 0.07%)</title><rect x="358.7" y="1941" width="0.8" height="15.0" fill="rgb(249,64,46)" rx="2" ry="2" />
<text  x="361.71" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (26 samples, 0.44%)</title><rect x="1016.2" y="1909" width="5.2" height="15.0" fill="rgb(206,42,23)" rx="2" ry="2" />
<text  x="1019.24" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (2 samples, 0.03%)</title><rect x="121.6" y="85" width="0.4" height="15.0" fill="rgb(237,42,48)" rx="2" ry="2" />
<text  x="124.56" y="95.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1050.0" y="1893" width="0.2" height="15.0" fill="rgb(206,44,11)" rx="2" ry="2" />
<text  x="1053.00" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="187.9" y="2005" width="0.2" height="15.0" fill="rgb(253,162,4)" rx="2" ry="2" />
<text  x="190.91" y="2015.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="615.0" y="1925" width="0.2" height="15.0" fill="rgb(232,12,22)" rx="2" ry="2" />
<text  x="618.01" y="1935.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="924.8" y="1957" width="0.4" height="15.0" fill="rgb(226,172,49)" rx="2" ry="2" />
<text  x="927.82" y="1967.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (25 samples, 0.42%)</title><rect x="1107.1" y="2053" width="4.9" height="15.0" fill="rgb(213,163,19)" rx="2" ry="2" />
<text  x="1110.07" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (24 samples, 0.40%)</title><rect x="1121.3" y="2021" width="4.7" height="15.0" fill="rgb(233,79,35)" rx="2" ry="2" />
<text  x="1124.29" y="2031.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1154.5" y="1957" width="0.2" height="15.0" fill="rgb(235,33,53)" rx="2" ry="2" />
<text  x="1157.46" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="1144.0" y="2021" width="0.6" height="15.0" fill="rgb(233,155,19)" rx="2" ry="2" />
<text  x="1146.99" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1189" width="51.8" height="15.0" fill="rgb(250,5,24)" rx="2" ry="2" />
<text  x="73.42" y="1199.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (6 samples, 0.10%)</title><rect x="233.9" y="2021" width="1.2" height="15.0" fill="rgb(209,88,7)" rx="2" ry="2" />
<text  x="236.92" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (6 samples, 0.10%)</title><rect x="690.0" y="1957" width="1.2" height="15.0" fill="rgb(219,13,29)" rx="2" ry="2" />
<text  x="693.04" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="763.7" y="1909" width="0.2" height="15.0" fill="rgb(227,31,52)" rx="2" ry="2" />
<text  x="766.69" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.03%)</title><rect x="776.5" y="1941" width="0.4" height="15.0" fill="rgb(251,170,47)" rx="2" ry="2" />
<text  x="779.53" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="366.2" y="1941" width="0.8" height="15.0" fill="rgb(253,43,34)" rx="2" ry="2" />
<text  x="369.21" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (7 samples, 0.12%)</title><rect x="190.5" y="1925" width="1.4" height="15.0" fill="rgb(211,95,33)" rx="2" ry="2" />
<text  x="193.48" y="1935.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="309.1" y="1797" width="0.2" height="15.0" fill="rgb(232,17,53)" rx="2" ry="2" />
<text  x="312.15" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="656.5" y="1973" width="1.0" height="15.0" fill="rgb(249,117,21)" rx="2" ry="2" />
<text  x="659.47" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="132.0" y="1941" width="0.2" height="15.0" fill="rgb(219,179,34)" rx="2" ry="2" />
<text  x="135.03" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1541" width="51.8" height="15.0" fill="rgb(215,110,2)" rx="2" ry="2" />
<text  x="73.42" y="1551.5" >[unkn..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.60%)</title><rect x="328.5" y="2021" width="7.1" height="15.0" fill="rgb(220,143,47)" rx="2" ry="2" />
<text  x="331.50" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="26.4" y="1893" width="0.2" height="15.0" fill="rgb(245,193,21)" rx="2" ry="2" />
<text  x="29.39" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (11 samples, 0.18%)</title><rect x="613.2" y="1941" width="2.2" height="15.0" fill="rgb(230,160,30)" rx="2" ry="2" />
<text  x="616.23" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (5 samples, 0.08%)</title><rect x="336.4" y="2037" width="1.0" height="15.0" fill="rgb(215,219,10)" rx="2" ry="2" />
<text  x="339.40" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (52 samples, 0.87%)</title><rect x="915.3" y="1973" width="10.3" height="15.0" fill="rgb(205,115,46)" rx="2" ry="2" />
<text  x="918.34" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (35 samples, 0.59%)</title><rect x="169.0" y="1973" width="6.9" height="15.0" fill="rgb(211,176,41)" rx="2" ry="2" />
<text  x="171.95" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (76 samples, 1.27%)</title><rect x="1081.4" y="1605" width="15.0" height="15.0" fill="rgb(252,98,39)" rx="2" ry="2" />
<text  x="1084.40" y="1615.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="618.8" y="1877" width="0.2" height="15.0" fill="rgb(218,106,14)" rx="2" ry="2" />
<text  x="621.76" y="1887.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="850.6" y="1925" width="0.2" height="15.0" fill="rgb(208,95,47)" rx="2" ry="2" />
<text  x="853.57" y="1935.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.15%)</title><rect x="10.6" y="1989" width="1.8" height="15.0" fill="rgb(246,112,27)" rx="2" ry="2" />
<text  x="13.59" y="1999.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::AsyncMcClientImpl::readDataAvailable (1 samples, 0.02%)</title><rect x="30.5" y="1989" width="0.2" height="15.0" fill="rgb(247,44,37)" rx="2" ry="2" />
<text  x="33.54" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::keyValueRequestCommon&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="872.5" y="2005" width="0.2" height="15.0" fill="rgb(221,136,25)" rx="2" ry="2" />
<text  x="875.49" y="2015.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="317.4" y="1877" width="0.2" height="15.0" fill="rgb(236,198,10)" rx="2" ry="2" />
<text  x="320.44" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="175.1" y="1941" width="0.2" height="15.0" fill="rgb(205,209,14)" rx="2" ry="2" />
<text  x="178.07" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::recv (3 samples, 0.05%)</title><rect x="26.8" y="1957" width="0.6" height="15.0" fill="rgb(241,109,48)" rx="2" ry="2" />
<text  x="29.78" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (12 samples, 0.20%)</title><rect x="433.0" y="1989" width="2.3" height="15.0" fill="rgb(221,196,12)" rx="2" ry="2" />
<text  x="435.95" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="1020.6" y="1861" width="0.4" height="15.0" fill="rgb(249,179,49)" rx="2" ry="2" />
<text  x="1023.58" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1189.6" y="2021" width="0.2" height="15.0" fill="rgb(238,41,13)" rx="2" ry="2" />
<text  x="1192.61" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5 samples, 0.08%)</title><rect x="410.6" y="1941" width="1.0" height="15.0" fill="rgb(249,97,26)" rx="2" ry="2" />
<text  x="413.64" y="1951.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.02%)</title><rect x="1097.0" y="1717" width="0.2" height="15.0" fill="rgb(248,136,44)" rx="2" ry="2" />
<text  x="1100.00" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (1 samples, 0.02%)</title><rect x="122.0" y="101" width="0.2" height="15.0" fill="rgb(205,102,31)" rx="2" ry="2" />
<text  x="124.96" y="111.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="999.3" y="2053" width="0.9" height="15.0" fill="rgb(231,171,39)" rx="2" ry="2" />
<text  x="1002.26" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="210.4" y="1909" width="0.2" height="15.0" fill="rgb(220,6,15)" rx="2" ry="2" />
<text  x="213.42" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="681.0" y="2037" width="0.2" height="15.0" fill="rgb(243,141,6)" rx="2" ry="2" />
<text  x="683.96" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::ensureLoopScheduled (1 samples, 0.02%)</title><rect x="1138.9" y="1989" width="0.2" height="15.0" fill="rgb(218,85,30)" rx="2" ry="2" />
<text  x="1141.86" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="612.6" y="1909" width="0.4" height="15.0" fill="rgb(229,78,47)" rx="2" ry="2" />
<text  x="615.64" y="1919.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="1084.4" y="1413" width="0.2" height="15.0" fill="rgb(231,195,35)" rx="2" ry="2" />
<text  x="1087.36" y="1423.5" ></text>
</g>
<g >
<title>_copy_to_iter (14 samples, 0.23%)</title><rect x="1070.7" y="1909" width="2.8" height="15.0" fill="rgb(237,40,47)" rx="2" ry="2" />
<text  x="1073.74" y="1919.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="616.0" y="1925" width="0.8" height="15.0" fill="rgb(222,91,28)" rx="2" ry="2" />
<text  x="618.99" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::isScheduled (2 samples, 0.03%)</title><rect x="193.2" y="1989" width="0.4" height="15.0" fill="rgb(213,81,4)" rx="2" ry="2" />
<text  x="196.24" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 1.09%)</title><rect x="425.6" y="2021" width="12.9" height="15.0" fill="rgb(233,149,38)" rx="2" ry="2" />
<text  x="428.65" y="2031.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (3 samples, 0.05%)</title><rect x="864.8" y="1973" width="0.6" height="15.0" fill="rgb(250,4,13)" rx="2" ry="2" />
<text  x="867.79" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (23 samples, 0.38%)</title><rect x="400.4" y="1973" width="4.5" height="15.0" fill="rgb(237,47,41)" rx="2" ry="2" />
<text  x="403.37" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="565.8" y="1973" width="1.0" height="15.0" fill="rgb(250,14,29)" rx="2" ry="2" />
<text  x="568.84" y="1983.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.08%)</title><rect x="264.7" y="1893" width="1.0" height="15.0" fill="rgb(229,201,42)" rx="2" ry="2" />
<text  x="267.72" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1989" width="51.8" height="15.0" fill="rgb(226,127,52)" rx="2" ry="2" />
<text  x="73.42" y="1999.5" >[unkn..</text>
</g>
<g >
<title>_IO_setb (1 samples, 0.02%)</title><rect x="232.1" y="2037" width="0.2" height="15.0" fill="rgb(230,27,53)" rx="2" ry="2" />
<text  x="235.14" y="2047.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (7 samples, 0.12%)</title><rect x="68.4" y="2021" width="1.4" height="15.0" fill="rgb(231,58,42)" rx="2" ry="2" />
<text  x="71.45" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="779.3" y="1957" width="0.2" height="15.0" fill="rgb(234,175,50)" rx="2" ry="2" />
<text  x="782.29" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1797" width="51.8" height="15.0" fill="rgb(250,219,6)" rx="2" ry="2" />
<text  x="73.42" y="1807.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="855.7" y="2005" width="0.4" height="15.0" fill="rgb(237,147,12)" rx="2" ry="2" />
<text  x="858.71" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (9 samples, 0.15%)</title><rect x="630.6" y="1989" width="1.8" height="15.0" fill="rgb(250,156,48)" rx="2" ry="2" />
<text  x="633.61" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="169.0" y="1941" width="0.1" height="15.0" fill="rgb(252,218,0)" rx="2" ry="2" />
<text  x="171.95" y="1951.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="600.8" y="1989" width="0.6" height="15.0" fill="rgb(247,119,46)" rx="2" ry="2" />
<text  x="603.79" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="199.0" y="1973" width="0.2" height="15.0" fill="rgb(221,16,34)" rx="2" ry="2" />
<text  x="201.97" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (25 samples, 0.42%)</title><rect x="13.6" y="1861" width="4.9" height="15.0" fill="rgb(234,100,23)" rx="2" ry="2" />
<text  x="16.55" y="1871.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="316.8" y="1845" width="0.2" height="15.0" fill="rgb(225,136,14)" rx="2" ry="2" />
<text  x="319.85" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (5 samples, 0.08%)</title><rect x="684.3" y="1989" width="1.0" height="15.0" fill="rgb(252,4,19)" rx="2" ry="2" />
<text  x="687.31" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="624.3" y="1941" width="0.2" height="15.0" fill="rgb(218,44,17)" rx="2" ry="2" />
<text  x="627.29" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (21 samples, 0.35%)</title><rect x="943.0" y="1893" width="4.1" height="15.0" fill="rgb(233,139,16)" rx="2" ry="2" />
<text  x="945.98" y="1903.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="166.8" y="1941" width="0.2" height="15.0" fill="rgb(238,72,20)" rx="2" ry="2" />
<text  x="169.78" y="1951.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="617.8" y="1877" width="0.2" height="15.0" fill="rgb(251,21,47)" rx="2" ry="2" />
<text  x="620.77" y="1887.5" ></text>
</g>
<g >
<title>__clock_gettime (5 samples, 0.08%)</title><rect x="367.0" y="1957" width="1.0" height="15.0" fill="rgb(209,222,36)" rx="2" ry="2" />
<text  x="370.00" y="1967.5" ></text>
</g>
<g >
<title>tcp_write_xmit (139 samples, 2.33%)</title><rect x="286.4" y="1845" width="27.5" height="15.0" fill="rgb(253,136,1)" rx="2" ry="2" />
<text  x="289.44" y="1855.5" >t..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="10.8" y="1829" width="0.2" height="15.0" fill="rgb(217,149,6)" rx="2" ry="2" />
<text  x="13.79" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (3 samples, 0.05%)</title><rect x="844.8" y="2005" width="0.6" height="15.0" fill="rgb(229,54,49)" rx="2" ry="2" />
<text  x="847.85" y="2015.5" ></text>
</g>
<g >
<title>__alloc_skb (21 samples, 0.35%)</title><rect x="280.3" y="1861" width="4.2" height="15.0" fill="rgb(216,162,11)" rx="2" ry="2" />
<text  x="283.32" y="1871.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (4 samples, 0.07%)</title><rect x="232.3" y="2037" width="0.8" height="15.0" fill="rgb(225,180,5)" rx="2" ry="2" />
<text  x="235.34" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (226 samples, 3.78%)</title><rect x="483.3" y="2005" width="44.6" height="15.0" fill="rgb(248,215,33)" rx="2" ry="2" />
<text  x="486.30" y="2015.5" >[unk..</text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="76.5" y="37" width="0.4" height="15.0" fill="rgb(207,138,30)" rx="2" ry="2" />
<text  x="79.54" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (53 samples, 0.89%)</title><rect x="21.1" y="2021" width="10.4" height="15.0" fill="rgb(235,112,18)" rx="2" ry="2" />
<text  x="24.06" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="952.7" y="1909" width="0.4" height="15.0" fill="rgb(233,49,14)" rx="2" ry="2" />
<text  x="955.66" y="1919.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.10%)</title><rect x="690.0" y="1973" width="1.2" height="15.0" fill="rgb(213,199,26)" rx="2" ry="2" />
<text  x="693.04" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="671.1" y="2037" width="0.8" height="15.0" fill="rgb(209,130,29)" rx="2" ry="2" />
<text  x="674.08" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (87 samples, 1.46%)</title><rect x="602.2" y="2005" width="17.2" height="15.0" fill="rgb(206,146,35)" rx="2" ry="2" />
<text  x="605.17" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="448.0" y="1973" width="0.2" height="15.0" fill="rgb(224,229,0)" rx="2" ry="2" />
<text  x="450.96" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (1 samples, 0.02%)</title><rect x="612.0" y="1925" width="0.2" height="15.0" fill="rgb(233,103,46)" rx="2" ry="2" />
<text  x="615.04" y="1935.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::throwIfFailed (1 samples, 0.02%)</title><rect x="860.1" y="2037" width="0.1" height="15.0" fill="rgb(219,23,25)" rx="2" ry="2" />
<text  x="863.05" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (3 samples, 0.05%)</title><rect x="561.7" y="1973" width="0.6" height="15.0" fill="rgb(254,66,5)" rx="2" ry="2" />
<text  x="564.69" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="946.3" y="1877" width="0.4" height="15.0" fill="rgb(217,206,50)" rx="2" ry="2" />
<text  x="949.34" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;void  (35 samples, 0.59%)</title><rect x="772.4" y="1957" width="6.9" height="15.0" fill="rgb(241,103,16)" rx="2" ry="2" />
<text  x="775.38" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (13 samples, 0.22%)</title><rect x="98.7" y="37" width="2.5" height="15.0" fill="rgb(230,185,31)" rx="2" ry="2" />
<text  x="101.66" y="47.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="472.4" y="1989" width="0.2" height="15.0" fill="rgb(208,206,36)" rx="2" ry="2" />
<text  x="475.44" y="1999.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1154.5" y="1925" width="0.2" height="15.0" fill="rgb(245,23,20)" rx="2" ry="2" />
<text  x="1157.46" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1861" width="51.8" height="15.0" fill="rgb(223,23,18)" rx="2" ry="2" />
<text  x="73.42" y="1871.5" >[unkn..</text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="667.9" y="2005" width="0.6" height="15.0" fill="rgb(206,13,32)" rx="2" ry="2" />
<text  x="670.93" y="2015.5" ></text>
</g>
<g >
<title>inet_sendmsg (274 samples, 4.59%)</title><rect x="263.7" y="1925" width="54.1" height="15.0" fill="rgb(217,16,9)" rx="2" ry="2" />
<text  x="266.73" y="1935.5" >inet_..</text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.23%)</title><rect x="1102.5" y="2037" width="2.8" height="15.0" fill="rgb(241,50,16)" rx="2" ry="2" />
<text  x="1105.53" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (2 samples, 0.03%)</title><rect x="208.4" y="1957" width="0.4" height="15.0" fill="rgb(244,8,25)" rx="2" ry="2" />
<text  x="211.44" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (30 samples, 0.50%)</title><rect x="906.6" y="1957" width="6.0" height="15.0" fill="rgb(242,19,15)" rx="2" ry="2" />
<text  x="909.65" y="1967.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.08%)</title><rect x="323.4" y="2037" width="1.0" height="15.0" fill="rgb(220,205,18)" rx="2" ry="2" />
<text  x="326.36" y="2047.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (3 samples, 0.05%)</title><rect x="446.2" y="1973" width="0.6" height="15.0" fill="rgb(223,167,52)" rx="2" ry="2" />
<text  x="449.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="213" width="51.8" height="15.0" fill="rgb(209,107,43)" rx="2" ry="2" />
<text  x="73.42" y="223.5" >[unkn..</text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (32 samples, 0.54%)</title><rect x="347.1" y="1973" width="6.3" height="15.0" fill="rgb(237,24,7)" rx="2" ry="2" />
<text  x="350.06" y="1983.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.08%)</title><rect x="12.4" y="2005" width="1.0" height="15.0" fill="rgb(253,15,24)" rx="2" ry="2" />
<text  x="15.37" y="2015.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="317.6" y="1893" width="0.2" height="15.0" fill="rgb(216,224,22)" rx="2" ry="2" />
<text  x="320.64" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="515.5" y="1973" width="0.2" height="15.0" fill="rgb(249,2,45)" rx="2" ry="2" />
<text  x="518.49" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="121.8" y="53" width="0.2" height="15.0" fill="rgb(234,143,4)" rx="2" ry="2" />
<text  x="124.76" y="63.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="755.8" y="1877" width="0.4" height="15.0" fill="rgb(238,15,38)" rx="2" ry="2" />
<text  x="758.79" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (7 samples, 0.12%)</title><rect x="186.3" y="2021" width="1.4" height="15.0" fill="rgb(247,115,41)" rx="2" ry="2" />
<text  x="189.33" y="2031.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="167.8" y="1973" width="0.2" height="15.0" fill="rgb(229,61,38)" rx="2" ry="2" />
<text  x="170.77" y="1983.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="600.2" y="1989" width="0.2" height="15.0" fill="rgb(247,153,40)" rx="2" ry="2" />
<text  x="603.20" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (3 samples, 0.05%)</title><rect x="388.7" y="1973" width="0.6" height="15.0" fill="rgb(218,63,2)" rx="2" ry="2" />
<text  x="391.72" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (13 samples, 0.22%)</title><rect x="768.6" y="1957" width="2.6" height="15.0" fill="rgb(245,62,2)" rx="2" ry="2" />
<text  x="771.63" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="700.9" y="1989" width="0.6" height="15.0" fill="rgb(207,223,49)" rx="2" ry="2" />
<text  x="703.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="981" width="51.8" height="15.0" fill="rgb(205,74,3)" rx="2" ry="2" />
<text  x="73.42" y="991.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="850.2" y="1941" width="0.2" height="15.0" fill="rgb(244,49,11)" rx="2" ry="2" />
<text  x="853.18" y="1951.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1154.5" y="2005" width="0.2" height="15.0" fill="rgb(247,4,49)" rx="2" ry="2" />
<text  x="1157.46" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (15 samples, 0.25%)</title><rect x="827.3" y="2005" width="2.9" height="15.0" fill="rgb(246,197,7)" rx="2" ry="2" />
<text  x="830.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (2 samples, 0.03%)</title><rect x="826.9" y="2005" width="0.4" height="15.0" fill="rgb(233,121,49)" rx="2" ry="2" />
<text  x="829.88" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (6 samples, 0.10%)</title><rect x="634.0" y="2037" width="1.1" height="15.0" fill="rgb(247,31,34)" rx="2" ry="2" />
<text  x="636.96" y="2047.5" ></text>
</g>
<g >
<title>__slab_free (7 samples, 0.12%)</title><rect x="1083.2" y="1461" width="1.4" height="15.0" fill="rgb(237,208,45)" rx="2" ry="2" />
<text  x="1086.18" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="440.5" y="1957" width="0.2" height="15.0" fill="rgb(220,209,33)" rx="2" ry="2" />
<text  x="443.46" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (110 samples, 1.84%)</title><rect x="368.2" y="1989" width="21.7" height="15.0" fill="rgb(237,83,30)" rx="2" ry="2" />
<text  x="371.19" y="1999.5" >f..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="378.3" y="1957" width="0.4" height="15.0" fill="rgb(254,150,2)" rx="2" ry="2" />
<text  x="381.26" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="359.5" y="1957" width="0.2" height="15.0" fill="rgb(246,1,11)" rx="2" ry="2" />
<text  x="362.50" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (8 samples, 0.13%)</title><rect x="306.8" y="1653" width="1.6" height="15.0" fill="rgb(215,217,18)" rx="2" ry="2" />
<text  x="309.78" y="1663.5" ></text>
</g>
<g >
<title>sched_clock (4 samples, 0.07%)</title><rect x="1098.6" y="1893" width="0.8" height="15.0" fill="rgb(215,109,40)" rx="2" ry="2" />
<text  x="1101.58" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (67 samples, 1.12%)</title><rect x="18.5" y="2053" width="13.2" height="15.0" fill="rgb(225,127,38)" rx="2" ry="2" />
<text  x="21.49" y="2063.5" ></text>
</g>
<g >
<title>std::move&lt;bool  (1 samples, 0.02%)</title><rect x="777.7" y="1925" width="0.2" height="15.0" fill="rgb(217,36,0)" rx="2" ry="2" />
<text  x="780.71" y="1935.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.12%)</title><rect x="1069.2" y="1909" width="1.3" height="15.0" fill="rgb(232,87,24)" rx="2" ry="2" />
<text  x="1072.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (9 samples, 0.15%)</title><rect x="846.8" y="2005" width="1.8" height="15.0" fill="rgb(217,8,52)" rx="2" ry="2" />
<text  x="849.82" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="964.5" y="2005" width="0.2" height="15.0" fill="rgb(247,33,12)" rx="2" ry="2" />
<text  x="967.50" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="423.9" y="1893" width="0.2" height="15.0" fill="rgb(237,222,28)" rx="2" ry="2" />
<text  x="426.87" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="12.4" y="1877" width="0.8" height="15.0" fill="rgb(215,171,8)" rx="2" ry="2" />
<text  x="15.37" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (8 samples, 0.13%)</title><rect x="197.6" y="1989" width="1.6" height="15.0" fill="rgb(219,139,50)" rx="2" ry="2" />
<text  x="200.58" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (12 samples, 0.20%)</title><rect x="863.4" y="2005" width="2.4" height="15.0" fill="rgb(235,44,33)" rx="2" ry="2" />
<text  x="866.41" y="2015.5" ></text>
</g>
<g >
<title>skb_entail (3 samples, 0.05%)</title><rect x="284.5" y="1877" width="0.6" height="15.0" fill="rgb(230,119,54)" rx="2" ry="2" />
<text  x="287.46" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="12.4" y="1909" width="0.8" height="15.0" fill="rgb(239,166,11)" rx="2" ry="2" />
<text  x="15.37" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (5 samples, 0.08%)</title><rect x="912.6" y="1957" width="1.0" height="15.0" fill="rgb(220,1,40)" rx="2" ry="2" />
<text  x="915.57" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (17 samples, 0.28%)</title><rect x="419.9" y="1909" width="3.4" height="15.0" fill="rgb(245,18,20)" rx="2" ry="2" />
<text  x="422.92" y="1919.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="853.1" y="1989" width="0.2" height="15.0" fill="rgb(241,119,6)" rx="2" ry="2" />
<text  x="856.14" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="133.4" y="1957" width="0.2" height="15.0" fill="rgb(212,62,49)" rx="2" ry="2" />
<text  x="136.41" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="853.9" y="2005" width="0.2" height="15.0" fill="rgb(206,45,18)" rx="2" ry="2" />
<text  x="856.93" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="164.4" y="1957" width="0.2" height="15.0" fill="rgb(209,52,27)" rx="2" ry="2" />
<text  x="167.41" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_locked (2 samples, 0.03%)</title><rect x="294.5" y="1413" width="0.4" height="15.0" fill="rgb(236,64,37)" rx="2" ry="2" />
<text  x="297.53" y="1423.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="164.6" y="1957" width="0.2" height="15.0" fill="rgb(254,179,37)" rx="2" ry="2" />
<text  x="167.61" y="1967.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="262.0" y="1877" width="0.3" height="15.0" fill="rgb(222,41,43)" rx="2" ry="2" />
<text  x="264.95" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (10 samples, 0.17%)</title><rect x="165.2" y="1973" width="2.0" height="15.0" fill="rgb(218,111,1)" rx="2" ry="2" />
<text  x="168.20" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="424.7" y="2005" width="0.2" height="15.0" fill="rgb(214,28,37)" rx="2" ry="2" />
<text  x="427.66" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="775.7" y="1909" width="0.4" height="15.0" fill="rgb(252,116,52)" rx="2" ry="2" />
<text  x="778.74" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="860.4" y="2021" width="0.4" height="15.0" fill="rgb(249,153,32)" rx="2" ry="2" />
<text  x="863.45" y="2031.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="688.7" y="1973" width="0.2" height="15.0" fill="rgb(235,162,21)" rx="2" ry="2" />
<text  x="691.66" y="1983.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="302.4" y="1477" width="0.2" height="15.0" fill="rgb(235,26,32)" rx="2" ry="2" />
<text  x="305.43" y="1487.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (15 samples, 0.25%)</title><rect x="152.6" y="1957" width="2.9" height="15.0" fill="rgb(233,161,16)" rx="2" ry="2" />
<text  x="155.56" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1621" width="51.8" height="15.0" fill="rgb(239,154,7)" rx="2" ry="2" />
<text  x="73.42" y="1631.5" >[unkn..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="515.7" y="1973" width="0.2" height="15.0" fill="rgb(232,159,32)" rx="2" ry="2" />
<text  x="518.69" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="151.4" y="1925" width="0.2" height="15.0" fill="rgb(227,124,24)" rx="2" ry="2" />
<text  x="154.38" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="163.8" y="1957" width="0.2" height="15.0" fill="rgb(233,26,46)" rx="2" ry="2" />
<text  x="166.82" y="1967.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1055.9" y="1909" width="0.2" height="15.0" fill="rgb(254,138,16)" rx="2" ry="2" />
<text  x="1058.93" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (191 samples, 3.20%)</title><rect x="726.2" y="1941" width="37.7" height="15.0" fill="rgb(252,202,38)" rx="2" ry="2" />
<text  x="729.17" y="1951.5" >fol..</text>
</g>
<g >
<title>__softirqentry_text_start (45 samples, 0.75%)</title><rect x="293.7" y="1685" width="8.9" height="15.0" fill="rgb(222,175,16)" rx="2" ry="2" />
<text  x="296.74" y="1695.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="263.7" y="1893" width="1.0" height="15.0" fill="rgb(207,25,52)" rx="2" ry="2" />
<text  x="266.73" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="200.7" y="1957" width="0.4" height="15.0" fill="rgb(223,137,35)" rx="2" ry="2" />
<text  x="203.74" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="202.3" y="1941" width="0.2" height="15.0" fill="rgb(217,138,31)" rx="2" ry="2" />
<text  x="205.32" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="413.0" y="2005" width="0.2" height="15.0" fill="rgb(208,135,1)" rx="2" ry="2" />
<text  x="416.01" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (14 samples, 0.23%)</title><rect x="728.7" y="1925" width="2.8" height="15.0" fill="rgb(205,196,45)" rx="2" ry="2" />
<text  x="731.74" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (38 samples, 0.64%)</title><rect x="168.4" y="2005" width="7.5" height="15.0" fill="rgb(209,156,48)" rx="2" ry="2" />
<text  x="171.36" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1126.0" y="2021" width="0.2" height="15.0" fill="rgb(248,166,9)" rx="2" ry="2" />
<text  x="1129.02" y="2031.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="776.1" y="1925" width="0.2" height="15.0" fill="rgb(244,203,39)" rx="2" ry="2" />
<text  x="779.13" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (2 samples, 0.03%)</title><rect x="566.8" y="1989" width="0.4" height="15.0" fill="rgb(249,170,6)" rx="2" ry="2" />
<text  x="569.83" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (48 samples, 0.80%)</title><rect x="472.6" y="1989" width="9.5" height="15.0" fill="rgb(227,153,52)" rx="2" ry="2" />
<text  x="475.64" y="1999.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1188.0" y="2005" width="0.4" height="15.0" fill="rgb(232,170,4)" rx="2" ry="2" />
<text  x="1191.03" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1100.4" y="1941" width="0.2" height="15.0" fill="rgb(217,216,24)" rx="2" ry="2" />
<text  x="1103.35" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (3 samples, 0.05%)</title><rect x="71.6" y="37" width="0.6" height="15.0" fill="rgb(219,50,43)" rx="2" ry="2" />
<text  x="74.61" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (76 samples, 1.27%)</title><rect x="1081.4" y="1589" width="15.0" height="15.0" fill="rgb(206,227,35)" rx="2" ry="2" />
<text  x="1084.40" y="1599.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (8 samples, 0.13%)</title><rect x="947.5" y="1893" width="1.6" height="15.0" fill="rgb(217,2,14)" rx="2" ry="2" />
<text  x="950.52" y="1903.5" ></text>
</g>
<g >
<title>process_backlog (82 samples, 1.37%)</title><rect x="1080.6" y="1701" width="16.2" height="15.0" fill="rgb(231,166,42)" rx="2" ry="2" />
<text  x="1083.61" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="356.3" y="1973" width="0.2" height="15.0" fill="rgb(237,131,15)" rx="2" ry="2" />
<text  x="359.34" y="1983.5" ></text>
</g>
<g >
<title>__snprintf_chk (1 samples, 0.02%)</title><rect x="325.9" y="2037" width="0.2" height="15.0" fill="rgb(222,62,34)" rx="2" ry="2" />
<text  x="328.93" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (3 samples, 0.05%)</title><rect x="856.1" y="2005" width="0.6" height="15.0" fill="rgb(222,51,37)" rx="2" ry="2" />
<text  x="859.10" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (79 samples, 1.32%)</title><rect x="1081.2" y="1653" width="15.6" height="15.0" fill="rgb(221,190,4)" rx="2" ry="2" />
<text  x="1084.20" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="572.0" y="1989" width="0.2" height="15.0" fill="rgb(244,173,42)" rx="2" ry="2" />
<text  x="574.96" y="1999.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (13 samples, 0.22%)</title><rect x="260.4" y="1909" width="2.5" height="15.0" fill="rgb(205,49,34)" rx="2" ry="2" />
<text  x="263.37" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="421.9" y="1845" width="0.4" height="15.0" fill="rgb(249,33,38)" rx="2" ry="2" />
<text  x="424.89" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="657.7" y="1973" width="0.2" height="15.0" fill="rgb(249,229,2)" rx="2" ry="2" />
<text  x="660.66" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="169.0" y="1925" width="0.1" height="15.0" fill="rgb(208,187,43)" rx="2" ry="2" />
<text  x="171.95" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (9 samples, 0.15%)</title><rect x="306.6" y="1669" width="1.8" height="15.0" fill="rgb(227,229,40)" rx="2" ry="2" />
<text  x="309.58" y="1679.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="204.3" y="1973" width="1.4" height="15.0" fill="rgb(211,18,19)" rx="2" ry="2" />
<text  x="207.30" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (6 samples, 0.10%)</title><rect x="215.7" y="2021" width="1.2" height="15.0" fill="rgb(210,46,3)" rx="2" ry="2" />
<text  x="218.75" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="1053.6" y="1845" width="0.4" height="15.0" fill="rgb(213,69,50)" rx="2" ry="2" />
<text  x="1056.56" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="757" width="51.8" height="15.0" fill="rgb(214,8,20)" rx="2" ry="2" />
<text  x="73.42" y="767.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="401.6" y="1957" width="0.5" height="15.0" fill="rgb(235,2,47)" rx="2" ry="2" />
<text  x="404.56" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="925.6" y="1989" width="0.4" height="15.0" fill="rgb(212,142,42)" rx="2" ry="2" />
<text  x="928.61" y="1999.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1053.6" y="1797" width="0.4" height="15.0" fill="rgb(226,125,20)" rx="2" ry="2" />
<text  x="1056.56" y="1807.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (10 samples, 0.17%)</title><rect x="405.3" y="1989" width="2.0" height="15.0" fill="rgb(210,105,14)" rx="2" ry="2" />
<text  x="408.31" y="1999.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1080.2" y="1797" width="0.2" height="15.0" fill="rgb(250,15,33)" rx="2" ry="2" />
<text  x="1083.21" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="684.1" y="1989" width="0.2" height="15.0" fill="rgb(221,175,0)" rx="2" ry="2" />
<text  x="687.12" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (41 samples, 0.69%)</title><rect x="1134.7" y="2005" width="8.1" height="15.0" fill="rgb(235,178,47)" rx="2" ry="2" />
<text  x="1137.71" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="866.0" y="2005" width="0.4" height="15.0" fill="rgb(251,67,50)" rx="2" ry="2" />
<text  x="868.97" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="814.4" y="1989" width="1.4" height="15.0" fill="rgb(218,213,31)" rx="2" ry="2" />
<text  x="817.44" y="1999.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="265.5" y="1829" width="0.2" height="15.0" fill="rgb(239,68,8)" rx="2" ry="2" />
<text  x="268.51" y="1839.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="155.5" y="1957" width="0.2" height="15.0" fill="rgb(206,85,1)" rx="2" ry="2" />
<text  x="158.53" y="1967.5" ></text>
</g>
<g >
<title>ip_output (86 samples, 1.44%)</title><rect x="1080.2" y="1829" width="17.0" height="15.0" fill="rgb(227,183,8)" rx="2" ry="2" />
<text  x="1083.21" y="1839.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="318.6" y="1925" width="0.4" height="15.0" fill="rgb(210,136,39)" rx="2" ry="2" />
<text  x="321.62" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (370 samples, 6.19%)</title><rect x="339.9" y="2005" width="73.1" height="15.0" fill="rgb(242,176,22)" rx="2" ry="2" />
<text  x="342.95" y="2015.5" >folly::H..</text>
</g>
<g >
<title>std::operator&amp; (3 samples, 0.05%)</title><rect x="923.4" y="1893" width="0.6" height="15.0" fill="rgb(238,82,12)" rx="2" ry="2" />
<text  x="926.43" y="1903.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1189.6" y="2005" width="0.2" height="15.0" fill="rgb(209,116,40)" rx="2" ry="2" />
<text  x="1192.61" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="709" width="51.8" height="15.0" fill="rgb(230,151,35)" rx="2" ry="2" />
<text  x="73.42" y="719.5" >[unkn..</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (3 samples, 0.05%)</title><rect x="734.5" y="1909" width="0.6" height="15.0" fill="rgb(218,216,20)" rx="2" ry="2" />
<text  x="737.47" y="1919.5" ></text>
</g>
<g >
<title>tcp_recvmsg (458 samples, 7.66%)</title><rect x="1009.7" y="1941" width="90.5" height="15.0" fill="rgb(237,136,2)" rx="2" ry="2" />
<text  x="1012.72" y="1951.5" >tcp_recvmsg</text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="417.7" y="2021" width="6.6" height="15.0" fill="rgb(215,77,45)" rx="2" ry="2" />
<text  x="420.75" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="469" width="51.8" height="15.0" fill="rgb(250,189,38)" rx="2" ry="2" />
<text  x="73.42" y="479.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="170.7" y="1893" width="0.2" height="15.0" fill="rgb(253,192,40)" rx="2" ry="2" />
<text  x="173.73" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="397.8" y="1973" width="0.2" height="15.0" fill="rgb(219,168,38)" rx="2" ry="2" />
<text  x="400.80" y="1983.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="725.4" y="1797" width="0.8" height="15.0" fill="rgb(214,159,51)" rx="2" ry="2" />
<text  x="728.38" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.13%)</title><rect x="209.0" y="1941" width="1.6" height="15.0" fill="rgb(249,71,26)" rx="2" ry="2" />
<text  x="212.04" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.12%)</title><rect x="1188.4" y="2053" width="1.4" height="15.0" fill="rgb(239,10,46)" rx="2" ry="2" />
<text  x="1191.42" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (20 samples, 0.33%)</title><rect x="189.3" y="1973" width="3.9" height="15.0" fill="rgb(238,58,34)" rx="2" ry="2" />
<text  x="192.29" y="1983.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (82 samples, 1.37%)</title><rect x="1080.6" y="1781" width="16.2" height="15.0" fill="rgb(221,101,30)" rx="2" ry="2" />
<text  x="1083.61" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (4 samples, 0.07%)</title><rect x="463.4" y="2005" width="0.7" height="15.0" fill="rgb(206,114,2)" rx="2" ry="2" />
<text  x="466.36" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (1 samples, 0.02%)</title><rect x="25.0" y="1925" width="0.2" height="15.0" fill="rgb(235,87,52)" rx="2" ry="2" />
<text  x="28.01" y="1935.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="598.6" y="1989" width="0.4" height="15.0" fill="rgb(254,162,36)" rx="2" ry="2" />
<text  x="601.62" y="1999.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (15 samples, 0.25%)</title><rect x="349.2" y="1941" width="3.0" height="15.0" fill="rgb(208,160,27)" rx="2" ry="2" />
<text  x="352.23" y="1951.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1100.4" y="1909" width="0.2" height="15.0" fill="rgb(228,178,54)" rx="2" ry="2" />
<text  x="1103.35" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="710.0" y="1909" width="0.2" height="15.0" fill="rgb(227,139,31)" rx="2" ry="2" />
<text  x="712.98" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="277" width="51.8" height="15.0" fill="rgb(241,200,50)" rx="2" ry="2" />
<text  x="73.42" y="287.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::moveReplyToParent (4 samples, 0.07%)</title><rect x="563.1" y="1989" width="0.8" height="15.0" fill="rgb(206,15,35)" rx="2" ry="2" />
<text  x="566.08" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (21 samples, 0.35%)</title><rect x="273.8" y="1861" width="4.1" height="15.0" fill="rgb(233,101,4)" rx="2" ry="2" />
<text  x="276.80" y="1871.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (2 samples, 0.03%)</title><rect x="379.2" y="1957" width="0.4" height="15.0" fill="rgb(247,36,49)" rx="2" ry="2" />
<text  x="382.24" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="731.3" y="1909" width="0.2" height="15.0" fill="rgb(221,184,34)" rx="2" ry="2" />
<text  x="734.31" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="113.7" y="37" width="0.2" height="15.0" fill="rgb(233,176,28)" rx="2" ry="2" />
<text  x="116.66" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (57 samples, 0.95%)</title><rect x="608.1" y="1989" width="11.3" height="15.0" fill="rgb(254,14,11)" rx="2" ry="2" />
<text  x="611.10" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (44 samples, 0.74%)</title><rect x="293.9" y="1621" width="8.7" height="15.0" fill="rgb(253,45,36)" rx="2" ry="2" />
<text  x="296.94" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (7 samples, 0.12%)</title><rect x="687.5" y="2037" width="1.4" height="15.0" fill="rgb(222,58,17)" rx="2" ry="2" />
<text  x="690.47" y="2047.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="1095.8" y="1541" width="0.2" height="15.0" fill="rgb(207,60,14)" rx="2" ry="2" />
<text  x="1098.81" y="1551.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="538.0" y="1989" width="0.2" height="15.0" fill="rgb(228,15,31)" rx="2" ry="2" />
<text  x="541.00" y="1999.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (261 samples, 4.37%)</title><rect x="266.1" y="1893" width="51.5" height="15.0" fill="rgb(243,128,17)" rx="2" ry="2" />
<text  x="269.10" y="1903.5" >tcp_s..</text>
</g>
<g >
<title>__tcp_transmit_skb (121 samples, 2.02%)</title><rect x="287.8" y="1829" width="23.9" height="15.0" fill="rgb(242,111,35)" rx="2" ry="2" />
<text  x="290.82" y="1839.5" >_..</text>
</g>
<g >
<title>__tcp_push_pending_frames (143 samples, 2.39%)</title><rect x="285.6" y="1861" width="28.3" height="15.0" fill="rgb(238,140,51)" rx="2" ry="2" />
<text  x="288.65" y="1871.5" >_..</text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (13 samples, 0.22%)</title><rect x="164.8" y="1989" width="2.6" height="15.0" fill="rgb(221,167,0)" rx="2" ry="2" />
<text  x="167.81" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="533" width="51.8" height="15.0" fill="rgb(238,194,17)" rx="2" ry="2" />
<text  x="73.42" y="543.5" >[unkn..</text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="615.0" y="1909" width="0.2" height="15.0" fill="rgb(228,115,45)" rx="2" ry="2" />
<text  x="618.01" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="691.4" y="2005" width="0.2" height="15.0" fill="rgb(214,63,54)" rx="2" ry="2" />
<text  x="694.42" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (14 samples, 0.23%)</title><rect x="508.4" y="1941" width="2.7" height="15.0" fill="rgb(246,155,39)" rx="2" ry="2" />
<text  x="511.38" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="181" width="51.8" height="15.0" fill="rgb(231,204,6)" rx="2" ry="2" />
<text  x="73.42" y="191.5" >[unkn..</text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="917.3" y="1925" width="0.2" height="15.0" fill="rgb(237,94,41)" rx="2" ry="2" />
<text  x="920.31" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="88.8" y="37" width="0.2" height="15.0" fill="rgb(243,184,38)" rx="2" ry="2" />
<text  x="91.79" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="82.1" y="37" width="2.3" height="15.0" fill="rgb(242,56,50)" rx="2" ry="2" />
<text  x="85.07" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1145.8" y="2021" width="0.2" height="15.0" fill="rgb(244,21,38)" rx="2" ry="2" />
<text  x="1148.77" y="2031.5" ></text>
</g>
<g >
<title>skb_release_data (18 samples, 0.30%)</title><rect x="297.3" y="1429" width="3.6" height="15.0" fill="rgb(208,67,17)" rx="2" ry="2" />
<text  x="300.30" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="90.2" y="37" width="0.2" height="15.0" fill="rgb(230,44,22)" rx="2" ry="2" />
<text  x="93.17" y="47.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="368.0" y="1957" width="0.2" height="15.0" fill="rgb(231,94,23)" rx="2" ry="2" />
<text  x="370.99" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="421" width="51.8" height="15.0" fill="rgb(207,125,51)" rx="2" ry="2" />
<text  x="73.42" y="431.5" >[unkn..</text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (4 samples, 0.07%)</title><rect x="392.5" y="1973" width="0.8" height="15.0" fill="rgb(212,139,11)" rx="2" ry="2" />
<text  x="395.47" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (21 samples, 0.35%)</title><rect x="611.3" y="1957" width="4.1" height="15.0" fill="rgb(216,33,14)" rx="2" ry="2" />
<text  x="614.26" y="1967.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="667.3" y="2005" width="0.4" height="15.0" fill="rgb(225,195,51)" rx="2" ry="2" />
<text  x="670.33" y="2015.5" ></text>
</g>
<g >
<title>folly::Optional&lt;facebook::memcache::McServerRequestContext&gt;::emplace&lt;facebook::memcache::McServerRequestContext&gt; (4 samples, 0.07%)</title><rect x="596.8" y="1989" width="0.8" height="15.0" fill="rgb(243,102,17)" rx="2" ry="2" />
<text  x="599.84" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (13 samples, 0.22%)</title><rect x="876.4" y="2005" width="2.6" height="15.0" fill="rgb(221,178,41)" rx="2" ry="2" />
<text  x="879.44" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="1125.8" y="2005" width="0.2" height="15.0" fill="rgb(218,93,14)" rx="2" ry="2" />
<text  x="1128.83" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="549.6" y="2037" width="0.2" height="15.0" fill="rgb(247,86,14)" rx="2" ry="2" />
<text  x="552.65" y="2047.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="122.0" y="37" width="0.2" height="15.0" fill="rgb(238,106,18)" rx="2" ry="2" />
<text  x="124.96" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="412.8" y="1973" width="0.2" height="15.0" fill="rgb(214,134,0)" rx="2" ry="2" />
<text  x="415.81" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2 samples, 0.03%)</title><rect x="398.0" y="1973" width="0.4" height="15.0" fill="rgb(254,98,47)" rx="2" ry="2" />
<text  x="401.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="996.5" y="2037" width="0.2" height="15.0" fill="rgb(234,26,21)" rx="2" ry="2" />
<text  x="999.49" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (8 samples, 0.13%)</title><rect x="119.6" y="53" width="1.6" height="15.0" fill="rgb(235,137,34)" rx="2" ry="2" />
<text  x="122.59" y="63.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="267.7" y="1877" width="0.2" height="15.0" fill="rgb(221,191,39)" rx="2" ry="2" />
<text  x="270.68" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (5 samples, 0.08%)</title><rect x="406.3" y="1957" width="1.0" height="15.0" fill="rgb(229,163,10)" rx="2" ry="2" />
<text  x="409.30" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="625.5" y="1909" width="0.2" height="15.0" fill="rgb(205,79,9)" rx="2" ry="2" />
<text  x="628.47" y="1919.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="265.7" y="1893" width="0.2" height="15.0" fill="rgb(222,107,47)" rx="2" ry="2" />
<text  x="268.71" y="1903.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="206.7" y="2005" width="0.2" height="15.0" fill="rgb(214,101,4)" rx="2" ry="2" />
<text  x="209.67" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="412.6" y="1925" width="0.2" height="15.0" fill="rgb(222,204,6)" rx="2" ry="2" />
<text  x="415.61" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::maySend (2 samples, 0.03%)</title><rect x="825.5" y="2005" width="0.4" height="15.0" fill="rgb(243,7,27)" rx="2" ry="2" />
<text  x="828.50" y="2015.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.25%)</title><rect x="226.4" y="2021" width="3.0" height="15.0" fill="rgb(249,145,24)" rx="2" ry="2" />
<text  x="229.41" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (3 samples, 0.05%)</title><rect x="354.0" y="1989" width="0.6" height="15.0" fill="rgb(224,24,52)" rx="2" ry="2" />
<text  x="356.97" y="1999.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.15%)</title><rect x="1082.8" y="1477" width="1.8" height="15.0" fill="rgb(246,112,19)" rx="2" ry="2" />
<text  x="1085.78" y="1487.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (2 samples, 0.03%)</title><rect x="760.7" y="1893" width="0.4" height="15.0" fill="rgb(252,226,37)" rx="2" ry="2" />
<text  x="763.73" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="770.0" y="1941" width="0.8" height="15.0" fill="rgb(215,81,12)" rx="2" ry="2" />
<text  x="773.01" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="113.9" y="37" width="0.2" height="15.0" fill="rgb(246,124,22)" rx="2" ry="2" />
<text  x="116.86" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1138.7" y="1973" width="0.2" height="15.0" fill="rgb(236,170,6)" rx="2" ry="2" />
<text  x="1141.66" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="353.4" y="1989" width="0.6" height="15.0" fill="rgb(223,13,51)" rx="2" ry="2" />
<text  x="356.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1877" width="51.8" height="15.0" fill="rgb(240,10,20)" rx="2" ry="2" />
<text  x="73.42" y="1887.5" >[unkn..</text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1081.8" y="1525" width="0.2" height="15.0" fill="rgb(219,8,52)" rx="2" ry="2" />
<text  x="1084.79" y="1535.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="542.9" y="2021" width="0.6" height="15.0" fill="rgb(242,210,35)" rx="2" ry="2" />
<text  x="545.94" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (8 samples, 0.13%)</title><rect x="713.3" y="1909" width="1.6" height="15.0" fill="rgb(239,121,48)" rx="2" ry="2" />
<text  x="716.34" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="590.9" y="1989" width="0.4" height="15.0" fill="rgb(209,108,22)" rx="2" ry="2" />
<text  x="593.92" y="1999.5" ></text>
</g>
<g >
<title>void folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="871.5" y="1989" width="0.4" height="15.0" fill="rgb(207,151,12)" rx="2" ry="2" />
<text  x="874.50" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="172.5" y="1893" width="0.2" height="15.0" fill="rgb(248,58,6)" rx="2" ry="2" />
<text  x="175.51" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="549.1" y="2037" width="0.2" height="15.0" fill="rgb(206,12,39)" rx="2" ry="2" />
<text  x="552.06" y="2047.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="618.6" y="1893" width="0.2" height="15.0" fill="rgb(230,226,30)" rx="2" ry="2" />
<text  x="621.56" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="171.3" y="1893" width="0.2" height="15.0" fill="rgb(216,51,23)" rx="2" ry="2" />
<text  x="174.32" y="1903.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (7 samples, 0.12%)</title><rect x="163.4" y="1989" width="1.4" height="15.0" fill="rgb(219,53,43)" rx="2" ry="2" />
<text  x="166.42" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="586.4" y="1973" width="0.2" height="15.0" fill="rgb(232,36,25)" rx="2" ry="2" />
<text  x="589.38" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (6 samples, 0.10%)</title><rect x="845.6" y="2005" width="1.2" height="15.0" fill="rgb(239,94,4)" rx="2" ry="2" />
<text  x="848.64" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (11 samples, 0.18%)</title><rect x="178.0" y="2005" width="2.2" height="15.0" fill="rgb(214,174,40)" rx="2" ry="2" />
<text  x="181.04" y="2015.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="538.0" y="1893" width="0.2" height="15.0" fill="rgb(227,222,15)" rx="2" ry="2" />
<text  x="541.00" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (8 samples, 0.13%)</title><rect x="358.1" y="1973" width="1.6" height="15.0" fill="rgb(243,163,3)" rx="2" ry="2" />
<text  x="361.12" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (8 samples, 0.13%)</title><rect x="10.8" y="1845" width="1.6" height="15.0" fill="rgb(230,126,2)" rx="2" ry="2" />
<text  x="13.79" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (10 samples, 0.17%)</title><rect x="376.3" y="1957" width="2.0" height="15.0" fill="rgb(209,185,35)" rx="2" ry="2" />
<text  x="379.28" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="850.2" y="1957" width="0.2" height="15.0" fill="rgb(206,142,7)" rx="2" ry="2" />
<text  x="853.18" y="1967.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1189.6" y="1957" width="0.2" height="15.0" fill="rgb(229,76,3)" rx="2" ry="2" />
<text  x="1192.61" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (1 samples, 0.02%)</title><rect x="172.9" y="1925" width="0.2" height="15.0" fill="rgb(231,20,30)" rx="2" ry="2" />
<text  x="175.90" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (17 samples, 0.28%)</title><rect x="409.5" y="1957" width="3.3" height="15.0" fill="rgb(215,13,36)" rx="2" ry="2" />
<text  x="412.45" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="549" width="51.8" height="15.0" fill="rgb(235,8,15)" rx="2" ry="2" />
<text  x="73.42" y="559.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="538.2" y="2021" width="0.2" height="15.0" fill="rgb(212,81,4)" rx="2" ry="2" />
<text  x="541.20" y="2031.5" ></text>
</g>
<g >
<title>tcp_send_mss (18 samples, 0.30%)</title><rect x="313.9" y="1877" width="3.5" height="15.0" fill="rgb(208,15,8)" rx="2" ry="2" />
<text  x="316.89" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="357.9" y="1957" width="0.2" height="15.0" fill="rgb(209,0,22)" rx="2" ry="2" />
<text  x="360.92" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="445.2" y="1973" width="0.2" height="15.0" fill="rgb(243,108,33)" rx="2" ry="2" />
<text  x="448.19" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="914.0" y="1957" width="0.2" height="15.0" fill="rgb(229,132,2)" rx="2" ry="2" />
<text  x="916.96" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (5 samples, 0.08%)</title><rect x="434.3" y="1957" width="1.0" height="15.0" fill="rgb(212,11,27)" rx="2" ry="2" />
<text  x="437.33" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (4 samples, 0.07%)</title><rect x="633.2" y="2037" width="0.8" height="15.0" fill="rgb(231,187,50)" rx="2" ry="2" />
<text  x="636.17" y="2047.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="12.4" y="1973" width="1.0" height="15.0" fill="rgb(207,225,23)" rx="2" ry="2" />
<text  x="15.37" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="212.6" y="1973" width="0.2" height="15.0" fill="rgb(209,160,23)" rx="2" ry="2" />
<text  x="215.59" y="1983.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="294.5" y="1365" width="0.4" height="15.0" fill="rgb(225,112,45)" rx="2" ry="2" />
<text  x="297.53" y="1375.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="476.6" y="1973" width="0.8" height="15.0" fill="rgb(247,153,19)" rx="2" ry="2" />
<text  x="479.59" y="1983.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="1187.2" y="2021" width="0.2" height="15.0" fill="rgb(210,176,35)" rx="2" ry="2" />
<text  x="1190.24" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="133.2" y="1973" width="0.4" height="15.0" fill="rgb(237,36,44)" rx="2" ry="2" />
<text  x="136.21" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="113.5" y="37" width="0.2" height="15.0" fill="rgb(252,24,10)" rx="2" ry="2" />
<text  x="116.47" y="47.5" ></text>
</g>
<g >
<title>std::min&lt;long&gt; (3 samples, 0.05%)</title><rect x="407.3" y="1989" width="0.6" height="15.0" fill="rgb(237,74,41)" rx="2" ry="2" />
<text  x="410.28" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (9 samples, 0.15%)</title><rect x="718.3" y="1925" width="1.8" height="15.0" fill="rgb(235,157,26)" rx="2" ry="2" />
<text  x="721.28" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (5 samples, 0.08%)</title><rect x="765.1" y="1909" width="1.0" height="15.0" fill="rgb(216,87,37)" rx="2" ry="2" />
<text  x="768.07" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="538.0" y="1941" width="0.2" height="15.0" fill="rgb(218,186,10)" rx="2" ry="2" />
<text  x="541.00" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (5 samples, 0.08%)</title><rect x="754.8" y="1861" width="1.0" height="15.0" fill="rgb(248,190,0)" rx="2" ry="2" />
<text  x="757.81" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1717" width="51.8" height="15.0" fill="rgb(218,92,11)" rx="2" ry="2" />
<text  x="73.42" y="1727.5" >[unkn..</text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1047.4" y="1909" width="0.2" height="15.0" fill="rgb(210,63,30)" rx="2" ry="2" />
<text  x="1050.44" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::unshareOneSlow (2 samples, 0.03%)</title><rect x="97.1" y="37" width="0.4" height="15.0" fill="rgb(225,174,48)" rx="2" ry="2" />
<text  x="100.08" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.8" y="1893" width="0.2" height="15.0" fill="rgb(244,140,4)" rx="2" ry="2" />
<text  x="211.84" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (4 samples, 0.07%)</title><rect x="374.9" y="1941" width="0.8" height="15.0" fill="rgb(222,221,41)" rx="2" ry="2" />
<text  x="377.90" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="856.7" y="2021" width="0.2" height="15.0" fill="rgb(248,141,33)" rx="2" ry="2" />
<text  x="859.69" y="2031.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (45 samples, 0.75%)</title><rect x="293.7" y="1701" width="8.9" height="15.0" fill="rgb(235,66,6)" rx="2" ry="2" />
<text  x="296.74" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1050.4" y="1893" width="0.4" height="15.0" fill="rgb(251,23,36)" rx="2" ry="2" />
<text  x="1053.40" y="1903.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (14 samples, 0.23%)</title><rect x="902.1" y="1973" width="2.8" height="15.0" fill="rgb(228,147,3)" rx="2" ry="2" />
<text  x="905.11" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (33 samples, 0.55%)</title><rect x="200.2" y="2005" width="6.5" height="15.0" fill="rgb(221,47,54)" rx="2" ry="2" />
<text  x="203.15" y="2015.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="294.1" y="1461" width="0.2" height="15.0" fill="rgb(221,157,44)" rx="2" ry="2" />
<text  x="297.14" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1269" width="51.8" height="15.0" fill="rgb(206,223,2)" rx="2" ry="2" />
<text  x="73.42" y="1279.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (6 samples, 0.10%)</title><rect x="1146.2" y="2053" width="1.1" height="15.0" fill="rgb(213,183,39)" rx="2" ry="2" />
<text  x="1149.16" y="2063.5" ></text>
</g>
<g >
<title>lock_timer_base (3 samples, 0.05%)</title><rect x="313.1" y="1749" width="0.6" height="15.0" fill="rgb(225,155,5)" rx="2" ry="2" />
<text  x="316.10" y="1759.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="448.0" y="1989" width="0.2" height="15.0" fill="rgb(233,172,40)" rx="2" ry="2" />
<text  x="450.96" y="1999.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (30 samples, 0.50%)</title><rect x="329.3" y="1925" width="5.9" height="15.0" fill="rgb(224,127,30)" rx="2" ry="2" />
<text  x="332.29" y="1935.5" ></text>
</g>
<g >
<title>sock_rfree (11 samples, 0.18%)</title><rect x="1044.9" y="1877" width="2.1" height="15.0" fill="rgb(246,36,51)" rx="2" ry="2" />
<text  x="1047.87" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="856.5" y="1957" width="0.2" height="15.0" fill="rgb(232,25,5)" rx="2" ry="2" />
<text  x="859.50" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (6 samples, 0.10%)</title><rect x="675.4" y="1989" width="1.2" height="15.0" fill="rgb(240,174,31)" rx="2" ry="2" />
<text  x="678.43" y="1999.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1154.5" y="1941" width="0.2" height="15.0" fill="rgb(217,208,49)" rx="2" ry="2" />
<text  x="1157.46" y="1951.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="725.4" y="1861" width="0.8" height="15.0" fill="rgb(220,218,32)" rx="2" ry="2" />
<text  x="728.38" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="470.1" y="1973" width="0.2" height="15.0" fill="rgb(254,31,18)" rx="2" ry="2" />
<text  x="473.07" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13 samples, 0.22%)</title><rect x="910.0" y="1941" width="2.6" height="15.0" fill="rgb(213,173,5)" rx="2" ry="2" />
<text  x="913.01" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="263.5" y="1925" width="0.2" height="15.0" fill="rgb(243,218,13)" rx="2" ry="2" />
<text  x="266.53" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (36 samples, 0.60%)</title><rect x="621.1" y="2037" width="7.1" height="15.0" fill="rgb(218,121,19)" rx="2" ry="2" />
<text  x="624.13" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="772.2" y="1957" width="0.2" height="15.0" fill="rgb(243,190,4)" rx="2" ry="2" />
<text  x="775.18" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (261 samples, 4.37%)</title><rect x="70.4" y="133" width="51.6" height="15.0" fill="rgb(240,118,52)" rx="2" ry="2" />
<text  x="73.42" y="143.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (14 samples, 0.23%)</title><rect x="655.3" y="1989" width="2.8" height="15.0" fill="rgb(205,229,32)" rx="2" ry="2" />
<text  x="658.29" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="103.6" y="37" width="0.2" height="15.0" fill="rgb(233,157,3)" rx="2" ry="2" />
<text  x="106.59" y="47.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.13%)</title><rect x="10.8" y="1893" width="1.6" height="15.0" fill="rgb(213,73,51)" rx="2" ry="2" />
<text  x="13.79" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="441.2" y="1957" width="0.2" height="15.0" fill="rgb(227,143,36)" rx="2" ry="2" />
<text  x="444.24" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="385.6" y="1957" width="0.2" height="15.0" fill="rgb(243,73,47)" rx="2" ry="2" />
<text  x="388.56" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1124.6" y="1941" width="0.2" height="15.0" fill="rgb(216,142,37)" rx="2" ry="2" />
<text  x="1127.64" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;folly::RequestContext*&amp;&gt; (1 samples, 0.02%)</title><rect x="206.3" y="1925" width="0.2" height="15.0" fill="rgb(250,42,14)" rx="2" ry="2" />
<text  x="209.27" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="914.4" y="1941" width="0.5" height="15.0" fill="rgb(254,169,54)" rx="2" ry="2" />
<text  x="917.35" y="1951.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="957.0" y="1989" width="0.2" height="15.0" fill="rgb(230,61,41)" rx="2" ry="2" />
<text  x="960.00" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (6 samples, 0.10%)</title><rect x="635.1" y="2037" width="1.2" height="15.0" fill="rgb(210,31,29)" rx="2" ry="2" />
<text  x="638.15" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11 samples, 0.18%)</title><rect x="361.7" y="1957" width="2.1" height="15.0" fill="rgb(235,103,38)" rx="2" ry="2" />
<text  x="364.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (5 samples, 0.08%)</title><rect x="850.0" y="2005" width="1.0" height="15.0" fill="rgb(240,132,19)" rx="2" ry="2" />
<text  x="852.98" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="101.6" y="37" width="0.2" height="15.0" fill="rgb(250,179,28)" rx="2" ry="2" />
<text  x="104.62" y="47.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="29.7" y="1957" width="0.2" height="15.0" fill="rgb(234,209,9)" rx="2" ry="2" />
<text  x="32.75" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="148.2" y="1925" width="0.2" height="15.0" fill="rgb(231,9,8)" rx="2" ry="2" />
<text  x="151.22" y="1935.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1097.0" y="1749" width="0.2" height="15.0" fill="rgb(236,52,35)" rx="2" ry="2" />
<text  x="1100.00" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (4 samples, 0.07%)</title><rect x="166.2" y="1957" width="0.8" height="15.0" fill="rgb(205,212,10)" rx="2" ry="2" />
<text  x="169.19" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="775.1" y="1925" width="1.0" height="15.0" fill="rgb(218,226,30)" rx="2" ry="2" />
<text  x="778.14" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="761.1" y="1893" width="0.2" height="15.0" fill="rgb(236,104,4)" rx="2" ry="2" />
<text  x="764.12" y="1903.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="310.9" y="1797" width="0.2" height="15.0" fill="rgb(227,228,8)" rx="2" ry="2" />
<text  x="313.92" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (1 samples, 0.02%)</title><rect x="1118.3" y="2037" width="0.2" height="15.0" fill="rgb(235,180,1)" rx="2" ry="2" />
<text  x="1121.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (829 samples, 13.87%)</title><rect x="68.4" y="2037" width="163.7" height="15.0" fill="rgb(239,118,49)" rx="2" ry="2" />
<text  x="71.45" y="2047.5" >[unknown]</text>
</g>
<g >
<title>ep_send_events_proc (33 samples, 0.55%)</title><rect x="328.7" y="1941" width="6.5" height="15.0" fill="rgb(208,69,23)" rx="2" ry="2" />
<text  x="331.69" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="423.7" y="1909" width="0.2" height="15.0" fill="rgb(206,1,16)" rx="2" ry="2" />
<text  x="426.67" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="625.3" y="1909" width="0.2" height="15.0" fill="rgb(251,172,45)" rx="2" ry="2" />
<text  x="628.27" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (3 samples, 0.05%)</title><rect x="683.5" y="1989" width="0.6" height="15.0" fill="rgb(242,38,53)" rx="2" ry="2" />
<text  x="686.52" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (2 samples, 0.03%)</title><rect x="683.1" y="1989" width="0.4" height="15.0" fill="rgb(244,92,13)" rx="2" ry="2" />
<text  x="686.13" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="249.5" y="2021" width="1.2" height="15.0" fill="rgb(247,196,24)" rx="2" ry="2" />
<text  x="252.51" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="831.6" y="2005" width="0.2" height="15.0" fill="rgb(211,111,47)" rx="2" ry="2" />
<text  x="834.62" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="132.2" y="1973" width="0.2" height="15.0" fill="rgb(250,86,19)" rx="2" ry="2" />
<text  x="135.23" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1365" width="51.8" height="15.0" fill="rgb(208,180,11)" rx="2" ry="2" />
<text  x="73.42" y="1375.5" >[unkn..</text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (1 samples, 0.02%)</title><rect x="1124.8" y="1989" width="0.2" height="15.0" fill="rgb(216,95,46)" rx="2" ry="2" />
<text  x="1127.84" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (3 samples, 0.05%)</title><rect x="988.2" y="2037" width="0.6" height="15.0" fill="rgb(254,73,50)" rx="2" ry="2" />
<text  x="991.20" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (136 samples, 2.28%)</title><rect x="927.4" y="1925" width="26.8" height="15.0" fill="rgb(217,158,19)" rx="2" ry="2" />
<text  x="930.38" y="1935.5" >f..</text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="10.6" y="1845" width="0.2" height="15.0" fill="rgb(254,215,38)" rx="2" ry="2" />
<text  x="13.59" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (10 samples, 0.17%)</title><rect x="480.1" y="1973" width="2.0" height="15.0" fill="rgb(253,205,6)" rx="2" ry="2" />
<text  x="483.14" y="1983.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="206.3" y="1941" width="0.2" height="15.0" fill="rgb(228,153,0)" rx="2" ry="2" />
<text  x="209.27" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="626.9" y="1973" width="0.7" height="15.0" fill="rgb(234,53,3)" rx="2" ry="2" />
<text  x="629.85" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (5 samples, 0.08%)</title><rect x="674.4" y="2037" width="1.0" height="15.0" fill="rgb(241,190,13)" rx="2" ry="2" />
<text  x="677.44" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (3 samples, 0.05%)</title><rect x="98.1" y="37" width="0.6" height="15.0" fill="rgb(235,116,24)" rx="2" ry="2" />
<text  x="101.07" y="47.5" ></text>
</g>
<g >
<title>sys_futex (25 samples, 0.42%)</title><rect x="13.6" y="2005" width="4.9" height="15.0" fill="rgb(230,0,11)" rx="2" ry="2" />
<text  x="16.55" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="438.1" y="2005" width="0.4" height="15.0" fill="rgb(239,174,41)" rx="2" ry="2" />
<text  x="441.09" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="373.1" y="1957" width="0.2" height="15.0" fill="rgb(226,225,3)" rx="2" ry="2" />
<text  x="376.12" y="1967.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="688.7" y="1909" width="0.2" height="15.0" fill="rgb(244,145,25)" rx="2" ry="2" />
<text  x="691.66" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="130.1" y="1925" width="0.2" height="15.0" fill="rgb(221,110,42)" rx="2" ry="2" />
<text  x="133.05" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="761.3" y="1893" width="0.2" height="15.0" fill="rgb(242,155,25)" rx="2" ry="2" />
<text  x="764.32" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.35%)</title><rect x="628.2" y="2021" width="4.2" height="15.0" fill="rgb(235,6,38)" rx="2" ry="2" />
<text  x="631.24" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="265.3" y="1845" width="0.4" height="15.0" fill="rgb(240,192,8)" rx="2" ry="2" />
<text  x="268.31" y="1855.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="12.4" y="2053" width="1.2" height="15.0" fill="rgb(209,219,6)" rx="2" ry="2" />
<text  x="15.37" y="2063.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="470.1" y="1845" width="0.2" height="15.0" fill="rgb(227,13,1)" rx="2" ry="2" />
<text  x="473.07" y="1855.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1073.1" y="1893" width="0.2" height="15.0" fill="rgb(245,91,53)" rx="2" ry="2" />
<text  x="1076.11" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (107 samples, 1.79%)</title><rect x="70.4" y="53" width="21.1" height="15.0" fill="rgb(235,149,28)" rx="2" ry="2" />
<text  x="73.42" y="63.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="285.6" y="1845" width="0.2" height="15.0" fill="rgb(216,125,8)" rx="2" ry="2" />
<text  x="288.65" y="1855.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (11 samples, 0.18%)</title><rect x="1169.9" y="2021" width="2.1" height="15.0" fill="rgb(244,204,11)" rx="2" ry="2" />
<text  x="1172.86" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (151 samples, 2.53%)</title><rect x="484.7" y="1989" width="29.8" height="15.0" fill="rgb(235,126,10)" rx="2" ry="2" />
<text  x="487.69" y="1999.5" >fo..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1653" width="51.8" height="15.0" fill="rgb(222,120,23)" rx="2" ry="2" />
<text  x="73.42" y="1663.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (56 samples, 0.94%)</title><rect x="746.5" y="1893" width="11.1" height="15.0" fill="rgb(242,148,34)" rx="2" ry="2" />
<text  x="749.51" y="1903.5" ></text>
</g>
<g >
<title>std::integral_constant&lt;bool, false&gt;::operator bool (1 samples, 0.02%)</title><rect x="730.3" y="1877" width="0.2" height="15.0" fill="rgb(236,81,34)" rx="2" ry="2" />
<text  x="733.32" y="1887.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="961.9" y="1957" width="0.4" height="15.0" fill="rgb(229,16,2)" rx="2" ry="2" />
<text  x="964.94" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1509" width="51.8" height="15.0" fill="rgb(227,198,0)" rx="2" ry="2" />
<text  x="73.42" y="1519.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="677" width="51.8" height="15.0" fill="rgb(247,44,26)" rx="2" ry="2" />
<text  x="73.42" y="687.5" >[unkn..</text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="210.6" y="1925" width="0.2" height="15.0" fill="rgb(233,180,0)" rx="2" ry="2" />
<text  x="213.62" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="628.6" y="1989" width="0.6" height="15.0" fill="rgb(231,186,44)" rx="2" ry="2" />
<text  x="631.63" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="485.9" y="1973" width="0.2" height="15.0" fill="rgb(233,194,43)" rx="2" ry="2" />
<text  x="488.87" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (7 samples, 0.12%)</title><rect x="757.8" y="1893" width="1.3" height="15.0" fill="rgb(215,33,27)" rx="2" ry="2" />
<text  x="760.77" y="1903.5" ></text>
</g>
<g >
<title>nmi_restore (1 samples, 0.02%)</title><rect x="18.1" y="1829" width="0.2" height="15.0" fill="rgb(235,60,30)" rx="2" ry="2" />
<text  x="21.10" y="1839.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="639.9" y="1941" width="0.4" height="15.0" fill="rgb(248,52,6)" rx="2" ry="2" />
<text  x="642.89" y="1951.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1100.2" y="1957" width="0.4" height="15.0" fill="rgb(217,75,9)" rx="2" ry="2" />
<text  x="1103.16" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="448.0" y="2005" width="0.2" height="15.0" fill="rgb(231,65,49)" rx="2" ry="2" />
<text  x="450.96" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (6 samples, 0.10%)</title><rect x="415.4" y="1941" width="1.2" height="15.0" fill="rgb(241,123,5)" rx="2" ry="2" />
<text  x="418.38" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (3 samples, 0.05%)</title><rect x="499.3" y="1909" width="0.6" height="15.0" fill="rgb(253,71,0)" rx="2" ry="2" />
<text  x="502.30" y="1919.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="890.9" y="1909" width="0.2" height="15.0" fill="rgb(227,6,10)" rx="2" ry="2" />
<text  x="893.85" y="1919.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="320.2" y="1973" width="0.2" height="15.0" fill="rgb(221,4,5)" rx="2" ry="2" />
<text  x="323.20" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="171.3" y="1845" width="0.2" height="15.0" fill="rgb(210,177,25)" rx="2" ry="2" />
<text  x="174.32" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="992.1" y="2021" width="0.4" height="15.0" fill="rgb(205,140,15)" rx="2" ry="2" />
<text  x="995.15" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (4 samples, 0.07%)</title><rect x="507.6" y="1941" width="0.8" height="15.0" fill="rgb(205,67,51)" rx="2" ry="2" />
<text  x="510.59" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::release (2 samples, 0.03%)</title><rect x="581.4" y="1989" width="0.4" height="15.0" fill="rgb(222,190,38)" rx="2" ry="2" />
<text  x="584.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (1 samples, 0.02%)</title><rect x="562.7" y="1989" width="0.2" height="15.0" fill="rgb(229,186,17)" rx="2" ry="2" />
<text  x="565.68" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="354.4" y="1957" width="0.2" height="15.0" fill="rgb(212,177,17)" rx="2" ry="2" />
<text  x="357.36" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="205.9" y="1957" width="0.6" height="15.0" fill="rgb(236,1,18)" rx="2" ry="2" />
<text  x="208.88" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="901" width="51.8" height="15.0" fill="rgb(250,5,3)" rx="2" ry="2" />
<text  x="73.42" y="911.5" >[unkn..</text>
</g>
<g >
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="288.8" y="1813" width="0.2" height="15.0" fill="rgb(214,179,47)" rx="2" ry="2" />
<text  x="291.81" y="1823.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="282.5" y="1845" width="0.2" height="15.0" fill="rgb(254,61,39)" rx="2" ry="2" />
<text  x="285.49" y="1855.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="175.3" y="1909" width="0.2" height="15.0" fill="rgb(214,127,52)" rx="2" ry="2" />
<text  x="178.27" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="398.4" y="1989" width="0.2" height="15.0" fill="rgb(250,147,28)" rx="2" ry="2" />
<text  x="401.40" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="601.8" y="2005" width="0.4" height="15.0" fill="rgb(243,143,19)" rx="2" ry="2" />
<text  x="604.78" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (20 samples, 0.33%)</title><rect x="992.5" y="2037" width="4.0" height="15.0" fill="rgb(251,133,43)" rx="2" ry="2" />
<text  x="995.54" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (2 samples, 0.03%)</title><rect x="679.4" y="2005" width="0.4" height="15.0" fill="rgb(206,221,40)" rx="2" ry="2" />
<text  x="682.38" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (6 samples, 0.10%)</title><rect x="128.9" y="1925" width="1.2" height="15.0" fill="rgb(224,158,9)" rx="2" ry="2" />
<text  x="131.87" y="1935.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (61 samples, 1.02%)</title><rect x="56.4" y="2037" width="12.0" height="15.0" fill="rgb(218,212,48)" rx="2" ry="2" />
<text  x="59.40" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="471.7" y="1989" width="0.7" height="15.0" fill="rgb(241,136,0)" rx="2" ry="2" />
<text  x="474.65" y="1999.5" ></text>
</g>
<g >
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="261.8" y="1877" width="0.2" height="15.0" fill="rgb(206,39,0)" rx="2" ry="2" />
<text  x="264.76" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (36 samples, 0.60%)</title><rect x="519.8" y="1973" width="7.1" height="15.0" fill="rgb(236,118,29)" rx="2" ry="2" />
<text  x="522.83" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="163.4" y="1973" width="0.4" height="15.0" fill="rgb(230,14,7)" rx="2" ry="2" />
<text  x="166.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 0.55%)</title><rect x="417.7" y="2005" width="6.6" height="15.0" fill="rgb(250,197,33)" rx="2" ry="2" />
<text  x="420.75" y="2015.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="691.6" y="2005" width="0.4" height="15.0" fill="rgb(246,90,43)" rx="2" ry="2" />
<text  x="694.62" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="281.9" y="1813" width="0.4" height="15.0" fill="rgb(214,159,5)" rx="2" ry="2" />
<text  x="284.90" y="1823.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (7 samples, 0.12%)</title><rect x="312.3" y="1813" width="1.4" height="15.0" fill="rgb(243,191,23)" rx="2" ry="2" />
<text  x="315.31" y="1823.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.02%)</title><rect x="304.0" y="1685" width="0.2" height="15.0" fill="rgb(248,56,42)" rx="2" ry="2" />
<text  x="307.01" y="1695.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="118.2" y="37" width="0.4" height="15.0" fill="rgb(217,135,42)" rx="2" ry="2" />
<text  x="121.21" y="47.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="879.0" y="2005" width="0.4" height="15.0" fill="rgb(244,195,11)" rx="2" ry="2" />
<text  x="882.01" y="2015.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1047.8" y="1925" width="0.4" height="15.0" fill="rgb(246,10,14)" rx="2" ry="2" />
<text  x="1050.83" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (136 samples, 2.28%)</title><rect x="636.3" y="2005" width="26.9" height="15.0" fill="rgb(214,68,36)" rx="2" ry="2" />
<text  x="639.33" y="2015.5" >[..</text>
</g>
<g >
<title>netdev_pick_tx (4 samples, 0.07%)</title><rect x="303.8" y="1701" width="0.8" height="15.0" fill="rgb(238,222,54)" rx="2" ry="2" />
<text  x="306.82" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="191.9" y="1925" width="1.1" height="15.0" fill="rgb(241,78,5)" rx="2" ry="2" />
<text  x="194.86" y="1935.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="12.4" y="1941" width="0.8" height="15.0" fill="rgb(244,23,21)" rx="2" ry="2" />
<text  x="15.37" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (94 samples, 1.57%)</title><rect x="290.4" y="1797" width="18.5" height="15.0" fill="rgb(227,110,36)" rx="2" ry="2" />
<text  x="293.39" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="127.1" y="1957" width="0.2" height="15.0" fill="rgb(206,179,19)" rx="2" ry="2" />
<text  x="130.09" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (91 samples, 1.52%)</title><rect x="1079.4" y="1861" width="18.0" height="15.0" fill="rgb(232,78,46)" rx="2" ry="2" />
<text  x="1082.42" y="1871.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.13%)</title><rect x="10.8" y="1909" width="1.6" height="15.0" fill="rgb(208,171,11)" rx="2" ry="2" />
<text  x="13.79" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_free (21 samples, 0.35%)</title><rect x="1017.2" y="1893" width="4.2" height="15.0" fill="rgb(231,34,14)" rx="2" ry="2" />
<text  x="1020.23" y="1903.5" ></text>
</g>
<g >
<title>kfree_skbmem (10 samples, 0.17%)</title><rect x="1082.6" y="1493" width="2.0" height="15.0" fill="rgb(216,48,51)" rx="2" ry="2" />
<text  x="1085.58" y="1503.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;long, int&gt; (6 samples, 0.10%)</title><rect x="759.5" y="1893" width="1.2" height="15.0" fill="rgb(206,132,24)" rx="2" ry="2" />
<text  x="762.54" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1493" width="51.8" height="15.0" fill="rgb(216,95,32)" rx="2" ry="2" />
<text  x="73.42" y="1503.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="418.9" y="1877" width="0.2" height="15.0" fill="rgb(244,47,18)" rx="2" ry="2" />
<text  x="421.93" y="1887.5" ></text>
</g>
<g >
<title>__release_sock (34 samples, 0.57%)</title><rect x="1048.6" y="1909" width="6.7" height="15.0" fill="rgb(229,212,19)" rx="2" ry="2" />
<text  x="1051.62" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="849.6" y="1989" width="0.2" height="15.0" fill="rgb(253,57,0)" rx="2" ry="2" />
<text  x="852.59" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="626.1" y="1957" width="0.2" height="15.0" fill="rgb(214,93,23)" rx="2" ry="2" />
<text  x="629.06" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="12.6" y="1829" width="0.6" height="15.0" fill="rgb(217,113,21)" rx="2" ry="2" />
<text  x="15.57" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.8" y="1877" width="0.2" height="15.0" fill="rgb(208,70,42)" rx="2" ry="2" />
<text  x="211.84" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="871.9" y="2005" width="0.6" height="15.0" fill="rgb(227,215,5)" rx="2" ry="2" />
<text  x="874.90" y="2015.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="662.4" y="1989" width="0.6" height="15.0" fill="rgb(213,106,16)" rx="2" ry="2" />
<text  x="665.40" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (38 samples, 0.64%)</title><rect x="199.4" y="2021" width="7.5" height="15.0" fill="rgb(242,12,53)" rx="2" ry="2" />
<text  x="202.36" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (6 samples, 0.10%)</title><rect x="686.3" y="2037" width="1.2" height="15.0" fill="rgb(242,41,12)" rx="2" ry="2" />
<text  x="689.29" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (14 samples, 0.23%)</title><rect x="1139.1" y="1989" width="2.7" height="15.0" fill="rgb(218,205,32)" rx="2" ry="2" />
<text  x="1142.06" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1009.5" y="1941" width="0.2" height="15.0" fill="rgb(219,227,41)" rx="2" ry="2" />
<text  x="1012.52" y="1951.5" ></text>
</g>
<g >
<title>folly::uncaught_exceptions (1 samples, 0.02%)</title><rect x="757.6" y="1893" width="0.2" height="15.0" fill="rgb(215,11,38)" rx="2" ry="2" />
<text  x="760.57" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.54%)</title><rect x="849.4" y="2021" width="6.3" height="15.0" fill="rgb(236,122,2)" rx="2" ry="2" />
<text  x="852.39" y="2031.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1048.0" y="1893" width="0.2" height="15.0" fill="rgb(237,87,31)" rx="2" ry="2" />
<text  x="1051.03" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (5 samples, 0.08%)</title><rect x="155.7" y="1957" width="1.0" height="15.0" fill="rgb(206,168,38)" rx="2" ry="2" />
<text  x="158.72" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;facebook::memcache::McSetRequest::reply_type facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt;::checkAndRoute&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="630.0" y="2005" width="0.2" height="15.0" fill="rgb(206,113,39)" rx="2" ry="2" />
<text  x="633.01" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="779.5" y="1957" width="0.8" height="15.0" fill="rgb(250,185,30)" rx="2" ry="2" />
<text  x="782.49" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="626.5" y="1973" width="0.4" height="15.0" fill="rgb(238,59,38)" rx="2" ry="2" />
<text  x="629.46" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (6 samples, 0.10%)</title><rect x="550.6" y="2037" width="1.2" height="15.0" fill="rgb(244,72,20)" rx="2" ry="2" />
<text  x="553.64" y="2047.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.07%)</title><rect x="1136.1" y="1973" width="0.8" height="15.0" fill="rgb(214,148,25)" rx="2" ry="2" />
<text  x="1139.09" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (21 samples, 0.35%)</title><rect x="1088.1" y="1429" width="4.2" height="15.0" fill="rgb(214,4,48)" rx="2" ry="2" />
<text  x="1091.11" y="1439.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="470.7" y="2005" width="0.4" height="15.0" fill="rgb(229,49,54)" rx="2" ry="2" />
<text  x="473.67" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (128 samples, 2.14%)</title><rect x="787.0" y="1989" width="25.3" height="15.0" fill="rgb(235,147,6)" rx="2" ry="2" />
<text  x="789.99" y="1999.5" >f..</text>
</g>
<g >
<title>ep_poll (35 samples, 0.59%)</title><rect x="328.5" y="1973" width="6.9" height="15.0" fill="rgb(241,167,0)" rx="2" ry="2" />
<text  x="331.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (12 samples, 0.20%)</title><rect x="658.6" y="1989" width="2.4" height="15.0" fill="rgb(212,154,19)" rx="2" ry="2" />
<text  x="661.64" y="1999.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="1138.7" y="1957" width="0.2" height="15.0" fill="rgb(230,71,50)" rx="2" ry="2" />
<text  x="1141.66" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1061" width="51.8" height="15.0" fill="rgb(217,52,15)" rx="2" ry="2" />
<text  x="73.42" y="1071.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1941" width="51.8" height="15.0" fill="rgb(217,67,10)" rx="2" ry="2" />
<text  x="73.42" y="1951.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1143.8" y="2021" width="0.2" height="15.0" fill="rgb(209,88,32)" rx="2" ry="2" />
<text  x="1146.80" y="2031.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="600.4" y="1989" width="0.4" height="15.0" fill="rgb(207,115,22)" rx="2" ry="2" />
<text  x="603.39" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="509.8" y="1909" width="0.4" height="15.0" fill="rgb(238,5,50)" rx="2" ry="2" />
<text  x="512.76" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="294.1" y="1477" width="0.2" height="15.0" fill="rgb(252,12,11)" rx="2" ry="2" />
<text  x="297.14" y="1487.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="873.5" y="2005" width="0.6" height="15.0" fill="rgb(223,86,21)" rx="2" ry="2" />
<text  x="876.48" y="2015.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="323.0" y="2037" width="0.4" height="15.0" fill="rgb(215,57,11)" rx="2" ry="2" />
<text  x="325.97" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="687.3" y="2005" width="0.2" height="15.0" fill="rgb(249,203,29)" rx="2" ry="2" />
<text  x="690.28" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (2 samples, 0.03%)</title><rect x="564.1" y="1989" width="0.4" height="15.0" fill="rgb(218,180,30)" rx="2" ry="2" />
<text  x="567.06" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addString (3 samples, 0.05%)</title><rect x="185.5" y="2021" width="0.6" height="15.0" fill="rgb(217,121,51)" rx="2" ry="2" />
<text  x="188.54" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (194 samples, 3.25%)</title><rect x="70.4" y="69" width="38.3" height="15.0" fill="rgb(228,218,16)" rx="2" ry="2" />
<text  x="73.42" y="79.5" >[un..</text>
</g>
<g >
<title>[unknown] (20 samples, 0.33%)</title><rect x="992.5" y="2021" width="4.0" height="15.0" fill="rgb(223,148,50)" rx="2" ry="2" />
<text  x="995.54" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (22 samples, 0.37%)</title><rect x="592.3" y="1989" width="4.3" height="15.0" fill="rgb(207,188,50)" rx="2" ry="2" />
<text  x="595.30" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="219.5" y="2021" width="0.2" height="15.0" fill="rgb(237,204,6)" rx="2" ry="2" />
<text  x="222.50" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="420.3" y="1877" width="0.4" height="15.0" fill="rgb(219,219,47)" rx="2" ry="2" />
<text  x="423.31" y="1887.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="1187.4" y="2021" width="1.0" height="15.0" fill="rgb(210,27,20)" rx="2" ry="2" />
<text  x="1190.43" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="422.5" y="1845" width="0.2" height="15.0" fill="rgb(237,110,31)" rx="2" ry="2" />
<text  x="425.49" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="805" width="51.8" height="15.0" fill="rgb(251,128,7)" rx="2" ry="2" />
<text  x="73.42" y="815.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (2 samples, 0.03%)</title><rect x="97.1" y="53" width="0.4" height="15.0" fill="rgb(212,186,0)" rx="2" ry="2" />
<text  x="100.08" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash@plt (2 samples, 0.03%)</title><rect x="996.9" y="2037" width="0.4" height="15.0" fill="rgb(238,28,28)" rx="2" ry="2" />
<text  x="999.89" y="2047.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="183.2" y="2021" width="0.2" height="15.0" fill="rgb(222,16,18)" rx="2" ry="2" />
<text  x="186.17" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (79 samples, 1.32%)</title><rect x="704.5" y="1957" width="15.6" height="15.0" fill="rgb(232,96,25)" rx="2" ry="2" />
<text  x="707.45" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (17 samples, 0.28%)</title><rect x="189.9" y="1941" width="3.3" height="15.0" fill="rgb(238,36,7)" rx="2" ry="2" />
<text  x="192.88" y="1951.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (9 samples, 0.15%)</title><rect x="961.1" y="1989" width="1.8" height="15.0" fill="rgb(222,165,38)" rx="2" ry="2" />
<text  x="964.15" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_adaptor&lt;folly::BitIterator&lt;unsigned long*&gt;, unsigned long*, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt;::base_reference (2 samples, 0.03%)</title><rect x="384.8" y="1909" width="0.4" height="15.0" fill="rgb(233,161,8)" rx="2" ry="2" />
<text  x="387.77" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (6 samples, 0.10%)</title><rect x="1158.0" y="2053" width="1.2" height="15.0" fill="rgb(227,57,43)" rx="2" ry="2" />
<text  x="1161.01" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="186.3" y="2005" width="0.2" height="15.0" fill="rgb(229,134,3)" rx="2" ry="2" />
<text  x="189.33" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="777.9" y="1941" width="0.4" height="15.0" fill="rgb(209,105,11)" rx="2" ry="2" />
<text  x="780.91" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (22 samples, 0.37%)</title><rect x="675.4" y="2037" width="4.4" height="15.0" fill="rgb(241,89,26)" rx="2" ry="2" />
<text  x="678.43" y="2047.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (11 samples, 0.18%)</title><rect x="306.2" y="1685" width="2.2" height="15.0" fill="rgb(248,114,20)" rx="2" ry="2" />
<text  x="309.18" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (10 samples, 0.17%)</title><rect x="176.1" y="2005" width="1.9" height="15.0" fill="rgb(232,43,11)" rx="2" ry="2" />
<text  x="179.06" y="2015.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="313.7" y="1829" width="0.2" height="15.0" fill="rgb(247,117,13)" rx="2" ry="2" />
<text  x="316.69" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (4 samples, 0.07%)</title><rect x="156.7" y="1957" width="0.8" height="15.0" fill="rgb(221,25,32)" rx="2" ry="2" />
<text  x="159.71" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="210.2" y="1925" width="0.4" height="15.0" fill="rgb(205,158,52)" rx="2" ry="2" />
<text  x="213.22" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1093" width="51.8" height="15.0" fill="rgb(240,15,7)" rx="2" ry="2" />
<text  x="73.42" y="1103.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (33 samples, 0.55%)</title><rect x="1165.5" y="2037" width="6.5" height="15.0" fill="rgb(234,68,53)" rx="2" ry="2" />
<text  x="1168.52" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (14 samples, 0.23%)</title><rect x="477.4" y="1973" width="2.7" height="15.0" fill="rgb(232,53,46)" rx="2" ry="2" />
<text  x="480.38" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="674.4" y="2021" width="1.0" height="15.0" fill="rgb(253,207,19)" rx="2" ry="2" />
<text  x="677.44" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (44 samples, 0.74%)</title><rect x="293.9" y="1589" width="8.7" height="15.0" fill="rgb(214,198,6)" rx="2" ry="2" />
<text  x="296.94" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="711.8" y="1925" width="0.4" height="15.0" fill="rgb(225,9,21)" rx="2" ry="2" />
<text  x="714.76" y="1935.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="735.1" y="1909" width="0.2" height="15.0" fill="rgb(249,197,51)" rx="2" ry="2" />
<text  x="738.06" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="170.9" y="1909" width="0.2" height="15.0" fill="rgb(212,219,19)" rx="2" ry="2" />
<text  x="173.93" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="865.4" y="1973" width="0.4" height="15.0" fill="rgb(252,18,39)" rx="2" ry="2" />
<text  x="868.38" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="756.6" y="1877" width="0.4" height="15.0" fill="rgb(242,12,1)" rx="2" ry="2" />
<text  x="759.58" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1589" width="51.8" height="15.0" fill="rgb(238,127,38)" rx="2" ry="2" />
<text  x="73.42" y="1599.5" >[unkn..</text>
</g>
<g >
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="334.6" y="1893" width="0.6" height="15.0" fill="rgb(215,208,17)" rx="2" ry="2" />
<text  x="337.62" y="1903.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="268.9" y="1861" width="0.2" height="15.0" fill="rgb(234,216,37)" rx="2" ry="2" />
<text  x="271.87" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="679.8" y="2037" width="0.2" height="15.0" fill="rgb(253,42,15)" rx="2" ry="2" />
<text  x="682.77" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.2" y="1941" width="0.2" height="15.0" fill="rgb(226,80,12)" rx="2" ry="2" />
<text  x="211.25" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="402.7" y="1941" width="1.2" height="15.0" fill="rgb(229,146,44)" rx="2" ry="2" />
<text  x="405.74" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="445.8" y="1973" width="0.4" height="15.0" fill="rgb(241,111,40)" rx="2" ry="2" />
<text  x="448.79" y="1983.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="890.9" y="1925" width="0.2" height="15.0" fill="rgb(242,30,11)" rx="2" ry="2" />
<text  x="893.85" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.23%)</title><rect x="676.6" y="1989" width="2.8" height="15.0" fill="rgb(207,30,35)" rx="2" ry="2" />
<text  x="679.61" y="1999.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (4 samples, 0.07%)</title><rect x="453.1" y="2005" width="0.8" height="15.0" fill="rgb(239,166,45)" rx="2" ry="2" />
<text  x="456.09" y="2015.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (2 samples, 0.03%)</title><rect x="618.4" y="1909" width="0.4" height="15.0" fill="rgb(252,145,25)" rx="2" ry="2" />
<text  x="621.36" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="175.5" y="1909" width="0.2" height="15.0" fill="rgb(220,181,54)" rx="2" ry="2" />
<text  x="178.47" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (2 samples, 0.03%)</title><rect x="1148.5" y="2053" width="0.4" height="15.0" fill="rgb(246,192,10)" rx="2" ry="2" />
<text  x="1151.53" y="2063.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (5 samples, 0.08%)</title><rect x="90.6" y="37" width="0.9" height="15.0" fill="rgb(253,200,26)" rx="2" ry="2" />
<text  x="93.56" y="47.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (38 samples, 0.64%)</title><rect x="345.9" y="1989" width="7.5" height="15.0" fill="rgb(234,29,39)" rx="2" ry="2" />
<text  x="348.87" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="538.0" y="2005" width="0.2" height="15.0" fill="rgb(208,152,28)" rx="2" ry="2" />
<text  x="541.00" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="924.4" y="1909" width="0.2" height="15.0" fill="rgb(228,102,19)" rx="2" ry="2" />
<text  x="927.42" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="506.4" y="1909" width="0.2" height="15.0" fill="rgb(213,119,0)" rx="2" ry="2" />
<text  x="509.41" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="219.1" y="2021" width="0.2" height="15.0" fill="rgb(214,218,30)" rx="2" ry="2" />
<text  x="222.11" y="2031.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="335.2" y="1957" width="0.2" height="15.0" fill="rgb(234,82,54)" rx="2" ry="2" />
<text  x="338.21" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="624.7" y="1909" width="0.2" height="15.0" fill="rgb(222,211,3)" rx="2" ry="2" />
<text  x="627.68" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="853.3" y="1989" width="0.2" height="15.0" fill="rgb(227,38,3)" rx="2" ry="2" />
<text  x="856.34" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (11 samples, 0.18%)</title><rect x="902.7" y="1957" width="2.2" height="15.0" fill="rgb(251,48,37)" rx="2" ry="2" />
<text  x="905.70" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (4 samples, 0.07%)</title><rect x="78.5" y="37" width="0.8" height="15.0" fill="rgb(242,112,37)" rx="2" ry="2" />
<text  x="81.52" y="47.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="211.4" y="1893" width="0.4" height="15.0" fill="rgb(212,141,54)" rx="2" ry="2" />
<text  x="214.41" y="1903.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (15 samples, 0.25%)</title><rect x="349.2" y="1925" width="3.0" height="15.0" fill="rgb(254,99,21)" rx="2" ry="2" />
<text  x="352.23" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (20 samples, 0.33%)</title><rect x="459.0" y="2005" width="4.0" height="15.0" fill="rgb(246,53,5)" rx="2" ry="2" />
<text  x="462.02" y="2015.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="173.7" y="1893" width="0.2" height="15.0" fill="rgb(218,185,34)" rx="2" ry="2" />
<text  x="176.69" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="503.4" y="1925" width="0.2" height="15.0" fill="rgb(240,98,10)" rx="2" ry="2" />
<text  x="506.44" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (20 samples, 0.33%)</title><rect x="622.3" y="1989" width="4.0" height="15.0" fill="rgb(221,197,51)" rx="2" ry="2" />
<text  x="625.31" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="618.6" y="1877" width="0.2" height="15.0" fill="rgb(207,20,2)" rx="2" ry="2" />
<text  x="621.56" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (13 samples, 0.22%)</title><rect x="114.1" y="37" width="2.5" height="15.0" fill="rgb(231,117,1)" rx="2" ry="2" />
<text  x="117.06" y="47.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::BitIterator (3 samples, 0.05%)</title><rect x="388.1" y="1957" width="0.6" height="15.0" fill="rgb(222,39,2)" rx="2" ry="2" />
<text  x="391.13" y="1967.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="29.9" y="1957" width="0.2" height="15.0" fill="rgb(237,81,26)" rx="2" ry="2" />
<text  x="32.94" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="206.5" y="1989" width="0.2" height="15.0" fill="rgb(241,208,24)" rx="2" ry="2" />
<text  x="209.47" y="1999.5" ></text>
</g>
<g >
<title>strlen@plt (3 samples, 0.05%)</title><rect x="231.5" y="2021" width="0.6" height="15.0" fill="rgb(235,34,30)" rx="2" ry="2" />
<text  x="234.55" y="2031.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="423.1" y="1877" width="0.2" height="15.0" fill="rgb(250,219,0)" rx="2" ry="2" />
<text  x="426.08" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="470.3" y="2005" width="0.4" height="15.0" fill="rgb(246,97,52)" rx="2" ry="2" />
<text  x="473.27" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (3 samples, 0.05%)</title><rect x="552.2" y="2037" width="0.6" height="15.0" fill="rgb(254,143,15)" rx="2" ry="2" />
<text  x="555.22" y="2047.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1100.4" y="1925" width="0.2" height="15.0" fill="rgb(252,207,13)" rx="2" ry="2" />
<text  x="1103.35" y="1935.5" ></text>
</g>
<g >
<title>jump_fcontext (38 samples, 0.64%)</title><rect x="964.7" y="2005" width="7.5" height="15.0" fill="rgb(230,14,16)" rx="2" ry="2" />
<text  x="967.70" y="2015.5" ></text>
</g>
<g >
<title>std::max&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="413.4" y="2005" width="0.2" height="15.0" fill="rgb(243,179,23)" rx="2" ry="2" />
<text  x="416.40" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="193.6" y="1989" width="0.2" height="15.0" fill="rgb(214,108,47)" rx="2" ry="2" />
<text  x="196.63" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1138.7" y="1989" width="0.2" height="15.0" fill="rgb(205,111,50)" rx="2" ry="2" />
<text  x="1141.66" y="1999.5" ></text>
</g>
<g >
<title>sock_recvmsg (463 samples, 7.75%)</title><rect x="1009.1" y="1973" width="91.5" height="15.0" fill="rgb(247,153,38)" rx="2" ry="2" />
<text  x="1012.13" y="1983.5" >sock_recvmsg</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="27.8" y="1941" width="0.2" height="15.0" fill="rgb(246,7,37)" rx="2" ry="2" />
<text  x="30.77" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (1 samples, 0.02%)</title><rect x="208.6" y="1925" width="0.2" height="15.0" fill="rgb(253,67,27)" rx="2" ry="2" />
<text  x="211.64" y="1935.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="389.1" y="1957" width="0.2" height="15.0" fill="rgb(231,109,29)" rx="2" ry="2" />
<text  x="392.12" y="1967.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.08%)</title><rect x="230.4" y="2021" width="0.9" height="15.0" fill="rgb(206,117,54)" rx="2" ry="2" />
<text  x="233.36" y="2031.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="1137.7" y="1957" width="0.4" height="15.0" fill="rgb(208,33,13)" rx="2" ry="2" />
<text  x="1140.67" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (3 samples, 0.05%)</title><rect x="1126.2" y="2053" width="0.6" height="15.0" fill="rgb(205,216,34)" rx="2" ry="2" />
<text  x="1129.22" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="444.2" y="1941" width="0.2" height="15.0" fill="rgb(243,116,35)" rx="2" ry="2" />
<text  x="447.21" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="926.8" y="1925" width="0.6" height="15.0" fill="rgb(235,148,7)" rx="2" ry="2" />
<text  x="929.79" y="1935.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1095.6" y="1525" width="0.2" height="15.0" fill="rgb(234,172,43)" rx="2" ry="2" />
<text  x="1098.62" y="1535.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="122.6" y="1989" width="0.9" height="15.0" fill="rgb(249,189,30)" rx="2" ry="2" />
<text  x="125.55" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (21 samples, 0.35%)</title><rect x="1051.2" y="1893" width="4.1" height="15.0" fill="rgb(235,200,53)" rx="2" ry="2" />
<text  x="1054.19" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="171.3" y="1861" width="0.2" height="15.0" fill="rgb(235,210,12)" rx="2" ry="2" />
<text  x="174.32" y="1871.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (30 samples, 0.50%)</title><rect x="188.3" y="2005" width="5.9" height="15.0" fill="rgb(224,94,29)" rx="2" ry="2" />
<text  x="191.30" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="210.6" y="1893" width="0.2" height="15.0" fill="rgb(227,63,26)" rx="2" ry="2" />
<text  x="213.62" y="1903.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1021.2" y="1877" width="0.2" height="15.0" fill="rgb(213,98,17)" rx="2" ry="2" />
<text  x="1024.17" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="194.8" y="1989" width="0.2" height="15.0" fill="rgb(219,101,32)" rx="2" ry="2" />
<text  x="197.82" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (1 samples, 0.02%)</title><rect x="1125.6" y="2005" width="0.2" height="15.0" fill="rgb(242,179,15)" rx="2" ry="2" />
<text  x="1128.63" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="313.7" y="1797" width="0.2" height="15.0" fill="rgb(217,125,30)" rx="2" ry="2" />
<text  x="316.69" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="1146.0" y="2053" width="0.2" height="15.0" fill="rgb(247,59,3)" rx="2" ry="2" />
<text  x="1148.97" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (7 samples, 0.12%)</title><rect x="1144.6" y="2053" width="1.4" height="15.0" fill="rgb(207,33,47)" rx="2" ry="2" />
<text  x="1147.59" y="2063.5" ></text>
</g>
<g >
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="1079.6" y="1829" width="0.6" height="15.0" fill="rgb(221,44,48)" rx="2" ry="2" />
<text  x="1082.62" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (6 samples, 0.10%)</title><rect x="1144.8" y="2037" width="1.2" height="15.0" fill="rgb(213,21,27)" rx="2" ry="2" />
<text  x="1147.78" y="2047.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="393.3" y="1973" width="0.2" height="15.0" fill="rgb(212,84,44)" rx="2" ry="2" />
<text  x="396.26" y="1983.5" ></text>
</g>
<g >
<title>event_base_loop (1 samples, 0.02%)</title><rect x="1112.4" y="2053" width="0.2" height="15.0" fill="rgb(239,229,35)" rx="2" ry="2" />
<text  x="1115.40" y="2063.5" ></text>
</g>
<g >
<title>vfprintf (21 samples, 0.35%)</title><rect x="1107.9" y="2037" width="4.1" height="15.0" fill="rgb(229,184,17)" rx="2" ry="2" />
<text  x="1110.86" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="833.6" y="1989" width="0.8" height="15.0" fill="rgb(214,163,4)" rx="2" ry="2" />
<text  x="836.59" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="625.7" y="1925" width="0.2" height="15.0" fill="rgb(218,207,26)" rx="2" ry="2" />
<text  x="628.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="856.7" y="2005" width="0.2" height="15.0" fill="rgb(241,221,14)" rx="2" ry="2" />
<text  x="859.69" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="167.2" y="1973" width="0.2" height="15.0" fill="rgb(228,10,21)" rx="2" ry="2" />
<text  x="170.18" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (5 samples, 0.08%)</title><rect x="290.4" y="1765" width="1.0" height="15.0" fill="rgb(223,129,7)" rx="2" ry="2" />
<text  x="293.39" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (14 samples, 0.23%)</title><rect x="649.6" y="1973" width="2.7" height="15.0" fill="rgb(248,9,26)" rx="2" ry="2" />
<text  x="652.56" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (3 samples, 0.05%)</title><rect x="950.1" y="1893" width="0.6" height="15.0" fill="rgb(254,114,17)" rx="2" ry="2" />
<text  x="953.09" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="615.6" y="1925" width="0.2" height="15.0" fill="rgb(250,5,34)" rx="2" ry="2" />
<text  x="618.60" y="1935.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.15%)</title><rect x="10.6" y="1941" width="1.8" height="15.0" fill="rgb(210,220,9)" rx="2" ry="2" />
<text  x="13.59" y="1951.5" ></text>
</g>
<g >
<title>end_repeat_nmi (3 samples, 0.05%)</title><rect x="13.6" y="1829" width="0.5" height="15.0" fill="rgb(210,3,4)" rx="2" ry="2" />
<text  x="16.55" y="1839.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (4 samples, 0.07%)</title><rect x="317.8" y="1925" width="0.8" height="15.0" fill="rgb(237,153,25)" rx="2" ry="2" />
<text  x="320.83" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (9 samples, 0.15%)</title><rect x="396.6" y="1989" width="1.8" height="15.0" fill="rgb(209,127,5)" rx="2" ry="2" />
<text  x="399.62" y="1999.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="688.7" y="1877" width="0.2" height="15.0" fill="rgb(215,168,44)" rx="2" ry="2" />
<text  x="691.66" y="1887.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="262.9" y="1941" width="0.4" height="15.0" fill="rgb(211,214,17)" rx="2" ry="2" />
<text  x="265.94" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (5 samples, 0.08%)</title><rect x="1144.8" y="2005" width="1.0" height="15.0" fill="rgb(249,26,46)" rx="2" ry="2" />
<text  x="1147.78" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (20 samples, 0.33%)</title><rect x="419.3" y="1941" width="4.0" height="15.0" fill="rgb(215,18,31)" rx="2" ry="2" />
<text  x="422.33" y="1951.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="441.6" y="1957" width="0.4" height="15.0" fill="rgb(247,98,52)" rx="2" ry="2" />
<text  x="444.64" y="1967.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (5 samples, 0.08%)</title><rect x="352.2" y="1941" width="1.0" height="15.0" fill="rgb(227,68,8)" rx="2" ry="2" />
<text  x="355.19" y="1951.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="890.7" y="1989" width="0.2" height="15.0" fill="rgb(247,30,39)" rx="2" ry="2" />
<text  x="893.66" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="424.3" y="2021" width="0.2" height="15.0" fill="rgb(228,209,0)" rx="2" ry="2" />
<text  x="427.26" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="306.6" y="1653" width="0.2" height="15.0" fill="rgb(215,112,5)" rx="2" ry="2" />
<text  x="309.58" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="163.8" y="1973" width="0.6" height="15.0" fill="rgb(206,25,3)" rx="2" ry="2" />
<text  x="166.82" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (2 samples, 0.03%)</title><rect x="381.2" y="1973" width="0.4" height="15.0" fill="rgb(207,213,8)" rx="2" ry="2" />
<text  x="384.22" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="133.4" y="1941" width="0.2" height="15.0" fill="rgb(211,15,46)" rx="2" ry="2" />
<text  x="136.41" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="645" width="51.8" height="15.0" fill="rgb(242,124,45)" rx="2" ry="2" />
<text  x="73.42" y="655.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="854.7" y="2005" width="0.8" height="15.0" fill="rgb(226,154,29)" rx="2" ry="2" />
<text  x="857.72" y="2015.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (2 samples, 0.03%)</title><rect x="351.8" y="1893" width="0.4" height="15.0" fill="rgb(227,168,42)" rx="2" ry="2" />
<text  x="354.80" y="1903.5" ></text>
</g>
<g >
<title>mcrouter (5,933 samples, 99.28%)</title><rect x="18.5" y="2069" width="1171.5" height="15.0" fill="rgb(233,105,4)" rx="2" ry="2" />
<text  x="21.49" y="2079.5" >mcrouter</text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (2 samples, 0.03%)</title><rect x="953.8" y="1909" width="0.4" height="15.0" fill="rgb(252,25,33)" rx="2" ry="2" />
<text  x="956.84" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (12 samples, 0.20%)</title><rect x="842.5" y="1973" width="2.3" height="15.0" fill="rgb(244,91,47)" rx="2" ry="2" />
<text  x="845.48" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="174.9" y="1909" width="0.2" height="15.0" fill="rgb(246,165,52)" rx="2" ry="2" />
<text  x="177.88" y="1919.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="898.6" y="1957" width="0.2" height="15.0" fill="rgb(212,48,6)" rx="2" ry="2" />
<text  x="901.55" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (24 samples, 0.40%)</title><rect x="208.0" y="2021" width="4.8" height="15.0" fill="rgb(240,47,21)" rx="2" ry="2" />
<text  x="211.05" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="871.5" y="1957" width="0.4" height="15.0" fill="rgb(247,12,33)" rx="2" ry="2" />
<text  x="874.50" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (8 samples, 0.13%)</title><rect x="213.4" y="2021" width="1.6" height="15.0" fill="rgb(227,204,1)" rx="2" ry="2" />
<text  x="216.38" y="2031.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="354.4" y="1909" width="0.2" height="15.0" fill="rgb(241,79,54)" rx="2" ry="2" />
<text  x="357.36" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (21 samples, 0.35%)</title><rect x="304.6" y="1701" width="4.2" height="15.0" fill="rgb(205,208,52)" rx="2" ry="2" />
<text  x="307.61" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="171.3" y="1925" width="0.2" height="15.0" fill="rgb(214,176,39)" rx="2" ry="2" />
<text  x="174.32" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="294.1" y="1429" width="0.2" height="15.0" fill="rgb(231,109,46)" rx="2" ry="2" />
<text  x="297.14" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (3 samples, 0.05%)</title><rect x="450.7" y="2037" width="0.6" height="15.0" fill="rgb(219,121,36)" rx="2" ry="2" />
<text  x="453.72" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (27 samples, 0.45%)</title><rect x="706.8" y="1941" width="5.4" height="15.0" fill="rgb(219,17,25)" rx="2" ry="2" />
<text  x="709.82" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (2 samples, 0.03%)</title><rect x="872.7" y="2005" width="0.4" height="15.0" fill="rgb(232,53,35)" rx="2" ry="2" />
<text  x="875.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1077" width="51.8" height="15.0" fill="rgb(226,220,36)" rx="2" ry="2" />
<text  x="73.42" y="1087.5" >[unkn..</text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="10.4" y="2021" width="2.0" height="15.0" fill="rgb(206,209,19)" rx="2" ry="2" />
<text  x="13.39" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="440.7" y="1941" width="0.2" height="15.0" fill="rgb(223,104,25)" rx="2" ry="2" />
<text  x="443.65" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="638.1" y="1973" width="0.4" height="15.0" fill="rgb(235,124,8)" rx="2" ry="2" />
<text  x="641.11" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (10 samples, 0.17%)</title><rect x="501.5" y="1925" width="1.9" height="15.0" fill="rgb(220,210,51)" rx="2" ry="2" />
<text  x="504.47" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (59 samples, 0.99%)</title><rect x="1132.9" y="2037" width="11.7" height="15.0" fill="rgb(215,164,2)" rx="2" ry="2" />
<text  x="1135.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.54%)</title><rect x="636.3" y="1989" width="6.4" height="15.0" fill="rgb(215,178,36)" rx="2" ry="2" />
<text  x="639.33" y="1999.5" ></text>
</g>
<g >
<title>mod_timer (6 samples, 0.10%)</title><rect x="312.5" y="1765" width="1.2" height="15.0" fill="rgb(246,71,5)" rx="2" ry="2" />
<text  x="315.50" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="766.5" y="1941" width="0.4" height="15.0" fill="rgb(217,103,31)" rx="2" ry="2" />
<text  x="769.46" y="1951.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="470.1" y="1925" width="0.2" height="15.0" fill="rgb(228,181,28)" rx="2" ry="2" />
<text  x="473.07" y="1935.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (2 samples, 0.03%)</title><rect x="1084.2" y="1429" width="0.4" height="15.0" fill="rgb(250,8,31)" rx="2" ry="2" />
<text  x="1087.16" y="1439.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="581.2" y="1989" width="0.2" height="15.0" fill="rgb(209,90,17)" rx="2" ry="2" />
<text  x="584.24" y="1999.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="527.9" y="2005" width="0.6" height="15.0" fill="rgb(206,68,25)" rx="2" ry="2" />
<text  x="530.93" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="170.1" y="1941" width="0.2" height="15.0" fill="rgb(237,27,46)" rx="2" ry="2" />
<text  x="173.14" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1055.5" y="1893" width="0.4" height="15.0" fill="rgb(245,49,36)" rx="2" ry="2" />
<text  x="1058.53" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (58 samples, 0.97%)</title><rect x="643.8" y="1989" width="11.5" height="15.0" fill="rgb(218,196,25)" rx="2" ry="2" />
<text  x="646.84" y="1999.5" ></text>
</g>
<g >
<title>copyin (3 samples, 0.05%)</title><rect x="279.7" y="1877" width="0.6" height="15.0" fill="rgb(248,136,43)" rx="2" ry="2" />
<text  x="282.73" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.13%)</title><rect x="10.8" y="1877" width="1.6" height="15.0" fill="rgb(238,209,22)" rx="2" ry="2" />
<text  x="13.79" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (7 samples, 0.12%)</title><rect x="1154.7" y="2053" width="1.3" height="15.0" fill="rgb(233,72,9)" rx="2" ry="2" />
<text  x="1157.66" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="341" width="51.8" height="15.0" fill="rgb(245,214,11)" rx="2" ry="2" />
<text  x="73.42" y="351.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="637.7" y="1973" width="0.4" height="15.0" fill="rgb(218,82,44)" rx="2" ry="2" />
<text  x="640.71" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="180.2" y="2005" width="0.2" height="15.0" fill="rgb(250,13,32)" rx="2" ry="2" />
<text  x="183.21" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (141 samples, 2.36%)</title><rect x="486.7" y="1973" width="27.8" height="15.0" fill="rgb(230,211,39)" rx="2" ry="2" />
<text  x="489.66" y="1983.5" >f..</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="849.4" y="1989" width="0.2" height="15.0" fill="rgb(234,52,47)" rx="2" ry="2" />
<text  x="852.39" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="746.3" y="1893" width="0.2" height="15.0" fill="rgb(229,82,27)" rx="2" ry="2" />
<text  x="749.32" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (12 samples, 0.20%)</title><rect x="455.7" y="2005" width="2.3" height="15.0" fill="rgb(228,136,0)" rx="2" ry="2" />
<text  x="458.66" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (7 samples, 0.12%)</title><rect x="579.9" y="1973" width="1.3" height="15.0" fill="rgb(213,166,24)" rx="2" ry="2" />
<text  x="582.86" y="1983.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="599.0" y="1989" width="1.2" height="15.0" fill="rgb(205,86,28)" rx="2" ry="2" />
<text  x="602.01" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 0.15%)</title><rect x="10.6" y="1957" width="1.8" height="15.0" fill="rgb(243,213,33)" rx="2" ry="2" />
<text  x="13.59" y="1967.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (5 samples, 0.08%)</title><rect x="385.8" y="1973" width="0.9" height="15.0" fill="rgb(213,61,20)" rx="2" ry="2" />
<text  x="388.76" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (11 samples, 0.18%)</title><rect x="420.7" y="1893" width="2.2" height="15.0" fill="rgb(246,209,33)" rx="2" ry="2" />
<text  x="423.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1445" width="51.8" height="15.0" fill="rgb(245,126,22)" rx="2" ry="2" />
<text  x="73.42" y="1455.5" >[unkn..</text>
</g>
<g >
<title>sock_sendmsg (282 samples, 4.72%)</title><rect x="263.3" y="1941" width="55.7" height="15.0" fill="rgb(223,226,47)" rx="2" ry="2" />
<text  x="266.34" y="1951.5" >sock_..</text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (16 samples, 0.27%)</title><rect x="938.2" y="1909" width="3.2" height="15.0" fill="rgb(228,183,36)" rx="2" ry="2" />
<text  x="941.24" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (34 samples, 0.57%)</title><rect x="187.7" y="2021" width="6.7" height="15.0" fill="rgb(210,21,44)" rx="2" ry="2" />
<text  x="190.71" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (154 samples, 2.58%)</title><rect x="452.9" y="2037" width="30.4" height="15.0" fill="rgb(221,169,12)" rx="2" ry="2" />
<text  x="455.89" y="2047.5" >fa..</text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="859.1" y="2005" width="0.2" height="15.0" fill="rgb(249,80,53)" rx="2" ry="2" />
<text  x="862.06" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="495.3" y="1941" width="0.4" height="15.0" fill="rgb(213,37,3)" rx="2" ry="2" />
<text  x="498.35" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (2 samples, 0.03%)</title><rect x="709.6" y="1909" width="0.4" height="15.0" fill="rgb(221,202,27)" rx="2" ry="2" />
<text  x="712.59" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.13%)</title><rect x="119.6" y="37" width="1.6" height="15.0" fill="rgb(215,72,29)" rx="2" ry="2" />
<text  x="122.59" y="47.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (38 samples, 0.64%)</title><rect x="294.9" y="1477" width="7.5" height="15.0" fill="rgb(254,51,22)" rx="2" ry="2" />
<text  x="297.93" y="1487.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (10 samples, 0.17%)</title><rect x="1167.9" y="2021" width="2.0" height="15.0" fill="rgb(228,84,37)" rx="2" ry="2" />
<text  x="1170.88" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="638.9" y="1957" width="2.4" height="15.0" fill="rgb(216,176,31)" rx="2" ry="2" />
<text  x="641.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (4,774 samples, 79.89%)</title><rect x="55.8" y="2053" width="942.7" height="15.0" fill="rgb(244,180,23)" rx="2" ry="2" />
<text  x="58.81" y="2063.5" >[unknown]</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="495.0" y="1941" width="0.3" height="15.0" fill="rgb(219,145,48)" rx="2" ry="2" />
<text  x="497.95" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="151.6" y="1941" width="0.6" height="15.0" fill="rgb(236,202,24)" rx="2" ry="2" />
<text  x="154.58" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (5 samples, 0.08%)</title><rect x="117.2" y="37" width="1.0" height="15.0" fill="rgb(241,122,51)" rx="2" ry="2" />
<text  x="120.22" y="47.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="308.8" y="1765" width="0.1" height="15.0" fill="rgb(235,159,41)" rx="2" ry="2" />
<text  x="311.75" y="1775.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="132.4" y="1973" width="0.4" height="15.0" fill="rgb(211,69,28)" rx="2" ry="2" />
<text  x="135.42" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="26.4" y="1925" width="0.2" height="15.0" fill="rgb(225,133,35)" rx="2" ry="2" />
<text  x="29.39" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (5 samples, 0.08%)</title><rect x="945.4" y="1877" width="0.9" height="15.0" fill="rgb(215,212,11)" rx="2" ry="2" />
<text  x="948.35" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (20 samples, 0.33%)</title><rect x="171.1" y="1941" width="4.0" height="15.0" fill="rgb(250,80,2)" rx="2" ry="2" />
<text  x="174.12" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (2 samples, 0.03%)</title><rect x="25.0" y="1973" width="0.4" height="15.0" fill="rgb(221,113,38)" rx="2" ry="2" />
<text  x="28.01" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (3 samples, 0.05%)</title><rect x="77.9" y="37" width="0.6" height="15.0" fill="rgb(220,176,24)" rx="2" ry="2" />
<text  x="80.93" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (1 samples, 0.02%)</title><rect x="621.5" y="1989" width="0.2" height="15.0" fill="rgb(209,132,36)" rx="2" ry="2" />
<text  x="624.52" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (5 samples, 0.08%)</title><rect x="510.2" y="1925" width="0.9" height="15.0" fill="rgb(248,109,51)" rx="2" ry="2" />
<text  x="513.16" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_active_ (2 samples, 0.03%)</title><rect x="1113.2" y="2053" width="0.4" height="15.0" fill="rgb(213,143,33)" rx="2" ry="2" />
<text  x="1116.19" y="2063.5" ></text>
</g>
<g >
<title>llist_add_batch (1 samples, 0.02%)</title><rect x="294.5" y="1349" width="0.2" height="15.0" fill="rgb(207,183,19)" rx="2" ry="2" />
<text  x="297.53" y="1359.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="202.3" y="1957" width="0.2" height="15.0" fill="rgb(254,45,33)" rx="2" ry="2" />
<text  x="205.32" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::FiberImpl*, folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="756.2" y="1877" width="0.4" height="15.0" fill="rgb(213,72,42)" rx="2" ry="2" />
<text  x="759.19" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (12 samples, 0.20%)</title><rect x="764.1" y="1941" width="2.4" height="15.0" fill="rgb(228,97,46)" rx="2" ry="2" />
<text  x="767.09" y="1951.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="422.3" y="1845" width="0.2" height="15.0" fill="rgb(254,160,37)" rx="2" ry="2" />
<text  x="425.29" y="1855.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="515.3" y="1973" width="0.2" height="15.0" fill="rgb(235,70,35)" rx="2" ry="2" />
<text  x="518.29" y="1983.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="12.4" y="1893" width="0.8" height="15.0" fill="rgb(225,168,50)" rx="2" ry="2" />
<text  x="15.37" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (14 samples, 0.23%)</title><rect x="148.8" y="1941" width="2.8" height="15.0" fill="rgb(252,44,42)" rx="2" ry="2" />
<text  x="151.81" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="690.0" y="2005" width="1.2" height="15.0" fill="rgb(242,65,30)" rx="2" ry="2" />
<text  x="693.04" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (50 samples, 0.84%)</title><rect x="609.1" y="1973" width="9.9" height="15.0" fill="rgb(253,76,3)" rx="2" ry="2" />
<text  x="612.08" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (1 samples, 0.02%)</title><rect x="446.6" y="1957" width="0.2" height="15.0" fill="rgb(221,76,39)" rx="2" ry="2" />
<text  x="449.58" y="1967.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="293.5" y="1733" width="0.2" height="15.0" fill="rgb(205,225,40)" rx="2" ry="2" />
<text  x="296.55" y="1743.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="890.9" y="1957" width="0.2" height="15.0" fill="rgb(215,58,40)" rx="2" ry="2" />
<text  x="893.85" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (2 samples, 0.03%)</title><rect x="118.6" y="53" width="0.4" height="15.0" fill="rgb(223,226,36)" rx="2" ry="2" />
<text  x="121.60" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.42%)</title><rect x="13.6" y="2037" width="4.9" height="15.0" fill="rgb(244,77,14)" rx="2" ry="2" />
<text  x="16.55" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (7 samples, 0.12%)</title><rect x="440.1" y="1989" width="1.3" height="15.0" fill="rgb(208,103,26)" rx="2" ry="2" />
<text  x="443.06" y="1999.5" ></text>
</g>
<g >
<title>cpu_load_update_active (1 samples, 0.02%)</title><rect x="1189.6" y="1909" width="0.2" height="15.0" fill="rgb(254,35,24)" rx="2" ry="2" />
<text  x="1192.61" y="1919.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="12.4" y="1989" width="1.0" height="15.0" fill="rgb(219,123,48)" rx="2" ry="2" />
<text  x="15.37" y="1999.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="617.6" y="1925" width="0.6" height="15.0" fill="rgb(234,36,45)" rx="2" ry="2" />
<text  x="620.57" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="725.4" y="1765" width="0.8" height="15.0" fill="rgb(211,88,24)" rx="2" ry="2" />
<text  x="728.38" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (14 samples, 0.23%)</title><rect x="638.5" y="1973" width="2.8" height="15.0" fill="rgb(222,14,39)" rx="2" ry="2" />
<text  x="641.50" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (2 samples, 0.03%)</title><rect x="443.2" y="1925" width="0.4" height="15.0" fill="rgb(251,214,27)" rx="2" ry="2" />
<text  x="446.22" y="1935.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="284.9" y="1861" width="0.2" height="15.0" fill="rgb(247,196,12)" rx="2" ry="2" />
<text  x="287.86" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (6 samples, 0.10%)</title><rect x="613.8" y="1925" width="1.2" height="15.0" fill="rgb(244,52,15)" rx="2" ry="2" />
<text  x="616.82" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="688.7" y="1941" width="0.2" height="15.0" fill="rgb(239,166,18)" rx="2" ry="2" />
<text  x="691.66" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="281.9" y="1797" width="0.2" height="15.0" fill="rgb(208,91,5)" rx="2" ry="2" />
<text  x="284.90" y="1807.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="725.4" y="1877" width="0.8" height="15.0" fill="rgb(249,91,30)" rx="2" ry="2" />
<text  x="728.38" y="1887.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.08%)</title><rect x="319.2" y="1941" width="1.0" height="15.0" fill="rgb(216,146,30)" rx="2" ry="2" />
<text  x="322.22" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (4 samples, 0.07%)</title><rect x="206.9" y="2021" width="0.8" height="15.0" fill="rgb(237,199,7)" rx="2" ry="2" />
<text  x="209.86" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (53 samples, 0.89%)</title><rect x="834.4" y="1989" width="10.4" height="15.0" fill="rgb(221,9,4)" rx="2" ry="2" />
<text  x="837.38" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="96.3" y="37" width="0.6" height="15.0" fill="rgb(218,149,11)" rx="2" ry="2" />
<text  x="99.29" y="47.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="165.8" y="1925" width="0.4" height="15.0" fill="rgb(239,54,14)" rx="2" ry="2" />
<text  x="168.79" y="1935.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (5 samples, 0.08%)</title><rect x="972.4" y="2037" width="1.0" height="15.0" fill="rgb(217,203,54)" rx="2" ry="2" />
<text  x="975.40" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (15 samples, 0.25%)</title><rect x="879.4" y="2005" width="3.0" height="15.0" fill="rgb(206,72,5)" rx="2" ry="2" />
<text  x="882.40" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.02%)</title><rect x="419.1" y="1893" width="0.2" height="15.0" fill="rgb(233,133,18)" rx="2" ry="2" />
<text  x="422.13" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (13 samples, 0.22%)</title><rect x="898.9" y="1973" width="2.6" height="15.0" fill="rgb(247,12,37)" rx="2" ry="2" />
<text  x="901.95" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (1 samples, 0.02%)</title><rect x="549.3" y="2037" width="0.2" height="15.0" fill="rgb(213,22,30)" rx="2" ry="2" />
<text  x="552.25" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (3 samples, 0.05%)</title><rect x="425.6" y="2005" width="0.6" height="15.0" fill="rgb(233,120,33)" rx="2" ry="2" />
<text  x="428.65" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (399 samples, 6.68%)</title><rect x="337.8" y="2021" width="78.8" height="15.0" fill="rgb(208,88,9)" rx="2" ry="2" />
<text  x="340.78" y="2031.5" >folly::fi..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (8 samples, 0.13%)</title><rect x="989.2" y="2037" width="1.6" height="15.0" fill="rgb(247,67,15)" rx="2" ry="2" />
<text  x="992.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="597" width="51.8" height="15.0" fill="rgb(230,34,2)" rx="2" ry="2" />
<text  x="73.42" y="607.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="686.9" y="1989" width="0.4" height="15.0" fill="rgb(254,71,14)" rx="2" ry="2" />
<text  x="689.88" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="538.0" y="1957" width="0.2" height="15.0" fill="rgb(239,90,49)" rx="2" ry="2" />
<text  x="541.00" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1973" width="51.8" height="15.0" fill="rgb(244,51,45)" rx="2" ry="2" />
<text  x="73.42" y="1983.5" >[unkn..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="292.0" y="1749" width="0.2" height="15.0" fill="rgb(211,89,34)" rx="2" ry="2" />
<text  x="294.97" y="1759.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="294.1" y="1493" width="0.2" height="15.0" fill="rgb(208,217,26)" rx="2" ry="2" />
<text  x="297.14" y="1503.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="725.4" y="1829" width="0.8" height="15.0" fill="rgb(234,187,26)" rx="2" ry="2" />
<text  x="728.38" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="612.2" y="1909" width="0.2" height="15.0" fill="rgb(218,58,51)" rx="2" ry="2" />
<text  x="615.24" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (3 samples, 0.05%)</title><rect x="619.4" y="2005" width="0.5" height="15.0" fill="rgb(242,23,43)" rx="2" ry="2" />
<text  x="622.35" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (13 samples, 0.22%)</title><rect x="1136.1" y="1989" width="2.6" height="15.0" fill="rgb(240,106,12)" rx="2" ry="2" />
<text  x="1139.09" y="1999.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="725.4" y="1845" width="0.8" height="15.0" fill="rgb(241,89,41)" rx="2" ry="2" />
<text  x="728.38" y="1855.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="890.9" y="1861" width="0.2" height="15.0" fill="rgb(252,18,12)" rx="2" ry="2" />
<text  x="893.85" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="725.6" y="1749" width="0.6" height="15.0" fill="rgb(209,122,49)" rx="2" ry="2" />
<text  x="728.58" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1477" width="51.8" height="15.0" fill="rgb(233,49,7)" rx="2" ry="2" />
<text  x="73.42" y="1487.5" >[unkn..</text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="597.6" y="1989" width="1.0" height="15.0" fill="rgb(235,53,36)" rx="2" ry="2" />
<text  x="600.63" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (14 samples, 0.23%)</title><rect x="692.6" y="1989" width="2.8" height="15.0" fill="rgb(222,84,43)" rx="2" ry="2" />
<text  x="695.61" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (6 samples, 0.10%)</title><rect x="541.2" y="2005" width="1.1" height="15.0" fill="rgb(238,165,20)" rx="2" ry="2" />
<text  x="544.16" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;folly::IOBuf&gt;&gt; (1 samples, 0.02%)</title><rect x="618.2" y="1909" width="0.2" height="15.0" fill="rgb(216,121,44)" rx="2" ry="2" />
<text  x="621.17" y="1919.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="249.1" y="2037" width="0.2" height="15.0" fill="rgb(224,123,23)" rx="2" ry="2" />
<text  x="252.12" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (1 samples, 0.02%)</title><rect x="101.8" y="37" width="0.2" height="15.0" fill="rgb(250,167,12)" rx="2" ry="2" />
<text  x="104.82" y="47.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="10.6" y="1877" width="0.2" height="15.0" fill="rgb(208,171,8)" rx="2" ry="2" />
<text  x="13.59" y="1887.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="470.1" y="1909" width="0.2" height="15.0" fill="rgb(246,170,39)" rx="2" ry="2" />
<text  x="473.07" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="725.4" y="1749" width="0.2" height="15.0" fill="rgb(208,183,3)" rx="2" ry="2" />
<text  x="728.38" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="624.9" y="1925" width="0.2" height="15.0" fill="rgb(232,81,20)" rx="2" ry="2" />
<text  x="627.88" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="658.4" y="1989" width="0.2" height="15.0" fill="rgb(214,175,17)" rx="2" ry="2" />
<text  x="661.45" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="482.3" y="1989" width="1.0" height="15.0" fill="rgb(206,76,50)" rx="2" ry="2" />
<text  x="485.32" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (8 samples, 0.13%)</title><rect x="102.0" y="37" width="1.6" height="15.0" fill="rgb(233,130,37)" rx="2" ry="2" />
<text  x="105.01" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="712.7" y="1909" width="0.4" height="15.0" fill="rgb(205,87,5)" rx="2" ry="2" />
<text  x="715.75" y="1919.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="515.3" y="1957" width="0.2" height="15.0" fill="rgb(251,163,36)" rx="2" ry="2" />
<text  x="518.29" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="448.0" y="1957" width="0.2" height="15.0" fill="rgb(223,21,20)" rx="2" ry="2" />
<text  x="450.96" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (7 samples, 0.12%)</title><rect x="891.4" y="1989" width="1.4" height="15.0" fill="rgb(245,158,31)" rx="2" ry="2" />
<text  x="894.45" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (3 samples, 0.05%)</title><rect x="436.3" y="2005" width="0.6" height="15.0" fill="rgb(233,68,21)" rx="2" ry="2" />
<text  x="439.31" y="2015.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="287.6" y="1829" width="0.2" height="15.0" fill="rgb(248,180,5)" rx="2" ry="2" />
<text  x="290.62" y="1839.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImpl&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="175.3" y="1925" width="0.2" height="15.0" fill="rgb(239,217,22)" rx="2" ry="2" />
<text  x="178.27" y="1935.5" ></text>
</g>
<g >
<title>__libc_recv (532 samples, 8.90%)</title><rect x="1000.2" y="2053" width="105.1" height="15.0" fill="rgb(222,93,23)" rx="2" ry="2" />
<text  x="1003.24" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="403.5" y="1909" width="0.2" height="15.0" fill="rgb(222,129,24)" rx="2" ry="2" />
<text  x="406.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="661" width="51.8" height="15.0" fill="rgb(245,25,3)" rx="2" ry="2" />
<text  x="73.42" y="671.5" >[unkn..</text>
</g>
<g >
<title>ip_finish_output (86 samples, 1.44%)</title><rect x="1080.2" y="1813" width="17.0" height="15.0" fill="rgb(232,121,0)" rx="2" ry="2" />
<text  x="1083.21" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1253" width="51.8" height="15.0" fill="rgb(245,0,46)" rx="2" ry="2" />
<text  x="73.42" y="1263.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.08%)</title><rect x="171.9" y="1909" width="1.0" height="15.0" fill="rgb(244,210,41)" rx="2" ry="2" />
<text  x="174.91" y="1919.5" ></text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.07%)</title><rect x="423.3" y="1941" width="0.8" height="15.0" fill="rgb(209,206,9)" rx="2" ry="2" />
<text  x="426.28" y="1951.5" ></text>
</g>
<g >
<title>all (5,976 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(252,105,1)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1144.8" y="1989" width="0.2" height="15.0" fill="rgb(250,173,25)" rx="2" ry="2" />
<text  x="1147.78" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (2 samples, 0.03%)</title><rect x="717.9" y="1909" width="0.4" height="15.0" fill="rgb(254,102,26)" rx="2" ry="2" />
<text  x="720.88" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="483.1" y="1957" width="0.2" height="15.0" fill="rgb(214,118,17)" rx="2" ry="2" />
<text  x="486.11" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (10 samples, 0.17%)</title><rect x="433.3" y="1973" width="2.0" height="15.0" fill="rgb(220,60,31)" rx="2" ry="2" />
<text  x="436.35" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="519.6" y="1973" width="0.2" height="15.0" fill="rgb(244,71,32)" rx="2" ry="2" />
<text  x="522.64" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="855.1" y="1973" width="0.4" height="15.0" fill="rgb(250,115,44)" rx="2" ry="2" />
<text  x="858.11" y="1983.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="193.8" y="1989" width="0.4" height="15.0" fill="rgb(254,78,17)" rx="2" ry="2" />
<text  x="196.83" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="444.0" y="1941" width="0.2" height="15.0" fill="rgb(228,183,12)" rx="2" ry="2" />
<text  x="447.01" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_head (4 samples, 0.07%)</title><rect x="415.8" y="1925" width="0.8" height="15.0" fill="rgb(219,80,43)" rx="2" ry="2" />
<text  x="418.77" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="111.9" y="53" width="1.8" height="15.0" fill="rgb(242,214,8)" rx="2" ry="2" />
<text  x="114.89" y="63.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="514.5" y="1989" width="0.4" height="15.0" fill="rgb(248,100,2)" rx="2" ry="2" />
<text  x="517.50" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1048.0" y="1909" width="0.2" height="15.0" fill="rgb(216,168,18)" rx="2" ry="2" />
<text  x="1051.03" y="1919.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (2 samples, 0.03%)</title><rect x="1091.9" y="1413" width="0.4" height="15.0" fill="rgb(253,204,36)" rx="2" ry="2" />
<text  x="1094.86" y="1423.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (13 samples, 0.22%)</title><rect x="768.6" y="1973" width="2.6" height="15.0" fill="rgb(217,75,1)" rx="2" ry="2" />
<text  x="771.63" y="1983.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="316.6" y="1845" width="0.2" height="15.0" fill="rgb(243,46,38)" rx="2" ry="2" />
<text  x="319.65" y="1855.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1096.8" y="1781" width="0.4" height="15.0" fill="rgb(232,75,18)" rx="2" ry="2" />
<text  x="1099.80" y="1791.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (3 samples, 0.05%)</title><rect x="119.0" y="69" width="0.6" height="15.0" fill="rgb(227,89,12)" rx="2" ry="2" />
<text  x="122.00" y="79.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="229.8" y="2021" width="0.4" height="15.0" fill="rgb(207,146,32)" rx="2" ry="2" />
<text  x="232.77" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (3 samples, 0.05%)</title><rect x="486.1" y="1973" width="0.6" height="15.0" fill="rgb(246,66,31)" rx="2" ry="2" />
<text  x="489.07" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="396.4" y="1989" width="0.2" height="15.0" fill="rgb(206,59,21)" rx="2" ry="2" />
<text  x="399.42" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="404.9" y="1973" width="0.2" height="15.0" fill="rgb(220,184,16)" rx="2" ry="2" />
<text  x="407.91" y="1983.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (3 samples, 0.05%)</title><rect x="642.7" y="1989" width="0.5" height="15.0" fill="rgb(250,169,53)" rx="2" ry="2" />
<text  x="645.65" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="770.8" y="1941" width="0.4" height="15.0" fill="rgb(212,55,29)" rx="2" ry="2" />
<text  x="773.80" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="613.8" y="1861" width="0.8" height="15.0" fill="rgb(237,41,10)" rx="2" ry="2" />
<text  x="616.82" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="506.2" y="1909" width="0.2" height="15.0" fill="rgb(216,84,21)" rx="2" ry="2" />
<text  x="509.21" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (96 samples, 1.61%)</title><rect x="492.2" y="1957" width="18.9" height="15.0" fill="rgb(239,186,15)" rx="2" ry="2" />
<text  x="495.19" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (4 samples, 0.07%)</title><rect x="830.2" y="2005" width="0.8" height="15.0" fill="rgb(242,121,44)" rx="2" ry="2" />
<text  x="833.23" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (53 samples, 0.89%)</title><rect x="915.1" y="1989" width="10.5" height="15.0" fill="rgb(253,39,6)" rx="2" ry="2" />
<text  x="918.14" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (2 samples, 0.03%)</title><rect x="582.6" y="1989" width="0.4" height="15.0" fill="rgb(218,89,46)" rx="2" ry="2" />
<text  x="585.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::appendKeyPiece (3 samples, 0.05%)</title><rect x="424.3" y="2037" width="0.6" height="15.0" fill="rgb(240,204,40)" rx="2" ry="2" />
<text  x="427.26" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.59%)</title><rect x="328.5" y="2005" width="6.9" height="15.0" fill="rgb(234,181,25)" rx="2" ry="2" />
<text  x="331.50" y="2015.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (17 samples, 0.28%)</title><rect x="957.8" y="1989" width="3.3" height="15.0" fill="rgb(213,164,2)" rx="2" ry="2" />
<text  x="960.79" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="194.8" y="2021" width="0.2" height="15.0" fill="rgb(244,136,43)" rx="2" ry="2" />
<text  x="197.82" y="2031.5" ></text>
</g>
<g >
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1095.4" y="1525" width="0.2" height="15.0" fill="rgb(236,118,0)" rx="2" ry="2" />
<text  x="1098.42" y="1535.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (14 samples, 0.23%)</title><rect x="938.6" y="1893" width="2.8" height="15.0" fill="rgb(223,210,41)" rx="2" ry="2" />
<text  x="941.64" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="618.8" y="1893" width="0.2" height="15.0" fill="rgb(235,14,25)" rx="2" ry="2" />
<text  x="621.76" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1317" width="51.8" height="15.0" fill="rgb(207,0,53)" rx="2" ry="2" />
<text  x="73.42" y="1327.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (16 samples, 0.27%)</title><rect x="108.7" y="53" width="3.2" height="15.0" fill="rgb(234,73,19)" rx="2" ry="2" />
<text  x="111.73" y="63.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (8 samples, 0.13%)</title><rect x="693.8" y="1973" width="1.6" height="15.0" fill="rgb(235,218,45)" rx="2" ry="2" />
<text  x="696.79" y="1983.5" ></text>
</g>
<g >
<title>ip_queue_xmit (103 samples, 1.72%)</title><rect x="289.0" y="1813" width="20.3" height="15.0" fill="rgb(237,98,48)" rx="2" ry="2" />
<text  x="292.01" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1413" width="51.8" height="15.0" fill="rgb(250,147,16)" rx="2" ry="2" />
<text  x="73.42" y="1423.5" >[unkn..</text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="667.7" y="2005" width="0.2" height="15.0" fill="rgb(234,58,42)" rx="2" ry="2" />
<text  x="670.73" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (9 samples, 0.15%)</title><rect x="402.1" y="1957" width="1.8" height="15.0" fill="rgb(234,11,28)" rx="2" ry="2" />
<text  x="405.15" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (46 samples, 0.77%)</title><rect x="438.5" y="2037" width="9.1" height="15.0" fill="rgb(251,228,1)" rx="2" ry="2" />
<text  x="441.48" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (2 samples, 0.03%)</title><rect x="435.9" y="2005" width="0.4" height="15.0" fill="rgb(233,83,38)" rx="2" ry="2" />
<text  x="438.91" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (3 samples, 0.05%)</title><rect x="831.0" y="2005" width="0.6" height="15.0" fill="rgb(236,14,37)" rx="2" ry="2" />
<text  x="834.02" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="686.3" y="2021" width="0.2" height="15.0" fill="rgb(246,229,26)" rx="2" ry="2" />
<text  x="689.29" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="455.1" y="2005" width="0.2" height="15.0" fill="rgb(208,96,36)" rx="2" ry="2" />
<text  x="458.07" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (24 samples, 0.40%)</title><rect x="208.0" y="2005" width="4.8" height="15.0" fill="rgb(216,55,12)" rx="2" ry="2" />
<text  x="211.05" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (511 samples, 8.55%)</title><rect x="871.5" y="2037" width="100.9" height="15.0" fill="rgb(220,139,42)" rx="2" ry="2" />
<text  x="874.50" y="2047.5" >folly::fiber..</text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="444.4" y="1989" width="0.2" height="15.0" fill="rgb(223,151,51)" rx="2" ry="2" />
<text  x="447.40" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="308.9" y="1797" width="0.2" height="15.0" fill="rgb(246,105,5)" rx="2" ry="2" />
<text  x="311.95" y="1807.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (21 samples, 0.35%)</title><rect x="280.3" y="1877" width="4.2" height="15.0" fill="rgb(235,111,21)" rx="2" ry="2" />
<text  x="283.32" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (112 samples, 1.87%)</title><rect x="892.8" y="1989" width="22.1" height="15.0" fill="rgb(224,115,41)" rx="2" ry="2" />
<text  x="895.83" y="1999.5" >f..</text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (44 samples, 0.74%)</title><rect x="904.9" y="1973" width="8.7" height="15.0" fill="rgb(208,217,53)" rx="2" ry="2" />
<text  x="907.87" y="1983.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1098.4" y="1909" width="0.2" height="15.0" fill="rgb(233,170,3)" rx="2" ry="2" />
<text  x="1101.38" y="1919.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="182.8" y="2021" width="0.2" height="15.0" fill="rgb(213,53,39)" rx="2" ry="2" />
<text  x="185.77" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="505.0" y="1925" width="0.2" height="15.0" fill="rgb(248,228,44)" rx="2" ry="2" />
<text  x="508.02" y="1935.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="174.5" y="1861" width="0.4" height="15.0" fill="rgb(209,24,22)" rx="2" ry="2" />
<text  x="177.48" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (6 samples, 0.10%)</title><rect x="954.2" y="1925" width="1.2" height="15.0" fill="rgb(216,142,26)" rx="2" ry="2" />
<text  x="957.24" y="1935.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="354.4" y="1925" width="0.2" height="15.0" fill="rgb(216,167,45)" rx="2" ry="2" />
<text  x="357.36" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="547.1" y="2005" width="0.2" height="15.0" fill="rgb(222,89,10)" rx="2" ry="2" />
<text  x="550.08" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (7 samples, 0.12%)</title><rect x="312.3" y="1797" width="1.4" height="15.0" fill="rgb(229,105,33)" rx="2" ry="2" />
<text  x="315.31" y="1807.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="901.5" y="1973" width="0.6" height="15.0" fill="rgb(222,107,42)" rx="2" ry="2" />
<text  x="904.52" y="1983.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (12 samples, 0.20%)</title><rect x="389.9" y="1989" width="2.4" height="15.0" fill="rgb(233,161,5)" rx="2" ry="2" />
<text  x="392.91" y="1999.5" ></text>
</g>
<g >
<title>copy_page_to_iter (15 samples, 0.25%)</title><rect x="1073.5" y="1909" width="3.0" height="15.0" fill="rgb(234,37,24)" rx="2" ry="2" />
<text  x="1076.50" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (21 samples, 0.35%)</title><rect x="628.2" y="2037" width="4.2" height="15.0" fill="rgb(254,105,22)" rx="2" ry="2" />
<text  x="631.24" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.12%)</title><rect x="624.5" y="1941" width="1.4" height="15.0" fill="rgb(206,117,26)" rx="2" ry="2" />
<text  x="627.48" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (4 samples, 0.07%)</title><rect x="612.4" y="1941" width="0.8" height="15.0" fill="rgb(248,88,40)" rx="2" ry="2" />
<text  x="615.44" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="446.8" y="1989" width="0.2" height="15.0" fill="rgb(239,197,46)" rx="2" ry="2" />
<text  x="449.77" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1124.6" y="1973" width="0.2" height="15.0" fill="rgb(237,23,49)" rx="2" ry="2" />
<text  x="1127.64" y="1983.5" ></text>
</g>
<g >
<title>schedule (25 samples, 0.42%)</title><rect x="13.6" y="1941" width="4.9" height="15.0" fill="rgb(213,169,29)" rx="2" ry="2" />
<text  x="16.55" y="1951.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="956.8" y="1989" width="0.2" height="15.0" fill="rgb(254,146,37)" rx="2" ry="2" />
<text  x="959.80" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1637" width="51.8" height="15.0" fill="rgb(240,123,2)" rx="2" ry="2" />
<text  x="73.42" y="1647.5" >[unkn..</text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1073.3" y="1893" width="0.2" height="15.0" fill="rgb(216,64,11)" rx="2" ry="2" />
<text  x="1076.30" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="195.4" y="2021" width="0.2" height="15.0" fill="rgb(243,73,11)" rx="2" ry="2" />
<text  x="198.41" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (5 samples, 0.08%)</title><rect x="96.1" y="53" width="1.0" height="15.0" fill="rgb(254,221,37)" rx="2" ry="2" />
<text  x="99.09" y="63.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="613.8" y="1893" width="0.8" height="15.0" fill="rgb(239,148,42)" rx="2" ry="2" />
<text  x="616.82" y="1903.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="725.4" y="1909" width="0.8" height="15.0" fill="rgb(254,207,16)" rx="2" ry="2" />
<text  x="728.38" y="1919.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="470.1" y="1893" width="0.2" height="15.0" fill="rgb(251,8,31)" rx="2" ry="2" />
<text  x="473.07" y="1903.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="1106.3" y="2053" width="0.8" height="15.0" fill="rgb(225,51,29)" rx="2" ry="2" />
<text  x="1109.28" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="365.6" y="1957" width="0.2" height="15.0" fill="rgb(229,166,34)" rx="2" ry="2" />
<text  x="368.62" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (64 samples, 1.07%)</title><rect x="236.3" y="2037" width="12.6" height="15.0" fill="rgb(215,170,13)" rx="2" ry="2" />
<text  x="239.29" y="2047.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1154.5" y="1973" width="0.2" height="15.0" fill="rgb(205,78,15)" rx="2" ry="2" />
<text  x="1157.46" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="186.5" y="1989" width="0.4" height="15.0" fill="rgb(222,84,23)" rx="2" ry="2" />
<text  x="189.53" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (20 samples, 0.33%)</title><rect x="514.9" y="1989" width="3.9" height="15.0" fill="rgb(241,192,2)" rx="2" ry="2" />
<text  x="517.90" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="175.7" y="1957" width="0.2" height="15.0" fill="rgb(238,130,9)" rx="2" ry="2" />
<text  x="178.67" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (8 samples, 0.13%)</title><rect x="356.5" y="1973" width="1.6" height="15.0" fill="rgb(249,210,51)" rx="2" ry="2" />
<text  x="359.54" y="1983.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (5 samples, 0.08%)</title><rect x="282.7" y="1845" width="1.0" height="15.0" fill="rgb(211,54,17)" rx="2" ry="2" />
<text  x="285.69" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (7 samples, 0.12%)</title><rect x="379.6" y="1957" width="1.4" height="15.0" fill="rgb(234,61,26)" rx="2" ry="2" />
<text  x="382.64" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1557" width="51.8" height="15.0" fill="rgb(234,62,16)" rx="2" ry="2" />
<text  x="73.42" y="1567.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="84.4" y="37" width="1.0" height="15.0" fill="rgb(229,5,49)" rx="2" ry="2" />
<text  x="87.44" y="47.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="617.4" y="1941" width="0.8" height="15.0" fill="rgb(218,23,20)" rx="2" ry="2" />
<text  x="620.38" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (6 samples, 0.10%)</title><rect x="367.0" y="1973" width="1.2" height="15.0" fill="rgb(220,212,40)" rx="2" ry="2" />
<text  x="370.00" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (3 samples, 0.05%)</title><rect x="715.9" y="1941" width="0.6" height="15.0" fill="rgb(212,89,34)" rx="2" ry="2" />
<text  x="718.91" y="1951.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="273.6" y="1861" width="0.2" height="15.0" fill="rgb(251,161,41)" rx="2" ry="2" />
<text  x="276.60" y="1871.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (54 samples, 0.90%)</title><rect x="269.1" y="1877" width="10.6" height="15.0" fill="rgb(215,227,43)" rx="2" ry="2" />
<text  x="272.06" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1125" width="51.8" height="15.0" fill="rgb(242,147,46)" rx="2" ry="2" />
<text  x="73.42" y="1135.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (4 samples, 0.07%)</title><rect x="671.9" y="2037" width="0.8" height="15.0" fill="rgb(237,226,10)" rx="2" ry="2" />
<text  x="674.87" y="2047.5" ></text>
</g>
<g >
<title>free (60 samples, 1.00%)</title><rect x="973.4" y="2037" width="11.8" height="15.0" fill="rgb(222,123,19)" rx="2" ry="2" />
<text  x="976.39" y="2047.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="96.1" y="37" width="0.2" height="15.0" fill="rgb(218,214,17)" rx="2" ry="2" />
<text  x="99.09" y="47.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="405" width="51.8" height="15.0" fill="rgb(225,211,42)" rx="2" ry="2" />
<text  x="73.42" y="415.5" >[unkn..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="612.6" y="1893" width="0.4" height="15.0" fill="rgb(245,13,11)" rx="2" ry="2" />
<text  x="615.64" y="1903.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.18%)</title><rect x="320.8" y="2021" width="2.2" height="15.0" fill="rgb(242,37,27)" rx="2" ry="2" />
<text  x="323.80" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="680.4" y="2037" width="0.4" height="15.0" fill="rgb(233,186,27)" rx="2" ry="2" />
<text  x="683.36" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="863.4" y="1989" width="0.2" height="15.0" fill="rgb(209,49,41)" rx="2" ry="2" />
<text  x="866.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (28 samples, 0.47%)</title><rect x="572.9" y="1989" width="5.6" height="15.0" fill="rgb(230,116,37)" rx="2" ry="2" />
<text  x="575.95" y="1999.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="311.5" y="1797" width="0.2" height="15.0" fill="rgb(219,109,42)" rx="2" ry="2" />
<text  x="314.52" y="1807.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (14 samples, 0.23%)</title><rect x="441.6" y="1989" width="2.8" height="15.0" fill="rgb(220,101,8)" rx="2" ry="2" />
<text  x="444.64" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="209.4" y="1925" width="0.2" height="15.0" fill="rgb(209,170,53)" rx="2" ry="2" />
<text  x="212.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="197" width="51.8" height="15.0" fill="rgb(220,198,31)" rx="2" ry="2" />
<text  x="73.42" y="207.5" >[unkn..</text>
</g>
<g >
<title>__tcp_transmit_skb (93 samples, 1.56%)</title><rect x="1079.0" y="1877" width="18.4" height="15.0" fill="rgb(235,193,0)" rx="2" ry="2" />
<text  x="1082.03" y="1887.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7 samples, 0.12%)</title><rect x="990.8" y="2037" width="1.3" height="15.0" fill="rgb(212,49,45)" rx="2" ry="2" />
<text  x="993.77" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (9 samples, 0.15%)</title><rect x="108.7" y="37" width="1.8" height="15.0" fill="rgb(252,197,41)" rx="2" ry="2" />
<text  x="111.73" y="47.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1333" width="51.8" height="15.0" fill="rgb(233,122,35)" rx="2" ry="2" />
<text  x="73.42" y="1343.5" >[unkn..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="649.4" y="1973" width="0.2" height="15.0" fill="rgb(251,194,54)" rx="2" ry="2" />
<text  x="652.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (233 samples, 3.90%)</title><rect x="483.3" y="2021" width="46.0" height="15.0" fill="rgb(253,105,44)" rx="2" ry="2" />
<text  x="486.30" y="2031.5" >[unk..</text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (1 samples, 0.02%)</title><rect x="856.7" y="2037" width="0.2" height="15.0" fill="rgb(206,224,42)" rx="2" ry="2" />
<text  x="859.69" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="193.0" y="1925" width="0.2" height="15.0" fill="rgb(234,126,20)" rx="2" ry="2" />
<text  x="196.04" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="849.2" y="2005" width="0.2" height="15.0" fill="rgb(248,174,12)" rx="2" ry="2" />
<text  x="852.19" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (2 samples, 0.03%)</title><rect x="853.5" y="2005" width="0.4" height="15.0" fill="rgb(213,144,35)" rx="2" ry="2" />
<text  x="856.53" y="2015.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="318.0" y="1909" width="0.6" height="15.0" fill="rgb(254,107,21)" rx="2" ry="2" />
<text  x="321.03" y="1919.5" ></text>
</g>
<g >
<title>std::forward&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="924.6" y="1941" width="0.2" height="15.0" fill="rgb(216,89,25)" rx="2" ry="2" />
<text  x="927.62" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="816.8" y="1989" width="1.2" height="15.0" fill="rgb(253,218,35)" rx="2" ry="2" />
<text  x="819.81" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2 samples, 0.03%)</title><rect x="601.4" y="1989" width="0.4" height="15.0" fill="rgb(235,133,15)" rx="2" ry="2" />
<text  x="604.38" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="483.1" y="1973" width="0.2" height="15.0" fill="rgb(220,96,37)" rx="2" ry="2" />
<text  x="486.11" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="506.6" y="1925" width="0.4" height="15.0" fill="rgb(218,75,27)" rx="2" ry="2" />
<text  x="509.60" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="418.7" y="1877" width="0.2" height="15.0" fill="rgb(240,36,33)" rx="2" ry="2" />
<text  x="421.73" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (13 samples, 0.22%)</title><rect x="818.4" y="2005" width="2.6" height="15.0" fill="rgb(249,211,5)" rx="2" ry="2" />
<text  x="821.39" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1154.5" y="2021" width="0.2" height="15.0" fill="rgb(245,122,1)" rx="2" ry="2" />
<text  x="1157.46" y="2031.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (6 samples, 0.10%)</title><rect x="379.8" y="1941" width="1.2" height="15.0" fill="rgb(243,112,50)" rx="2" ry="2" />
<text  x="382.84" y="1951.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="615.8" y="1925" width="0.2" height="15.0" fill="rgb(230,1,2)" rx="2" ry="2" />
<text  x="618.80" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="653.1" y="1973" width="0.8" height="15.0" fill="rgb(210,148,38)" rx="2" ry="2" />
<text  x="656.12" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="118.6" y="69" width="0.4" height="15.0" fill="rgb(218,185,23)" rx="2" ry="2" />
<text  x="121.60" y="79.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator new (1 samples, 0.02%)</title><rect x="107.9" y="37" width="0.2" height="15.0" fill="rgb(251,168,15)" rx="2" ry="2" />
<text  x="110.94" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (4 samples, 0.07%)</title><rect x="451.3" y="2037" width="0.8" height="15.0" fill="rgb(229,129,37)" rx="2" ry="2" />
<text  x="454.32" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="206.5" y="1973" width="0.2" height="15.0" fill="rgb(224,196,5)" rx="2" ry="2" />
<text  x="209.47" y="1983.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1070.3" y="1893" width="0.2" height="15.0" fill="rgb(231,110,49)" rx="2" ry="2" />
<text  x="1073.34" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (21 samples, 0.35%)</title><rect x="148.4" y="1957" width="4.2" height="15.0" fill="rgb(206,4,49)" rx="2" ry="2" />
<text  x="151.42" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (6 samples, 0.10%)</title><rect x="992.5" y="2005" width="1.2" height="15.0" fill="rgb(242,222,48)" rx="2" ry="2" />
<text  x="995.54" y="2015.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="452.9" y="2005" width="0.2" height="15.0" fill="rgb(215,119,20)" rx="2" ry="2" />
<text  x="455.89" y="2015.5" ></text>
</g>
<g >
<title>inet_recvmsg (460 samples, 7.70%)</title><rect x="1009.3" y="1957" width="90.9" height="15.0" fill="rgb(210,59,7)" rx="2" ry="2" />
<text  x="1012.33" y="1967.5" >inet_recvmsg</text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="10.6" y="1893" width="0.2" height="15.0" fill="rgb(225,3,37)" rx="2" ry="2" />
<text  x="13.59" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (569 samples, 9.52%)</title><rect x="69.8" y="2021" width="112.4" height="15.0" fill="rgb(205,175,30)" rx="2" ry="2" />
<text  x="72.83" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="409.3" y="1957" width="0.2" height="15.0" fill="rgb(220,45,39)" rx="2" ry="2" />
<text  x="412.26" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="325" width="51.8" height="15.0" fill="rgb(239,80,16)" rx="2" ry="2" />
<text  x="73.42" y="335.5" >[unkn..</text>
</g>
<g >
<title>copyout (2 samples, 0.03%)</title><rect x="1076.1" y="1893" width="0.4" height="15.0" fill="rgb(217,133,3)" rx="2" ry="2" />
<text  x="1079.07" y="1903.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="763.3" y="1925" width="0.2" height="15.0" fill="rgb(246,191,28)" rx="2" ry="2" />
<text  x="766.30" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="484.5" y="1989" width="0.2" height="15.0" fill="rgb(240,71,34)" rx="2" ry="2" />
<text  x="487.49" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (7 samples, 0.12%)</title><rect x="959.2" y="1957" width="1.4" height="15.0" fill="rgb(206,210,8)" rx="2" ry="2" />
<text  x="962.17" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="620.9" y="1989" width="0.2" height="15.0" fill="rgb(218,186,54)" rx="2" ry="2" />
<text  x="623.93" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="470.1" y="1957" width="0.2" height="15.0" fill="rgb(218,75,25)" rx="2" ry="2" />
<text  x="473.07" y="1967.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (14 samples, 0.23%)</title><rect x="382.4" y="1941" width="2.8" height="15.0" fill="rgb(241,51,49)" rx="2" ry="2" />
<text  x="385.40" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (6 samples, 0.10%)</title><rect x="415.4" y="1957" width="1.2" height="15.0" fill="rgb(210,160,50)" rx="2" ry="2" />
<text  x="418.38" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="468.5" y="2005" width="1.8" height="15.0" fill="rgb(234,136,38)" rx="2" ry="2" />
<text  x="471.49" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1189.6" y="1941" width="0.2" height="15.0" fill="rgb(214,192,7)" rx="2" ry="2" />
<text  x="1192.61" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="1096.2" y="1573" width="0.2" height="15.0" fill="rgb(222,209,51)" rx="2" ry="2" />
<text  x="1099.21" y="1583.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="312.1" y="1813" width="0.2" height="15.0" fill="rgb(254,73,33)" rx="2" ry="2" />
<text  x="315.11" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1124.8" y="1957" width="0.2" height="15.0" fill="rgb(221,56,16)" rx="2" ry="2" />
<text  x="1127.84" y="1967.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="281.9" y="1781" width="0.2" height="15.0" fill="rgb(220,54,12)" rx="2" ry="2" />
<text  x="284.90" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (23 samples, 0.38%)</title><rect x="143.9" y="1941" width="4.5" height="15.0" fill="rgb(211,30,23)" rx="2" ry="2" />
<text  x="146.88" y="1951.5" ></text>
</g>
<g >
<title>tcp_sendmsg (274 samples, 4.59%)</title><rect x="263.7" y="1909" width="54.1" height="15.0" fill="rgb(234,152,15)" rx="2" ry="2" />
<text  x="266.73" y="1919.5" >tcp_s..</text>
</g>
<g >
<title>[unknown] (341 samples, 5.71%)</title><rect x="553.0" y="2021" width="67.3" height="15.0" fill="rgb(222,92,28)" rx="2" ry="2" />
<text  x="556.01" y="2031.5" >[unknown]</text>
</g>
<g >
<title>sys_recvfrom (471 samples, 7.88%)</title><rect x="1008.3" y="2005" width="93.0" height="15.0" fill="rgb(218,219,48)" rx="2" ry="2" />
<text  x="1011.34" y="2015.5" >sys_recvfrom</text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (18 samples, 0.30%)</title><rect x="622.7" y="1973" width="3.6" height="15.0" fill="rgb(253,147,44)" rx="2" ry="2" />
<text  x="625.71" y="1983.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (4 samples, 0.07%)</title><rect x="555.4" y="1973" width="0.8" height="15.0" fill="rgb(223,3,3)" rx="2" ry="2" />
<text  x="558.37" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (161 samples, 2.69%)</title><rect x="731.5" y="1925" width="31.8" height="15.0" fill="rgb(251,111,41)" rx="2" ry="2" />
<text  x="734.51" y="1935.5" >fo..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="850.2" y="1973" width="0.2" height="15.0" fill="rgb(219,62,9)" rx="2" ry="2" />
<text  x="853.18" y="1983.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="962.9" y="1989" width="0.6" height="15.0" fill="rgb(226,57,10)" rx="2" ry="2" />
<text  x="965.93" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (93 samples, 1.56%)</title><rect x="1079.0" y="1909" width="18.4" height="15.0" fill="rgb(217,52,48)" rx="2" ry="2" />
<text  x="1082.03" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (7 samples, 0.12%)</title><rect x="417.9" y="1941" width="1.4" height="15.0" fill="rgb(227,184,53)" rx="2" ry="2" />
<text  x="420.95" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (3 samples, 0.05%)</title><rect x="634.0" y="2005" width="0.6" height="15.0" fill="rgb(240,228,51)" rx="2" ry="2" />
<text  x="636.96" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="249.1" y="2021" width="0.2" height="15.0" fill="rgb(213,163,8)" rx="2" ry="2" />
<text  x="252.12" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (173 samples, 2.89%)</title><rect x="636.3" y="2037" width="34.2" height="15.0" fill="rgb(210,180,50)" rx="2" ry="2" />
<text  x="639.33" y="2047.5" >fa..</text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="126.9" y="1973" width="0.2" height="15.0" fill="rgb(233,229,1)" rx="2" ry="2" />
<text  x="129.89" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="1142.4" y="1989" width="0.4" height="15.0" fill="rgb(210,142,39)" rx="2" ry="2" />
<text  x="1145.41" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="1150.3" y="2053" width="0.2" height="15.0" fill="rgb(250,147,16)" rx="2" ry="2" />
<text  x="1153.31" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (13 samples, 0.22%)</title><rect x="773.8" y="1941" width="2.5" height="15.0" fill="rgb(241,159,42)" rx="2" ry="2" />
<text  x="776.76" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1845" width="51.8" height="15.0" fill="rgb(242,95,36)" rx="2" ry="2" />
<text  x="73.42" y="1855.5" >[unkn..</text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="620.9" y="2005" width="0.2" height="15.0" fill="rgb(217,179,47)" rx="2" ry="2" />
<text  x="623.93" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.12%)</title><rect x="171.5" y="1925" width="1.4" height="15.0" fill="rgb(234,90,13)" rx="2" ry="2" />
<text  x="174.52" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="545.3" y="2005" width="0.6" height="15.0" fill="rgb(219,195,44)" rx="2" ry="2" />
<text  x="548.30" y="2015.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1107.7" y="2037" width="0.2" height="15.0" fill="rgb(213,21,26)" rx="2" ry="2" />
<text  x="1110.66" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="202.1" y="1973" width="0.4" height="15.0" fill="rgb(223,96,13)" rx="2" ry="2" />
<text  x="205.13" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="304.2" y="1685" width="0.4" height="15.0" fill="rgb(238,92,35)" rx="2" ry="2" />
<text  x="307.21" y="1695.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1053.6" y="1829" width="0.4" height="15.0" fill="rgb(219,121,40)" rx="2" ry="2" />
<text  x="1056.56" y="1839.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="953.6" y="1909" width="0.2" height="15.0" fill="rgb(206,213,41)" rx="2" ry="2" />
<text  x="956.64" y="1919.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.03%)</title><rect x="1076.5" y="1925" width="0.4" height="15.0" fill="rgb(242,76,28)" rx="2" ry="2" />
<text  x="1079.46" y="1935.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="688.7" y="1989" width="0.2" height="15.0" fill="rgb(222,187,10)" rx="2" ry="2" />
<text  x="691.66" y="1999.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (3 samples, 0.05%)</title><rect x="389.3" y="1973" width="0.6" height="15.0" fill="rgb(220,51,28)" rx="2" ry="2" />
<text  x="392.31" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="658.1" y="1989" width="0.3" height="15.0" fill="rgb(236,73,14)" rx="2" ry="2" />
<text  x="661.05" y="1999.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="183.0" y="2021" width="0.2" height="15.0" fill="rgb(247,57,17)" rx="2" ry="2" />
<text  x="185.97" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="680.8" y="2037" width="0.2" height="15.0" fill="rgb(250,211,52)" rx="2" ry="2" />
<text  x="683.76" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (3 samples, 0.05%)</title><rect x="444.8" y="2005" width="0.6" height="15.0" fill="rgb(213,116,52)" rx="2" ry="2" />
<text  x="447.80" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="303.2" y="1701" width="0.2" height="15.0" fill="rgb(246,130,11)" rx="2" ry="2" />
<text  x="306.22" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (502 samples, 8.40%)</title><rect x="1002.8" y="2037" width="99.1" height="15.0" fill="rgb(252,139,42)" rx="2" ry="2" />
<text  x="1005.81" y="2047.5" >entry_SYSCAL..</text>
</g>
<g >
<title>epoll_wait (37 samples, 0.62%)</title><rect x="328.3" y="2037" width="7.3" height="15.0" fill="rgb(239,153,20)" rx="2" ry="2" />
<text  x="331.30" y="2047.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (26 samples, 0.44%)</title><rect x="354.6" y="1989" width="5.1" height="15.0" fill="rgb(252,62,5)" rx="2" ry="2" />
<text  x="357.56" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="393.9" y="1973" width="0.7" height="15.0" fill="rgb(211,93,23)" rx="2" ry="2" />
<text  x="396.86" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="110.5" y="37" width="1.4" height="15.0" fill="rgb(217,78,53)" rx="2" ry="2" />
<text  x="113.51" y="47.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (32 samples, 0.54%)</title><rect x="849.4" y="2037" width="6.3" height="15.0" fill="rgb(251,4,18)" rx="2" ry="2" />
<text  x="852.39" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (2 samples, 0.03%)</title><rect x="946.7" y="1877" width="0.4" height="15.0" fill="rgb(213,77,44)" rx="2" ry="2" />
<text  x="949.73" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.60%)</title><rect x="621.1" y="2021" width="7.1" height="15.0" fill="rgb(245,103,28)" rx="2" ry="2" />
<text  x="624.13" y="2031.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (4 samples, 0.07%)</title><rect x="729.7" y="1893" width="0.8" height="15.0" fill="rgb(237,25,13)" rx="2" ry="2" />
<text  x="732.73" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (10 samples, 0.17%)</title><rect x="119.6" y="85" width="2.0" height="15.0" fill="rgb(216,100,53)" rx="2" ry="2" />
<text  x="122.59" y="95.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="613" width="51.8" height="15.0" fill="rgb(239,65,43)" rx="2" ry="2" />
<text  x="73.42" y="623.5" >[unkn..</text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (2 samples, 0.03%)</title><rect x="210.6" y="1941" width="0.4" height="15.0" fill="rgb(212,7,43)" rx="2" ry="2" />
<text  x="213.62" y="1951.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="725.4" y="1893" width="0.8" height="15.0" fill="rgb(226,203,24)" rx="2" ry="2" />
<text  x="728.38" y="1903.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="763.1" y="1909" width="0.2" height="15.0" fill="rgb(231,77,36)" rx="2" ry="2" />
<text  x="766.10" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="168.0" y="1973" width="0.2" height="15.0" fill="rgb(207,112,35)" rx="2" ry="2" />
<text  x="170.97" y="1983.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (1 samples, 0.02%)</title><rect x="345.7" y="1989" width="0.2" height="15.0" fill="rgb(254,108,30)" rx="2" ry="2" />
<text  x="348.68" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (24 samples, 0.40%)</title><rect x="158.1" y="1989" width="4.7" height="15.0" fill="rgb(252,225,14)" rx="2" ry="2" />
<text  x="161.09" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.10%)</title><rect x="356.7" y="1957" width="1.2" height="15.0" fill="rgb(252,36,16)" rx="2" ry="2" />
<text  x="359.73" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (85 samples, 1.42%)</title><rect x="703.7" y="1973" width="16.7" height="15.0" fill="rgb(216,167,23)" rx="2" ry="2" />
<text  x="706.66" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (81 samples, 1.36%)</title><rect x="1080.8" y="1685" width="16.0" height="15.0" fill="rgb(213,108,20)" rx="2" ry="2" />
<text  x="1083.81" y="1695.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="1055.1" y="1845" width="0.2" height="15.0" fill="rgb(247,53,47)" rx="2" ry="2" />
<text  x="1058.14" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="665.4" y="2005" width="0.4" height="15.0" fill="rgb(238,216,12)" rx="2" ry="2" />
<text  x="668.36" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (1 samples, 0.02%)</title><rect x="608.9" y="1973" width="0.2" height="15.0" fill="rgb(223,59,44)" rx="2" ry="2" />
<text  x="611.89" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (24 samples, 0.40%)</title><rect x="567.2" y="1989" width="4.8" height="15.0" fill="rgb(233,88,37)" rx="2" ry="2" />
<text  x="570.22" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="398.6" y="1989" width="0.4" height="15.0" fill="rgb(232,23,41)" rx="2" ry="2" />
<text  x="401.59" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="707.4" y="1909" width="0.4" height="15.0" fill="rgb(244,72,43)" rx="2" ry="2" />
<text  x="710.42" y="1919.5" ></text>
</g>
<g >
<title>skb_release_data (39 samples, 0.65%)</title><rect x="1084.6" y="1477" width="7.7" height="15.0" fill="rgb(249,124,8)" rx="2" ry="2" />
<text  x="1087.56" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1813" width="51.8" height="15.0" fill="rgb(239,114,6)" rx="2" ry="2" />
<text  x="73.42" y="1823.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (4 samples, 0.07%)</title><rect x="707.2" y="1925" width="0.8" height="15.0" fill="rgb(215,127,20)" rx="2" ry="2" />
<text  x="710.22" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="542.3" y="2005" width="0.6" height="15.0" fill="rgb(239,194,49)" rx="2" ry="2" />
<text  x="545.34" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (11 samples, 0.18%)</title><rect x="616.8" y="1957" width="2.2" height="15.0" fill="rgb(236,118,8)" rx="2" ry="2" />
<text  x="619.78" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (25 samples, 0.42%)</title><rect x="13.6" y="1909" width="4.9" height="15.0" fill="rgb(212,104,49)" rx="2" ry="2" />
<text  x="16.55" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (24 samples, 0.40%)</title><rect x="208.0" y="1989" width="4.8" height="15.0" fill="rgb(241,154,21)" rx="2" ry="2" />
<text  x="211.05" y="1999.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="264.5" y="1861" width="0.2" height="15.0" fill="rgb(220,22,45)" rx="2" ry="2" />
<text  x="267.52" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="962.3" y="1957" width="0.6" height="15.0" fill="rgb(211,117,44)" rx="2" ry="2" />
<text  x="965.33" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (3 samples, 0.05%)</title><rect x="621.7" y="1989" width="0.6" height="15.0" fill="rgb(242,105,25)" rx="2" ry="2" />
<text  x="624.72" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="119.4" y="37" width="0.2" height="15.0" fill="rgb(243,127,48)" rx="2" ry="2" />
<text  x="122.39" y="47.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="612.2" y="1893" width="0.2" height="15.0" fill="rgb(223,10,3)" rx="2" ry="2" />
<text  x="615.24" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (233 samples, 3.90%)</title><rect x="483.3" y="2037" width="46.0" height="15.0" fill="rgb(242,186,28)" rx="2" ry="2" />
<text  x="486.30" y="2047.5" >face..</text>
</g>
<g >
<title>do_syscall_64 (347 samples, 5.81%)</title><rect x="251.9" y="2005" width="68.5" height="15.0" fill="rgb(235,152,8)" rx="2" ry="2" />
<text  x="254.88" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (18 samples, 0.30%)</title><rect x="682.7" y="2037" width="3.6" height="15.0" fill="rgb(248,8,39)" rx="2" ry="2" />
<text  x="685.73" y="2047.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="688.7" y="1893" width="0.2" height="15.0" fill="rgb(211,223,8)" rx="2" ry="2" />
<text  x="691.66" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="389" width="51.8" height="15.0" fill="rgb(220,136,2)" rx="2" ry="2" />
<text  x="73.42" y="399.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="208.2" y="1925" width="0.2" height="15.0" fill="rgb(211,66,47)" rx="2" ry="2" />
<text  x="211.25" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="1124.4" y="1989" width="0.4" height="15.0" fill="rgb(254,11,29)" rx="2" ry="2" />
<text  x="1127.44" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (4 samples, 0.07%)</title><rect x="591.5" y="1989" width="0.8" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="594.51" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="22.8" y="1973" width="0.2" height="15.0" fill="rgb(249,12,44)" rx="2" ry="2" />
<text  x="25.83" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="590.5" y="1941" width="0.4" height="15.0" fill="rgb(219,220,36)" rx="2" ry="2" />
<text  x="593.52" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="730.5" y="1893" width="0.2" height="15.0" fill="rgb(224,198,14)" rx="2" ry="2" />
<text  x="733.52" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="101.2" y="37" width="0.2" height="15.0" fill="rgb(218,64,35)" rx="2" ry="2" />
<text  x="104.22" y="47.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="353.2" y="1957" width="0.2" height="15.0" fill="rgb(212,113,44)" rx="2" ry="2" />
<text  x="356.18" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (3 samples, 0.05%)</title><rect x="846.2" y="1957" width="0.6" height="15.0" fill="rgb(205,121,28)" rx="2" ry="2" />
<text  x="849.23" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (31 samples, 0.52%)</title><rect x="23.0" y="1989" width="6.2" height="15.0" fill="rgb(242,136,9)" rx="2" ry="2" />
<text  x="26.03" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="162.8" y="1989" width="0.4" height="15.0" fill="rgb(220,54,21)" rx="2" ry="2" />
<text  x="165.83" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (18 samples, 0.30%)</title><rect x="716.5" y="1941" width="3.6" height="15.0" fill="rgb(251,181,44)" rx="2" ry="2" />
<text  x="719.50" y="1951.5" ></text>
</g>
<g >
<title>sys_futex (9 samples, 0.15%)</title><rect x="10.6" y="2005" width="1.8" height="15.0" fill="rgb(233,57,20)" rx="2" ry="2" />
<text  x="13.59" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="933" width="51.8" height="15.0" fill="rgb(223,125,26)" rx="2" ry="2" />
<text  x="73.42" y="943.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="712.7" y="1925" width="0.4" height="15.0" fill="rgb(233,149,14)" rx="2" ry="2" />
<text  x="715.75" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="163.4" y="1925" width="0.2" height="15.0" fill="rgb(207,149,53)" rx="2" ry="2" />
<text  x="166.42" y="1935.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="312.3" y="1765" width="0.2" height="15.0" fill="rgb(210,13,11)" rx="2" ry="2" />
<text  x="315.31" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (7 samples, 0.12%)</title><rect x="184.2" y="2021" width="1.3" height="15.0" fill="rgb(227,6,51)" rx="2" ry="2" />
<text  x="187.16" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="122.0" y="85" width="0.2" height="15.0" fill="rgb(225,51,54)" rx="2" ry="2" />
<text  x="124.96" y="95.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="10.6" y="1861" width="0.2" height="15.0" fill="rgb(240,206,27)" rx="2" ry="2" />
<text  x="13.59" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (5 samples, 0.08%)</title><rect x="686.5" y="2021" width="1.0" height="15.0" fill="rgb(249,18,17)" rx="2" ry="2" />
<text  x="689.49" y="2031.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (17 samples, 0.28%)</title><rect x="382.2" y="1957" width="3.4" height="15.0" fill="rgb(253,113,29)" rx="2" ry="2" />
<text  x="385.21" y="1967.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1101.1" y="1989" width="0.2" height="15.0" fill="rgb(253,188,0)" rx="2" ry="2" />
<text  x="1104.14" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (15 samples, 0.25%)</title><rect x="373.3" y="1957" width="3.0" height="15.0" fill="rgb(247,45,0)" rx="2" ry="2" />
<text  x="376.32" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="638.7" y="1957" width="0.2" height="15.0" fill="rgb(246,8,20)" rx="2" ry="2" />
<text  x="641.70" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="10.4" y="2037" width="2.0" height="15.0" fill="rgb(229,160,35)" rx="2" ry="2" />
<text  x="13.39" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (6 samples, 0.10%)</title><rect x="436.9" y="2005" width="1.2" height="15.0" fill="rgb(209,128,54)" rx="2" ry="2" />
<text  x="439.90" y="2015.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.02%)</title><rect x="354.4" y="1893" width="0.2" height="15.0" fill="rgb(230,55,45)" rx="2" ry="2" />
<text  x="357.36" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::reset (3 samples, 0.05%)</title><rect x="926.2" y="1989" width="0.6" height="15.0" fill="rgb(214,193,34)" rx="2" ry="2" />
<text  x="929.20" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(231,32,21)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned long*, unsigned long&gt; (2 samples, 0.03%)</title><rect x="513.1" y="1925" width="0.4" height="15.0" fill="rgb(246,155,34)" rx="2" ry="2" />
<text  x="516.12" y="1935.5" ></text>
</g>
<g >
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="302.2" y="1461" width="0.2" height="15.0" fill="rgb(222,31,4)" rx="2" ry="2" />
<text  x="305.24" y="1471.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (147 samples, 2.46%)</title><rect x="926.8" y="1989" width="29.0" height="15.0" fill="rgb(254,5,3)" rx="2" ry="2" />
<text  x="929.79" y="1999.5" >fo..</text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (65 samples, 1.09%)</title><rect x="425.6" y="2037" width="12.9" height="15.0" fill="rgb(210,22,22)" rx="2" ry="2" />
<text  x="428.65" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="418.9" y="1909" width="0.4" height="15.0" fill="rgb(235,16,24)" rx="2" ry="2" />
<text  x="421.93" y="1919.5" ></text>
</g>
<g >
<title>import_iovec (13 samples, 0.22%)</title><rect x="260.4" y="1925" width="2.5" height="15.0" fill="rgb(238,60,42)" rx="2" ry="2" />
<text  x="263.37" y="1935.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (1 samples, 0.02%)</title><rect x="339.6" y="2005" width="0.2" height="15.0" fill="rgb(243,52,2)" rx="2" ry="2" />
<text  x="342.55" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::reply&lt;facebook::memcache::McGetReply&gt; (3 samples, 0.05%)</title><rect x="450.1" y="2037" width="0.6" height="15.0" fill="rgb(252,182,44)" rx="2" ry="2" />
<text  x="453.13" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="320.6" y="2021" width="0.2" height="15.0" fill="rgb(222,139,23)" rx="2" ry="2" />
<text  x="323.60" y="2031.5" ></text>
</g>
<g >
<title>skb_clone (4 samples, 0.07%)</title><rect x="309.3" y="1813" width="0.8" height="15.0" fill="rgb(212,92,35)" rx="2" ry="2" />
<text  x="312.34" y="1823.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (3 samples, 0.05%)</title><rect x="1112.6" y="2053" width="0.6" height="15.0" fill="rgb(242,160,35)" rx="2" ry="2" />
<text  x="1115.60" y="2063.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1189.6" y="1989" width="0.2" height="15.0" fill="rgb(224,24,9)" rx="2" ry="2" />
<text  x="1192.61" y="1999.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1097.0" y="1733" width="0.2" height="15.0" fill="rgb(227,97,45)" rx="2" ry="2" />
<text  x="1100.00" y="1743.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (8 samples, 0.13%)</title><rect x="204.3" y="1989" width="1.6" height="15.0" fill="rgb(209,120,30)" rx="2" ry="2" />
<text  x="207.30" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (4 samples, 0.07%)</title><rect x="366.2" y="1925" width="0.8" height="15.0" fill="rgb(212,72,13)" rx="2" ry="2" />
<text  x="369.21" y="1935.5" ></text>
</g>
<g >
<title>[[vdso]] (3 samples, 0.05%)</title><rect x="237.5" y="2021" width="0.6" height="15.0" fill="rgb(209,214,21)" rx="2" ry="2" />
<text  x="240.47" y="2031.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="837.5" y="1973" width="1.4" height="15.0" fill="rgb(221,60,12)" rx="2" ry="2" />
<text  x="840.54" y="1983.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="308.6" y="1669" width="0.2" height="15.0" fill="rgb(242,23,5)" rx="2" ry="2" />
<text  x="311.55" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::MultiOpParent (4 samples, 0.07%)</title><rect x="632.4" y="2037" width="0.8" height="15.0" fill="rgb(245,164,7)" rx="2" ry="2" />
<text  x="635.38" y="2047.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (3 samples, 0.05%)</title><rect x="391.7" y="1973" width="0.6" height="15.0" fill="rgb(249,94,11)" rx="2" ry="2" />
<text  x="394.68" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (29 samples, 0.49%)</title><rect x="585.2" y="1989" width="5.7" height="15.0" fill="rgb(215,176,26)" rx="2" ry="2" />
<text  x="588.19" y="1999.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="730.7" y="1909" width="0.6" height="15.0" fill="rgb(205,92,5)" rx="2" ry="2" />
<text  x="733.72" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (34 samples, 0.57%)</title><rect x="428.6" y="2005" width="6.7" height="15.0" fill="rgb(229,42,23)" rx="2" ry="2" />
<text  x="431.61" y="2015.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (93 samples, 1.56%)</title><rect x="1079.0" y="1893" width="18.4" height="15.0" fill="rgb(217,102,17)" rx="2" ry="2" />
<text  x="1082.03" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (18 samples, 0.30%)</title><rect x="838.9" y="1973" width="3.6" height="15.0" fill="rgb(205,134,49)" rx="2" ry="2" />
<text  x="841.92" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (55 samples, 0.92%)</title><rect x="1132.9" y="2021" width="10.9" height="15.0" fill="rgb(247,136,15)" rx="2" ry="2" />
<text  x="1135.94" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1050.2" y="1893" width="0.2" height="15.0" fill="rgb(227,104,3)" rx="2" ry="2" />
<text  x="1053.20" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="628.4" y="1989" width="0.2" height="15.0" fill="rgb(247,117,23)" rx="2" ry="2" />
<text  x="631.43" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (44 samples, 0.74%)</title><rect x="293.9" y="1605" width="8.7" height="15.0" fill="rgb(251,55,30)" rx="2" ry="2" />
<text  x="296.94" y="1615.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (3 samples, 0.05%)</title><rect x="205.9" y="1989" width="0.6" height="15.0" fill="rgb(208,15,19)" rx="2" ry="2" />
<text  x="208.88" y="1999.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="382.0" y="1957" width="0.2" height="15.0" fill="rgb(244,66,8)" rx="2" ry="2" />
<text  x="385.01" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (15 samples, 0.25%)</title><rect x="863.4" y="2037" width="3.0" height="15.0" fill="rgb(250,27,2)" rx="2" ry="2" />
<text  x="866.41" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="201.3" y="1957" width="0.2" height="15.0" fill="rgb(246,24,30)" rx="2" ry="2" />
<text  x="204.34" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="121.8" y="37" width="0.2" height="15.0" fill="rgb(207,106,28)" rx="2" ry="2" />
<text  x="124.76" y="47.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="12.4" y="1925" width="0.8" height="15.0" fill="rgb(229,10,44)" rx="2" ry="2" />
<text  x="15.37" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1013" width="51.8" height="15.0" fill="rgb(235,136,39)" rx="2" ry="2" />
<text  x="73.42" y="1023.5" >[unkn..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1189.6" y="1973" width="0.2" height="15.0" fill="rgb(214,43,11)" rx="2" ry="2" />
<text  x="1192.61" y="1983.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (1 samples, 0.02%)</title><rect x="70.2" y="1989" width="0.2" height="15.0" fill="rgb(221,21,42)" rx="2" ry="2" />
<text  x="73.22" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (15 samples, 0.25%)</title><rect x="515.9" y="1973" width="2.9" height="15.0" fill="rgb(213,21,17)" rx="2" ry="2" />
<text  x="518.88" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="171.7" y="1909" width="0.2" height="15.0" fill="rgb(228,222,47)" rx="2" ry="2" />
<text  x="174.72" y="1919.5" ></text>
</g>
<g >
<title>skb_free_head (27 samples, 0.45%)</title><rect x="1086.9" y="1461" width="5.4" height="15.0" fill="rgb(244,67,18)" rx="2" ry="2" />
<text  x="1089.93" y="1471.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="614.4" y="1845" width="0.2" height="15.0" fill="rgb(250,13,28)" rx="2" ry="2" />
<text  x="617.41" y="1855.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::destroy (1 samples, 0.02%)</title><rect x="854.5" y="2005" width="0.2" height="15.0" fill="rgb(220,54,51)" rx="2" ry="2" />
<text  x="857.52" y="2015.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="312.9" y="1749" width="0.2" height="15.0" fill="rgb(225,194,41)" rx="2" ry="2" />
<text  x="315.90" y="1759.5" ></text>
</g>
<g >
<title>__slab_free (29 samples, 0.49%)</title><rect x="1025.7" y="1845" width="5.7" height="15.0" fill="rgb(231,193,50)" rx="2" ry="2" />
<text  x="1028.72" y="1855.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::clear (1 samples, 0.02%)</title><rect x="715.7" y="1925" width="0.2" height="15.0" fill="rgb(231,211,39)" rx="2" ry="2" />
<text  x="718.71" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (10 samples, 0.17%)</title><rect x="201.7" y="1989" width="2.0" height="15.0" fill="rgb(219,102,51)" rx="2" ry="2" />
<text  x="204.73" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (65 samples, 1.09%)</title><rect x="832.0" y="2005" width="12.8" height="15.0" fill="rgb(212,108,25)" rx="2" ry="2" />
<text  x="835.01" y="2015.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="964.1" y="2005" width="0.4" height="15.0" fill="rgb(214,71,17)" rx="2" ry="2" />
<text  x="967.11" y="2015.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="640.3" y="1941" width="0.8" height="15.0" fill="rgb(216,76,8)" rx="2" ry="2" />
<text  x="643.28" y="1951.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (1 samples, 0.02%)</title><rect x="423.9" y="1909" width="0.2" height="15.0" fill="rgb(248,177,52)" rx="2" ry="2" />
<text  x="426.87" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="101.4" y="37" width="0.2" height="15.0" fill="rgb(221,8,0)" rx="2" ry="2" />
<text  x="104.42" y="47.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (49 samples, 0.82%)</title><rect x="553.0" y="1989" width="9.7" height="15.0" fill="rgb(222,8,29)" rx="2" ry="2" />
<text  x="556.01" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (44 samples, 0.74%)</title><rect x="293.9" y="1541" width="8.7" height="15.0" fill="rgb(212,115,12)" rx="2" ry="2" />
<text  x="296.94" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (3 samples, 0.05%)</title><rect x="28.0" y="1973" width="0.6" height="15.0" fill="rgb(241,21,35)" rx="2" ry="2" />
<text  x="30.97" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (22 samples, 0.37%)</title><rect x="742.0" y="1893" width="4.3" height="15.0" fill="rgb(222,40,32)" rx="2" ry="2" />
<text  x="744.97" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="167.0" y="1957" width="0.2" height="15.0" fill="rgb(254,75,46)" rx="2" ry="2" />
<text  x="169.98" y="1967.5" ></text>
</g>
<g >
<title>tcp_ack (71 samples, 1.19%)</title><rect x="1081.8" y="1541" width="14.0" height="15.0" fill="rgb(205,85,11)" rx="2" ry="2" />
<text  x="1084.79" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1205" width="51.8" height="15.0" fill="rgb(216,187,43)" rx="2" ry="2" />
<text  x="73.42" y="1215.5" >[unkn..</text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="914.9" y="1989" width="0.2" height="15.0" fill="rgb(237,215,15)" rx="2" ry="2" />
<text  x="917.94" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="720.1" y="1957" width="0.3" height="15.0" fill="rgb(222,110,41)" rx="2" ry="2" />
<text  x="723.05" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (8 samples, 0.13%)</title><rect x="421.3" y="1877" width="1.6" height="15.0" fill="rgb(250,50,38)" rx="2" ry="2" />
<text  x="424.30" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::startProcessing (1 samples, 0.02%)</title><rect x="657.5" y="1973" width="0.2" height="15.0" fill="rgb(249,114,14)" rx="2" ry="2" />
<text  x="660.46" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="692.2" y="1989" width="0.4" height="15.0" fill="rgb(251,74,20)" rx="2" ry="2" />
<text  x="695.21" y="1999.5" ></text>
</g>
<g >
<title>skb_free_head (33 samples, 0.55%)</title><rect x="1024.9" y="1877" width="6.5" height="15.0" fill="rgb(231,84,27)" rx="2" ry="2" />
<text  x="1027.93" y="1887.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::derived (1 samples, 0.02%)</title><rect x="382.2" y="1941" width="0.2" height="15.0" fill="rgb(232,4,49)" rx="2" ry="2" />
<text  x="385.21" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="617.8" y="1893" width="0.2" height="15.0" fill="rgb(253,210,5)" rx="2" ry="2" />
<text  x="620.77" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (92 samples, 1.54%)</title><rect x="529.3" y="2037" width="18.2" height="15.0" fill="rgb(253,207,17)" rx="2" ry="2" />
<text  x="532.31" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="418.5" y="1909" width="0.4" height="15.0" fill="rgb(212,223,0)" rx="2" ry="2" />
<text  x="421.54" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="203.5" y="1941" width="0.2" height="15.0" fill="rgb(216,86,34)" rx="2" ry="2" />
<text  x="206.51" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::clear (2 samples, 0.03%)</title><rect x="215.0" y="2021" width="0.4" height="15.0" fill="rgb(250,148,28)" rx="2" ry="2" />
<text  x="217.96" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output (86 samples, 1.44%)</title><rect x="291.8" y="1765" width="17.0" height="15.0" fill="rgb(239,199,5)" rx="2" ry="2" />
<text  x="294.77" y="1775.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (25 samples, 0.42%)</title><rect x="13.6" y="1893" width="4.9" height="15.0" fill="rgb(250,147,52)" rx="2" ry="2" />
<text  x="16.55" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="206.5" y="1957" width="0.2" height="15.0" fill="rgb(237,126,37)" rx="2" ry="2" />
<text  x="209.47" y="1967.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1106.1" y="2053" width="0.2" height="15.0" fill="rgb(209,92,1)" rx="2" ry="2" />
<text  x="1109.08" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (511 samples, 8.55%)</title><rect x="871.5" y="2021" width="100.9" height="15.0" fill="rgb(240,229,19)" rx="2" ry="2" />
<text  x="874.50" y="2031.5" >[unknown]</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="132.8" y="1973" width="0.4" height="15.0" fill="rgb(253,92,20)" rx="2" ry="2" />
<text  x="135.82" y="1983.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="13.4" y="2037" width="0.2" height="15.0" fill="rgb(254,16,36)" rx="2" ry="2" />
<text  x="16.36" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="162.2" y="1973" width="0.6" height="15.0" fill="rgb(248,220,20)" rx="2" ry="2" />
<text  x="165.24" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (3 samples, 0.05%)</title><rect x="1147.9" y="2053" width="0.6" height="15.0" fill="rgb(239,185,33)" rx="2" ry="2" />
<text  x="1150.94" y="2063.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (13 samples, 0.22%)</title><rect x="25.4" y="1973" width="2.6" height="15.0" fill="rgb(222,72,23)" rx="2" ry="2" />
<text  x="28.40" y="1983.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="1124.6" y="1925" width="0.2" height="15.0" fill="rgb(234,88,54)" rx="2" ry="2" />
<text  x="1127.64" y="1935.5" ></text>
</g>
<g >
<title>ep_poll_callback (3 samples, 0.05%)</title><rect x="294.3" y="1429" width="0.6" height="15.0" fill="rgb(236,178,51)" rx="2" ry="2" />
<text  x="297.34" y="1439.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::setFiber (9 samples, 0.15%)</title><rect x="918.7" y="1909" width="1.8" height="15.0" fill="rgb(252,88,5)" rx="2" ry="2" />
<text  x="921.69" y="1919.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (1 samples, 0.02%)</title><rect x="963.5" y="1989" width="0.2" height="15.0" fill="rgb(239,33,5)" rx="2" ry="2" />
<text  x="966.52" y="1999.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.03%)</title><rect x="1143.4" y="2005" width="0.4" height="15.0" fill="rgb(225,129,28)" rx="2" ry="2" />
<text  x="1146.40" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (2 samples, 0.03%)</title><rect x="682.7" y="1989" width="0.4" height="15.0" fill="rgb(214,187,15)" rx="2" ry="2" />
<text  x="685.73" y="1999.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="1096.8" y="1765" width="0.4" height="15.0" fill="rgb(253,24,12)" rx="2" ry="2" />
<text  x="1099.80" y="1775.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1075.5" y="1893" width="0.6" height="15.0" fill="rgb(205,200,6)" rx="2" ry="2" />
<text  x="1078.48" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (5 samples, 0.08%)</title><rect x="855.7" y="2037" width="1.0" height="15.0" fill="rgb(241,40,0)" rx="2" ry="2" />
<text  x="858.71" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="200.5" y="1957" width="0.2" height="15.0" fill="rgb(214,189,7)" rx="2" ry="2" />
<text  x="203.55" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="70.4" y="37" width="0.2" height="15.0" fill="rgb(207,18,5)" rx="2" ry="2" />
<text  x="73.42" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (3 samples, 0.05%)</title><rect x="417.9" y="1909" width="0.6" height="15.0" fill="rgb(239,44,26)" rx="2" ry="2" />
<text  x="420.95" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="612.4" y="1925" width="0.8" height="15.0" fill="rgb(236,131,11)" rx="2" ry="2" />
<text  x="615.44" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (9 samples, 0.15%)</title><rect x="994.7" y="2005" width="1.8" height="15.0" fill="rgb(226,9,52)" rx="2" ry="2" />
<text  x="997.72" y="2015.5" ></text>
</g>
<g >
<title>ksize (3 samples, 0.05%)</title><rect x="283.7" y="1845" width="0.6" height="15.0" fill="rgb(249,70,28)" rx="2" ry="2" />
<text  x="286.67" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="546.9" y="2021" width="0.4" height="15.0" fill="rgb(225,76,31)" rx="2" ry="2" />
<text  x="549.88" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (6 samples, 0.10%)</title><rect x="1149.1" y="2053" width="1.2" height="15.0" fill="rgb(252,161,2)" rx="2" ry="2" />
<text  x="1152.13" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="443.8" y="1941" width="0.2" height="15.0" fill="rgb(234,108,36)" rx="2" ry="2" />
<text  x="446.81" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (6 samples, 0.10%)</title><rect x="668.7" y="2005" width="1.2" height="15.0" fill="rgb(240,229,0)" rx="2" ry="2" />
<text  x="671.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (39 samples, 0.65%)</title><rect x="97.5" y="53" width="7.7" height="15.0" fill="rgb(229,104,23)" rx="2" ry="2" />
<text  x="100.47" y="63.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::~HHWheelTimerBase (1 samples, 0.02%)</title><rect x="859.1" y="2037" width="0.2" height="15.0" fill="rgb(222,57,23)" rx="2" ry="2" />
<text  x="862.06" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (200 samples, 3.35%)</title><rect x="123.7" y="2005" width="39.5" height="15.0" fill="rgb(239,0,0)" rx="2" ry="2" />
<text  x="126.73" y="2015.5" >fac..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="1105.3" y="2053" width="0.8" height="15.0" fill="rgb(250,162,5)" rx="2" ry="2" />
<text  x="1108.29" y="2063.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="1126.0" y="2005" width="0.2" height="15.0" fill="rgb(249,19,5)" rx="2" ry="2" />
<text  x="1129.02" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="171.3" y="1877" width="0.2" height="15.0" fill="rgb(234,55,4)" rx="2" ry="2" />
<text  x="174.32" y="1887.5" ></text>
</g>
<g >
<title>__kfree_skb (52 samples, 0.87%)</title><rect x="1082.6" y="1509" width="10.3" height="15.0" fill="rgb(239,58,54)" rx="2" ry="2" />
<text  x="1085.58" y="1519.5" ></text>
</g>
<g >
<title>do_syscall_64 (498 samples, 8.33%)</title><rect x="1003.0" y="2021" width="98.3" height="15.0" fill="rgb(229,1,28)" rx="2" ry="2" />
<text  x="1006.01" y="2031.5" >do_syscall_64</text>
</g>
<g >
<title>__kmalloc_node_track_caller (6 samples, 0.10%)</title><rect x="281.3" y="1829" width="1.2" height="15.0" fill="rgb(229,78,3)" rx="2" ry="2" />
<text  x="284.31" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="167.4" y="1989" width="0.8" height="15.0" fill="rgb(208,205,32)" rx="2" ry="2" />
<text  x="170.37" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="547.5" y="2037" width="0.4" height="15.0" fill="rgb(212,93,40)" rx="2" ry="2" />
<text  x="550.48" y="2047.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="122.2" y="1989" width="0.4" height="15.0" fill="rgb(250,100,15)" rx="2" ry="2" />
<text  x="125.16" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (235 samples, 3.93%)</title><rect x="720.4" y="1973" width="46.5" height="15.0" fill="rgb(215,70,35)" rx="2" ry="2" />
<text  x="723.45" y="1983.5" >foll..</text>
</g>
<g >
<title>__slab_free (16 samples, 0.27%)</title><rect x="1017.8" y="1877" width="3.2" height="15.0" fill="rgb(253,37,6)" rx="2" ry="2" />
<text  x="1020.82" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="175.5" y="1941" width="0.2" height="15.0" fill="rgb(224,61,2)" rx="2" ry="2" />
<text  x="178.47" y="1951.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="1050.8" y="1893" width="0.4" height="15.0" fill="rgb(216,6,49)" rx="2" ry="2" />
<text  x="1053.79" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (2 samples, 0.03%)</title><rect x="818.0" y="2005" width="0.4" height="15.0" fill="rgb(227,40,6)" rx="2" ry="2" />
<text  x="820.99" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (5 samples, 0.08%)</title><rect x="22.0" y="1989" width="1.0" height="15.0" fill="rgb(222,111,46)" rx="2" ry="2" />
<text  x="25.04" y="1999.5" ></text>
</g>
<g >
<title>[[vdso]] (23 samples, 0.38%)</title><rect x="244.4" y="2005" width="4.5" height="15.0" fill="rgb(250,202,43)" rx="2" ry="2" />
<text  x="247.38" y="2015.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="205.7" y="1973" width="0.2" height="15.0" fill="rgb(219,178,36)" rx="2" ry="2" />
<text  x="208.68" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="418.3" y="1877" width="0.2" height="15.0" fill="rgb(253,142,49)" rx="2" ry="2" />
<text  x="421.34" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (15 samples, 0.25%)</title><rect x="958.2" y="1973" width="2.9" height="15.0" fill="rgb(234,120,17)" rx="2" ry="2" />
<text  x="961.19" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1237" width="51.8" height="15.0" fill="rgb(247,226,46)" rx="2" ry="2" />
<text  x="73.42" y="1247.5" >[unkn..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="612.2" y="1877" width="0.2" height="15.0" fill="rgb(244,89,28)" rx="2" ry="2" />
<text  x="615.24" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (2 samples, 0.03%)</title><rect x="303.4" y="1701" width="0.4" height="15.0" fill="rgb(244,197,43)" rx="2" ry="2" />
<text  x="306.42" y="1711.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="108.5" y="37" width="0.2" height="15.0" fill="rgb(254,163,49)" rx="2" ry="2" />
<text  x="111.53" y="47.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (25 samples, 0.42%)</title><rect x="13.6" y="2069" width="4.9" height="15.0" fill="rgb(205,130,22)" rx="2" ry="2" />
<text  x="16.55" y="2079.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (18 samples, 0.30%)</title><rect x="189.7" y="1957" width="3.5" height="15.0" fill="rgb(216,226,4)" rx="2" ry="2" />
<text  x="192.69" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (3 samples, 0.05%)</title><rect x="1160.8" y="2053" width="0.6" height="15.0" fill="rgb(231,38,1)" rx="2" ry="2" />
<text  x="1163.78" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="485" width="51.8" height="15.0" fill="rgb(231,156,50)" rx="2" ry="2" />
<text  x="73.42" y="495.5" >[unkn..</text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="175.5" y="1925" width="0.2" height="15.0" fill="rgb(252,23,41)" rx="2" ry="2" />
<text  x="178.47" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="245" width="51.8" height="15.0" fill="rgb(251,89,43)" rx="2" ry="2" />
<text  x="73.42" y="255.5" >[unkn..</text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="615.4" y="1941" width="1.4" height="15.0" fill="rgb(208,171,23)" rx="2" ry="2" />
<text  x="618.40" y="1951.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="233.5" y="2021" width="0.4" height="15.0" fill="rgb(218,192,2)" rx="2" ry="2" />
<text  x="236.52" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (4 samples, 0.07%)</title><rect x="528.5" y="2005" width="0.8" height="15.0" fill="rgb(226,133,49)" rx="2" ry="2" />
<text  x="531.52" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (6 samples, 0.10%)</title><rect x="235.1" y="2021" width="1.2" height="15.0" fill="rgb(238,114,31)" rx="2" ry="2" />
<text  x="238.10" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="208.4" y="1893" width="0.2" height="15.0" fill="rgb(227,215,28)" rx="2" ry="2" />
<text  x="211.44" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="817.6" y="1973" width="0.4" height="15.0" fill="rgb(246,164,8)" rx="2" ry="2" />
<text  x="820.60" y="1983.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="30.9" y="2005" width="0.4" height="15.0" fill="rgb(234,144,40)" rx="2" ry="2" />
<text  x="33.93" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="763.9" y="1941" width="0.2" height="15.0" fill="rgb(219,163,32)" rx="2" ry="2" />
<text  x="766.89" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (4 samples, 0.07%)</title><rect x="504.0" y="1909" width="0.8" height="15.0" fill="rgb(235,187,41)" rx="2" ry="2" />
<text  x="507.04" y="1919.5" ></text>
</g>
<g >
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="311.1" y="1813" width="0.2" height="15.0" fill="rgb(226,86,39)" rx="2" ry="2" />
<text  x="314.12" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_established (43 samples, 0.72%)</title><rect x="294.1" y="1509" width="8.5" height="15.0" fill="rgb(228,34,46)" rx="2" ry="2" />
<text  x="297.14" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (4 samples, 0.07%)</title><rect x="421.9" y="1861" width="0.8" height="15.0" fill="rgb(212,129,24)" rx="2" ry="2" />
<text  x="424.89" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (6 samples, 0.10%)</title><rect x="377.1" y="1941" width="1.2" height="15.0" fill="rgb(225,15,27)" rx="2" ry="2" />
<text  x="380.07" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (270 samples, 4.52%)</title><rect x="70.2" y="2005" width="53.3" height="15.0" fill="rgb(244,159,20)" rx="2" ry="2" />
<text  x="73.22" y="2015.5" >[unkn..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="421.9" y="1829" width="0.2" height="15.0" fill="rgb(223,229,43)" rx="2" ry="2" />
<text  x="424.89" y="1839.5" ></text>
</g>
<g >
<title>__check_object_size (6 samples, 0.10%)</title><rect x="267.9" y="1877" width="1.2" height="15.0" fill="rgb(239,102,21)" rx="2" ry="2" />
<text  x="270.88" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="725.4" y="1781" width="0.8" height="15.0" fill="rgb(231,207,15)" rx="2" ry="2" />
<text  x="728.38" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::forwardAsciiReply&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="113.7" y="53" width="0.2" height="15.0" fill="rgb(205,61,32)" rx="2" ry="2" />
<text  x="116.66" y="63.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (3 samples, 0.05%)</title><rect x="685.7" y="2005" width="0.6" height="15.0" fill="rgb(219,85,15)" rx="2" ry="2" />
<text  x="688.70" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (63 samples, 1.05%)</title><rect x="1113.8" y="2053" width="12.4" height="15.0" fill="rgb(225,102,9)" rx="2" ry="2" />
<text  x="1116.78" y="2063.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="422.7" y="1861" width="0.2" height="15.0" fill="rgb(208,153,29)" rx="2" ry="2" />
<text  x="425.68" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="210.6" y="1909" width="0.2" height="15.0" fill="rgb(253,148,23)" rx="2" ry="2" />
<text  x="213.62" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.08%)</title><rect x="850.0" y="1989" width="1.0" height="15.0" fill="rgb(244,167,38)" rx="2" ry="2" />
<text  x="852.98" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="363.4" y="1941" width="0.4" height="15.0" fill="rgb(237,143,20)" rx="2" ry="2" />
<text  x="366.45" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::operator+&lt;folly::EventBase::loopBody (1 samples, 0.02%)</title><rect x="175.3" y="1941" width="0.2" height="15.0" fill="rgb(245,26,48)" rx="2" ry="2" />
<text  x="178.27" y="1951.5" ></text>
</g>
<g >
<title>free (5 samples, 0.08%)</title><rect x="955.8" y="1989" width="1.0" height="15.0" fill="rgb(220,132,12)" rx="2" ry="2" />
<text  x="958.82" y="1999.5" ></text>
</g>
<g >
<title>rb_erase (3 samples, 0.05%)</title><rect x="301.1" y="1461" width="0.5" height="15.0" fill="rgb(213,84,43)" rx="2" ry="2" />
<text  x="304.05" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (1 samples, 0.02%)</title><rect x="624.7" y="1925" width="0.2" height="15.0" fill="rgb(244,7,24)" rx="2" ry="2" />
<text  x="627.68" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="363.8" y="1957" width="0.2" height="15.0" fill="rgb(229,149,54)" rx="2" ry="2" />
<text  x="366.84" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (2 samples, 0.03%)</title><rect x="219.7" y="2021" width="0.4" height="15.0" fill="rgb(241,229,14)" rx="2" ry="2" />
<text  x="222.70" y="2031.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6 samples, 0.10%)</title><rect x="445.6" y="1989" width="1.2" height="15.0" fill="rgb(240,79,48)" rx="2" ry="2" />
<text  x="448.59" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (1 samples, 0.02%)</title><rect x="231.3" y="2005" width="0.2" height="15.0" fill="rgb(251,155,39)" rx="2" ry="2" />
<text  x="234.35" y="2015.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1136.9" y="1973" width="0.2" height="15.0" fill="rgb(231,99,13)" rx="2" ry="2" />
<text  x="1139.88" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="1138.3" y="1957" width="0.4" height="15.0" fill="rgb(221,136,28)" rx="2" ry="2" />
<text  x="1141.27" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1134.5" y="2005" width="0.2" height="15.0" fill="rgb(227,71,27)" rx="2" ry="2" />
<text  x="1137.51" y="2015.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (58 samples, 0.97%)</title><rect x="20.3" y="2037" width="11.4" height="15.0" fill="rgb(231,28,6)" rx="2" ry="2" />
<text  x="23.27" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.03%)</title><rect x="121.6" y="101" width="0.4" height="15.0" fill="rgb(236,58,23)" rx="2" ry="2" />
<text  x="124.56" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="208.8" y="1941" width="0.2" height="15.0" fill="rgb(237,77,44)" rx="2" ry="2" />
<text  x="211.84" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::getSize (1 samples, 0.02%)</title><rect x="1113.6" y="2053" width="0.2" height="15.0" fill="rgb(210,177,24)" rx="2" ry="2" />
<text  x="1116.58" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="849.4" y="2005" width="0.4" height="15.0" fill="rgb(209,218,10)" rx="2" ry="2" />
<text  x="852.39" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="261" width="51.8" height="15.0" fill="rgb(208,212,4)" rx="2" ry="2" />
<text  x="73.42" y="271.5" >[unkn..</text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (7 samples, 0.12%)</title><rect x="713.5" y="1893" width="1.4" height="15.0" fill="rgb(217,103,45)" rx="2" ry="2" />
<text  x="716.54" y="1903.5" ></text>
</g>
<g >
<title>__clock_gettime (6 samples, 0.10%)</title><rect x="1187.2" y="2037" width="1.2" height="15.0" fill="rgb(212,74,18)" rx="2" ry="2" />
<text  x="1190.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (259 samples, 4.33%)</title><rect x="70.4" y="101" width="51.2" height="15.0" fill="rgb(210,196,24)" rx="2" ry="2" />
<text  x="73.42" y="111.5" >[unkn..</text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="1096.4" y="1621" width="0.4" height="15.0" fill="rgb(224,221,44)" rx="2" ry="2" />
<text  x="1099.41" y="1631.5" ></text>
</g>
<g >
<title>__kmalloc (2 samples, 0.03%)</title><rect x="262.3" y="1893" width="0.4" height="15.0" fill="rgb(226,215,4)" rx="2" ry="2" />
<text  x="265.35" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="205.9" y="1973" width="0.6" height="15.0" fill="rgb(222,52,50)" rx="2" ry="2" />
<text  x="208.88" y="1983.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.03%)</title><rect x="938.2" y="1893" width="0.4" height="15.0" fill="rgb(236,36,32)" rx="2" ry="2" />
<text  x="941.24" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="305.0" y="1685" width="1.2" height="15.0" fill="rgb(206,53,4)" rx="2" ry="2" />
<text  x="308.00" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="195.0" y="2021" width="0.4" height="15.0" fill="rgb(250,11,32)" rx="2" ry="2" />
<text  x="198.02" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (8 samples, 0.13%)</title><rect x="672.9" y="2037" width="1.5" height="15.0" fill="rgb(245,162,40)" rx="2" ry="2" />
<text  x="675.86" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="775.5" y="1909" width="0.2" height="15.0" fill="rgb(235,124,28)" rx="2" ry="2" />
<text  x="778.54" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="439.3" y="2021" width="0.4" height="15.0" fill="rgb(217,197,10)" rx="2" ry="2" />
<text  x="442.27" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="470.1" y="1989" width="0.2" height="15.0" fill="rgb(219,156,22)" rx="2" ry="2" />
<text  x="473.07" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="852.9" y="1973" width="0.2" height="15.0" fill="rgb(223,212,15)" rx="2" ry="2" />
<text  x="855.94" y="1983.5" ></text>
</g>
<g >
<title>skb_release_all (18 samples, 0.30%)</title><rect x="297.3" y="1445" width="3.6" height="15.0" fill="rgb(215,229,0)" rx="2" ry="2" />
<text  x="300.30" y="1455.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="856.7" y="1973" width="0.2" height="15.0" fill="rgb(230,120,1)" rx="2" ry="2" />
<text  x="859.69" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1154.5" y="2037" width="0.2" height="15.0" fill="rgb(243,87,46)" rx="2" ry="2" />
<text  x="1157.46" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="618.0" y="1893" width="0.2" height="15.0" fill="rgb(235,20,46)" rx="2" ry="2" />
<text  x="620.97" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSending (7 samples, 0.12%)</title><rect x="1130.0" y="2053" width="1.4" height="15.0" fill="rgb(206,213,32)" rx="2" ry="2" />
<text  x="1132.97" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (3 samples, 0.05%)</title><rect x="77.3" y="37" width="0.6" height="15.0" fill="rgb(249,194,23)" rx="2" ry="2" />
<text  x="80.33" y="47.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="294.1" y="1445" width="0.2" height="15.0" fill="rgb(237,96,45)" rx="2" ry="2" />
<text  x="297.14" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1161.4" y="2053" width="0.2" height="15.0" fill="rgb(235,55,16)" rx="2" ry="2" />
<text  x="1164.37" y="2063.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="169.9" y="1941" width="0.2" height="15.0" fill="rgb(207,49,21)" rx="2" ry="2" />
<text  x="172.94" y="1951.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (45 samples, 0.75%)</title><rect x="293.7" y="1717" width="8.9" height="15.0" fill="rgb(249,105,13)" rx="2" ry="2" />
<text  x="296.74" y="1727.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="133.6" y="1989" width="0.4" height="15.0" fill="rgb(235,207,2)" rx="2" ry="2" />
<text  x="136.61" y="1999.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="538.0" y="1973" width="0.2" height="15.0" fill="rgb(218,72,19)" rx="2" ry="2" />
<text  x="541.00" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1525" width="51.8" height="15.0" fill="rgb(246,227,3)" rx="2" ry="2" />
<text  x="73.42" y="1535.5" >[unkn..</text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="116.6" y="37" width="0.2" height="15.0" fill="rgb(211,106,21)" rx="2" ry="2" />
<text  x="119.63" y="47.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="248.9" y="2037" width="0.2" height="15.0" fill="rgb(217,229,17)" rx="2" ry="2" />
<text  x="251.92" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (247 samples, 4.13%)</title><rect x="553.0" y="2005" width="48.8" height="15.0" fill="rgb(208,30,20)" rx="2" ry="2" />
<text  x="556.01" y="2015.5" >[unk..</text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="566.2" y="1957" width="0.4" height="15.0" fill="rgb(215,44,44)" rx="2" ry="2" />
<text  x="569.23" y="1967.5" ></text>
</g>
<g >
<title>tcp_poll (13 samples, 0.22%)</title><rect x="332.1" y="1893" width="2.5" height="15.0" fill="rgb(224,131,17)" rx="2" ry="2" />
<text  x="335.05" y="1903.5" ></text>
</g>
<g >
<title>process_backlog (44 samples, 0.74%)</title><rect x="293.9" y="1653" width="8.7" height="15.0" fill="rgb(217,204,42)" rx="2" ry="2" />
<text  x="296.94" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1909" width="51.8" height="15.0" fill="rgb(237,143,20)" rx="2" ry="2" />
<text  x="73.42" y="1919.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (2 samples, 0.03%)</title><rect x="402.3" y="1941" width="0.4" height="15.0" fill="rgb(253,148,16)" rx="2" ry="2" />
<text  x="405.35" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;void  (42 samples, 0.70%)</title><rect x="771.2" y="1973" width="8.3" height="15.0" fill="rgb(250,180,49)" rx="2" ry="2" />
<text  x="774.19" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (5 samples, 0.08%)</title><rect x="427.6" y="2005" width="1.0" height="15.0" fill="rgb(214,132,19)" rx="2" ry="2" />
<text  x="430.62" y="2015.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (10 samples, 0.17%)</title><rect x="173.1" y="1925" width="2.0" height="15.0" fill="rgb(227,123,20)" rx="2" ry="2" />
<text  x="176.10" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="170.1" y="1893" width="0.2" height="15.0" fill="rgb(234,181,9)" rx="2" ry="2" />
<text  x="173.14" y="1903.5" ></text>
</g>
<g >
<title>__snprintf_chk@plt (1 samples, 0.02%)</title><rect x="326.1" y="2037" width="0.2" height="15.0" fill="rgb(228,211,22)" rx="2" ry="2" />
<text  x="329.13" y="2047.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (9 samples, 0.15%)</title><rect x="1162.9" y="2053" width="1.8" height="15.0" fill="rgb(244,23,35)" rx="2" ry="2" />
<text  x="1165.95" y="2063.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="526.2" y="1957" width="0.7" height="15.0" fill="rgb(218,140,34)" rx="2" ry="2" />
<text  x="529.15" y="1967.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="1144.8" y="1957" width="0.2" height="15.0" fill="rgb(226,83,15)" rx="2" ry="2" />
<text  x="1147.78" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (11 samples, 0.18%)</title><rect x="569.8" y="1973" width="2.2" height="15.0" fill="rgb(248,69,51)" rx="2" ry="2" />
<text  x="572.79" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="444.6" y="2005" width="0.2" height="15.0" fill="rgb(245,185,52)" rx="2" ry="2" />
<text  x="447.60" y="2015.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="300.9" y="1445" width="0.2" height="15.0" fill="rgb(250,73,44)" rx="2" ry="2" />
<text  x="303.85" y="1455.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="610.5" y="1957" width="0.4" height="15.0" fill="rgb(249,31,8)" rx="2" ry="2" />
<text  x="613.47" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.42%)</title><rect x="13.6" y="2021" width="4.9" height="15.0" fill="rgb(236,216,4)" rx="2" ry="2" />
<text  x="16.55" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (4 samples, 0.07%)</title><rect x="502.7" y="1909" width="0.7" height="15.0" fill="rgb(208,94,12)" rx="2" ry="2" />
<text  x="505.65" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.05%)</title><rect x="957.2" y="1989" width="0.6" height="15.0" fill="rgb(227,226,27)" rx="2" ry="2" />
<text  x="960.20" y="1999.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="123.5" y="2005" width="0.2" height="15.0" fill="rgb(235,35,13)" rx="2" ry="2" />
<text  x="126.54" y="2015.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="1112.0" y="2053" width="0.4" height="15.0" fill="rgb(224,128,22)" rx="2" ry="2" />
<text  x="1115.00" y="2063.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="963.7" y="1989" width="0.4" height="15.0" fill="rgb(210,15,10)" rx="2" ry="2" />
<text  x="966.71" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (5 samples, 0.08%)</title><rect x="661.4" y="1973" width="1.0" height="15.0" fill="rgb(229,226,23)" rx="2" ry="2" />
<text  x="664.41" y="1983.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="994.5" y="2005" width="0.2" height="15.0" fill="rgb(237,83,1)" rx="2" ry="2" />
<text  x="997.52" y="2015.5" ></text>
</g>
<g >
<title>sys_recvfrom (3 samples, 0.05%)</title><rect x="1101.3" y="2021" width="0.6" height="15.0" fill="rgb(233,8,16)" rx="2" ry="2" />
<text  x="1104.34" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (261 samples, 4.37%)</title><rect x="70.4" y="117" width="51.6" height="15.0" fill="rgb(254,84,9)" rx="2" ry="2" />
<text  x="73.42" y="127.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="859.1" y="2021" width="0.2" height="15.0" fill="rgb(231,133,7)" rx="2" ry="2" />
<text  x="862.06" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (6 samples, 0.10%)</title><rect x="365.8" y="1957" width="1.2" height="15.0" fill="rgb(244,157,44)" rx="2" ry="2" />
<text  x="368.82" y="1967.5" ></text>
</g>
<g >
<title>tcp_push (146 samples, 2.44%)</title><rect x="285.1" y="1877" width="28.8" height="15.0" fill="rgb(248,25,8)" rx="2" ry="2" />
<text  x="288.06" y="1887.5" >tc..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="122.0" y="69" width="0.2" height="15.0" fill="rgb(251,111,13)" rx="2" ry="2" />
<text  x="124.96" y="79.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="367.2" y="1941" width="0.8" height="15.0" fill="rgb(253,190,37)" rx="2" ry="2" />
<text  x="370.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="562.9" y="1989" width="0.2" height="15.0" fill="rgb(240,142,18)" rx="2" ry="2" />
<text  x="565.88" y="1999.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (10 samples, 0.17%)</title><rect x="516.9" y="1957" width="1.9" height="15.0" fill="rgb(218,167,29)" rx="2" ry="2" />
<text  x="519.87" y="1967.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="354.4" y="1941" width="0.2" height="15.0" fill="rgb(248,194,27)" rx="2" ry="2" />
<text  x="357.36" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::multiOpEnd (4 samples, 0.07%)</title><rect x="549.8" y="2037" width="0.8" height="15.0" fill="rgb(208,100,8)" rx="2" ry="2" />
<text  x="552.85" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="708.0" y="1909" width="0.2" height="15.0" fill="rgb(224,15,51)" rx="2" ry="2" />
<text  x="711.01" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (22 samples, 0.37%)</title><rect x="586.6" y="1973" width="4.3" height="15.0" fill="rgb(205,49,29)" rx="2" ry="2" />
<text  x="589.57" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="119.0" y="37" width="0.4" height="15.0" fill="rgb(232,77,7)" rx="2" ry="2" />
<text  x="122.00" y="47.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (4 samples, 0.07%)</title><rect x="147.4" y="1925" width="0.8" height="15.0" fill="rgb(240,159,6)" rx="2" ry="2" />
<text  x="150.43" y="1935.5" ></text>
</g>
<g >
<title>__sys_sendmsg (315 samples, 5.27%)</title><rect x="258.0" y="1973" width="62.2" height="15.0" fill="rgb(251,97,30)" rx="2" ry="2" />
<text  x="261.01" y="1983.5" >__sys_..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="211.2" y="1909" width="0.2" height="15.0" fill="rgb(210,4,22)" rx="2" ry="2" />
<text  x="214.21" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (43 samples, 0.72%)</title><rect x="916.1" y="1941" width="8.5" height="15.0" fill="rgb(210,66,31)" rx="2" ry="2" />
<text  x="919.13" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;folly::fibers::FiberManager*, folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="630.8" y="1973" width="0.2" height="15.0" fill="rgb(246,195,8)" rx="2" ry="2" />
<text  x="633.80" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::readDataAvailable (1 samples, 0.02%)</title><rect x="30.7" y="1989" width="0.2" height="15.0" fill="rgb(231,143,31)" rx="2" ry="2" />
<text  x="33.73" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="634.0" y="2021" width="1.1" height="15.0" fill="rgb(224,179,3)" rx="2" ry="2" />
<text  x="636.96" y="2031.5" ></text>
</g>
<g >
<title>__cxa_get_globals (1 samples, 0.02%)</title><rect x="421.1" y="1877" width="0.2" height="15.0" fill="rgb(215,169,2)" rx="2" ry="2" />
<text  x="424.10" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="448.2" y="2005" width="0.2" height="15.0" fill="rgb(251,91,39)" rx="2" ry="2" />
<text  x="451.16" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="854.7" y="1989" width="0.8" height="15.0" fill="rgb(215,42,37)" rx="2" ry="2" />
<text  x="857.72" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="212.2" y="1925" width="0.2" height="15.0" fill="rgb(238,6,1)" rx="2" ry="2" />
<text  x="215.20" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (1 samples, 0.02%)</title><rect x="618.8" y="1925" width="0.2" height="15.0" fill="rgb(250,32,22)" rx="2" ry="2" />
<text  x="621.76" y="1935.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="12.4" y="1829" width="0.2" height="15.0" fill="rgb(229,73,7)" rx="2" ry="2" />
<text  x="15.37" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (7 samples, 0.12%)</title><rect x="146.0" y="1925" width="1.4" height="15.0" fill="rgb(208,29,31)" rx="2" ry="2" />
<text  x="149.05" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (30 samples, 0.50%)</title><rect x="142.5" y="1957" width="5.9" height="15.0" fill="rgb(250,31,28)" rx="2" ry="2" />
<text  x="145.49" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="612.6" y="1877" width="0.4" height="15.0" fill="rgb(210,73,8)" rx="2" ry="2" />
<text  x="615.64" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1055.3" y="1909" width="0.2" height="15.0" fill="rgb(237,79,51)" rx="2" ry="2" />
<text  x="1058.33" y="1919.5" ></text>
</g>
<g >
<title>rb_first (3 samples, 0.05%)</title><rect x="301.6" y="1461" width="0.6" height="15.0" fill="rgb(210,203,7)" rx="2" ry="2" />
<text  x="304.64" y="1471.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (1 samples, 0.02%)</title><rect x="865.8" y="2005" width="0.2" height="15.0" fill="rgb(229,8,0)" rx="2" ry="2" />
<text  x="868.78" y="2015.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="1138.1" y="1957" width="0.2" height="15.0" fill="rgb(212,65,17)" rx="2" ry="2" />
<text  x="1141.07" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (4 samples, 0.07%)</title><rect x="1053.2" y="1861" width="0.8" height="15.0" fill="rgb(230,25,8)" rx="2" ry="2" />
<text  x="1056.16" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (13 samples, 0.22%)</title><rect x="159.7" y="1973" width="2.5" height="15.0" fill="rgb(221,57,7)" rx="2" ry="2" />
<text  x="162.67" y="1983.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (4 samples, 0.07%)</title><rect x="613.8" y="1877" width="0.8" height="15.0" fill="rgb(207,85,37)" rx="2" ry="2" />
<text  x="616.82" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="201.1" y="1973" width="0.6" height="15.0" fill="rgb(232,226,18)" rx="2" ry="2" />
<text  x="204.14" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (3 samples, 0.05%)</title><rect x="581.8" y="1989" width="0.6" height="15.0" fill="rgb(247,57,34)" rx="2" ry="2" />
<text  x="584.83" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="615.4" y="1925" width="0.2" height="15.0" fill="rgb(214,49,26)" rx="2" ry="2" />
<text  x="618.40" y="1935.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.08%)</title><rect x="526.9" y="1989" width="1.0" height="15.0" fill="rgb(223,132,23)" rx="2" ry="2" />
<text  x="529.94" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (1 samples, 0.02%)</title><rect x="657.9" y="1973" width="0.2" height="15.0" fill="rgb(252,94,48)" rx="2" ry="2" />
<text  x="660.85" y="1983.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="318.4" y="1877" width="0.2" height="15.0" fill="rgb(243,198,48)" rx="2" ry="2" />
<text  x="321.43" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="424.1" y="1973" width="0.2" height="15.0" fill="rgb(233,135,45)" rx="2" ry="2" />
<text  x="427.07" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (3 samples, 0.05%)</title><rect x="419.3" y="1909" width="0.6" height="15.0" fill="rgb(206,74,1)" rx="2" ry="2" />
<text  x="422.33" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (2 samples, 0.03%)</title><rect x="611.8" y="1941" width="0.4" height="15.0" fill="rgb(236,84,11)" rx="2" ry="2" />
<text  x="614.85" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (4 samples, 0.07%)</title><rect x="186.9" y="2005" width="0.8" height="15.0" fill="rgb(241,3,21)" rx="2" ry="2" />
<text  x="189.92" y="2015.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (20 samples, 0.33%)</title><rect x="408.9" y="1973" width="3.9" height="15.0" fill="rgb(208,205,16)" rx="2" ry="2" />
<text  x="411.86" y="1983.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (2 samples, 0.03%)</title><rect x="992.1" y="2037" width="0.4" height="15.0" fill="rgb(249,137,1)" rx="2" ry="2" />
<text  x="995.15" y="2047.5" ></text>
</g>
<g >
<title>std::ref&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="763.5" y="1925" width="0.4" height="15.0" fill="rgb(211,107,42)" rx="2" ry="2" />
<text  x="766.49" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (5 samples, 0.08%)</title><rect x="628.2" y="2005" width="1.0" height="15.0" fill="rgb(225,35,49)" rx="2" ry="2" />
<text  x="631.24" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="615.2" y="1925" width="0.2" height="15.0" fill="rgb(228,61,27)" rx="2" ry="2" />
<text  x="618.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="741" width="51.8" height="15.0" fill="rgb(215,154,48)" rx="2" ry="2" />
<text  x="73.42" y="751.5" >[unkn..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="133.0" y="1957" width="0.2" height="15.0" fill="rgb(250,26,10)" rx="2" ry="2" />
<text  x="136.02" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (3 samples, 0.05%)</title><rect x="618.4" y="1941" width="0.6" height="15.0" fill="rgb(213,28,27)" rx="2" ry="2" />
<text  x="621.36" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="265.3" y="1861" width="0.4" height="15.0" fill="rgb(226,169,54)" rx="2" ry="2" />
<text  x="268.31" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::ScopeGuardImplBase::ScopeGuardImplBase (1 samples, 0.02%)</title><rect x="175.3" y="1893" width="0.2" height="15.0" fill="rgb(247,90,3)" rx="2" ry="2" />
<text  x="178.27" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (2 samples, 0.03%)</title><rect x="551.8" y="2037" width="0.4" height="15.0" fill="rgb(251,38,20)" rx="2" ry="2" />
<text  x="554.82" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (8 samples, 0.13%)</title><rect x="442.2" y="1941" width="1.6" height="15.0" fill="rgb(227,73,8)" rx="2" ry="2" />
<text  x="445.23" y="1951.5" ></text>
</g>
<g >
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="1092.3" y="1477" width="0.6" height="15.0" fill="rgb(244,57,2)" rx="2" ry="2" />
<text  x="1095.26" y="1487.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="18.3" y="1845" width="0.2" height="15.0" fill="rgb(242,13,34)" rx="2" ry="2" />
<text  x="21.29" y="1855.5" ></text>
</g>
<g >
<title>cpu_load_update (1 samples, 0.02%)</title><rect x="1189.6" y="1893" width="0.2" height="15.0" fill="rgb(211,112,0)" rx="2" ry="2" />
<text  x="1192.61" y="1903.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="923.2" y="1877" width="0.2" height="15.0" fill="rgb(218,96,50)" rx="2" ry="2" />
<text  x="926.24" y="1887.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="205.3" y="1957" width="0.2" height="15.0" fill="rgb(212,219,41)" rx="2" ry="2" />
<text  x="208.28" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (1 samples, 0.02%)</title><rect x="337.6" y="2021" width="0.2" height="15.0" fill="rgb(223,89,18)" rx="2" ry="2" />
<text  x="340.58" y="2031.5" ></text>
</g>
<g >
<title>rb_erase (11 samples, 0.18%)</title><rect x="1092.9" y="1509" width="2.1" height="15.0" fill="rgb(237,195,32)" rx="2" ry="2" />
<text  x="1095.85" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.33%)</title><rect x="675.4" y="2005" width="4.0" height="15.0" fill="rgb(249,1,0)" rx="2" ry="2" />
<text  x="678.43" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="437" width="51.8" height="15.0" fill="rgb(222,104,13)" rx="2" ry="2" />
<text  x="73.42" y="447.5" >[unkn..</text>
</g>
<g >
<title>[unknown] (262 samples, 4.38%)</title><rect x="70.4" y="1029" width="51.8" height="15.0" fill="rgb(215,157,14)" rx="2" ry="2" />
<text  x="73.42" y="1039.5" >[unkn..</text>
</g>
</g>
</svg>
