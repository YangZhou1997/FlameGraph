<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="944.3" y="1861" width="0.2" height="15.0" fill="rgb(228,117,46)" rx="2" ry="2" />
<text  x="947.30" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="1087.6" y="1829" width="0.6" height="15.0" fill="rgb(222,7,53)" rx="2" ry="2" />
<text  x="1090.58" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="548.9" y="1765" width="0.2" height="15.0" fill="rgb(233,118,17)" rx="2" ry="2" />
<text  x="551.89" y="1775.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="554.7" y="1909" width="0.2" height="15.0" fill="rgb(225,188,49)" rx="2" ry="2" />
<text  x="557.72" y="1919.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="999.0" y="1941" width="0.2" height="15.0" fill="rgb(251,218,8)" rx="2" ry="2" />
<text  x="1002.03" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="84.3" y="1941" width="0.8" height="15.0" fill="rgb(232,154,24)" rx="2" ry="2" />
<text  x="87.25" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="631.6" y="1925" width="0.2" height="15.0" fill="rgb(213,125,42)" rx="2" ry="2" />
<text  x="634.59" y="1935.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.09%)</title><rect x="13.6" y="2005" width="1.0" height="15.0" fill="rgb(220,179,5)" rx="2" ry="2" />
<text  x="16.62" y="2015.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.20%)</title><rect x="1023.8" y="2037" width="2.4" height="15.0" fill="rgb(230,128,27)" rx="2" ry="2" />
<text  x="1026.79" y="2047.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="273.8" y="1829" width="0.2" height="15.0" fill="rgb(234,227,41)" rx="2" ry="2" />
<text  x="276.81" y="1839.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="552.9" y="1973" width="0.2" height="15.0" fill="rgb(238,21,18)" rx="2" ry="2" />
<text  x="555.91" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="230.5" y="1701" width="0.2" height="15.0" fill="rgb(246,189,1)" rx="2" ry="2" />
<text  x="233.55" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="539.2" y="1925" width="0.2" height="15.0" fill="rgb(249,81,1)" rx="2" ry="2" />
<text  x="542.23" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="593.0" y="1877" width="0.6" height="15.0" fill="rgb(230,132,45)" rx="2" ry="2" />
<text  x="595.96" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1145.9" y="2005" width="0.2" height="15.0" fill="rgb(240,197,6)" rx="2" ry="2" />
<text  x="1148.93" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1148.7" y="1877" width="0.2" height="15.0" fill="rgb(206,116,15)" rx="2" ry="2" />
<text  x="1151.75" y="1887.5" ></text>
</g>
<g >
<title>[mcrouter] (97 samples, 1.65%)</title><rect x="224.7" y="2021" width="19.5" height="15.0" fill="rgb(210,26,33)" rx="2" ry="2" />
<text  x="227.71" y="2031.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="464.2" y="1653" width="0.2" height="15.0" fill="rgb(243,160,54)" rx="2" ry="2" />
<text  x="467.17" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1082.1" y="1749" width="0.2" height="15.0" fill="rgb(219,2,33)" rx="2" ry="2" />
<text  x="1085.14" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(215,33,16)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="853.3" y="1941" width="0.2" height="15.0" fill="rgb(248,67,36)" rx="2" ry="2" />
<text  x="856.35" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="875.5" y="1893" width="0.2" height="15.0" fill="rgb(235,152,31)" rx="2" ry="2" />
<text  x="878.48" y="1903.5" ></text>
</g>
<g >
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1087.4" y="1909" width="0.2" height="15.0" fill="rgb(241,29,25)" rx="2" ry="2" />
<text  x="1090.37" y="1919.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="190.1" y="1941" width="0.2" height="15.0" fill="rgb(239,225,38)" rx="2" ry="2" />
<text  x="193.10" y="1951.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1149.2" y="1669" width="0.2" height="15.0" fill="rgb(233,214,37)" rx="2" ry="2" />
<text  x="1152.15" y="1679.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="690.6" y="1957" width="0.2" height="15.0" fill="rgb(243,53,9)" rx="2" ry="2" />
<text  x="693.55" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4 samples, 0.07%)</title><rect x="1177.1" y="1973" width="0.8" height="15.0" fill="rgb(222,72,22)" rx="2" ry="2" />
<text  x="1180.12" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (332 samples, 5.66%)</title><rect x="123.1" y="2021" width="66.8" height="15.0" fill="rgb(207,42,13)" rx="2" ry="2" />
<text  x="126.09" y="2031.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="926.2" y="2005" width="0.4" height="15.0" fill="rgb(245,34,34)" rx="2" ry="2" />
<text  x="929.19" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1149.2" y="1797" width="0.2" height="15.0" fill="rgb(254,167,34)" rx="2" ry="2" />
<text  x="1152.15" y="1807.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (10 samples, 0.17%)</title><rect x="255.3" y="1941" width="2.0" height="15.0" fill="rgb(246,15,10)" rx="2" ry="2" />
<text  x="258.30" y="1951.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.02%)</title><rect x="976.5" y="1941" width="0.2" height="15.0" fill="rgb(211,151,11)" rx="2" ry="2" />
<text  x="979.50" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="265.2" y="1653" width="0.2" height="15.0" fill="rgb(209,220,3)" rx="2" ry="2" />
<text  x="268.16" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="405" width="28.8" height="15.0" fill="rgb(236,97,53)" rx="2" ry="2" />
<text  x="127.10" y="415.5" >[u..</text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="258.5" y="1893" width="0.4" height="15.0" fill="rgb(239,193,25)" rx="2" ry="2" />
<text  x="261.52" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1148.7" y="1845" width="0.2" height="15.0" fill="rgb(253,152,48)" rx="2" ry="2" />
<text  x="1151.75" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="593.2" y="1781" width="0.4" height="15.0" fill="rgb(205,21,33)" rx="2" ry="2" />
<text  x="596.16" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="492.3" y="1765" width="0.2" height="15.0" fill="rgb(213,67,47)" rx="2" ry="2" />
<text  x="495.34" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="925.4" y="1989" width="0.2" height="15.0" fill="rgb(207,152,27)" rx="2" ry="2" />
<text  x="928.39" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="633.4" y="1877" width="0.2" height="15.0" fill="rgb(250,144,11)" rx="2" ry="2" />
<text  x="636.40" y="1887.5" ></text>
</g>
<g >
<title>memmove@plt (1 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(234,60,47)" rx="2" ry="2" />
<text  x="1192.60" y="2063.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="1085.0" y="1749" width="0.2" height="15.0" fill="rgb(222,188,12)" rx="2" ry="2" />
<text  x="1087.96" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1077" width="29.8" height="15.0" fill="rgb(248,39,26)" rx="2" ry="2" />
<text  x="127.10" y="1087.5" >[u..</text>
</g>
<g >
<title>copy_page_to_iter (6 samples, 0.10%)</title><rect x="1096.8" y="1909" width="1.2" height="15.0" fill="rgb(244,187,20)" rx="2" ry="2" />
<text  x="1099.83" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (18 samples, 0.31%)</title><rect x="932.8" y="1973" width="3.7" height="15.0" fill="rgb(239,31,32)" rx="2" ry="2" />
<text  x="935.83" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1181.1" y="2037" width="0.2" height="15.0" fill="rgb(221,51,15)" rx="2" ry="2" />
<text  x="1184.15" y="2047.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::FiberImpl*&gt; (1 samples, 0.02%)</title><rect x="990.6" y="1877" width="0.2" height="15.0" fill="rgb(231,52,15)" rx="2" ry="2" />
<text  x="993.58" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="64.1" y="1877" width="0.2" height="15.0" fill="rgb(240,30,17)" rx="2" ry="2" />
<text  x="67.13" y="1887.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="884.3" y="1845" width="0.2" height="15.0" fill="rgb(207,157,5)" rx="2" ry="2" />
<text  x="887.33" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="721.3" y="1717" width="0.2" height="15.0" fill="rgb(232,46,54)" rx="2" ry="2" />
<text  x="724.34" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="841.7" y="1909" width="0.2" height="15.0" fill="rgb(236,86,13)" rx="2" ry="2" />
<text  x="844.67" y="1919.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="76.8" y="1845" width="0.2" height="15.0" fill="rgb(221,142,50)" rx="2" ry="2" />
<text  x="79.81" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="516.7" y="1541" width="0.2" height="15.0" fill="rgb(215,101,51)" rx="2" ry="2" />
<text  x="519.69" y="1551.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.14%)</title><rect x="10.6" y="1877" width="1.6" height="15.0" fill="rgb(221,214,34)" rx="2" ry="2" />
<text  x="13.60" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="197" width="28.0" height="15.0" fill="rgb(235,39,18)" rx="2" ry="2" />
<text  x="127.30" y="207.5" >[..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="71.0" y="1685" width="0.2" height="15.0" fill="rgb(233,200,39)" rx="2" ry="2" />
<text  x="73.97" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="235.0" y="1765" width="0.2" height="15.0" fill="rgb(205,175,13)" rx="2" ry="2" />
<text  x="237.97" y="1775.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="674.1" y="1957" width="0.2" height="15.0" fill="rgb(240,75,32)" rx="2" ry="2" />
<text  x="677.05" y="1967.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="831.0" y="1493" width="0.2" height="15.0" fill="rgb(239,148,41)" rx="2" ry="2" />
<text  x="834.01" y="1503.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="118.7" y="2005" width="0.4" height="15.0" fill="rgb(227,142,42)" rx="2" ry="2" />
<text  x="121.66" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="539.6" y="1925" width="0.4" height="15.0" fill="rgb(221,111,44)" rx="2" ry="2" />
<text  x="542.63" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="76.8" y="1829" width="0.2" height="15.0" fill="rgb(218,176,43)" rx="2" ry="2" />
<text  x="79.81" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="56.7" y="1893" width="0.2" height="15.0" fill="rgb(224,6,26)" rx="2" ry="2" />
<text  x="59.68" y="1903.5" ></text>
</g>
<g >
<title>sys_fcntl (1 samples, 0.02%)</title><rect x="563.4" y="1957" width="0.2" height="15.0" fill="rgb(208,62,53)" rx="2" ry="2" />
<text  x="566.38" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (2 samples, 0.03%)</title><rect x="595.6" y="2005" width="0.4" height="15.0" fill="rgb(243,98,2)" rx="2" ry="2" />
<text  x="598.57" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1168.7" y="1973" width="0.2" height="15.0" fill="rgb(218,177,13)" rx="2" ry="2" />
<text  x="1171.67" y="1983.5" ></text>
</g>
<g >
<title>__raise_softirq_irqoff (1 samples, 0.02%)</title><rect x="256.5" y="1733" width="0.2" height="15.0" fill="rgb(252,139,1)" rx="2" ry="2" />
<text  x="259.50" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (6 samples, 0.10%)</title><rect x="843.1" y="1941" width="1.2" height="15.0" fill="rgb(230,196,15)" rx="2" ry="2" />
<text  x="846.08" y="1951.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (4 samples, 0.07%)</title><rect x="206.2" y="1989" width="0.8" height="15.0" fill="rgb(228,221,53)" rx="2" ry="2" />
<text  x="209.20" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="255.1" y="1781" width="0.2" height="15.0" fill="rgb(214,9,7)" rx="2" ry="2" />
<text  x="258.10" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="545.3" y="1909" width="0.8" height="15.0" fill="rgb(254,124,42)" rx="2" ry="2" />
<text  x="548.27" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="305.4" y="1765" width="0.2" height="15.0" fill="rgb(239,3,24)" rx="2" ry="2" />
<text  x="308.40" y="1775.5" ></text>
</g>
<g >
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="1085.8" y="1909" width="0.6" height="15.0" fill="rgb(218,214,19)" rx="2" ry="2" />
<text  x="1088.76" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1054.4" y="1973" width="0.2" height="15.0" fill="rgb(238,84,37)" rx="2" ry="2" />
<text  x="1057.37" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (6 samples, 0.10%)</title><rect x="602.6" y="1861" width="1.2" height="15.0" fill="rgb(228,149,51)" rx="2" ry="2" />
<text  x="605.62" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.09%)</title><rect x="614.7" y="2005" width="1.0" height="15.0" fill="rgb(247,162,11)" rx="2" ry="2" />
<text  x="617.69" y="2015.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="345.8" y="1637" width="0.3" height="15.0" fill="rgb(232,50,52)" rx="2" ry="2" />
<text  x="348.85" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1085.0" y="1829" width="0.2" height="15.0" fill="rgb(217,222,15)" rx="2" ry="2" />
<text  x="1087.96" y="1839.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="160.7" y="2005" width="0.2" height="15.0" fill="rgb(231,76,14)" rx="2" ry="2" />
<text  x="163.72" y="2015.5" ></text>
</g>
<g >
<title>tcp_established_options (8 samples, 0.14%)</title><rect x="819.7" y="1701" width="1.7" height="15.0" fill="rgb(229,73,46)" rx="2" ry="2" />
<text  x="822.74" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1072.7" y="1669" width="0.2" height="15.0" fill="rgb(241,148,19)" rx="2" ry="2" />
<text  x="1075.68" y="1679.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (8 samples, 0.14%)</title><rect x="10.6" y="1957" width="1.6" height="15.0" fill="rgb(251,28,18)" rx="2" ry="2" />
<text  x="13.60" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="520.1" y="1973" width="0.2" height="15.0" fill="rgb(212,31,12)" rx="2" ry="2" />
<text  x="523.11" y="1983.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="920.6" y="1701" width="0.2" height="15.0" fill="rgb(227,16,43)" rx="2" ry="2" />
<text  x="923.56" y="1711.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="865.8" y="1941" width="0.2" height="15.0" fill="rgb(208,202,17)" rx="2" ry="2" />
<text  x="868.82" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="925.4" y="1957" width="0.2" height="15.0" fill="rgb(238,187,29)" rx="2" ry="2" />
<text  x="928.39" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::isLoopCallbackScheduled (8 samples, 0.14%)</title><rect x="844.3" y="1941" width="1.6" height="15.0" fill="rgb(245,192,40)" rx="2" ry="2" />
<text  x="847.29" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="492.3" y="1717" width="0.2" height="15.0" fill="rgb(228,54,3)" rx="2" ry="2" />
<text  x="495.34" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="100.8" y="1989" width="0.2" height="15.0" fill="rgb(248,222,44)" rx="2" ry="2" />
<text  x="103.75" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1170.3" y="1957" width="0.2" height="15.0" fill="rgb(228,79,43)" rx="2" ry="2" />
<text  x="1173.28" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1253" width="29.8" height="15.0" fill="rgb(223,18,12)" rx="2" ry="2" />
<text  x="127.10" y="1263.5" >[u..</text>
</g>
<g >
<title>folly::RequestContext::saveContext (4 samples, 0.07%)</title><rect x="205.2" y="1989" width="0.8" height="15.0" fill="rgb(232,28,35)" rx="2" ry="2" />
<text  x="208.19" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="29.5" y="1989" width="0.2" height="15.0" fill="rgb(232,148,50)" rx="2" ry="2" />
<text  x="32.52" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1163.2" y="1925" width="0.2" height="15.0" fill="rgb(241,142,38)" rx="2" ry="2" />
<text  x="1166.24" y="1935.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (3 samples, 0.05%)</title><rect x="182.7" y="1893" width="0.6" height="15.0" fill="rgb(235,206,11)" rx="2" ry="2" />
<text  x="185.65" y="1903.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="886.7" y="1925" width="0.5" height="15.0" fill="rgb(219,24,28)" rx="2" ry="2" />
<text  x="889.75" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;folly::IOBuf&gt; &gt; (4 samples, 0.07%)</title><rect x="887.6" y="1941" width="0.8" height="15.0" fill="rgb(205,24,30)" rx="2" ry="2" />
<text  x="890.55" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="532.2" y="1973" width="0.8" height="15.0" fill="rgb(231,43,47)" rx="2" ry="2" />
<text  x="535.19" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="930.2" y="1957" width="0.2" height="15.0" fill="rgb(208,29,24)" rx="2" ry="2" />
<text  x="933.21" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="937.9" y="1893" width="0.2" height="15.0" fill="rgb(208,107,50)" rx="2" ry="2" />
<text  x="940.86" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="255.1" y="1749" width="0.2" height="15.0" fill="rgb(210,115,39)" rx="2" ry="2" />
<text  x="258.10" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="547.1" y="1941" width="0.2" height="15.0" fill="rgb(207,225,25)" rx="2" ry="2" />
<text  x="550.08" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (2 samples, 0.03%)</title><rect x="70.6" y="1845" width="0.4" height="15.0" fill="rgb(251,98,53)" rx="2" ry="2" />
<text  x="73.57" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="1152.0" y="2053" width="0.2" height="15.0" fill="rgb(230,190,29)" rx="2" ry="2" />
<text  x="1154.97" y="2063.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.02%)</title><rect x="212.8" y="2021" width="0.2" height="15.0" fill="rgb(220,118,46)" rx="2" ry="2" />
<text  x="215.84" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="454.7" y="1765" width="0.2" height="15.0" fill="rgb(218,229,17)" rx="2" ry="2" />
<text  x="457.71" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="597" width="28.8" height="15.0" fill="rgb(210,108,54)" rx="2" ry="2" />
<text  x="127.10" y="607.5" >[u..</text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="150.9" y="53" width="0.2" height="15.0" fill="rgb(253,187,40)" rx="2" ry="2" />
<text  x="153.86" y="63.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="283.9" y="1573" width="0.2" height="15.0" fill="rgb(235,78,28)" rx="2" ry="2" />
<text  x="286.87" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="230.5" y="1765" width="0.2" height="15.0" fill="rgb(248,166,3)" rx="2" ry="2" />
<text  x="233.55" y="1775.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (6 samples, 0.10%)</title><rect x="988.4" y="1909" width="1.2" height="15.0" fill="rgb(250,69,43)" rx="2" ry="2" />
<text  x="991.37" y="1919.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::dereference&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (2 samples, 0.03%)</title><rect x="526.1" y="1957" width="0.5" height="15.0" fill="rgb(218,0,8)" rx="2" ry="2" />
<text  x="529.15" y="1967.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="379.1" y="1893" width="0.2" height="15.0" fill="rgb(254,176,22)" rx="2" ry="2" />
<text  x="382.05" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (389 samples, 6.63%)</title><rect x="1042.3" y="2037" width="78.3" height="15.0" fill="rgb(218,94,5)" rx="2" ry="2" />
<text  x="1045.30" y="2047.5" >entry_SYS..</text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="434.0" y="1973" width="0.2" height="15.0" fill="rgb(220,97,36)" rx="2" ry="2" />
<text  x="436.99" y="1983.5" ></text>
</g>
<g >
<title>tcp_tso_segs (6 samples, 0.10%)</title><rect x="813.9" y="1685" width="1.2" height="15.0" fill="rgb(229,136,21)" rx="2" ry="2" />
<text  x="816.91" y="1695.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="188.5" y="1877" width="0.2" height="15.0" fill="rgb(242,170,14)" rx="2" ry="2" />
<text  x="191.49" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (3 samples, 0.05%)</title><rect x="545.5" y="1877" width="0.6" height="15.0" fill="rgb(237,124,53)" rx="2" ry="2" />
<text  x="548.47" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (5 samples, 0.09%)</title><rect x="616.7" y="1973" width="1.0" height="15.0" fill="rgb(223,113,3)" rx="2" ry="2" />
<text  x="619.70" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12 samples, 0.20%)</title><rect x="998.2" y="2005" width="2.4" height="15.0" fill="rgb(221,109,6)" rx="2" ry="2" />
<text  x="1001.23" y="2015.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6 samples, 0.10%)</title><rect x="440.2" y="1909" width="1.2" height="15.0" fill="rgb(254,26,7)" rx="2" ry="2" />
<text  x="443.23" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="721.3" y="1653" width="0.2" height="15.0" fill="rgb(246,121,17)" rx="2" ry="2" />
<text  x="724.34" y="1663.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="342.0" y="1573" width="0.2" height="15.0" fill="rgb(249,40,14)" rx="2" ry="2" />
<text  x="345.03" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1096.2" y="1829" width="0.2" height="15.0" fill="rgb(222,216,23)" rx="2" ry="2" />
<text  x="1099.23" y="1839.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_until&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(223,189,23)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.10%)</title><rect x="1141.5" y="2037" width="1.2" height="15.0" fill="rgb(250,47,45)" rx="2" ry="2" />
<text  x="1144.50" y="2047.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="317.3" y="1925" width="0.8" height="15.0" fill="rgb(207,47,19)" rx="2" ry="2" />
<text  x="320.27" y="1935.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (1 samples, 0.02%)</title><rect x="538.8" y="1973" width="0.2" height="15.0" fill="rgb(220,148,41)" rx="2" ry="2" />
<text  x="541.83" y="1983.5" ></text>
</g>
<g >
<title>non-virtual thunk to folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="869.0" y="1989" width="0.2" height="15.0" fill="rgb(253,91,42)" rx="2" ry="2" />
<text  x="872.04" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1181.1" y="1941" width="0.2" height="15.0" fill="rgb(247,59,25)" rx="2" ry="2" />
<text  x="1184.15" y="1951.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="961.6" y="1909" width="0.2" height="15.0" fill="rgb(253,66,42)" rx="2" ry="2" />
<text  x="964.61" y="1919.5" ></text>
</g>
<g >
<title>ip_copy_addrs (6 samples, 0.10%)</title><rect x="276.6" y="1813" width="1.2" height="15.0" fill="rgb(244,136,46)" rx="2" ry="2" />
<text  x="279.63" y="1823.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="156.3" y="1925" width="0.4" height="15.0" fill="rgb(224,63,4)" rx="2" ry="2" />
<text  x="159.29" y="1935.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (14 samples, 0.24%)</title><rect x="302.0" y="1813" width="2.8" height="15.0" fill="rgb(246,113,18)" rx="2" ry="2" />
<text  x="304.98" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="510.7" y="1765" width="0.2" height="15.0" fill="rgb(239,140,28)" rx="2" ry="2" />
<text  x="513.65" y="1775.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="345.8" y="1589" width="0.3" height="15.0" fill="rgb(247,44,17)" rx="2" ry="2" />
<text  x="348.85" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="816.5" y="1701" width="0.2" height="15.0" fill="rgb(237,193,51)" rx="2" ry="2" />
<text  x="819.52" y="1711.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="462.0" y="1957" width="0.2" height="15.0" fill="rgb(205,116,44)" rx="2" ry="2" />
<text  x="464.96" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="341.0" y="1925" width="0.6" height="15.0" fill="rgb(231,28,17)" rx="2" ry="2" />
<text  x="344.02" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="992.0" y="1925" width="0.2" height="15.0" fill="rgb(222,149,3)" rx="2" ry="2" />
<text  x="994.99" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="145.8" y="37" width="0.2" height="15.0" fill="rgb(216,61,53)" rx="2" ry="2" />
<text  x="148.83" y="47.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="81.4" y="1941" width="0.6" height="15.0" fill="rgb(252,110,29)" rx="2" ry="2" />
<text  x="84.44" y="1951.5" ></text>
</g>
<g >
<title>call_rcu_sched (5 samples, 0.09%)</title><rect x="444.7" y="1957" width="1.0" height="15.0" fill="rgb(206,71,22)" rx="2" ry="2" />
<text  x="447.65" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="240.6" y="1877" width="0.2" height="15.0" fill="rgb(209,82,41)" rx="2" ry="2" />
<text  x="243.61" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (2 samples, 0.03%)</title><rect x="844.5" y="1909" width="0.4" height="15.0" fill="rgb(214,45,11)" rx="2" ry="2" />
<text  x="847.49" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="265.2" y="1749" width="0.2" height="15.0" fill="rgb(250,188,8)" rx="2" ry="2" />
<text  x="268.16" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="310.6" y="1925" width="0.2" height="15.0" fill="rgb(209,118,50)" rx="2" ry="2" />
<text  x="313.63" y="1935.5" ></text>
</g>
<g >
<title>folly::uint64ToBufferUnsafe (3 samples, 0.05%)</title><rect x="1184.6" y="2053" width="0.6" height="15.0" fill="rgb(237,49,22)" rx="2" ry="2" />
<text  x="1187.57" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="238.2" y="1845" width="0.2" height="15.0" fill="rgb(227,115,51)" rx="2" ry="2" />
<text  x="241.19" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="989.2" y="1861" width="0.4" height="15.0" fill="rgb(229,193,40)" rx="2" ry="2" />
<text  x="992.17" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="819.5" y="1637" width="0.2" height="15.0" fill="rgb(226,128,43)" rx="2" ry="2" />
<text  x="822.54" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="99.1" y="2005" width="0.2" height="15.0" fill="rgb(222,216,34)" rx="2" ry="2" />
<text  x="102.14" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="54.5" y="1781" width="0.2" height="15.0" fill="rgb(235,223,31)" rx="2" ry="2" />
<text  x="57.47" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="316.1" y="1781" width="0.2" height="15.0" fill="rgb(235,189,35)" rx="2" ry="2" />
<text  x="319.07" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="159.7" y="1989" width="0.2" height="15.0" fill="rgb(247,111,51)" rx="2" ry="2" />
<text  x="162.71" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="516.7" y="1861" width="0.2" height="15.0" fill="rgb(240,218,40)" rx="2" ry="2" />
<text  x="519.69" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="884.1" y="1877" width="0.4" height="15.0" fill="rgb(245,212,15)" rx="2" ry="2" />
<text  x="887.13" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="238.0" y="1701" width="0.2" height="15.0" fill="rgb(208,65,2)" rx="2" ry="2" />
<text  x="240.99" y="1711.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (158 samples, 2.69%)</title><rect x="770.0" y="1685" width="31.8" height="15.0" fill="rgb(249,175,19)" rx="2" ry="2" />
<text  x="773.04" y="1695.5" >__..</text>
</g>
<g >
<title>__slab_free (10 samples, 0.17%)</title><rect x="1103.3" y="1429" width="2.0" height="15.0" fill="rgb(221,58,21)" rx="2" ry="2" />
<text  x="1106.27" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="850.5" y="1877" width="0.4" height="15.0" fill="rgb(222,182,41)" rx="2" ry="2" />
<text  x="853.53" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1148.3" y="1989" width="0.2" height="15.0" fill="rgb(246,5,2)" rx="2" ry="2" />
<text  x="1151.35" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="55.1" y="1765" width="0.2" height="15.0" fill="rgb(239,186,23)" rx="2" ry="2" />
<text  x="58.08" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="920.0" y="1989" width="0.2" height="15.0" fill="rgb(213,49,37)" rx="2" ry="2" />
<text  x="922.95" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.4" y="1909" width="0.2" height="15.0" fill="rgb(226,81,3)" rx="2" ry="2" />
<text  x="74.37" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="454.7" y="1701" width="0.2" height="15.0" fill="rgb(247,103,3)" rx="2" ry="2" />
<text  x="457.71" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="672.4" y="1941" width="0.2" height="15.0" fill="rgb(209,115,37)" rx="2" ry="2" />
<text  x="675.44" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="347.5" y="1701" width="0.2" height="15.0" fill="rgb(205,18,13)" rx="2" ry="2" />
<text  x="350.46" y="1711.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (29 samples, 0.49%)</title><rect x="1100.5" y="1781" width="5.8" height="15.0" fill="rgb(235,175,43)" rx="2" ry="2" />
<text  x="1103.45" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="747.7" y="1621" width="0.2" height="15.0" fill="rgb(253,76,51)" rx="2" ry="2" />
<text  x="750.70" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="513.3" y="1957" width="0.2" height="15.0" fill="rgb(242,195,52)" rx="2" ry="2" />
<text  x="516.27" y="1967.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.07%)</title><rect x="561.6" y="1893" width="0.8" height="15.0" fill="rgb(213,89,13)" rx="2" ry="2" />
<text  x="564.57" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (17 samples, 0.29%)</title><rect x="514.5" y="1989" width="3.4" height="15.0" fill="rgb(239,13,48)" rx="2" ry="2" />
<text  x="517.48" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="65.1" y="1749" width="0.2" height="15.0" fill="rgb(242,107,35)" rx="2" ry="2" />
<text  x="68.14" y="1759.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="317.3" y="1861" width="0.2" height="15.0" fill="rgb(233,186,48)" rx="2" ry="2" />
<text  x="320.27" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="331.4" y="1941" width="0.2" height="15.0" fill="rgb(207,90,35)" rx="2" ry="2" />
<text  x="334.36" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1030.4" y="2021" width="0.2" height="15.0" fill="rgb(254,81,6)" rx="2" ry="2" />
<text  x="1033.43" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="235.2" y="1797" width="0.8" height="15.0" fill="rgb(253,42,31)" rx="2" ry="2" />
<text  x="238.17" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="845.7" y="1893" width="0.2" height="15.0" fill="rgb(221,168,3)" rx="2" ry="2" />
<text  x="848.70" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="257.5" y="1909" width="0.2" height="15.0" fill="rgb(225,10,53)" rx="2" ry="2" />
<text  x="260.51" y="1919.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="158.9" y="1989" width="0.8" height="15.0" fill="rgb(235,148,34)" rx="2" ry="2" />
<text  x="161.91" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="545.3" y="1877" width="0.2" height="15.0" fill="rgb(235,108,4)" rx="2" ry="2" />
<text  x="548.27" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (152 samples, 2.59%)</title><rect x="123.9" y="1605" width="30.6" height="15.0" fill="rgb(231,36,24)" rx="2" ry="2" />
<text  x="126.89" y="1615.5" >[u..</text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="516.7" y="1685" width="0.2" height="15.0" fill="rgb(252,25,30)" rx="2" ry="2" />
<text  x="519.69" y="1695.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;,  (2 samples, 0.03%)</title><rect x="927.4" y="1989" width="0.4" height="15.0" fill="rgb(248,141,21)" rx="2" ry="2" />
<text  x="930.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (164 samples, 2.80%)</title><rect x="123.1" y="1909" width="33.0" height="15.0" fill="rgb(225,13,11)" rx="2" ry="2" />
<text  x="126.09" y="1919.5" >[u..</text>
</g>
<g >
<title>get_empty_filp (44 samples, 0.75%)</title><rect x="373.0" y="1925" width="8.9" height="15.0" fill="rgb(234,179,22)" rx="2" ry="2" />
<text  x="376.02" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="362.6" y="1813" width="0.2" height="15.0" fill="rgb(241,121,20)" rx="2" ry="2" />
<text  x="365.55" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="747.7" y="1557" width="0.2" height="15.0" fill="rgb(244,132,1)" rx="2" ry="2" />
<text  x="750.70" y="1567.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (14 samples, 0.24%)</title><rect x="349.9" y="1925" width="2.8" height="15.0" fill="rgb(210,145,30)" rx="2" ry="2" />
<text  x="352.87" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="293" width="28.0" height="15.0" fill="rgb(221,208,35)" rx="2" ry="2" />
<text  x="127.30" y="303.5" >[..</text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.02%)</title><rect x="458.3" y="1957" width="0.2" height="15.0" fill="rgb(241,127,52)" rx="2" ry="2" />
<text  x="461.34" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="809.5" y="1285" width="0.2" height="15.0" fill="rgb(211,159,22)" rx="2" ry="2" />
<text  x="812.48" y="1295.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="903.3" y="1605" width="0.2" height="15.0" fill="rgb(248,201,36)" rx="2" ry="2" />
<text  x="906.25" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="809.5" y="1461" width="0.2" height="15.0" fill="rgb(248,136,47)" rx="2" ry="2" />
<text  x="812.48" y="1471.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="920.6" y="1877" width="0.2" height="15.0" fill="rgb(228,223,15)" rx="2" ry="2" />
<text  x="923.56" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1144.3" y="1957" width="0.2" height="15.0" fill="rgb(230,134,44)" rx="2" ry="2" />
<text  x="1147.32" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1149.2" y="1877" width="0.2" height="15.0" fill="rgb(229,112,45)" rx="2" ry="2" />
<text  x="1152.15" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="235.2" y="1813" width="0.8" height="15.0" fill="rgb(208,165,20)" rx="2" ry="2" />
<text  x="238.17" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="818.7" y="1621" width="0.2" height="15.0" fill="rgb(230,101,21)" rx="2" ry="2" />
<text  x="821.73" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="71.0" y="1781" width="0.2" height="15.0" fill="rgb(252,39,14)" rx="2" ry="2" />
<text  x="73.97" y="1791.5" ></text>
</g>
<g >
<title>skb_entail (10 samples, 0.17%)</title><rect x="271.6" y="1877" width="2.0" height="15.0" fill="rgb(214,4,47)" rx="2" ry="2" />
<text  x="274.60" y="1887.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (14 samples, 0.24%)</title><rect x="119.1" y="2037" width="2.8" height="15.0" fill="rgb(205,178,23)" rx="2" ry="2" />
<text  x="122.07" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (11 samples, 0.19%)</title><rect x="83.0" y="1957" width="2.3" height="15.0" fill="rgb(245,128,33)" rx="2" ry="2" />
<text  x="86.05" y="1967.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="89.1" y="1845" width="0.2" height="15.0" fill="rgb(233,152,46)" rx="2" ry="2" />
<text  x="92.08" y="1855.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="644.9" y="1973" width="0.4" height="15.0" fill="rgb(240,183,37)" rx="2" ry="2" />
<text  x="647.87" y="1983.5" ></text>
</g>
<g >
<title>ip_send_check (1 samples, 0.02%)</title><rect x="279.4" y="1765" width="0.2" height="15.0" fill="rgb(236,158,13)" rx="2" ry="2" />
<text  x="282.44" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="540.8" y="1989" width="0.2" height="15.0" fill="rgb(208,102,50)" rx="2" ry="2" />
<text  x="543.84" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1096.2" y="1781" width="0.2" height="15.0" fill="rgb(251,134,54)" rx="2" ry="2" />
<text  x="1099.23" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="388.3" y="1829" width="0.2" height="15.0" fill="rgb(253,74,23)" rx="2" ry="2" />
<text  x="391.31" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (11 samples, 0.19%)</title><rect x="964.0" y="1957" width="2.2" height="15.0" fill="rgb(221,22,4)" rx="2" ry="2" />
<text  x="967.02" y="1967.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="155.3" y="1813" width="0.2" height="15.0" fill="rgb(228,227,41)" rx="2" ry="2" />
<text  x="158.29" y="1823.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="717.7" y="1781" width="0.4" height="15.0" fill="rgb(240,108,26)" rx="2" ry="2" />
<text  x="720.72" y="1791.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="14.4" y="1893" width="0.2" height="15.0" fill="rgb(223,130,4)" rx="2" ry="2" />
<text  x="17.43" y="1903.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="652.1" y="1973" width="0.2" height="15.0" fill="rgb(230,119,40)" rx="2" ry="2" />
<text  x="655.12" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="83.9" y="1781" width="0.4" height="15.0" fill="rgb(254,13,0)" rx="2" ry="2" />
<text  x="86.85" y="1791.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (8 samples, 0.14%)</title><rect x="968.4" y="2037" width="1.7" height="15.0" fill="rgb(212,49,49)" rx="2" ry="2" />
<text  x="971.45" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, void&gt; (6 samples, 0.10%)</title><rect x="572.0" y="2005" width="1.2" height="15.0" fill="rgb(244,19,40)" rx="2" ry="2" />
<text  x="575.03" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="177.4" y="1893" width="0.2" height="15.0" fill="rgb(209,8,18)" rx="2" ry="2" />
<text  x="180.42" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="65.1" y="1717" width="0.2" height="15.0" fill="rgb(209,100,35)" rx="2" ry="2" />
<text  x="68.14" y="1727.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9 samples, 0.15%)</title><rect x="593.6" y="1925" width="1.8" height="15.0" fill="rgb(254,31,27)" rx="2" ry="2" />
<text  x="596.56" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="114.8" y="2021" width="0.8" height="15.0" fill="rgb(225,116,34)" rx="2" ry="2" />
<text  x="117.84" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="730.2" y="1653" width="0.2" height="15.0" fill="rgb(219,94,21)" rx="2" ry="2" />
<text  x="733.19" y="1663.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="262.3" y="1893" width="0.4" height="15.0" fill="rgb(216,100,38)" rx="2" ry="2" />
<text  x="265.34" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1149.2" y="2037" width="0.2" height="15.0" fill="rgb(237,167,54)" rx="2" ry="2" />
<text  x="1152.15" y="2047.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::finalize (9 samples, 0.15%)</title><rect x="1008.9" y="1989" width="1.8" height="15.0" fill="rgb(214,192,21)" rx="2" ry="2" />
<text  x="1011.89" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="388.7" y="1925" width="0.2" height="15.0" fill="rgb(227,144,34)" rx="2" ry="2" />
<text  x="391.71" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="927.8" y="2005" width="0.6" height="15.0" fill="rgb(224,49,16)" rx="2" ry="2" />
<text  x="930.80" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="99.7" y="1989" width="0.2" height="15.0" fill="rgb(208,195,46)" rx="2" ry="2" />
<text  x="102.75" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="312.0" y="1861" width="0.2" height="15.0" fill="rgb(224,190,9)" rx="2" ry="2" />
<text  x="315.04" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="631.4" y="1637" width="0.2" height="15.0" fill="rgb(230,168,34)" rx="2" ry="2" />
<text  x="634.39" y="1647.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (2 samples, 0.03%)</title><rect x="644.1" y="2005" width="0.4" height="15.0" fill="rgb(220,88,3)" rx="2" ry="2" />
<text  x="647.07" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="208.6" y="1973" width="0.2" height="15.0" fill="rgb(206,80,28)" rx="2" ry="2" />
<text  x="211.61" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="747.1" y="1781" width="0.2" height="15.0" fill="rgb(234,98,29)" rx="2" ry="2" />
<text  x="750.10" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1153.0" y="2005" width="0.2" height="15.0" fill="rgb(234,132,51)" rx="2" ry="2" />
<text  x="1155.97" y="2015.5" ></text>
</g>
<g >
<title>down_write (9 samples, 0.15%)</title><rect x="750.3" y="1765" width="1.8" height="15.0" fill="rgb(247,104,49)" rx="2" ry="2" />
<text  x="753.32" y="1775.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="441.4" y="1669" width="0.2" height="15.0" fill="rgb(214,61,50)" rx="2" ry="2" />
<text  x="444.43" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (8 samples, 0.14%)</title><rect x="147.8" y="53" width="1.7" height="15.0" fill="rgb(254,10,17)" rx="2" ry="2" />
<text  x="150.84" y="63.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (1 samples, 0.02%)</title><rect x="240.8" y="1925" width="0.2" height="15.0" fill="rgb(219,188,42)" rx="2" ry="2" />
<text  x="243.81" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="188.3" y="1877" width="0.2" height="15.0" fill="rgb(227,27,52)" rx="2" ry="2" />
<text  x="191.29" y="1887.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="65.1" y="1861" width="0.2" height="15.0" fill="rgb(244,5,7)" rx="2" ry="2" />
<text  x="68.14" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1149.2" y="1941" width="0.2" height="15.0" fill="rgb(250,4,36)" rx="2" ry="2" />
<text  x="1152.15" y="1951.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, true, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="527.2" y="1957" width="0.2" height="15.0" fill="rgb(218,92,14)" rx="2" ry="2" />
<text  x="530.16" y="1967.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="819.5" y="1509" width="0.2" height="15.0" fill="rgb(247,131,45)" rx="2" ry="2" />
<text  x="822.54" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1094.0" y="1861" width="0.2" height="15.0" fill="rgb(210,138,37)" rx="2" ry="2" />
<text  x="1097.01" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="801.6" y="1621" width="0.2" height="15.0" fill="rgb(210,71,22)" rx="2" ry="2" />
<text  x="804.63" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1087.6" y="1877" width="0.6" height="15.0" fill="rgb(249,157,42)" rx="2" ry="2" />
<text  x="1090.58" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="162.5" y="1941" width="0.2" height="15.0" fill="rgb(218,162,38)" rx="2" ry="2" />
<text  x="165.53" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="71.0" y="1749" width="0.2" height="15.0" fill="rgb(250,197,52)" rx="2" ry="2" />
<text  x="73.97" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="809.5" y="1397" width="0.2" height="15.0" fill="rgb(219,101,36)" rx="2" ry="2" />
<text  x="812.48" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="180.6" y="1877" width="0.4" height="15.0" fill="rgb(234,130,50)" rx="2" ry="2" />
<text  x="183.64" y="1887.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="530.8" y="1925" width="0.2" height="15.0" fill="rgb(215,30,12)" rx="2" ry="2" />
<text  x="533.78" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="731.4" y="1701" width="0.2" height="15.0" fill="rgb(243,71,25)" rx="2" ry="2" />
<text  x="734.40" y="1711.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (9 samples, 0.15%)</title><rect x="185.3" y="1893" width="1.8" height="15.0" fill="rgb(223,164,40)" rx="2" ry="2" />
<text  x="188.27" y="1903.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::load (1 samples, 0.02%)</title><rect x="194.1" y="1989" width="0.2" height="15.0" fill="rgb(234,126,8)" rx="2" ry="2" />
<text  x="197.12" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1072.7" y="1749" width="0.2" height="15.0" fill="rgb(229,63,6)" rx="2" ry="2" />
<text  x="1075.68" y="1759.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="75.2" y="1909" width="0.8" height="15.0" fill="rgb(221,21,2)" rx="2" ry="2" />
<text  x="78.20" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="56.7" y="1765" width="0.2" height="15.0" fill="rgb(231,155,53)" rx="2" ry="2" />
<text  x="59.68" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (162 samples, 2.76%)</title><rect x="928.8" y="2037" width="32.6" height="15.0" fill="rgb(242,5,21)" rx="2" ry="2" />
<text  x="931.81" y="2047.5" >fa..</text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (10 samples, 0.17%)</title><rect x="193.5" y="2005" width="2.0" height="15.0" fill="rgb(208,223,10)" rx="2" ry="2" />
<text  x="196.52" y="2015.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="765.2" y="1669" width="0.2" height="15.0" fill="rgb(216,160,44)" rx="2" ry="2" />
<text  x="768.21" y="1679.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="407.4" y="1957" width="0.2" height="15.0" fill="rgb(227,35,53)" rx="2" ry="2" />
<text  x="410.42" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="54.5" y="1829" width="0.2" height="15.0" fill="rgb(250,108,14)" rx="2" ry="2" />
<text  x="57.47" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1183.6" y="2005" width="0.4" height="15.0" fill="rgb(212,205,2)" rx="2" ry="2" />
<text  x="1186.56" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="71.0" y="1845" width="0.2" height="15.0" fill="rgb(229,47,35)" rx="2" ry="2" />
<text  x="73.97" y="1855.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="407.8" y="1749" width="0.2" height="15.0" fill="rgb(232,52,43)" rx="2" ry="2" />
<text  x="410.83" y="1759.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="644.9" y="2005" width="0.4" height="15.0" fill="rgb(205,226,36)" rx="2" ry="2" />
<text  x="647.87" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (70 samples, 1.19%)</title><rect x="932.4" y="1989" width="14.1" height="15.0" fill="rgb(233,175,30)" rx="2" ry="2" />
<text  x="935.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="968.2" y="1733" width="0.2" height="15.0" fill="rgb(240,1,53)" rx="2" ry="2" />
<text  x="971.25" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="147.4" y="37" width="0.4" height="15.0" fill="rgb(224,59,35)" rx="2" ry="2" />
<text  x="150.44" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="800.8" y="1605" width="0.4" height="15.0" fill="rgb(206,114,27)" rx="2" ry="2" />
<text  x="803.83" y="1615.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="464.2" y="1701" width="0.2" height="15.0" fill="rgb(214,23,52)" rx="2" ry="2" />
<text  x="467.17" y="1711.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="633.2" y="1797" width="0.2" height="15.0" fill="rgb(232,55,47)" rx="2" ry="2" />
<text  x="636.20" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1094.0" y="1893" width="0.2" height="15.0" fill="rgb(236,161,35)" rx="2" ry="2" />
<text  x="1097.01" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="976.9" y="2037" width="1.2" height="15.0" fill="rgb(213,8,11)" rx="2" ry="2" />
<text  x="979.90" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="707.1" y="1877" width="0.4" height="15.0" fill="rgb(246,81,36)" rx="2" ry="2" />
<text  x="710.05" y="1887.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="813.7" y="1669" width="0.2" height="15.0" fill="rgb(213,150,3)" rx="2" ry="2" />
<text  x="816.70" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="822.8" y="1829" width="0.2" height="15.0" fill="rgb(244,96,7)" rx="2" ry="2" />
<text  x="825.76" y="1839.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="997.0" y="1989" width="0.2" height="15.0" fill="rgb(205,223,17)" rx="2" ry="2" />
<text  x="1000.02" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (36 samples, 0.61%)</title><rect x="638.0" y="2021" width="7.3" height="15.0" fill="rgb(210,86,25)" rx="2" ry="2" />
<text  x="641.03" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="917.3" y="1957" width="0.2" height="15.0" fill="rgb(211,14,15)" rx="2" ry="2" />
<text  x="920.34" y="1967.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (1 samples, 0.02%)</title><rect x="681.1" y="1941" width="0.2" height="15.0" fill="rgb(249,3,48)" rx="2" ry="2" />
<text  x="684.09" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="316.1" y="1749" width="0.2" height="15.0" fill="rgb(227,203,2)" rx="2" ry="2" />
<text  x="319.07" y="1759.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1925" width="0.2" height="15.0" fill="rgb(220,21,47)" rx="2" ry="2" />
<text  x="570.20" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.94%)</title><rect x="626.4" y="2005" width="11.0" height="15.0" fill="rgb(212,180,47)" rx="2" ry="2" />
<text  x="629.36" y="2015.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (9 samples, 0.15%)</title><rect x="761.6" y="1701" width="1.8" height="15.0" fill="rgb(207,217,24)" rx="2" ry="2" />
<text  x="764.59" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="631.4" y="1749" width="0.2" height="15.0" fill="rgb(238,180,31)" rx="2" ry="2" />
<text  x="634.39" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="86.1" y="1909" width="0.2" height="15.0" fill="rgb(219,167,12)" rx="2" ry="2" />
<text  x="89.06" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="548.9" y="1893" width="0.2" height="15.0" fill="rgb(240,71,38)" rx="2" ry="2" />
<text  x="551.89" y="1903.5" ></text>
</g>
<g >
<title>swiotlb_dma_mapping_error (1 samples, 0.02%)</title><rect x="795.4" y="1509" width="0.2" height="15.0" fill="rgb(222,102,54)" rx="2" ry="2" />
<text  x="798.39" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="230.5" y="1637" width="0.2" height="15.0" fill="rgb(253,131,26)" rx="2" ry="2" />
<text  x="233.55" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.09%)</title><rect x="1036.1" y="2053" width="1.0" height="15.0" fill="rgb(216,47,1)" rx="2" ry="2" />
<text  x="1039.06" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1058.2" y="1893" width="0.2" height="15.0" fill="rgb(229,209,1)" rx="2" ry="2" />
<text  x="1061.20" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="388.3" y="1941" width="0.2" height="15.0" fill="rgb(238,18,53)" rx="2" ry="2" />
<text  x="391.31" y="1951.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="352.7" y="1909" width="0.6" height="15.0" fill="rgb(241,114,54)" rx="2" ry="2" />
<text  x="355.69" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;unsigned int, false&gt;::init (1 samples, 0.02%)</title><rect x="1006.7" y="2005" width="0.2" height="15.0" fill="rgb(231,127,19)" rx="2" ry="2" />
<text  x="1009.68" y="2015.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="941.5" y="1765" width="0.2" height="15.0" fill="rgb(215,201,8)" rx="2" ry="2" />
<text  x="944.48" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="510.5" y="1845" width="0.4" height="15.0" fill="rgb(235,23,41)" rx="2" ry="2" />
<text  x="513.45" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (1 samples, 0.02%)</title><rect x="1168.9" y="2053" width="0.2" height="15.0" fill="rgb(229,204,0)" rx="2" ry="2" />
<text  x="1171.87" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1152.0" y="1989" width="0.2" height="15.0" fill="rgb(215,211,51)" rx="2" ry="2" />
<text  x="1154.97" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="783.3" y="1477" width="0.8" height="15.0" fill="rgb(213,96,13)" rx="2" ry="2" />
<text  x="786.32" y="1487.5" ></text>
</g>
<g >
<title>std::ref&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="946.3" y="1973" width="0.2" height="15.0" fill="rgb(206,210,0)" rx="2" ry="2" />
<text  x="949.31" y="1983.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="75.4" y="1845" width="0.2" height="15.0" fill="rgb(238,59,37)" rx="2" ry="2" />
<text  x="78.40" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="230.5" y="1845" width="0.2" height="15.0" fill="rgb(217,90,2)" rx="2" ry="2" />
<text  x="233.55" y="1855.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="256.1" y="1877" width="0.4" height="15.0" fill="rgb(230,15,50)" rx="2" ry="2" />
<text  x="259.10" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="533.2" y="1829" width="0.2" height="15.0" fill="rgb(229,45,32)" rx="2" ry="2" />
<text  x="536.19" y="1839.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1957" width="0.2" height="15.0" fill="rgb(229,42,11)" rx="2" ry="2" />
<text  x="570.20" y="1967.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (3 samples, 0.05%)</title><rect x="732.6" y="1637" width="0.6" height="15.0" fill="rgb(207,108,42)" rx="2" ry="2" />
<text  x="735.61" y="1647.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="783.7" y="1317" width="0.2" height="15.0" fill="rgb(228,137,4)" rx="2" ry="2" />
<text  x="786.72" y="1327.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="747.1" y="1701" width="0.2" height="15.0" fill="rgb(254,219,3)" rx="2" ry="2" />
<text  x="750.10" y="1711.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="433.6" y="1637" width="0.2" height="15.0" fill="rgb(223,154,26)" rx="2" ry="2" />
<text  x="436.58" y="1647.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="1182.0" y="2021" width="0.8" height="15.0" fill="rgb(214,21,23)" rx="2" ry="2" />
<text  x="1184.95" y="2031.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1096.4" y="1909" width="0.4" height="15.0" fill="rgb(239,75,9)" rx="2" ry="2" />
<text  x="1099.43" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="310.6" y="1829" width="0.2" height="15.0" fill="rgb(225,45,23)" rx="2" ry="2" />
<text  x="313.63" y="1839.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="32.3" y="2005" width="0.2" height="15.0" fill="rgb(240,180,50)" rx="2" ry="2" />
<text  x="35.34" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1111.3" y="1877" width="0.2" height="15.0" fill="rgb(223,134,44)" rx="2" ry="2" />
<text  x="1114.32" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performRead (68 samples, 1.16%)</title><rect x="44.8" y="1973" width="13.7" height="15.0" fill="rgb(249,92,9)" rx="2" ry="2" />
<text  x="47.81" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1054.8" y="1973" width="0.6" height="15.0" fill="rgb(222,168,47)" rx="2" ry="2" />
<text  x="1057.77" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (6 samples, 0.10%)</title><rect x="864.8" y="1973" width="1.2" height="15.0" fill="rgb(225,142,1)" rx="2" ry="2" />
<text  x="867.82" y="1983.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="152.3" y="37" width="0.2" height="15.0" fill="rgb(226,181,23)" rx="2" ry="2" />
<text  x="155.27" y="47.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="707.3" y="1813" width="0.2" height="15.0" fill="rgb(221,13,40)" rx="2" ry="2" />
<text  x="710.25" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="100.4" y="1957" width="0.4" height="15.0" fill="rgb(227,204,31)" rx="2" ry="2" />
<text  x="103.35" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="832.4" y="1653" width="0.2" height="15.0" fill="rgb(209,100,11)" rx="2" ry="2" />
<text  x="835.42" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::Baton (1 samples, 0.02%)</title><rect x="188.5" y="2005" width="0.2" height="15.0" fill="rgb(238,223,44)" rx="2" ry="2" />
<text  x="191.49" y="2015.5" ></text>
</g>
<g >
<title>std::max&lt;long&gt; (1 samples, 0.02%)</title><rect x="30.1" y="1989" width="0.2" height="15.0" fill="rgb(219,121,29)" rx="2" ry="2" />
<text  x="33.12" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="160.5" y="1989" width="0.2" height="15.0" fill="rgb(234,154,40)" rx="2" ry="2" />
<text  x="163.52" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="816.5" y="1381" width="0.2" height="15.0" fill="rgb(247,41,49)" rx="2" ry="2" />
<text  x="819.52" y="1391.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="491.7" y="1637" width="0.2" height="15.0" fill="rgb(253,193,34)" rx="2" ry="2" />
<text  x="494.74" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="95.7" y="1925" width="0.2" height="15.0" fill="rgb(249,39,11)" rx="2" ry="2" />
<text  x="98.72" y="1935.5" ></text>
</g>
<g >
<title>[mcrouter] (24 samples, 0.41%)</title><rect x="987.4" y="1941" width="4.8" height="15.0" fill="rgb(249,54,36)" rx="2" ry="2" />
<text  x="990.36" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="616.5" y="1957" width="0.2" height="15.0" fill="rgb(233,59,3)" rx="2" ry="2" />
<text  x="619.50" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (1 samples, 0.02%)</title><rect x="876.7" y="1973" width="0.2" height="15.0" fill="rgb(240,156,39)" rx="2" ry="2" />
<text  x="879.69" y="1983.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1461" width="0.2" height="15.0" fill="rgb(215,55,36)" rx="2" ry="2" />
<text  x="345.03" y="1471.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="99.7" y="1717" width="0.2" height="15.0" fill="rgb(225,72,37)" rx="2" ry="2" />
<text  x="102.75" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="196.5" y="1925" width="0.2" height="15.0" fill="rgb(212,145,42)" rx="2" ry="2" />
<text  x="199.54" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="347.5" y="1765" width="0.2" height="15.0" fill="rgb(227,110,39)" rx="2" ry="2" />
<text  x="350.46" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::WriteBuffer (1 samples, 0.02%)</title><rect x="207.4" y="2021" width="0.2" height="15.0" fill="rgb(237,47,19)" rx="2" ry="2" />
<text  x="210.40" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (29 samples, 0.49%)</title><rect x="1100.5" y="1717" width="5.8" height="15.0" fill="rgb(211,31,35)" rx="2" ry="2" />
<text  x="1103.45" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (1 samples, 0.02%)</title><rect x="863.6" y="1989" width="0.2" height="15.0" fill="rgb(221,198,2)" rx="2" ry="2" />
<text  x="866.61" y="1999.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (7 samples, 0.12%)</title><rect x="147.8" y="37" width="1.4" height="15.0" fill="rgb(227,169,20)" rx="2" ry="2" />
<text  x="150.84" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="513.3" y="2005" width="0.2" height="15.0" fill="rgb(232,64,9)" rx="2" ry="2" />
<text  x="516.27" y="2015.5" ></text>
</g>
<g >
<title>event_del_nolock_ (3 samples, 0.05%)</title><rect x="118.1" y="2005" width="0.6" height="15.0" fill="rgb(229,211,54)" rx="2" ry="2" />
<text  x="121.06" y="2015.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (5 samples, 0.09%)</title><rect x="755.1" y="1733" width="1.1" height="15.0" fill="rgb(249,134,6)" rx="2" ry="2" />
<text  x="758.15" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1164.6" y="1797" width="0.2" height="15.0" fill="rgb(229,50,14)" rx="2" ry="2" />
<text  x="1167.65" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="809.5" y="1317" width="0.2" height="15.0" fill="rgb(253,83,53)" rx="2" ry="2" />
<text  x="812.48" y="1327.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="232.6" y="1877" width="0.2" height="15.0" fill="rgb(217,15,30)" rx="2" ry="2" />
<text  x="235.56" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="51.5" y="1893" width="0.4" height="15.0" fill="rgb(208,27,43)" rx="2" ry="2" />
<text  x="54.45" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1164.6" y="1861" width="0.2" height="15.0" fill="rgb(253,94,6)" rx="2" ry="2" />
<text  x="1167.65" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="840.9" y="1573" width="0.2" height="15.0" fill="rgb(245,101,2)" rx="2" ry="2" />
<text  x="843.87" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="576.3" y="1925" width="0.2" height="15.0" fill="rgb(226,147,41)" rx="2" ry="2" />
<text  x="579.26" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="845.7" y="1829" width="0.2" height="15.0" fill="rgb(246,15,22)" rx="2" ry="2" />
<text  x="848.70" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetRequest::~McSetRequest (2 samples, 0.03%)</title><rect x="963.4" y="2037" width="0.4" height="15.0" fill="rgb(251,95,18)" rx="2" ry="2" />
<text  x="966.42" y="2047.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="441.4" y="1637" width="0.2" height="15.0" fill="rgb(244,96,40)" rx="2" ry="2" />
<text  x="444.43" y="1647.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::FibersPoolResizer::run (4 samples, 0.07%)</title><rect x="19.1" y="2005" width="0.8" height="15.0" fill="rgb(220,46,36)" rx="2" ry="2" />
<text  x="22.06" y="2015.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="685.7" y="1877" width="0.2" height="15.0" fill="rgb(249,88,45)" rx="2" ry="2" />
<text  x="688.72" y="1887.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="31.5" y="2005" width="0.2" height="15.0" fill="rgb(206,200,36)" rx="2" ry="2" />
<text  x="34.53" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (1 samples, 0.02%)</title><rect x="541.6" y="1973" width="0.2" height="15.0" fill="rgb(236,174,1)" rx="2" ry="2" />
<text  x="544.64" y="1983.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="516.7" y="1797" width="0.2" height="15.0" fill="rgb(226,122,5)" rx="2" ry="2" />
<text  x="519.69" y="1807.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (1 samples, 0.02%)</title><rect x="733.4" y="1685" width="0.2" height="15.0" fill="rgb(223,86,19)" rx="2" ry="2" />
<text  x="736.41" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="230.7" y="1861" width="0.2" height="15.0" fill="rgb(248,100,4)" rx="2" ry="2" />
<text  x="233.75" y="1871.5" ></text>
</g>
<g >
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="278.6" y="1797" width="0.6" height="15.0" fill="rgb(238,93,42)" rx="2" ry="2" />
<text  x="281.64" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (154 samples, 2.63%)</title><rect x="123.9" y="1701" width="31.0" height="15.0" fill="rgb(237,129,4)" rx="2" ry="2" />
<text  x="126.89" y="1711.5" >[u..</text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="617.1" y="1909" width="0.2" height="15.0" fill="rgb(205,146,54)" rx="2" ry="2" />
<text  x="620.10" y="1919.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="19.1" y="1605" width="0.2" height="15.0" fill="rgb(216,99,54)" rx="2" ry="2" />
<text  x="22.06" y="1615.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::requireValue (3 samples, 0.05%)</title><rect x="1005.1" y="1989" width="0.6" height="15.0" fill="rgb(247,223,27)" rx="2" ry="2" />
<text  x="1008.07" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="917" width="29.6" height="15.0" fill="rgb(228,214,23)" rx="2" ry="2" />
<text  x="127.10" y="927.5" >[u..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="844.1" y="1717" width="0.2" height="15.0" fill="rgb(241,54,28)" rx="2" ry="2" />
<text  x="847.09" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="535.0" y="1989" width="1.0" height="15.0" fill="rgb(226,199,45)" rx="2" ry="2" />
<text  x="538.00" y="1999.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="778.5" y="1301" width="0.2" height="15.0" fill="rgb(220,15,28)" rx="2" ry="2" />
<text  x="781.49" y="1311.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(251,114,1)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="152.3" y="245" width="0.2" height="15.0" fill="rgb(218,58,13)" rx="2" ry="2" />
<text  x="155.27" y="255.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (1 samples, 0.02%)</title><rect x="900.0" y="2005" width="0.2" height="15.0" fill="rgb(222,195,54)" rx="2" ry="2" />
<text  x="903.03" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="747.7" y="1573" width="0.2" height="15.0" fill="rgb(220,141,36)" rx="2" ry="2" />
<text  x="750.70" y="1583.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="603.0" y="1829" width="0.2" height="15.0" fill="rgb(215,49,23)" rx="2" ry="2" />
<text  x="606.02" y="1839.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="797.2" y="1525" width="0.2" height="15.0" fill="rgb(224,177,37)" rx="2" ry="2" />
<text  x="800.20" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="362.6" y="1781" width="0.2" height="15.0" fill="rgb(233,190,54)" rx="2" ry="2" />
<text  x="365.55" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (4,567 samples, 77.88%)</title><rect x="115.6" y="2053" width="919.1" height="15.0" fill="rgb(227,89,54)" rx="2" ry="2" />
<text  x="118.64" y="2063.5" >[unknown]</text>
</g>
<g >
<title>address_space_init_once (1 samples, 0.02%)</title><rect x="369.6" y="1797" width="0.2" height="15.0" fill="rgb(213,13,48)" rx="2" ry="2" />
<text  x="372.59" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="388.3" y="1877" width="0.2" height="15.0" fill="rgb(218,178,14)" rx="2" ry="2" />
<text  x="391.31" y="1887.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="860.2" y="1877" width="0.2" height="15.0" fill="rgb(250,32,29)" rx="2" ry="2" />
<text  x="863.19" y="1887.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="265.2" y="1605" width="0.2" height="15.0" fill="rgb(246,83,14)" rx="2" ry="2" />
<text  x="268.16" y="1615.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1054.6" y="1989" width="0.2" height="15.0" fill="rgb(227,38,8)" rx="2" ry="2" />
<text  x="1057.57" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="888.6" y="1909" width="0.2" height="15.0" fill="rgb(244,72,38)" rx="2" ry="2" />
<text  x="891.56" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="884.1" y="1861" width="0.4" height="15.0" fill="rgb(208,86,54)" rx="2" ry="2" />
<text  x="887.13" y="1871.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="464.4" y="1589" width="0.2" height="15.0" fill="rgb(233,33,3)" rx="2" ry="2" />
<text  x="467.37" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="55.1" y="1749" width="0.2" height="15.0" fill="rgb(244,163,52)" rx="2" ry="2" />
<text  x="58.08" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="492.3" y="1909" width="0.2" height="15.0" fill="rgb(241,31,14)" rx="2" ry="2" />
<text  x="495.34" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="908.1" y="1989" width="0.4" height="15.0" fill="rgb(237,89,14)" rx="2" ry="2" />
<text  x="911.08" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="571.2" y="2005" width="0.2" height="15.0" fill="rgb(229,77,5)" rx="2" ry="2" />
<text  x="574.22" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="256.5" y="1861" width="0.2" height="15.0" fill="rgb(211,219,6)" rx="2" ry="2" />
<text  x="259.50" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1029" width="29.8" height="15.0" fill="rgb(238,37,11)" rx="2" ry="2" />
<text  x="127.10" y="1039.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="841.7" y="1845" width="0.2" height="15.0" fill="rgb(241,20,1)" rx="2" ry="2" />
<text  x="844.67" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (1 samples, 0.02%)</title><rect x="884.7" y="1909" width="0.2" height="15.0" fill="rgb(235,18,38)" rx="2" ry="2" />
<text  x="887.74" y="1919.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (19 samples, 0.32%)</title><rect x="381.9" y="1941" width="3.8" height="15.0" fill="rgb(228,50,42)" rx="2" ry="2" />
<text  x="384.87" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="312.0" y="1877" width="0.2" height="15.0" fill="rgb(254,115,33)" rx="2" ry="2" />
<text  x="315.04" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="968.2" y="2021" width="0.2" height="15.0" fill="rgb(213,162,45)" rx="2" ry="2" />
<text  x="971.25" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="845.7" y="1733" width="0.2" height="15.0" fill="rgb(248,178,40)" rx="2" ry="2" />
<text  x="848.70" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="341.8" y="1829" width="0.4" height="15.0" fill="rgb(238,44,1)" rx="2" ry="2" />
<text  x="344.82" y="1839.5" ></text>
</g>
<g >
<title>inet_csk_accept (52 samples, 0.89%)</title><rect x="336.6" y="1941" width="10.5" height="15.0" fill="rgb(215,188,22)" rx="2" ry="2" />
<text  x="339.59" y="1951.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="928.4" y="1893" width="0.2" height="15.0" fill="rgb(211,126,51)" rx="2" ry="2" />
<text  x="931.40" y="1903.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::fibers::Fiber&amp;&gt; (1 samples, 0.02%)</title><rect x="987.0" y="1941" width="0.2" height="15.0" fill="rgb(210,77,17)" rx="2" ry="2" />
<text  x="989.96" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="671.2" y="1941" width="0.2" height="15.0" fill="rgb(214,170,36)" rx="2" ry="2" />
<text  x="674.23" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="65.1" y="1733" width="0.2" height="15.0" fill="rgb(242,209,47)" rx="2" ry="2" />
<text  x="68.14" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="961.4" y="1989" width="0.4" height="15.0" fill="rgb(226,52,46)" rx="2" ry="2" />
<text  x="964.41" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="546.3" y="1877" width="0.4" height="15.0" fill="rgb(217,227,49)" rx="2" ry="2" />
<text  x="549.27" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1148.7" y="1829" width="0.2" height="15.0" fill="rgb(241,87,26)" rx="2" ry="2" />
<text  x="1151.75" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (1 samples, 0.02%)</title><rect x="671.4" y="1989" width="0.2" height="15.0" fill="rgb(254,18,4)" rx="2" ry="2" />
<text  x="674.44" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1149.2" y="1653" width="0.2" height="15.0" fill="rgb(249,89,42)" rx="2" ry="2" />
<text  x="1152.15" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1072.7" y="1637" width="0.2" height="15.0" fill="rgb(241,16,11)" rx="2" ry="2" />
<text  x="1075.68" y="1647.5" ></text>
</g>
<g >
<title>_cond_resched (2 samples, 0.03%)</title><rect x="717.7" y="1797" width="0.4" height="15.0" fill="rgb(219,146,43)" rx="2" ry="2" />
<text  x="720.72" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.03%)</title><rect x="841.1" y="1893" width="0.4" height="15.0" fill="rgb(208,86,36)" rx="2" ry="2" />
<text  x="844.07" y="1903.5" ></text>
</g>
<g >
<title>folly::expected_detail::ExpectedStorage&lt;unsigned int, folly::ConversionCode,  (3 samples, 0.05%)</title><rect x="1009.9" y="1973" width="0.6" height="15.0" fill="rgb(250,71,21)" rx="2" ry="2" />
<text  x="1012.90" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="525.3" y="1941" width="0.4" height="15.0" fill="rgb(229,161,7)" rx="2" ry="2" />
<text  x="528.34" y="1951.5" ></text>
</g>
<g >
<title>security_file_fcntl (1 samples, 0.02%)</title><rect x="560.8" y="1941" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="563.76" y="1951.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="486.7" y="1589" width="0.2" height="15.0" fill="rgb(226,220,43)" rx="2" ry="2" />
<text  x="489.71" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="235.2" y="1829" width="0.8" height="15.0" fill="rgb(244,167,3)" rx="2" ry="2" />
<text  x="238.17" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="982.3" y="1989" width="0.4" height="15.0" fill="rgb(213,100,2)" rx="2" ry="2" />
<text  x="985.33" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="486.7" y="1749" width="0.2" height="15.0" fill="rgb(231,206,0)" rx="2" ry="2" />
<text  x="489.71" y="1759.5" ></text>
</g>
<g >
<title>__init_rwsem (2 samples, 0.03%)</title><rect x="369.2" y="1797" width="0.4" height="15.0" fill="rgb(218,62,22)" rx="2" ry="2" />
<text  x="372.19" y="1807.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="307.2" y="1589" width="0.2" height="15.0" fill="rgb(247,130,21)" rx="2" ry="2" />
<text  x="310.21" y="1599.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="840.9" y="1589" width="0.2" height="15.0" fill="rgb(226,187,32)" rx="2" ry="2" />
<text  x="843.87" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (2 samples, 0.03%)</title><rect x="979.9" y="2005" width="0.4" height="15.0" fill="rgb(250,150,30)" rx="2" ry="2" />
<text  x="982.92" y="2015.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="283.5" y="1429" width="0.2" height="15.0" fill="rgb(253,16,23)" rx="2" ry="2" />
<text  x="286.47" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="99.7" y="1861" width="0.2" height="15.0" fill="rgb(244,108,54)" rx="2" ry="2" />
<text  x="102.75" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::getParserInitializer (1 samples, 0.02%)</title><rect x="127.1" y="37" width="0.2" height="15.0" fill="rgb(206,210,19)" rx="2" ry="2" />
<text  x="130.11" y="47.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="345.8" y="1429" width="0.3" height="15.0" fill="rgb(237,191,33)" rx="2" ry="2" />
<text  x="348.85" y="1439.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.0" y="2021" width="0.2" height="15.0" fill="rgb(221,36,49)" rx="2" ry="2" />
<text  x="1024.97" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (321 samples, 5.47%)</title><rect x="325.1" y="2005" width="64.6" height="15.0" fill="rgb(251,97,22)" rx="2" ry="2" />
<text  x="328.12" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (59 samples, 1.01%)</title><rect x="1155.2" y="2053" width="11.9" height="15.0" fill="rgb(216,34,48)" rx="2" ry="2" />
<text  x="1158.19" y="2063.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="593.4" y="1669" width="0.2" height="15.0" fill="rgb(220,45,23)" rx="2" ry="2" />
<text  x="596.36" y="1679.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1557" width="0.2" height="15.0" fill="rgb(230,149,8)" rx="2" ry="2" />
<text  x="906.25" y="1567.5" ></text>
</g>
<g >
<title>sys_fcntl (12 samples, 0.20%)</title><rect x="561.0" y="1941" width="2.4" height="15.0" fill="rgb(226,208,19)" rx="2" ry="2" />
<text  x="563.96" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="307.2" y="1797" width="0.2" height="15.0" fill="rgb(212,179,38)" rx="2" ry="2" />
<text  x="310.21" y="1807.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="999.2" y="1925" width="0.2" height="15.0" fill="rgb(213,31,48)" rx="2" ry="2" />
<text  x="1002.24" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="816.5" y="1557" width="0.2" height="15.0" fill="rgb(213,60,30)" rx="2" ry="2" />
<text  x="819.52" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="543.9" y="1749" width="0.2" height="15.0" fill="rgb(248,206,9)" rx="2" ry="2" />
<text  x="546.86" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="701.8" y="1861" width="0.2" height="15.0" fill="rgb(223,65,54)" rx="2" ry="2" />
<text  x="704.82" y="1871.5" ></text>
</g>
<g >
<title>event_active_nolock_ (1 samples, 0.02%)</title><rect x="1129.6" y="2053" width="0.2" height="15.0" fill="rgb(213,152,50)" rx="2" ry="2" />
<text  x="1132.63" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="82.8" y="1941" width="0.2" height="15.0" fill="rgb(233,223,36)" rx="2" ry="2" />
<text  x="85.84" y="1951.5" ></text>
</g>
<g >
<title>lock_sock_nested (11 samples, 0.19%)</title><rect x="259.3" y="1893" width="2.2" height="15.0" fill="rgb(227,57,28)" rx="2" ry="2" />
<text  x="262.32" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.09%)</title><rect x="63.3" y="1909" width="1.0" height="15.0" fill="rgb(225,129,22)" rx="2" ry="2" />
<text  x="66.33" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="345.8" y="1525" width="0.3" height="15.0" fill="rgb(214,109,43)" rx="2" ry="2" />
<text  x="348.85" y="1535.5" ></text>
</g>
<g >
<title>tcp_send_mss (19 samples, 0.32%)</title><rect x="306.4" y="1877" width="3.8" height="15.0" fill="rgb(243,38,0)" rx="2" ry="2" />
<text  x="309.41" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1022.8" y="1989" width="0.6" height="15.0" fill="rgb(251,16,3)" rx="2" ry="2" />
<text  x="1025.78" y="1999.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="440.4" y="1877" width="0.6" height="15.0" fill="rgb(215,98,42)" rx="2" ry="2" />
<text  x="443.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="707.3" y="1621" width="0.2" height="15.0" fill="rgb(225,142,39)" rx="2" ry="2" />
<text  x="710.25" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="257.5" y="1701" width="0.2" height="15.0" fill="rgb(244,106,4)" rx="2" ry="2" />
<text  x="260.51" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="672.4" y="2005" width="0.2" height="15.0" fill="rgb(243,106,31)" rx="2" ry="2" />
<text  x="675.44" y="2015.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="832.2" y="1605" width="0.2" height="15.0" fill="rgb(208,149,47)" rx="2" ry="2" />
<text  x="835.22" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="282.5" y="1397" width="0.8" height="15.0" fill="rgb(242,72,27)" rx="2" ry="2" />
<text  x="285.46" y="1407.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.09%)</title><rect x="530.2" y="1973" width="1.0" height="15.0" fill="rgb(251,54,12)" rx="2" ry="2" />
<text  x="533.17" y="1983.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="95.7" y="1877" width="0.2" height="15.0" fill="rgb(226,120,41)" rx="2" ry="2" />
<text  x="98.72" y="1887.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="346.9" y="1893" width="0.2" height="15.0" fill="rgb(245,53,11)" rx="2" ry="2" />
<text  x="349.86" y="1903.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="230.5" y="1605" width="0.2" height="15.0" fill="rgb(239,125,39)" rx="2" ry="2" />
<text  x="233.55" y="1615.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::~DelayedDestruction (1 samples, 0.02%)</title><rect x="79.6" y="1957" width="0.2" height="15.0" fill="rgb(243,75,3)" rx="2" ry="2" />
<text  x="82.62" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (8 samples, 0.14%)</title><rect x="844.3" y="1925" width="1.6" height="15.0" fill="rgb(211,143,24)" rx="2" ry="2" />
<text  x="847.29" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (17 samples, 0.29%)</title><rect x="998.0" y="2021" width="3.4" height="15.0" fill="rgb(243,178,31)" rx="2" ry="2" />
<text  x="1001.03" y="2031.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeoutExpired (4 samples, 0.07%)</title><rect x="19.1" y="2021" width="0.8" height="15.0" fill="rgb(215,222,13)" rx="2" ry="2" />
<text  x="22.06" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="208.8" y="2021" width="0.2" height="15.0" fill="rgb(221,122,42)" rx="2" ry="2" />
<text  x="211.81" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="464.0" y="1925" width="0.8" height="15.0" fill="rgb(214,85,30)" rx="2" ry="2" />
<text  x="466.97" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="510.5" y="1813" width="0.4" height="15.0" fill="rgb(209,209,17)" rx="2" ry="2" />
<text  x="513.45" y="1823.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.02%)</title><rect x="1022.6" y="1957" width="0.2" height="15.0" fill="rgb(247,200,2)" rx="2" ry="2" />
<text  x="1025.58" y="1967.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="312.4" y="1749" width="0.2" height="15.0" fill="rgb(212,192,43)" rx="2" ry="2" />
<text  x="315.45" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="345.4" y="1829" width="0.2" height="15.0" fill="rgb(213,110,13)" rx="2" ry="2" />
<text  x="348.45" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (2 samples, 0.03%)</title><rect x="79.2" y="1957" width="0.4" height="15.0" fill="rgb(228,183,17)" rx="2" ry="2" />
<text  x="82.22" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="740.7" y="1461" width="0.2" height="15.0" fill="rgb(254,149,38)" rx="2" ry="2" />
<text  x="743.66" y="1471.5" ></text>
</g>
<g >
<title>__slab_free (14 samples, 0.24%)</title><rect x="342.8" y="1909" width="2.8" height="15.0" fill="rgb(228,224,13)" rx="2" ry="2" />
<text  x="345.83" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="861.8" y="1925" width="0.2" height="15.0" fill="rgb(217,2,26)" rx="2" ry="2" />
<text  x="864.80" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="14.4" y="1813" width="0.2" height="15.0" fill="rgb(238,32,36)" rx="2" ry="2" />
<text  x="17.43" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="691.6" y="1973" width="0.2" height="15.0" fill="rgb(243,206,32)" rx="2" ry="2" />
<text  x="694.56" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="55.3" y="1957" width="0.2" height="15.0" fill="rgb(223,17,17)" rx="2" ry="2" />
<text  x="58.28" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="840.9" y="1621" width="0.2" height="15.0" fill="rgb(228,84,19)" rx="2" ry="2" />
<text  x="843.87" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1058.2" y="1797" width="0.2" height="15.0" fill="rgb(220,34,54)" rx="2" ry="2" />
<text  x="1061.20" y="1807.5" ></text>
</g>
<g >
<title>__alloc_fd (3 samples, 0.05%)</title><rect x="332.0" y="1941" width="0.6" height="15.0" fill="rgb(217,151,25)" rx="2" ry="2" />
<text  x="334.96" y="1951.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="464.4" y="1605" width="0.2" height="15.0" fill="rgb(250,147,51)" rx="2" ry="2" />
<text  x="467.37" y="1615.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="513.3" y="1733" width="0.2" height="15.0" fill="rgb(236,197,18)" rx="2" ry="2" />
<text  x="516.27" y="1743.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="592.2" y="1861" width="0.6" height="15.0" fill="rgb(206,92,8)" rx="2" ry="2" />
<text  x="595.15" y="1871.5" ></text>
</g>
<g >
<title>tcp_ack (26 samples, 0.44%)</title><rect x="1100.9" y="1541" width="5.2" height="15.0" fill="rgb(246,138,16)" rx="2" ry="2" />
<text  x="1103.86" y="1551.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="903.3" y="1717" width="0.2" height="15.0" fill="rgb(211,47,13)" rx="2" ry="2" />
<text  x="906.25" y="1727.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="848.5" y="1909" width="0.2" height="15.0" fill="rgb(207,187,21)" rx="2" ry="2" />
<text  x="851.52" y="1919.5" ></text>
</g>
<g >
<title>___slab_alloc (11 samples, 0.19%)</title><rect x="376.8" y="1877" width="2.3" height="15.0" fill="rgb(247,128,36)" rx="2" ry="2" />
<text  x="379.84" y="1887.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1121.6" y="1925" width="0.2" height="15.0" fill="rgb(236,206,22)" rx="2" ry="2" />
<text  x="1124.58" y="1935.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="593.2" y="1669" width="0.2" height="15.0" fill="rgb(225,208,24)" rx="2" ry="2" />
<text  x="596.16" y="1679.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="1055.0" y="1765" width="0.2" height="15.0" fill="rgb(221,75,37)" rx="2" ry="2" />
<text  x="1057.98" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="903.3" y="1861" width="0.2" height="15.0" fill="rgb(227,183,1)" rx="2" ry="2" />
<text  x="906.25" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="809.5" y="1557" width="0.2" height="15.0" fill="rgb(209,23,54)" rx="2" ry="2" />
<text  x="812.48" y="1567.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="783.5" y="1317" width="0.2" height="15.0" fill="rgb(211,146,39)" rx="2" ry="2" />
<text  x="786.52" y="1327.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="660.6" y="1941" width="1.2" height="15.0" fill="rgb(219,93,2)" rx="2" ry="2" />
<text  x="663.57" y="1951.5" ></text>
</g>
<g >
<title>__cxa_get_globals@plt (1 samples, 0.02%)</title><rect x="938.1" y="1909" width="0.2" height="15.0" fill="rgb(223,219,50)" rx="2" ry="2" />
<text  x="941.06" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (2 samples, 0.03%)</title><rect x="195.9" y="1973" width="0.4" height="15.0" fill="rgb(211,96,1)" rx="2" ry="2" />
<text  x="198.93" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="202.0" y="1957" width="0.2" height="15.0" fill="rgb(224,101,38)" rx="2" ry="2" />
<text  x="204.97" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="783.3" y="1397" width="0.6" height="15.0" fill="rgb(252,86,51)" rx="2" ry="2" />
<text  x="786.32" y="1407.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="783.3" y="1461" width="0.8" height="15.0" fill="rgb(252,224,11)" rx="2" ry="2" />
<text  x="786.32" y="1471.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="198.8" y="2021" width="0.2" height="15.0" fill="rgb(219,23,36)" rx="2" ry="2" />
<text  x="201.75" y="2031.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="347.5" y="1605" width="0.2" height="15.0" fill="rgb(214,3,35)" rx="2" ry="2" />
<text  x="350.46" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (5 samples, 0.09%)</title><rect x="630.2" y="1925" width="1.0" height="15.0" fill="rgb(230,37,31)" rx="2" ry="2" />
<text  x="633.18" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="721.3" y="1445" width="0.2" height="15.0" fill="rgb(246,48,25)" rx="2" ry="2" />
<text  x="724.34" y="1455.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="173.2" y="1909" width="0.2" height="15.0" fill="rgb(205,229,7)" rx="2" ry="2" />
<text  x="176.20" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.5" y="1829" width="0.2" height="15.0" fill="rgb(230,146,1)" rx="2" ry="2" />
<text  x="494.54" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="701.8" y="1941" width="0.2" height="15.0" fill="rgb(240,104,36)" rx="2" ry="2" />
<text  x="704.82" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="207.4" y="1941" width="0.2" height="15.0" fill="rgb(234,192,54)" rx="2" ry="2" />
<text  x="210.40" y="1951.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;int, int  (1 samples, 0.02%)</title><rect x="581.9" y="1957" width="0.2" height="15.0" fill="rgb(230,164,54)" rx="2" ry="2" />
<text  x="584.89" y="1967.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="29.3" y="1941" width="0.2" height="15.0" fill="rgb(232,14,46)" rx="2" ry="2" />
<text  x="32.32" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (6 samples, 0.10%)</title><rect x="232.2" y="1909" width="1.2" height="15.0" fill="rgb(229,193,43)" rx="2" ry="2" />
<text  x="235.16" y="1919.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="283.5" y="1445" width="0.2" height="15.0" fill="rgb(237,6,18)" rx="2" ry="2" />
<text  x="286.47" y="1455.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="54.5" y="1733" width="0.2" height="15.0" fill="rgb(210,79,2)" rx="2" ry="2" />
<text  x="57.47" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="819.5" y="1653" width="0.2" height="15.0" fill="rgb(253,76,16)" rx="2" ry="2" />
<text  x="822.54" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="533.4" y="1989" width="0.2" height="15.0" fill="rgb(229,111,19)" rx="2" ry="2" />
<text  x="536.39" y="1999.5" ></text>
</g>
<g >
<title>process_backlog (28 samples, 0.48%)</title><rect x="1100.7" y="1701" width="5.6" height="15.0" fill="rgb(249,89,4)" rx="2" ry="2" />
<text  x="1103.65" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.05%)</title><rect x="999.8" y="1973" width="0.6" height="15.0" fill="rgb(217,207,51)" rx="2" ry="2" />
<text  x="1002.84" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::setSharedInfo (2 samples, 0.03%)</title><rect x="646.1" y="2021" width="0.4" height="15.0" fill="rgb(221,156,50)" rx="2" ry="2" />
<text  x="649.08" y="2031.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="205.8" y="1893" width="0.2" height="15.0" fill="rgb(216,168,25)" rx="2" ry="2" />
<text  x="208.79" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::str[abi:cxx11] (37 samples, 0.63%)</title><rect x="597.6" y="1941" width="7.4" height="15.0" fill="rgb(207,124,18)" rx="2" ry="2" />
<text  x="600.59" y="1951.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (319 samples, 5.44%)</title><rect x="1055.6" y="1989" width="64.2" height="15.0" fill="rgb(218,26,13)" rx="2" ry="2" />
<text  x="1058.58" y="1999.5" >SYSC_re..</text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="783.3" y="1493" width="0.8" height="15.0" fill="rgb(245,62,9)" rx="2" ry="2" />
<text  x="786.32" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="341.8" y="1845" width="0.4" height="15.0" fill="rgb(237,162,15)" rx="2" ry="2" />
<text  x="344.82" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="888.2" y="1749" width="0.2" height="15.0" fill="rgb(240,205,30)" rx="2" ry="2" />
<text  x="891.16" y="1759.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="94.9" y="1957" width="0.8" height="15.0" fill="rgb(223,179,32)" rx="2" ry="2" />
<text  x="97.92" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="407.8" y="1797" width="0.2" height="15.0" fill="rgb(244,222,10)" rx="2" ry="2" />
<text  x="410.83" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (1 samples, 0.02%)</title><rect x="837.0" y="1925" width="0.2" height="15.0" fill="rgb(214,110,26)" rx="2" ry="2" />
<text  x="840.05" y="1935.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1541" width="0.2" height="15.0" fill="rgb(208,64,16)" rx="2" ry="2" />
<text  x="906.25" y="1551.5" ></text>
</g>
<g >
<title>__srcu_read_lock (2 samples, 0.03%)</title><rect x="732.8" y="1621" width="0.4" height="15.0" fill="rgb(214,159,26)" rx="2" ry="2" />
<text  x="735.81" y="1631.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="543.3" y="1973" width="0.2" height="15.0" fill="rgb(219,193,27)" rx="2" ry="2" />
<text  x="546.25" y="1983.5" ></text>
</g>
<g >
<title>std::thread::id::id (2 samples, 0.03%)</title><rect x="232.8" y="1877" width="0.4" height="15.0" fill="rgb(253,168,36)" rx="2" ry="2" />
<text  x="235.76" y="1887.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="282.1" y="1605" width="0.2" height="15.0" fill="rgb(219,106,52)" rx="2" ry="2" />
<text  x="285.06" y="1615.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="270.2" y="1829" width="0.2" height="15.0" fill="rgb(248,56,23)" rx="2" ry="2" />
<text  x="273.19" y="1839.5" ></text>
</g>
<g >
<title>__skb_clone (14 samples, 0.24%)</title><rect x="798.4" y="1653" width="2.8" height="15.0" fill="rgb(212,221,47)" rx="2" ry="2" />
<text  x="801.41" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1155.4" y="1925" width="0.2" height="15.0" fill="rgb(233,76,14)" rx="2" ry="2" />
<text  x="1158.39" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="151.3" y="69" width="0.2" height="15.0" fill="rgb(238,178,11)" rx="2" ry="2" />
<text  x="154.26" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (1 samples, 0.02%)</title><rect x="126.5" y="37" width="0.2" height="15.0" fill="rgb(229,78,3)" rx="2" ry="2" />
<text  x="129.51" y="47.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="644.9" y="1893" width="0.4" height="15.0" fill="rgb(246,58,45)" rx="2" ry="2" />
<text  x="647.87" y="1903.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::size (1 samples, 0.02%)</title><rect x="82.0" y="1941" width="0.2" height="15.0" fill="rgb(250,10,1)" rx="2" ry="2" />
<text  x="85.04" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1170.3" y="2021" width="0.2" height="15.0" fill="rgb(247,86,53)" rx="2" ry="2" />
<text  x="1173.28" y="2031.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="13.4" y="1989" width="0.2" height="15.0" fill="rgb(241,127,5)" rx="2" ry="2" />
<text  x="16.42" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="64.7" y="1845" width="0.2" height="15.0" fill="rgb(246,54,7)" rx="2" ry="2" />
<text  x="67.73" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="692.2" y="2037" width="0.2" height="15.0" fill="rgb(221,173,49)" rx="2" ry="2" />
<text  x="695.16" y="2047.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="816.5" y="1413" width="0.2" height="15.0" fill="rgb(237,155,46)" rx="2" ry="2" />
<text  x="819.52" y="1423.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="533.4" y="1925" width="0.2" height="15.0" fill="rgb(217,110,42)" rx="2" ry="2" />
<text  x="536.39" y="1935.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="757.6" y="1717" width="0.2" height="15.0" fill="rgb(252,79,45)" rx="2" ry="2" />
<text  x="760.56" y="1727.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (3 samples, 0.05%)</title><rect x="232.6" y="1893" width="0.6" height="15.0" fill="rgb(254,54,37)" rx="2" ry="2" />
<text  x="235.56" y="1903.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;unsigned long, unsigned int&gt; (2 samples, 0.03%)</title><rect x="644.5" y="2005" width="0.4" height="15.0" fill="rgb(233,16,35)" rx="2" ry="2" />
<text  x="647.47" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="63.5" y="1893" width="0.8" height="15.0" fill="rgb(254,195,2)" rx="2" ry="2" />
<text  x="66.53" y="1903.5" ></text>
</g>
<g >
<title>accept4 (1 samples, 0.02%)</title><rect x="24.1" y="2005" width="0.2" height="15.0" fill="rgb(209,87,24)" rx="2" ry="2" />
<text  x="27.09" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1119.2" y="1861" width="0.4" height="15.0" fill="rgb(211,227,38)" rx="2" ry="2" />
<text  x="1122.17" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (8 samples, 0.14%)</title><rect x="181.6" y="1909" width="1.7" height="15.0" fill="rgb(231,71,39)" rx="2" ry="2" />
<text  x="184.65" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_locked (4 samples, 0.07%)</title><rect x="282.5" y="1413" width="0.8" height="15.0" fill="rgb(210,124,26)" rx="2" ry="2" />
<text  x="285.46" y="1423.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="858.2" y="1957" width="0.2" height="15.0" fill="rgb(249,150,39)" rx="2" ry="2" />
<text  x="861.18" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="801.0" y="1429" width="0.2" height="15.0" fill="rgb(250,26,25)" rx="2" ry="2" />
<text  x="804.03" y="1439.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="884.5" y="1893" width="0.2" height="15.0" fill="rgb(253,22,29)" rx="2" ry="2" />
<text  x="887.54" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="747.7" y="1653" width="0.2" height="15.0" fill="rgb(248,0,7)" rx="2" ry="2" />
<text  x="750.70" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="975.5" y="2021" width="0.4" height="15.0" fill="rgb(247,200,40)" rx="2" ry="2" />
<text  x="978.49" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1155.4" y="1765" width="0.2" height="15.0" fill="rgb(237,77,0)" rx="2" ry="2" />
<text  x="1158.39" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1148.7" y="1813" width="0.2" height="15.0" fill="rgb(248,147,54)" rx="2" ry="2" />
<text  x="1151.75" y="1823.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="205.6" y="1973" width="0.2" height="15.0" fill="rgb(252,59,1)" rx="2" ry="2" />
<text  x="208.59" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="633.2" y="1717" width="0.2" height="15.0" fill="rgb(221,113,12)" rx="2" ry="2" />
<text  x="636.20" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="486.7" y="1701" width="0.2" height="15.0" fill="rgb(215,78,29)" rx="2" ry="2" />
<text  x="489.71" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1055.2" y="1749" width="0.2" height="15.0" fill="rgb(223,125,3)" rx="2" ry="2" />
<text  x="1058.18" y="1759.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="631.4" y="1605" width="0.2" height="15.0" fill="rgb(229,150,25)" rx="2" ry="2" />
<text  x="634.39" y="1615.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="812.5" y="1301" width="0.2" height="15.0" fill="rgb(216,131,53)" rx="2" ry="2" />
<text  x="815.50" y="1311.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="19.1" y="1685" width="0.2" height="15.0" fill="rgb(224,78,0)" rx="2" ry="2" />
<text  x="22.06" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="812.5" y="1509" width="0.2" height="15.0" fill="rgb(224,221,40)" rx="2" ry="2" />
<text  x="815.50" y="1519.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (37 samples, 0.63%)</title><rect x="597.6" y="1957" width="7.4" height="15.0" fill="rgb(227,15,9)" rx="2" ry="2" />
<text  x="600.59" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="90.9" y="1957" width="0.2" height="15.0" fill="rgb(217,28,6)" rx="2" ry="2" />
<text  x="93.89" y="1967.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (3 samples, 0.05%)</title><rect x="42.6" y="1925" width="0.6" height="15.0" fill="rgb(211,190,7)" rx="2" ry="2" />
<text  x="45.60" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="233.2" y="1893" width="0.2" height="15.0" fill="rgb(221,60,1)" rx="2" ry="2" />
<text  x="236.16" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetch (15 samples, 0.26%)</title><rect x="192.9" y="2021" width="3.0" height="15.0" fill="rgb(246,229,25)" rx="2" ry="2" />
<text  x="195.92" y="2031.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="319.9" y="2037" width="0.4" height="15.0" fill="rgb(215,96,50)" rx="2" ry="2" />
<text  x="322.89" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="97.1" y="1829" width="0.2" height="15.0" fill="rgb(236,175,9)" rx="2" ry="2" />
<text  x="100.13" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="629.4" y="1941" width="0.2" height="15.0" fill="rgb(251,82,25)" rx="2" ry="2" />
<text  x="632.38" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::doFibersPoolResizing (4 samples, 0.07%)</title><rect x="19.1" y="1989" width="0.8" height="15.0" fill="rgb(246,226,46)" rx="2" ry="2" />
<text  x="22.06" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.07%)</title><rect x="180.2" y="1893" width="0.8" height="15.0" fill="rgb(205,19,16)" rx="2" ry="2" />
<text  x="183.24" y="1903.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="491.5" y="1717" width="0.2" height="15.0" fill="rgb(229,98,38)" rx="2" ry="2" />
<text  x="494.54" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="71.0" y="1653" width="0.2" height="15.0" fill="rgb(216,157,45)" rx="2" ry="2" />
<text  x="73.97" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="1179.3" y="2005" width="0.2" height="15.0" fill="rgb(230,103,15)" rx="2" ry="2" />
<text  x="1182.33" y="2015.5" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="1106.3" y="1781" width="0.4" height="15.0" fill="rgb(214,175,29)" rx="2" ry="2" />
<text  x="1109.29" y="1791.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (3 samples, 0.05%)</title><rect x="495.8" y="1813" width="0.6" height="15.0" fill="rgb(215,111,32)" rx="2" ry="2" />
<text  x="498.76" y="1823.5" ></text>
</g>
<g >
<title>detach_if_pending (1 samples, 0.02%)</title><rect x="1023.0" y="1685" width="0.2" height="15.0" fill="rgb(222,139,13)" rx="2" ry="2" />
<text  x="1025.98" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (5 samples, 0.09%)</title><rect x="167.4" y="1957" width="1.0" height="15.0" fill="rgb(252,65,46)" rx="2" ry="2" />
<text  x="170.36" y="1967.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="238.2" y="1781" width="0.2" height="15.0" fill="rgb(251,11,43)" rx="2" ry="2" />
<text  x="241.19" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.03%)</title><rect x="1176.5" y="1989" width="0.4" height="15.0" fill="rgb(230,149,19)" rx="2" ry="2" />
<text  x="1179.52" y="1999.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_base&lt;unsigned int&gt;::store (2 samples, 0.03%)</title><rect x="194.3" y="1989" width="0.4" height="15.0" fill="rgb(241,130,17)" rx="2" ry="2" />
<text  x="197.32" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="930.4" y="1893" width="0.2" height="15.0" fill="rgb(220,46,19)" rx="2" ry="2" />
<text  x="933.42" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="907.3" y="1989" width="0.6" height="15.0" fill="rgb(237,187,25)" rx="2" ry="2" />
<text  x="910.27" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (161 samples, 2.75%)</title><rect x="123.3" y="1877" width="32.4" height="15.0" fill="rgb(212,201,21)" rx="2" ry="2" />
<text  x="126.29" y="1887.5" >[u..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="809.5" y="1429" width="0.2" height="15.0" fill="rgb(215,78,49)" rx="2" ry="2" />
<text  x="812.48" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.4" y="1957" width="0.2" height="15.0" fill="rgb(226,17,17)" rx="2" ry="2" />
<text  x="1002.44" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (3 samples, 0.05%)</title><rect x="80.8" y="1957" width="0.6" height="15.0" fill="rgb(210,141,7)" rx="2" ry="2" />
<text  x="83.83" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="866.4" y="1989" width="0.2" height="15.0" fill="rgb(227,10,34)" rx="2" ry="2" />
<text  x="869.43" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1148.7" y="1957" width="0.2" height="15.0" fill="rgb(235,155,46)" rx="2" ry="2" />
<text  x="1151.75" y="1967.5" ></text>
</g>
<g >
<title>ipv4_default_advmss (1 samples, 0.02%)</title><rect x="1055.0" y="1733" width="0.2" height="15.0" fill="rgb(237,132,35)" rx="2" ry="2" />
<text  x="1057.98" y="1743.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (17 samples, 0.29%)</title><rect x="692.6" y="1989" width="3.4" height="15.0" fill="rgb(234,167,46)" rx="2" ry="2" />
<text  x="695.56" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="491.7" y="1733" width="0.2" height="15.0" fill="rgb(216,223,11)" rx="2" ry="2" />
<text  x="494.74" y="1743.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (1 samples, 0.02%)</title><rect x="28.1" y="1973" width="0.2" height="15.0" fill="rgb(251,104,54)" rx="2" ry="2" />
<text  x="31.11" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1170.3" y="1925" width="0.2" height="15.0" fill="rgb(249,54,16)" rx="2" ry="2" />
<text  x="1173.28" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="151.1" y="69" width="0.2" height="15.0" fill="rgb(251,114,25)" rx="2" ry="2" />
<text  x="154.06" y="79.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="750.1" y="1669" width="0.2" height="15.0" fill="rgb(221,226,38)" rx="2" ry="2" />
<text  x="753.12" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1058.2" y="1877" width="0.2" height="15.0" fill="rgb(222,92,30)" rx="2" ry="2" />
<text  x="1061.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (2 samples, 0.03%)</title><rect x="576.9" y="1989" width="0.4" height="15.0" fill="rgb(235,210,27)" rx="2" ry="2" />
<text  x="579.86" y="1999.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="941.5" y="1829" width="0.2" height="15.0" fill="rgb(238,144,11)" rx="2" ry="2" />
<text  x="944.48" y="1839.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="858.4" y="1973" width="0.2" height="15.0" fill="rgb(216,226,17)" rx="2" ry="2" />
<text  x="861.38" y="1983.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (45 samples, 0.77%)</title><rect x="803.6" y="1669" width="9.1" height="15.0" fill="rgb(224,53,52)" rx="2" ry="2" />
<text  x="806.64" y="1679.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="836.6" y="1893" width="0.2" height="15.0" fill="rgb(234,222,0)" rx="2" ry="2" />
<text  x="839.64" y="1903.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="320.5" y="2021" width="0.2" height="15.0" fill="rgb(216,156,42)" rx="2" ry="2" />
<text  x="323.49" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="362.6" y="1717" width="0.2" height="15.0" fill="rgb(214,217,9)" rx="2" ry="2" />
<text  x="365.55" y="1727.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (17 samples, 0.29%)</title><rect x="848.9" y="1941" width="3.4" height="15.0" fill="rgb(227,146,28)" rx="2" ry="2" />
<text  x="851.92" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="946.5" y="1989" width="0.2" height="15.0" fill="rgb(230,18,38)" rx="2" ry="2" />
<text  x="949.51" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="548.9" y="1733" width="0.2" height="15.0" fill="rgb(232,210,3)" rx="2" ry="2" />
<text  x="551.89" y="1743.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="464.0" y="1701" width="0.2" height="15.0" fill="rgb(224,41,31)" rx="2" ry="2" />
<text  x="466.97" y="1711.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="464.6" y="1685" width="0.2" height="15.0" fill="rgb(253,82,53)" rx="2" ry="2" />
<text  x="467.57" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="1178.3" y="1973" width="0.2" height="15.0" fill="rgb(228,181,42)" rx="2" ry="2" />
<text  x="1181.33" y="1983.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="809.5" y="1333" width="0.2" height="15.0" fill="rgb(241,9,35)" rx="2" ry="2" />
<text  x="812.48" y="1343.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1181.1" y="1813" width="0.2" height="15.0" fill="rgb(228,68,35)" rx="2" ry="2" />
<text  x="1184.15" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="54.5" y="1717" width="0.2" height="15.0" fill="rgb(205,89,53)" rx="2" ry="2" />
<text  x="57.47" y="1727.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="840.9" y="1461" width="0.2" height="15.0" fill="rgb(241,107,32)" rx="2" ry="2" />
<text  x="843.87" y="1471.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="152.5" y="325" width="0.2" height="15.0" fill="rgb(206,6,17)" rx="2" ry="2" />
<text  x="155.47" y="335.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="441.4" y="1829" width="0.4" height="15.0" fill="rgb(217,221,28)" rx="2" ry="2" />
<text  x="444.43" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="316.9" y="1989" width="0.2" height="15.0" fill="rgb(246,187,16)" rx="2" ry="2" />
<text  x="319.87" y="1999.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="238.2" y="1797" width="0.2" height="15.0" fill="rgb(253,196,45)" rx="2" ry="2" />
<text  x="241.19" y="1807.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="345.8" y="1477" width="0.3" height="15.0" fill="rgb(211,226,27)" rx="2" ry="2" />
<text  x="348.85" y="1487.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1032.4" y="1765" width="0.2" height="15.0" fill="rgb(206,170,31)" rx="2" ry="2" />
<text  x="1035.44" y="1775.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="283.3" y="1477" width="0.4" height="15.0" fill="rgb(253,124,13)" rx="2" ry="2" />
<text  x="286.27" y="1487.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="985.6" y="1925" width="0.2" height="15.0" fill="rgb(212,8,50)" rx="2" ry="2" />
<text  x="988.55" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="844.1" y="1685" width="0.2" height="15.0" fill="rgb(251,141,43)" rx="2" ry="2" />
<text  x="847.09" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="533.4" y="1973" width="0.2" height="15.0" fill="rgb(214,57,48)" rx="2" ry="2" />
<text  x="536.39" y="1983.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="634.8" y="1957" width="0.4" height="15.0" fill="rgb(231,198,19)" rx="2" ry="2" />
<text  x="637.81" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (59 samples, 1.01%)</title><rect x="1155.2" y="2005" width="11.9" height="15.0" fill="rgb(221,32,7)" rx="2" ry="2" />
<text  x="1158.19" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr (54 samples, 0.92%)</title><rect x="596.0" y="2021" width="10.8" height="15.0" fill="rgb(209,136,10)" rx="2" ry="2" />
<text  x="598.98" y="2031.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (3 samples, 0.05%)</title><rect x="267.2" y="1877" width="0.6" height="15.0" fill="rgb(213,190,12)" rx="2" ry="2" />
<text  x="270.17" y="1887.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.09%)</title><rect x="636.4" y="1989" width="1.0" height="15.0" fill="rgb(251,173,5)" rx="2" ry="2" />
<text  x="639.42" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="571.4" y="1957" width="0.4" height="15.0" fill="rgb(254,215,2)" rx="2" ry="2" />
<text  x="574.43" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="920.6" y="1797" width="0.2" height="15.0" fill="rgb(205,223,13)" rx="2" ry="2" />
<text  x="923.56" y="1807.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="317.3" y="1957" width="0.8" height="15.0" fill="rgb(207,159,46)" rx="2" ry="2" />
<text  x="320.27" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="891.0" y="1989" width="0.4" height="15.0" fill="rgb(253,128,31)" rx="2" ry="2" />
<text  x="893.98" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="388.3" y="1861" width="0.2" height="15.0" fill="rgb(252,92,1)" rx="2" ry="2" />
<text  x="391.31" y="1871.5" ></text>
</g>
<g >
<title>folly::operator&amp; (1 samples, 0.02%)</title><rect x="882.1" y="1893" width="0.2" height="15.0" fill="rgb(254,147,28)" rx="2" ry="2" />
<text  x="885.12" y="1903.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="1023.0" y="1701" width="0.2" height="15.0" fill="rgb(242,53,15)" rx="2" ry="2" />
<text  x="1025.98" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="778.5" y="1573" width="0.2" height="15.0" fill="rgb(251,168,41)" rx="2" ry="2" />
<text  x="781.49" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="345.4" y="1781" width="0.2" height="15.0" fill="rgb(235,210,8)" rx="2" ry="2" />
<text  x="348.45" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1429" width="30.0" height="15.0" fill="rgb(222,78,40)" rx="2" ry="2" />
<text  x="127.10" y="1439.5" >[u..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="800.8" y="1429" width="0.2" height="15.0" fill="rgb(231,51,52)" rx="2" ry="2" />
<text  x="803.83" y="1439.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="721.3" y="1541" width="0.2" height="15.0" fill="rgb(225,202,23)" rx="2" ry="2" />
<text  x="724.34" y="1551.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="740.7" y="1637" width="0.2" height="15.0" fill="rgb(218,123,50)" rx="2" ry="2" />
<text  x="743.66" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="840.9" y="1749" width="0.2" height="15.0" fill="rgb(215,177,33)" rx="2" ry="2" />
<text  x="843.87" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="191.3" y="1989" width="0.2" height="15.0" fill="rgb(226,15,13)" rx="2" ry="2" />
<text  x="194.31" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="530.6" y="1957" width="0.2" height="15.0" fill="rgb(220,73,53)" rx="2" ry="2" />
<text  x="533.58" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="114.0" y="2021" width="0.4" height="15.0" fill="rgb(220,47,29)" rx="2" ry="2" />
<text  x="117.03" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="524.9" y="1941" width="0.2" height="15.0" fill="rgb(241,87,14)" rx="2" ry="2" />
<text  x="527.94" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="981" width="29.8" height="15.0" fill="rgb(220,139,34)" rx="2" ry="2" />
<text  x="127.10" y="991.5" >[u..</text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="984.5" y="1973" width="0.4" height="15.0" fill="rgb(220,57,42)" rx="2" ry="2" />
<text  x="987.55" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="1152.2" y="2053" width="0.2" height="15.0" fill="rgb(241,131,1)" rx="2" ry="2" />
<text  x="1155.17" y="2063.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="955.8" y="1925" width="0.2" height="15.0" fill="rgb(205,227,49)" rx="2" ry="2" />
<text  x="958.77" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="492.3" y="1877" width="0.2" height="15.0" fill="rgb(236,148,14)" rx="2" ry="2" />
<text  x="495.34" y="1887.5" ></text>
</g>
<g >
<title>lock_timer_base (13 samples, 0.22%)</title><rect x="809.9" y="1605" width="2.6" height="15.0" fill="rgb(254,84,31)" rx="2" ry="2" />
<text  x="812.88" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="257.5" y="1797" width="0.2" height="15.0" fill="rgb(211,38,43)" rx="2" ry="2" />
<text  x="260.51" y="1807.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="99.7" y="1701" width="0.2" height="15.0" fill="rgb(211,196,7)" rx="2" ry="2" />
<text  x="102.75" y="1711.5" ></text>
</g>
<g >
<title>sock_poll (88 samples, 1.50%)</title><rect x="474.2" y="1909" width="17.7" height="15.0" fill="rgb(207,51,25)" rx="2" ry="2" />
<text  x="477.23" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="114.8" y="1925" width="0.8" height="15.0" fill="rgb(251,56,47)" rx="2" ry="2" />
<text  x="117.84" y="1935.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;::allocator (2 samples, 0.03%)</title><rect x="576.1" y="1941" width="0.4" height="15.0" fill="rgb(228,116,8)" rx="2" ry="2" />
<text  x="579.05" y="1951.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (8 samples, 0.14%)</title><rect x="742.1" y="1701" width="1.6" height="15.0" fill="rgb(222,102,37)" rx="2" ry="2" />
<text  x="745.07" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="747.7" y="1765" width="0.2" height="15.0" fill="rgb(208,89,34)" rx="2" ry="2" />
<text  x="750.70" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (3 samples, 0.05%)</title><rect x="72.8" y="1989" width="0.6" height="15.0" fill="rgb(227,14,41)" rx="2" ry="2" />
<text  x="75.78" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::getConfigUnsafe (3 samples, 0.05%)</title><rect x="924.2" y="2037" width="0.6" height="15.0" fill="rgb(226,166,8)" rx="2" ry="2" />
<text  x="927.18" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (1 samples, 0.02%)</title><rect x="901.0" y="2005" width="0.2" height="15.0" fill="rgb(238,83,12)" rx="2" ry="2" />
<text  x="904.04" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="616.3" y="1957" width="0.2" height="15.0" fill="rgb(246,59,26)" rx="2" ry="2" />
<text  x="619.30" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="441.4" y="1589" width="0.2" height="15.0" fill="rgb(242,126,30)" rx="2" ry="2" />
<text  x="444.43" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="548.9" y="1749" width="0.2" height="15.0" fill="rgb(219,201,27)" rx="2" ry="2" />
<text  x="551.89" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (2 samples, 0.03%)</title><rect x="631.2" y="1925" width="0.4" height="15.0" fill="rgb(243,41,42)" rx="2" ry="2" />
<text  x="634.19" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="154.3" y="1445" width="0.2" height="15.0" fill="rgb(254,64,33)" rx="2" ry="2" />
<text  x="157.28" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="529.4" y="1941" width="0.2" height="15.0" fill="rgb(237,92,13)" rx="2" ry="2" />
<text  x="532.37" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="388.3" y="1701" width="0.2" height="15.0" fill="rgb(212,116,36)" rx="2" ry="2" />
<text  x="391.31" y="1711.5" ></text>
</g>
<g >
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="903.3" y="1493" width="0.2" height="15.0" fill="rgb(248,88,46)" rx="2" ry="2" />
<text  x="906.25" y="1503.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::~weak_ptr (1 samples, 0.02%)</title><rect x="89.1" y="1957" width="0.2" height="15.0" fill="rgb(223,159,43)" rx="2" ry="2" />
<text  x="92.08" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (1 samples, 0.02%)</title><rect x="78.8" y="1941" width="0.2" height="15.0" fill="rgb(222,119,20)" rx="2" ry="2" />
<text  x="81.82" y="1951.5" ></text>
</g>
<g >
<title>dev_queue_xmit (65 samples, 1.11%)</title><rect x="284.3" y="1733" width="13.1" height="15.0" fill="rgb(231,23,33)" rx="2" ry="2" />
<text  x="287.27" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="747.7" y="1701" width="0.2" height="15.0" fill="rgb(207,119,40)" rx="2" ry="2" />
<text  x="750.70" y="1711.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (8 samples, 0.14%)</title><rect x="147.8" y="69" width="1.7" height="15.0" fill="rgb(250,96,48)" rx="2" ry="2" />
<text  x="150.84" y="79.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="944.3" y="1973" width="0.2" height="15.0" fill="rgb(251,113,37)" rx="2" ry="2" />
<text  x="947.30" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="844.1" y="1845" width="0.2" height="15.0" fill="rgb(236,94,38)" rx="2" ry="2" />
<text  x="847.09" y="1855.5" ></text>
</g>
<g >
<title>folly::operator==&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="1001.4" y="2037" width="0.5" height="15.0" fill="rgb(222,173,5)" rx="2" ry="2" />
<text  x="1004.45" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="151.3" y="37" width="0.2" height="15.0" fill="rgb(239,20,4)" rx="2" ry="2" />
<text  x="154.26" y="47.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="626.2" y="1989" width="0.2" height="15.0" fill="rgb(239,115,36)" rx="2" ry="2" />
<text  x="629.16" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="389.9" y="2021" width="0.2" height="15.0" fill="rgb(219,170,49)" rx="2" ry="2" />
<text  x="392.92" y="2031.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="407.4" y="1909" width="0.2" height="15.0" fill="rgb(233,34,4)" rx="2" ry="2" />
<text  x="410.42" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (3 samples, 0.05%)</title><rect x="1173.1" y="2021" width="0.6" height="15.0" fill="rgb(221,83,7)" rx="2" ry="2" />
<text  x="1176.10" y="2031.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (1 samples, 0.02%)</title><rect x="433.6" y="1493" width="0.2" height="15.0" fill="rgb(250,1,26)" rx="2" ry="2" />
<text  x="436.58" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.5" y="1845" width="0.2" height="15.0" fill="rgb(252,99,19)" rx="2" ry="2" />
<text  x="494.54" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="593.2" y="1829" width="0.4" height="15.0" fill="rgb(212,22,35)" rx="2" ry="2" />
<text  x="596.16" y="1839.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="238.0" y="1621" width="0.2" height="15.0" fill="rgb(234,21,27)" rx="2" ry="2" />
<text  x="240.99" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (2 samples, 0.03%)</title><rect x="1152.4" y="2053" width="0.4" height="15.0" fill="rgb(233,181,14)" rx="2" ry="2" />
<text  x="1155.37" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="615.7" y="2005" width="0.2" height="15.0" fill="rgb(220,184,41)" rx="2" ry="2" />
<text  x="618.70" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="540.0" y="1941" width="0.2" height="15.0" fill="rgb(239,15,0)" rx="2" ry="2" />
<text  x="543.03" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="86.1" y="1925" width="0.2" height="15.0" fill="rgb(223,24,37)" rx="2" ry="2" />
<text  x="89.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1109.3" y="1637" width="0.2" height="15.0" fill="rgb(224,86,13)" rx="2" ry="2" />
<text  x="1112.31" y="1647.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="257.5" y="1653" width="0.2" height="15.0" fill="rgb(227,135,7)" rx="2" ry="2" />
<text  x="260.51" y="1663.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (4 samples, 0.07%)</title><rect x="815.3" y="1717" width="0.8" height="15.0" fill="rgb(238,107,28)" rx="2" ry="2" />
<text  x="818.31" y="1727.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (33 samples, 0.56%)</title><rect x="936.5" y="1973" width="6.6" height="15.0" fill="rgb(224,208,19)" rx="2" ry="2" />
<text  x="939.45" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="55.1" y="1781" width="0.2" height="15.0" fill="rgb(254,70,1)" rx="2" ry="2" />
<text  x="58.08" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="19.1" y="1797" width="0.2" height="15.0" fill="rgb(222,173,39)" rx="2" ry="2" />
<text  x="22.06" y="1807.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="259.5" y="1845" width="0.8" height="15.0" fill="rgb(234,185,19)" rx="2" ry="2" />
<text  x="262.52" y="1855.5" ></text>
</g>
<g >
<title>netdev_pick_tx (3 samples, 0.05%)</title><rect x="286.3" y="1701" width="0.6" height="15.0" fill="rgb(219,19,43)" rx="2" ry="2" />
<text  x="289.29" y="1711.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="903.3" y="1781" width="0.2" height="15.0" fill="rgb(246,119,7)" rx="2" ry="2" />
<text  x="906.25" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (1 samples, 0.02%)</title><rect x="639.6" y="1989" width="0.2" height="15.0" fill="rgb(233,16,5)" rx="2" ry="2" />
<text  x="642.64" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1111.3" y="1797" width="0.2" height="15.0" fill="rgb(232,186,54)" rx="2" ry="2" />
<text  x="1114.32" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (158 samples, 2.69%)</title><rect x="123.5" y="1797" width="31.8" height="15.0" fill="rgb(215,124,10)" rx="2" ry="2" />
<text  x="126.49" y="1807.5" >[u..</text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (4 samples, 0.07%)</title><rect x="630.4" y="1909" width="0.8" height="15.0" fill="rgb(223,70,36)" rx="2" ry="2" />
<text  x="633.39" y="1919.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.03%)</title><rect x="1076.1" y="1861" width="0.4" height="15.0" fill="rgb(206,28,28)" rx="2" ry="2" />
<text  x="1079.11" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="491.5" y="1877" width="0.2" height="15.0" fill="rgb(207,84,33)" rx="2" ry="2" />
<text  x="494.54" y="1887.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="191.3" y="1973" width="0.2" height="15.0" fill="rgb(245,130,9)" rx="2" ry="2" />
<text  x="194.31" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="539.0" y="1973" width="1.2" height="15.0" fill="rgb(248,119,16)" rx="2" ry="2" />
<text  x="542.03" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (7 samples, 0.12%)</title><rect x="689.5" y="2005" width="1.5" height="15.0" fill="rgb(251,222,8)" rx="2" ry="2" />
<text  x="692.55" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationMap::markAsActive (1 samples, 0.02%)</title><rect x="909.5" y="2005" width="0.2" height="15.0" fill="rgb(220,110,14)" rx="2" ry="2" />
<text  x="912.49" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1144.3" y="1845" width="0.2" height="15.0" fill="rgb(225,157,37)" rx="2" ry="2" />
<text  x="1147.32" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (1 samples, 0.02%)</title><rect x="961.8" y="2005" width="0.2" height="15.0" fill="rgb(242,214,39)" rx="2" ry="2" />
<text  x="964.81" y="2015.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="256.7" y="1893" width="0.4" height="15.0" fill="rgb(207,218,47)" rx="2" ry="2" />
<text  x="259.71" y="1903.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (2 samples, 0.03%)</title><rect x="661.2" y="1909" width="0.4" height="15.0" fill="rgb(233,132,22)" rx="2" ry="2" />
<text  x="664.17" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="240.0" y="1893" width="0.4" height="15.0" fill="rgb(243,24,46)" rx="2" ry="2" />
<text  x="243.00" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="899.4" y="1813" width="0.2" height="15.0" fill="rgb(221,73,41)" rx="2" ry="2" />
<text  x="902.43" y="1823.5" ></text>
</g>
<g >
<title>lock_sock_nested (5 samples, 0.09%)</title><rect x="345.6" y="1925" width="1.1" height="15.0" fill="rgb(229,78,29)" rx="2" ry="2" />
<text  x="348.65" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17 samples, 0.29%)</title><rect x="287.3" y="1685" width="3.4" height="15.0" fill="rgb(208,109,37)" rx="2" ry="2" />
<text  x="290.29" y="1695.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="935.6" y="1925" width="0.2" height="15.0" fill="rgb(209,69,30)" rx="2" ry="2" />
<text  x="938.65" y="1935.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="206.8" y="1957" width="0.2" height="15.0" fill="rgb(222,62,34)" rx="2" ry="2" />
<text  x="209.80" y="1967.5" ></text>
</g>
<g >
<title>skb_free_head (14 samples, 0.24%)</title><rect x="1076.1" y="1877" width="2.8" height="15.0" fill="rgb(227,42,53)" rx="2" ry="2" />
<text  x="1079.11" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="347.5" y="1717" width="0.2" height="15.0" fill="rgb(205,110,9)" rx="2" ry="2" />
<text  x="350.46" y="1727.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (1 samples, 0.02%)</title><rect x="732.4" y="1637" width="0.2" height="15.0" fill="rgb(217,28,25)" rx="2" ry="2" />
<text  x="735.41" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="454.1" y="1909" width="0.2" height="15.0" fill="rgb(227,145,4)" rx="2" ry="2" />
<text  x="457.11" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (7 samples, 0.12%)</title><rect x="624.8" y="1989" width="1.4" height="15.0" fill="rgb(253,205,40)" rx="2" ry="2" />
<text  x="627.75" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (3 samples, 0.05%)</title><rect x="145.2" y="37" width="0.6" height="15.0" fill="rgb(227,104,32)" rx="2" ry="2" />
<text  x="148.23" y="47.5" ></text>
</g>
<g >
<title>dentry_free (10 samples, 0.17%)</title><rect x="724.4" y="1749" width="2.0" height="15.0" fill="rgb(247,170,13)" rx="2" ry="2" />
<text  x="727.36" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="570.8" y="2005" width="0.4" height="15.0" fill="rgb(232,87,33)" rx="2" ry="2" />
<text  x="573.82" y="2015.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="801.6" y="1333" width="0.2" height="15.0" fill="rgb(248,103,48)" rx="2" ry="2" />
<text  x="804.63" y="1343.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="441.4" y="1813" width="0.4" height="15.0" fill="rgb(239,126,3)" rx="2" ry="2" />
<text  x="444.43" y="1823.5" ></text>
</g>
<g >
<title>tcp_poll (36 samples, 0.61%)</title><rect x="434.6" y="1941" width="7.2" height="15.0" fill="rgb(209,9,3)" rx="2" ry="2" />
<text  x="437.59" y="1951.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="177.4" y="1829" width="0.2" height="15.0" fill="rgb(215,55,11)" rx="2" ry="2" />
<text  x="180.42" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="316.1" y="1829" width="0.2" height="15.0" fill="rgb(251,226,43)" rx="2" ry="2" />
<text  x="319.07" y="1839.5" ></text>
</g>
<g >
<title>__kfree_skb (19 samples, 0.32%)</title><rect x="1101.5" y="1509" width="3.8" height="15.0" fill="rgb(236,5,46)" rx="2" ry="2" />
<text  x="1104.46" y="1519.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1126.6" y="1861" width="0.2" height="15.0" fill="rgb(205,38,34)" rx="2" ry="2" />
<text  x="1129.61" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1121.6" y="2037" width="0.2" height="15.0" fill="rgb(209,18,0)" rx="2" ry="2" />
<text  x="1124.58" y="2047.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="211.4" y="2021" width="0.2" height="15.0" fill="rgb(254,138,12)" rx="2" ry="2" />
<text  x="214.43" y="2031.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="516.7" y="1701" width="0.2" height="15.0" fill="rgb(235,96,21)" rx="2" ry="2" />
<text  x="519.69" y="1711.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="521.5" y="1973" width="0.8" height="15.0" fill="rgb(215,36,23)" rx="2" ry="2" />
<text  x="524.52" y="1983.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="861.4" y="1861" width="0.2" height="15.0" fill="rgb(207,117,38)" rx="2" ry="2" />
<text  x="864.39" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="486.7" y="1605" width="0.2" height="15.0" fill="rgb(253,126,48)" rx="2" ry="2" />
<text  x="489.71" y="1615.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="707.1" y="1813" width="0.2" height="15.0" fill="rgb(225,58,25)" rx="2" ry="2" />
<text  x="710.05" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (17 samples, 0.29%)</title><rect x="791.8" y="1509" width="3.4" height="15.0" fill="rgb(215,90,35)" rx="2" ry="2" />
<text  x="794.77" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="899.4" y="1877" width="0.2" height="15.0" fill="rgb(229,136,12)" rx="2" ry="2" />
<text  x="902.43" y="1887.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="1183.2" y="1989" width="0.2" height="15.0" fill="rgb(234,30,7)" rx="2" ry="2" />
<text  x="1186.16" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_metrics (1 samples, 0.02%)</title><rect x="491.7" y="1589" width="0.2" height="15.0" fill="rgb(220,210,48)" rx="2" ry="2" />
<text  x="494.74" y="1599.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (1 samples, 0.02%)</title><rect x="1152.0" y="2037" width="0.2" height="15.0" fill="rgb(215,153,36)" rx="2" ry="2" />
<text  x="1154.97" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="207.4" y="1973" width="0.2" height="15.0" fill="rgb(253,86,20)" rx="2" ry="2" />
<text  x="210.40" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="941.9" y="1877" width="0.2" height="15.0" fill="rgb(214,17,48)" rx="2" ry="2" />
<text  x="944.89" y="1887.5" ></text>
</g>
<g >
<title>native_apic_mem_write (1 samples, 0.02%)</title><rect x="496.4" y="1813" width="0.2" height="15.0" fill="rgb(219,107,12)" rx="2" ry="2" />
<text  x="499.37" y="1823.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="888.2" y="1909" width="0.2" height="15.0" fill="rgb(215,2,40)" rx="2" ry="2" />
<text  x="891.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="963.4" y="2005" width="0.2" height="15.0" fill="rgb(225,177,52)" rx="2" ry="2" />
<text  x="966.42" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RouteHandleMap&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::getTargetsForKeyFast (1 samples, 0.02%)</title><rect x="957.2" y="2005" width="0.2" height="15.0" fill="rgb(247,136,8)" rx="2" ry="2" />
<text  x="960.18" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="701.8" y="1909" width="0.2" height="15.0" fill="rgb(220,6,27)" rx="2" ry="2" />
<text  x="704.82" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="764.6" y="1685" width="0.6" height="15.0" fill="rgb(251,156,31)" rx="2" ry="2" />
<text  x="767.60" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="230.5" y="1717" width="0.2" height="15.0" fill="rgb(230,1,23)" rx="2" ry="2" />
<text  x="233.55" y="1727.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (43 samples, 0.73%)</title><rect x="434.2" y="1973" width="8.6" height="15.0" fill="rgb(250,177,44)" rx="2" ry="2" />
<text  x="437.19" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1072.7" y="1813" width="0.2" height="15.0" fill="rgb(207,223,30)" rx="2" ry="2" />
<text  x="1075.68" y="1823.5" ></text>
</g>
<g >
<title>__GI___getpeername (4 samples, 0.07%)</title><rect x="698.6" y="1893" width="0.8" height="15.0" fill="rgb(212,133,14)" rx="2" ry="2" />
<text  x="701.60" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="533.2" y="1941" width="0.2" height="15.0" fill="rgb(218,104,29)" rx="2" ry="2" />
<text  x="536.19" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="978.7" y="1989" width="0.2" height="15.0" fill="rgb(214,22,10)" rx="2" ry="2" />
<text  x="981.71" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1168.7" y="1845" width="0.2" height="15.0" fill="rgb(208,104,48)" rx="2" ry="2" />
<text  x="1171.67" y="1855.5" ></text>
</g>
<g >
<title>security_file_alloc (12 samples, 0.20%)</title><rect x="379.5" y="1909" width="2.4" height="15.0" fill="rgb(253,201,21)" rx="2" ry="2" />
<text  x="382.45" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="19.1" y="1861" width="0.2" height="15.0" fill="rgb(211,96,8)" rx="2" ry="2" />
<text  x="22.06" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (1 samples, 0.02%)</title><rect x="853.5" y="1941" width="0.2" height="15.0" fill="rgb(252,214,18)" rx="2" ry="2" />
<text  x="856.55" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1168.7" y="2037" width="0.2" height="15.0" fill="rgb(208,103,46)" rx="2" ry="2" />
<text  x="1171.67" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="920.6" y="1893" width="0.2" height="15.0" fill="rgb(208,41,32)" rx="2" ry="2" />
<text  x="923.56" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="510.5" y="1797" width="0.4" height="15.0" fill="rgb(227,145,35)" rx="2" ry="2" />
<text  x="513.45" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="202.0" y="1925" width="0.2" height="15.0" fill="rgb(207,29,51)" rx="2" ry="2" />
<text  x="204.97" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="581" width="28.8" height="15.0" fill="rgb(240,29,0)" rx="2" ry="2" />
<text  x="127.10" y="591.5" >[u..</text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="461.2" y="1925" width="0.2" height="15.0" fill="rgb(217,170,0)" rx="2" ry="2" />
<text  x="464.15" y="1935.5" ></text>
</g>
<g >
<title>event_base_set (1 samples, 0.02%)</title><rect x="117.9" y="2005" width="0.2" height="15.0" fill="rgb(211,131,38)" rx="2" ry="2" />
<text  x="120.86" y="2015.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (2 samples, 0.03%)</title><rect x="577.5" y="1989" width="0.4" height="15.0" fill="rgb(234,132,32)" rx="2" ry="2" />
<text  x="580.46" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="238.0" y="1845" width="0.2" height="15.0" fill="rgb(222,19,17)" rx="2" ry="2" />
<text  x="240.99" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="801.6" y="1589" width="0.2" height="15.0" fill="rgb(208,47,3)" rx="2" ry="2" />
<text  x="804.63" y="1599.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="206.4" y="1973" width="0.6" height="15.0" fill="rgb(213,58,17)" rx="2" ry="2" />
<text  x="209.40" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="88.9" y="1893" width="0.2" height="15.0" fill="rgb(251,23,35)" rx="2" ry="2" />
<text  x="91.88" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="345.4" y="1717" width="0.2" height="15.0" fill="rgb(239,50,33)" rx="2" ry="2" />
<text  x="348.45" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1119.2" y="1909" width="0.4" height="15.0" fill="rgb(213,146,12)" rx="2" ry="2" />
<text  x="1122.17" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (145 samples, 2.47%)</title><rect x="124.1" y="693" width="29.2" height="15.0" fill="rgb(205,213,14)" rx="2" ry="2" />
<text  x="127.10" y="703.5" >[u..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="616.3" y="1973" width="0.2" height="15.0" fill="rgb(234,134,23)" rx="2" ry="2" />
<text  x="619.30" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="721.3" y="1605" width="0.2" height="15.0" fill="rgb(252,144,21)" rx="2" ry="2" />
<text  x="724.34" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="1030.6" y="2005" width="0.2" height="15.0" fill="rgb(215,109,24)" rx="2" ry="2" />
<text  x="1033.63" y="2015.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="1119.4" y="1701" width="0.2" height="15.0" fill="rgb(225,17,10)" rx="2" ry="2" />
<text  x="1122.37" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (61 samples, 1.04%)</title><rect x="659.2" y="1989" width="12.2" height="15.0" fill="rgb(227,104,16)" rx="2" ry="2" />
<text  x="662.16" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="114.0" y="1989" width="0.4" height="15.0" fill="rgb(226,130,44)" rx="2" ry="2" />
<text  x="117.03" y="1999.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="272.6" y="1861" width="0.2" height="15.0" fill="rgb(238,17,19)" rx="2" ry="2" />
<text  x="275.60" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.26%)</title><rect x="607.4" y="2021" width="3.1" height="15.0" fill="rgb(223,86,5)" rx="2" ry="2" />
<text  x="610.45" y="2031.5" ></text>
</g>
<g >
<title>google::Check_GEImpl&lt;long, int&gt; (1 samples, 0.02%)</title><rect x="175.6" y="1925" width="0.2" height="15.0" fill="rgb(224,163,48)" rx="2" ry="2" />
<text  x="178.61" y="1935.5" ></text>
</g>
<g >
<title>__fget (19 samples, 0.32%)</title><rect x="429.0" y="1941" width="3.8" height="15.0" fill="rgb(252,217,21)" rx="2" ry="2" />
<text  x="431.96" y="1951.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McSetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="906.3" y="2005" width="0.2" height="15.0" fill="rgb(240,7,47)" rx="2" ry="2" />
<text  x="909.27" y="2015.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (1 samples, 0.02%)</title><rect x="529.0" y="1989" width="0.2" height="15.0" fill="rgb(234,142,29)" rx="2" ry="2" />
<text  x="531.97" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1119.4" y="1797" width="0.2" height="15.0" fill="rgb(223,69,30)" rx="2" ry="2" />
<text  x="1122.37" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="233.0" y="1797" width="0.2" height="15.0" fill="rgb(205,169,1)" rx="2" ry="2" />
<text  x="235.96" y="1807.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="235.6" y="1765" width="0.4" height="15.0" fill="rgb(252,112,31)" rx="2" ry="2" />
<text  x="238.58" y="1775.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (2 samples, 0.03%)</title><rect x="616.3" y="1989" width="0.4" height="15.0" fill="rgb(208,13,19)" rx="2" ry="2" />
<text  x="619.30" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (3 samples, 0.05%)</title><rect x="228.1" y="1941" width="0.6" height="15.0" fill="rgb(216,63,28)" rx="2" ry="2" />
<text  x="231.13" y="1951.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (2 samples, 0.03%)</title><rect x="334.4" y="1941" width="0.4" height="15.0" fill="rgb(209,120,0)" rx="2" ry="2" />
<text  x="337.38" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="707.1" y="1765" width="0.2" height="15.0" fill="rgb(221,185,19)" rx="2" ry="2" />
<text  x="710.05" y="1775.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (2 samples, 0.03%)</title><rect x="1173.3" y="1941" width="0.4" height="15.0" fill="rgb(248,69,10)" rx="2" ry="2" />
<text  x="1176.30" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="903.3" y="1957" width="0.2" height="15.0" fill="rgb(217,103,11)" rx="2" ry="2" />
<text  x="906.25" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="875.5" y="1989" width="0.2" height="15.0" fill="rgb(207,46,36)" rx="2" ry="2" />
<text  x="878.48" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (21 samples, 0.36%)</title><rect x="938.3" y="1909" width="4.2" height="15.0" fill="rgb(236,142,23)" rx="2" ry="2" />
<text  x="941.26" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="464.6" y="1621" width="0.2" height="15.0" fill="rgb(236,38,11)" rx="2" ry="2" />
<text  x="467.57" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="159.9" y="1989" width="0.2" height="15.0" fill="rgb(206,164,2)" rx="2" ry="2" />
<text  x="162.91" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (5 samples, 0.09%)</title><rect x="70.0" y="1925" width="1.0" height="15.0" fill="rgb(252,174,32)" rx="2" ry="2" />
<text  x="72.97" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="305.2" y="1829" width="0.4" height="15.0" fill="rgb(216,99,8)" rx="2" ry="2" />
<text  x="308.20" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="381.5" y="1813" width="0.2" height="15.0" fill="rgb(232,187,46)" rx="2" ry="2" />
<text  x="384.47" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="875.5" y="1957" width="0.2" height="15.0" fill="rgb(239,197,5)" rx="2" ry="2" />
<text  x="878.48" y="1967.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (14 samples, 0.24%)</title><rect x="215.1" y="2037" width="2.8" height="15.0" fill="rgb(224,68,4)" rx="2" ry="2" />
<text  x="218.05" y="2047.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.02%)</title><rect x="12.2" y="1973" width="0.2" height="15.0" fill="rgb(238,66,48)" rx="2" ry="2" />
<text  x="15.21" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="54.5" y="1685" width="0.2" height="15.0" fill="rgb(231,168,30)" rx="2" ry="2" />
<text  x="57.47" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="832.2" y="1781" width="0.4" height="15.0" fill="rgb(232,133,17)" rx="2" ry="2" />
<text  x="835.22" y="1791.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (2 samples, 0.03%)</title><rect x="202.4" y="1941" width="0.4" height="15.0" fill="rgb(230,175,3)" rx="2" ry="2" />
<text  x="205.37" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (6 samples, 0.10%)</title><rect x="1167.7" y="2053" width="1.2" height="15.0" fill="rgb(221,201,50)" rx="2" ry="2" />
<text  x="1170.66" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="233.0" y="1685" width="0.2" height="15.0" fill="rgb(248,83,12)" rx="2" ry="2" />
<text  x="235.96" y="1695.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="686.1" y="1861" width="0.2" height="15.0" fill="rgb(241,116,12)" rx="2" ry="2" />
<text  x="689.13" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1032.4" y="1925" width="0.2" height="15.0" fill="rgb(235,221,39)" rx="2" ry="2" />
<text  x="1035.44" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="999.2" y="1973" width="0.4" height="15.0" fill="rgb(252,176,48)" rx="2" ry="2" />
<text  x="1002.24" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="843.9" y="1861" width="0.4" height="15.0" fill="rgb(207,113,18)" rx="2" ry="2" />
<text  x="846.89" y="1871.5" ></text>
</g>
<g >
<title>clear_inode (1 samples, 0.02%)</title><rect x="730.4" y="1717" width="0.2" height="15.0" fill="rgb(216,86,12)" rx="2" ry="2" />
<text  x="733.40" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="56.7" y="1845" width="0.2" height="15.0" fill="rgb(221,139,33)" rx="2" ry="2" />
<text  x="59.68" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="862.8" y="1733" width="0.2" height="15.0" fill="rgb(224,91,10)" rx="2" ry="2" />
<text  x="865.80" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1317" width="30.0" height="15.0" fill="rgb(218,183,4)" rx="2" ry="2" />
<text  x="127.10" y="1327.5" >[u..</text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="790.4" y="1413" width="0.2" height="15.0" fill="rgb(206,83,52)" rx="2" ry="2" />
<text  x="793.36" y="1423.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="151.5" y="69" width="0.2" height="15.0" fill="rgb(234,44,45)" rx="2" ry="2" />
<text  x="154.46" y="79.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::close (15 samples, 0.26%)</title><rect x="855.6" y="1989" width="3.0" height="15.0" fill="rgb(220,68,50)" rx="2" ry="2" />
<text  x="858.56" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="840.9" y="1605" width="0.2" height="15.0" fill="rgb(244,69,38)" rx="2" ry="2" />
<text  x="843.87" y="1615.5" ></text>
</g>
<g >
<title>sock_common_setsockopt (20 samples, 0.34%)</title><rect x="682.3" y="1925" width="4.0" height="15.0" fill="rgb(205,27,17)" rx="2" ry="2" />
<text  x="685.30" y="1935.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="381.7" y="1877" width="0.2" height="15.0" fill="rgb(246,197,31)" rx="2" ry="2" />
<text  x="384.67" y="1887.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.02%)</title><rect x="790.4" y="1397" width="0.2" height="15.0" fill="rgb(219,100,4)" rx="2" ry="2" />
<text  x="793.36" y="1407.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="56.7" y="1621" width="0.2" height="15.0" fill="rgb(233,136,11)" rx="2" ry="2" />
<text  x="59.68" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (2 samples, 0.03%)</title><rect x="861.6" y="1989" width="0.4" height="15.0" fill="rgb(210,220,38)" rx="2" ry="2" />
<text  x="864.60" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="407.8" y="1829" width="0.2" height="15.0" fill="rgb(250,129,17)" rx="2" ry="2" />
<text  x="410.83" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="174.4" y="1925" width="0.2" height="15.0" fill="rgb(248,126,2)" rx="2" ry="2" />
<text  x="177.40" y="1935.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1086.4" y="1925" width="0.2" height="15.0" fill="rgb(239,214,41)" rx="2" ry="2" />
<text  x="1089.37" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="55.1" y="1813" width="0.2" height="15.0" fill="rgb(206,110,40)" rx="2" ry="2" />
<text  x="58.08" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="845.7" y="1797" width="0.2" height="15.0" fill="rgb(221,78,38)" rx="2" ry="2" />
<text  x="848.70" y="1807.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1170.3" y="1845" width="0.2" height="15.0" fill="rgb(232,117,38)" rx="2" ry="2" />
<text  x="1173.28" y="1855.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="162.9" y="1973" width="0.2" height="15.0" fill="rgb(243,133,21)" rx="2" ry="2" />
<text  x="165.93" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="631.8" y="1925" width="0.8" height="15.0" fill="rgb(213,21,42)" rx="2" ry="2" />
<text  x="634.79" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="345.4" y="1685" width="0.2" height="15.0" fill="rgb(227,2,41)" rx="2" ry="2" />
<text  x="348.45" y="1695.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="307.2" y="1573" width="0.2" height="15.0" fill="rgb(207,172,25)" rx="2" ry="2" />
<text  x="310.21" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::McParser (45 samples, 0.77%)</title><rect x="637.4" y="2037" width="9.1" height="15.0" fill="rgb(232,24,22)" rx="2" ry="2" />
<text  x="640.43" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="1023.0" y="1909" width="0.4" height="15.0" fill="rgb(248,5,19)" rx="2" ry="2" />
<text  x="1025.98" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="775.5" y="1637" width="0.2" height="15.0" fill="rgb(227,216,48)" rx="2" ry="2" />
<text  x="778.47" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="801.6" y="1637" width="0.2" height="15.0" fill="rgb(244,226,47)" rx="2" ry="2" />
<text  x="804.63" y="1647.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="520.1" y="1957" width="0.2" height="15.0" fill="rgb(252,138,25)" rx="2" ry="2" />
<text  x="523.11" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="345.8" y="1701" width="0.3" height="15.0" fill="rgb(246,63,36)" rx="2" ry="2" />
<text  x="348.85" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_init_seq (1 samples, 0.02%)</title><rect x="916.9" y="1653" width="0.2" height="15.0" fill="rgb(216,96,36)" rx="2" ry="2" />
<text  x="919.93" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="205.8" y="1925" width="0.2" height="15.0" fill="rgb(222,11,1)" rx="2" ry="2" />
<text  x="208.79" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="941.5" y="1797" width="0.2" height="15.0" fill="rgb(247,77,28)" rx="2" ry="2" />
<text  x="944.48" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="629" width="28.8" height="15.0" fill="rgb(217,74,2)" rx="2" ry="2" />
<text  x="127.10" y="639.5" >[u..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1109.3" y="1813" width="0.2" height="15.0" fill="rgb(212,68,44)" rx="2" ry="2" />
<text  x="1112.31" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="19.7" y="1909" width="0.2" height="15.0" fill="rgb(223,191,34)" rx="2" ry="2" />
<text  x="22.66" y="1919.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (2 samples, 0.03%)</title><rect x="464.8" y="2005" width="0.4" height="15.0" fill="rgb(217,164,24)" rx="2" ry="2" />
<text  x="467.77" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="903.3" y="1973" width="0.2" height="15.0" fill="rgb(241,116,27)" rx="2" ry="2" />
<text  x="906.25" y="1983.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (14 samples, 0.24%)</title><rect x="964.0" y="1989" width="2.8" height="15.0" fill="rgb(221,61,20)" rx="2" ry="2" />
<text  x="967.02" y="1999.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="985.6" y="1861" width="0.2" height="15.0" fill="rgb(236,129,48)" rx="2" ry="2" />
<text  x="988.55" y="1871.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="930.4" y="1653" width="0.2" height="15.0" fill="rgb(210,117,2)" rx="2" ry="2" />
<text  x="933.42" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="407.8" y="1765" width="0.2" height="15.0" fill="rgb(207,123,5)" rx="2" ry="2" />
<text  x="410.83" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="906.5" y="1989" width="0.6" height="15.0" fill="rgb(246,10,51)" rx="2" ry="2" />
<text  x="909.47" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="644.9" y="1941" width="0.4" height="15.0" fill="rgb(218,201,53)" rx="2" ry="2" />
<text  x="647.87" y="1951.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (3 samples, 0.05%)</title><rect x="1034.7" y="2053" width="0.6" height="15.0" fill="rgb(246,55,53)" rx="2" ry="2" />
<text  x="1037.65" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (1 samples, 0.02%)</title><rect x="652.1" y="2037" width="0.2" height="15.0" fill="rgb(232,115,5)" rx="2" ry="2" />
<text  x="655.12" y="2047.5" ></text>
</g>
<g >
<title>tcp_write_timer (2 samples, 0.03%)</title><rect x="114.0" y="1941" width="0.4" height="15.0" fill="rgb(252,214,33)" rx="2" ry="2" />
<text  x="117.03" y="1951.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="310.4" y="1909" width="0.2" height="15.0" fill="rgb(218,180,21)" rx="2" ry="2" />
<text  x="313.43" y="1919.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="862.8" y="1621" width="0.2" height="15.0" fill="rgb(208,99,5)" rx="2" ry="2" />
<text  x="865.80" y="1631.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (4 samples, 0.07%)</title><rect x="698.6" y="1909" width="0.8" height="15.0" fill="rgb(230,85,16)" rx="2" ry="2" />
<text  x="701.60" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (23 samples, 0.39%)</title><rect x="176.8" y="1925" width="4.6" height="15.0" fill="rgb(234,40,40)" rx="2" ry="2" />
<text  x="179.82" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="513.3" y="1765" width="0.2" height="15.0" fill="rgb(224,209,31)" rx="2" ry="2" />
<text  x="516.27" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="819.5" y="1557" width="0.2" height="15.0" fill="rgb(222,205,44)" rx="2" ry="2" />
<text  x="822.54" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.03%)</title><rect x="86.3" y="1925" width="0.4" height="15.0" fill="rgb(224,122,29)" rx="2" ry="2" />
<text  x="89.27" y="1935.5" ></text>
</g>
<g >
<title>locks_remove_file (2 samples, 0.03%)</title><rect x="747.5" y="1797" width="0.4" height="15.0" fill="rgb(247,7,21)" rx="2" ry="2" />
<text  x="750.50" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="19.1" y="1829" width="0.2" height="15.0" fill="rgb(235,190,45)" rx="2" ry="2" />
<text  x="22.06" y="1839.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (8 samples, 0.14%)</title><rect x="552.7" y="1989" width="1.6" height="15.0" fill="rgb(208,80,13)" rx="2" ry="2" />
<text  x="555.71" y="1999.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="592.2" y="1829" width="0.4" height="15.0" fill="rgb(248,115,17)" rx="2" ry="2" />
<text  x="595.15" y="1839.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="866.0" y="1989" width="0.4" height="15.0" fill="rgb(219,218,20)" rx="2" ry="2" />
<text  x="869.02" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="64.7" y="1797" width="0.2" height="15.0" fill="rgb(240,75,48)" rx="2" ry="2" />
<text  x="67.73" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="831.0" y="1749" width="0.2" height="15.0" fill="rgb(219,49,8)" rx="2" ry="2" />
<text  x="834.01" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (28 samples, 0.48%)</title><rect x="1100.7" y="1653" width="5.6" height="15.0" fill="rgb(236,153,53)" rx="2" ry="2" />
<text  x="1103.65" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="441.6" y="1669" width="0.2" height="15.0" fill="rgb(241,36,5)" rx="2" ry="2" />
<text  x="444.63" y="1679.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (9 samples, 0.15%)</title><rect x="241.8" y="1957" width="1.8" height="15.0" fill="rgb(251,190,10)" rx="2" ry="2" />
<text  x="244.81" y="1967.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (26 samples, 0.44%)</title><rect x="1100.9" y="1525" width="5.2" height="15.0" fill="rgb(216,24,42)" rx="2" ry="2" />
<text  x="1103.86" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="740.7" y="1605" width="0.2" height="15.0" fill="rgb(234,224,54)" rx="2" ry="2" />
<text  x="743.66" y="1615.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.09%)</title><rect x="13.6" y="2053" width="1.0" height="15.0" fill="rgb(224,130,34)" rx="2" ry="2" />
<text  x="16.62" y="2063.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="701.8" y="1637" width="0.2" height="15.0" fill="rgb(236,75,54)" rx="2" ry="2" />
<text  x="704.82" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="794.8" y="1493" width="0.2" height="15.0" fill="rgb(241,17,12)" rx="2" ry="2" />
<text  x="797.79" y="1503.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="882.9" y="1893" width="0.4" height="15.0" fill="rgb(217,141,8)" rx="2" ry="2" />
<text  x="885.93" y="1903.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="661.6" y="1909" width="0.2" height="15.0" fill="rgb(233,80,53)" rx="2" ry="2" />
<text  x="664.58" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="908.3" y="1957" width="0.2" height="15.0" fill="rgb(229,37,15)" rx="2" ry="2" />
<text  x="911.28" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleRead (169 samples, 2.88%)</title><rect x="38.8" y="1989" width="34.0" height="15.0" fill="rgb(216,195,24)" rx="2" ry="2" />
<text  x="41.78" y="1999.5" >fo..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::onReplyReceived&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="623.7" y="2005" width="0.2" height="15.0" fill="rgb(211,118,43)" rx="2" ry="2" />
<text  x="626.74" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="238.2" y="1861" width="0.2" height="15.0" fill="rgb(235,137,9)" rx="2" ry="2" />
<text  x="241.19" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="201.2" y="1973" width="0.2" height="15.0" fill="rgb(232,166,41)" rx="2" ry="2" />
<text  x="204.17" y="1983.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (3 samples, 0.05%)</title><rect x="553.3" y="1957" width="0.6" height="15.0" fill="rgb(216,73,54)" rx="2" ry="2" />
<text  x="556.32" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="920.6" y="1957" width="0.2" height="15.0" fill="rgb(212,31,48)" rx="2" ry="2" />
<text  x="923.56" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="838.1" y="1925" width="0.2" height="15.0" fill="rgb(244,110,39)" rx="2" ry="2" />
<text  x="841.05" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="1087.6" y="1781" width="0.6" height="15.0" fill="rgb(248,218,8)" rx="2" ry="2" />
<text  x="1090.58" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (339 samples, 5.78%)</title><rect x="248.1" y="2021" width="68.2" height="15.0" fill="rgb(247,72,54)" rx="2" ry="2" />
<text  x="251.05" y="2031.5" >entry_S..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="114.6" y="1925" width="0.2" height="15.0" fill="rgb(210,25,11)" rx="2" ry="2" />
<text  x="117.64" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="99.7" y="1925" width="0.2" height="15.0" fill="rgb(235,210,33)" rx="2" ry="2" />
<text  x="102.75" y="1935.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="115.4" y="1813" width="0.2" height="15.0" fill="rgb(245,124,19)" rx="2" ry="2" />
<text  x="118.44" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="513.3" y="1861" width="0.2" height="15.0" fill="rgb(246,142,49)" rx="2" ry="2" />
<text  x="516.27" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="837.7" y="1893" width="0.2" height="15.0" fill="rgb(250,104,20)" rx="2" ry="2" />
<text  x="840.65" y="1903.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.09%)</title><rect x="12.4" y="1973" width="1.0" height="15.0" fill="rgb(233,127,46)" rx="2" ry="2" />
<text  x="15.41" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="832.4" y="1637" width="0.2" height="15.0" fill="rgb(235,31,27)" rx="2" ry="2" />
<text  x="835.42" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1109.3" y="1909" width="0.2" height="15.0" fill="rgb(242,97,36)" rx="2" ry="2" />
<text  x="1112.31" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (154 samples, 2.63%)</title><rect x="123.9" y="1685" width="31.0" height="15.0" fill="rgb(212,20,16)" rx="2" ry="2" />
<text  x="126.89" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="540.2" y="1957" width="0.2" height="15.0" fill="rgb(231,141,26)" rx="2" ry="2" />
<text  x="543.24" y="1967.5" ></text>
</g>
<g >
<title>event_assign (3 samples, 0.05%)</title><rect x="542.7" y="1973" width="0.6" height="15.0" fill="rgb(244,44,4)" rx="2" ry="2" />
<text  x="545.65" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="966.2" y="1957" width="0.2" height="15.0" fill="rgb(228,100,24)" rx="2" ry="2" />
<text  x="969.23" y="1967.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (86 samples, 1.47%)</title><rect x="492.9" y="1845" width="17.4" height="15.0" fill="rgb(231,42,39)" rx="2" ry="2" />
<text  x="495.95" y="1855.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="441.4" y="1621" width="0.2" height="15.0" fill="rgb(237,209,23)" rx="2" ry="2" />
<text  x="444.43" y="1631.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="56.7" y="1669" width="0.2" height="15.0" fill="rgb(207,227,11)" rx="2" ry="2" />
<text  x="59.68" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="841.7" y="1797" width="0.2" height="15.0" fill="rgb(215,98,29)" rx="2" ry="2" />
<text  x="844.67" y="1807.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="460.5" y="1941" width="1.3" height="15.0" fill="rgb(251,104,41)" rx="2" ry="2" />
<text  x="463.55" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="65.3" y="1957" width="0.2" height="15.0" fill="rgb(214,229,27)" rx="2" ry="2" />
<text  x="68.34" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="858.2" y="1973" width="0.2" height="15.0" fill="rgb(218,211,35)" rx="2" ry="2" />
<text  x="861.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 1.38%)</title><rect x="124.3" y="53" width="16.3" height="15.0" fill="rgb(220,61,28)" rx="2" ry="2" />
<text  x="127.30" y="63.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.29 (1 samples, 0.02%)</title><rect x="768.0" y="1701" width="0.2" height="15.0" fill="rgb(215,224,9)" rx="2" ry="2" />
<text  x="771.03" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::~ProxyDestination (3 samples, 0.05%)</title><rect x="926.2" y="2037" width="0.6" height="15.0" fill="rgb(208,185,28)" rx="2" ry="2" />
<text  x="929.19" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consume (1 samples, 0.02%)</title><rect x="126.7" y="37" width="0.2" height="15.0" fill="rgb(209,81,26)" rx="2" ry="2" />
<text  x="129.71" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (1 samples, 0.02%)</title><rect x="942.9" y="1941" width="0.2" height="15.0" fill="rgb(231,220,14)" rx="2" ry="2" />
<text  x="945.89" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1155.4" y="1829" width="0.2" height="15.0" fill="rgb(234,18,14)" rx="2" ry="2" />
<text  x="1158.39" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="441.0" y="1813" width="0.2" height="15.0" fill="rgb(244,119,0)" rx="2" ry="2" />
<text  x="444.03" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (2 samples, 0.03%)</title><rect x="76.6" y="1893" width="0.4" height="15.0" fill="rgb(242,95,14)" rx="2" ry="2" />
<text  x="79.61" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="783.3" y="1365" width="0.6" height="15.0" fill="rgb(208,176,38)" rx="2" ry="2" />
<text  x="786.32" y="1375.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="730.2" y="1685" width="0.2" height="15.0" fill="rgb(213,45,19)" rx="2" ry="2" />
<text  x="733.19" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="486.7" y="1765" width="0.2" height="15.0" fill="rgb(229,6,35)" rx="2" ry="2" />
<text  x="489.71" y="1775.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="721.3" y="1461" width="0.2" height="15.0" fill="rgb(242,65,46)" rx="2" ry="2" />
<text  x="724.34" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="202.0" y="1813" width="0.2" height="15.0" fill="rgb(222,92,1)" rx="2" ry="2" />
<text  x="204.97" y="1823.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="283.7" y="1493" width="0.2" height="15.0" fill="rgb(224,92,0)" rx="2" ry="2" />
<text  x="286.67" y="1503.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="851.7" y="1861" width="0.2" height="15.0" fill="rgb(228,14,48)" rx="2" ry="2" />
<text  x="854.74" y="1871.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="155.1" y="1781" width="0.2" height="15.0" fill="rgb(229,43,53)" rx="2" ry="2" />
<text  x="158.09" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="546.7" y="1941" width="0.4" height="15.0" fill="rgb(237,4,39)" rx="2" ry="2" />
<text  x="549.67" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="899.4" y="1797" width="0.2" height="15.0" fill="rgb(239,228,14)" rx="2" ry="2" />
<text  x="902.43" y="1807.5" ></text>
</g>
<g >
<title>apparmor_sock_graft (9 samples, 0.15%)</title><rect x="334.8" y="1941" width="1.8" height="15.0" fill="rgb(236,108,27)" rx="2" ry="2" />
<text  x="337.78" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="668.4" y="1813" width="0.2" height="15.0" fill="rgb(213,199,16)" rx="2" ry="2" />
<text  x="671.42" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_set (2 samples, 0.03%)</title><rect x="236.2" y="1877" width="0.4" height="15.0" fill="rgb(238,104,44)" rx="2" ry="2" />
<text  x="239.18" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="890.2" y="1941" width="0.2" height="15.0" fill="rgb(221,32,39)" rx="2" ry="2" />
<text  x="893.17" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="285.3" y="1701" width="0.2" height="15.0" fill="rgb(211,120,8)" rx="2" ry="2" />
<text  x="288.28" y="1711.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (86 samples, 1.47%)</title><rect x="726.4" y="1749" width="17.3" height="15.0" fill="rgb(246,17,18)" rx="2" ry="2" />
<text  x="729.37" y="1759.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="259.5" y="1829" width="0.8" height="15.0" fill="rgb(219,218,13)" rx="2" ry="2" />
<text  x="262.52" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="364.4" y="1845" width="0.2" height="15.0" fill="rgb(205,67,12)" rx="2" ry="2" />
<text  x="367.36" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.68%)</title><rect x="662.0" y="1925" width="8.0" height="15.0" fill="rgb(235,171,1)" rx="2" ry="2" />
<text  x="664.98" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="355.3" y="1941" width="0.2" height="15.0" fill="rgb(238,202,44)" rx="2" ry="2" />
<text  x="358.31" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="181.0" y="1893" width="0.2" height="15.0" fill="rgb(237,47,0)" rx="2" ry="2" />
<text  x="184.04" y="1903.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="154.3" y="1461" width="0.2" height="15.0" fill="rgb(248,159,6)" rx="2" ry="2" />
<text  x="157.28" y="1471.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="846.5" y="1909" width="0.4" height="15.0" fill="rgb(224,79,50)" rx="2" ry="2" />
<text  x="849.50" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="809.5" y="1525" width="0.2" height="15.0" fill="rgb(214,170,17)" rx="2" ry="2" />
<text  x="812.48" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (2 samples, 0.03%)</title><rect x="906.1" y="2037" width="0.4" height="15.0" fill="rgb(216,52,33)" rx="2" ry="2" />
<text  x="909.07" y="2047.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="1087.6" y="1669" width="0.2" height="15.0" fill="rgb(241,118,10)" rx="2" ry="2" />
<text  x="1090.58" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="407.8" y="1813" width="0.2" height="15.0" fill="rgb(226,36,29)" rx="2" ry="2" />
<text  x="410.83" y="1823.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="690.4" y="1877" width="0.2" height="15.0" fill="rgb(245,1,8)" rx="2" ry="2" />
<text  x="693.35" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="801.6" y="1397" width="0.2" height="15.0" fill="rgb(216,34,0)" rx="2" ry="2" />
<text  x="804.63" y="1407.5" ></text>
</g>
<g >
<title>inet_unhash (1 samples, 0.02%)</title><rect x="832.4" y="1589" width="0.2" height="15.0" fill="rgb(232,25,48)" rx="2" ry="2" />
<text  x="835.42" y="1599.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (5 samples, 0.09%)</title><rect x="444.7" y="1941" width="1.0" height="15.0" fill="rgb(239,19,25)" rx="2" ry="2" />
<text  x="447.65" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="783.3" y="1349" width="0.2" height="15.0" fill="rgb(211,102,22)" rx="2" ry="2" />
<text  x="786.32" y="1359.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="730.2" y="1573" width="0.2" height="15.0" fill="rgb(234,227,1)" rx="2" ry="2" />
<text  x="733.19" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::~CallbackWrapper (2 samples, 0.03%)</title><rect x="900.6" y="2005" width="0.4" height="15.0" fill="rgb(243,69,31)" rx="2" ry="2" />
<text  x="903.63" y="2015.5" ></text>
</g>
<g >
<title>sock_alloc_inode (33 samples, 0.56%)</title><rect x="366.0" y="1909" width="6.6" height="15.0" fill="rgb(252,88,29)" rx="2" ry="2" />
<text  x="368.97" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="961.8" y="1973" width="0.2" height="15.0" fill="rgb(229,171,3)" rx="2" ry="2" />
<text  x="964.81" y="1983.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="832.0" y="1797" width="0.2" height="15.0" fill="rgb(240,49,49)" rx="2" ry="2" />
<text  x="835.02" y="1807.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.02%)</title><rect x="1035.3" y="2053" width="0.2" height="15.0" fill="rgb(242,185,4)" rx="2" ry="2" />
<text  x="1038.26" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="316.1" y="1813" width="0.2" height="15.0" fill="rgb(243,125,41)" rx="2" ry="2" />
<text  x="319.07" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="574.2" y="1941" width="0.4" height="15.0" fill="rgb(238,115,28)" rx="2" ry="2" />
<text  x="577.24" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.09%)</title><rect x="783.1" y="1541" width="1.0" height="15.0" fill="rgb(229,106,51)" rx="2" ry="2" />
<text  x="786.12" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="690.4" y="1925" width="0.2" height="15.0" fill="rgb(243,167,37)" rx="2" ry="2" />
<text  x="693.35" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="946.7" y="1973" width="0.2" height="15.0" fill="rgb(243,113,10)" rx="2" ry="2" />
<text  x="949.72" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (2 samples, 0.03%)</title><rect x="823.0" y="1861" width="0.4" height="15.0" fill="rgb(230,193,7)" rx="2" ry="2" />
<text  x="825.96" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="579.7" y="1989" width="0.2" height="15.0" fill="rgb(240,118,18)" rx="2" ry="2" />
<text  x="582.68" y="1999.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="333.6" y="1941" width="0.4" height="15.0" fill="rgb(206,111,21)" rx="2" ry="2" />
<text  x="336.57" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (4 samples, 0.07%)</title><rect x="786.1" y="1541" width="0.8" height="15.0" fill="rgb(241,148,23)" rx="2" ry="2" />
<text  x="789.14" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="1054.8" y="1861" width="0.6" height="15.0" fill="rgb(206,6,46)" rx="2" ry="2" />
<text  x="1057.77" y="1871.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="98.7" y="2005" width="0.4" height="15.0" fill="rgb(241,57,30)" rx="2" ry="2" />
<text  x="101.74" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (101 samples, 1.72%)</title><rect x="652.3" y="2037" width="20.3" height="15.0" fill="rgb(208,88,30)" rx="2" ry="2" />
<text  x="655.32" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="831.8" y="1829" width="0.2" height="15.0" fill="rgb(239,172,3)" rx="2" ry="2" />
<text  x="834.81" y="1839.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1023.2" y="1813" width="0.2" height="15.0" fill="rgb(221,86,18)" rx="2" ry="2" />
<text  x="1026.18" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (688 samples, 11.73%)</title><rect x="704.6" y="1941" width="138.5" height="15.0" fill="rgb(254,157,26)" rx="2" ry="2" />
<text  x="707.64" y="1951.5" >folly::AsyncSocke..</text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="88.9" y="1797" width="0.2" height="15.0" fill="rgb(205,87,53)" rx="2" ry="2" />
<text  x="91.88" y="1807.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1002.9" y="2021" width="0.2" height="15.0" fill="rgb(235,98,23)" rx="2" ry="2" />
<text  x="1005.86" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::SharedInfo::SharedInfo (7 samples, 0.12%)</title><rect x="641.3" y="1973" width="1.4" height="15.0" fill="rgb(246,74,54)" rx="2" ry="2" />
<text  x="644.25" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="795.4" y="1477" width="0.2" height="15.0" fill="rgb(206,213,27)" rx="2" ry="2" />
<text  x="798.39" y="1487.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (12 samples, 0.20%)</title><rect x="281.9" y="1717" width="2.4" height="15.0" fill="rgb(220,14,47)" rx="2" ry="2" />
<text  x="284.86" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="176.2" y="1861" width="0.4" height="15.0" fill="rgb(240,3,12)" rx="2" ry="2" />
<text  x="179.21" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (135 samples, 2.30%)</title><rect x="124.3" y="117" width="27.2" height="15.0" fill="rgb(234,185,54)" rx="2" ry="2" />
<text  x="127.30" y="127.5" >[..</text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="64.7" y="1765" width="0.2" height="15.0" fill="rgb(217,155,51)" rx="2" ry="2" />
<text  x="67.73" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="513.3" y="1941" width="0.2" height="15.0" fill="rgb(210,84,53)" rx="2" ry="2" />
<text  x="516.27" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="307.2" y="1845" width="0.2" height="15.0" fill="rgb(219,37,35)" rx="2" ry="2" />
<text  x="310.21" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="832.2" y="1669" width="0.4" height="15.0" fill="rgb(207,51,2)" rx="2" ry="2" />
<text  x="835.22" y="1679.5" ></text>
</g>
<g >
<title>sync_regs (1 samples, 0.02%)</title><rect x="62.5" y="1941" width="0.2" height="15.0" fill="rgb(227,197,52)" rx="2" ry="2" />
<text  x="65.52" y="1951.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1144.3" y="1909" width="0.2" height="15.0" fill="rgb(210,160,24)" rx="2" ry="2" />
<text  x="1147.32" y="1919.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="151.9" y="53" width="0.2" height="15.0" fill="rgb(210,50,14)" rx="2" ry="2" />
<text  x="154.87" y="63.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (7 samples, 0.12%)</title><rect x="97.3" y="2005" width="1.4" height="15.0" fill="rgb(212,91,22)" rx="2" ry="2" />
<text  x="100.33" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.03%)</title><rect x="172.2" y="1989" width="0.4" height="15.0" fill="rgb(243,93,25)" rx="2" ry="2" />
<text  x="175.19" y="1999.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="1087.8" y="1637" width="0.2" height="15.0" fill="rgb(206,33,50)" rx="2" ry="2" />
<text  x="1090.78" y="1647.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="81.8" y="1813" width="0.2" height="15.0" fill="rgb(232,181,29)" rx="2" ry="2" />
<text  x="84.84" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="985.6" y="1877" width="0.2" height="15.0" fill="rgb(253,7,54)" rx="2" ry="2" />
<text  x="988.55" y="1887.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="603.8" y="1861" width="0.2" height="15.0" fill="rgb(253,122,42)" rx="2" ry="2" />
<text  x="606.82" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="543.9" y="1813" width="0.2" height="15.0" fill="rgb(254,219,9)" rx="2" ry="2" />
<text  x="546.86" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::handlerReady (32 samples, 0.55%)</title><rect x="25.1" y="2005" width="6.4" height="15.0" fill="rgb(244,167,43)" rx="2" ry="2" />
<text  x="28.09" y="2015.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1085.0" y="1765" width="0.2" height="15.0" fill="rgb(214,58,26)" rx="2" ry="2" />
<text  x="1087.96" y="1775.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="13.4" y="1941" width="0.2" height="15.0" fill="rgb(250,54,44)" rx="2" ry="2" />
<text  x="16.42" y="1951.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="822.6" y="1813" width="0.2" height="15.0" fill="rgb(245,144,13)" rx="2" ry="2" />
<text  x="825.56" y="1823.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="87.3" y="1925" width="0.2" height="15.0" fill="rgb(230,78,29)" rx="2" ry="2" />
<text  x="90.27" y="1935.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.03%)</title><rect x="612.9" y="2021" width="0.4" height="15.0" fill="rgb(216,98,19)" rx="2" ry="2" />
<text  x="615.88" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="171.0" y="1957" width="0.2" height="15.0" fill="rgb(247,55,50)" rx="2" ry="2" />
<text  x="173.98" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl (4 samples, 0.07%)</title><rect x="573.8" y="1957" width="0.8" height="15.0" fill="rgb(218,208,38)" rx="2" ry="2" />
<text  x="576.84" y="1967.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="1088.0" y="1653" width="0.2" height="15.0" fill="rgb(232,229,27)" rx="2" ry="2" />
<text  x="1090.98" y="1663.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (4 samples, 0.07%)</title><rect x="332.0" y="1957" width="0.8" height="15.0" fill="rgb(219,11,54)" rx="2" ry="2" />
<text  x="334.96" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1032.4" y="1861" width="0.2" height="15.0" fill="rgb(209,36,32)" rx="2" ry="2" />
<text  x="1035.44" y="1871.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="617.3" y="1909" width="0.2" height="15.0" fill="rgb(219,58,51)" rx="2" ry="2" />
<text  x="620.31" y="1919.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="778.5" y="1333" width="0.2" height="15.0" fill="rgb(246,60,5)" rx="2" ry="2" />
<text  x="781.49" y="1343.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="152.3" y="149" width="0.2" height="15.0" fill="rgb(224,161,15)" rx="2" ry="2" />
<text  x="155.27" y="159.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="441.0" y="1845" width="0.2" height="15.0" fill="rgb(248,209,35)" rx="2" ry="2" />
<text  x="444.03" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="312.4" y="1893" width="0.2" height="15.0" fill="rgb(245,19,27)" rx="2" ry="2" />
<text  x="315.45" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="464.6" y="1637" width="0.2" height="15.0" fill="rgb(239,46,4)" rx="2" ry="2" />
<text  x="467.57" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="812.5" y="1477" width="0.2" height="15.0" fill="rgb(214,214,53)" rx="2" ry="2" />
<text  x="815.50" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="341.8" y="1861" width="0.4" height="15.0" fill="rgb(208,121,28)" rx="2" ry="2" />
<text  x="344.82" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="181.2" y="1909" width="0.2" height="15.0" fill="rgb(218,36,36)" rx="2" ry="2" />
<text  x="184.24" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (1 samples, 0.02%)</title><rect x="875.7" y="1989" width="0.2" height="15.0" fill="rgb(234,177,29)" rx="2" ry="2" />
<text  x="878.68" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="845.7" y="1765" width="0.2" height="15.0" fill="rgb(225,23,26)" rx="2" ry="2" />
<text  x="848.70" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="441.4" y="1893" width="0.4" height="15.0" fill="rgb(252,175,53)" rx="2" ry="2" />
<text  x="444.43" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (2 samples, 0.03%)</title><rect x="1179.5" y="2021" width="0.4" height="15.0" fill="rgb(245,114,38)" rx="2" ry="2" />
<text  x="1182.54" y="2031.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (25 samples, 0.43%)</title><rect x="790.6" y="1541" width="5.0" height="15.0" fill="rgb(251,12,8)" rx="2" ry="2" />
<text  x="793.56" y="1551.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="454.1" y="1861" width="0.2" height="15.0" fill="rgb(208,167,0)" rx="2" ry="2" />
<text  x="457.11" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setNoDelay (81 samples, 1.38%)</title><rect x="672.6" y="2021" width="16.3" height="15.0" fill="rgb(229,146,16)" rx="2" ry="2" />
<text  x="675.64" y="2031.5" ></text>
</g>
<g >
<title>rb_erase (2 samples, 0.03%)</title><rect x="1105.5" y="1509" width="0.4" height="15.0" fill="rgb(207,226,39)" rx="2" ry="2" />
<text  x="1108.48" y="1519.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="923.4" y="1909" width="0.2" height="15.0" fill="rgb(222,192,23)" rx="2" ry="2" />
<text  x="926.37" y="1919.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.03%)</title><rect x="62.7" y="1957" width="0.4" height="15.0" fill="rgb(221,170,20)" rx="2" ry="2" />
<text  x="65.72" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="316.1" y="1701" width="0.2" height="15.0" fill="rgb(244,215,4)" rx="2" ry="2" />
<text  x="319.07" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="295.7" y="1589" width="0.2" height="15.0" fill="rgb(223,65,43)" rx="2" ry="2" />
<text  x="298.74" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="230.5" y="1813" width="0.2" height="15.0" fill="rgb(241,56,14)" rx="2" ry="2" />
<text  x="233.55" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="674.1" y="1925" width="0.2" height="15.0" fill="rgb(230,150,19)" rx="2" ry="2" />
<text  x="677.05" y="1935.5" ></text>
</g>
<g >
<title>apparmor_socket_getsockname (1 samples, 0.02%)</title><rect x="592.0" y="1845" width="0.2" height="15.0" fill="rgb(231,162,42)" rx="2" ry="2" />
<text  x="594.95" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1,056 samples, 18.01%)</title><rect x="692.6" y="2037" width="212.5" height="15.0" fill="rgb(221,79,6)" rx="2" ry="2" />
<text  x="695.56" y="2047.5" >facebook::memcache::McServer..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="407.8" y="1925" width="0.2" height="15.0" fill="rgb(244,64,23)" rx="2" ry="2" />
<text  x="410.83" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="899.8" y="1989" width="0.2" height="15.0" fill="rgb(241,146,31)" rx="2" ry="2" />
<text  x="902.83" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="152.7" y="309" width="0.2" height="15.0" fill="rgb(218,130,10)" rx="2" ry="2" />
<text  x="155.67" y="319.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="548.9" y="1861" width="0.2" height="15.0" fill="rgb(245,19,13)" rx="2" ry="2" />
<text  x="551.89" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::str[abi:cxx11] (42 samples, 0.72%)</title><rect x="596.8" y="1989" width="8.4" height="15.0" fill="rgb(212,93,36)" rx="2" ry="2" />
<text  x="599.78" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="741.9" y="1605" width="0.2" height="15.0" fill="rgb(236,214,21)" rx="2" ry="2" />
<text  x="744.87" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1032.4" y="1893" width="0.2" height="15.0" fill="rgb(223,198,33)" rx="2" ry="2" />
<text  x="1035.44" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="241.2" y="1957" width="0.2" height="15.0" fill="rgb(209,33,42)" rx="2" ry="2" />
<text  x="244.21" y="1967.5" ></text>
</g>
<g >
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="1087.6" y="1621" width="0.2" height="15.0" fill="rgb(243,3,47)" rx="2" ry="2" />
<text  x="1090.58" y="1631.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="1155.4" y="1653" width="0.2" height="15.0" fill="rgb(247,182,2)" rx="2" ry="2" />
<text  x="1158.39" y="1663.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="152.7" y="85" width="0.2" height="15.0" fill="rgb(232,122,39)" rx="2" ry="2" />
<text  x="155.67" y="95.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::dispatchRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="916.3" y="1973" width="0.2" height="15.0" fill="rgb(240,101,1)" rx="2" ry="2" />
<text  x="919.33" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="441.4" y="1685" width="0.4" height="15.0" fill="rgb(230,135,33)" rx="2" ry="2" />
<text  x="444.43" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext::operator= (1 samples, 0.02%)</title><rect x="928.6" y="2037" width="0.2" height="15.0" fill="rgb(225,159,36)" rx="2" ry="2" />
<text  x="931.61" y="2047.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::init (2 samples, 0.03%)</title><rect x="633.6" y="1957" width="0.4" height="15.0" fill="rgb(244,71,32)" rx="2" ry="2" />
<text  x="636.61" y="1967.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="306.8" y="1861" width="0.2" height="15.0" fill="rgb(249,62,29)" rx="2" ry="2" />
<text  x="309.81" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="631.4" y="1701" width="0.2" height="15.0" fill="rgb(233,57,44)" rx="2" ry="2" />
<text  x="634.39" y="1711.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="785.3" y="1557" width="0.2" height="15.0" fill="rgb(222,18,38)" rx="2" ry="2" />
<text  x="788.33" y="1567.5" ></text>
</g>
<g >
<title>netdev_pick_tx (7 samples, 0.12%)</title><rect x="785.5" y="1557" width="1.4" height="15.0" fill="rgb(232,29,38)" rx="2" ry="2" />
<text  x="788.53" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="912.5" y="1957" width="0.6" height="15.0" fill="rgb(249,67,11)" rx="2" ry="2" />
<text  x="915.51" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1156.0" y="1957" width="0.2" height="15.0" fill="rgb(231,184,53)" rx="2" ry="2" />
<text  x="1158.99" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="454.7" y="1909" width="0.2" height="15.0" fill="rgb(223,60,48)" rx="2" ry="2" />
<text  x="457.71" y="1919.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1076.1" y="1845" width="0.4" height="15.0" fill="rgb(246,84,8)" rx="2" ry="2" />
<text  x="1079.11" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="535.0" y="2021" width="1.0" height="15.0" fill="rgb(228,157,39)" rx="2" ry="2" />
<text  x="538.00" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="841.7" y="1749" width="0.2" height="15.0" fill="rgb(241,222,43)" rx="2" ry="2" />
<text  x="844.67" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="721.3" y="1685" width="0.2" height="15.0" fill="rgb(233,146,27)" rx="2" ry="2" />
<text  x="724.34" y="1695.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="67.1" y="1909" width="0.2" height="15.0" fill="rgb(214,200,2)" rx="2" ry="2" />
<text  x="70.15" y="1919.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="513.5" y="2037" width="0.2" height="15.0" fill="rgb(244,217,29)" rx="2" ry="2" />
<text  x="516.47" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="55.3" y="1877" width="0.2" height="15.0" fill="rgb(245,12,19)" rx="2" ry="2" />
<text  x="58.28" y="1887.5" ></text>
</g>
<g >
<title>tcp_init_buffer_space (1 samples, 0.02%)</title><rect x="464.2" y="1685" width="0.2" height="15.0" fill="rgb(205,145,42)" rx="2" ry="2" />
<text  x="467.17" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::~CarbonRouterClient (59 samples, 1.01%)</title><rect x="912.3" y="2037" width="11.9" height="15.0" fill="rgb(205,34,9)" rx="2" ry="2" />
<text  x="915.31" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="841.7" y="1877" width="0.2" height="15.0" fill="rgb(228,54,16)" rx="2" ry="2" />
<text  x="844.67" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="533.2" y="1909" width="0.2" height="15.0" fill="rgb(213,167,22)" rx="2" ry="2" />
<text  x="536.19" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="944.3" y="1781" width="0.2" height="15.0" fill="rgb(217,21,16)" rx="2" ry="2" />
<text  x="947.30" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="775.5" y="1477" width="0.2" height="15.0" fill="rgb(234,42,16)" rx="2" ry="2" />
<text  x="778.47" y="1487.5" ></text>
</g>
<g >
<title>boost::iterators::operator+&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long&gt; (4 samples, 0.07%)</title><rect x="526.6" y="1973" width="0.8" height="15.0" fill="rgb(210,183,4)" rx="2" ry="2" />
<text  x="529.55" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (1 samples, 0.02%)</title><rect x="85.1" y="1941" width="0.2" height="15.0" fill="rgb(205,201,11)" rx="2" ry="2" />
<text  x="88.06" y="1951.5" ></text>
</g>
<g >
<title>zap_page_range (6 samples, 0.10%)</title><rect x="1126.0" y="1989" width="1.2" height="15.0" fill="rgb(226,88,28)" rx="2" ry="2" />
<text  x="1129.01" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (5 samples, 0.09%)</title><rect x="535.0" y="1973" width="1.0" height="15.0" fill="rgb(252,125,17)" rx="2" ry="2" />
<text  x="538.00" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="1087.6" y="1733" width="0.6" height="15.0" fill="rgb(225,88,26)" rx="2" ry="2" />
<text  x="1090.58" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (6 samples, 0.10%)</title><rect x="859.2" y="1989" width="1.2" height="15.0" fill="rgb(229,42,11)" rx="2" ry="2" />
<text  x="862.18" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::pushMessages (19 samples, 0.32%)</title><rect x="1142.7" y="2053" width="3.8" height="15.0" fill="rgb(229,129,25)" rx="2" ry="2" />
<text  x="1145.71" y="2063.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="858.2" y="1861" width="0.2" height="15.0" fill="rgb(214,54,30)" rx="2" ry="2" />
<text  x="861.18" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="832.2" y="1653" width="0.2" height="15.0" fill="rgb(222,151,45)" rx="2" ry="2" />
<text  x="835.22" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1141.1" y="1973" width="0.2" height="15.0" fill="rgb(254,31,28)" rx="2" ry="2" />
<text  x="1144.10" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="345.8" y="1717" width="0.3" height="15.0" fill="rgb(205,155,1)" rx="2" ry="2" />
<text  x="348.85" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="775.5" y="1509" width="0.2" height="15.0" fill="rgb(207,146,21)" rx="2" ry="2" />
<text  x="778.47" y="1519.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="486.3" y="1829" width="0.6" height="15.0" fill="rgb(214,122,41)" rx="2" ry="2" />
<text  x="489.31" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="407.8" y="1893" width="0.2" height="15.0" fill="rgb(215,124,26)" rx="2" ry="2" />
<text  x="410.83" y="1903.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::clear (11 samples, 0.19%)</title><rect x="839.3" y="1925" width="2.2" height="15.0" fill="rgb(237,146,11)" rx="2" ry="2" />
<text  x="842.26" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="923.4" y="1957" width="0.2" height="15.0" fill="rgb(215,211,11)" rx="2" ry="2" />
<text  x="926.37" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="388.3" y="1781" width="0.2" height="15.0" fill="rgb(225,152,0)" rx="2" ry="2" />
<text  x="391.31" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::applyLoopKeepAlive (2 samples, 0.03%)</title><rect x="175.4" y="1941" width="0.4" height="15.0" fill="rgb(242,95,0)" rx="2" ry="2" />
<text  x="178.41" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="535.0" y="1893" width="0.2" height="15.0" fill="rgb(223,8,30)" rx="2" ry="2" />
<text  x="538.00" y="1903.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="747.1" y="1589" width="0.2" height="15.0" fill="rgb(208,17,44)" rx="2" ry="2" />
<text  x="750.10" y="1599.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="152.3" y="69" width="0.2" height="15.0" fill="rgb(248,121,43)" rx="2" ry="2" />
<text  x="155.27" y="79.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="54.5" y="1669" width="0.2" height="15.0" fill="rgb(247,79,36)" rx="2" ry="2" />
<text  x="57.47" y="1679.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="991.6" y="1909" width="0.4" height="15.0" fill="rgb(217,200,12)" rx="2" ry="2" />
<text  x="994.59" y="1919.5" ></text>
</g>
<g >
<title>apparmor_sk_clone_security (1 samples, 0.02%)</title><rect x="631.4" y="1573" width="0.2" height="15.0" fill="rgb(252,33,49)" rx="2" ry="2" />
<text  x="634.39" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (8 samples, 0.14%)</title><rect x="178.6" y="1893" width="1.6" height="15.0" fill="rgb(208,83,30)" rx="2" ry="2" />
<text  x="181.63" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="19.1" y="1909" width="0.2" height="15.0" fill="rgb(205,13,42)" rx="2" ry="2" />
<text  x="22.06" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="331.4" y="1829" width="0.2" height="15.0" fill="rgb(218,173,41)" rx="2" ry="2" />
<text  x="334.36" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="151.9" y="133" width="0.2" height="15.0" fill="rgb(247,216,31)" rx="2" ry="2" />
<text  x="154.87" y="143.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="783.9" y="1397" width="0.2" height="15.0" fill="rgb(243,162,49)" rx="2" ry="2" />
<text  x="786.92" y="1407.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="342.0" y="1685" width="0.2" height="15.0" fill="rgb(233,173,15)" rx="2" ry="2" />
<text  x="345.03" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="816.5" y="1461" width="0.2" height="15.0" fill="rgb(220,68,44)" rx="2" ry="2" />
<text  x="819.52" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.44%)</title><rect x="628.4" y="1957" width="5.2" height="15.0" fill="rgb(227,159,33)" rx="2" ry="2" />
<text  x="631.37" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="661.8" y="1877" width="0.2" height="15.0" fill="rgb(227,16,39)" rx="2" ry="2" />
<text  x="664.78" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="523.3" y="1861" width="0.2" height="15.0" fill="rgb(213,65,31)" rx="2" ry="2" />
<text  x="526.33" y="1871.5" ></text>
</g>
<g >
<title>security_inode_alloc (1 samples, 0.02%)</title><rect x="365.6" y="1893" width="0.2" height="15.0" fill="rgb(243,125,4)" rx="2" ry="2" />
<text  x="368.57" y="1903.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="891.0" y="1877" width="0.2" height="15.0" fill="rgb(219,50,14)" rx="2" ry="2" />
<text  x="893.98" y="1887.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="265.8" y="1861" width="0.2" height="15.0" fill="rgb(249,5,12)" rx="2" ry="2" />
<text  x="268.76" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="543.9" y="1845" width="0.2" height="15.0" fill="rgb(245,132,38)" rx="2" ry="2" />
<text  x="546.86" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="844.1" y="1621" width="0.2" height="15.0" fill="rgb(226,112,9)" rx="2" ry="2" />
<text  x="847.09" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (380 samples, 6.48%)</title><rect x="1043.7" y="2021" width="76.5" height="15.0" fill="rgb(227,111,6)" rx="2" ry="2" />
<text  x="1046.71" y="2031.5" >do_sysca..</text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="67.3" y="1909" width="0.3" height="15.0" fill="rgb(233,42,10)" rx="2" ry="2" />
<text  x="70.35" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="831.0" y="1733" width="0.2" height="15.0" fill="rgb(215,143,8)" rx="2" ry="2" />
<text  x="834.01" y="1743.5" ></text>
</g>
<g >
<title>netif_skb_features (7 samples, 0.12%)</title><rect x="795.8" y="1509" width="1.4" height="15.0" fill="rgb(245,187,11)" rx="2" ry="2" />
<text  x="798.79" y="1519.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="783.5" y="1285" width="0.2" height="15.0" fill="rgb(221,137,13)" rx="2" ry="2" />
<text  x="786.52" y="1295.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="312.4" y="1845" width="0.2" height="15.0" fill="rgb(233,135,48)" rx="2" ry="2" />
<text  x="315.45" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="42.4" y="1941" width="0.2" height="15.0" fill="rgb(226,40,47)" rx="2" ry="2" />
<text  x="45.40" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::end (4 samples, 0.07%)</title><rect x="30.7" y="1973" width="0.8" height="15.0" fill="rgb(238,56,47)" rx="2" ry="2" />
<text  x="33.73" y="1983.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::begin (1 samples, 0.02%)</title><rect x="89.5" y="1973" width="0.2" height="15.0" fill="rgb(249,146,35)" rx="2" ry="2" />
<text  x="92.48" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.68%)</title><rect x="912.3" y="2005" width="8.1" height="15.0" fill="rgb(232,6,34)" rx="2" ry="2" />
<text  x="915.31" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="345.8" y="1829" width="0.3" height="15.0" fill="rgb(207,24,25)" rx="2" ry="2" />
<text  x="348.85" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1075.9" y="1829" width="0.2" height="15.0" fill="rgb(230,95,44)" rx="2" ry="2" />
<text  x="1078.90" y="1839.5" ></text>
</g>
<g >
<title>__GI___setsockopt (75 samples, 1.28%)</title><rect x="673.6" y="1989" width="15.1" height="15.0" fill="rgb(230,95,44)" rx="2" ry="2" />
<text  x="676.65" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="174.4" y="1877" width="0.2" height="15.0" fill="rgb(207,86,38)" rx="2" ry="2" />
<text  x="177.40" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="516.7" y="1733" width="0.2" height="15.0" fill="rgb(235,40,40)" rx="2" ry="2" />
<text  x="519.69" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="234.8" y="1829" width="0.4" height="15.0" fill="rgb(211,205,28)" rx="2" ry="2" />
<text  x="237.77" y="1839.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="253.1" y="1973" width="0.2" height="15.0" fill="rgb(229,175,17)" rx="2" ry="2" />
<text  x="256.08" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="310.6" y="1685" width="0.2" height="15.0" fill="rgb(232,112,30)" rx="2" ry="2" />
<text  x="313.63" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="177.4" y="1861" width="0.2" height="15.0" fill="rgb(226,110,6)" rx="2" ry="2" />
<text  x="180.42" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="345.8" y="1861" width="0.3" height="15.0" fill="rgb(228,45,50)" rx="2" ry="2" />
<text  x="348.85" y="1871.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="651.1" y="1957" width="0.2" height="15.0" fill="rgb(211,93,34)" rx="2" ry="2" />
<text  x="654.11" y="1967.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="115.0" y="1685" width="0.2" height="15.0" fill="rgb(238,212,9)" rx="2" ry="2" />
<text  x="118.04" y="1695.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="81.6" y="1925" width="0.4" height="15.0" fill="rgb(237,185,18)" rx="2" ry="2" />
<text  x="84.64" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="858.2" y="1941" width="0.2" height="15.0" fill="rgb(247,50,47)" rx="2" ry="2" />
<text  x="861.18" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="90.7" y="1941" width="0.2" height="15.0" fill="rgb(227,201,4)" rx="2" ry="2" />
<text  x="93.69" y="1951.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="610.1" y="1989" width="0.2" height="15.0" fill="rgb(213,162,32)" rx="2" ry="2" />
<text  x="613.06" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="516.7" y="1589" width="0.2" height="15.0" fill="rgb(241,188,41)" rx="2" ry="2" />
<text  x="519.69" y="1599.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (16 samples, 0.27%)</title><rect x="563.6" y="1973" width="3.2" height="15.0" fill="rgb(253,208,21)" rx="2" ry="2" />
<text  x="566.58" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="56.7" y="1653" width="0.2" height="15.0" fill="rgb(239,130,23)" rx="2" ry="2" />
<text  x="59.68" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="919.8" y="1925" width="0.2" height="15.0" fill="rgb(209,82,51)" rx="2" ry="2" />
<text  x="922.75" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::parent_from_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="631.8" y="1909" width="0.2" height="15.0" fill="rgb(206,123,2)" rx="2" ry="2" />
<text  x="634.79" y="1919.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="756.4" y="1733" width="0.2" height="15.0" fill="rgb(228,178,8)" rx="2" ry="2" />
<text  x="759.35" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="310.6" y="1909" width="0.2" height="15.0" fill="rgb(230,181,33)" rx="2" ry="2" />
<text  x="313.63" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="816.5" y="1621" width="0.2" height="15.0" fill="rgb(216,36,24)" rx="2" ry="2" />
<text  x="819.52" y="1631.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="187.5" y="1925" width="0.2" height="15.0" fill="rgb(242,143,18)" rx="2" ry="2" />
<text  x="190.48" y="1935.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.09%)</title><rect x="13.6" y="1989" width="1.0" height="15.0" fill="rgb(216,224,52)" rx="2" ry="2" />
<text  x="16.62" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="613.3" y="2037" width="0.2" height="15.0" fill="rgb(207,179,14)" rx="2" ry="2" />
<text  x="616.28" y="2047.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (2 samples, 0.03%)</title><rect x="142.4" y="37" width="0.4" height="15.0" fill="rgb(236,85,15)" rx="2" ry="2" />
<text  x="145.41" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="176.2" y="1909" width="0.6" height="15.0" fill="rgb(254,81,12)" rx="2" ry="2" />
<text  x="179.21" y="1919.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (2 samples, 0.03%)</title><rect x="681.9" y="1909" width="0.4" height="15.0" fill="rgb(248,10,53)" rx="2" ry="2" />
<text  x="684.90" y="1919.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="71.4" y="1877" width="0.2" height="15.0" fill="rgb(251,67,26)" rx="2" ry="2" />
<text  x="74.37" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="633.2" y="1909" width="0.2" height="15.0" fill="rgb(214,97,19)" rx="2" ry="2" />
<text  x="636.20" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1119.2" y="1877" width="0.4" height="15.0" fill="rgb(246,148,50)" rx="2" ry="2" />
<text  x="1122.17" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="152.7" y="133" width="0.2" height="15.0" fill="rgb(219,177,35)" rx="2" ry="2" />
<text  x="155.67" y="143.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (44 samples, 0.75%)</title><rect x="1098.0" y="1925" width="8.9" height="15.0" fill="rgb(247,178,36)" rx="2" ry="2" />
<text  x="1101.04" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="887.4" y="1829" width="0.2" height="15.0" fill="rgb(230,102,38)" rx="2" ry="2" />
<text  x="890.35" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="767.4" y="1605" width="0.2" height="15.0" fill="rgb(249,204,36)" rx="2" ry="2" />
<text  x="770.42" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="999.6" y="1973" width="0.2" height="15.0" fill="rgb(252,37,48)" rx="2" ry="2" />
<text  x="1002.64" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1072.7" y="1845" width="0.2" height="15.0" fill="rgb(247,68,46)" rx="2" ry="2" />
<text  x="1075.68" y="1855.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2 samples, 0.03%)</title><rect x="604.4" y="1861" width="0.4" height="15.0" fill="rgb(251,84,41)" rx="2" ry="2" />
<text  x="607.43" y="1871.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.10%)</title><rect x="1077.5" y="1829" width="1.2" height="15.0" fill="rgb(224,53,4)" rx="2" ry="2" />
<text  x="1080.51" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="256.5" y="1877" width="0.2" height="15.0" fill="rgb(234,143,20)" rx="2" ry="2" />
<text  x="259.50" y="1887.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (3 samples, 0.05%)</title><rect x="1054.0" y="2005" width="0.6" height="15.0" fill="rgb(205,209,14)" rx="2" ry="2" />
<text  x="1056.97" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="920.6" y="1781" width="0.2" height="15.0" fill="rgb(210,39,39)" rx="2" ry="2" />
<text  x="923.56" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (2 samples, 0.03%)</title><rect x="1032.0" y="2037" width="0.4" height="15.0" fill="rgb(213,52,0)" rx="2" ry="2" />
<text  x="1035.04" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (146 samples, 2.49%)</title><rect x="124.1" y="741" width="29.4" height="15.0" fill="rgb(222,137,52)" rx="2" ry="2" />
<text  x="127.10" y="751.5" >[u..</text>
</g>
<g >
<title>ip_local_deliver_finish (8 samples, 0.14%)</title><rect x="282.3" y="1557" width="1.6" height="15.0" fill="rgb(238,227,0)" rx="2" ry="2" />
<text  x="285.26" y="1567.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="454.7" y="1877" width="0.2" height="15.0" fill="rgb(246,122,49)" rx="2" ry="2" />
<text  x="457.71" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="721.3" y="1573" width="0.2" height="15.0" fill="rgb(250,29,40)" rx="2" ry="2" />
<text  x="724.34" y="1583.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="19.7" y="1925" width="0.2" height="15.0" fill="rgb(234,105,16)" rx="2" ry="2" />
<text  x="22.66" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.14%)</title><rect x="63.3" y="1941" width="1.6" height="15.0" fill="rgb(226,130,11)" rx="2" ry="2" />
<text  x="66.33" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="307.2" y="1765" width="0.2" height="15.0" fill="rgb(224,61,34)" rx="2" ry="2" />
<text  x="310.21" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="229" width="28.0" height="15.0" fill="rgb(230,221,48)" rx="2" ry="2" />
<text  x="127.30" y="239.5" >[..</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="672.2" y="2021" width="0.4" height="15.0" fill="rgb(254,211,26)" rx="2" ry="2" />
<text  x="675.24" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (5 samples, 0.09%)</title><rect x="218.9" y="2021" width="1.0" height="15.0" fill="rgb(233,84,35)" rx="2" ry="2" />
<text  x="221.87" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="747.7" y="1733" width="0.2" height="15.0" fill="rgb(212,38,45)" rx="2" ry="2" />
<text  x="750.70" y="1743.5" ></text>
</g>
<g >
<title>sys_gettid (5 samples, 0.09%)</title><rect x="1163.4" y="1925" width="1.0" height="15.0" fill="rgb(219,36,15)" rx="2" ry="2" />
<text  x="1166.44" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="942.9" y="1925" width="0.2" height="15.0" fill="rgb(216,110,47)" rx="2" ry="2" />
<text  x="945.89" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="862.8" y="1861" width="0.2" height="15.0" fill="rgb(253,73,29)" rx="2" ry="2" />
<text  x="865.80" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="257.5" y="1717" width="0.2" height="15.0" fill="rgb(242,176,9)" rx="2" ry="2" />
<text  x="260.51" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1156.0" y="1909" width="0.2" height="15.0" fill="rgb(214,161,35)" rx="2" ry="2" />
<text  x="1158.99" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="95.7" y="1909" width="0.2" height="15.0" fill="rgb(249,39,30)" rx="2" ry="2" />
<text  x="98.72" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="230.5" y="1653" width="0.2" height="15.0" fill="rgb(231,208,54)" rx="2" ry="2" />
<text  x="233.55" y="1663.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="840.9" y="1829" width="0.2" height="15.0" fill="rgb(209,141,33)" rx="2" ry="2" />
<text  x="843.87" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="821" width="29.6" height="15.0" fill="rgb(205,56,4)" rx="2" ry="2" />
<text  x="127.10" y="831.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="730.2" y="1605" width="0.2" height="15.0" fill="rgb(239,115,9)" rx="2" ry="2" />
<text  x="733.19" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1181.1" y="1861" width="0.2" height="15.0" fill="rgb(240,180,53)" rx="2" ry="2" />
<text  x="1184.15" y="1871.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="976.5" y="1957" width="0.2" height="15.0" fill="rgb(216,142,43)" rx="2" ry="2" />
<text  x="979.50" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="362.6" y="1669" width="0.2" height="15.0" fill="rgb(216,195,49)" rx="2" ry="2" />
<text  x="365.55" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="114.8" y="1909" width="0.8" height="15.0" fill="rgb(241,200,22)" rx="2" ry="2" />
<text  x="117.84" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="750.1" y="1733" width="0.2" height="15.0" fill="rgb(228,155,51)" rx="2" ry="2" />
<text  x="753.12" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="907.9" y="1957" width="0.2" height="15.0" fill="rgb(241,116,10)" rx="2" ry="2" />
<text  x="910.88" y="1967.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="668.2" y="1845" width="0.2" height="15.0" fill="rgb(223,166,26)" rx="2" ry="2" />
<text  x="671.22" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="533" width="28.8" height="15.0" fill="rgb(215,173,23)" rx="2" ry="2" />
<text  x="127.10" y="543.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1121.6" y="1989" width="0.2" height="15.0" fill="rgb(205,176,21)" rx="2" ry="2" />
<text  x="1124.58" y="1999.5" ></text>
</g>
<g >
<title>isspace@plt (1 samples, 0.02%)</title><rect x="1010.9" y="2021" width="0.2" height="15.0" fill="rgb(208,40,20)" rx="2" ry="2" />
<text  x="1013.91" y="2031.5" ></text>
</g>
<g >
<title>integrity_inode_free (1 samples, 0.02%)</title><rect x="733.2" y="1669" width="0.2" height="15.0" fill="rgb(249,22,30)" rx="2" ry="2" />
<text  x="736.21" y="1679.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="84.9" y="1877" width="0.2" height="15.0" fill="rgb(248,157,19)" rx="2" ry="2" />
<text  x="87.86" y="1887.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (1 samples, 0.02%)</title><rect x="259.5" y="1765" width="0.2" height="15.0" fill="rgb(220,66,41)" rx="2" ry="2" />
<text  x="262.52" y="1775.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="1126.4" y="1925" width="0.4" height="15.0" fill="rgb(253,183,33)" rx="2" ry="2" />
<text  x="1129.41" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="920.8" y="2005" width="0.4" height="15.0" fill="rgb(254,184,6)" rx="2" ry="2" />
<text  x="923.76" y="2015.5" ></text>
</g>
<g >
<title>sk_stream_wait_close (1 samples, 0.02%)</title><rect x="758.4" y="1733" width="0.2" height="15.0" fill="rgb(239,215,53)" rx="2" ry="2" />
<text  x="761.37" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1030.4" y="1957" width="0.2" height="15.0" fill="rgb(234,167,3)" rx="2" ry="2" />
<text  x="1033.43" y="1967.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="633.2" y="1669" width="0.2" height="15.0" fill="rgb(210,203,28)" rx="2" ry="2" />
<text  x="636.20" y="1679.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (49 samples, 0.84%)</title><rect x="1088.2" y="1925" width="9.8" height="15.0" fill="rgb(228,129,52)" rx="2" ry="2" />
<text  x="1091.18" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="930.2" y="1973" width="0.2" height="15.0" fill="rgb(216,223,46)" rx="2" ry="2" />
<text  x="933.21" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1082.1" y="1717" width="0.2" height="15.0" fill="rgb(216,205,33)" rx="2" ry="2" />
<text  x="1085.14" y="1727.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="156.7" y="1973" width="0.2" height="15.0" fill="rgb(205,126,47)" rx="2" ry="2" />
<text  x="159.70" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="83.9" y="1813" width="0.4" height="15.0" fill="rgb(245,127,10)" rx="2" ry="2" />
<text  x="86.85" y="1823.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="1111.3" y="1669" width="0.2" height="15.0" fill="rgb(237,30,22)" rx="2" ry="2" />
<text  x="1114.32" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="571.6" y="1941" width="0.2" height="15.0" fill="rgb(229,118,20)" rx="2" ry="2" />
<text  x="574.63" y="1951.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (2 samples, 0.03%)</title><rect x="974.9" y="2037" width="0.4" height="15.0" fill="rgb(251,217,8)" rx="2" ry="2" />
<text  x="977.89" y="2047.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1077.9" y="1813" width="0.2" height="15.0" fill="rgb(236,36,42)" rx="2" ry="2" />
<text  x="1080.92" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="1149.2" y="1541" width="0.2" height="15.0" fill="rgb(212,53,52)" rx="2" ry="2" />
<text  x="1152.15" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="83.9" y="1797" width="0.4" height="15.0" fill="rgb(219,212,33)" rx="2" ry="2" />
<text  x="86.85" y="1807.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="701.8" y="1717" width="0.2" height="15.0" fill="rgb(236,25,14)" rx="2" ry="2" />
<text  x="704.82" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="818.7" y="1637" width="0.2" height="15.0" fill="rgb(211,123,36)" rx="2" ry="2" />
<text  x="821.73" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="968.2" y="2005" width="0.2" height="15.0" fill="rgb(236,202,0)" rx="2" ry="2" />
<text  x="971.25" y="2015.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="812.5" y="1285" width="0.2" height="15.0" fill="rgb(248,50,44)" rx="2" ry="2" />
<text  x="815.50" y="1295.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="775.5" y="1493" width="0.2" height="15.0" fill="rgb(235,186,10)" rx="2" ry="2" />
<text  x="778.47" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="305.4" y="1781" width="0.2" height="15.0" fill="rgb(240,18,32)" rx="2" ry="2" />
<text  x="308.40" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1177.1" y="1957" width="0.2" height="15.0" fill="rgb(225,45,30)" rx="2" ry="2" />
<text  x="1180.12" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="272.4" y="1733" width="0.2" height="15.0" fill="rgb(251,181,10)" rx="2" ry="2" />
<text  x="275.40" y="1743.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1035.5" y="2053" width="0.2" height="15.0" fill="rgb(251,97,29)" rx="2" ry="2" />
<text  x="1038.46" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="346.7" y="1909" width="0.2" height="15.0" fill="rgb(225,152,37)" rx="2" ry="2" />
<text  x="349.65" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="265.2" y="1685" width="0.2" height="15.0" fill="rgb(246,44,31)" rx="2" ry="2" />
<text  x="268.16" y="1695.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="1144.3" y="1877" width="0.2" height="15.0" fill="rgb(211,101,2)" rx="2" ry="2" />
<text  x="1147.32" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="875.5" y="1941" width="0.2" height="15.0" fill="rgb(218,199,14)" rx="2" ry="2" />
<text  x="878.48" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::getSecurityProtocol[abi:cxx11] (2 samples, 0.03%)</title><rect x="241.4" y="1957" width="0.4" height="15.0" fill="rgb(215,7,54)" rx="2" ry="2" />
<text  x="244.41" y="1967.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1030.8" y="2005" width="0.2" height="15.0" fill="rgb(253,194,9)" rx="2" ry="2" />
<text  x="1033.83" y="2015.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="1085.0" y="1893" width="0.2" height="15.0" fill="rgb(237,70,46)" rx="2" ry="2" />
<text  x="1087.96" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="114.8" y="1781" width="0.2" height="15.0" fill="rgb(248,37,49)" rx="2" ry="2" />
<text  x="117.84" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (4 samples, 0.07%)</title><rect x="184.5" y="1893" width="0.8" height="15.0" fill="rgb(228,162,22)" rx="2" ry="2" />
<text  x="187.46" y="1903.5" ></text>
</g>
<g >
<title>__slab_alloc (10 samples, 0.17%)</title><rect x="367.8" y="1877" width="2.0" height="15.0" fill="rgb(247,158,37)" rx="2" ry="2" />
<text  x="370.78" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="13.6" y="2037" width="1.0" height="15.0" fill="rgb(237,133,12)" rx="2" ry="2" />
<text  x="16.62" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="100.4" y="1973" width="0.4" height="15.0" fill="rgb(228,13,45)" rx="2" ry="2" />
<text  x="103.35" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::multiOpEnd (1 samples, 0.02%)</title><rect x="912.1" y="2037" width="0.2" height="15.0" fill="rgb(236,212,14)" rx="2" ry="2" />
<text  x="915.10" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::asciiKey (5 samples, 0.09%)</title><rect x="1154.2" y="2053" width="1.0" height="15.0" fill="rgb(232,37,54)" rx="2" ry="2" />
<text  x="1157.18" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="433.6" y="1861" width="0.2" height="15.0" fill="rgb(211,197,49)" rx="2" ry="2" />
<text  x="436.58" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;::~ServerMcParser (4 samples, 0.07%)</title><rect x="910.5" y="2037" width="0.8" height="15.0" fill="rgb(231,149,35)" rx="2" ry="2" />
<text  x="913.49" y="2047.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="597.2" y="1941" width="0.2" height="15.0" fill="rgb(214,6,46)" rx="2" ry="2" />
<text  x="600.18" y="1951.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::update (2 samples, 0.03%)</title><rect x="125.1" y="37" width="0.4" height="15.0" fill="rgb(243,45,39)" rx="2" ry="2" />
<text  x="128.10" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20 samples, 0.34%)</title><rect x="1175.3" y="2005" width="4.0" height="15.0" fill="rgb(217,116,5)" rx="2" ry="2" />
<text  x="1178.31" y="2015.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="1126.2" y="1941" width="0.2" height="15.0" fill="rgb(245,212,32)" rx="2" ry="2" />
<text  x="1129.21" y="1951.5" ></text>
</g>
<g >
<title>__fget (37 samples, 0.63%)</title><rect x="1112.1" y="1925" width="7.5" height="15.0" fill="rgb(244,115,36)" rx="2" ry="2" />
<text  x="1115.12" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="69.2" y="1829" width="0.4" height="15.0" fill="rgb(211,111,21)" rx="2" ry="2" />
<text  x="72.16" y="1839.5" ></text>
</g>
<g >
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="381.1" y="1861" width="0.4" height="15.0" fill="rgb(240,49,12)" rx="2" ry="2" />
<text  x="384.06" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="704.2" y="1941" width="0.2" height="15.0" fill="rgb(253,128,10)" rx="2" ry="2" />
<text  x="707.24" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="491.7" y="1669" width="0.2" height="15.0" fill="rgb(234,21,27)" rx="2" ry="2" />
<text  x="494.74" y="1679.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="767.4" y="1445" width="0.2" height="15.0" fill="rgb(252,66,19)" rx="2" ry="2" />
<text  x="770.42" y="1455.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (29 samples, 0.49%)</title><rect x="1100.5" y="1749" width="5.8" height="15.0" fill="rgb(248,202,12)" rx="2" ry="2" />
<text  x="1103.45" y="1759.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (24 samples, 0.41%)</title><rect x="987.4" y="1957" width="4.8" height="15.0" fill="rgb(239,213,38)" rx="2" ry="2" />
<text  x="990.36" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="464.0" y="1829" width="0.8" height="15.0" fill="rgb(214,115,13)" rx="2" ry="2" />
<text  x="466.97" y="1839.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="345.8" y="1877" width="0.3" height="15.0" fill="rgb(210,141,14)" rx="2" ry="2" />
<text  x="348.85" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="747.1" y="1637" width="0.2" height="15.0" fill="rgb(233,115,0)" rx="2" ry="2" />
<text  x="750.10" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.1" y="1845" width="0.2" height="15.0" fill="rgb(215,4,11)" rx="2" ry="2" />
<text  x="854.13" y="1855.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="388.7" y="1957" width="0.2" height="15.0" fill="rgb(236,69,45)" rx="2" ry="2" />
<text  x="391.71" y="1967.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="347.5" y="1525" width="0.2" height="15.0" fill="rgb(210,221,8)" rx="2" ry="2" />
<text  x="350.46" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (9 samples, 0.15%)</title><rect x="698.0" y="1989" width="1.8" height="15.0" fill="rgb(245,127,8)" rx="2" ry="2" />
<text  x="701.00" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::scheduleNextWriterLoop (1 samples, 0.02%)</title><rect x="614.1" y="2005" width="0.2" height="15.0" fill="rgb(253,14,17)" rx="2" ry="2" />
<text  x="617.09" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="916.7" y="1877" width="0.2" height="15.0" fill="rgb(223,80,22)" rx="2" ry="2" />
<text  x="919.73" y="1887.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="767.8" y="1701" width="0.2" height="15.0" fill="rgb(222,146,18)" rx="2" ry="2" />
<text  x="770.82" y="1711.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (4 samples, 0.07%)</title><rect x="657.6" y="1989" width="0.8" height="15.0" fill="rgb(215,80,8)" rx="2" ry="2" />
<text  x="660.55" y="1999.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="68.0" y="1925" width="0.2" height="15.0" fill="rgb(250,198,37)" rx="2" ry="2" />
<text  x="70.95" y="1935.5" ></text>
</g>
<g >
<title>folly::EventHandler::changeHandlerFD (1 samples, 0.02%)</title><rect x="854.4" y="1957" width="0.2" height="15.0" fill="rgb(216,142,28)" rx="2" ry="2" />
<text  x="857.35" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="55.1" y="1893" width="0.2" height="15.0" fill="rgb(225,141,11)" rx="2" ry="2" />
<text  x="58.08" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9 samples, 0.15%)</title><rect x="348.1" y="1925" width="1.8" height="15.0" fill="rgb(243,177,6)" rx="2" ry="2" />
<text  x="351.06" y="1935.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="764.4" y="1685" width="0.2" height="15.0" fill="rgb(237,40,22)" rx="2" ry="2" />
<text  x="767.40" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="238.6" y="1909" width="2.2" height="15.0" fill="rgb(214,185,29)" rx="2" ry="2" />
<text  x="241.59" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="571.6" y="1925" width="0.2" height="15.0" fill="rgb(210,62,50)" rx="2" ry="2" />
<text  x="574.63" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="862.8" y="1957" width="0.2" height="15.0" fill="rgb(240,21,34)" rx="2" ry="2" />
<text  x="865.80" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::calcNextTick (12 samples, 0.20%)</title><rect x="521.1" y="1989" width="2.4" height="15.0" fill="rgb(244,139,35)" rx="2" ry="2" />
<text  x="524.12" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="90.7" y="1877" width="0.2" height="15.0" fill="rgb(224,108,38)" rx="2" ry="2" />
<text  x="93.69" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="346.9" y="1909" width="0.2" height="15.0" fill="rgb(232,199,2)" rx="2" ry="2" />
<text  x="349.86" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="265.2" y="1845" width="0.2" height="15.0" fill="rgb(232,109,51)" rx="2" ry="2" />
<text  x="268.16" y="1855.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (5 samples, 0.09%)</title><rect x="755.1" y="1717" width="1.1" height="15.0" fill="rgb(225,179,19)" rx="2" ry="2" />
<text  x="758.15" y="1727.5" ></text>
</g>
<g >
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="296.5" y="1653" width="0.7" height="15.0" fill="rgb(241,10,31)" rx="2" ry="2" />
<text  x="299.55" y="1663.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="312.2" y="1957" width="0.4" height="15.0" fill="rgb(208,25,2)" rx="2" ry="2" />
<text  x="315.24" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="257.5" y="1861" width="0.2" height="15.0" fill="rgb(235,223,30)" rx="2" ry="2" />
<text  x="260.51" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="532.0" y="1989" width="0.2" height="15.0" fill="rgb(247,3,35)" rx="2" ry="2" />
<text  x="534.98" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8 samples, 0.14%)</title><rect x="282.3" y="1541" width="1.6" height="15.0" fill="rgb(231,21,43)" rx="2" ry="2" />
<text  x="285.26" y="1551.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="832.0" y="1749" width="0.2" height="15.0" fill="rgb(218,60,40)" rx="2" ry="2" />
<text  x="835.02" y="1759.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="674.1" y="1909" width="0.2" height="15.0" fill="rgb(206,194,3)" rx="2" ry="2" />
<text  x="677.05" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="721.3" y="1701" width="0.2" height="15.0" fill="rgb(229,203,6)" rx="2" ry="2" />
<text  x="724.34" y="1711.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (1 samples, 0.02%)</title><rect x="818.7" y="1557" width="0.2" height="15.0" fill="rgb(247,41,22)" rx="2" ry="2" />
<text  x="821.73" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2 samples, 0.03%)</title><rect x="1031.6" y="2037" width="0.4" height="15.0" fill="rgb(233,166,48)" rx="2" ry="2" />
<text  x="1034.63" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="464.4" y="1685" width="0.2" height="15.0" fill="rgb(207,114,25)" rx="2" ry="2" />
<text  x="467.37" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::loopKeepAliveCount (1 samples, 0.02%)</title><rect x="175.4" y="1925" width="0.2" height="15.0" fill="rgb(228,38,5)" rx="2" ry="2" />
<text  x="178.41" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="347.5" y="1749" width="0.2" height="15.0" fill="rgb(211,139,10)" rx="2" ry="2" />
<text  x="350.46" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (3 samples, 0.05%)</title><rect x="535.4" y="1861" width="0.6" height="15.0" fill="rgb(224,56,22)" rx="2" ry="2" />
<text  x="538.41" y="1871.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="791.2" y="1509" width="0.2" height="15.0" fill="rgb(239,40,47)" rx="2" ry="2" />
<text  x="794.17" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="985.6" y="1941" width="0.2" height="15.0" fill="rgb(247,144,6)" rx="2" ry="2" />
<text  x="988.55" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="381.5" y="1781" width="0.2" height="15.0" fill="rgb(231,29,25)" rx="2" ry="2" />
<text  x="384.47" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="441.6" y="1653" width="0.2" height="15.0" fill="rgb(220,169,33)" rx="2" ry="2" />
<text  x="444.63" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_reqsk_destructor (1 samples, 0.02%)</title><rect x="353.5" y="1941" width="0.2" height="15.0" fill="rgb(219,169,24)" rx="2" ry="2" />
<text  x="356.50" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="316.1" y="1893" width="0.2" height="15.0" fill="rgb(249,108,40)" rx="2" ry="2" />
<text  x="319.07" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (59 samples, 1.01%)</title><rect x="1155.2" y="2037" width="11.9" height="15.0" fill="rgb(207,167,52)" rx="2" ry="2" />
<text  x="1158.19" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="90.7" y="1925" width="0.2" height="15.0" fill="rgb(227,166,30)" rx="2" ry="2" />
<text  x="93.69" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (27 samples, 0.46%)</title><rect x="65.7" y="1957" width="5.5" height="15.0" fill="rgb(238,84,53)" rx="2" ry="2" />
<text  x="68.74" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="961.8" y="1989" width="0.2" height="15.0" fill="rgb(237,170,53)" rx="2" ry="2" />
<text  x="964.81" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="554.1" y="1941" width="0.2" height="15.0" fill="rgb(228,54,30)" rx="2" ry="2" />
<text  x="557.12" y="1951.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (7 samples, 0.12%)</title><rect x="867.0" y="1989" width="1.4" height="15.0" fill="rgb(226,67,52)" rx="2" ry="2" />
<text  x="870.03" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="316.9" y="2021" width="0.2" height="15.0" fill="rgb(209,190,52)" rx="2" ry="2" />
<text  x="319.87" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="202.0" y="1797" width="0.2" height="15.0" fill="rgb(239,34,6)" rx="2" ry="2" />
<text  x="204.97" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_atr_compute_sig_hash_82599 (1 samples, 0.02%)</title><rect x="295.3" y="1621" width="0.2" height="15.0" fill="rgb(253,214,9)" rx="2" ry="2" />
<text  x="298.34" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="100.6" y="1877" width="0.2" height="15.0" fill="rgb(248,154,13)" rx="2" ry="2" />
<text  x="103.55" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="83.9" y="1829" width="0.4" height="15.0" fill="rgb(208,210,13)" rx="2" ry="2" />
<text  x="86.85" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (2 samples, 0.03%)</title><rect x="539.2" y="1941" width="0.4" height="15.0" fill="rgb(247,23,22)" rx="2" ry="2" />
<text  x="542.23" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (123 samples, 2.10%)</title><rect x="275.6" y="1829" width="24.8" height="15.0" fill="rgb(223,217,41)" rx="2" ry="2" />
<text  x="278.62" y="1839.5" >_..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="816.5" y="1605" width="0.2" height="15.0" fill="rgb(221,49,2)" rx="2" ry="2" />
<text  x="819.52" y="1615.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18 samples, 0.31%)</title><rect x="832.6" y="1893" width="3.6" height="15.0" fill="rgb(248,33,19)" rx="2" ry="2" />
<text  x="835.62" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::AsyncTimeout (35 samples, 0.60%)</title><rect x="542.2" y="1989" width="7.1" height="15.0" fill="rgb(251,130,49)" rx="2" ry="2" />
<text  x="545.25" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;void  (1 samples, 0.02%)</title><rect x="946.1" y="1925" width="0.2" height="15.0" fill="rgb(244,116,36)" rx="2" ry="2" />
<text  x="949.11" y="1935.5" ></text>
</g>
<g >
<title>mcr-fifo-mngr (6 samples, 0.10%)</title><rect x="12.2" y="2069" width="1.2" height="15.0" fill="rgb(232,209,19)" rx="2" ry="2" />
<text  x="15.21" y="2079.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="990.8" y="1893" width="0.4" height="15.0" fill="rgb(205,157,33)" rx="2" ry="2" />
<text  x="993.78" y="1903.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1094.0" y="1829" width="0.2" height="15.0" fill="rgb(239,41,28)" rx="2" ry="2" />
<text  x="1097.01" y="1839.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::~unordered_map (9 samples, 0.15%)</title><rect x="87.3" y="1957" width="1.8" height="15.0" fill="rgb(254,31,5)" rx="2" ry="2" />
<text  x="90.27" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="626.4" y="1989" width="0.2" height="15.0" fill="rgb(219,28,31)" rx="2" ry="2" />
<text  x="629.36" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="832.2" y="1749" width="0.4" height="15.0" fill="rgb(242,116,44)" rx="2" ry="2" />
<text  x="835.22" y="1759.5" ></text>
</g>
<g >
<title>all (5,864 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(247,12,26)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (7 samples, 0.12%)</title><rect x="621.7" y="2005" width="1.4" height="15.0" fill="rgb(248,216,36)" rx="2" ry="2" />
<text  x="624.73" y="2015.5" ></text>
</g>
<g >
<title>@plt (1 samples, 0.02%)</title><rect x="215.5" y="2021" width="0.2" height="15.0" fill="rgb(212,203,10)" rx="2" ry="2" />
<text  x="218.45" y="2031.5" ></text>
</g>
<g >
<title>event_add (2 samples, 0.03%)</title><rect x="1129.8" y="2053" width="0.4" height="15.0" fill="rgb(217,214,15)" rx="2" ry="2" />
<text  x="1132.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (165 samples, 2.81%)</title><rect x="123.1" y="1925" width="33.2" height="15.0" fill="rgb(253,126,7)" rx="2" ry="2" />
<text  x="126.09" y="1935.5" >[u..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="362.6" y="1893" width="0.2" height="15.0" fill="rgb(217,152,1)" rx="2" ry="2" />
<text  x="365.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="962.6" y="2005" width="0.2" height="15.0" fill="rgb(214,69,22)" rx="2" ry="2" />
<text  x="965.61" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (1 samples, 0.02%)</title><rect x="1147.3" y="2005" width="0.2" height="15.0" fill="rgb(236,68,3)" rx="2" ry="2" />
<text  x="1150.34" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (2 samples, 0.03%)</title><rect x="961.4" y="2005" width="0.4" height="15.0" fill="rgb(247,180,42)" rx="2" ry="2" />
<text  x="964.41" y="2015.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="1144.3" y="1925" width="0.2" height="15.0" fill="rgb(247,101,14)" rx="2" ry="2" />
<text  x="1147.32" y="1935.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (8 samples, 0.14%)</title><rect x="1109.5" y="1957" width="1.6" height="15.0" fill="rgb(214,174,6)" rx="2" ry="2" />
<text  x="1112.51" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (5 samples, 0.09%)</title><rect x="1151.0" y="1989" width="1.0" height="15.0" fill="rgb(228,193,3)" rx="2" ry="2" />
<text  x="1153.96" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="388.3" y="1733" width="0.2" height="15.0" fill="rgb(219,72,7)" rx="2" ry="2" />
<text  x="391.31" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="832.2" y="1685" width="0.4" height="15.0" fill="rgb(207,198,51)" rx="2" ry="2" />
<text  x="835.22" y="1695.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (401 samples, 6.84%)</title><rect x="20.1" y="2037" width="80.7" height="15.0" fill="rgb(232,202,36)" rx="2" ry="2" />
<text  x="23.06" y="2047.5" >folly::Ev..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="81.8" y="1877" width="0.2" height="15.0" fill="rgb(211,215,1)" rx="2" ry="2" />
<text  x="84.84" y="1887.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="140.4" y="37" width="0.2" height="15.0" fill="rgb(229,201,28)" rx="2" ry="2" />
<text  x="143.40" y="47.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (2 samples, 0.03%)</title><rect x="866.6" y="1989" width="0.4" height="15.0" fill="rgb(222,69,23)" rx="2" ry="2" />
<text  x="869.63" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="230.7" y="1845" width="0.2" height="15.0" fill="rgb(230,93,34)" rx="2" ry="2" />
<text  x="233.75" y="1855.5" ></text>
</g>
<g >
<title>std::operator==&lt;folly::RequestContext, folly::RequestContext&gt; (2 samples, 0.03%)</title><rect x="182.3" y="1893" width="0.4" height="15.0" fill="rgb(230,103,1)" rx="2" ry="2" />
<text  x="185.25" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="492.3" y="1813" width="0.2" height="15.0" fill="rgb(235,14,42)" rx="2" ry="2" />
<text  x="495.34" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="151.9" y="101" width="0.2" height="15.0" fill="rgb(206,154,15)" rx="2" ry="2" />
<text  x="154.87" y="111.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="312.4" y="1829" width="0.2" height="15.0" fill="rgb(224,218,51)" rx="2" ry="2" />
<text  x="315.45" y="1839.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1120.4" y="1989" width="0.2" height="15.0" fill="rgb(246,201,38)" rx="2" ry="2" />
<text  x="1123.38" y="1999.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="903.9" y="2005" width="0.2" height="15.0" fill="rgb(230,208,44)" rx="2" ry="2" />
<text  x="906.85" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (33 samples, 0.56%)</title><rect x="627.6" y="1973" width="6.6" height="15.0" fill="rgb(227,92,39)" rx="2" ry="2" />
<text  x="630.57" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="661.8" y="1813" width="0.2" height="15.0" fill="rgb(228,35,5)" rx="2" ry="2" />
<text  x="664.78" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1055.0" y="1829" width="0.4" height="15.0" fill="rgb(243,17,45)" rx="2" ry="2" />
<text  x="1057.98" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="903.3" y="1989" width="0.2" height="15.0" fill="rgb(227,125,36)" rx="2" ry="2" />
<text  x="906.25" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="962.0" y="2005" width="0.2" height="15.0" fill="rgb(211,28,10)" rx="2" ry="2" />
<text  x="965.01" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="992.0" y="1861" width="0.2" height="15.0" fill="rgb(252,187,12)" rx="2" ry="2" />
<text  x="994.99" y="1871.5" ></text>
</g>
<g >
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="299.4" y="1781" width="0.2" height="15.0" fill="rgb(253,86,50)" rx="2" ry="2" />
<text  x="302.37" y="1791.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 0.15%)</title><rect x="63.1" y="1957" width="1.8" height="15.0" fill="rgb(210,185,32)" rx="2" ry="2" />
<text  x="66.12" y="1967.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="191.3" y="1877" width="0.2" height="15.0" fill="rgb(212,154,16)" rx="2" ry="2" />
<text  x="194.31" y="1887.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="801.6" y="1349" width="0.2" height="15.0" fill="rgb(245,15,2)" rx="2" ry="2" />
<text  x="804.63" y="1359.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (4 samples, 0.07%)</title><rect x="698.6" y="1925" width="0.8" height="15.0" fill="rgb(217,98,46)" rx="2" ry="2" />
<text  x="701.60" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="616.9" y="1941" width="0.8" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="619.90" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (3 samples, 0.05%)</title><rect x="143.2" y="53" width="0.6" height="15.0" fill="rgb(205,189,16)" rx="2" ry="2" />
<text  x="146.21" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="441.4" y="1877" width="0.4" height="15.0" fill="rgb(221,61,46)" rx="2" ry="2" />
<text  x="444.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="492.3" y="1669" width="0.2" height="15.0" fill="rgb(231,132,46)" rx="2" ry="2" />
<text  x="495.34" y="1679.5" ></text>
</g>
<g >
<title>inet_getname (8 samples, 0.14%)</title><rect x="589.1" y="1861" width="1.6" height="15.0" fill="rgb(210,85,7)" rx="2" ry="2" />
<text  x="592.13" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1 samples, 0.02%)</title><rect x="520.9" y="1973" width="0.2" height="15.0" fill="rgb(228,5,0)" rx="2" ry="2" />
<text  x="523.92" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="861.8" y="1909" width="0.2" height="15.0" fill="rgb(246,104,6)" rx="2" ry="2" />
<text  x="864.80" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runReadyFiber (64 samples, 1.09%)</title><rect x="980.3" y="2005" width="12.9" height="15.0" fill="rgb(250,53,5)" rx="2" ry="2" />
<text  x="983.32" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1072.7" y="1877" width="0.2" height="15.0" fill="rgb(209,62,17)" rx="2" ry="2" />
<text  x="1075.68" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (90 samples, 1.53%)</title><rect x="73.4" y="1989" width="18.1" height="15.0" fill="rgb(232,16,36)" rx="2" ry="2" />
<text  x="76.39" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7 samples, 0.12%)</title><rect x="282.5" y="1525" width="1.4" height="15.0" fill="rgb(250,20,29)" rx="2" ry="2" />
<text  x="285.46" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="307.2" y="1749" width="0.2" height="15.0" fill="rgb(239,171,27)" rx="2" ry="2" />
<text  x="310.21" y="1759.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (1 samples, 0.02%)</title><rect x="237.8" y="1861" width="0.2" height="15.0" fill="rgb(243,127,7)" rx="2" ry="2" />
<text  x="240.79" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1082.1" y="1877" width="0.2" height="15.0" fill="rgb(214,172,9)" rx="2" ry="2" />
<text  x="1085.14" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markAsPending (1 samples, 0.02%)</title><rect x="615.9" y="2005" width="0.2" height="15.0" fill="rgb(217,226,5)" rx="2" ry="2" />
<text  x="618.90" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="245" width="28.0" height="15.0" fill="rgb(231,163,42)" rx="2" ry="2" />
<text  x="127.30" y="255.5" >[..</text>
</g>
<g >
<title>ip_finish_output2 (85 samples, 1.45%)</title><rect x="780.5" y="1605" width="17.1" height="15.0" fill="rgb(210,175,19)" rx="2" ry="2" />
<text  x="783.50" y="1615.5" ></text>
</g>
<g >
<title>free (9 samples, 0.15%)</title><rect x="209.6" y="2021" width="1.8" height="15.0" fill="rgb(241,28,46)" rx="2" ry="2" />
<text  x="212.62" y="2031.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="190.1" y="2021" width="0.2" height="15.0" fill="rgb(211,67,5)" rx="2" ry="2" />
<text  x="193.10" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="968.2" y="1845" width="0.2" height="15.0" fill="rgb(253,84,12)" rx="2" ry="2" />
<text  x="971.25" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="140.2" y="37" width="0.2" height="15.0" fill="rgb(208,42,24)" rx="2" ry="2" />
<text  x="143.19" y="47.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="961.6" y="1957" width="0.2" height="15.0" fill="rgb(237,188,0)" rx="2" ry="2" />
<text  x="964.61" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::isExtern (1 samples, 0.02%)</title><rect x="80.8" y="1925" width="0.2" height="15.0" fill="rgb(226,80,13)" rx="2" ry="2" />
<text  x="83.83" y="1935.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (9 samples, 0.15%)</title><rect x="795.6" y="1541" width="1.8" height="15.0" fill="rgb(252,83,14)" rx="2" ry="2" />
<text  x="798.59" y="1551.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="378.9" y="1845" width="0.2" height="15.0" fill="rgb(234,37,16)" rx="2" ry="2" />
<text  x="381.85" y="1855.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="96.3" y="1941" width="0.2" height="15.0" fill="rgb(232,220,33)" rx="2" ry="2" />
<text  x="99.33" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="721.1" y="1749" width="0.4" height="15.0" fill="rgb(224,145,9)" rx="2" ry="2" />
<text  x="724.14" y="1759.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="533.4" y="2005" width="0.2" height="15.0" fill="rgb(221,121,28)" rx="2" ry="2" />
<text  x="536.39" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="631.4" y="1765" width="0.2" height="15.0" fill="rgb(223,190,26)" rx="2" ry="2" />
<text  x="634.39" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (156 samples, 2.66%)</title><rect x="123.7" y="1781" width="31.4" height="15.0" fill="rgb(254,49,43)" rx="2" ry="2" />
<text  x="126.69" y="1791.5" >[u..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="162.3" y="1941" width="0.2" height="15.0" fill="rgb(225,173,53)" rx="2" ry="2" />
<text  x="165.33" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="888.2" y="1797" width="0.2" height="15.0" fill="rgb(253,97,10)" rx="2" ry="2" />
<text  x="891.16" y="1807.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1149.2" y="1733" width="0.2" height="15.0" fill="rgb(248,13,45)" rx="2" ry="2" />
<text  x="1152.15" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="310.6" y="1717" width="0.2" height="15.0" fill="rgb(252,183,0)" rx="2" ry="2" />
<text  x="313.63" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="649.1" y="2021" width="0.2" height="15.0" fill="rgb(212,0,18)" rx="2" ry="2" />
<text  x="652.10" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="961.6" y="1973" width="0.2" height="15.0" fill="rgb(254,68,13)" rx="2" ry="2" />
<text  x="964.61" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1030.4" y="1941" width="0.2" height="15.0" fill="rgb(234,49,32)" rx="2" ry="2" />
<text  x="1033.43" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="816.5" y="1669" width="0.2" height="15.0" fill="rgb(217,137,8)" rx="2" ry="2" />
<text  x="819.52" y="1679.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1094.2" y="1845" width="0.2" height="15.0" fill="rgb(254,200,36)" rx="2" ry="2" />
<text  x="1097.22" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="831.8" y="1877" width="0.8" height="15.0" fill="rgb(233,217,16)" rx="2" ry="2" />
<text  x="834.81" y="1887.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="187.5" y="1909" width="0.2" height="15.0" fill="rgb(211,192,4)" rx="2" ry="2" />
<text  x="190.48" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::runFibersHelper&lt;folly::fibers::FiberManager::loopUntilNoReadyImpl (1 samples, 0.02%)</title><rect x="187.9" y="1941" width="0.2" height="15.0" fill="rgb(243,88,9)" rx="2" ry="2" />
<text  x="190.89" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1149.2" y="2005" width="0.2" height="15.0" fill="rgb(252,205,29)" rx="2" ry="2" />
<text  x="1152.15" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="143.2" y="37" width="0.2" height="15.0" fill="rgb(244,224,37)" rx="2" ry="2" />
<text  x="146.21" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1170.3" y="2005" width="0.2" height="15.0" fill="rgb(212,211,44)" rx="2" ry="2" />
<text  x="1173.28" y="2015.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="42.4" y="1845" width="0.2" height="15.0" fill="rgb(239,66,9)" rx="2" ry="2" />
<text  x="45.40" y="1855.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="934.4" y="1893" width="0.2" height="15.0" fill="rgb(230,187,28)" rx="2" ry="2" />
<text  x="937.44" y="1903.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="1126.0" y="1973" width="0.2" height="15.0" fill="rgb(228,169,27)" rx="2" ry="2" />
<text  x="1129.01" y="1983.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="372.4" y="1893" width="0.2" height="15.0" fill="rgb(236,51,5)" rx="2" ry="2" />
<text  x="375.41" y="1903.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="27.5" y="1973" width="0.2" height="15.0" fill="rgb(230,202,31)" rx="2" ry="2" />
<text  x="30.51" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="747.3" y="1781" width="0.2" height="15.0" fill="rgb(210,1,32)" rx="2" ry="2" />
<text  x="750.30" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="1164.4" y="1925" width="0.4" height="15.0" fill="rgb(229,181,17)" rx="2" ry="2" />
<text  x="1167.44" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1155.4" y="1717" width="0.2" height="15.0" fill="rgb(206,189,43)" rx="2" ry="2" />
<text  x="1158.39" y="1727.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="13.6" y="1845" width="0.8" height="15.0" fill="rgb(243,168,52)" rx="2" ry="2" />
<text  x="16.62" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="767.4" y="1525" width="0.2" height="15.0" fill="rgb(231,167,36)" rx="2" ry="2" />
<text  x="770.42" y="1535.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="801.6" y="1541" width="0.2" height="15.0" fill="rgb(246,121,39)" rx="2" ry="2" />
<text  x="804.63" y="1551.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (11 samples, 0.19%)</title><rect x="1106.9" y="1925" width="2.2" height="15.0" fill="rgb(238,216,30)" rx="2" ry="2" />
<text  x="1109.89" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="255.1" y="1797" width="0.2" height="15.0" fill="rgb(247,195,27)" rx="2" ry="2" />
<text  x="258.10" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="985.6" y="1909" width="0.2" height="15.0" fill="rgb(247,55,11)" rx="2" ry="2" />
<text  x="988.55" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="99.7" y="1829" width="0.2" height="15.0" fill="rgb(239,59,19)" rx="2" ry="2" />
<text  x="102.75" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1164.6" y="1845" width="0.2" height="15.0" fill="rgb(229,97,18)" rx="2" ry="2" />
<text  x="1167.65" y="1855.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="345.8" y="1893" width="0.3" height="15.0" fill="rgb(254,23,12)" rx="2" ry="2" />
<text  x="348.85" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="89.7" y="1973" width="0.2" height="15.0" fill="rgb(242,77,29)" rx="2" ry="2" />
<text  x="92.69" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="305.4" y="1813" width="0.2" height="15.0" fill="rgb(223,84,37)" rx="2" ry="2" />
<text  x="308.40" y="1823.5" ></text>
</g>
<g >
<title>folly::Try&lt;facebook::memcache::McGetReply&gt;::~Try (1 samples, 0.02%)</title><rect x="975.3" y="2037" width="0.2" height="15.0" fill="rgb(254,32,46)" rx="2" ry="2" />
<text  x="978.29" y="2047.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="572.4" y="1973" width="0.6" height="15.0" fill="rgb(242,168,52)" rx="2" ry="2" />
<text  x="575.43" y="1983.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="463.0" y="1957" width="0.2" height="15.0" fill="rgb(246,209,34)" rx="2" ry="2" />
<text  x="465.96" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="347.5" y="1557" width="0.2" height="15.0" fill="rgb(228,128,45)" rx="2" ry="2" />
<text  x="350.46" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="316.9" y="1941" width="0.2" height="15.0" fill="rgb(224,3,30)" rx="2" ry="2" />
<text  x="319.87" y="1951.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="347.5" y="1493" width="0.2" height="15.0" fill="rgb(248,216,47)" rx="2" ry="2" />
<text  x="350.46" y="1503.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (6 samples, 0.10%)</title><rect x="553.1" y="1973" width="1.2" height="15.0" fill="rgb(236,77,46)" rx="2" ry="2" />
<text  x="556.11" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="920.6" y="1829" width="0.2" height="15.0" fill="rgb(235,178,32)" rx="2" ry="2" />
<text  x="923.56" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="691.6" y="1813" width="0.2" height="15.0" fill="rgb(250,224,29)" rx="2" ry="2" />
<text  x="694.56" y="1823.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="668.0" y="1845" width="0.2" height="15.0" fill="rgb(239,144,8)" rx="2" ry="2" />
<text  x="671.02" y="1855.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="701.8" y="1669" width="0.2" height="15.0" fill="rgb(222,225,31)" rx="2" ry="2" />
<text  x="704.82" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="56.7" y="1701" width="0.2" height="15.0" fill="rgb(220,68,13)" rx="2" ry="2" />
<text  x="59.68" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="862.8" y="1749" width="0.2" height="15.0" fill="rgb(235,110,1)" rx="2" ry="2" />
<text  x="865.80" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="633.2" y="1685" width="0.2" height="15.0" fill="rgb(252,31,38)" rx="2" ry="2" />
<text  x="636.20" y="1695.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="851.1" y="1797" width="0.2" height="15.0" fill="rgb(214,19,15)" rx="2" ry="2" />
<text  x="854.13" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="730.2" y="1541" width="0.2" height="15.0" fill="rgb(227,105,9)" rx="2" ry="2" />
<text  x="733.19" y="1551.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="88.9" y="1813" width="0.2" height="15.0" fill="rgb(230,127,6)" rx="2" ry="2" />
<text  x="91.88" y="1823.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.05%)</title><rect x="491.9" y="1925" width="0.6" height="15.0" fill="rgb(228,26,51)" rx="2" ry="2" />
<text  x="494.94" y="1935.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="588.3" y="1845" width="0.2" height="15.0" fill="rgb(251,57,0)" rx="2" ry="2" />
<text  x="591.33" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1061" width="29.8" height="15.0" fill="rgb(252,151,14)" rx="2" ry="2" />
<text  x="127.10" y="1071.5" >[u..</text>
</g>
<g >
<title>__close (4 samples, 0.07%)</title><rect x="223.9" y="2037" width="0.8" height="15.0" fill="rgb(217,155,31)" rx="2" ry="2" />
<text  x="226.91" y="2047.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="848.3" y="1893" width="0.2" height="15.0" fill="rgb(248,133,44)" rx="2" ry="2" />
<text  x="851.32" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="767.4" y="1477" width="0.2" height="15.0" fill="rgb(254,45,49)" rx="2" ry="2" />
<text  x="770.42" y="1487.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="433.6" y="1525" width="0.2" height="15.0" fill="rgb(236,26,19)" rx="2" ry="2" />
<text  x="436.58" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (5 samples, 0.09%)</title><rect x="144.0" y="37" width="1.0" height="15.0" fill="rgb(243,83,8)" rx="2" ry="2" />
<text  x="147.02" y="47.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (1 samples, 0.02%)</title><rect x="1150.8" y="1973" width="0.2" height="15.0" fill="rgb(211,64,12)" rx="2" ry="2" />
<text  x="1153.76" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="844.1" y="1781" width="0.2" height="15.0" fill="rgb(247,27,24)" rx="2" ry="2" />
<text  x="847.09" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (610 samples, 10.40%)</title><rect x="708.5" y="1877" width="122.7" height="15.0" fill="rgb(216,95,5)" rx="2" ry="2" />
<text  x="711.46" y="1887.5" >do_syscall_64</text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="944.1" y="1941" width="0.2" height="15.0" fill="rgb(227,37,11)" rx="2" ry="2" />
<text  x="947.10" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="907.9" y="1973" width="0.2" height="15.0" fill="rgb(215,97,39)" rx="2" ry="2" />
<text  x="910.88" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="267.0" y="1829" width="0.2" height="15.0" fill="rgb(218,229,37)" rx="2" ry="2" />
<text  x="269.97" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_irq_enable_queues (1 samples, 0.02%)</title><rect x="1119.2" y="1813" width="0.2" height="15.0" fill="rgb(207,156,8)" rx="2" ry="2" />
<text  x="1122.17" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (28 samples, 0.48%)</title><rect x="1100.7" y="1669" width="5.6" height="15.0" fill="rgb(240,69,39)" rx="2" ry="2" />
<text  x="1103.65" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (39 samples, 0.67%)</title><rect x="946.9" y="2005" width="7.9" height="15.0" fill="rgb(244,178,38)" rx="2" ry="2" />
<text  x="949.92" y="2015.5" ></text>
</g>
<g >
<title>inode_init_once (3 samples, 0.05%)</title><rect x="369.2" y="1813" width="0.6" height="15.0" fill="rgb(251,104,17)" rx="2" ry="2" />
<text  x="372.19" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1119.4" y="1765" width="0.2" height="15.0" fill="rgb(230,61,36)" rx="2" ry="2" />
<text  x="1122.37" y="1775.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="100.6" y="1781" width="0.2" height="15.0" fill="rgb(243,131,24)" rx="2" ry="2" />
<text  x="103.55" y="1791.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (3 samples, 0.05%)</title><rect x="237.0" y="1813" width="0.6" height="15.0" fill="rgb(215,146,47)" rx="2" ry="2" />
<text  x="239.98" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="71.0" y="1861" width="0.2" height="15.0" fill="rgb(226,110,38)" rx="2" ry="2" />
<text  x="73.97" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="342.0" y="1541" width="0.2" height="15.0" fill="rgb(220,134,29)" rx="2" ry="2" />
<text  x="345.03" y="1551.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="433.6" y="1541" width="0.2" height="15.0" fill="rgb(213,133,13)" rx="2" ry="2" />
<text  x="436.58" y="1551.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (1 samples, 0.02%)</title><rect x="554.7" y="1829" width="0.2" height="15.0" fill="rgb(236,77,44)" rx="2" ry="2" />
<text  x="557.72" y="1839.5" ></text>
</g>
<g >
<title>clear_inode (2 samples, 0.03%)</title><rect x="731.8" y="1701" width="0.4" height="15.0" fill="rgb(254,84,32)" rx="2" ry="2" />
<text  x="734.80" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="465.2" y="1989" width="0.2" height="15.0" fill="rgb(227,1,28)" rx="2" ry="2" />
<text  x="468.18" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="523.3" y="1845" width="0.2" height="15.0" fill="rgb(235,188,52)" rx="2" ry="2" />
<text  x="526.33" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="609.5" y="1941" width="0.6" height="15.0" fill="rgb(215,46,30)" rx="2" ry="2" />
<text  x="612.46" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::isZeroCopyRequest (1 samples, 0.02%)</title><rect x="880.3" y="1957" width="0.2" height="15.0" fill="rgb(213,135,18)" rx="2" ry="2" />
<text  x="883.31" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="836.6" y="1909" width="0.2" height="15.0" fill="rgb(219,163,17)" rx="2" ry="2" />
<text  x="839.64" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="155.7" y="1877" width="0.2" height="15.0" fill="rgb(248,197,0)" rx="2" ry="2" />
<text  x="158.69" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="563.2" y="1845" width="0.2" height="15.0" fill="rgb(209,145,23)" rx="2" ry="2" />
<text  x="566.18" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="875.5" y="1909" width="0.2" height="15.0" fill="rgb(235,79,43)" rx="2" ry="2" />
<text  x="878.48" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1023.0" y="1765" width="0.2" height="15.0" fill="rgb(246,47,22)" rx="2" ry="2" />
<text  x="1025.98" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (141 samples, 2.40%)</title><rect x="124.3" y="389" width="28.4" height="15.0" fill="rgb(254,15,48)" rx="2" ry="2" />
<text  x="127.30" y="399.5" >[u..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (12 samples, 0.20%)</title><rect x="958.6" y="1989" width="2.4" height="15.0" fill="rgb(247,207,43)" rx="2" ry="2" />
<text  x="961.59" y="1999.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="554.7" y="1893" width="0.2" height="15.0" fill="rgb(238,227,34)" rx="2" ry="2" />
<text  x="557.72" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="949" width="29.8" height="15.0" fill="rgb(223,121,39)" rx="2" ry="2" />
<text  x="127.10" y="959.5" >[u..</text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (4 samples, 0.07%)</title><rect x="93.9" y="1957" width="0.8" height="15.0" fill="rgb(205,91,43)" rx="2" ry="2" />
<text  x="96.91" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="188.3" y="1925" width="0.2" height="15.0" fill="rgb(216,198,10)" rx="2" ry="2" />
<text  x="191.29" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="152.3" y="213" width="0.2" height="15.0" fill="rgb(225,27,28)" rx="2" ry="2" />
<text  x="155.27" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="930.2" y="1941" width="0.2" height="15.0" fill="rgb(221,213,12)" rx="2" ry="2" />
<text  x="933.21" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1109" width="29.8" height="15.0" fill="rgb(236,116,13)" rx="2" ry="2" />
<text  x="127.10" y="1119.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="697.2" y="1989" width="0.8" height="15.0" fill="rgb(232,66,14)" rx="2" ry="2" />
<text  x="700.19" y="1999.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.07%)</title><rect x="815.3" y="1653" width="0.8" height="15.0" fill="rgb(227,69,46)" rx="2" ry="2" />
<text  x="818.31" y="1663.5" ></text>
</g>
<g >
<title>rcu_bh_qs (1 samples, 0.02%)</title><rect x="1054.4" y="1925" width="0.2" height="15.0" fill="rgb(251,90,35)" rx="2" ry="2" />
<text  x="1057.37" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::StackCacheEntry, std::default_delete&lt;folly::fibers::StackCacheEntry&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="19.5" y="1909" width="0.2" height="15.0" fill="rgb(217,73,12)" rx="2" ry="2" />
<text  x="22.46" y="1919.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="114.8" y="1733" width="0.2" height="15.0" fill="rgb(221,1,39)" rx="2" ry="2" />
<text  x="117.84" y="1743.5" ></text>
</g>
<g >
<title>kfree (10 samples, 0.17%)</title><rect x="1103.3" y="1445" width="2.0" height="15.0" fill="rgb(241,6,41)" rx="2" ry="2" />
<text  x="1106.27" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::getRouterOptions (2 samples, 0.03%)</title><rect x="925.8" y="2005" width="0.4" height="15.0" fill="rgb(253,74,19)" rx="2" ry="2" />
<text  x="928.79" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="64.7" y="1781" width="0.2" height="15.0" fill="rgb(217,199,32)" rx="2" ry="2" />
<text  x="67.73" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="151.3" y="101" width="0.2" height="15.0" fill="rgb(231,10,4)" rx="2" ry="2" />
<text  x="154.26" y="111.5" ></text>
</g>
<g >
<title>add_wait_queue (9 samples, 0.15%)</title><rect x="438.4" y="1909" width="1.8" height="15.0" fill="rgb(239,197,5)" rx="2" ry="2" />
<text  x="441.41" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="616.3" y="2021" width="1.4" height="15.0" fill="rgb(218,37,19)" rx="2" ry="2" />
<text  x="619.30" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="916.7" y="1925" width="0.2" height="15.0" fill="rgb(238,112,0)" rx="2" ry="2" />
<text  x="919.73" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1072.7" y="1701" width="0.2" height="15.0" fill="rgb(220,229,0)" rx="2" ry="2" />
<text  x="1075.68" y="1711.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.02%)</title><rect x="744.3" y="1765" width="0.2" height="15.0" fill="rgb(233,57,42)" rx="2" ry="2" />
<text  x="747.28" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="464.0" y="1813" width="0.8" height="15.0" fill="rgb(236,64,26)" rx="2" ry="2" />
<text  x="466.97" y="1823.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="19.7" y="1813" width="0.2" height="15.0" fill="rgb(235,206,47)" rx="2" ry="2" />
<text  x="22.66" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="307.2" y="1621" width="0.2" height="15.0" fill="rgb(218,79,16)" rx="2" ry="2" />
<text  x="310.21" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="691.6" y="1877" width="0.2" height="15.0" fill="rgb(248,109,15)" rx="2" ry="2" />
<text  x="694.56" y="1887.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="749.7" y="1717" width="0.2" height="15.0" fill="rgb(242,71,54)" rx="2" ry="2" />
<text  x="752.71" y="1727.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1174.7" y="1925" width="0.2" height="15.0" fill="rgb(226,67,11)" rx="2" ry="2" />
<text  x="1177.71" y="1935.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="255.1" y="1701" width="0.2" height="15.0" fill="rgb(207,126,30)" rx="2" ry="2" />
<text  x="258.10" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1179.7" y="1989" width="0.2" height="15.0" fill="rgb(215,49,22)" rx="2" ry="2" />
<text  x="1182.74" y="1999.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="941.5" y="1781" width="0.2" height="15.0" fill="rgb(224,51,17)" rx="2" ry="2" />
<text  x="944.48" y="1791.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.03%)</title><rect x="114.0" y="1973" width="0.4" height="15.0" fill="rgb(230,45,12)" rx="2" ry="2" />
<text  x="117.03" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="29.1" y="1957" width="0.4" height="15.0" fill="rgb(226,122,54)" rx="2" ry="2" />
<text  x="32.12" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="238.2" y="1877" width="0.2" height="15.0" fill="rgb(206,149,54)" rx="2" ry="2" />
<text  x="241.19" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="82.2" y="1957" width="0.2" height="15.0" fill="rgb(254,71,13)" rx="2" ry="2" />
<text  x="85.24" y="1967.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.09%)</title><rect x="13.6" y="1925" width="1.0" height="15.0" fill="rgb(238,227,21)" rx="2" ry="2" />
<text  x="16.62" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="523.3" y="1893" width="0.2" height="15.0" fill="rgb(224,170,33)" rx="2" ry="2" />
<text  x="526.33" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="533.2" y="1957" width="0.2" height="15.0" fill="rgb(240,11,35)" rx="2" ry="2" />
<text  x="536.19" y="1967.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (5 samples, 0.09%)</title><rect x="1163.4" y="1909" width="1.0" height="15.0" fill="rgb(221,165,29)" rx="2" ry="2" />
<text  x="1166.44" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="545.3" y="1893" width="0.8" height="15.0" fill="rgb(208,40,8)" rx="2" ry="2" />
<text  x="548.27" y="1903.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="295.9" y="1653" width="0.2" height="15.0" fill="rgb(208,168,26)" rx="2" ry="2" />
<text  x="298.94" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="181" width="28.0" height="15.0" fill="rgb(205,120,46)" rx="2" ry="2" />
<text  x="127.30" y="191.5" >[..</text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="205.0" y="1973" width="0.2" height="15.0" fill="rgb(205,119,9)" rx="2" ry="2" />
<text  x="207.99" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::recordEnd (1 samples, 0.02%)</title><rect x="910.1" y="2037" width="0.2" height="15.0" fill="rgb(213,76,54)" rx="2" ry="2" />
<text  x="913.09" y="2047.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="388.7" y="1941" width="0.2" height="15.0" fill="rgb(206,171,26)" rx="2" ry="2" />
<text  x="391.71" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="464.4" y="1717" width="0.4" height="15.0" fill="rgb(233,75,31)" rx="2" ry="2" />
<text  x="467.37" y="1727.5" ></text>
</g>
<g >
<title>__slab_free (3 samples, 0.05%)</title><rect x="725.8" y="1717" width="0.6" height="15.0" fill="rgb(218,1,48)" rx="2" ry="2" />
<text  x="728.77" y="1727.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="941.5" y="1733" width="0.2" height="15.0" fill="rgb(211,47,6)" rx="2" ry="2" />
<text  x="944.48" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="845.7" y="1813" width="0.2" height="15.0" fill="rgb(226,141,43)" rx="2" ry="2" />
<text  x="848.70" y="1823.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="300.8" y="1829" width="0.2" height="15.0" fill="rgb(243,159,18)" rx="2" ry="2" />
<text  x="303.77" y="1839.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.02%)</title><rect x="1022.6" y="1973" width="0.2" height="15.0" fill="rgb(223,169,34)" rx="2" ry="2" />
<text  x="1025.58" y="1983.5" ></text>
</g>
<g >
<title>sys_close (3 samples, 0.05%)</title><rect x="831.2" y="1877" width="0.6" height="15.0" fill="rgb(205,182,16)" rx="2" ry="2" />
<text  x="834.21" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="71.2" y="1957" width="0.2" height="15.0" fill="rgb(218,109,43)" rx="2" ry="2" />
<text  x="74.17" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="750.1" y="1541" width="0.2" height="15.0" fill="rgb(253,153,12)" rx="2" ry="2" />
<text  x="753.12" y="1551.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="99.7" y="1669" width="0.2" height="15.0" fill="rgb(216,136,10)" rx="2" ry="2" />
<text  x="102.75" y="1679.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="989.4" y="1813" width="0.2" height="15.0" fill="rgb(232,203,27)" rx="2" ry="2" />
<text  x="992.38" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="152.7" y="197" width="0.2" height="15.0" fill="rgb(232,181,43)" rx="2" ry="2" />
<text  x="155.67" y="207.5" ></text>
</g>
<g >
<title>tcp_recvmsg (250 samples, 4.26%)</title><rect x="1059.2" y="1941" width="50.3" height="15.0" fill="rgb(227,113,49)" rx="2" ry="2" />
<text  x="1062.20" y="1951.5" >tcp_r..</text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="451.3" y="1877" width="0.2" height="15.0" fill="rgb(238,153,53)" rx="2" ry="2" />
<text  x="454.29" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="862.8" y="1893" width="0.2" height="15.0" fill="rgb(252,191,32)" rx="2" ry="2" />
<text  x="865.80" y="1903.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="858.4" y="1957" width="0.2" height="15.0" fill="rgb(224,35,26)" rx="2" ry="2" />
<text  x="861.38" y="1967.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="535.0" y="1941" width="0.2" height="15.0" fill="rgb(215,222,5)" rx="2" ry="2" />
<text  x="538.00" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (4 samples, 0.07%)</title><rect x="517.1" y="1941" width="0.8" height="15.0" fill="rgb(211,210,40)" rx="2" ry="2" />
<text  x="520.09" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="602.8" y="1845" width="0.4" height="15.0" fill="rgb(252,110,16)" rx="2" ry="2" />
<text  x="605.82" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="342.0" y="1605" width="0.2" height="15.0" fill="rgb(208,203,54)" rx="2" ry="2" />
<text  x="345.03" y="1615.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9 samples, 0.15%)</title><rect x="944.5" y="1973" width="1.8" height="15.0" fill="rgb(209,201,21)" rx="2" ry="2" />
<text  x="947.50" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="914.9" y="1973" width="1.4" height="15.0" fill="rgb(218,190,24)" rx="2" ry="2" />
<text  x="917.92" y="1983.5" ></text>
</g>
<g >
<title>std::addressof&lt;folly::IOBuf::freeExtBuffer (3 samples, 0.05%)</title><rect x="1173.1" y="1973" width="0.6" height="15.0" fill="rgb(220,135,23)" rx="2" ry="2" />
<text  x="1176.10" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1100.5" y="1685" width="0.2" height="15.0" fill="rgb(213,6,11)" rx="2" ry="2" />
<text  x="1103.45" y="1695.5" ></text>
</g>
<g >
<title>ep_send_events_proc (108 samples, 1.84%)</title><rect x="470.8" y="1941" width="21.7" height="15.0" fill="rgb(217,180,51)" rx="2" ry="2" />
<text  x="473.81" y="1951.5" >e..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1168.7" y="1877" width="0.2" height="15.0" fill="rgb(214,102,47)" rx="2" ry="2" />
<text  x="1171.67" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="190.1" y="1973" width="0.2" height="15.0" fill="rgb(225,177,24)" rx="2" ry="2" />
<text  x="193.10" y="1983.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5 samples, 0.09%)</title><rect x="1093.0" y="1893" width="1.0" height="15.0" fill="rgb(248,124,36)" rx="2" ry="2" />
<text  x="1096.01" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="644.9" y="1957" width="0.4" height="15.0" fill="rgb(226,37,2)" rx="2" ry="2" />
<text  x="647.87" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1058.2" y="1813" width="0.2" height="15.0" fill="rgb(234,182,28)" rx="2" ry="2" />
<text  x="1061.20" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="233.0" y="1749" width="0.2" height="15.0" fill="rgb(207,127,8)" rx="2" ry="2" />
<text  x="235.96" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.4" y="1941" width="0.2" height="15.0" fill="rgb(230,183,11)" rx="2" ry="2" />
<text  x="890.35" y="1951.5" ></text>
</g>
<g >
<title>sys_close (39 samples, 0.67%)</title><rect x="823.4" y="1861" width="7.8" height="15.0" fill="rgb(238,124,20)" rx="2" ry="2" />
<text  x="826.36" y="1871.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1094.2" y="1861" width="0.2" height="15.0" fill="rgb(213,33,3)" rx="2" ry="2" />
<text  x="1097.22" y="1871.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.02%)</title><rect x="1072.5" y="1797" width="0.2" height="15.0" fill="rgb(213,9,28)" rx="2" ry="2" />
<text  x="1075.48" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::empty (6 samples, 0.10%)</title><rect x="37.6" y="1957" width="1.2" height="15.0" fill="rgb(216,5,18)" rx="2" ry="2" />
<text  x="40.57" y="1967.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (1 samples, 0.02%)</title><rect x="528.2" y="1973" width="0.2" height="15.0" fill="rgb(209,43,1)" rx="2" ry="2" />
<text  x="531.16" y="1983.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="652.1" y="1989" width="0.2" height="15.0" fill="rgb(219,160,7)" rx="2" ry="2" />
<text  x="655.12" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="943.7" y="1957" width="0.6" height="15.0" fill="rgb(215,228,28)" rx="2" ry="2" />
<text  x="946.70" y="1967.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="258.9" y="1893" width="0.2" height="15.0" fill="rgb(249,68,40)" rx="2" ry="2" />
<text  x="261.92" y="1903.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="265.2" y="1541" width="0.2" height="15.0" fill="rgb(221,107,53)" rx="2" ry="2" />
<text  x="268.16" y="1551.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="384.1" y="1861" width="0.2" height="15.0" fill="rgb(247,164,54)" rx="2" ry="2" />
<text  x="387.08" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.12%)</title><rect x="383.7" y="1893" width="1.4" height="15.0" fill="rgb(240,223,48)" rx="2" ry="2" />
<text  x="386.68" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="862.8" y="1653" width="0.2" height="15.0" fill="rgb(237,66,3)" rx="2" ry="2" />
<text  x="865.80" y="1663.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="440.6" y="1861" width="0.2" height="15.0" fill="rgb(213,47,43)" rx="2" ry="2" />
<text  x="443.63" y="1871.5" ></text>
</g>
<g >
<title>std::current_exception (1 samples, 0.02%)</title><rect x="188.1" y="1941" width="0.2" height="15.0" fill="rgb(221,108,22)" rx="2" ry="2" />
<text  x="191.09" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18 samples, 0.31%)</title><rect x="465.4" y="2021" width="3.6" height="15.0" fill="rgb(242,52,0)" rx="2" ry="2" />
<text  x="468.38" y="2031.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="89.1" y="1877" width="0.2" height="15.0" fill="rgb(217,82,6)" rx="2" ry="2" />
<text  x="92.08" y="1887.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="523.3" y="1781" width="0.2" height="15.0" fill="rgb(217,33,29)" rx="2" ry="2" />
<text  x="526.33" y="1791.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="433.0" y="1973" width="0.2" height="15.0" fill="rgb(239,48,45)" rx="2" ry="2" />
<text  x="435.98" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1170.3" y="1909" width="0.2" height="15.0" fill="rgb(208,39,0)" rx="2" ry="2" />
<text  x="1173.28" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="491.7" y="1861" width="0.2" height="15.0" fill="rgb(239,191,54)" rx="2" ry="2" />
<text  x="494.74" y="1871.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="1058.2" y="1717" width="0.2" height="15.0" fill="rgb(253,167,7)" rx="2" ry="2" />
<text  x="1061.20" y="1727.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="191.3" y="1909" width="0.2" height="15.0" fill="rgb(243,195,48)" rx="2" ry="2" />
<text  x="194.31" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="345.8" y="1653" width="0.3" height="15.0" fill="rgb(213,62,4)" rx="2" ry="2" />
<text  x="348.85" y="1663.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.03%)</title><rect x="283.3" y="1493" width="0.4" height="15.0" fill="rgb(240,165,35)" rx="2" ry="2" />
<text  x="286.27" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="99.7" y="1749" width="0.2" height="15.0" fill="rgb(222,95,35)" rx="2" ry="2" />
<text  x="102.75" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="213" width="28.0" height="15.0" fill="rgb(211,149,12)" rx="2" ry="2" />
<text  x="127.30" y="223.5" >[..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="778.5" y="1365" width="0.2" height="15.0" fill="rgb(210,42,33)" rx="2" ry="2" />
<text  x="781.49" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (145 samples, 2.47%)</title><rect x="124.1" y="709" width="29.2" height="15.0" fill="rgb(250,134,30)" rx="2" ry="2" />
<text  x="127.10" y="719.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="299.6" y="1733" width="0.2" height="15.0" fill="rgb(231,53,12)" rx="2" ry="2" />
<text  x="302.57" y="1743.5" ></text>
</g>
<g >
<title>__internal_add_timer (3 samples, 0.05%)</title><rect x="808.7" y="1605" width="0.6" height="15.0" fill="rgb(244,39,8)" rx="2" ry="2" />
<text  x="811.67" y="1615.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (4 samples, 0.07%)</title><rect x="786.1" y="1525" width="0.8" height="15.0" fill="rgb(215,197,33)" rx="2" ry="2" />
<text  x="789.14" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="926.2" y="2021" width="0.6" height="15.0" fill="rgb(213,10,22)" rx="2" ry="2" />
<text  x="929.19" y="2031.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="237.6" y="1845" width="0.2" height="15.0" fill="rgb(213,4,12)" rx="2" ry="2" />
<text  x="240.59" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="1126.0" y="2021" width="1.2" height="15.0" fill="rgb(230,117,46)" rx="2" ry="2" />
<text  x="1129.01" y="2031.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (2 samples, 0.03%)</title><rect x="62.1" y="1957" width="0.4" height="15.0" fill="rgb(241,203,6)" rx="2" ry="2" />
<text  x="65.12" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="312.4" y="1877" width="0.2" height="15.0" fill="rgb(219,147,0)" rx="2" ry="2" />
<text  x="315.45" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (136 samples, 2.32%)</title><rect x="124.3" y="133" width="27.4" height="15.0" fill="rgb(223,226,21)" rx="2" ry="2" />
<text  x="127.30" y="143.5" >[..</text>
</g>
<g >
<title>___sys_sendmsg (2 samples, 0.03%)</title><rect x="253.3" y="1973" width="0.4" height="15.0" fill="rgb(208,225,23)" rx="2" ry="2" />
<text  x="256.28" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="928.4" y="1973" width="0.2" height="15.0" fill="rgb(238,105,48)" rx="2" ry="2" />
<text  x="931.40" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="441.8" y="1941" width="0.6" height="15.0" fill="rgb(251,27,38)" rx="2" ry="2" />
<text  x="444.83" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="887.4" y="1733" width="0.2" height="15.0" fill="rgb(234,2,11)" rx="2" ry="2" />
<text  x="890.35" y="1743.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (31 samples, 0.53%)</title><rect x="1173.7" y="2053" width="6.2" height="15.0" fill="rgb(224,189,6)" rx="2" ry="2" />
<text  x="1176.70" y="2063.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="633.2" y="1637" width="0.2" height="15.0" fill="rgb(229,155,4)" rx="2" ry="2" />
<text  x="636.20" y="1647.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="433.6" y="1669" width="0.2" height="15.0" fill="rgb(222,107,35)" rx="2" ry="2" />
<text  x="436.58" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="916.9" y="1845" width="0.2" height="15.0" fill="rgb(225,152,25)" rx="2" ry="2" />
<text  x="919.93" y="1855.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="65.1" y="1669" width="0.2" height="15.0" fill="rgb(240,209,21)" rx="2" ry="2" />
<text  x="68.14" y="1679.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="957.8" y="2005" width="0.2" height="15.0" fill="rgb(248,151,6)" rx="2" ry="2" />
<text  x="960.78" y="2015.5" ></text>
</g>
<g >
<title>ip_output (31 samples, 0.53%)</title><rect x="1100.5" y="1829" width="6.2" height="15.0" fill="rgb(243,78,39)" rx="2" ry="2" />
<text  x="1103.45" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="651.1" y="1909" width="0.2" height="15.0" fill="rgb(242,34,51)" rx="2" ry="2" />
<text  x="654.11" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="266.0" y="1861" width="0.4" height="15.0" fill="rgb(223,27,1)" rx="2" ry="2" />
<text  x="268.96" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19 samples, 0.32%)</title><rect x="1122.2" y="2037" width="3.8" height="15.0" fill="rgb(217,222,19)" rx="2" ry="2" />
<text  x="1125.19" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="747.1" y="1765" width="0.2" height="15.0" fill="rgb(221,149,52)" rx="2" ry="2" />
<text  x="750.10" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1072.7" y="1733" width="0.2" height="15.0" fill="rgb(222,146,25)" rx="2" ry="2" />
<text  x="1075.68" y="1743.5" ></text>
</g>
<g >
<title>__libc_sendmsg (1 samples, 0.02%)</title><rect x="160.5" y="2005" width="0.2" height="15.0" fill="rgb(240,141,34)" rx="2" ry="2" />
<text  x="163.52" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="324.1" y="1957" width="0.2" height="15.0" fill="rgb(246,213,35)" rx="2" ry="2" />
<text  x="327.12" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="731.6" y="1685" width="0.2" height="15.0" fill="rgb(214,152,53)" rx="2" ry="2" />
<text  x="734.60" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (167 samples, 2.85%)</title><rect x="123.1" y="1973" width="33.6" height="15.0" fill="rgb(212,215,36)" rx="2" ry="2" />
<text  x="126.09" y="1983.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (3 samples, 0.05%)</title><rect x="649.5" y="2037" width="0.6" height="15.0" fill="rgb(252,165,8)" rx="2" ry="2" />
<text  x="652.50" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="928.4" y="1957" width="0.2" height="15.0" fill="rgb(215,44,15)" rx="2" ry="2" />
<text  x="931.40" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1164.4" y="1893" width="0.4" height="15.0" fill="rgb(219,17,35)" rx="2" ry="2" />
<text  x="1167.44" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="907.5" y="1941" width="0.2" height="15.0" fill="rgb(218,165,46)" rx="2" ry="2" />
<text  x="910.48" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="182.7" y="1877" width="0.6" height="15.0" fill="rgb(227,146,54)" rx="2" ry="2" />
<text  x="185.65" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="407.8" y="1957" width="0.2" height="15.0" fill="rgb(238,192,18)" rx="2" ry="2" />
<text  x="410.83" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="205.8" y="1957" width="0.2" height="15.0" fill="rgb(209,224,6)" rx="2" ry="2" />
<text  x="208.79" y="1967.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::run (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(239,190,18)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="920.6" y="1909" width="0.2" height="15.0" fill="rgb(231,211,9)" rx="2" ry="2" />
<text  x="923.56" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="916.7" y="1861" width="0.2" height="15.0" fill="rgb(254,201,9)" rx="2" ry="2" />
<text  x="919.73" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="579.7" y="1957" width="0.2" height="15.0" fill="rgb(232,195,35)" rx="2" ry="2" />
<text  x="582.68" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.10%)</title><rect x="200.0" y="1989" width="1.2" height="15.0" fill="rgb(241,31,45)" rx="2" ry="2" />
<text  x="202.96" y="1999.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.02%)</title><rect x="379.3" y="1909" width="0.2" height="15.0" fill="rgb(247,142,28)" rx="2" ry="2" />
<text  x="382.25" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::sendmsg (1 samples, 0.02%)</title><rect x="884.7" y="1925" width="0.2" height="15.0" fill="rgb(235,158,9)" rx="2" ry="2" />
<text  x="887.74" y="1935.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="592.2" y="1813" width="0.4" height="15.0" fill="rgb(242,8,28)" rx="2" ry="2" />
<text  x="595.15" y="1823.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12 samples, 0.20%)</title><rect x="383.1" y="1909" width="2.4" height="15.0" fill="rgb(212,48,48)" rx="2" ry="2" />
<text  x="386.08" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="238.0" y="1813" width="0.2" height="15.0" fill="rgb(226,57,7)" rx="2" ry="2" />
<text  x="240.99" y="1823.5" ></text>
</g>
<g >
<title>__fget_light (16 samples, 0.27%)</title><rect x="313.0" y="1925" width="3.3" height="15.0" fill="rgb(237,43,13)" rx="2" ry="2" />
<text  x="316.05" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="741.5" y="1685" width="0.6" height="15.0" fill="rgb(207,204,45)" rx="2" ry="2" />
<text  x="744.46" y="1695.5" ></text>
</g>
<g >
<title>import_iovec (8 samples, 0.14%)</title><rect x="255.7" y="1925" width="1.6" height="15.0" fill="rgb(236,15,25)" rx="2" ry="2" />
<text  x="258.70" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="992.0" y="1893" width="0.2" height="15.0" fill="rgb(208,212,14)" rx="2" ry="2" />
<text  x="994.99" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::hasReadBuffer (13 samples, 0.22%)</title><rect x="610.7" y="2037" width="2.6" height="15.0" fill="rgb(217,128,6)" rx="2" ry="2" />
<text  x="613.67" y="2047.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="441.0" y="1637" width="0.2" height="15.0" fill="rgb(246,187,49)" rx="2" ry="2" />
<text  x="444.03" y="1647.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="207.4" y="1925" width="0.2" height="15.0" fill="rgb(244,68,6)" rx="2" ry="2" />
<text  x="210.40" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="801.6" y="1445" width="0.2" height="15.0" fill="rgb(211,116,12)" rx="2" ry="2" />
<text  x="804.63" y="1455.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::prepareImpl (2 samples, 0.03%)</title><rect x="978.3" y="2005" width="0.4" height="15.0" fill="rgb(216,211,37)" rx="2" ry="2" />
<text  x="981.31" y="2015.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="797.6" y="1605" width="0.2" height="15.0" fill="rgb(236,126,54)" rx="2" ry="2" />
<text  x="800.61" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1149.2" y="1989" width="0.2" height="15.0" fill="rgb(225,185,25)" rx="2" ry="2" />
<text  x="1152.15" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="233.0" y="1653" width="0.2" height="15.0" fill="rgb(245,177,30)" rx="2" ry="2" />
<text  x="235.96" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (1 samples, 0.02%)</title><rect x="1167.1" y="2053" width="0.2" height="15.0" fill="rgb(210,226,36)" rx="2" ry="2" />
<text  x="1170.06" y="2063.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="433.6" y="1557" width="0.2" height="15.0" fill="rgb(242,6,46)" rx="2" ry="2" />
<text  x="436.58" y="1567.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="615.5" y="1973" width="0.2" height="15.0" fill="rgb(215,222,47)" rx="2" ry="2" />
<text  x="618.49" y="1983.5" ></text>
</g>
<g >
<title>__slab_free (4 samples, 0.07%)</title><rect x="749.1" y="1765" width="0.8" height="15.0" fill="rgb(234,59,35)" rx="2" ry="2" />
<text  x="752.11" y="1775.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="191.3" y="2005" width="0.2" height="15.0" fill="rgb(218,206,13)" rx="2" ry="2" />
<text  x="194.31" y="2015.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9 samples, 0.15%)</title><rect x="761.6" y="1685" width="1.8" height="15.0" fill="rgb(234,70,3)" rx="2" ry="2" />
<text  x="764.59" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="965" width="29.8" height="15.0" fill="rgb(225,185,52)" rx="2" ry="2" />
<text  x="127.10" y="975.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="858.2" y="1893" width="0.2" height="15.0" fill="rgb(214,190,25)" rx="2" ry="2" />
<text  x="861.18" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (5 samples, 0.09%)</title><rect x="1181.7" y="2053" width="1.1" height="15.0" fill="rgb(252,187,24)" rx="2" ry="2" />
<text  x="1184.75" y="2063.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.12%)</title><rect x="460.3" y="1957" width="1.5" height="15.0" fill="rgb(220,129,1)" rx="2" ry="2" />
<text  x="463.35" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="82.6" y="1957" width="0.2" height="15.0" fill="rgb(244,162,18)" rx="2" ry="2" />
<text  x="85.64" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="182.0" y="1893" width="0.3" height="15.0" fill="rgb(214,140,43)" rx="2" ry="2" />
<text  x="185.05" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="1087.6" y="1797" width="0.6" height="15.0" fill="rgb(239,110,4)" rx="2" ry="2" />
<text  x="1090.58" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1058.2" y="1941" width="0.2" height="15.0" fill="rgb(207,154,27)" rx="2" ry="2" />
<text  x="1061.20" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="312.4" y="1781" width="0.2" height="15.0" fill="rgb(205,63,10)" rx="2" ry="2" />
<text  x="315.45" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="176.6" y="1845" width="0.2" height="15.0" fill="rgb(251,223,9)" rx="2" ry="2" />
<text  x="179.62" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="899.6" y="1973" width="0.2" height="15.0" fill="rgb(249,211,6)" rx="2" ry="2" />
<text  x="902.63" y="1983.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="362.6" y="1637" width="0.2" height="15.0" fill="rgb(245,28,54)" rx="2" ry="2" />
<text  x="365.55" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="887.4" y="1749" width="0.2" height="15.0" fill="rgb(242,71,45)" rx="2" ry="2" />
<text  x="890.35" y="1759.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (76 samples, 1.30%)</title><rect x="580.1" y="1973" width="15.3" height="15.0" fill="rgb(240,71,40)" rx="2" ry="2" />
<text  x="583.08" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="491.7" y="1685" width="0.2" height="15.0" fill="rgb(220,45,46)" rx="2" ry="2" />
<text  x="494.74" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1086.8" y="1893" width="0.2" height="15.0" fill="rgb(244,70,44)" rx="2" ry="2" />
<text  x="1089.77" y="1903.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (8 samples, 0.14%)</title><rect x="1144.7" y="2021" width="1.6" height="15.0" fill="rgb(220,209,3)" rx="2" ry="2" />
<text  x="1147.72" y="2031.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="156.1" y="1909" width="0.2" height="15.0" fill="rgb(225,16,43)" rx="2" ry="2" />
<text  x="159.09" y="1919.5" ></text>
</g>
<g >
<title>event_add_nolock_ (1 samples, 0.02%)</title><rect x="158.5" y="1989" width="0.2" height="15.0" fill="rgb(230,32,49)" rx="2" ry="2" />
<text  x="161.51" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1155.4" y="1909" width="0.2" height="15.0" fill="rgb(238,96,21)" rx="2" ry="2" />
<text  x="1158.39" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="305.4" y="1733" width="0.2" height="15.0" fill="rgb(241,14,2)" rx="2" ry="2" />
<text  x="308.40" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="310.6" y="1845" width="0.2" height="15.0" fill="rgb(209,205,30)" rx="2" ry="2" />
<text  x="313.63" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (6 samples, 0.10%)</title><rect x="864.8" y="1957" width="1.2" height="15.0" fill="rgb(218,60,32)" rx="2" ry="2" />
<text  x="867.82" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::operator+&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7 samples, 0.12%)</title><rect x="530.0" y="1989" width="1.4" height="15.0" fill="rgb(207,69,53)" rx="2" ry="2" />
<text  x="532.97" y="1999.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="726.2" y="1701" width="0.2" height="15.0" fill="rgb(253,101,26)" rx="2" ry="2" />
<text  x="729.17" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="672.4" y="1877" width="0.2" height="15.0" fill="rgb(205,173,1)" rx="2" ry="2" />
<text  x="675.44" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (2 samples, 0.03%)</title><rect x="84.7" y="1909" width="0.4" height="15.0" fill="rgb(205,55,11)" rx="2" ry="2" />
<text  x="87.66" y="1919.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="930.4" y="1669" width="0.2" height="15.0" fill="rgb(233,187,39)" rx="2" ry="2" />
<text  x="933.42" y="1679.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="1054.8" y="1941" width="0.6" height="15.0" fill="rgb(211,3,45)" rx="2" ry="2" />
<text  x="1057.77" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="840.9" y="1429" width="0.2" height="15.0" fill="rgb(216,69,10)" rx="2" ry="2" />
<text  x="843.87" y="1439.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="1054.6" y="1925" width="0.2" height="15.0" fill="rgb(254,73,25)" rx="2" ry="2" />
<text  x="1057.57" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="907.7" y="1925" width="0.2" height="15.0" fill="rgb(235,72,49)" rx="2" ry="2" />
<text  x="910.68" y="1935.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="795.4" y="1413" width="0.2" height="15.0" fill="rgb(244,66,20)" rx="2" ry="2" />
<text  x="798.39" y="1423.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="535.8" y="1845" width="0.2" height="15.0" fill="rgb(211,212,13)" rx="2" ry="2" />
<text  x="538.81" y="1855.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (13 samples, 0.22%)</title><rect x="846.1" y="1925" width="2.6" height="15.0" fill="rgb(220,59,9)" rx="2" ry="2" />
<text  x="849.10" y="1935.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="721.3" y="1493" width="0.2" height="15.0" fill="rgb(254,20,9)" rx="2" ry="2" />
<text  x="724.34" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="1087.6" y="1893" width="0.6" height="15.0" fill="rgb(221,213,51)" rx="2" ry="2" />
<text  x="1090.58" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="230.5" y="1669" width="0.2" height="15.0" fill="rgb(253,82,29)" rx="2" ry="2" />
<text  x="233.55" y="1679.5" ></text>
</g>
<g >
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="12.4" y="1957" width="0.2" height="15.0" fill="rgb(247,179,54)" rx="2" ry="2" />
<text  x="15.41" y="1967.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (17 samples, 0.29%)</title><rect x="718.1" y="1797" width="3.4" height="15.0" fill="rgb(239,53,35)" rx="2" ry="2" />
<text  x="721.12" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::size (6 samples, 0.10%)</title><rect x="37.6" y="1941" width="1.2" height="15.0" fill="rgb(248,70,1)" rx="2" ry="2" />
<text  x="40.57" y="1951.5" ></text>
</g>
<g >
<title>rcu_advance_cbs (1 samples, 0.02%)</title><rect x="554.7" y="1861" width="0.2" height="15.0" fill="rgb(253,34,22)" rx="2" ry="2" />
<text  x="557.72" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerImpl (24 samples, 0.41%)</title><rect x="233.4" y="1893" width="4.8" height="15.0" fill="rgb(229,117,33)" rx="2" ry="2" />
<text  x="236.36" y="1903.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="342.0" y="1589" width="0.2" height="15.0" fill="rgb(210,171,45)" rx="2" ry="2" />
<text  x="345.03" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4 samples, 0.07%)</title><rect x="1175.7" y="1989" width="0.8" height="15.0" fill="rgb(227,229,45)" rx="2" ry="2" />
<text  x="1178.71" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::loopOnce (78 samples, 1.33%)</title><rect x="172.8" y="1973" width="15.7" height="15.0" fill="rgb(244,178,15)" rx="2" ry="2" />
<text  x="175.79" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1573" width="30.4" height="15.0" fill="rgb(234,165,1)" rx="2" ry="2" />
<text  x="127.10" y="1583.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (2 samples, 0.03%)</title><rect x="954.8" y="2005" width="0.4" height="15.0" fill="rgb(244,148,28)" rx="2" ry="2" />
<text  x="957.76" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="701.8" y="1845" width="0.2" height="15.0" fill="rgb(234,14,50)" rx="2" ry="2" />
<text  x="704.82" y="1855.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="12.6" y="1909" width="0.8" height="15.0" fill="rgb(213,83,1)" rx="2" ry="2" />
<text  x="15.62" y="1919.5" ></text>
</g>
<g >
<title>ip_route_output_flow (1 samples, 0.02%)</title><rect x="730.2" y="1349" width="0.2" height="15.0" fill="rgb(205,34,49)" rx="2" ry="2" />
<text  x="733.19" y="1359.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="224.7" y="2005" width="0.2" height="15.0" fill="rgb(230,187,52)" rx="2" ry="2" />
<text  x="227.71" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::~Proxy (3 samples, 0.05%)</title><rect x="925.6" y="2037" width="0.6" height="15.0" fill="rgb(220,221,16)" rx="2" ry="2" />
<text  x="928.59" y="2047.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="815.3" y="1589" width="0.8" height="15.0" fill="rgb(230,176,31)" rx="2" ry="2" />
<text  x="818.31" y="1599.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1163.2" y="1877" width="0.2" height="15.0" fill="rgb(247,135,12)" rx="2" ry="2" />
<text  x="1166.24" y="1887.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="347.5" y="1589" width="0.2" height="15.0" fill="rgb(219,94,17)" rx="2" ry="2" />
<text  x="350.46" y="1599.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="902.0" y="1989" width="0.2" height="15.0" fill="rgb(245,77,13)" rx="2" ry="2" />
<text  x="905.04" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="800.8" y="1621" width="0.4" height="15.0" fill="rgb(225,28,37)" rx="2" ry="2" />
<text  x="803.83" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::~ConnectionTracker (15 samples, 0.26%)</title><rect x="607.4" y="2037" width="3.1" height="15.0" fill="rgb(214,52,2)" rx="2" ry="2" />
<text  x="610.45" y="2047.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="441.4" y="1557" width="0.2" height="15.0" fill="rgb(222,196,47)" rx="2" ry="2" />
<text  x="444.43" y="1567.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="1057.4" y="1973" width="0.4" height="15.0" fill="rgb(210,173,19)" rx="2" ry="2" />
<text  x="1060.39" y="1983.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (3 samples, 0.05%)</title><rect x="214.4" y="2037" width="0.7" height="15.0" fill="rgb(228,204,19)" rx="2" ry="2" />
<text  x="217.45" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (4 samples, 0.07%)</title><rect x="1128.8" y="2037" width="0.8" height="15.0" fill="rgb(207,192,50)" rx="2" ry="2" />
<text  x="1131.83" y="2047.5" ></text>
</g>
<g >
<title>ip_local_out (91 samples, 1.55%)</title><rect x="279.2" y="1797" width="18.4" height="15.0" fill="rgb(217,7,16)" rx="2" ry="2" />
<text  x="282.24" y="1807.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (4 samples, 0.07%)</title><rect x="658.4" y="1989" width="0.8" height="15.0" fill="rgb(212,168,46)" rx="2" ry="2" />
<text  x="661.36" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::init (24 samples, 0.41%)</title><rect x="549.5" y="2005" width="4.8" height="15.0" fill="rgb(229,91,28)" rx="2" ry="2" />
<text  x="552.49" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::~ReadResult (16 samples, 0.27%)</title><rect x="41.6" y="1973" width="3.2" height="15.0" fill="rgb(242,41,37)" rx="2" ry="2" />
<text  x="44.59" y="1983.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (237 samples, 4.04%)</title><rect x="767.6" y="1717" width="47.7" height="15.0" fill="rgb(206,73,30)" rx="2" ry="2" />
<text  x="770.62" y="1727.5" >__tc..</text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::~AcceptCallback (5 samples, 0.09%)</title><rect x="905.1" y="2037" width="1.0" height="15.0" fill="rgb(232,143,10)" rx="2" ry="2" />
<text  x="908.06" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="115.0" y="1797" width="0.4" height="15.0" fill="rgb(245,182,29)" rx="2" ry="2" />
<text  x="118.04" y="1807.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="156.9" y="1973" width="0.2" height="15.0" fill="rgb(209,217,32)" rx="2" ry="2" />
<text  x="159.90" y="1983.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (86 samples, 1.47%)</title><rect x="492.9" y="1829" width="17.4" height="15.0" fill="rgb(206,129,38)" rx="2" ry="2" />
<text  x="495.95" y="1839.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (4 samples, 0.07%)</title><rect x="532.2" y="1989" width="0.8" height="15.0" fill="rgb(252,54,34)" rx="2" ry="2" />
<text  x="535.19" y="1999.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="317.3" y="1893" width="0.8" height="15.0" fill="rgb(225,20,42)" rx="2" ry="2" />
<text  x="320.27" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="707.5" y="1893" width="0.2" height="15.0" fill="rgb(221,159,25)" rx="2" ry="2" />
<text  x="710.46" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="567.2" y="1893" width="0.2" height="15.0" fill="rgb(242,35,44)" rx="2" ry="2" />
<text  x="570.20" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="882.9" y="1877" width="0.4" height="15.0" fill="rgb(251,55,25)" rx="2" ry="2" />
<text  x="885.93" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="491.7" y="1749" width="0.2" height="15.0" fill="rgb(245,102,51)" rx="2" ry="2" />
<text  x="494.74" y="1759.5" ></text>
</g>
<g >
<title>__check_object_size (3 samples, 0.05%)</title><rect x="256.1" y="1893" width="0.6" height="15.0" fill="rgb(250,100,7)" rx="2" ry="2" />
<text  x="259.10" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="554.9" y="1973" width="0.2" height="15.0" fill="rgb(219,42,21)" rx="2" ry="2" />
<text  x="557.92" y="1983.5" ></text>
</g>
<g >
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1101.5" y="1493" width="0.6" height="15.0" fill="rgb(251,81,15)" rx="2" ry="2" />
<text  x="1104.46" y="1503.5" ></text>
</g>
<g >
<title>sch_direct_xmit (52 samples, 0.89%)</title><rect x="786.9" y="1557" width="10.5" height="15.0" fill="rgb(244,164,1)" rx="2" ry="2" />
<text  x="789.94" y="1567.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="316.9" y="1957" width="0.2" height="15.0" fill="rgb(216,53,28)" rx="2" ry="2" />
<text  x="319.87" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8 samples, 0.14%)</title><rect x="1176.9" y="1989" width="1.6" height="15.0" fill="rgb(209,194,12)" rx="2" ry="2" />
<text  x="1179.92" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="812.5" y="1557" width="0.2" height="15.0" fill="rgb(225,142,2)" rx="2" ry="2" />
<text  x="815.50" y="1567.5" ></text>
</g>
<g >
<title>sys_access (1 samples, 0.02%)</title><rect x="12.2" y="2005" width="0.2" height="15.0" fill="rgb(229,187,50)" rx="2" ry="2" />
<text  x="15.21" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="850.9" y="1861" width="0.4" height="15.0" fill="rgb(251,216,21)" rx="2" ry="2" />
<text  x="853.93" y="1871.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1150.6" y="1973" width="0.2" height="15.0" fill="rgb(213,95,47)" rx="2" ry="2" />
<text  x="1153.56" y="1983.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="243.6" y="1957" width="0.4" height="15.0" fill="rgb(222,64,31)" rx="2" ry="2" />
<text  x="246.63" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="615.1" y="1989" width="0.6" height="15.0" fill="rgb(241,61,18)" rx="2" ry="2" />
<text  x="618.09" y="1999.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1653" width="0.2" height="15.0" fill="rgb(221,153,51)" rx="2" ry="2" />
<text  x="906.25" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (97 samples, 1.65%)</title><rect x="224.7" y="2037" width="19.5" height="15.0" fill="rgb(252,195,13)" rx="2" ry="2" />
<text  x="227.71" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="860.2" y="1925" width="0.2" height="15.0" fill="rgb(233,196,17)" rx="2" ry="2" />
<text  x="863.19" y="1935.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="454.7" y="1573" width="0.2" height="15.0" fill="rgb(224,114,26)" rx="2" ry="2" />
<text  x="457.71" y="1583.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="204.4" y="1957" width="0.2" height="15.0" fill="rgb(228,185,26)" rx="2" ry="2" />
<text  x="207.39" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="819.3" y="1701" width="0.2" height="15.0" fill="rgb(239,86,54)" rx="2" ry="2" />
<text  x="822.34" y="1711.5" ></text>
</g>
<g >
<title>validate_xmit_skb (6 samples, 0.10%)</title><rect x="296.1" y="1669" width="1.3" height="15.0" fill="rgb(232,195,6)" rx="2" ry="2" />
<text  x="299.15" y="1679.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.05%)</title><rect x="369.2" y="1845" width="0.6" height="15.0" fill="rgb(253,226,39)" rx="2" ry="2" />
<text  x="372.19" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::iterator_core_access::advance&lt;folly::BitIterator&lt;unsigned long*&gt; &gt; (1 samples, 0.02%)</title><rect x="527.2" y="1941" width="0.2" height="15.0" fill="rgb(223,217,42)" rx="2" ry="2" />
<text  x="530.16" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (17 samples, 0.29%)</title><rect x="220.5" y="2037" width="3.4" height="15.0" fill="rgb(236,138,20)" rx="2" ry="2" />
<text  x="223.48" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1509" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="345.03" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="841.7" y="1861" width="0.2" height="15.0" fill="rgb(222,115,54)" rx="2" ry="2" />
<text  x="844.67" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="233.0" y="1845" width="0.2" height="15.0" fill="rgb(254,67,19)" rx="2" ry="2" />
<text  x="235.96" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="486.3" y="1861" width="0.6" height="15.0" fill="rgb(219,57,13)" rx="2" ry="2" />
<text  x="489.31" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="491.7" y="1781" width="0.2" height="15.0" fill="rgb(211,130,8)" rx="2" ry="2" />
<text  x="494.74" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="740.7" y="1381" width="0.2" height="15.0" fill="rgb(208,187,29)" rx="2" ry="2" />
<text  x="743.66" y="1391.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::processGetServiceInfoRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; (1 samples, 0.02%)</title><rect x="1170.5" y="2053" width="0.2" height="15.0" fill="rgb(233,22,16)" rx="2" ry="2" />
<text  x="1173.48" y="2063.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="631.6" y="1781" width="0.2" height="15.0" fill="rgb(224,193,6)" rx="2" ry="2" />
<text  x="634.59" y="1791.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="64.7" y="1877" width="0.2" height="15.0" fill="rgb(245,110,49)" rx="2" ry="2" />
<text  x="67.73" y="1887.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="516.9" y="1925" width="0.2" height="15.0" fill="rgb(229,74,19)" rx="2" ry="2" />
<text  x="519.89" y="1935.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="169.0" y="1957" width="0.4" height="15.0" fill="rgb(249,7,26)" rx="2" ry="2" />
<text  x="171.97" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1148.7" y="1909" width="0.2" height="15.0" fill="rgb(208,103,47)" rx="2" ry="2" />
<text  x="1151.75" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="145.0" y="37" width="0.2" height="15.0" fill="rgb(238,27,8)" rx="2" ry="2" />
<text  x="148.02" y="47.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="433.6" y="1829" width="0.2" height="15.0" fill="rgb(237,96,16)" rx="2" ry="2" />
<text  x="436.58" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1072.7" y="1781" width="0.2" height="15.0" fill="rgb(225,132,14)" rx="2" ry="2" />
<text  x="1075.68" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="54.5" y="1749" width="0.2" height="15.0" fill="rgb(209,94,29)" rx="2" ry="2" />
<text  x="57.47" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="454.3" y="1925" width="0.6" height="15.0" fill="rgb(218,103,51)" rx="2" ry="2" />
<text  x="457.31" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (2 samples, 0.03%)</title><rect x="791.4" y="1509" width="0.4" height="15.0" fill="rgb(247,165,27)" rx="2" ry="2" />
<text  x="794.37" y="1519.5" ></text>
</g>
<g >
<title>finish_task_switch (91 samples, 1.55%)</title><rect x="492.5" y="1893" width="18.4" height="15.0" fill="rgb(244,60,48)" rx="2" ry="2" />
<text  x="495.54" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="844.1" y="1813" width="0.2" height="15.0" fill="rgb(237,171,8)" rx="2" ry="2" />
<text  x="847.09" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3 samples, 0.05%)</title><rect x="1142.1" y="2021" width="0.6" height="15.0" fill="rgb(230,195,48)" rx="2" ry="2" />
<text  x="1145.11" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="152.7" y="117" width="0.2" height="15.0" fill="rgb(213,19,4)" rx="2" ry="2" />
<text  x="155.67" y="127.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="510.7" y="1669" width="0.2" height="15.0" fill="rgb(207,109,40)" rx="2" ry="2" />
<text  x="513.65" y="1679.5" ></text>
</g>
<g >
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="816.1" y="1717" width="0.4" height="15.0" fill="rgb(233,214,19)" rx="2" ry="2" />
<text  x="819.12" y="1727.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="633.4" y="1893" width="0.2" height="15.0" fill="rgb(228,195,19)" rx="2" ry="2" />
<text  x="636.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="342.0" y="1637" width="0.2" height="15.0" fill="rgb(229,199,4)" rx="2" ry="2" />
<text  x="345.03" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (1 samples, 0.02%)</title><rect x="86.7" y="1925" width="0.2" height="15.0" fill="rgb(217,0,38)" rx="2" ry="2" />
<text  x="89.67" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (10 samples, 0.17%)</title><rect x="85.3" y="1957" width="2.0" height="15.0" fill="rgb(238,186,23)" rx="2" ry="2" />
<text  x="88.26" y="1967.5" ></text>
</g>
<g >
<title>destroy_inode (43 samples, 0.73%)</title><rect x="732.2" y="1701" width="8.7" height="15.0" fill="rgb(237,132,5)" rx="2" ry="2" />
<text  x="735.21" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (20 samples, 0.34%)</title><rect x="91.9" y="1973" width="4.0" height="15.0" fill="rgb(213,122,43)" rx="2" ry="2" />
<text  x="94.90" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1058.2" y="1957" width="0.2" height="15.0" fill="rgb(234,9,22)" rx="2" ry="2" />
<text  x="1061.20" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::EventBase::LoopCallback*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="178.4" y="1877" width="0.2" height="15.0" fill="rgb(218,74,8)" rx="2" ry="2" />
<text  x="181.43" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="860.2" y="1973" width="0.2" height="15.0" fill="rgb(207,143,53)" rx="2" ry="2" />
<text  x="863.19" y="1983.5" ></text>
</g>
<g >
<title>evmap_io_add_ (2 samples, 0.03%)</title><rect x="191.5" y="2021" width="0.4" height="15.0" fill="rgb(228,74,45)" rx="2" ry="2" />
<text  x="194.51" y="2031.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="205.8" y="1877" width="0.2" height="15.0" fill="rgb(254,114,54)" rx="2" ry="2" />
<text  x="208.79" y="1887.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="366.4" y="1893" width="0.2" height="15.0" fill="rgb(219,84,14)" rx="2" ry="2" />
<text  x="369.37" y="1903.5" ></text>
</g>
<g >
<title>__GI___strcmp_ssse3 (6 samples, 0.10%)</title><rect x="968.4" y="2005" width="1.3" height="15.0" fill="rgb(242,191,22)" rx="2" ry="2" />
<text  x="971.45" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="114.8" y="1941" width="0.8" height="15.0" fill="rgb(253,88,41)" rx="2" ry="2" />
<text  x="117.84" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (3 samples, 0.05%)</title><rect x="1173.1" y="2053" width="0.6" height="15.0" fill="rgb(225,139,36)" rx="2" ry="2" />
<text  x="1176.10" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::onReply (1 samples, 0.02%)</title><rect x="623.5" y="2005" width="0.2" height="15.0" fill="rgb(206,40,40)" rx="2" ry="2" />
<text  x="626.54" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="1087.6" y="1717" width="0.6" height="15.0" fill="rgb(226,127,15)" rx="2" ry="2" />
<text  x="1090.58" y="1727.5" ></text>
</g>
<g >
<title>__check_object_size (4 samples, 0.07%)</title><rect x="354.1" y="1941" width="0.8" height="15.0" fill="rgb(206,212,51)" rx="2" ry="2" />
<text  x="357.10" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="257.5" y="1941" width="0.2" height="15.0" fill="rgb(208,11,12)" rx="2" ry="2" />
<text  x="260.51" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="899.4" y="1781" width="0.2" height="15.0" fill="rgb(226,65,39)" rx="2" ry="2" />
<text  x="902.43" y="1791.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="860.2" y="1893" width="0.2" height="15.0" fill="rgb(215,51,7)" rx="2" ry="2" />
<text  x="863.19" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="454.7" y="1733" width="0.2" height="15.0" fill="rgb(247,37,5)" rx="2" ry="2" />
<text  x="457.71" y="1743.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="253.1" y="1925" width="0.2" height="15.0" fill="rgb(245,40,16)" rx="2" ry="2" />
<text  x="256.08" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (23 samples, 0.39%)</title><rect x="880.5" y="1957" width="4.6" height="15.0" fill="rgb(229,103,44)" rx="2" ry="2" />
<text  x="883.51" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="698.6" y="1861" width="0.8" height="15.0" fill="rgb(222,131,22)" rx="2" ry="2" />
<text  x="701.60" y="1871.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="815.3" y="1573" width="0.8" height="15.0" fill="rgb(249,203,3)" rx="2" ry="2" />
<text  x="818.31" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="345.8" y="1685" width="0.3" height="15.0" fill="rgb(220,162,39)" rx="2" ry="2" />
<text  x="348.85" y="1695.5" ></text>
</g>
<g >
<title>folly::EventBase::getExecutionObserver (2 samples, 0.03%)</title><rect x="99.9" y="2021" width="0.5" height="15.0" fill="rgb(236,151,37)" rx="2" ry="2" />
<text  x="102.95" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="197.5" y="1989" width="0.2" height="15.0" fill="rgb(245,8,0)" rx="2" ry="2" />
<text  x="200.54" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="238.0" y="1781" width="0.2" height="15.0" fill="rgb(250,17,30)" rx="2" ry="2" />
<text  x="240.99" y="1791.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="961.2" y="2021" width="0.2" height="15.0" fill="rgb(237,191,36)" rx="2" ry="2" />
<text  x="964.20" y="2031.5" ></text>
</g>
<g >
<title>d_set_d_op (2 samples, 0.03%)</title><rect x="382.7" y="1909" width="0.4" height="15.0" fill="rgb(251,55,46)" rx="2" ry="2" />
<text  x="385.67" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="721.3" y="1381" width="0.2" height="15.0" fill="rgb(247,123,45)" rx="2" ry="2" />
<text  x="724.34" y="1391.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="1167.1" y="1989" width="0.2" height="15.0" fill="rgb(231,148,8)" rx="2" ry="2" />
<text  x="1170.06" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::(anonymous namespace)::localThreadId (1 samples, 0.02%)</title><rect x="1150.6" y="1989" width="0.2" height="15.0" fill="rgb(236,54,18)" rx="2" ry="2" />
<text  x="1153.56" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (5 samples, 0.09%)</title><rect x="616.7" y="1989" width="1.0" height="15.0" fill="rgb(217,195,21)" rx="2" ry="2" />
<text  x="619.70" y="1999.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (158 samples, 2.69%)</title><rect x="273.8" y="1861" width="31.8" height="15.0" fill="rgb(220,98,8)" rx="2" ry="2" />
<text  x="276.81" y="1871.5" >__..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1152.2" y="2021" width="0.2" height="15.0" fill="rgb(229,25,10)" rx="2" ry="2" />
<text  x="1155.17" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="281.9" y="1653" width="0.4" height="15.0" fill="rgb(246,61,10)" rx="2" ry="2" />
<text  x="284.86" y="1663.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1082.1" y="1813" width="0.2" height="15.0" fill="rgb(233,76,27)" rx="2" ry="2" />
<text  x="1085.14" y="1823.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="972.1" y="2005" width="0.2" height="15.0" fill="rgb(208,145,32)" rx="2" ry="2" />
<text  x="975.07" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (2 samples, 0.03%)</title><rect x="1148.5" y="2037" width="0.4" height="15.0" fill="rgb(210,97,51)" rx="2" ry="2" />
<text  x="1151.55" y="2047.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="19.3" y="1957" width="0.2" height="15.0" fill="rgb(215,97,10)" rx="2" ry="2" />
<text  x="22.26" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="838.7" y="1909" width="0.6" height="15.0" fill="rgb(242,68,30)" rx="2" ry="2" />
<text  x="841.66" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="114.8" y="1813" width="0.6" height="15.0" fill="rgb(240,159,41)" rx="2" ry="2" />
<text  x="117.84" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="265.2" y="1621" width="0.2" height="15.0" fill="rgb(226,226,19)" rx="2" ry="2" />
<text  x="268.16" y="1631.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (3 samples, 0.05%)</title><rect x="318.1" y="2021" width="0.6" height="15.0" fill="rgb(224,6,19)" rx="2" ry="2" />
<text  x="321.08" y="2031.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="162.3" y="1925" width="0.2" height="15.0" fill="rgb(234,177,50)" rx="2" ry="2" />
<text  x="165.33" y="1935.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="170.2" y="1973" width="0.2" height="15.0" fill="rgb(230,211,16)" rx="2" ry="2" />
<text  x="173.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (162 samples, 2.76%)</title><rect x="123.1" y="1893" width="32.6" height="15.0" fill="rgb(231,41,42)" rx="2" ry="2" />
<text  x="126.09" y="1903.5" >[u..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="316.1" y="1669" width="0.2" height="15.0" fill="rgb(209,168,26)" rx="2" ry="2" />
<text  x="319.07" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="185.1" y="1861" width="0.2" height="15.0" fill="rgb(229,157,15)" rx="2" ry="2" />
<text  x="188.07" y="1871.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="919.8" y="1957" width="0.2" height="15.0" fill="rgb(229,11,2)" rx="2" ry="2" />
<text  x="922.75" y="1967.5" ></text>
</g>
<g >
<title>dst_release (11 samples, 0.19%)</title><rect x="1079.9" y="1877" width="2.2" height="15.0" fill="rgb(215,27,22)" rx="2" ry="2" />
<text  x="1082.93" y="1887.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="256.5" y="1829" width="0.2" height="15.0" fill="rgb(205,79,45)" rx="2" ry="2" />
<text  x="259.50" y="1839.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="299.6" y="1701" width="0.2" height="15.0" fill="rgb(249,134,26)" rx="2" ry="2" />
<text  x="302.57" y="1711.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="13.8" y="1829" width="0.6" height="15.0" fill="rgb(240,70,6)" rx="2" ry="2" />
<text  x="16.82" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="778.5" y="1461" width="0.2" height="15.0" fill="rgb(222,158,16)" rx="2" ry="2" />
<text  x="781.49" y="1471.5" ></text>
</g>
<g >
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="691.6" y="1749" width="0.2" height="15.0" fill="rgb(247,84,32)" rx="2" ry="2" />
<text  x="694.56" y="1759.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="749.7" y="1733" width="0.2" height="15.0" fill="rgb(232,175,26)" rx="2" ry="2" />
<text  x="752.71" y="1743.5" ></text>
</g>
<g >
<title>tcp_write_xmit (157 samples, 2.68%)</title><rect x="274.0" y="1845" width="31.6" height="15.0" fill="rgb(250,46,8)" rx="2" ry="2" />
<text  x="277.01" y="1855.5" >tc..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1149.2" y="1909" width="0.2" height="15.0" fill="rgb(245,76,18)" rx="2" ry="2" />
<text  x="1152.15" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (2 samples, 0.03%)</title><rect x="850.9" y="1877" width="0.4" height="15.0" fill="rgb(233,194,21)" rx="2" ry="2" />
<text  x="853.93" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1141.1" y="2021" width="0.4" height="15.0" fill="rgb(206,0,3)" rx="2" ry="2" />
<text  x="1144.10" y="2031.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="899.0" y="1957" width="0.2" height="15.0" fill="rgb(206,91,44)" rx="2" ry="2" />
<text  x="902.02" y="1967.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="115.4" y="1845" width="0.2" height="15.0" fill="rgb(215,102,14)" rx="2" ry="2" />
<text  x="118.44" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="916.9" y="1685" width="0.2" height="15.0" fill="rgb(228,186,10)" rx="2" ry="2" />
<text  x="919.93" y="1695.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1149.2" y="1685" width="0.2" height="15.0" fill="rgb(230,5,22)" rx="2" ry="2" />
<text  x="1152.15" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="441.4" y="1909" width="0.4" height="15.0" fill="rgb(208,117,7)" rx="2" ry="2" />
<text  x="444.43" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::OperationSelectorRoute&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;::route (3 samples, 0.05%)</title><rect x="621.1" y="2005" width="0.6" height="15.0" fill="rgb(215,210,0)" rx="2" ry="2" />
<text  x="624.13" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (1 samples, 0.02%)</title><rect x="907.9" y="1989" width="0.2" height="15.0" fill="rgb(242,206,29)" rx="2" ry="2" />
<text  x="910.88" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="312.4" y="1925" width="0.2" height="15.0" fill="rgb(236,150,36)" rx="2" ry="2" />
<text  x="315.45" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="980.1" y="1973" width="0.2" height="15.0" fill="rgb(212,220,27)" rx="2" ry="2" />
<text  x="983.12" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="71.4" y="1893" width="0.2" height="15.0" fill="rgb(214,132,10)" rx="2" ry="2" />
<text  x="74.37" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="916.9" y="1893" width="0.2" height="15.0" fill="rgb(252,19,39)" rx="2" ry="2" />
<text  x="919.93" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="962.2" y="1989" width="0.2" height="15.0" fill="rgb(224,198,0)" rx="2" ry="2" />
<text  x="965.21" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="152.7" y="213" width="0.2" height="15.0" fill="rgb(242,33,35)" rx="2" ry="2" />
<text  x="155.67" y="223.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (8 samples, 0.14%)</title><rect x="165.8" y="1941" width="1.6" height="15.0" fill="rgb(216,169,2)" rx="2" ry="2" />
<text  x="168.75" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="441.0" y="1733" width="0.2" height="15.0" fill="rgb(208,22,4)" rx="2" ry="2" />
<text  x="444.03" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::invokeConnectErr (3 samples, 0.05%)</title><rect x="967.6" y="2037" width="0.6" height="15.0" fill="rgb(237,44,0)" rx="2" ry="2" />
<text  x="970.64" y="2047.5" ></text>
</g>
<g >
<title>tcp_current_mss (14 samples, 0.24%)</title><rect x="307.4" y="1861" width="2.8" height="15.0" fill="rgb(217,153,10)" rx="2" ry="2" />
<text  x="310.41" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="115.0" y="1733" width="0.2" height="15.0" fill="rgb(215,108,5)" rx="2" ry="2" />
<text  x="118.04" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::McServerSession (6 samples, 0.10%)</title><rect x="650.1" y="1989" width="1.2" height="15.0" fill="rgb(239,88,29)" rx="2" ry="2" />
<text  x="653.11" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="464.0" y="1749" width="0.8" height="15.0" fill="rgb(219,177,18)" rx="2" ry="2" />
<text  x="466.97" y="1759.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="240.6" y="1797" width="0.2" height="15.0" fill="rgb(252,222,15)" rx="2" ry="2" />
<text  x="243.61" y="1807.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="19.7" y="1877" width="0.2" height="15.0" fill="rgb(214,131,48)" rx="2" ry="2" />
<text  x="22.66" y="1887.5" ></text>
</g>
<g >
<title>inet_reqsk_alloc (1 samples, 0.02%)</title><rect x="202.0" y="1653" width="0.2" height="15.0" fill="rgb(242,202,52)" rx="2" ry="2" />
<text  x="204.97" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="83.9" y="1941" width="0.4" height="15.0" fill="rgb(243,201,15)" rx="2" ry="2" />
<text  x="86.85" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="347.5" y="1797" width="0.2" height="15.0" fill="rgb(208,202,30)" rx="2" ry="2" />
<text  x="350.46" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="934.2" y="1893" width="0.2" height="15.0" fill="rgb(215,160,27)" rx="2" ry="2" />
<text  x="937.24" y="1903.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="625.6" y="1973" width="0.6" height="15.0" fill="rgb(236,200,7)" rx="2" ry="2" />
<text  x="628.56" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="691.6" y="1909" width="0.2" height="15.0" fill="rgb(252,145,46)" rx="2" ry="2" />
<text  x="694.56" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::~WriteTimeout (14 samples, 0.24%)</title><rect x="76.2" y="1957" width="2.8" height="15.0" fill="rgb(205,208,52)" rx="2" ry="2" />
<text  x="79.20" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="800.8" y="1589" width="0.4" height="15.0" fill="rgb(243,0,29)" rx="2" ry="2" />
<text  x="803.83" y="1599.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="841.7" y="1781" width="0.2" height="15.0" fill="rgb(232,54,15)" rx="2" ry="2" />
<text  x="844.67" y="1791.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="631.6" y="1797" width="0.2" height="15.0" fill="rgb(205,150,29)" rx="2" ry="2" />
<text  x="634.59" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="464.0" y="1909" width="0.8" height="15.0" fill="rgb(206,130,6)" rx="2" ry="2" />
<text  x="466.97" y="1919.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="669.4" y="1845" width="0.2" height="15.0" fill="rgb(246,164,31)" rx="2" ry="2" />
<text  x="672.42" y="1855.5" ></text>
</g>
<g >
<title>__init_rwsem (1 samples, 0.02%)</title><rect x="365.0" y="1893" width="0.2" height="15.0" fill="rgb(224,35,21)" rx="2" ry="2" />
<text  x="367.97" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="162.3" y="1973" width="0.4" height="15.0" fill="rgb(247,186,23)" rx="2" ry="2" />
<text  x="165.33" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="510.3" y="1845" width="0.2" height="15.0" fill="rgb(209,180,42)" rx="2" ry="2" />
<text  x="513.25" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1181.1" y="1845" width="0.2" height="15.0" fill="rgb(212,111,8)" rx="2" ry="2" />
<text  x="1184.15" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (4 samples, 0.07%)</title><rect x="93.1" y="1957" width="0.8" height="15.0" fill="rgb(212,58,52)" rx="2" ry="2" />
<text  x="96.11" y="1967.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="464.4" y="1701" width="0.2" height="15.0" fill="rgb(221,46,46)" rx="2" ry="2" />
<text  x="467.37" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="19.1" y="1941" width="0.2" height="15.0" fill="rgb(230,114,16)" rx="2" ry="2" />
<text  x="22.06" y="1951.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="454.1" y="1845" width="0.2" height="15.0" fill="rgb(214,47,10)" rx="2" ry="2" />
<text  x="457.11" y="1855.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="189.9" y="2021" width="0.2" height="15.0" fill="rgb(215,54,43)" rx="2" ry="2" />
<text  x="192.90" y="2031.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="604.8" y="1925" width="0.2" height="15.0" fill="rgb(232,58,51)" rx="2" ry="2" />
<text  x="607.83" y="1935.5" ></text>
</g>
<g >
<title>ip_queue_xmit (32 samples, 0.55%)</title><rect x="1100.5" y="1861" width="6.4" height="15.0" fill="rgb(236,76,22)" rx="2" ry="2" />
<text  x="1103.45" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="840.9" y="1861" width="0.2" height="15.0" fill="rgb(214,153,7)" rx="2" ry="2" />
<text  x="843.87" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="152.3" y="101" width="0.2" height="15.0" fill="rgb(223,62,16)" rx="2" ry="2" />
<text  x="155.27" y="111.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="840.9" y="1653" width="0.2" height="15.0" fill="rgb(216,83,3)" rx="2" ry="2" />
<text  x="843.87" y="1663.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="747.7" y="1781" width="0.2" height="15.0" fill="rgb(225,193,54)" rx="2" ry="2" />
<text  x="750.70" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="783.3" y="1333" width="0.2" height="15.0" fill="rgb(254,62,25)" rx="2" ry="2" />
<text  x="786.32" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="945.1" y="1925" width="0.2" height="15.0" fill="rgb(217,164,17)" rx="2" ry="2" />
<text  x="948.11" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1168.7" y="1989" width="0.2" height="15.0" fill="rgb(252,122,2)" rx="2" ry="2" />
<text  x="1171.67" y="1999.5" ></text>
</g>
<g >
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="297.0" y="1637" width="0.2" height="15.0" fill="rgb(237,178,6)" rx="2" ry="2" />
<text  x="299.95" y="1647.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="180.8" y="1845" width="0.2" height="15.0" fill="rgb(213,137,16)" rx="2" ry="2" />
<text  x="183.84" y="1855.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="388.3" y="1669" width="0.2" height="15.0" fill="rgb(254,97,9)" rx="2" ry="2" />
<text  x="391.31" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="921.2" y="2005" width="0.2" height="15.0" fill="rgb(229,65,11)" rx="2" ry="2" />
<text  x="924.16" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="946.7" y="1989" width="0.2" height="15.0" fill="rgb(213,182,49)" rx="2" ry="2" />
<text  x="949.72" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="935.4" y="1925" width="0.2" height="15.0" fill="rgb(238,89,22)" rx="2" ry="2" />
<text  x="938.45" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="433.8" y="1909" width="0.2" height="15.0" fill="rgb(241,75,33)" rx="2" ry="2" />
<text  x="436.79" y="1919.5" ></text>
</g>
<g >
<title>tcp_setsockopt (19 samples, 0.32%)</title><rect x="682.5" y="1909" width="3.8" height="15.0" fill="rgb(251,229,15)" rx="2" ry="2" />
<text  x="685.50" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="486.7" y="1653" width="0.2" height="15.0" fill="rgb(206,15,36)" rx="2" ry="2" />
<text  x="489.71" y="1663.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.09%)</title><rect x="609.1" y="1989" width="1.0" height="15.0" fill="rgb(225,147,27)" rx="2" ry="2" />
<text  x="612.06" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="211.8" y="2021" width="0.2" height="15.0" fill="rgb(230,146,25)" rx="2" ry="2" />
<text  x="214.83" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="563.2" y="1829" width="0.2" height="15.0" fill="rgb(229,109,8)" rx="2" ry="2" />
<text  x="566.18" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1164.6" y="1765" width="0.2" height="15.0" fill="rgb(238,194,23)" rx="2" ry="2" />
<text  x="1167.65" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="928.4" y="1941" width="0.2" height="15.0" fill="rgb(244,1,34)" rx="2" ry="2" />
<text  x="931.40" y="1951.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="963.2" y="1973" width="0.2" height="15.0" fill="rgb(254,60,4)" rx="2" ry="2" />
<text  x="966.22" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (4 samples, 0.07%)</title><rect x="939.5" y="1893" width="0.8" height="15.0" fill="rgb(208,1,16)" rx="2" ry="2" />
<text  x="942.47" y="1903.5" ></text>
</g>
<g >
<title>prefetch_freepointer (6 samples, 0.10%)</title><rect x="370.4" y="1877" width="1.2" height="15.0" fill="rgb(244,18,40)" rx="2" ry="2" />
<text  x="373.40" y="1887.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="324.3" y="1957" width="0.2" height="15.0" fill="rgb(221,171,31)" rx="2" ry="2" />
<text  x="327.32" y="1967.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="685.9" y="1877" width="0.4" height="15.0" fill="rgb(232,55,50)" rx="2" ry="2" />
<text  x="688.92" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="992.0" y="1829" width="0.2" height="15.0" fill="rgb(249,185,19)" rx="2" ry="2" />
<text  x="994.99" y="1839.5" ></text>
</g>
<g >
<title>alloc_file (45 samples, 0.77%)</title><rect x="372.8" y="1941" width="9.1" height="15.0" fill="rgb(238,73,20)" rx="2" ry="2" />
<text  x="375.81" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="486.3" y="1877" width="0.6" height="15.0" fill="rgb(227,149,42)" rx="2" ry="2" />
<text  x="489.31" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.4" y="1877" width="0.2" height="15.0" fill="rgb(234,22,39)" rx="2" ry="2" />
<text  x="348.45" y="1887.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="153.1" y="677" width="0.2" height="15.0" fill="rgb(227,85,11)" rx="2" ry="2" />
<text  x="156.07" y="687.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="955.8" y="1909" width="0.2" height="15.0" fill="rgb(227,98,29)" rx="2" ry="2" />
<text  x="958.77" y="1919.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="204.6" y="1941" width="0.2" height="15.0" fill="rgb(236,73,16)" rx="2" ry="2" />
<text  x="207.59" y="1951.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="1126.8" y="1973" width="0.4" height="15.0" fill="rgb(206,195,13)" rx="2" ry="2" />
<text  x="1129.81" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="13.4" y="2037" width="0.2" height="15.0" fill="rgb(237,62,51)" rx="2" ry="2" />
<text  x="16.42" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="800.8" y="1477" width="0.4" height="15.0" fill="rgb(248,111,8)" rx="2" ry="2" />
<text  x="803.83" y="1487.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="756.2" y="1733" width="0.2" height="15.0" fill="rgb(209,202,18)" rx="2" ry="2" />
<text  x="759.15" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::cancelTimeout (3 samples, 0.05%)</title><rect x="76.4" y="1925" width="0.6" height="15.0" fill="rgb(212,163,53)" rx="2" ry="2" />
<text  x="79.41" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="903.3" y="1925" width="0.2" height="15.0" fill="rgb(246,170,21)" rx="2" ry="2" />
<text  x="906.25" y="1935.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (91 samples, 1.55%)</title><rect x="492.5" y="1957" width="18.4" height="15.0" fill="rgb(207,137,26)" rx="2" ry="2" />
<text  x="495.54" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="747.7" y="1685" width="0.2" height="15.0" fill="rgb(230,66,8)" rx="2" ry="2" />
<text  x="750.70" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="441.4" y="1925" width="0.4" height="15.0" fill="rgb(231,124,30)" rx="2" ry="2" />
<text  x="444.43" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="201.0" y="1973" width="0.2" height="15.0" fill="rgb(234,46,16)" rx="2" ry="2" />
<text  x="203.97" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="916.9" y="1765" width="0.2" height="15.0" fill="rgb(209,71,9)" rx="2" ry="2" />
<text  x="919.93" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="54.5" y="1893" width="0.2" height="15.0" fill="rgb(254,195,51)" rx="2" ry="2" />
<text  x="57.47" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="149.5" y="69" width="1.4" height="15.0" fill="rgb(227,41,6)" rx="2" ry="2" />
<text  x="152.45" y="79.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="12.6" y="1957" width="0.8" height="15.0" fill="rgb(214,0,27)" rx="2" ry="2" />
<text  x="15.62" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1022.8" y="1973" width="0.6" height="15.0" fill="rgb(230,225,34)" rx="2" ry="2" />
<text  x="1025.78" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="78.6" y="1909" width="0.2" height="15.0" fill="rgb(225,1,40)" rx="2" ry="2" />
<text  x="81.62" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (1 samples, 0.02%)</title><rect x="909.1" y="2005" width="0.2" height="15.0" fill="rgb(213,212,3)" rx="2" ry="2" />
<text  x="912.09" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="732.0" y="1685" width="0.2" height="15.0" fill="rgb(252,55,27)" rx="2" ry="2" />
<text  x="735.01" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="238.0" y="1653" width="0.2" height="15.0" fill="rgb(248,51,31)" rx="2" ry="2" />
<text  x="240.99" y="1663.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1058.6" y="1957" width="0.2" height="15.0" fill="rgb(254,23,5)" rx="2" ry="2" />
<text  x="1061.60" y="1967.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="1096.2" y="1765" width="0.2" height="15.0" fill="rgb(238,84,33)" rx="2" ry="2" />
<text  x="1099.23" y="1775.5" ></text>
</g>
<g >
<title>skb_release_data (26 samples, 0.44%)</title><rect x="1073.7" y="1893" width="5.2" height="15.0" fill="rgb(216,18,38)" rx="2" ry="2" />
<text  x="1076.69" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="887.4" y="1877" width="0.2" height="15.0" fill="rgb(213,63,4)" rx="2" ry="2" />
<text  x="890.35" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="888.2" y="1781" width="0.2" height="15.0" fill="rgb(221,68,20)" rx="2" ry="2" />
<text  x="891.16" y="1791.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="28.3" y="1989" width="1.2" height="15.0" fill="rgb(212,71,45)" rx="2" ry="2" />
<text  x="31.31" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::~shared_ptr (3 samples, 0.05%)</title><rect x="838.7" y="1925" width="0.6" height="15.0" fill="rgb(234,41,12)" rx="2" ry="2" />
<text  x="841.66" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (204 samples, 3.48%)</title><rect x="469.8" y="2005" width="41.1" height="15.0" fill="rgb(207,179,11)" rx="2" ry="2" />
<text  x="472.81" y="2015.5" >do_..</text>
</g>
<g >
<title>__GI___getsockname (8 samples, 0.14%)</title><rect x="218.9" y="2037" width="1.6" height="15.0" fill="rgb(220,40,5)" rx="2" ry="2" />
<text  x="221.87" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="310.6" y="1893" width="0.2" height="15.0" fill="rgb(228,158,50)" rx="2" ry="2" />
<text  x="313.63" y="1903.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="815.3" y="1701" width="0.8" height="15.0" fill="rgb(207,206,24)" rx="2" ry="2" />
<text  x="818.31" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="310.6" y="1701" width="0.2" height="15.0" fill="rgb(237,38,11)" rx="2" ry="2" />
<text  x="313.63" y="1711.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="844.1" y="1557" width="0.2" height="15.0" fill="rgb(228,136,16)" rx="2" ry="2" />
<text  x="847.09" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="441.0" y="1653" width="0.2" height="15.0" fill="rgb(208,212,17)" rx="2" ry="2" />
<text  x="444.03" y="1663.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="19.3" y="1909" width="0.2" height="15.0" fill="rgb(220,105,10)" rx="2" ry="2" />
<text  x="22.26" y="1919.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (2 samples, 0.03%)</title><rect x="530.8" y="1957" width="0.4" height="15.0" fill="rgb(253,6,27)" rx="2" ry="2" />
<text  x="533.78" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="345.8" y="1765" width="0.3" height="15.0" fill="rgb(247,186,22)" rx="2" ry="2" />
<text  x="348.85" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="447.9" y="1941" width="0.2" height="15.0" fill="rgb(230,113,37)" rx="2" ry="2" />
<text  x="450.87" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="858.2" y="1909" width="0.2" height="15.0" fill="rgb(238,131,39)" rx="2" ry="2" />
<text  x="861.18" y="1919.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="81.8" y="1829" width="0.2" height="15.0" fill="rgb(249,179,41)" rx="2" ry="2" />
<text  x="84.84" y="1839.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="272.4" y="1701" width="0.2" height="15.0" fill="rgb(250,11,36)" rx="2" ry="2" />
<text  x="275.40" y="1711.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="407.8" y="1733" width="0.2" height="15.0" fill="rgb(237,221,23)" rx="2" ry="2" />
<text  x="410.83" y="1743.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="347.5" y="1541" width="0.2" height="15.0" fill="rgb(233,160,34)" rx="2" ry="2" />
<text  x="350.46" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="529.4" y="1957" width="0.2" height="15.0" fill="rgb(239,147,20)" rx="2" ry="2" />
<text  x="532.37" y="1967.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (10 samples, 0.17%)</title><rect x="10.2" y="2053" width="2.0" height="15.0" fill="rgb(229,222,53)" rx="2" ry="2" />
<text  x="13.20" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (59 samples, 1.01%)</title><rect x="674.9" y="1957" width="11.8" height="15.0" fill="rgb(227,101,25)" rx="2" ry="2" />
<text  x="677.86" y="1967.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="1087.6" y="1653" width="0.2" height="15.0" fill="rgb(224,16,51)" rx="2" ry="2" />
<text  x="1090.58" y="1663.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="836.8" y="1925" width="0.2" height="15.0" fill="rgb(216,156,32)" rx="2" ry="2" />
<text  x="839.85" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="486.7" y="1637" width="0.2" height="15.0" fill="rgb(251,176,52)" rx="2" ry="2" />
<text  x="489.71" y="1647.5" ></text>
</g>
<g >
<title>security_socket_getpeername (1 samples, 0.02%)</title><rect x="699.2" y="1813" width="0.2" height="15.0" fill="rgb(220,29,12)" rx="2" ry="2" />
<text  x="702.21" y="1823.5" ></text>
</g>
<g >
<title>fsnotify (8 samples, 0.14%)</title><rect x="745.9" y="1797" width="1.6" height="15.0" fill="rgb(241,89,42)" rx="2" ry="2" />
<text  x="748.89" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="616.1" y="2005" width="0.2" height="15.0" fill="rgb(234,108,40)" rx="2" ry="2" />
<text  x="619.10" y="2015.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1141.1" y="1989" width="0.2" height="15.0" fill="rgb(213,112,11)" rx="2" ry="2" />
<text  x="1144.10" y="1999.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="301.0" y="1829" width="0.2" height="15.0" fill="rgb(248,83,52)" rx="2" ry="2" />
<text  x="303.98" y="1839.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="516.7" y="1637" width="0.2" height="15.0" fill="rgb(214,217,38)" rx="2" ry="2" />
<text  x="519.69" y="1647.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1022.8" y="2021" width="0.6" height="15.0" fill="rgb(238,58,19)" rx="2" ry="2" />
<text  x="1025.78" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="920.6" y="1861" width="0.2" height="15.0" fill="rgb(235,128,13)" rx="2" ry="2" />
<text  x="923.56" y="1871.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (1 samples, 0.02%)</title><rect x="384.3" y="1861" width="0.2" height="15.0" fill="rgb(235,84,38)" rx="2" ry="2" />
<text  x="387.28" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="818.7" y="1605" width="0.2" height="15.0" fill="rgb(238,64,3)" rx="2" ry="2" />
<text  x="821.73" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="83.9" y="1733" width="0.2" height="15.0" fill="rgb(243,31,13)" rx="2" ry="2" />
<text  x="86.85" y="1743.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::~RequestContextScopeGuard (20 samples, 0.34%)</title><rect x="183.5" y="1925" width="4.0" height="15.0" fill="rgb(205,49,35)" rx="2" ry="2" />
<text  x="186.46" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="851.1" y="1813" width="0.2" height="15.0" fill="rgb(229,73,7)" rx="2" ry="2" />
<text  x="854.13" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="202.0" y="1893" width="0.2" height="15.0" fill="rgb(231,182,5)" rx="2" ry="2" />
<text  x="204.97" y="1903.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="861.4" y="1925" width="0.2" height="15.0" fill="rgb(229,93,25)" rx="2" ry="2" />
<text  x="864.39" y="1935.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (1 samples, 0.02%)</title><rect x="986.6" y="1877" width="0.2" height="15.0" fill="rgb(208,53,23)" rx="2" ry="2" />
<text  x="989.56" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="593.2" y="1733" width="0.4" height="15.0" fill="rgb(211,143,33)" rx="2" ry="2" />
<text  x="596.16" y="1743.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="631.4" y="1621" width="0.2" height="15.0" fill="rgb(242,173,23)" rx="2" ry="2" />
<text  x="634.39" y="1631.5" ></text>
</g>
<g >
<title>skb_release_head_state (21 samples, 0.36%)</title><rect x="1078.9" y="1893" width="4.2" height="15.0" fill="rgb(231,103,30)" rx="2" ry="2" />
<text  x="1081.92" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1058.2" y="1765" width="0.2" height="15.0" fill="rgb(237,58,27)" rx="2" ry="2" />
<text  x="1061.20" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (1 samples, 0.02%)</title><rect x="659.2" y="1973" width="0.2" height="15.0" fill="rgb(205,159,29)" rx="2" ry="2" />
<text  x="662.16" y="1983.5" ></text>
</g>
<g >
<title>fd_install (1 samples, 0.02%)</title><rect x="331.6" y="1957" width="0.2" height="15.0" fill="rgb(238,103,54)" rx="2" ry="2" />
<text  x="334.56" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::tuple&lt;folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt;, true&gt; (1 samples, 0.02%)</title><rect x="573.0" y="1989" width="0.2" height="15.0" fill="rgb(240,57,11)" rx="2" ry="2" />
<text  x="576.04" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (1 samples, 0.02%)</title><rect x="577.3" y="1989" width="0.2" height="15.0" fill="rgb(238,95,47)" rx="2" ry="2" />
<text  x="580.26" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="783.3" y="1381" width="0.6" height="15.0" fill="rgb(225,122,39)" rx="2" ry="2" />
<text  x="786.32" y="1391.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="55.1" y="1909" width="0.2" height="15.0" fill="rgb(253,197,5)" rx="2" ry="2" />
<text  x="58.08" y="1919.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="64.7" y="1717" width="0.2" height="15.0" fill="rgb(208,63,2)" rx="2" ry="2" />
<text  x="67.73" y="1727.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.07%)</title><rect x="259.5" y="1877" width="0.8" height="15.0" fill="rgb(227,139,54)" rx="2" ry="2" />
<text  x="262.52" y="1887.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="510.9" y="2021" width="0.4" height="15.0" fill="rgb(211,179,28)" rx="2" ry="2" />
<text  x="513.86" y="2031.5" ></text>
</g>
<g >
<title>pthread_self@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="204.8" y="1941" width="0.2" height="15.0" fill="rgb(252,192,54)" rx="2" ry="2" />
<text  x="207.79" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1119.4" y="1717" width="0.2" height="15.0" fill="rgb(238,31,32)" rx="2" ry="2" />
<text  x="1122.37" y="1727.5" ></text>
</g>
<g >
<title>folly::IPAddress::asV4 (2 samples, 0.03%)</title><rect x="597.0" y="1957" width="0.4" height="15.0" fill="rgb(253,153,15)" rx="2" ry="2" />
<text  x="599.98" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="89.1" y="1925" width="0.2" height="15.0" fill="rgb(206,93,19)" rx="2" ry="2" />
<text  x="92.08" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (7 samples, 0.12%)</title><rect x="178.8" y="1877" width="1.4" height="15.0" fill="rgb(206,47,45)" rx="2" ry="2" />
<text  x="181.83" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1022.6" y="1989" width="0.2" height="15.0" fill="rgb(208,51,0)" rx="2" ry="2" />
<text  x="1025.58" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="920.6" y="1845" width="0.2" height="15.0" fill="rgb(208,165,11)" rx="2" ry="2" />
<text  x="923.56" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="831.0" y="1605" width="0.2" height="15.0" fill="rgb(233,115,51)" rx="2" ry="2" />
<text  x="834.01" y="1615.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="273.8" y="1797" width="0.2" height="15.0" fill="rgb(248,169,39)" rx="2" ry="2" />
<text  x="276.81" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="208.6" y="1957" width="0.2" height="15.0" fill="rgb(236,8,4)" rx="2" ry="2" />
<text  x="211.61" y="1967.5" ></text>
</g>
<g >
<title>__inode_wait_for_writeback (1 samples, 0.02%)</title><rect x="741.3" y="1685" width="0.2" height="15.0" fill="rgb(231,37,35)" rx="2" ry="2" />
<text  x="744.26" y="1695.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1111.3" y="1829" width="0.2" height="15.0" fill="rgb(219,31,43)" rx="2" ry="2" />
<text  x="1114.32" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (3 samples, 0.05%)</title><rect x="639.8" y="1989" width="0.6" height="15.0" fill="rgb(225,119,7)" rx="2" ry="2" />
<text  x="642.84" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.03%)</title><rect x="907.5" y="1957" width="0.4" height="15.0" fill="rgb(252,223,6)" rx="2" ry="2" />
<text  x="910.48" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="316.1" y="1685" width="0.2" height="15.0" fill="rgb(220,84,43)" rx="2" ry="2" />
<text  x="319.07" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="840.9" y="1717" width="0.2" height="15.0" fill="rgb(216,158,5)" rx="2" ry="2" />
<text  x="843.87" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1181.1" y="1957" width="0.2" height="15.0" fill="rgb(223,129,23)" rx="2" ry="2" />
<text  x="1184.15" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (4 samples, 0.07%)</title><rect x="851.5" y="1909" width="0.8" height="15.0" fill="rgb(205,82,23)" rx="2" ry="2" />
<text  x="854.53" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.09%)</title><rect x="616.7" y="2005" width="1.0" height="15.0" fill="rgb(241,112,5)" rx="2" ry="2" />
<text  x="619.70" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="549.9" y="1957" width="0.4" height="15.0" fill="rgb(243,43,36)" rx="2" ry="2" />
<text  x="552.89" y="1967.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="12.6" y="1877" width="0.8" height="15.0" fill="rgb(230,183,28)" rx="2" ry="2" />
<text  x="15.62" y="1887.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="454.7" y="1589" width="0.2" height="15.0" fill="rgb(234,158,3)" rx="2" ry="2" />
<text  x="457.71" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="295.9" y="1637" width="0.2" height="15.0" fill="rgb(206,39,3)" rx="2" ry="2" />
<text  x="298.94" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="631.4" y="1813" width="0.2" height="15.0" fill="rgb(247,188,45)" rx="2" ry="2" />
<text  x="634.39" y="1823.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="70.4" y="1893" width="0.6" height="15.0" fill="rgb(236,134,42)" rx="2" ry="2" />
<text  x="73.37" y="1903.5" ></text>
</g>
<g >
<title>x86_pmu_enable (86 samples, 1.47%)</title><rect x="492.9" y="1861" width="17.4" height="15.0" fill="rgb(232,190,17)" rx="2" ry="2" />
<text  x="495.95" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="841.7" y="1701" width="0.2" height="15.0" fill="rgb(218,217,16)" rx="2" ry="2" />
<text  x="844.67" y="1711.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.07%)</title><rect x="815.3" y="1685" width="0.8" height="15.0" fill="rgb(212,76,2)" rx="2" ry="2" />
<text  x="818.31" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="345.4" y="1653" width="0.2" height="15.0" fill="rgb(211,182,24)" rx="2" ry="2" />
<text  x="348.45" y="1663.5" ></text>
</g>
<g >
<title>sys_futex (5 samples, 0.09%)</title><rect x="12.4" y="2005" width="1.0" height="15.0" fill="rgb(215,227,48)" rx="2" ry="2" />
<text  x="15.41" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="71.0" y="1829" width="0.2" height="15.0" fill="rgb(212,64,44)" rx="2" ry="2" />
<text  x="73.97" y="1839.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="163.5" y="1957" width="0.2" height="15.0" fill="rgb(248,5,2)" rx="2" ry="2" />
<text  x="166.54" y="1967.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;folly::AsyncServerSocket::CallbackInfo const*, std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="30.5" y="1973" width="0.2" height="15.0" fill="rgb(253,152,53)" rx="2" ry="2" />
<text  x="33.53" y="1983.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="407.4" y="1973" width="0.2" height="15.0" fill="rgb(212,192,30)" rx="2" ry="2" />
<text  x="410.42" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1150.8" y="1941" width="0.2" height="15.0" fill="rgb(244,129,34)" rx="2" ry="2" />
<text  x="1153.76" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="778.5" y="1429" width="0.2" height="15.0" fill="rgb(216,135,2)" rx="2" ry="2" />
<text  x="781.49" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (5 samples, 0.09%)</title><rect x="230.1" y="1893" width="1.0" height="15.0" fill="rgb(232,130,49)" rx="2" ry="2" />
<text  x="233.14" y="1903.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="850.7" y="1829" width="0.2" height="15.0" fill="rgb(237,32,34)" rx="2" ry="2" />
<text  x="853.73" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="55.3" y="1925" width="0.2" height="15.0" fill="rgb(231,24,26)" rx="2" ry="2" />
<text  x="58.28" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (10 samples, 0.17%)</title><rect x="1144.5" y="2037" width="2.0" height="15.0" fill="rgb(223,185,18)" rx="2" ry="2" />
<text  x="1147.52" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="257.5" y="1781" width="0.2" height="15.0" fill="rgb(224,2,22)" rx="2" ry="2" />
<text  x="260.51" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::sendMultiImpl&lt;bool facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="918.7" y="1989" width="0.2" height="15.0" fill="rgb(234,155,47)" rx="2" ry="2" />
<text  x="921.74" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="29.9" y="1989" width="0.2" height="15.0" fill="rgb(222,48,9)" rx="2" ry="2" />
<text  x="32.92" y="1999.5" ></text>
</g>
<g >
<title>isspace (1 samples, 0.02%)</title><rect x="1010.7" y="2021" width="0.2" height="15.0" fill="rgb(212,101,54)" rx="2" ry="2" />
<text  x="1013.71" y="2031.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="463.8" y="1973" width="0.2" height="15.0" fill="rgb(226,99,34)" rx="2" ry="2" />
<text  x="466.77" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="1179.1" y="1989" width="0.2" height="15.0" fill="rgb(213,26,23)" rx="2" ry="2" />
<text  x="1182.13" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="795.4" y="1461" width="0.2" height="15.0" fill="rgb(253,139,10)" rx="2" ry="2" />
<text  x="798.39" y="1471.5" ></text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (7 samples, 0.12%)</title><rect x="1182.8" y="2053" width="1.4" height="15.0" fill="rgb(220,28,16)" rx="2" ry="2" />
<text  x="1185.76" y="2063.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="992.0" y="1797" width="0.2" height="15.0" fill="rgb(211,206,32)" rx="2" ry="2" />
<text  x="994.99" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="978.7" y="1973" width="0.2" height="15.0" fill="rgb(231,194,15)" rx="2" ry="2" />
<text  x="981.71" y="1983.5" ></text>
</g>
<g >
<title>fput (4 samples, 0.07%)</title><rect x="458.7" y="1973" width="0.8" height="15.0" fill="rgb(253,107,10)" rx="2" ry="2" />
<text  x="461.74" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="862.8" y="1829" width="0.2" height="15.0" fill="rgb(252,81,33)" rx="2" ry="2" />
<text  x="865.80" y="1839.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="523.5" y="1941" width="0.4" height="15.0" fill="rgb(219,183,3)" rx="2" ry="2" />
<text  x="526.53" y="1951.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (7 samples, 0.12%)</title><rect x="265.4" y="1877" width="1.4" height="15.0" fill="rgb(239,206,2)" rx="2" ry="2" />
<text  x="268.36" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="707.3" y="1845" width="0.2" height="15.0" fill="rgb(248,115,10)" rx="2" ry="2" />
<text  x="710.25" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1765" width="0.2" height="15.0" fill="rgb(250,32,9)" rx="2" ry="2" />
<text  x="906.25" y="1775.5" ></text>
</g>
<g >
<title>set_close_on_exec (1 samples, 0.02%)</title><rect x="563.2" y="1909" width="0.2" height="15.0" fill="rgb(205,167,8)" rx="2" ry="2" />
<text  x="566.18" y="1919.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="689.9" y="1957" width="0.3" height="15.0" fill="rgb(210,11,36)" rx="2" ry="2" />
<text  x="692.95" y="1967.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1086.8" y="1861" width="0.2" height="15.0" fill="rgb(242,150,34)" rx="2" ry="2" />
<text  x="1089.77" y="1871.5" ></text>
</g>
<g >
<title>plist_del (1 samples, 0.02%)</title><rect x="12.4" y="1941" width="0.2" height="15.0" fill="rgb(222,119,4)" rx="2" ry="2" />
<text  x="15.41" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="668.4" y="1829" width="0.2" height="15.0" fill="rgb(206,180,2)" rx="2" ry="2" />
<text  x="671.42" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="672.4" y="1909" width="0.2" height="15.0" fill="rgb(225,223,39)" rx="2" ry="2" />
<text  x="675.44" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="265.2" y="1669" width="0.2" height="15.0" fill="rgb(246,185,9)" rx="2" ry="2" />
<text  x="268.16" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="464.0" y="1893" width="0.8" height="15.0" fill="rgb(230,116,18)" rx="2" ry="2" />
<text  x="466.97" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="331.4" y="1925" width="0.2" height="15.0" fill="rgb(247,54,39)" rx="2" ry="2" />
<text  x="334.36" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="345.4" y="1765" width="0.2" height="15.0" fill="rgb(243,35,22)" rx="2" ry="2" />
<text  x="348.45" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="188.3" y="1845" width="0.2" height="15.0" fill="rgb(254,217,14)" rx="2" ry="2" />
<text  x="191.29" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="69.2" y="1861" width="0.4" height="15.0" fill="rgb(224,181,19)" rx="2" ry="2" />
<text  x="72.16" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="523.3" y="1909" width="0.2" height="15.0" fill="rgb(252,143,22)" rx="2" ry="2" />
<text  x="526.33" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="707.3" y="1637" width="0.2" height="15.0" fill="rgb(245,133,41)" rx="2" ry="2" />
<text  x="710.25" y="1647.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="454.7" y="1637" width="0.2" height="15.0" fill="rgb(230,71,39)" rx="2" ry="2" />
<text  x="457.71" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.02%)</title><rect x="433.6" y="1509" width="0.2" height="15.0" fill="rgb(247,183,1)" rx="2" ry="2" />
<text  x="436.58" y="1519.5" ></text>
</g>
<g >
<title>fsnotify_destroy_marks (4 samples, 0.07%)</title><rect x="732.4" y="1653" width="0.8" height="15.0" fill="rgb(240,207,34)" rx="2" ry="2" />
<text  x="735.41" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="517" width="28.8" height="15.0" fill="rgb(249,82,50)" rx="2" ry="2" />
<text  x="127.10" y="527.5" >[u..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="454.1" y="1893" width="0.2" height="15.0" fill="rgb(250,174,51)" rx="2" ry="2" />
<text  x="457.11" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.14%)</title><rect x="10.6" y="1909" width="1.6" height="15.0" fill="rgb(214,215,16)" rx="2" ry="2" />
<text  x="13.60" y="1919.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="903.3" y="1669" width="0.2" height="15.0" fill="rgb(205,45,18)" rx="2" ry="2" />
<text  x="906.25" y="1679.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="345.8" y="1541" width="0.3" height="15.0" fill="rgb(224,100,44)" rx="2" ry="2" />
<text  x="348.85" y="1551.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::weak_ptr (3 samples, 0.05%)</title><rect x="577.5" y="2005" width="0.6" height="15.0" fill="rgb(249,59,46)" rx="2" ry="2" />
<text  x="580.46" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="890.4" y="1973" width="0.4" height="15.0" fill="rgb(239,102,15)" rx="2" ry="2" />
<text  x="893.37" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="167.4" y="1941" width="0.2" height="15.0" fill="rgb(236,23,22)" rx="2" ry="2" />
<text  x="170.36" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="202.0" y="1765" width="0.2" height="15.0" fill="rgb(238,50,19)" rx="2" ry="2" />
<text  x="204.97" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="69.6" y="1877" width="0.4" height="15.0" fill="rgb(226,148,20)" rx="2" ry="2" />
<text  x="72.56" y="1887.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="12.6" y="1845" width="0.8" height="15.0" fill="rgb(212,130,16)" rx="2" ry="2" />
<text  x="15.62" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1168.7" y="1893" width="0.2" height="15.0" fill="rgb(247,28,50)" rx="2" ry="2" />
<text  x="1171.67" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (2 samples, 0.03%)</title><rect x="956.0" y="2005" width="0.4" height="15.0" fill="rgb(212,211,53)" rx="2" ry="2" />
<text  x="958.97" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (4 samples, 0.07%)</title><rect x="196.7" y="1925" width="0.8" height="15.0" fill="rgb(246,229,21)" rx="2" ry="2" />
<text  x="199.74" y="1935.5" ></text>
</g>
<g >
<title>call_rcu_sched (3 samples, 0.05%)</title><rect x="721.5" y="1797" width="0.6" height="15.0" fill="rgb(210,129,9)" rx="2" ry="2" />
<text  x="724.54" y="1807.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="588.3" y="1813" width="0.2" height="15.0" fill="rgb(210,146,25)" rx="2" ry="2" />
<text  x="591.33" y="1823.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="930.6" y="1973" width="0.2" height="15.0" fill="rgb(219,213,47)" rx="2" ry="2" />
<text  x="933.62" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromPeerAddress (5 samples, 0.09%)</title><rect x="698.6" y="1941" width="1.0" height="15.0" fill="rgb(227,113,45)" rx="2" ry="2" />
<text  x="701.60" y="1951.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1146.1" y="1989" width="0.2" height="15.0" fill="rgb(242,79,52)" rx="2" ry="2" />
<text  x="1149.13" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="233.0" y="1637" width="0.2" height="15.0" fill="rgb(251,19,45)" rx="2" ry="2" />
<text  x="235.96" y="1647.5" ></text>
</g>
<g >
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="464.0" y="1685" width="0.2" height="15.0" fill="rgb(213,151,29)" rx="2" ry="2" />
<text  x="466.97" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="99.7" y="1765" width="0.2" height="15.0" fill="rgb(240,101,27)" rx="2" ry="2" />
<text  x="102.75" y="1775.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1000.2" y="1957" width="0.2" height="15.0" fill="rgb(232,188,1)" rx="2" ry="2" />
<text  x="1003.24" y="1967.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="14.4" y="1797" width="0.2" height="15.0" fill="rgb(206,171,52)" rx="2" ry="2" />
<text  x="17.43" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="316.1" y="1717" width="0.2" height="15.0" fill="rgb(254,31,53)" rx="2" ry="2" />
<text  x="319.07" y="1727.5" ></text>
</g>
<g >
<title>kmem_cache_free (9 samples, 0.15%)</title><rect x="724.6" y="1733" width="1.8" height="15.0" fill="rgb(251,76,23)" rx="2" ry="2" />
<text  x="727.56" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="858.2" y="1925" width="0.2" height="15.0" fill="rgb(235,132,40)" rx="2" ry="2" />
<text  x="861.18" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="12.2" y="2021" width="0.2" height="15.0" fill="rgb(214,20,22)" rx="2" ry="2" />
<text  x="15.21" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (25 samples, 0.43%)</title><rect x="91.9" y="1989" width="5.0" height="15.0" fill="rgb(254,72,49)" rx="2" ry="2" />
<text  x="94.90" y="1999.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (3 samples, 0.05%)</title><rect x="80.8" y="1941" width="0.6" height="15.0" fill="rgb(250,61,41)" rx="2" ry="2" />
<text  x="83.83" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="968.2" y="1877" width="0.2" height="15.0" fill="rgb(226,206,54)" rx="2" ry="2" />
<text  x="971.25" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ImmediateReadCB::ImmediateReadCB (7 samples, 0.12%)</title><rect x="539.0" y="2005" width="1.4" height="15.0" fill="rgb(219,174,26)" rx="2" ry="2" />
<text  x="542.03" y="2015.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="237.4" y="1797" width="0.2" height="15.0" fill="rgb(216,48,16)" rx="2" ry="2" />
<text  x="240.39" y="1807.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (2 samples, 0.03%)</title><rect x="918.3" y="1973" width="0.4" height="15.0" fill="rgb(218,38,0)" rx="2" ry="2" />
<text  x="921.34" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::LocalData::getSlow&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (1 samples, 0.02%)</title><rect x="626.6" y="1989" width="0.2" height="15.0" fill="rgb(235,184,42)" rx="2" ry="2" />
<text  x="629.56" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="510.7" y="1653" width="0.2" height="15.0" fill="rgb(246,129,21)" rx="2" ry="2" />
<text  x="513.65" y="1663.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="486.7" y="1733" width="0.2" height="15.0" fill="rgb(252,7,39)" rx="2" ry="2" />
<text  x="489.71" y="1743.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="721.3" y="1365" width="0.2" height="15.0" fill="rgb(211,43,49)" rx="2" ry="2" />
<text  x="724.34" y="1375.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="516.7" y="1717" width="0.2" height="15.0" fill="rgb(217,218,52)" rx="2" ry="2" />
<text  x="519.69" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="86.3" y="1909" width="0.2" height="15.0" fill="rgb(206,204,18)" rx="2" ry="2" />
<text  x="89.27" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="54.5" y="1813" width="0.2" height="15.0" fill="rgb(240,77,44)" rx="2" ry="2" />
<text  x="57.47" y="1823.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="282.1" y="1621" width="0.2" height="15.0" fill="rgb(233,16,14)" rx="2" ry="2" />
<text  x="285.06" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="888.2" y="1877" width="0.2" height="15.0" fill="rgb(244,114,52)" rx="2" ry="2" />
<text  x="891.16" y="1887.5" ></text>
</g>
<g >
<title>folly::(anonymous namespace)::disableTransparentFunctions (1 samples, 0.02%)</title><rect x="536.8" y="2021" width="0.2" height="15.0" fill="rgb(221,20,2)" rx="2" ry="2" />
<text  x="539.81" y="2031.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="686.5" y="1893" width="0.2" height="15.0" fill="rgb(237,140,25)" rx="2" ry="2" />
<text  x="689.53" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="731.6" y="1669" width="0.2" height="15.0" fill="rgb(242,29,40)" rx="2" ry="2" />
<text  x="734.60" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="56.7" y="1685" width="0.2" height="15.0" fill="rgb(242,0,51)" rx="2" ry="2" />
<text  x="59.68" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_fin (311 samples, 5.30%)</title><rect x="758.8" y="1733" width="62.6" height="15.0" fill="rgb(252,165,41)" rx="2" ry="2" />
<text  x="761.77" y="1743.5" >tcp_se..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="272.4" y="1749" width="0.2" height="15.0" fill="rgb(212,45,52)" rx="2" ry="2" />
<text  x="275.40" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="69.2" y="1877" width="0.4" height="15.0" fill="rgb(232,90,26)" rx="2" ry="2" />
<text  x="72.16" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (2 samples, 0.03%)</title><rect x="574.6" y="1989" width="0.4" height="15.0" fill="rgb(210,195,50)" rx="2" ry="2" />
<text  x="577.65" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::readDataAvailable (5 samples, 0.09%)</title><rect x="34.8" y="1989" width="1.0" height="15.0" fill="rgb(209,192,12)" rx="2" ry="2" />
<text  x="37.75" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="140.0" y="37" width="0.2" height="15.0" fill="rgb(245,160,44)" rx="2" ry="2" />
<text  x="142.99" y="47.5" ></text>
</g>
<g >
<title>accept4 (351 samples, 5.99%)</title><rect x="321.1" y="2037" width="70.6" height="15.0" fill="rgb(207,6,15)" rx="2" ry="2" />
<text  x="324.10" y="2047.5" >accept4</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="605.0" y="1973" width="0.2" height="15.0" fill="rgb(246,95,46)" rx="2" ry="2" />
<text  x="608.03" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="800.8" y="1445" width="0.4" height="15.0" fill="rgb(214,37,12)" rx="2" ry="2" />
<text  x="803.83" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="910.5" y="2021" width="0.8" height="15.0" fill="rgb(219,17,23)" rx="2" ry="2" />
<text  x="913.49" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1173" width="29.8" height="15.0" fill="rgb(247,33,14)" rx="2" ry="2" />
<text  x="127.10" y="1183.5" >[u..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1055.2" y="1765" width="0.2" height="15.0" fill="rgb(236,49,12)" rx="2" ry="2" />
<text  x="1058.18" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (18 samples, 0.31%)</title><rect x="964.0" y="2037" width="3.6" height="15.0" fill="rgb(237,112,9)" rx="2" ry="2" />
<text  x="967.02" y="2047.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="155.9" y="1893" width="0.2" height="15.0" fill="rgb(228,176,46)" rx="2" ry="2" />
<text  x="158.89" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="283.1" y="1349" width="0.2" height="15.0" fill="rgb(225,0,23)" rx="2" ry="2" />
<text  x="286.07" y="1359.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="1054.8" y="1845" width="0.6" height="15.0" fill="rgb(237,37,10)" rx="2" ry="2" />
<text  x="1057.77" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="235.0" y="1813" width="0.2" height="15.0" fill="rgb(214,165,23)" rx="2" ry="2" />
<text  x="237.97" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="831.0" y="1685" width="0.2" height="15.0" fill="rgb(235,82,19)" rx="2" ry="2" />
<text  x="834.01" y="1695.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="53.9" y="1941" width="0.2" height="15.0" fill="rgb(205,164,40)" rx="2" ry="2" />
<text  x="56.87" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (4 samples, 0.07%)</title><rect x="1153.2" y="2053" width="0.8" height="15.0" fill="rgb(222,192,45)" rx="2" ry="2" />
<text  x="1156.18" y="2063.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (30 samples, 0.51%)</title><rect x="936.9" y="1941" width="6.0" height="15.0" fill="rgb(232,153,28)" rx="2" ry="2" />
<text  x="939.86" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="510.3" y="1877" width="0.6" height="15.0" fill="rgb(218,84,21)" rx="2" ry="2" />
<text  x="513.25" y="1887.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (1 samples, 0.02%)</title><rect x="389.1" y="1973" width="0.2" height="15.0" fill="rgb(231,171,6)" rx="2" ry="2" />
<text  x="392.11" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (5 samples, 0.09%)</title><rect x="87.5" y="1925" width="1.0" height="15.0" fill="rgb(237,10,31)" rx="2" ry="2" />
<text  x="90.47" y="1935.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="312.0" y="1925" width="0.2" height="15.0" fill="rgb(220,1,10)" rx="2" ry="2" />
<text  x="315.04" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="208.6" y="2005" width="0.2" height="15.0" fill="rgb(241,35,28)" rx="2" ry="2" />
<text  x="211.61" y="2015.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="699.6" y="1973" width="0.2" height="15.0" fill="rgb(252,166,38)" rx="2" ry="2" />
<text  x="702.61" y="1983.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="156.9" y="1989" width="0.2" height="15.0" fill="rgb(224,84,44)" rx="2" ry="2" />
<text  x="159.90" y="1999.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="12.6" y="1893" width="0.8" height="15.0" fill="rgb(220,132,7)" rx="2" ry="2" />
<text  x="15.62" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="747.7" y="1525" width="0.2" height="15.0" fill="rgb(247,90,9)" rx="2" ry="2" />
<text  x="750.70" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1168.7" y="1957" width="0.2" height="15.0" fill="rgb(227,145,48)" rx="2" ry="2" />
<text  x="1171.67" y="1967.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1087.2" y="1893" width="0.2" height="15.0" fill="rgb(221,183,0)" rx="2" ry="2" />
<text  x="1090.17" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="691.6" y="2021" width="0.2" height="15.0" fill="rgb(233,96,7)" rx="2" ry="2" />
<text  x="694.56" y="2031.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="825.8" y="1813" width="0.4" height="15.0" fill="rgb(209,125,48)" rx="2" ry="2" />
<text  x="828.78" y="1823.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.03%)</title><rect x="114.0" y="1957" width="0.4" height="15.0" fill="rgb(205,79,27)" rx="2" ry="2" />
<text  x="117.03" y="1967.5" ></text>
</g>
<g >
<title>page_frag_free (12 samples, 0.20%)</title><rect x="1076.5" y="1861" width="2.4" height="15.0" fill="rgb(251,179,46)" rx="2" ry="2" />
<text  x="1079.51" y="1871.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="464.4" y="1621" width="0.2" height="15.0" fill="rgb(213,154,3)" rx="2" ry="2" />
<text  x="467.37" y="1631.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1167.1" y="2005" width="0.2" height="15.0" fill="rgb(222,136,0)" rx="2" ry="2" />
<text  x="1170.06" y="2015.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="875.5" y="1925" width="0.2" height="15.0" fill="rgb(215,139,48)" rx="2" ry="2" />
<text  x="878.48" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="255.1" y="1669" width="0.2" height="15.0" fill="rgb(242,144,28)" rx="2" ry="2" />
<text  x="258.10" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="926.4" y="1989" width="0.2" height="15.0" fill="rgb(240,14,38)" rx="2" ry="2" />
<text  x="929.39" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (7 samples, 0.12%)</title><rect x="201.4" y="1973" width="1.4" height="15.0" fill="rgb(205,110,24)" rx="2" ry="2" />
<text  x="204.37" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="844.1" y="1749" width="0.2" height="15.0" fill="rgb(254,104,44)" rx="2" ry="2" />
<text  x="847.09" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="961.8" y="2021" width="1.6" height="15.0" fill="rgb(230,109,21)" rx="2" ry="2" />
<text  x="964.81" y="2031.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="701.8" y="1653" width="0.2" height="15.0" fill="rgb(249,220,23)" rx="2" ry="2" />
<text  x="704.82" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="151.1" y="85" width="0.2" height="15.0" fill="rgb(254,72,13)" rx="2" ry="2" />
<text  x="154.06" y="95.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (3 samples, 0.05%)</title><rect x="99.3" y="2021" width="0.6" height="15.0" fill="rgb(210,180,0)" rx="2" ry="2" />
<text  x="102.35" y="2031.5" ></text>
</g>
<g >
<title>_find_next_bit (1 samples, 0.02%)</title><rect x="332.4" y="1925" width="0.2" height="15.0" fill="rgb(238,165,27)" rx="2" ry="2" />
<text  x="335.37" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="944.3" y="1765" width="0.2" height="15.0" fill="rgb(217,174,24)" rx="2" ry="2" />
<text  x="947.30" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="882.5" y="1877" width="0.4" height="15.0" fill="rgb(208,160,4)" rx="2" ry="2" />
<text  x="885.52" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (3 samples, 0.05%)</title><rect x="887.8" y="1925" width="0.6" height="15.0" fill="rgb(239,5,20)" rx="2" ry="2" />
<text  x="890.76" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="944.3" y="1941" width="0.2" height="15.0" fill="rgb(231,124,52)" rx="2" ry="2" />
<text  x="947.30" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="331.4" y="1909" width="0.2" height="15.0" fill="rgb(206,60,8)" rx="2" ry="2" />
<text  x="334.36" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="861.8" y="1957" width="0.2" height="15.0" fill="rgb(223,179,26)" rx="2" ry="2" />
<text  x="864.80" y="1967.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="175.4" y="1909" width="0.2" height="15.0" fill="rgb(226,216,14)" rx="2" ry="2" />
<text  x="178.41" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="534.2" y="1973" width="0.6" height="15.0" fill="rgb(233,228,34)" rx="2" ry="2" />
<text  x="537.20" y="1983.5" ></text>
</g>
<g >
<title>inet_recvmsg (252 samples, 4.30%)</title><rect x="1058.8" y="1957" width="50.7" height="15.0" fill="rgb(226,40,51)" rx="2" ry="2" />
<text  x="1061.80" y="1967.5" >inet_..</text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (3 samples, 0.05%)</title><rect x="918.1" y="1989" width="0.6" height="15.0" fill="rgb(206,90,33)" rx="2" ry="2" />
<text  x="921.14" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="882.3" y="1909" width="0.6" height="15.0" fill="rgb(224,132,28)" rx="2" ry="2" />
<text  x="885.32" y="1919.5" ></text>
</g>
<g >
<title>folly::netops::recv (17 samples, 0.29%)</title><rect x="51.9" y="1957" width="3.4" height="15.0" fill="rgb(246,142,9)" rx="2" ry="2" />
<text  x="54.86" y="1967.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000l&gt;, void&gt; (4 samples, 0.07%)</title><rect x="522.7" y="1957" width="0.8" height="15.0" fill="rgb(211,199,41)" rx="2" ry="2" />
<text  x="525.73" y="1967.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="114.4" y="2037" width="0.4" height="15.0" fill="rgb(229,148,5)" rx="2" ry="2" />
<text  x="117.44" y="2047.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="114.8" y="1797" width="0.2" height="15.0" fill="rgb(225,44,21)" rx="2" ry="2" />
<text  x="117.84" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="740.7" y="1557" width="0.2" height="15.0" fill="rgb(210,133,16)" rx="2" ry="2" />
<text  x="743.66" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="388.3" y="1765" width="0.2" height="15.0" fill="rgb(246,184,47)" rx="2" ry="2" />
<text  x="391.31" y="1775.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="880.1" y="1909" width="0.2" height="15.0" fill="rgb(236,67,25)" rx="2" ry="2" />
<text  x="883.11" y="1919.5" ></text>
</g>
<g >
<title>epoll_ctl@plt (1 samples, 0.02%)</title><rect x="469.0" y="2037" width="0.2" height="15.0" fill="rgb(216,8,52)" rx="2" ry="2" />
<text  x="472.00" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="816.5" y="1573" width="0.2" height="15.0" fill="rgb(246,39,9)" rx="2" ry="2" />
<text  x="819.52" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="887.0" y="1893" width="0.2" height="15.0" fill="rgb(250,99,23)" rx="2" ry="2" />
<text  x="889.95" y="1903.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="441.6" y="1605" width="0.2" height="15.0" fill="rgb(223,112,17)" rx="2" ry="2" />
<text  x="444.63" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unique (1 samples, 0.02%)</title><rect x="934.8" y="1925" width="0.2" height="15.0" fill="rgb(237,3,45)" rx="2" ry="2" />
<text  x="937.84" y="1935.5" ></text>
</g>
<g >
<title>security_sk_free (1 samples, 0.02%)</title><rect x="1058.2" y="1653" width="0.2" height="15.0" fill="rgb(205,121,39)" rx="2" ry="2" />
<text  x="1061.20" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1171.1" y="2021" width="0.4" height="15.0" fill="rgb(240,132,26)" rx="2" ry="2" />
<text  x="1174.08" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1075.9" y="1861" width="0.2" height="15.0" fill="rgb(237,193,51)" rx="2" ry="2" />
<text  x="1078.90" y="1871.5" ></text>
</g>
<g >
<title>__access (1 samples, 0.02%)</title><rect x="12.2" y="2053" width="0.2" height="15.0" fill="rgb(241,43,9)" rx="2" ry="2" />
<text  x="15.21" y="2063.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (9 samples, 0.15%)</title><rect x="282.3" y="1621" width="1.8" height="15.0" fill="rgb(253,116,25)" rx="2" ry="2" />
<text  x="285.26" y="1631.5" ></text>
</g>
<g >
<title>sys_sendmsg (313 samples, 5.34%)</title><rect x="253.3" y="1989" width="63.0" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="256.28" y="1999.5" >sys_se..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (212 samples, 3.62%)</title><rect x="536.0" y="2037" width="42.7" height="15.0" fill="rgb(235,18,37)" rx="2" ry="2" />
<text  x="539.01" y="2047.5" >face..</text>
</g>
<g >
<title>__GI___setsockopt (6 samples, 0.10%)</title><rect x="226.3" y="1957" width="1.2" height="15.0" fill="rgb(208,36,47)" rx="2" ry="2" />
<text  x="229.32" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1170.3" y="1973" width="0.2" height="15.0" fill="rgb(230,109,24)" rx="2" ry="2" />
<text  x="1173.28" y="1983.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="902.6" y="2005" width="0.9" height="15.0" fill="rgb(236,151,14)" rx="2" ry="2" />
<text  x="905.65" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="388.3" y="1893" width="0.2" height="15.0" fill="rgb(249,200,29)" rx="2" ry="2" />
<text  x="391.31" y="1903.5" ></text>
</g>
<g >
<title>skb_free_head (12 samples, 0.20%)</title><rect x="1102.9" y="1461" width="2.4" height="15.0" fill="rgb(238,180,26)" rx="2" ry="2" />
<text  x="1105.87" y="1471.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="1147.5" y="2005" width="0.2" height="15.0" fill="rgb(212,138,33)" rx="2" ry="2" />
<text  x="1150.54" y="2015.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="154.9" y="1717" width="0.2" height="15.0" fill="rgb(216,185,18)" rx="2" ry="2" />
<text  x="157.88" y="1727.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (530 samples, 9.04%)</title><rect x="716.3" y="1861" width="106.7" height="15.0" fill="rgb(217,212,1)" rx="2" ry="2" />
<text  x="719.31" y="1871.5" >exit_to_userm..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1072.7" y="1717" width="0.2" height="15.0" fill="rgb(238,82,45)" rx="2" ry="2" />
<text  x="1075.68" y="1727.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="71.0" y="1733" width="0.2" height="15.0" fill="rgb(210,65,22)" rx="2" ry="2" />
<text  x="73.97" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="672.4" y="1925" width="0.2" height="15.0" fill="rgb(209,200,16)" rx="2" ry="2" />
<text  x="675.44" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="844.1" y="1829" width="0.2" height="15.0" fill="rgb(212,193,3)" rx="2" ry="2" />
<text  x="847.09" y="1839.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (2 samples, 0.03%)</title><rect x="368.8" y="1845" width="0.4" height="15.0" fill="rgb(237,183,42)" rx="2" ry="2" />
<text  x="371.79" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1525" width="30.4" height="15.0" fill="rgb(227,89,31)" rx="2" ry="2" />
<text  x="127.10" y="1535.5" >[u..</text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (3 samples, 0.05%)</title><rect x="634.6" y="1973" width="0.6" height="15.0" fill="rgb(205,68,15)" rx="2" ry="2" />
<text  x="637.61" y="1983.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.09%)</title><rect x="12.4" y="2053" width="1.0" height="15.0" fill="rgb(218,73,8)" rx="2" ry="2" />
<text  x="15.41" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_Tuple_impl&lt;folly::IOBuf*&amp;, std::default_delete&lt;folly::IOBuf&gt;, void&gt; (2 samples, 0.03%)</title><rect x="887.8" y="1909" width="0.4" height="15.0" fill="rgb(247,161,52)" rx="2" ry="2" />
<text  x="890.76" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (14 samples, 0.24%)</title><rect x="845.9" y="1941" width="2.8" height="15.0" fill="rgb(219,42,22)" rx="2" ry="2" />
<text  x="848.90" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="99.7" y="2005" width="0.2" height="15.0" fill="rgb(241,188,24)" rx="2" ry="2" />
<text  x="102.75" y="2015.5" ></text>
</g>
<g >
<title>malloc (22 samples, 0.38%)</title><rect x="1185.2" y="2053" width="4.4" height="15.0" fill="rgb(222,16,20)" rx="2" ry="2" />
<text  x="1188.17" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="701.8" y="1797" width="0.2" height="15.0" fill="rgb(213,126,20)" rx="2" ry="2" />
<text  x="704.82" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::getReadBuffer (3 samples, 0.05%)</title><rect x="691.2" y="2037" width="0.6" height="15.0" fill="rgb(207,29,38)" rx="2" ry="2" />
<text  x="694.16" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="633.4" y="1909" width="0.2" height="15.0" fill="rgb(223,121,37)" rx="2" ry="2" />
<text  x="636.40" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="64.1" y="1765" width="0.2" height="15.0" fill="rgb(253,142,29)" rx="2" ry="2" />
<text  x="67.13" y="1775.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="609.1" y="1973" width="0.2" height="15.0" fill="rgb(211,1,32)" rx="2" ry="2" />
<text  x="612.06" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="75.2" y="1861" width="0.4" height="15.0" fill="rgb(248,46,52)" rx="2" ry="2" />
<text  x="78.20" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="273.8" y="1717" width="0.2" height="15.0" fill="rgb(214,201,39)" rx="2" ry="2" />
<text  x="276.81" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (152 samples, 2.59%)</title><rect x="123.9" y="1653" width="30.6" height="15.0" fill="rgb(216,186,26)" rx="2" ry="2" />
<text  x="126.89" y="1663.5" >[u..</text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber::State, folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="942.3" y="1893" width="0.2" height="15.0" fill="rgb(239,58,44)" rx="2" ry="2" />
<text  x="945.29" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::writeSuccess (1 samples, 0.02%)</title><rect x="876.5" y="1973" width="0.2" height="15.0" fill="rgb(232,62,15)" rx="2" ry="2" />
<text  x="879.49" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="240.6" y="1861" width="0.2" height="15.0" fill="rgb(239,6,48)" rx="2" ry="2" />
<text  x="243.61" y="1871.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="523.3" y="1749" width="0.2" height="15.0" fill="rgb(217,189,25)" rx="2" ry="2" />
<text  x="526.33" y="1759.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="740.7" y="1397" width="0.2" height="15.0" fill="rgb(247,74,33)" rx="2" ry="2" />
<text  x="743.66" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1178.1" y="1957" width="0.2" height="15.0" fill="rgb(223,131,0)" rx="2" ry="2" />
<text  x="1181.13" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::scheduleTimeout (104 samples, 1.77%)</title><rect x="513.9" y="2021" width="20.9" height="15.0" fill="rgb(224,113,37)" rx="2" ry="2" />
<text  x="516.87" y="2031.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (3 samples, 0.05%)</title><rect x="945.7" y="1941" width="0.6" height="15.0" fill="rgb(237,0,16)" rx="2" ry="2" />
<text  x="948.71" y="1951.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="961.6" y="1893" width="0.2" height="15.0" fill="rgb(219,64,32)" rx="2" ry="2" />
<text  x="964.61" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="310.6" y="1749" width="0.2" height="15.0" fill="rgb(238,74,42)" rx="2" ry="2" />
<text  x="313.63" y="1759.5" ></text>
</g>
<g >
<title>__fdget (37 samples, 0.63%)</title><rect x="1112.1" y="1957" width="7.5" height="15.0" fill="rgb(237,228,13)" rx="2" ry="2" />
<text  x="1115.12" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="347.9" y="1925" width="0.2" height="15.0" fill="rgb(208,146,52)" rx="2" ry="2" />
<text  x="350.86" y="1935.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="365.2" y="1877" width="0.2" height="15.0" fill="rgb(249,73,0)" rx="2" ry="2" />
<text  x="368.17" y="1887.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="523.3" y="1765" width="0.2" height="15.0" fill="rgb(233,37,26)" rx="2" ry="2" />
<text  x="526.33" y="1775.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="698.4" y="1941" width="0.2" height="15.0" fill="rgb(212,100,24)" rx="2" ry="2" />
<text  x="701.40" y="1951.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10 samples, 0.17%)</title><rect x="686.7" y="1973" width="2.0" height="15.0" fill="rgb(221,165,4)" rx="2" ry="2" />
<text  x="689.73" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="672.4" y="1989" width="0.2" height="15.0" fill="rgb(205,155,20)" rx="2" ry="2" />
<text  x="675.44" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2 samples, 0.03%)</title><rect x="530.8" y="1941" width="0.4" height="15.0" fill="rgb(224,61,18)" rx="2" ry="2" />
<text  x="533.78" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="88.9" y="1909" width="0.2" height="15.0" fill="rgb(237,35,15)" rx="2" ry="2" />
<text  x="91.88" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="634.4" y="1973" width="0.2" height="15.0" fill="rgb(222,92,8)" rx="2" ry="2" />
<text  x="637.41" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="54.5" y="1765" width="0.2" height="15.0" fill="rgb(238,143,48)" rx="2" ry="2" />
<text  x="57.47" y="1775.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="96.9" y="1989" width="0.2" height="15.0" fill="rgb(249,8,45)" rx="2" ry="2" />
<text  x="99.93" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="202.2" y="1957" width="0.6" height="15.0" fill="rgb(210,188,12)" rx="2" ry="2" />
<text  x="205.17" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="100.8" y="2005" width="0.2" height="15.0" fill="rgb(227,216,34)" rx="2" ry="2" />
<text  x="103.75" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (5 samples, 0.09%)</title><rect x="236.6" y="1845" width="1.0" height="15.0" fill="rgb(214,135,11)" rx="2" ry="2" />
<text  x="239.58" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.14%)</title><rect x="968.4" y="2021" width="1.7" height="15.0" fill="rgb(231,71,34)" rx="2" ry="2" />
<text  x="971.45" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1153.0" y="1941" width="0.2" height="15.0" fill="rgb(222,108,14)" rx="2" ry="2" />
<text  x="1155.97" y="1951.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="1163.2" y="1845" width="0.2" height="15.0" fill="rgb(242,216,14)" rx="2" ry="2" />
<text  x="1166.24" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="800.8" y="1413" width="0.2" height="15.0" fill="rgb(242,73,46)" rx="2" ry="2" />
<text  x="803.83" y="1423.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (4 samples, 0.07%)</title><rect x="464.0" y="1861" width="0.8" height="15.0" fill="rgb(205,199,35)" rx="2" ry="2" />
<text  x="466.97" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="778.5" y="1541" width="0.2" height="15.0" fill="rgb(245,179,24)" rx="2" ry="2" />
<text  x="781.49" y="1551.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1144.3" y="2021" width="0.2" height="15.0" fill="rgb(254,34,21)" rx="2" ry="2" />
<text  x="1147.32" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="486.7" y="1717" width="0.2" height="15.0" fill="rgb(236,18,9)" rx="2" ry="2" />
<text  x="489.71" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="152.7" y="245" width="0.2" height="15.0" fill="rgb(227,15,25)" rx="2" ry="2" />
<text  x="155.67" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (1 samples, 0.02%)</title><rect x="945.5" y="1941" width="0.2" height="15.0" fill="rgb(211,71,15)" rx="2" ry="2" />
<text  x="948.51" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="346.9" y="1925" width="0.2" height="15.0" fill="rgb(219,66,42)" rx="2" ry="2" />
<text  x="349.86" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::operator= (4 samples, 0.07%)</title><rect x="1147.7" y="2005" width="0.8" height="15.0" fill="rgb(242,93,20)" rx="2" ry="2" />
<text  x="1150.74" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="778.5" y="1493" width="0.2" height="15.0" fill="rgb(233,26,6)" rx="2" ry="2" />
<text  x="781.49" y="1503.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="1167.1" y="2021" width="0.2" height="15.0" fill="rgb(237,0,54)" rx="2" ry="2" />
<text  x="1170.06" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="345.8" y="1669" width="0.3" height="15.0" fill="rgb(236,139,52)" rx="2" ry="2" />
<text  x="348.85" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="862.8" y="1877" width="0.2" height="15.0" fill="rgb(222,51,32)" rx="2" ry="2" />
<text  x="865.80" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1149.2" y="1925" width="0.2" height="15.0" fill="rgb(207,125,31)" rx="2" ry="2" />
<text  x="1152.15" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 0.05%)</title><rect x="1054.8" y="1877" width="0.6" height="15.0" fill="rgb(240,30,34)" rx="2" ry="2" />
<text  x="1057.77" y="1887.5" ></text>
</g>
<g >
<title>get_next_ino (1 samples, 0.02%)</title><rect x="331.8" y="1957" width="0.2" height="15.0" fill="rgb(207,152,50)" rx="2" ry="2" />
<text  x="334.76" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="801.6" y="1605" width="0.2" height="15.0" fill="rgb(212,172,47)" rx="2" ry="2" />
<text  x="804.63" y="1615.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::begin (2 samples, 0.03%)</title><rect x="527.8" y="1973" width="0.4" height="15.0" fill="rgb(225,171,46)" rx="2" ry="2" />
<text  x="530.76" y="1983.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::hasValue (1 samples, 0.02%)</title><rect x="1004.3" y="2005" width="0.2" height="15.0" fill="rgb(236,7,28)" rx="2" ry="2" />
<text  x="1007.27" y="2015.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (5 samples, 0.09%)</title><rect x="580.7" y="1925" width="1.0" height="15.0" fill="rgb(234,151,23)" rx="2" ry="2" />
<text  x="583.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.94%)</title><rect x="626.4" y="2021" width="11.0" height="15.0" fill="rgb(222,153,53)" rx="2" ry="2" />
<text  x="629.36" y="2031.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="888.2" y="1685" width="0.2" height="15.0" fill="rgb(230,213,9)" rx="2" ry="2" />
<text  x="891.16" y="1695.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="123.9" y="1573" width="0.2" height="15.0" fill="rgb(223,74,36)" rx="2" ry="2" />
<text  x="126.89" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="437" width="28.8" height="15.0" fill="rgb(238,144,1)" rx="2" ry="2" />
<text  x="127.10" y="447.5" >[u..</text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="978.7" y="1909" width="0.2" height="15.0" fill="rgb(248,5,32)" rx="2" ry="2" />
<text  x="981.71" y="1919.5" ></text>
</g>
<g >
<title>folly::detail::SingletonHolder&lt;facebook::memcache::FifoManager&gt;::Impl&lt;folly::detail::DefaultTag, folly::detail::DefaultTag&gt;::~Impl (2 samples, 0.03%)</title><rect x="975.5" y="2037" width="0.4" height="15.0" fill="rgb(216,131,32)" rx="2" ry="2" />
<text  x="978.49" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::~McClientRequestContext (1 samples, 0.02%)</title><rect x="617.7" y="2037" width="0.2" height="15.0" fill="rgb(252,168,9)" rx="2" ry="2" />
<text  x="620.71" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="955.8" y="1989" width="0.2" height="15.0" fill="rgb(227,121,7)" rx="2" ry="2" />
<text  x="958.77" y="1999.5" ></text>
</g>
<g >
<title>SYSC_getpeername (12 samples, 0.20%)</title><rect x="667.2" y="1877" width="2.4" height="15.0" fill="rgb(222,178,37)" rx="2" ry="2" />
<text  x="670.21" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="14.4" y="1845" width="0.2" height="15.0" fill="rgb(210,135,35)" rx="2" ry="2" />
<text  x="17.43" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="691.6" y="1893" width="0.2" height="15.0" fill="rgb(234,3,42)" rx="2" ry="2" />
<text  x="694.56" y="1903.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1075.9" y="1845" width="0.2" height="15.0" fill="rgb(254,91,9)" rx="2" ry="2" />
<text  x="1078.90" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="880.1" y="1845" width="0.2" height="15.0" fill="rgb(212,57,4)" rx="2" ry="2" />
<text  x="883.11" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="78.2" y="1861" width="0.2" height="15.0" fill="rgb(249,91,11)" rx="2" ry="2" />
<text  x="81.22" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="750.1" y="1573" width="0.2" height="15.0" fill="rgb(239,213,49)" rx="2" ry="2" />
<text  x="753.12" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="238.2" y="1813" width="0.2" height="15.0" fill="rgb(225,24,25)" rx="2" ry="2" />
<text  x="241.19" y="1823.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (1 samples, 0.02%)</title><rect x="879.9" y="1957" width="0.2" height="15.0" fill="rgb(234,23,8)" rx="2" ry="2" />
<text  x="882.91" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="812.5" y="1605" width="0.2" height="15.0" fill="rgb(254,134,10)" rx="2" ry="2" />
<text  x="815.50" y="1615.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (2 samples, 0.03%)</title><rect x="43.6" y="1909" width="0.4" height="15.0" fill="rgb(231,50,19)" rx="2" ry="2" />
<text  x="46.61" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (12 samples, 0.20%)</title><rect x="238.4" y="1925" width="2.4" height="15.0" fill="rgb(210,151,41)" rx="2" ry="2" />
<text  x="241.39" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (26 samples, 0.44%)</title><rect x="366.6" y="1893" width="5.2" height="15.0" fill="rgb(213,15,37)" rx="2" ry="2" />
<text  x="369.58" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiberManagerUnsafe (4 samples, 0.07%)</title><rect x="943.5" y="1973" width="0.8" height="15.0" fill="rgb(247,144,20)" rx="2" ry="2" />
<text  x="946.50" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1119.4" y="1733" width="0.2" height="15.0" fill="rgb(234,111,15)" rx="2" ry="2" />
<text  x="1122.37" y="1743.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (5 samples, 0.09%)</title><rect x="238.8" y="1893" width="1.0" height="15.0" fill="rgb(210,63,25)" rx="2" ry="2" />
<text  x="241.80" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1155.4" y="1957" width="0.2" height="15.0" fill="rgb(251,83,33)" rx="2" ry="2" />
<text  x="1158.39" y="1967.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="95.7" y="1893" width="0.2" height="15.0" fill="rgb(225,99,27)" rx="2" ry="2" />
<text  x="98.72" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="202.0" y="1861" width="0.2" height="15.0" fill="rgb(231,218,47)" rx="2" ry="2" />
<text  x="204.97" y="1871.5" ></text>
</g>
<g >
<title>__ip_local_out (14 samples, 0.24%)</title><rect x="775.9" y="1637" width="2.8" height="15.0" fill="rgb(227,194,45)" rx="2" ry="2" />
<text  x="778.87" y="1647.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="605.0" y="1925" width="0.2" height="15.0" fill="rgb(237,80,34)" rx="2" ry="2" />
<text  x="608.03" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1082.1" y="1781" width="0.2" height="15.0" fill="rgb(238,68,6)" rx="2" ry="2" />
<text  x="1085.14" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="90.7" y="1909" width="0.2" height="15.0" fill="rgb(219,207,7)" rx="2" ry="2" />
<text  x="93.69" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="944.3" y="1845" width="0.2" height="15.0" fill="rgb(212,181,35)" rx="2" ry="2" />
<text  x="947.30" y="1855.5" ></text>
</g>
<g >
<title>tcp_mtup_init (1 samples, 0.02%)</title><rect x="845.7" y="1621" width="0.2" height="15.0" fill="rgb(210,38,32)" rx="2" ry="2" />
<text  x="848.70" y="1631.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1082.1" y="1765" width="0.2" height="15.0" fill="rgb(242,7,10)" rx="2" ry="2" />
<text  x="1085.14" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::ProxyRequestContext (3 samples, 0.05%)</title><rect x="921.4" y="2005" width="0.6" height="15.0" fill="rgb(237,61,20)" rx="2" ry="2" />
<text  x="924.36" y="2015.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="631.6" y="1845" width="0.2" height="15.0" fill="rgb(243,221,26)" rx="2" ry="2" />
<text  x="634.59" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="202.0" y="1749" width="0.2" height="15.0" fill="rgb(241,153,9)" rx="2" ry="2" />
<text  x="204.97" y="1759.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="12.6" y="1829" width="0.8" height="15.0" fill="rgb(216,29,53)" rx="2" ry="2" />
<text  x="15.62" y="1839.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.14%)</title><rect x="63.3" y="1925" width="1.6" height="15.0" fill="rgb(214,115,4)" rx="2" ry="2" />
<text  x="66.33" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="809.5" y="1381" width="0.2" height="15.0" fill="rgb(224,132,42)" rx="2" ry="2" />
<text  x="812.48" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5 samples, 0.09%)</title><rect x="605.8" y="1989" width="1.0" height="15.0" fill="rgb(222,113,38)" rx="2" ry="2" />
<text  x="608.84" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="633.4" y="1861" width="0.2" height="15.0" fill="rgb(216,94,15)" rx="2" ry="2" />
<text  x="636.40" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeStorageReplyCommon&lt;facebook::memcache::McSetReply&gt; (1 samples, 0.02%)</title><rect x="126.9" y="37" width="0.2" height="15.0" fill="rgb(208,109,36)" rx="2" ry="2" />
<text  x="129.91" y="47.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="317.3" y="1973" width="0.8" height="15.0" fill="rgb(237,80,34)" rx="2" ry="2" />
<text  x="320.27" y="1983.5" ></text>
</g>
<g >
<title>ip_copy_addrs (15 samples, 0.26%)</title><rect x="771.6" y="1669" width="3.1" height="15.0" fill="rgb(234,52,51)" rx="2" ry="2" />
<text  x="774.65" y="1679.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="588.3" y="1797" width="0.2" height="15.0" fill="rgb(233,164,5)" rx="2" ry="2" />
<text  x="591.33" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="454.7" y="1893" width="0.2" height="15.0" fill="rgb(252,6,49)" rx="2" ry="2" />
<text  x="457.71" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1477" width="0.2" height="15.0" fill="rgb(218,132,9)" rx="2" ry="2" />
<text  x="345.03" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="783.3" y="1445" width="0.8" height="15.0" fill="rgb(240,150,6)" rx="2" ry="2" />
<text  x="786.32" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (7 samples, 0.12%)</title><rect x="1182.8" y="2037" width="1.4" height="15.0" fill="rgb(210,13,23)" rx="2" ry="2" />
<text  x="1185.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="927.4" y="2005" width="0.4" height="15.0" fill="rgb(225,216,2)" rx="2" ry="2" />
<text  x="930.40" y="2015.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (18 samples, 0.31%)</title><rect x="682.7" y="1893" width="3.6" height="15.0" fill="rgb(231,116,41)" rx="2" ry="2" />
<text  x="685.70" y="1903.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="19.1" y="1573" width="0.2" height="15.0" fill="rgb(238,227,23)" rx="2" ry="2" />
<text  x="22.06" y="1583.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::add (91 samples, 1.55%)</title><rect x="225.9" y="1973" width="18.3" height="15.0" fill="rgb(208,180,22)" rx="2" ry="2" />
<text  x="228.92" y="1983.5" ></text>
</g>
<g >
<title>locks_free_lock_context (1 samples, 0.02%)</title><rect x="733.6" y="1685" width="0.2" height="15.0" fill="rgb(207,140,5)" rx="2" ry="2" />
<text  x="736.62" y="1695.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="346.7" y="1925" width="0.2" height="15.0" fill="rgb(211,124,42)" rx="2" ry="2" />
<text  x="349.65" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1119.2" y="1845" width="0.4" height="15.0" fill="rgb(233,101,20)" rx="2" ry="2" />
<text  x="1122.17" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (23 samples, 0.39%)</title><rect x="1174.9" y="2021" width="4.6" height="15.0" fill="rgb(215,174,40)" rx="2" ry="2" />
<text  x="1177.91" y="2031.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="151.5" y="37" width="0.2" height="15.0" fill="rgb(238,63,48)" rx="2" ry="2" />
<text  x="154.46" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (9 samples, 0.15%)</title><rect x="544.3" y="1925" width="1.8" height="15.0" fill="rgb(254,44,27)" rx="2" ry="2" />
<text  x="547.26" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.4" y="1893" width="0.2" height="15.0" fill="rgb(251,95,22)" rx="2" ry="2" />
<text  x="890.35" y="1903.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (282 samples, 4.81%)</title><rect x="408.0" y="1989" width="56.8" height="15.0" fill="rgb(226,29,9)" rx="2" ry="2" />
<text  x="411.03" y="1999.5" >sys_ep..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="543.9" y="1893" width="0.2" height="15.0" fill="rgb(248,115,46)" rx="2" ry="2" />
<text  x="546.86" y="1903.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="571.4" y="1941" width="0.2" height="15.0" fill="rgb(235,87,10)" rx="2" ry="2" />
<text  x="574.43" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="750.1" y="1653" width="0.2" height="15.0" fill="rgb(249,94,12)" rx="2" ry="2" />
<text  x="753.12" y="1663.5" ></text>
</g>
<g >
<title>ixgbe_features_check (1 samples, 0.02%)</title><rect x="296.3" y="1653" width="0.2" height="15.0" fill="rgb(249,224,3)" rx="2" ry="2" />
<text  x="299.35" y="1663.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="99.7" y="1797" width="0.2" height="15.0" fill="rgb(236,160,42)" rx="2" ry="2" />
<text  x="102.75" y="1807.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (1 samples, 0.02%)</title><rect x="203.8" y="1957" width="0.2" height="15.0" fill="rgb(232,98,48)" rx="2" ry="2" />
<text  x="206.78" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="331.4" y="1893" width="0.2" height="15.0" fill="rgb(231,170,10)" rx="2" ry="2" />
<text  x="334.36" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="19.1" y="1509" width="0.2" height="15.0" fill="rgb(206,199,19)" rx="2" ry="2" />
<text  x="22.06" y="1519.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1150.8" y="1957" width="0.2" height="15.0" fill="rgb(245,37,0)" rx="2" ry="2" />
<text  x="1153.76" y="1967.5" ></text>
</g>
<g >
<title>__zone_watermark_ok (1 samples, 0.02%)</title><rect x="378.9" y="1797" width="0.2" height="15.0" fill="rgb(224,123,20)" rx="2" ry="2" />
<text  x="381.85" y="1807.5" ></text>
</g>
<g >
<title>_copy_from_user (2 samples, 0.03%)</title><rect x="406.4" y="1989" width="0.4" height="15.0" fill="rgb(205,177,24)" rx="2" ry="2" />
<text  x="409.42" y="1999.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="81.8" y="1845" width="0.2" height="15.0" fill="rgb(248,77,3)" rx="2" ry="2" />
<text  x="84.84" y="1855.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="903.3" y="1701" width="0.2" height="15.0" fill="rgb(250,153,25)" rx="2" ry="2" />
<text  x="906.25" y="1711.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (4 samples, 0.07%)</title><rect x="959.8" y="1973" width="0.8" height="15.0" fill="rgb(243,156,18)" rx="2" ry="2" />
<text  x="962.80" y="1983.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.14%)</title><rect x="10.6" y="1925" width="1.6" height="15.0" fill="rgb(214,194,36)" rx="2" ry="2" />
<text  x="13.60" y="1935.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="661.8" y="1845" width="0.2" height="15.0" fill="rgb(219,128,4)" rx="2" ry="2" />
<text  x="664.78" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="170.8" y="1973" width="0.6" height="15.0" fill="rgb(218,160,25)" rx="2" ry="2" />
<text  x="173.78" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="174.4" y="1893" width="0.2" height="15.0" fill="rgb(221,147,48)" rx="2" ry="2" />
<text  x="177.40" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="891.0" y="1909" width="0.4" height="15.0" fill="rgb(210,184,37)" rx="2" ry="2" />
<text  x="893.98" y="1919.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="270.0" y="1813" width="0.2" height="15.0" fill="rgb(209,222,40)" rx="2" ry="2" />
<text  x="272.99" y="1823.5" ></text>
</g>
<g >
<title>sys_accept4 (297 samples, 5.06%)</title><rect x="330.0" y="1989" width="59.7" height="15.0" fill="rgb(236,211,10)" rx="2" ry="2" />
<text  x="332.95" y="1999.5" >sys_ac..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::applySocketOptions (92 samples, 1.57%)</title><rect x="672.6" y="2037" width="18.6" height="15.0" fill="rgb(215,179,29)" rx="2" ry="2" />
<text  x="675.64" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="152.3" y="85" width="0.2" height="15.0" fill="rgb(209,162,24)" rx="2" ry="2" />
<text  x="155.27" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt;, true&gt;::_Hashtable_ebo_helper (2 samples, 0.03%)</title><rect x="576.1" y="1957" width="0.4" height="15.0" fill="rgb(214,202,20)" rx="2" ry="2" />
<text  x="579.05" y="1967.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="464.6" y="1653" width="0.2" height="15.0" fill="rgb(206,161,49)" rx="2" ry="2" />
<text  x="467.57" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="741.9" y="1653" width="0.2" height="15.0" fill="rgb(252,111,12)" rx="2" ry="2" />
<text  x="744.87" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="944.3" y="1829" width="0.2" height="15.0" fill="rgb(241,205,9)" rx="2" ry="2" />
<text  x="947.30" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.12%)</title><rect x="998.4" y="1989" width="1.4" height="15.0" fill="rgb(218,23,12)" rx="2" ry="2" />
<text  x="1001.43" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="523.3" y="1877" width="0.2" height="15.0" fill="rgb(214,30,41)" rx="2" ry="2" />
<text  x="526.33" y="1887.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (17 samples, 0.29%)</title><rect x="301.4" y="1829" width="3.4" height="15.0" fill="rgb(225,86,6)" rx="2" ry="2" />
<text  x="304.38" y="1839.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (3 samples, 0.05%)</title><rect x="371.8" y="1893" width="0.6" height="15.0" fill="rgb(213,225,52)" rx="2" ry="2" />
<text  x="374.81" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="285.7" y="1701" width="0.6" height="15.0" fill="rgb(247,140,52)" rx="2" ry="2" />
<text  x="288.68" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1109.3" y="1877" width="0.2" height="15.0" fill="rgb(254,211,27)" rx="2" ry="2" />
<text  x="1112.31" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="513.3" y="1989" width="0.2" height="15.0" fill="rgb(216,149,20)" rx="2" ry="2" />
<text  x="516.27" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="352.7" y="1925" width="0.6" height="15.0" fill="rgb(240,24,15)" rx="2" ry="2" />
<text  x="355.69" y="1935.5" ></text>
</g>
<g >
<title>skb_put (1 samples, 0.02%)</title><rect x="262.1" y="1893" width="0.2" height="15.0" fill="rgb(252,213,22)" rx="2" ry="2" />
<text  x="265.14" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="441.0" y="1877" width="0.2" height="15.0" fill="rgb(236,131,31)" rx="2" ry="2" />
<text  x="444.03" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="944.9" y="1941" width="0.4" height="15.0" fill="rgb(227,148,31)" rx="2" ry="2" />
<text  x="947.90" y="1951.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="191.3" y="1893" width="0.2" height="15.0" fill="rgb(208,158,21)" rx="2" ry="2" />
<text  x="194.31" y="1903.5" ></text>
</g>
<g >
<title>folly::tryTo&lt;int&gt; (46 samples, 0.78%)</title><rect x="1001.9" y="2037" width="9.2" height="15.0" fill="rgb(241,42,15)" rx="2" ry="2" />
<text  x="1004.85" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1072.9" y="1909" width="0.2" height="15.0" fill="rgb(242,45,8)" rx="2" ry="2" />
<text  x="1075.89" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="913.3" y="1989" width="0.2" height="15.0" fill="rgb(239,129,22)" rx="2" ry="2" />
<text  x="916.31" y="1999.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="778.5" y="1317" width="0.2" height="15.0" fill="rgb(226,166,44)" rx="2" ry="2" />
<text  x="781.49" y="1327.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="454.7" y="1653" width="0.2" height="15.0" fill="rgb(254,68,7)" rx="2" ry="2" />
<text  x="457.71" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="464.4" y="1637" width="0.2" height="15.0" fill="rgb(236,0,24)" rx="2" ry="2" />
<text  x="467.37" y="1647.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="492.3" y="1685" width="0.2" height="15.0" fill="rgb(232,9,24)" rx="2" ry="2" />
<text  x="495.34" y="1695.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="257.3" y="1941" width="0.2" height="15.0" fill="rgb(207,211,26)" rx="2" ry="2" />
<text  x="260.31" y="1951.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (1 samples, 0.02%)</title><rect x="27.3" y="1989" width="0.2" height="15.0" fill="rgb(215,32,18)" rx="2" ry="2" />
<text  x="30.31" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="257.5" y="1925" width="0.2" height="15.0" fill="rgb(214,89,29)" rx="2" ry="2" />
<text  x="260.51" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="812.5" y="1413" width="0.2" height="15.0" fill="rgb(241,218,16)" rx="2" ry="2" />
<text  x="815.50" y="1423.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="151.1" y="37" width="0.2" height="15.0" fill="rgb(246,133,0)" rx="2" ry="2" />
<text  x="154.06" y="47.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="779.3" y="1621" width="0.2" height="15.0" fill="rgb(232,184,21)" rx="2" ry="2" />
<text  x="782.29" y="1631.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="891.0" y="1893" width="0.4" height="15.0" fill="rgb(211,60,3)" rx="2" ry="2" />
<text  x="893.98" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="202.0" y="1717" width="0.2" height="15.0" fill="rgb(208,79,41)" rx="2" ry="2" />
<text  x="204.97" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (168 samples, 2.86%)</title><rect x="123.1" y="1989" width="33.8" height="15.0" fill="rgb(223,75,9)" rx="2" ry="2" />
<text  x="126.09" y="1999.5" >[u..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="861.8" y="1941" width="0.2" height="15.0" fill="rgb(205,128,16)" rx="2" ry="2" />
<text  x="864.80" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="750.1" y="1749" width="0.2" height="15.0" fill="rgb(243,221,41)" rx="2" ry="2" />
<text  x="753.12" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1155.4" y="1861" width="0.2" height="15.0" fill="rgb(208,131,12)" rx="2" ry="2" />
<text  x="1158.39" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="433.6" y="1605" width="0.2" height="15.0" fill="rgb(236,206,21)" rx="2" ry="2" />
<text  x="436.58" y="1615.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (2 samples, 0.03%)</title><rect x="541.8" y="1957" width="0.4" height="15.0" fill="rgb(209,116,33)" rx="2" ry="2" />
<text  x="544.85" y="1967.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="153.7" y="917" width="0.2" height="15.0" fill="rgb(243,162,1)" rx="2" ry="2" />
<text  x="156.68" y="927.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="749.5" y="1749" width="0.4" height="15.0" fill="rgb(238,25,46)" rx="2" ry="2" />
<text  x="752.51" y="1759.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="516.7" y="1781" width="0.2" height="15.0" fill="rgb(251,150,41)" rx="2" ry="2" />
<text  x="519.69" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="265.2" y="1733" width="0.2" height="15.0" fill="rgb(211,192,39)" rx="2" ry="2" />
<text  x="268.16" y="1743.5" ></text>
</g>
<g >
<title>std::condition_variable::__wait_until_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(227,35,32)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (2 samples, 0.03%)</title><rect x="1174.3" y="2037" width="0.4" height="15.0" fill="rgb(213,21,17)" rx="2" ry="2" />
<text  x="1177.30" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="464.4" y="1733" width="0.4" height="15.0" fill="rgb(208,41,6)" rx="2" ry="2" />
<text  x="467.37" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="920.6" y="1989" width="0.2" height="15.0" fill="rgb(251,162,26)" rx="2" ry="2" />
<text  x="923.56" y="1999.5" ></text>
</g>
<g >
<title>inet_put_port (1 samples, 0.02%)</title><rect x="920.6" y="1685" width="0.2" height="15.0" fill="rgb(241,192,30)" rx="2" ry="2" />
<text  x="923.56" y="1695.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (5 samples, 0.09%)</title><rect x="122.1" y="2021" width="1.0" height="15.0" fill="rgb(232,163,22)" rx="2" ry="2" />
<text  x="125.08" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (9 samples, 0.15%)</title><rect x="438.4" y="1893" width="1.8" height="15.0" fill="rgb(237,157,37)" rx="2" ry="2" />
<text  x="441.41" y="1903.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="19.3" y="1861" width="0.2" height="15.0" fill="rgb(221,31,43)" rx="2" ry="2" />
<text  x="22.26" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writeImpl (63 samples, 1.07%)</title><rect x="876.9" y="1973" width="12.7" height="15.0" fill="rgb(253,122,45)" rx="2" ry="2" />
<text  x="879.89" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="652.1" y="2021" width="0.2" height="15.0" fill="rgb(244,122,27)" rx="2" ry="2" />
<text  x="655.12" y="2031.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.03%)</title><rect x="989.2" y="1829" width="0.4" height="15.0" fill="rgb(235,13,24)" rx="2" ry="2" />
<text  x="992.17" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="295.7" y="1621" width="0.2" height="15.0" fill="rgb(209,2,43)" rx="2" ry="2" />
<text  x="298.74" y="1631.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="191.3" y="1925" width="0.2" height="15.0" fill="rgb(253,52,44)" rx="2" ry="2" />
<text  x="194.31" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (2 samples, 0.03%)</title><rect x="571.4" y="1973" width="0.4" height="15.0" fill="rgb(250,177,29)" rx="2" ry="2" />
<text  x="574.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="816.5" y="1445" width="0.2" height="15.0" fill="rgb(234,228,53)" rx="2" ry="2" />
<text  x="819.52" y="1455.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="533.2" y="1781" width="0.2" height="15.0" fill="rgb(210,38,46)" rx="2" ry="2" />
<text  x="536.19" y="1791.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (24 samples, 0.41%)</title><rect x="987.4" y="1973" width="4.8" height="15.0" fill="rgb(218,201,5)" rx="2" ry="2" />
<text  x="990.36" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="75.8" y="1877" width="0.2" height="15.0" fill="rgb(218,104,45)" rx="2" ry="2" />
<text  x="78.80" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="115.0" y="1701" width="0.2" height="15.0" fill="rgb(234,43,0)" rx="2" ry="2" />
<text  x="118.04" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="903.3" y="1845" width="0.2" height="15.0" fill="rgb(237,95,12)" rx="2" ry="2" />
<text  x="906.25" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="464.2" y="1717" width="0.2" height="15.0" fill="rgb(205,162,40)" rx="2" ry="2" />
<text  x="467.17" y="1727.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (6 samples, 0.10%)</title><rect x="971.3" y="2021" width="1.2" height="15.0" fill="rgb(225,125,14)" rx="2" ry="2" />
<text  x="974.27" y="2031.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="812.5" y="1317" width="0.2" height="15.0" fill="rgb(232,137,49)" rx="2" ry="2" />
<text  x="815.50" y="1327.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="516.7" y="1573" width="0.2" height="15.0" fill="rgb(249,68,17)" rx="2" ry="2" />
<text  x="519.69" y="1583.5" ></text>
</g>
<g >
<title>__slab_free (2 samples, 0.03%)</title><rect x="1102.9" y="1445" width="0.4" height="15.0" fill="rgb(244,41,1)" rx="2" ry="2" />
<text  x="1105.87" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::destructor_impl&lt;boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="196.3" y="1957" width="1.2" height="15.0" fill="rgb(207,44,34)" rx="2" ry="2" />
<text  x="199.34" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (1 samples, 0.02%)</title><rect x="979.1" y="2005" width="0.2" height="15.0" fill="rgb(226,46,19)" rx="2" ry="2" />
<text  x="982.11" y="2015.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (11 samples, 0.19%)</title><rect x="816.7" y="1717" width="2.2" height="15.0" fill="rgb(251,16,2)" rx="2" ry="2" />
<text  x="819.72" y="1727.5" ></text>
</g>
<g >
<title>boost::iterators::detail::iterator_facade_base&lt;folly::BitIterator&lt;unsigned long*&gt;, bool, std::random_access_iterator_tag, folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;, long, false, false&gt;::operator* (2 samples, 0.03%)</title><rect x="526.1" y="1973" width="0.5" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="529.15" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="454.7" y="1717" width="0.2" height="15.0" fill="rgb(211,225,9)" rx="2" ry="2" />
<text  x="457.71" y="1727.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (24 samples, 0.41%)</title><rect x="1037.3" y="2037" width="4.8" height="15.0" fill="rgb(251,159,13)" rx="2" ry="2" />
<text  x="1040.27" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="550.7" y="1957" width="0.4" height="15.0" fill="rgb(215,93,27)" rx="2" ry="2" />
<text  x="553.70" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="492.3" y="1653" width="0.2" height="15.0" fill="rgb(231,167,28)" rx="2" ry="2" />
<text  x="495.34" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="552.5" y="1941" width="0.2" height="15.0" fill="rgb(248,224,37)" rx="2" ry="2" />
<text  x="555.51" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1119.6" y="1941" width="0.2" height="15.0" fill="rgb(239,59,6)" rx="2" ry="2" />
<text  x="1122.57" y="1951.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="916.7" y="1909" width="0.2" height="15.0" fill="rgb(205,221,4)" rx="2" ry="2" />
<text  x="919.73" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (36 samples, 0.61%)</title><rect x="355.5" y="1925" width="7.3" height="15.0" fill="rgb(224,105,34)" rx="2" ry="2" />
<text  x="358.51" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="579.5" y="1989" width="0.2" height="15.0" fill="rgb(212,191,42)" rx="2" ry="2" />
<text  x="582.47" y="1999.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="775.5" y="1541" width="0.2" height="15.0" fill="rgb(246,37,6)" rx="2" ry="2" />
<text  x="778.47" y="1551.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="643.7" y="1989" width="0.2" height="15.0" fill="rgb(244,81,37)" rx="2" ry="2" />
<text  x="646.67" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="522.5" y="1957" width="0.2" height="15.0" fill="rgb(215,185,1)" rx="2" ry="2" />
<text  x="525.53" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="674.1" y="1973" width="0.2" height="15.0" fill="rgb(221,120,32)" rx="2" ry="2" />
<text  x="677.05" y="1983.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="92.7" y="1957" width="0.4" height="15.0" fill="rgb(243,24,49)" rx="2" ry="2" />
<text  x="95.70" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="543.9" y="1829" width="0.2" height="15.0" fill="rgb(224,26,6)" rx="2" ry="2" />
<text  x="546.86" y="1839.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="721.3" y="1477" width="0.2" height="15.0" fill="rgb(245,69,20)" rx="2" ry="2" />
<text  x="724.34" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::StackCacheEntry, std::default_delete&lt;folly::fibers::StackCacheEntry&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="19.5" y="1941" width="0.2" height="15.0" fill="rgb(238,224,9)" rx="2" ry="2" />
<text  x="22.46" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::ShutdownSocketSet,  (3 samples, 0.05%)</title><rect x="842.5" y="1893" width="0.6" height="15.0" fill="rgb(234,202,15)" rx="2" ry="2" />
<text  x="845.48" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="312.4" y="1797" width="0.2" height="15.0" fill="rgb(219,174,35)" rx="2" ry="2" />
<text  x="315.45" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="570.2" y="2005" width="0.2" height="15.0" fill="rgb(213,196,12)" rx="2" ry="2" />
<text  x="573.22" y="2015.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="848.3" y="1909" width="0.2" height="15.0" fill="rgb(222,223,29)" rx="2" ry="2" />
<text  x="851.32" y="1919.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="83.9" y="1685" width="0.2" height="15.0" fill="rgb(228,135,45)" rx="2" ry="2" />
<text  x="86.85" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="316.1" y="1765" width="0.2" height="15.0" fill="rgb(230,98,37)" rx="2" ry="2" />
<text  x="319.07" y="1775.5" ></text>
</g>
<g >
<title>ntohs@plt (1 samples, 0.02%)</title><rect x="581.7" y="1925" width="0.2" height="15.0" fill="rgb(246,131,17)" rx="2" ry="2" />
<text  x="584.69" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="691.6" y="1989" width="0.2" height="15.0" fill="rgb(222,67,47)" rx="2" ry="2" />
<text  x="694.56" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (8 samples, 0.14%)</title><rect x="580.3" y="1941" width="1.6" height="15.0" fill="rgb(216,191,11)" rx="2" ry="2" />
<text  x="583.28" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (31 samples, 0.53%)</title><rect x="1100.5" y="1797" width="6.2" height="15.0" fill="rgb(217,36,47)" rx="2" ry="2" />
<text  x="1103.45" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="510.5" y="1829" width="0.4" height="15.0" fill="rgb(219,88,8)" rx="2" ry="2" />
<text  x="513.45" y="1839.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="644.9" y="1909" width="0.4" height="15.0" fill="rgb(236,100,24)" rx="2" ry="2" />
<text  x="647.87" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_begin (6 samples, 0.10%)</title><rect x="839.9" y="1893" width="1.2" height="15.0" fill="rgb(237,58,4)" rx="2" ry="2" />
<text  x="842.86" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="272.2" y="1797" width="0.4" height="15.0" fill="rgb(231,221,52)" rx="2" ry="2" />
<text  x="275.20" y="1807.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="917.1" y="1973" width="0.4" height="15.0" fill="rgb(235,156,20)" rx="2" ry="2" />
<text  x="920.14" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="486.3" y="1813" width="0.6" height="15.0" fill="rgb(214,33,23)" rx="2" ry="2" />
<text  x="489.31" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="740.7" y="1525" width="0.2" height="15.0" fill="rgb(223,191,22)" rx="2" ry="2" />
<text  x="743.66" y="1535.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="767.4" y="1493" width="0.2" height="15.0" fill="rgb(217,186,51)" rx="2" ry="2" />
<text  x="770.42" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="238.0" y="1765" width="0.2" height="15.0" fill="rgb(226,26,42)" rx="2" ry="2" />
<text  x="240.99" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="433.6" y="1733" width="0.2" height="15.0" fill="rgb(215,87,24)" rx="2" ry="2" />
<text  x="436.58" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="238.2" y="1909" width="0.2" height="15.0" fill="rgb(245,62,12)" rx="2" ry="2" />
<text  x="241.19" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::isKeyValid&lt;true&gt; (4 samples, 0.07%)</title><rect x="914.1" y="1973" width="0.8" height="15.0" fill="rgb(222,42,33)" rx="2" ry="2" />
<text  x="917.12" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (10 samples, 0.17%)</title><rect x="1150.0" y="2021" width="2.0" height="15.0" fill="rgb(214,41,50)" rx="2" ry="2" />
<text  x="1152.96" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="529.4" y="1973" width="0.2" height="15.0" fill="rgb(222,63,41)" rx="2" ry="2" />
<text  x="532.37" y="1983.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (1 samples, 0.02%)</title><rect x="76.8" y="1861" width="0.2" height="15.0" fill="rgb(240,5,51)" rx="2" ry="2" />
<text  x="79.81" y="1871.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (237 samples, 4.04%)</title><rect x="262.7" y="1893" width="47.7" height="15.0" fill="rgb(216,225,16)" rx="2" ry="2" />
<text  x="265.74" y="1903.5" >tcp_..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="887.0" y="1845" width="0.2" height="15.0" fill="rgb(216,62,0)" rx="2" ry="2" />
<text  x="889.95" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="65.1" y="1781" width="0.2" height="15.0" fill="rgb(207,54,6)" rx="2" ry="2" />
<text  x="68.14" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="570.6" y="2005" width="0.2" height="15.0" fill="rgb(206,210,13)" rx="2" ry="2" />
<text  x="573.62" y="2015.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (2 samples, 0.03%)</title><rect x="974.1" y="2037" width="0.4" height="15.0" fill="rgb(210,110,45)" rx="2" ry="2" />
<text  x="977.08" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::nextCallback (4 samples, 0.07%)</title><rect x="26.5" y="1973" width="0.8" height="15.0" fill="rgb(205,213,41)" rx="2" ry="2" />
<text  x="29.50" y="1983.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="92.3" y="1957" width="0.4" height="15.0" fill="rgb(219,60,20)" rx="2" ry="2" />
<text  x="95.30" y="1967.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (66 samples, 1.13%)</title><rect x="582.1" y="1957" width="13.3" height="15.0" fill="rgb(238,146,31)" rx="2" ry="2" />
<text  x="585.09" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1148.7" y="1973" width="0.2" height="15.0" fill="rgb(216,168,12)" rx="2" ry="2" />
<text  x="1151.75" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1087.6" y="1909" width="0.6" height="15.0" fill="rgb(237,20,27)" rx="2" ry="2" />
<text  x="1090.58" y="1919.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="346.5" y="1909" width="0.2" height="15.0" fill="rgb(240,27,35)" rx="2" ry="2" />
<text  x="349.45" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (204 samples, 3.48%)</title><rect x="537.0" y="2021" width="41.1" height="15.0" fill="rgb(245,3,24)" rx="2" ry="2" />
<text  x="540.02" y="2031.5" >fol..</text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (3 samples, 0.05%)</title><rect x="935.8" y="1925" width="0.7" height="15.0" fill="rgb(248,41,33)" rx="2" ry="2" />
<text  x="938.85" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getLocalAddress (82 samples, 1.40%)</title><rect x="579.5" y="2021" width="16.5" height="15.0" fill="rgb(223,57,1)" rx="2" ry="2" />
<text  x="582.47" y="2031.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (1 samples, 0.02%)</title><rect x="851.7" y="1845" width="0.2" height="15.0" fill="rgb(245,50,35)" rx="2" ry="2" />
<text  x="854.74" y="1855.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="968.0" y="2005" width="0.2" height="15.0" fill="rgb(229,49,44)" rx="2" ry="2" />
<text  x="971.05" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1086.8" y="1845" width="0.2" height="15.0" fill="rgb(212,59,46)" rx="2" ry="2" />
<text  x="1089.77" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect x="607.2" y="2021" width="0.2" height="15.0" fill="rgb(245,215,25)" rx="2" ry="2" />
<text  x="610.24" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="72.2" y="1973" width="0.4" height="15.0" fill="rgb(251,134,21)" rx="2" ry="2" />
<text  x="75.18" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="19.3" y="1893" width="0.2" height="15.0" fill="rgb(205,30,9)" rx="2" ry="2" />
<text  x="22.26" y="1903.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (1 samples, 0.02%)</title><rect x="747.1" y="1605" width="0.2" height="15.0" fill="rgb(217,93,24)" rx="2" ry="2" />
<text  x="750.10" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="162.3" y="1957" width="0.4" height="15.0" fill="rgb(243,138,8)" rx="2" ry="2" />
<text  x="165.33" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="809.3" y="1605" width="0.2" height="15.0" fill="rgb(220,110,2)" rx="2" ry="2" />
<text  x="812.28" y="1615.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="257.5" y="1605" width="0.2" height="15.0" fill="rgb(214,77,20)" rx="2" ry="2" />
<text  x="260.51" y="1615.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="669.2" y="1845" width="0.2" height="15.0" fill="rgb(250,4,13)" rx="2" ry="2" />
<text  x="672.22" y="1855.5" ></text>
</g>
<g >
<title>__check_object_size (5 samples, 0.09%)</title><rect x="590.9" y="1845" width="1.1" height="15.0" fill="rgb(240,118,6)" rx="2" ry="2" />
<text  x="593.94" y="1855.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (5 samples, 0.09%)</title><rect x="647.7" y="2021" width="1.0" height="15.0" fill="rgb(248,87,22)" rx="2" ry="2" />
<text  x="650.69" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="533.2" y="1925" width="0.2" height="15.0" fill="rgb(232,176,42)" rx="2" ry="2" />
<text  x="536.19" y="1935.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="523.3" y="1813" width="0.2" height="15.0" fill="rgb(216,1,31)" rx="2" ry="2" />
<text  x="526.33" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="151.3" y="85" width="0.2" height="15.0" fill="rgb(233,141,3)" rx="2" ry="2" />
<text  x="154.26" y="95.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="616.5" y="1941" width="0.2" height="15.0" fill="rgb(249,13,45)" rx="2" ry="2" />
<text  x="619.50" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="891.2" y="1861" width="0.2" height="15.0" fill="rgb(208,210,48)" rx="2" ry="2" />
<text  x="894.18" y="1871.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="441.0" y="1621" width="0.2" height="15.0" fill="rgb(222,20,6)" rx="2" ry="2" />
<text  x="444.03" y="1631.5" ></text>
</g>
<g >
<title>__fdget (16 samples, 0.27%)</title><rect x="313.0" y="1941" width="3.3" height="15.0" fill="rgb(225,226,31)" rx="2" ry="2" />
<text  x="316.05" y="1951.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1096.2" y="1749" width="0.2" height="15.0" fill="rgb(221,216,34)" rx="2" ry="2" />
<text  x="1099.23" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="554.7" y="1973" width="0.2" height="15.0" fill="rgb(209,208,34)" rx="2" ry="2" />
<text  x="557.72" y="1983.5" ></text>
</g>
<g >
<title>sch_direct_xmit (52 samples, 0.89%)</title><rect x="286.9" y="1701" width="10.5" height="15.0" fill="rgb(218,46,11)" rx="2" ry="2" />
<text  x="289.89" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="407.8" y="1973" width="0.2" height="15.0" fill="rgb(211,49,9)" rx="2" ry="2" />
<text  x="410.83" y="1983.5" ></text>
</g>
<g >
<title>apparmor_sk_clone_security (1 samples, 0.02%)</title><rect x="783.3" y="1253" width="0.2" height="15.0" fill="rgb(214,142,23)" rx="2" ry="2" />
<text  x="786.32" y="1263.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (4 samples, 0.07%)</title><rect x="235.2" y="1781" width="0.8" height="15.0" fill="rgb(221,131,11)" rx="2" ry="2" />
<text  x="238.17" y="1791.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterClientBase,  (7 samples, 0.12%)</title><rect x="922.2" y="2005" width="1.4" height="15.0" fill="rgb(235,174,50)" rx="2" ry="2" />
<text  x="925.17" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="256.5" y="1765" width="0.2" height="15.0" fill="rgb(214,157,32)" rx="2" ry="2" />
<text  x="259.50" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (2 samples, 0.03%)</title><rect x="43.2" y="1909" width="0.4" height="15.0" fill="rgb(248,18,44)" rx="2" ry="2" />
<text  x="46.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="831.0" y="1541" width="0.2" height="15.0" fill="rgb(239,221,28)" rx="2" ry="2" />
<text  x="834.01" y="1551.5" ></text>
</g>
<g >
<title>ep_poll (203 samples, 3.46%)</title><rect x="470.0" y="1973" width="40.9" height="15.0" fill="rgb(250,184,20)" rx="2" ry="2" />
<text  x="473.01" y="1983.5" >ep_..</text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="12.6" y="1861" width="0.8" height="15.0" fill="rgb(224,164,16)" rx="2" ry="2" />
<text  x="15.62" y="1871.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (6 samples, 0.10%)</title><rect x="296.1" y="1685" width="1.3" height="15.0" fill="rgb(244,78,53)" rx="2" ry="2" />
<text  x="299.15" y="1695.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.14%)</title><rect x="390.1" y="2021" width="1.6" height="15.0" fill="rgb(211,223,38)" rx="2" ry="2" />
<text  x="393.12" y="2031.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="997.2" y="1989" width="0.2" height="15.0" fill="rgb(236,122,31)" rx="2" ry="2" />
<text  x="1000.22" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::doClose (1 samples, 0.02%)</title><rect x="853.7" y="1957" width="0.2" height="15.0" fill="rgb(207,137,7)" rx="2" ry="2" />
<text  x="856.75" y="1967.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.05%)</title><rect x="1078.1" y="1813" width="0.6" height="15.0" fill="rgb(245,191,25)" rx="2" ry="2" />
<text  x="1081.12" y="1823.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="937.3" y="1893" width="0.6" height="15.0" fill="rgb(239,178,30)" rx="2" ry="2" />
<text  x="940.26" y="1903.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="862.8" y="1685" width="0.2" height="15.0" fill="rgb(253,24,47)" rx="2" ry="2" />
<text  x="865.80" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (1 samples, 0.02%)</title><rect x="932.2" y="1989" width="0.2" height="15.0" fill="rgb(219,110,46)" rx="2" ry="2" />
<text  x="935.23" y="1999.5" ></text>
</g>
<g >
<title>tcp_init_tso_segs (1 samples, 0.02%)</title><rect x="812.7" y="1685" width="0.2" height="15.0" fill="rgb(217,137,1)" rx="2" ry="2" />
<text  x="815.70" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="56.7" y="1797" width="0.2" height="15.0" fill="rgb(207,187,25)" rx="2" ry="2" />
<text  x="59.68" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="944.3" y="1925" width="0.2" height="15.0" fill="rgb(226,137,42)" rx="2" ry="2" />
<text  x="947.30" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="593.2" y="1717" width="0.4" height="15.0" fill="rgb(211,104,37)" rx="2" ry="2" />
<text  x="596.16" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="844.7" y="1893" width="0.2" height="15.0" fill="rgb(234,179,37)" rx="2" ry="2" />
<text  x="847.69" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="548.9" y="1717" width="0.2" height="15.0" fill="rgb(228,93,41)" rx="2" ry="2" />
<text  x="551.89" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="535.0" y="1909" width="0.2" height="15.0" fill="rgb(242,79,54)" rx="2" ry="2" />
<text  x="538.00" y="1919.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="813.3" y="1669" width="0.4" height="15.0" fill="rgb(231,9,28)" rx="2" ry="2" />
<text  x="816.30" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (2 samples, 0.03%)</title><rect x="743.9" y="1765" width="0.4" height="15.0" fill="rgb(212,221,36)" rx="2" ry="2" />
<text  x="746.88" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.4" y="1909" width="0.2" height="15.0" fill="rgb(248,31,18)" rx="2" ry="2" />
<text  x="890.35" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="767.4" y="1541" width="0.2" height="15.0" fill="rgb(253,31,47)" rx="2" ry="2" />
<text  x="770.42" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="316.9" y="1973" width="0.2" height="15.0" fill="rgb(252,145,8)" rx="2" ry="2" />
<text  x="319.87" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="533.2" y="1797" width="0.2" height="15.0" fill="rgb(248,80,25)" rx="2" ry="2" />
<text  x="536.19" y="1807.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1152.2" y="2037" width="0.2" height="15.0" fill="rgb(254,128,35)" rx="2" ry="2" />
<text  x="1155.17" y="2047.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="831.8" y="1893" width="0.8" height="15.0" fill="rgb(239,191,4)" rx="2" ry="2" />
<text  x="834.81" y="1903.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="463.2" y="1973" width="0.6" height="15.0" fill="rgb(208,1,28)" rx="2" ry="2" />
<text  x="466.17" y="1983.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2 samples, 0.03%)</title><rect x="304.8" y="1829" width="0.4" height="15.0" fill="rgb(230,1,47)" rx="2" ry="2" />
<text  x="307.80" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (3 samples, 0.05%)</title><rect x="50.6" y="1877" width="0.7" height="15.0" fill="rgb(226,166,53)" rx="2" ry="2" />
<text  x="53.65" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber::State&gt; (1 samples, 0.02%)</title><rect x="169.4" y="1957" width="0.2" height="15.0" fill="rgb(254,214,25)" rx="2" ry="2" />
<text  x="172.37" y="1967.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 0.15%)</title><rect x="10.4" y="1973" width="1.8" height="15.0" fill="rgb(247,205,53)" rx="2" ry="2" />
<text  x="13.40" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="100.6" y="1829" width="0.2" height="15.0" fill="rgb(222,167,52)" rx="2" ry="2" />
<text  x="103.55" y="1839.5" ></text>
</g>
<g >
<title>rb_erase_cached (17 samples, 0.29%)</title><rect x="454.9" y="1957" width="3.4" height="15.0" fill="rgb(241,9,11)" rx="2" ry="2" />
<text  x="457.91" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="935.0" y="1925" width="0.2" height="15.0" fill="rgb(227,180,32)" rx="2" ry="2" />
<text  x="938.04" y="1935.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="171.0" y="1925" width="0.2" height="15.0" fill="rgb(212,122,29)" rx="2" ry="2" />
<text  x="173.98" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="888.2" y="1893" width="0.2" height="15.0" fill="rgb(219,172,2)" rx="2" ry="2" />
<text  x="891.16" y="1903.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1075.9" y="1781" width="0.2" height="15.0" fill="rgb(220,198,44)" rx="2" ry="2" />
<text  x="1078.90" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1149.2" y="1781" width="0.2" height="15.0" fill="rgb(210,52,50)" rx="2" ry="2" />
<text  x="1152.15" y="1791.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="631.0" y="1829" width="0.2" height="15.0" fill="rgb(253,17,3)" rx="2" ry="2" />
<text  x="633.99" y="1839.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="815.3" y="1557" width="0.8" height="15.0" fill="rgb(218,168,33)" rx="2" ry="2" />
<text  x="818.31" y="1567.5" ></text>
</g>
<g >
<title>__fput (523 samples, 8.92%)</title><rect x="717.3" y="1813" width="105.3" height="15.0" fill="rgb(235,5,29)" rx="2" ry="2" />
<text  x="720.32" y="1823.5" >__fput</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="1146.3" y="2005" width="0.2" height="15.0" fill="rgb(235,131,49)" rx="2" ry="2" />
<text  x="1149.33" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (1 samples, 0.02%)</title><rect x="905.1" y="2005" width="0.2" height="15.0" fill="rgb(214,70,37)" rx="2" ry="2" />
<text  x="908.06" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1058.2" y="1925" width="0.2" height="15.0" fill="rgb(235,71,3)" rx="2" ry="2" />
<text  x="1061.20" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="632.6" y="1941" width="0.8" height="15.0" fill="rgb(206,53,13)" rx="2" ry="2" />
<text  x="635.60" y="1951.5" ></text>
</g>
<g >
<title>jump_fcontext (1 samples, 0.02%)</title><rect x="168.2" y="1941" width="0.2" height="15.0" fill="rgb(222,9,27)" rx="2" ry="2" />
<text  x="171.17" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::getCurTime (2 samples, 0.03%)</title><rect x="523.5" y="1989" width="0.4" height="15.0" fill="rgb(217,164,53)" rx="2" ry="2" />
<text  x="526.53" y="1999.5" ></text>
</g>
<g >
<title>swiotlb_map_page (1 samples, 0.02%)</title><rect x="795.0" y="1493" width="0.2" height="15.0" fill="rgb(230,224,4)" rx="2" ry="2" />
<text  x="797.99" y="1503.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="486.3" y="1765" width="0.2" height="15.0" fill="rgb(225,19,36)" rx="2" ry="2" />
<text  x="489.31" y="1775.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="152.3" y="165" width="0.2" height="15.0" fill="rgb(252,198,27)" rx="2" ry="2" />
<text  x="155.27" y="175.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="961.2" y="2005" width="0.2" height="15.0" fill="rgb(234,118,8)" rx="2" ry="2" />
<text  x="964.20" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="441.0" y="1781" width="0.2" height="15.0" fill="rgb(225,72,29)" rx="2" ry="2" />
<text  x="444.03" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="151.5" y="85" width="0.2" height="15.0" fill="rgb(238,151,48)" rx="2" ry="2" />
<text  x="154.46" y="95.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="672.4" y="1845" width="0.2" height="15.0" fill="rgb(242,203,26)" rx="2" ry="2" />
<text  x="675.44" y="1855.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="12.6" y="1941" width="0.8" height="15.0" fill="rgb(234,140,43)" rx="2" ry="2" />
<text  x="15.62" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="1164.4" y="1861" width="0.2" height="15.0" fill="rgb(214,227,0)" rx="2" ry="2" />
<text  x="1167.44" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="207.4" y="1957" width="0.2" height="15.0" fill="rgb(247,154,21)" rx="2" ry="2" />
<text  x="210.40" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="83.9" y="1893" width="0.4" height="15.0" fill="rgb(232,50,54)" rx="2" ry="2" />
<text  x="86.85" y="1903.5" ></text>
</g>
<g >
<title>ip_output (95 samples, 1.62%)</title><rect x="778.7" y="1637" width="19.1" height="15.0" fill="rgb(238,76,7)" rx="2" ry="2" />
<text  x="781.69" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="926.2" y="1989" width="0.2" height="15.0" fill="rgb(240,8,41)" rx="2" ry="2" />
<text  x="929.19" y="1999.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="464.2" y="1733" width="0.2" height="15.0" fill="rgb(225,75,17)" rx="2" ry="2" />
<text  x="467.17" y="1743.5" ></text>
</g>
<g >
<title>sys_epoll_wait (203 samples, 3.46%)</title><rect x="470.0" y="1989" width="40.9" height="15.0" fill="rgb(254,37,22)" rx="2" ry="2" />
<text  x="473.01" y="1999.5" >sys..</text>
</g>
<g >
<title>process_backlog (9 samples, 0.15%)</title><rect x="282.3" y="1653" width="1.8" height="15.0" fill="rgb(234,8,46)" rx="2" ry="2" />
<text  x="285.26" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="862.8" y="1941" width="0.2" height="15.0" fill="rgb(243,134,40)" rx="2" ry="2" />
<text  x="865.80" y="1951.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="370.0" y="1861" width="0.2" height="15.0" fill="rgb(232,66,19)" rx="2" ry="2" />
<text  x="373.00" y="1871.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="1146.1" y="1973" width="0.2" height="15.0" fill="rgb(210,155,13)" rx="2" ry="2" />
<text  x="1149.13" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (161 samples, 2.75%)</title><rect x="928.8" y="2021" width="32.4" height="15.0" fill="rgb(238,208,1)" rx="2" ry="2" />
<text  x="931.81" y="2031.5" >[u..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="407.2" y="1973" width="0.2" height="15.0" fill="rgb(222,202,47)" rx="2" ry="2" />
<text  x="410.22" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="491.5" y="1733" width="0.2" height="15.0" fill="rgb(237,137,37)" rx="2" ry="2" />
<text  x="494.54" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="71.0" y="1909" width="0.2" height="15.0" fill="rgb(230,148,0)" rx="2" ry="2" />
<text  x="73.97" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::setWaiter (6 samples, 0.10%)</title><rect x="985.8" y="1909" width="1.2" height="15.0" fill="rgb(217,106,1)" rx="2" ry="2" />
<text  x="988.75" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="916.9" y="1733" width="0.2" height="15.0" fill="rgb(212,195,21)" rx="2" ry="2" />
<text  x="919.93" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="97.1" y="1989" width="0.2" height="15.0" fill="rgb(225,220,33)" rx="2" ry="2" />
<text  x="100.13" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.09%)</title><rect x="918.9" y="1989" width="1.1" height="15.0" fill="rgb(253,218,51)" rx="2" ry="2" />
<text  x="921.95" y="1999.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="721.3" y="1429" width="0.2" height="15.0" fill="rgb(247,200,27)" rx="2" ry="2" />
<text  x="724.34" y="1439.5" ></text>
</g>
<g >
<title>mcrcfg-5000 (6 samples, 0.10%)</title><rect x="13.4" y="2069" width="1.2" height="15.0" fill="rgb(245,226,53)" rx="2" ry="2" />
<text  x="16.42" y="2079.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DelayedDestructionBase (4 samples, 0.07%)</title><rect x="567.0" y="1973" width="0.8" height="15.0" fill="rgb(211,164,4)" rx="2" ry="2" />
<text  x="570.00" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1413" width="30.0" height="15.0" fill="rgb(221,158,11)" rx="2" ry="2" />
<text  x="127.10" y="1423.5" >[u..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (1 samples, 0.02%)</title><rect x="199.4" y="1989" width="0.2" height="15.0" fill="rgb(228,23,46)" rx="2" ry="2" />
<text  x="202.36" y="1999.5" ></text>
</g>
<g >
<title>folly::isSet (2 samples, 0.03%)</title><rect x="881.9" y="1909" width="0.4" height="15.0" fill="rgb(223,97,21)" rx="2" ry="2" />
<text  x="884.92" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="899.4" y="1861" width="0.2" height="15.0" fill="rgb(231,70,22)" rx="2" ry="2" />
<text  x="902.43" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="64.1" y="1845" width="0.2" height="15.0" fill="rgb(226,49,10)" rx="2" ry="2" />
<text  x="67.13" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="152.7" y="277" width="0.2" height="15.0" fill="rgb(236,168,42)" rx="2" ry="2" />
<text  x="155.67" y="287.5" ></text>
</g>
<g >
<title>[[vdso]] (5 samples, 0.09%)</title><rect x="222.9" y="2005" width="1.0" height="15.0" fill="rgb(213,14,41)" rx="2" ry="2" />
<text  x="225.90" y="2015.5" ></text>
</g>
<g >
<title>lock_timer_base (5 samples, 0.09%)</title><rect x="303.6" y="1749" width="1.0" height="15.0" fill="rgb(226,172,35)" rx="2" ry="2" />
<text  x="306.59" y="1759.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="32.1" y="2005" width="0.2" height="15.0" fill="rgb(206,80,28)" rx="2" ry="2" />
<text  x="35.14" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::MultiOpParent::reply (3 samples, 0.05%)</title><rect x="863.0" y="1989" width="0.6" height="15.0" fill="rgb(236,179,51)" rx="2" ry="2" />
<text  x="866.00" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="841.7" y="1717" width="0.2" height="15.0" fill="rgb(249,123,48)" rx="2" ry="2" />
<text  x="844.67" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="747.3" y="1765" width="0.2" height="15.0" fill="rgb(250,146,17)" rx="2" ry="2" />
<text  x="750.30" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (6 samples, 0.10%)</title><rect x="85.7" y="1941" width="1.2" height="15.0" fill="rgb(205,146,22)" rx="2" ry="2" />
<text  x="88.66" y="1951.5" ></text>
</g>
<g >
<title>epoll_wait (209 samples, 3.56%)</title><rect x="469.2" y="2037" width="42.1" height="15.0" fill="rgb(218,117,2)" rx="2" ry="2" />
<text  x="472.20" y="2047.5" >epo..</text>
</g>
<g >
<title>memcpy (1 samples, 0.02%)</title><rect x="385.5" y="1925" width="0.2" height="15.0" fill="rgb(224,84,51)" rx="2" ry="2" />
<text  x="388.49" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (1 samples, 0.02%)</title><rect x="617.1" y="1925" width="0.2" height="15.0" fill="rgb(236,178,32)" rx="2" ry="2" />
<text  x="620.10" y="1935.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="123.5" y="1781" width="0.2" height="15.0" fill="rgb(253,3,44)" rx="2" ry="2" />
<text  x="126.49" y="1791.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="980.1" y="1989" width="0.2" height="15.0" fill="rgb(244,0,21)" rx="2" ry="2" />
<text  x="983.12" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1148.7" y="2021" width="0.2" height="15.0" fill="rgb(223,31,44)" rx="2" ry="2" />
<text  x="1151.75" y="2031.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="1032.4" y="1685" width="0.2" height="15.0" fill="rgb(225,96,39)" rx="2" ry="2" />
<text  x="1035.44" y="1695.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="510.7" y="1717" width="0.2" height="15.0" fill="rgb(253,70,16)" rx="2" ry="2" />
<text  x="513.65" y="1727.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="1155.4" y="1669" width="0.2" height="15.0" fill="rgb(249,57,19)" rx="2" ry="2" />
<text  x="1158.39" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="233.0" y="1765" width="0.2" height="15.0" fill="rgb(254,174,7)" rx="2" ry="2" />
<text  x="235.96" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (52 samples, 0.89%)</title><rect x="582.5" y="1909" width="10.5" height="15.0" fill="rgb(233,134,49)" rx="2" ry="2" />
<text  x="585.49" y="1919.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="272.2" y="1861" width="0.4" height="15.0" fill="rgb(231,154,12)" rx="2" ry="2" />
<text  x="275.20" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="273.8" y="1765" width="0.2" height="15.0" fill="rgb(237,48,35)" rx="2" ry="2" />
<text  x="276.81" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;folly::AsyncServerSocket::CallbackInfo, std::allocator&lt;folly::AsyncServerSocket::CallbackInfo&gt; &gt;::empty (6 samples, 0.10%)</title><rect x="30.3" y="1989" width="1.2" height="15.0" fill="rgb(239,33,31)" rx="2" ry="2" />
<text  x="33.32" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="362.6" y="1797" width="0.2" height="15.0" fill="rgb(229,3,28)" rx="2" ry="2" />
<text  x="365.55" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="933.6" y="1909" width="0.2" height="15.0" fill="rgb(236,168,43)" rx="2" ry="2" />
<text  x="936.64" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="800.8" y="1509" width="0.4" height="15.0" fill="rgb(235,6,24)" rx="2" ry="2" />
<text  x="803.83" y="1519.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1002.3" y="2021" width="0.2" height="15.0" fill="rgb(216,71,36)" rx="2" ry="2" />
<text  x="1005.25" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGatsRequest&gt; &gt;::requestReady (6 samples, 0.10%)</title><rect x="650.1" y="2037" width="1.2" height="15.0" fill="rgb(237,123,30)" rx="2" ry="2" />
<text  x="653.11" y="2047.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="946.3" y="1957" width="0.2" height="15.0" fill="rgb(225,176,34)" rx="2" ry="2" />
<text  x="949.31" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="433.8" y="1973" width="0.2" height="15.0" fill="rgb(245,125,26)" rx="2" ry="2" />
<text  x="436.79" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="491.7" y="1845" width="0.2" height="15.0" fill="rgb(249,39,26)" rx="2" ry="2" />
<text  x="494.74" y="1855.5" ></text>
</g>
<g >
<title>sys_getpeername (12 samples, 0.20%)</title><rect x="667.2" y="1893" width="2.4" height="15.0" fill="rgb(223,34,0)" rx="2" ry="2" />
<text  x="670.21" y="1903.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="1026.2" y="2037" width="0.2" height="15.0" fill="rgb(225,148,6)" rx="2" ry="2" />
<text  x="1029.20" y="2047.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="903.3" y="1573" width="0.2" height="15.0" fill="rgb(247,37,2)" rx="2" ry="2" />
<text  x="906.25" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::timer (1 samples, 0.02%)</title><rect x="534.8" y="2021" width="0.2" height="15.0" fill="rgb(246,144,41)" rx="2" ry="2" />
<text  x="537.80" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="741.9" y="1637" width="0.2" height="15.0" fill="rgb(215,167,0)" rx="2" ry="2" />
<text  x="744.87" y="1647.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="345.8" y="1493" width="0.3" height="15.0" fill="rgb(250,58,32)" rx="2" ry="2" />
<text  x="348.85" y="1503.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="891.2" y="1813" width="0.2" height="15.0" fill="rgb(238,106,47)" rx="2" ry="2" />
<text  x="894.18" y="1823.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="1163.2" y="1861" width="0.2" height="15.0" fill="rgb(250,142,35)" rx="2" ry="2" />
<text  x="1166.24" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (150 samples, 2.56%)</title><rect x="124.1" y="1445" width="30.2" height="15.0" fill="rgb(227,71,3)" rx="2" ry="2" />
<text  x="127.10" y="1455.5" >[u..</text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="151.9" y="37" width="0.2" height="15.0" fill="rgb(229,120,12)" rx="2" ry="2" />
<text  x="154.87" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="433.2" y="1973" width="0.4" height="15.0" fill="rgb(210,92,36)" rx="2" ry="2" />
<text  x="436.18" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (156 samples, 2.66%)</title><rect x="123.7" y="1733" width="31.4" height="15.0" fill="rgb(205,54,46)" rx="2" ry="2" />
<text  x="126.69" y="1743.5" >[u..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="903.3" y="1893" width="0.2" height="15.0" fill="rgb(239,125,4)" rx="2" ry="2" />
<text  x="906.25" y="1903.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="71.4" y="1861" width="0.2" height="15.0" fill="rgb(219,82,39)" rx="2" ry="2" />
<text  x="74.37" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="230.5" y="1621" width="0.2" height="15.0" fill="rgb(224,186,48)" rx="2" ry="2" />
<text  x="233.55" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (18 samples, 0.31%)</title><rect x="177.6" y="1909" width="3.6" height="15.0" fill="rgb(241,2,26)" rx="2" ry="2" />
<text  x="180.62" y="1919.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="317.3" y="1909" width="0.8" height="15.0" fill="rgb(236,103,23)" rx="2" ry="2" />
<text  x="320.27" y="1919.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (6 samples, 0.10%)</title><rect x="494.6" y="1813" width="1.2" height="15.0" fill="rgb(217,21,48)" rx="2" ry="2" />
<text  x="497.56" y="1823.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (17 samples, 0.29%)</title><rect x="933.0" y="1957" width="3.5" height="15.0" fill="rgb(230,175,9)" rx="2" ry="2" />
<text  x="936.03" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="486.7" y="1669" width="0.2" height="15.0" fill="rgb(211,191,21)" rx="2" ry="2" />
<text  x="489.71" y="1679.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="253.1" y="1989" width="0.2" height="15.0" fill="rgb(216,121,29)" rx="2" ry="2" />
<text  x="256.08" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1119.6" y="1845" width="0.2" height="15.0" fill="rgb(229,118,45)" rx="2" ry="2" />
<text  x="1122.57" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::~FiberManager (97 samples, 1.65%)</title><rect x="978.1" y="2037" width="19.5" height="15.0" fill="rgb(205,228,38)" rx="2" ry="2" />
<text  x="981.11" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="342.0" y="1445" width="0.2" height="15.0" fill="rgb(235,136,52)" rx="2" ry="2" />
<text  x="345.03" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="747.3" y="1749" width="0.2" height="15.0" fill="rgb(236,102,8)" rx="2" ry="2" />
<text  x="750.30" y="1759.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="441.4" y="1733" width="0.4" height="15.0" fill="rgb(251,220,45)" rx="2" ry="2" />
<text  x="444.43" y="1743.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="255.1" y="1845" width="0.2" height="15.0" fill="rgb(216,187,14)" rx="2" ry="2" />
<text  x="258.10" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="731.6" y="1621" width="0.2" height="15.0" fill="rgb(246,224,30)" rx="2" ry="2" />
<text  x="734.60" y="1631.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1022.6" y="2005" width="0.2" height="15.0" fill="rgb(208,201,25)" rx="2" ry="2" />
<text  x="1025.58" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.03%)</title><rect x="174.2" y="1941" width="0.4" height="15.0" fill="rgb(219,23,7)" rx="2" ry="2" />
<text  x="177.20" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="840.9" y="1669" width="0.2" height="15.0" fill="rgb(219,4,6)" rx="2" ry="2" />
<text  x="843.87" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.09%)</title><rect x="317.1" y="2021" width="1.0" height="15.0" fill="rgb(206,2,23)" rx="2" ry="2" />
<text  x="320.07" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (25 samples, 0.43%)</title><rect x="291.1" y="1669" width="5.0" height="15.0" fill="rgb(228,111,22)" rx="2" ry="2" />
<text  x="294.12" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="257.5" y="1733" width="0.2" height="15.0" fill="rgb(222,88,38)" rx="2" ry="2" />
<text  x="260.51" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="740.7" y="1477" width="0.2" height="15.0" fill="rgb(238,219,8)" rx="2" ry="2" />
<text  x="743.66" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="747.3" y="1733" width="0.2" height="15.0" fill="rgb(226,9,11)" rx="2" ry="2" />
<text  x="750.30" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::sendWrites (89 samples, 1.52%)</title><rect x="873.5" y="2005" width="17.9" height="15.0" fill="rgb(219,72,9)" rx="2" ry="2" />
<text  x="876.47" y="2015.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="1177.3" y="1941" width="0.6" height="15.0" fill="rgb(225,109,2)" rx="2" ry="2" />
<text  x="1180.32" y="1951.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::setScheduled (9 samples, 0.15%)</title><rect x="519.3" y="1989" width="1.8" height="15.0" fill="rgb(239,24,17)" rx="2" ry="2" />
<text  x="522.31" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1181.1" y="2005" width="0.2" height="15.0" fill="rgb(238,141,34)" rx="2" ry="2" />
<text  x="1184.15" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (7 samples, 0.12%)</title><rect x="624.8" y="2005" width="1.4" height="15.0" fill="rgb(252,208,37)" rx="2" ry="2" />
<text  x="627.75" y="2015.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="809.3" y="1589" width="0.2" height="15.0" fill="rgb(206,104,2)" rx="2" ry="2" />
<text  x="812.28" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (2 samples, 0.03%)</title><rect x="64.3" y="1909" width="0.4" height="15.0" fill="rgb(238,69,50)" rx="2" ry="2" />
<text  x="67.33" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="233.0" y="1717" width="0.2" height="15.0" fill="rgb(247,153,8)" rx="2" ry="2" />
<text  x="235.96" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetRequest::~McGetRequest (2 samples, 0.03%)</title><rect x="961.4" y="2037" width="0.4" height="15.0" fill="rgb(249,150,17)" rx="2" ry="2" />
<text  x="964.41" y="2047.5" ></text>
</g>
<g >
<title>init_once (3 samples, 0.05%)</title><rect x="369.2" y="1829" width="0.6" height="15.0" fill="rgb(210,101,4)" rx="2" ry="2" />
<text  x="372.19" y="1839.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="1126.8" y="1957" width="0.4" height="15.0" fill="rgb(209,179,22)" rx="2" ry="2" />
<text  x="1129.81" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="730.2" y="1525" width="0.2" height="15.0" fill="rgb(246,106,14)" rx="2" ry="2" />
<text  x="733.19" y="1535.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="631.0" y="1893" width="0.2" height="15.0" fill="rgb(212,70,24)" rx="2" ry="2" />
<text  x="633.99" y="1903.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="207.4" y="2005" width="0.2" height="15.0" fill="rgb(222,211,47)" rx="2" ry="2" />
<text  x="210.40" y="2015.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (2 samples, 0.03%)</title><rect x="1109.1" y="1925" width="0.4" height="15.0" fill="rgb(243,121,20)" rx="2" ry="2" />
<text  x="1112.11" y="1935.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="862.8" y="1637" width="0.2" height="15.0" fill="rgb(220,187,50)" rx="2" ry="2" />
<text  x="865.80" y="1647.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="345.8" y="1605" width="0.3" height="15.0" fill="rgb(241,93,7)" rx="2" ry="2" />
<text  x="348.85" y="1615.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="704.4" y="1941" width="0.2" height="15.0" fill="rgb(233,55,38)" rx="2" ry="2" />
<text  x="707.44" y="1951.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned int&amp;&gt; (1 samples, 0.02%)</title><rect x="1010.5" y="1973" width="0.2" height="15.0" fill="rgb(215,19,12)" rx="2" ry="2" />
<text  x="1013.50" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (1 samples, 0.02%)</title><rect x="549.3" y="1989" width="0.2" height="15.0" fill="rgb(244,117,49)" rx="2" ry="2" />
<text  x="552.29" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="421" width="28.8" height="15.0" fill="rgb(233,125,39)" rx="2" ry="2" />
<text  x="127.10" y="431.5" >[u..</text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="707.3" y="1701" width="0.2" height="15.0" fill="rgb(254,74,26)" rx="2" ry="2" />
<text  x="710.25" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="841.7" y="1669" width="0.2" height="15.0" fill="rgb(243,226,34)" rx="2" ry="2" />
<text  x="844.67" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="407.8" y="1845" width="0.2" height="15.0" fill="rgb(248,177,24)" rx="2" ry="2" />
<text  x="410.83" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1168.7" y="1909" width="0.2" height="15.0" fill="rgb(206,189,40)" rx="2" ry="2" />
<text  x="1171.67" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1023.6" y="2005" width="0.2" height="15.0" fill="rgb(217,206,29)" rx="2" ry="2" />
<text  x="1026.58" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="961.8" y="1941" width="0.2" height="15.0" fill="rgb(250,187,0)" rx="2" ry="2" />
<text  x="964.81" y="1951.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="763.2" y="1669" width="0.2" height="15.0" fill="rgb(225,169,19)" rx="2" ry="2" />
<text  x="766.20" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="841.7" y="1893" width="0.2" height="15.0" fill="rgb(247,187,51)" rx="2" ry="2" />
<text  x="844.67" y="1903.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.02%)</title><rect x="869.4" y="1989" width="0.2" height="15.0" fill="rgb(248,81,38)" rx="2" ry="2" />
<text  x="872.44" y="1999.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="163.5" y="1973" width="0.2" height="15.0" fill="rgb(254,25,6)" rx="2" ry="2" />
<text  x="166.54" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="789" width="29.6" height="15.0" fill="rgb(236,204,38)" rx="2" ry="2" />
<text  x="127.10" y="799.5" >[u..</text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (2 samples, 0.03%)</title><rect x="31.7" y="2005" width="0.4" height="15.0" fill="rgb(212,23,3)" rx="2" ry="2" />
<text  x="34.73" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="513.3" y="1909" width="0.2" height="15.0" fill="rgb(244,227,39)" rx="2" ry="2" />
<text  x="516.27" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerOnRequestWrapper&lt;facebook::memcache::MemcacheRequestHandler&lt;facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt; &gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::requestReady (1 samples, 0.02%)</title><rect x="143.8" y="37" width="0.2" height="15.0" fill="rgb(238,44,22)" rx="2" ry="2" />
<text  x="146.82" y="47.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="1149.2" y="1749" width="0.2" height="15.0" fill="rgb(253,206,10)" rx="2" ry="2" />
<text  x="1152.15" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="388.3" y="1813" width="0.2" height="15.0" fill="rgb(210,100,6)" rx="2" ry="2" />
<text  x="391.31" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="533.2" y="1861" width="0.2" height="15.0" fill="rgb(212,183,51)" rx="2" ry="2" />
<text  x="536.19" y="1871.5" ></text>
</g>
<g >
<title>inet_accept (104 samples, 1.77%)</title><rect x="332.8" y="1957" width="20.9" height="15.0" fill="rgb(208,225,10)" rx="2" ry="2" />
<text  x="335.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (1 samples, 0.02%)</title><rect x="575.9" y="1973" width="0.2" height="15.0" fill="rgb(252,184,51)" rx="2" ry="2" />
<text  x="578.85" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="513.3" y="2021" width="0.2" height="15.0" fill="rgb(231,15,52)" rx="2" ry="2" />
<text  x="516.27" y="2031.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.02%)</title><rect x="652.1" y="1861" width="0.2" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="655.12" y="1871.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="265.2" y="1557" width="0.2" height="15.0" fill="rgb(214,174,26)" rx="2" ry="2" />
<text  x="268.16" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="257.5" y="1893" width="0.2" height="15.0" fill="rgb(214,171,46)" rx="2" ry="2" />
<text  x="260.51" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="740.7" y="1541" width="0.2" height="15.0" fill="rgb(248,193,25)" rx="2" ry="2" />
<text  x="743.66" y="1551.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="470.6" y="1941" width="0.2" height="15.0" fill="rgb(207,13,52)" rx="2" ry="2" />
<text  x="473.61" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (48 samples, 0.82%)</title><rect x="160.9" y="2005" width="9.7" height="15.0" fill="rgb(251,148,30)" rx="2" ry="2" />
<text  x="163.92" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="899.4" y="1909" width="0.2" height="15.0" fill="rgb(231,10,7)" rx="2" ry="2" />
<text  x="902.43" y="1919.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest&gt;::process (1 samples, 0.02%)</title><rect x="1030.6" y="2037" width="0.2" height="15.0" fill="rgb(243,75,49)" rx="2" ry="2" />
<text  x="1033.63" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="345.4" y="1733" width="0.2" height="15.0" fill="rgb(223,122,48)" rx="2" ry="2" />
<text  x="348.45" y="1743.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="95.7" y="1941" width="0.2" height="15.0" fill="rgb(230,147,53)" rx="2" ry="2" />
<text  x="98.72" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::precheckKey&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="916.5" y="1973" width="0.6" height="15.0" fill="rgb(239,25,14)" rx="2" ry="2" />
<text  x="919.53" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (13 samples, 0.22%)</title><rect x="49.2" y="1925" width="2.7" height="15.0" fill="rgb(224,40,38)" rx="2" ry="2" />
<text  x="52.24" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="64.1" y="1797" width="0.2" height="15.0" fill="rgb(207,172,0)" rx="2" ry="2" />
<text  x="67.13" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (97 samples, 1.65%)</title><rect x="978.1" y="2021" width="19.5" height="15.0" fill="rgb(225,101,48)" rx="2" ry="2" />
<text  x="981.11" y="2031.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="869.2" y="1989" width="0.2" height="15.0" fill="rgb(217,128,42)" rx="2" ry="2" />
<text  x="872.24" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="97.1" y="1861" width="0.2" height="15.0" fill="rgb(242,18,45)" rx="2" ry="2" />
<text  x="100.13" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1058.2" y="1781" width="0.2" height="15.0" fill="rgb(254,49,22)" rx="2" ry="2" />
<text  x="1061.20" y="1791.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="341.8" y="1893" width="0.4" height="15.0" fill="rgb(212,142,1)" rx="2" ry="2" />
<text  x="344.82" y="1903.5" ></text>
</g>
<g >
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="300.6" y="1829" width="0.2" height="15.0" fill="rgb(224,223,24)" rx="2" ry="2" />
<text  x="303.57" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.1" y="1829" width="0.2" height="15.0" fill="rgb(251,71,51)" rx="2" ry="2" />
<text  x="67.13" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="190.1" y="1957" width="0.2" height="15.0" fill="rgb(225,165,5)" rx="2" ry="2" />
<text  x="193.10" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="747.7" y="1589" width="0.2" height="15.0" fill="rgb(205,95,35)" rx="2" ry="2" />
<text  x="750.70" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::~unordered_map (2 samples, 0.03%)</title><rect x="91.1" y="1973" width="0.4" height="15.0" fill="rgb(247,112,31)" rx="2" ry="2" />
<text  x="94.09" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (3 samples, 0.05%)</title><rect x="617.9" y="2037" width="0.6" height="15.0" fill="rgb(249,148,5)" rx="2" ry="2" />
<text  x="620.91" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (1 samples, 0.02%)</title><rect x="908.5" y="2005" width="0.2" height="15.0" fill="rgb(213,195,1)" rx="2" ry="2" />
<text  x="911.48" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_route_req (1 samples, 0.02%)</title><rect x="730.2" y="1381" width="0.2" height="15.0" fill="rgb(238,189,50)" rx="2" ry="2" />
<text  x="733.19" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1054.8" y="1957" width="0.6" height="15.0" fill="rgb(251,13,0)" rx="2" ry="2" />
<text  x="1057.77" y="1967.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="1163.2" y="1909" width="0.2" height="15.0" fill="rgb(220,50,0)" rx="2" ry="2" />
<text  x="1166.24" y="1919.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (6 samples, 0.10%)</title><rect x="782.9" y="1573" width="1.2" height="15.0" fill="rgb(254,130,1)" rx="2" ry="2" />
<text  x="785.92" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="845.7" y="1717" width="0.2" height="15.0" fill="rgb(209,82,17)" rx="2" ry="2" />
<text  x="848.70" y="1727.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="730.2" y="1317" width="0.2" height="15.0" fill="rgb(208,217,42)" rx="2" ry="2" />
<text  x="733.19" y="1327.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="754.9" y="1733" width="0.2" height="15.0" fill="rgb(224,139,5)" rx="2" ry="2" />
<text  x="757.95" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="96.3" y="1957" width="0.2" height="15.0" fill="rgb(254,176,34)" rx="2" ry="2" />
<text  x="99.33" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::Data (1 samples, 0.02%)</title><rect x="569.8" y="1989" width="0.2" height="15.0" fill="rgb(234,220,50)" rx="2" ry="2" />
<text  x="572.82" y="1999.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.02%)</title><rect x="1094.0" y="1813" width="0.2" height="15.0" fill="rgb(229,188,54)" rx="2" ry="2" />
<text  x="1097.01" y="1823.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="1072.5" y="1861" width="0.2" height="15.0" fill="rgb(208,169,35)" rx="2" ry="2" />
<text  x="1075.48" y="1871.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (4 samples, 0.07%)</title><rect x="647.9" y="2005" width="0.8" height="15.0" fill="rgb(248,156,21)" rx="2" ry="2" />
<text  x="650.89" y="2015.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="603.4" y="1845" width="0.4" height="15.0" fill="rgb(230,195,0)" rx="2" ry="2" />
<text  x="606.42" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="100.8" y="1909" width="0.2" height="15.0" fill="rgb(250,215,39)" rx="2" ry="2" />
<text  x="103.75" y="1919.5" ></text>
</g>
<g >
<title>do_fcntl (4 samples, 0.07%)</title><rect x="562.6" y="1925" width="0.8" height="15.0" fill="rgb(231,167,26)" rx="2" ry="2" />
<text  x="565.57" y="1935.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="388.9" y="1973" width="0.2" height="15.0" fill="rgb(253,46,12)" rx="2" ry="2" />
<text  x="391.91" y="1983.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.02%)</title><rect x="726.4" y="1733" width="0.2" height="15.0" fill="rgb(206,108,32)" rx="2" ry="2" />
<text  x="729.37" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContext::~ProxyRequestContext (2 samples, 0.03%)</title><rect x="864.0" y="1989" width="0.4" height="15.0" fill="rgb(221,175,52)" rx="2" ry="2" />
<text  x="867.01" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="631.4" y="1781" width="0.2" height="15.0" fill="rgb(247,31,3)" rx="2" ry="2" />
<text  x="634.39" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="672.4" y="1797" width="0.2" height="15.0" fill="rgb(232,201,43)" rx="2" ry="2" />
<text  x="675.44" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1144.3" y="1989" width="0.2" height="15.0" fill="rgb(238,7,48)" rx="2" ry="2" />
<text  x="1147.32" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="71.0" y="1925" width="0.2" height="15.0" fill="rgb(246,164,27)" rx="2" ry="2" />
<text  x="73.97" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1111.3" y="1765" width="0.2" height="15.0" fill="rgb(234,217,8)" rx="2" ry="2" />
<text  x="1114.32" y="1775.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="13.6" y="1893" width="0.8" height="15.0" fill="rgb(209,115,21)" rx="2" ry="2" />
<text  x="16.62" y="1903.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (65 samples, 1.11%)</title><rect x="284.3" y="1717" width="13.1" height="15.0" fill="rgb(220,219,24)" rx="2" ry="2" />
<text  x="287.27" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="721.3" y="1621" width="0.2" height="15.0" fill="rgb(237,26,27)" rx="2" ry="2" />
<text  x="724.34" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="265.2" y="1717" width="0.2" height="15.0" fill="rgb(230,121,3)" rx="2" ry="2" />
<text  x="268.16" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="999.8" y="1957" width="0.4" height="15.0" fill="rgb(207,166,27)" rx="2" ry="2" />
<text  x="1002.84" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="510.7" y="1733" width="0.2" height="15.0" fill="rgb(238,155,36)" rx="2" ry="2" />
<text  x="513.65" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="200.2" y="1957" width="0.2" height="15.0" fill="rgb(242,211,16)" rx="2" ry="2" />
<text  x="203.16" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (3 samples, 0.05%)</title><rect x="88.5" y="1925" width="0.6" height="15.0" fill="rgb(226,148,16)" rx="2" ry="2" />
<text  x="91.48" y="1935.5" ></text>
</g>
<g >
<title>security_socket_accept (1 samples, 0.02%)</title><rect x="389.5" y="1973" width="0.2" height="15.0" fill="rgb(205,144,4)" rx="2" ry="2" />
<text  x="392.52" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="633.2" y="1765" width="0.2" height="15.0" fill="rgb(227,120,52)" rx="2" ry="2" />
<text  x="636.20" y="1775.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="548.9" y="1957" width="0.2" height="15.0" fill="rgb(237,140,48)" rx="2" ry="2" />
<text  x="551.89" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="71.0" y="1893" width="0.2" height="15.0" fill="rgb(238,215,41)" rx="2" ry="2" />
<text  x="73.97" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="650.1" y="2005" width="1.2" height="15.0" fill="rgb(252,216,25)" rx="2" ry="2" />
<text  x="653.11" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (156 samples, 2.66%)</title><rect x="123.7" y="1765" width="31.4" height="15.0" fill="rgb(234,79,26)" rx="2" ry="2" />
<text  x="126.69" y="1775.5" >[u..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="946.7" y="1957" width="0.2" height="15.0" fill="rgb(244,165,19)" rx="2" ry="2" />
<text  x="949.72" y="1967.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="1085.0" y="1797" width="0.2" height="15.0" fill="rgb(205,197,5)" rx="2" ry="2" />
<text  x="1087.96" y="1807.5" ></text>
</g>
<g >
<title>find_next_zero_bit (1 samples, 0.02%)</title><rect x="332.6" y="1941" width="0.2" height="15.0" fill="rgb(239,61,7)" rx="2" ry="2" />
<text  x="335.57" y="1951.5" ></text>
</g>
<g >
<title>release_sock (5 samples, 0.09%)</title><rect x="1086.6" y="1925" width="1.0" height="15.0" fill="rgb(218,194,0)" rx="2" ry="2" />
<text  x="1089.57" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="342.0" y="1669" width="0.2" height="15.0" fill="rgb(216,205,36)" rx="2" ry="2" />
<text  x="345.03" y="1679.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="882.7" y="1861" width="0.2" height="15.0" fill="rgb(239,205,46)" rx="2" ry="2" />
<text  x="885.73" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="539.0" y="1957" width="0.2" height="15.0" fill="rgb(243,98,48)" rx="2" ry="2" />
<text  x="542.03" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (4 samples, 0.07%)</title><rect x="984.9" y="1973" width="0.9" height="15.0" fill="rgb(233,45,48)" rx="2" ry="2" />
<text  x="987.95" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="816.5" y="1509" width="0.2" height="15.0" fill="rgb(224,209,6)" rx="2" ry="2" />
<text  x="819.52" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::resume (6 samples, 0.10%)</title><rect x="860.4" y="1989" width="1.2" height="15.0" fill="rgb(220,98,37)" rx="2" ry="2" />
<text  x="863.39" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="750.1" y="1621" width="0.2" height="15.0" fill="rgb(225,228,38)" rx="2" ry="2" />
<text  x="753.12" y="1631.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="652.1" y="1893" width="0.2" height="15.0" fill="rgb(235,178,11)" rx="2" ry="2" />
<text  x="655.12" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="976.5" y="1973" width="0.2" height="15.0" fill="rgb(248,120,45)" rx="2" ry="2" />
<text  x="979.50" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="152.7" y="149" width="0.2" height="15.0" fill="rgb(216,177,14)" rx="2" ry="2" />
<text  x="155.67" y="159.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="701.8" y="1701" width="0.2" height="15.0" fill="rgb(238,4,42)" rx="2" ry="2" />
<text  x="704.82" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="316.1" y="1861" width="0.2" height="15.0" fill="rgb(238,64,12)" rx="2" ry="2" />
<text  x="319.07" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (5 samples, 0.09%)</title><rect x="783.1" y="1525" width="1.0" height="15.0" fill="rgb(224,99,13)" rx="2" ry="2" />
<text  x="786.12" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="454.7" y="1685" width="0.2" height="15.0" fill="rgb(252,5,47)" rx="2" ry="2" />
<text  x="457.71" y="1695.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="1111.3" y="1653" width="0.2" height="15.0" fill="rgb(227,191,10)" rx="2" ry="2" />
<text  x="1114.32" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (2 samples, 0.03%)</title><rect x="200.6" y="1957" width="0.4" height="15.0" fill="rgb(214,98,25)" rx="2" ry="2" />
<text  x="203.56" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="605.0" y="1957" width="0.2" height="15.0" fill="rgb(220,204,38)" rx="2" ry="2" />
<text  x="608.03" y="1967.5" ></text>
</g>
<g >
<title>event_active_nolock_ (5 samples, 0.09%)</title><rect x="116.9" y="2005" width="1.0" height="15.0" fill="rgb(209,67,38)" rx="2" ry="2" />
<text  x="119.85" y="2015.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="963.6" y="2005" width="0.2" height="15.0" fill="rgb(208,80,27)" rx="2" ry="2" />
<text  x="966.62" y="2015.5" ></text>
</g>
<g >
<title>end_repeat_nmi (1 samples, 0.02%)</title><rect x="494.2" y="1813" width="0.2" height="15.0" fill="rgb(233,157,29)" rx="2" ry="2" />
<text  x="497.15" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="100.4" y="2005" width="0.4" height="15.0" fill="rgb(235,67,50)" rx="2" ry="2" />
<text  x="103.35" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionStarted (1 samples, 0.02%)</title><rect x="859.0" y="1989" width="0.2" height="15.0" fill="rgb(218,180,9)" rx="2" ry="2" />
<text  x="861.98" y="1999.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;::allocator (2 samples, 0.03%)</title><rect x="575.0" y="1957" width="0.5" height="15.0" fill="rgb(214,207,4)" rx="2" ry="2" />
<text  x="578.05" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::get (3 samples, 0.05%)</title><rect x="534.2" y="1989" width="0.6" height="15.0" fill="rgb(230,176,40)" rx="2" ry="2" />
<text  x="537.20" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="307.2" y="1829" width="0.2" height="15.0" fill="rgb(251,153,32)" rx="2" ry="2" />
<text  x="310.21" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="783.5" y="1349" width="0.4" height="15.0" fill="rgb(242,165,48)" rx="2" ry="2" />
<text  x="786.52" y="1359.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="840.9" y="1477" width="0.2" height="15.0" fill="rgb(220,0,7)" rx="2" ry="2" />
<text  x="843.87" y="1487.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="523.3" y="1925" width="0.2" height="15.0" fill="rgb(219,67,18)" rx="2" ry="2" />
<text  x="526.33" y="1935.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="491.5" y="1765" width="0.2" height="15.0" fill="rgb(241,211,54)" rx="2" ry="2" />
<text  x="494.54" y="1775.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="259.5" y="1781" width="0.8" height="15.0" fill="rgb(224,126,46)" rx="2" ry="2" />
<text  x="262.52" y="1791.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="441.2" y="1893" width="0.2" height="15.0" fill="rgb(226,184,24)" rx="2" ry="2" />
<text  x="444.23" y="1903.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="989.2" y="1877" width="0.4" height="15.0" fill="rgb(210,146,38)" rx="2" ry="2" />
<text  x="992.17" y="1887.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="978.7" y="1925" width="0.2" height="15.0" fill="rgb(244,76,16)" rx="2" ry="2" />
<text  x="981.71" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (2 samples, 0.03%)</title><rect x="1145.5" y="1925" width="0.4" height="15.0" fill="rgb(240,164,36)" rx="2" ry="2" />
<text  x="1148.53" y="1935.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="273.8" y="1845" width="0.2" height="15.0" fill="rgb(208,127,16)" rx="2" ry="2" />
<text  x="276.81" y="1855.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="651.1" y="1973" width="0.2" height="15.0" fill="rgb(225,52,52)" rx="2" ry="2" />
<text  x="654.11" y="1983.5" ></text>
</g>
<g >
<title>__dentry_kill (97 samples, 1.65%)</title><rect x="724.2" y="1765" width="19.5" height="15.0" fill="rgb(216,85,44)" rx="2" ry="2" />
<text  x="727.16" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="888.6" y="1893" width="0.2" height="15.0" fill="rgb(213,14,3)" rx="2" ry="2" />
<text  x="891.56" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="741.9" y="1557" width="0.2" height="15.0" fill="rgb(223,21,47)" rx="2" ry="2" />
<text  x="744.87" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (6 samples, 0.10%)</title><rect x="635.2" y="1989" width="1.2" height="15.0" fill="rgb(237,70,47)" rx="2" ry="2" />
<text  x="638.21" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="633.2" y="1861" width="0.2" height="15.0" fill="rgb(248,75,21)" rx="2" ry="2" />
<text  x="636.20" y="1871.5" ></text>
</g>
<g >
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="450.9" y="1909" width="0.6" height="15.0" fill="rgb(226,98,33)" rx="2" ry="2" />
<text  x="453.89" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="441.0" y="1749" width="0.2" height="15.0" fill="rgb(239,13,28)" rx="2" ry="2" />
<text  x="444.03" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="312.0" y="1893" width="0.2" height="15.0" fill="rgb(234,110,34)" rx="2" ry="2" />
<text  x="315.04" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="55.1" y="1941" width="0.2" height="15.0" fill="rgb(232,104,1)" rx="2" ry="2" />
<text  x="58.08" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="548.9" y="1845" width="0.2" height="15.0" fill="rgb(224,33,36)" rx="2" ry="2" />
<text  x="551.89" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (141 samples, 2.40%)</title><rect x="124.3" y="373" width="28.4" height="15.0" fill="rgb(223,48,28)" rx="2" ry="2" />
<text  x="127.30" y="383.5" >[u..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="13.6" y="2021" width="1.0" height="15.0" fill="rgb(234,75,48)" rx="2" ry="2" />
<text  x="16.62" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="840.9" y="1781" width="0.2" height="15.0" fill="rgb(223,222,1)" rx="2" ry="2" />
<text  x="843.87" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="386.5" y="1909" width="0.4" height="15.0" fill="rgb(215,60,7)" rx="2" ry="2" />
<text  x="389.50" y="1919.5" ></text>
</g>
<g >
<title>jump_fcontext (21 samples, 0.36%)</title><rect x="993.4" y="2005" width="4.2" height="15.0" fill="rgb(243,74,35)" rx="2" ry="2" />
<text  x="996.40" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1149.2" y="1893" width="0.2" height="15.0" fill="rgb(226,110,42)" rx="2" ry="2" />
<text  x="1152.15" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (7 samples, 0.12%)</title><rect x="74.8" y="1941" width="1.4" height="15.0" fill="rgb(214,185,4)" rx="2" ry="2" />
<text  x="77.80" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="67.8" y="1893" width="0.2" height="15.0" fill="rgb(206,144,5)" rx="2" ry="2" />
<text  x="70.75" y="1903.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="1000.4" y="1989" width="0.2" height="15.0" fill="rgb(243,45,42)" rx="2" ry="2" />
<text  x="1003.44" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (5 samples, 0.09%)</title><rect x="862.0" y="1989" width="1.0" height="15.0" fill="rgb(241,157,48)" rx="2" ry="2" />
<text  x="865.00" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="1146.1" y="2005" width="0.2" height="15.0" fill="rgb(237,18,16)" rx="2" ry="2" />
<text  x="1149.13" y="2015.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (4 samples, 0.07%)</title><rect x="282.5" y="1461" width="0.8" height="15.0" fill="rgb(243,188,30)" rx="2" ry="2" />
<text  x="285.46" y="1471.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="819.5" y="1605" width="0.2" height="15.0" fill="rgb(241,39,54)" rx="2" ry="2" />
<text  x="822.54" y="1615.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="97.1" y="1781" width="0.2" height="15.0" fill="rgb(205,146,49)" rx="2" ry="2" />
<text  x="100.13" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="887.0" y="1861" width="0.2" height="15.0" fill="rgb(235,113,30)" rx="2" ry="2" />
<text  x="889.95" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="491.7" y="1765" width="0.2" height="15.0" fill="rgb(215,213,25)" rx="2" ry="2" />
<text  x="494.74" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1909" width="0.8" height="15.0" fill="rgb(235,161,4)" rx="2" ry="2" />
<text  x="538.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="99.7" y="1733" width="0.2" height="15.0" fill="rgb(206,196,7)" rx="2" ry="2" />
<text  x="102.75" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="491.7" y="1653" width="0.2" height="15.0" fill="rgb(238,93,14)" rx="2" ry="2" />
<text  x="494.74" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (880 samples, 15.01%)</title><rect x="692.6" y="2005" width="177.0" height="15.0" fill="rgb(218,184,52)" rx="2" ry="2" />
<text  x="695.56" y="2015.5" >[unknown]</text>
</g>
<g >
<title>evmap_io_active_ (11 samples, 0.19%)</title><rect x="511.3" y="2037" width="2.2" height="15.0" fill="rgb(225,22,35)" rx="2" ry="2" />
<text  x="514.26" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.05%)</title><rect x="1126.2" y="1973" width="0.6" height="15.0" fill="rgb(227,39,33)" rx="2" ry="2" />
<text  x="1129.21" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="930.4" y="1877" width="0.2" height="15.0" fill="rgb(234,59,51)" rx="2" ry="2" />
<text  x="933.42" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="291.1" y="1653" width="0.2" height="15.0" fill="rgb(216,90,19)" rx="2" ry="2" />
<text  x="294.12" y="1663.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::hasTasks (1 samples, 0.02%)</title><rect x="187.7" y="1941" width="0.2" height="15.0" fill="rgb(241,210,6)" rx="2" ry="2" />
<text  x="190.68" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (4 samples, 0.07%)</title><rect x="192.1" y="2021" width="0.8" height="15.0" fill="rgb(235,114,5)" rx="2" ry="2" />
<text  x="195.11" y="2031.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::destroy (1 samples, 0.02%)</title><rect x="855.4" y="1973" width="0.2" height="15.0" fill="rgb(213,102,39)" rx="2" ry="2" />
<text  x="858.36" y="1983.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="1072.5" y="1781" width="0.2" height="15.0" fill="rgb(233,42,18)" rx="2" ry="2" />
<text  x="1075.48" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="1030.8" y="2021" width="0.6" height="15.0" fill="rgb(239,173,24)" rx="2" ry="2" />
<text  x="1033.83" y="2031.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="513.9" y="2005" width="0.4" height="15.0" fill="rgb(220,161,37)" rx="2" ry="2" />
<text  x="516.87" y="2015.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="721.3" y="1413" width="0.2" height="15.0" fill="rgb(224,163,22)" rx="2" ry="2" />
<text  x="724.34" y="1423.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="533.6" y="2005" width="0.4" height="15.0" fill="rgb(208,14,9)" rx="2" ry="2" />
<text  x="536.59" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (2 samples, 0.03%)</title><rect x="623.1" y="2005" width="0.4" height="15.0" fill="rgb(225,124,30)" rx="2" ry="2" />
<text  x="626.14" y="2015.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="851.7" y="1877" width="0.6" height="15.0" fill="rgb(222,6,27)" rx="2" ry="2" />
<text  x="854.74" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="238.0" y="1797" width="0.2" height="15.0" fill="rgb(205,48,43)" rx="2" ry="2" />
<text  x="240.99" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="64.1" y="1685" width="0.2" height="15.0" fill="rgb(219,151,43)" rx="2" ry="2" />
<text  x="67.13" y="1695.5" ></text>
</g>
<g >
<title>__libc_recv (3 samples, 0.05%)</title><rect x="966.2" y="1973" width="0.6" height="15.0" fill="rgb(254,202,9)" rx="2" ry="2" />
<text  x="969.23" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="633.2" y="1733" width="0.2" height="15.0" fill="rgb(217,80,28)" rx="2" ry="2" />
<text  x="636.20" y="1743.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="510.7" y="1605" width="0.2" height="15.0" fill="rgb(234,26,9)" rx="2" ry="2" />
<text  x="513.65" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::postHelper (1 samples, 0.02%)</title><rect x="1152.0" y="2021" width="0.2" height="15.0" fill="rgb(224,37,24)" rx="2" ry="2" />
<text  x="1154.97" y="2031.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="255.1" y="1733" width="0.2" height="15.0" fill="rgb(219,0,15)" rx="2" ry="2" />
<text  x="258.10" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::handleTko (1 samples, 0.02%)</title><rect x="926.6" y="2005" width="0.2" height="15.0" fill="rgb(216,114,52)" rx="2" ry="2" />
<text  x="929.59" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="99.7" y="1781" width="0.2" height="15.0" fill="rgb(218,129,47)" rx="2" ry="2" />
<text  x="102.75" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="55.1" y="1877" width="0.2" height="15.0" fill="rgb(225,68,39)" rx="2" ry="2" />
<text  x="58.08" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="491.5" y="1797" width="0.2" height="15.0" fill="rgb(232,179,50)" rx="2" ry="2" />
<text  x="494.54" y="1807.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="441.4" y="1653" width="0.2" height="15.0" fill="rgb(226,30,33)" rx="2" ry="2" />
<text  x="444.43" y="1663.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="801.6" y="1413" width="0.2" height="15.0" fill="rgb(238,51,26)" rx="2" ry="2" />
<text  x="804.63" y="1423.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="151.7" y="133" width="0.2" height="15.0" fill="rgb(227,142,31)" rx="2" ry="2" />
<text  x="154.66" y="143.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (28 samples, 0.48%)</title><rect x="948.5" y="1989" width="5.7" height="15.0" fill="rgb(220,228,31)" rx="2" ry="2" />
<text  x="951.53" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="593.0" y="1925" width="0.6" height="15.0" fill="rgb(229,115,19)" rx="2" ry="2" />
<text  x="595.96" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="191.3" y="1941" width="0.2" height="15.0" fill="rgb(206,85,18)" rx="2" ry="2" />
<text  x="194.31" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (2 samples, 0.03%)</title><rect x="1145.5" y="1909" width="0.4" height="15.0" fill="rgb(254,140,13)" rx="2" ry="2" />
<text  x="1148.53" y="1919.5" ></text>
</g>
<g >
<title>vfprintf (4 samples, 0.07%)</title><rect x="1127.6" y="2037" width="0.8" height="15.0" fill="rgb(215,160,38)" rx="2" ry="2" />
<text  x="1130.62" y="2047.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="928.4" y="1925" width="0.2" height="15.0" fill="rgb(238,152,16)" rx="2" ry="2" />
<text  x="931.40" y="1935.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncSocketException const*, false&gt;::_Head_base (2 samples, 0.03%)</title><rect x="50.0" y="1893" width="0.4" height="15.0" fill="rgb(253,132,48)" rx="2" ry="2" />
<text  x="53.04" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="312.4" y="1765" width="0.2" height="15.0" fill="rgb(213,217,33)" rx="2" ry="2" />
<text  x="315.45" y="1775.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (3 samples, 0.05%)</title><rect x="1155.6" y="1973" width="0.6" height="15.0" fill="rgb(250,151,0)" rx="2" ry="2" />
<text  x="1158.59" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="707.1" y="1893" width="0.4" height="15.0" fill="rgb(214,17,31)" rx="2" ry="2" />
<text  x="710.05" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="740.7" y="1493" width="0.2" height="15.0" fill="rgb(227,149,6)" rx="2" ry="2" />
<text  x="743.66" y="1503.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="903.3" y="1685" width="0.2" height="15.0" fill="rgb(233,95,50)" rx="2" ry="2" />
<text  x="906.25" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (29 samples, 0.49%)</title><rect x="1100.5" y="1733" width="5.8" height="15.0" fill="rgb(205,6,24)" rx="2" ry="2" />
<text  x="1103.45" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1119.2" y="1829" width="0.4" height="15.0" fill="rgb(219,44,37)" rx="2" ry="2" />
<text  x="1122.17" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientTransport (95 samples, 1.62%)</title><rect x="225.1" y="1989" width="19.1" height="15.0" fill="rgb(209,84,6)" rx="2" ry="2" />
<text  x="228.11" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="433.6" y="1909" width="0.2" height="15.0" fill="rgb(223,85,8)" rx="2" ry="2" />
<text  x="436.58" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="944.3" y="1749" width="0.2" height="15.0" fill="rgb(212,161,36)" rx="2" ry="2" />
<text  x="947.30" y="1759.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (3 samples, 0.05%)</title><rect x="1030.8" y="2037" width="0.6" height="15.0" fill="rgb(253,176,37)" rx="2" ry="2" />
<text  x="1033.83" y="2047.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="958.4" y="1989" width="0.2" height="15.0" fill="rgb(248,229,47)" rx="2" ry="2" />
<text  x="961.39" y="1999.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="851.1" y="1829" width="0.2" height="15.0" fill="rgb(218,159,7)" rx="2" ry="2" />
<text  x="854.13" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="891.0" y="1973" width="0.4" height="15.0" fill="rgb(247,209,28)" rx="2" ry="2" />
<text  x="893.98" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (1 samples, 0.02%)</title><rect x="151.5" y="117" width="0.2" height="15.0" fill="rgb(244,36,26)" rx="2" ry="2" />
<text  x="154.46" y="127.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="1173.1" y="1941" width="0.2" height="15.0" fill="rgb(230,105,1)" rx="2" ry="2" />
<text  x="1176.10" y="1951.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="631.0" y="1877" width="0.2" height="15.0" fill="rgb(207,107,1)" rx="2" ry="2" />
<text  x="633.99" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="223.9" y="2021" width="0.4" height="15.0" fill="rgb(205,46,47)" rx="2" ry="2" />
<text  x="226.91" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="529.4" y="1909" width="0.2" height="15.0" fill="rgb(215,33,16)" rx="2" ry="2" />
<text  x="532.37" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="747.1" y="1749" width="0.2" height="15.0" fill="rgb(251,62,40)" rx="2" ry="2" />
<text  x="750.10" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="593.2" y="1797" width="0.4" height="15.0" fill="rgb(219,67,4)" rx="2" ry="2" />
<text  x="596.16" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="840.9" y="1813" width="0.2" height="15.0" fill="rgb(250,97,13)" rx="2" ry="2" />
<text  x="843.87" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (156 samples, 2.66%)</title><rect x="123.7" y="1749" width="31.4" height="15.0" fill="rgb(206,64,12)" rx="2" ry="2" />
<text  x="126.69" y="1759.5" >[u..</text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="850.7" y="1845" width="0.2" height="15.0" fill="rgb(253,117,5)" rx="2" ry="2" />
<text  x="853.73" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="930.4" y="1909" width="0.2" height="15.0" fill="rgb(248,109,54)" rx="2" ry="2" />
<text  x="933.42" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::writeSuccess (105 samples, 1.79%)</title><rect x="513.9" y="2037" width="21.1" height="15.0" fill="rgb(244,29,17)" rx="2" ry="2" />
<text  x="516.87" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="907.7" y="1941" width="0.2" height="15.0" fill="rgb(230,59,54)" rx="2" ry="2" />
<text  x="910.68" y="1951.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.02%)</title><rect x="631.6" y="1829" width="0.2" height="15.0" fill="rgb(227,100,26)" rx="2" ry="2" />
<text  x="634.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="116.9" y="2021" width="2.2" height="15.0" fill="rgb(209,117,33)" rx="2" ry="2" />
<text  x="119.85" y="2031.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="282.3" y="1525" width="0.2" height="15.0" fill="rgb(212,88,51)" rx="2" ry="2" />
<text  x="285.26" y="1535.5" ></text>
</g>
<g >
<title>inet_put_port (1 samples, 0.02%)</title><rect x="65.1" y="1653" width="0.2" height="15.0" fill="rgb(250,110,14)" rx="2" ry="2" />
<text  x="68.14" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="188.3" y="1909" width="0.2" height="15.0" fill="rgb(240,115,53)" rx="2" ry="2" />
<text  x="191.29" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consume (9 samples, 0.15%)</title><rect x="133.2" y="37" width="1.8" height="15.0" fill="rgb(223,123,28)" rx="2" ry="2" />
<text  x="136.15" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="115.2" y="1781" width="0.2" height="15.0" fill="rgb(213,17,14)" rx="2" ry="2" />
<text  x="118.24" y="1791.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="370.2" y="1877" width="0.2" height="15.0" fill="rgb(220,137,44)" rx="2" ry="2" />
<text  x="373.20" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="880.1" y="1941" width="0.2" height="15.0" fill="rgb(213,141,8)" rx="2" ry="2" />
<text  x="883.11" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (8 samples, 0.14%)</title><rect x="602.4" y="1877" width="1.6" height="15.0" fill="rgb(230,138,15)" rx="2" ry="2" />
<text  x="605.41" y="1887.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="454.7" y="1605" width="0.2" height="15.0" fill="rgb(220,151,51)" rx="2" ry="2" />
<text  x="457.71" y="1615.5" ></text>
</g>
<g >
<title>folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(228,152,52)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="832.2" y="1557" width="0.2" height="15.0" fill="rgb(207,184,1)" rx="2" ry="2" />
<text  x="835.22" y="1567.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (1 samples, 0.02%)</title><rect x="541.4" y="1973" width="0.2" height="15.0" fill="rgb(253,38,12)" rx="2" ry="2" />
<text  x="544.44" y="1983.5" ></text>
</g>
<g >
<title>tcp_set_state (2 samples, 0.03%)</title><rect x="821.4" y="1733" width="0.4" height="15.0" fill="rgb(238,61,17)" rx="2" ry="2" />
<text  x="824.35" y="1743.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="631.0" y="1845" width="0.2" height="15.0" fill="rgb(247,48,32)" rx="2" ry="2" />
<text  x="633.99" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::offset_from_pointer_to_member&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="632.8" y="1925" width="0.2" height="15.0" fill="rgb(227,36,52)" rx="2" ry="2" />
<text  x="635.80" y="1935.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="783.7" y="1285" width="0.2" height="15.0" fill="rgb(251,31,43)" rx="2" ry="2" />
<text  x="786.72" y="1295.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="920.6" y="1733" width="0.2" height="15.0" fill="rgb(213,198,27)" rx="2" ry="2" />
<text  x="923.56" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (16 samples, 0.27%)</title><rect x="48.6" y="1957" width="3.3" height="15.0" fill="rgb(246,84,43)" rx="2" ry="2" />
<text  x="51.64" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (18 samples, 0.31%)</title><rect x="543.7" y="1957" width="3.6" height="15.0" fill="rgb(223,18,38)" rx="2" ry="2" />
<text  x="546.66" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::list_iterator&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="176.6" y="1861" width="0.2" height="15.0" fill="rgb(245,219,28)" rx="2" ry="2" />
<text  x="179.62" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1148.7" y="1989" width="0.2" height="15.0" fill="rgb(226,137,1)" rx="2" ry="2" />
<text  x="1151.75" y="1999.5" ></text>
</g>
<g >
<title>folly::canSdallocx (2 samples, 0.03%)</title><rect x="1181.3" y="2053" width="0.4" height="15.0" fill="rgb(239,142,9)" rx="2" ry="2" />
<text  x="1184.35" y="2063.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="454.7" y="1749" width="0.2" height="15.0" fill="rgb(242,88,52)" rx="2" ry="2" />
<text  x="457.71" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="841.7" y="1813" width="0.2" height="15.0" fill="rgb(248,73,42)" rx="2" ry="2" />
<text  x="844.67" y="1823.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="778.5" y="1509" width="0.2" height="15.0" fill="rgb(244,95,53)" rx="2" ry="2" />
<text  x="781.49" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="14.4" y="1765" width="0.2" height="15.0" fill="rgb(244,81,54)" rx="2" ry="2" />
<text  x="17.43" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="362.6" y="1877" width="0.2" height="15.0" fill="rgb(243,203,5)" rx="2" ry="2" />
<text  x="365.55" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="747.3" y="1701" width="0.2" height="15.0" fill="rgb(232,215,46)" rx="2" ry="2" />
<text  x="750.30" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="54.5" y="1877" width="0.2" height="15.0" fill="rgb(236,15,41)" rx="2" ry="2" />
<text  x="57.47" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (28 samples, 0.48%)</title><rect x="1100.7" y="1637" width="5.6" height="15.0" fill="rgb(243,74,29)" rx="2" ry="2" />
<text  x="1103.65" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="672.4" y="1893" width="0.2" height="15.0" fill="rgb(251,9,32)" rx="2" ry="2" />
<text  x="675.44" y="1903.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="832.2" y="1589" width="0.2" height="15.0" fill="rgb(230,175,17)" rx="2" ry="2" />
<text  x="835.22" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="862.8" y="1797" width="0.2" height="15.0" fill="rgb(249,2,9)" rx="2" ry="2" />
<text  x="865.80" y="1807.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (4 samples, 0.07%)</title><rect x="567.0" y="1989" width="0.8" height="15.0" fill="rgb(205,187,44)" rx="2" ry="2" />
<text  x="570.00" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::StackCacheEntry, std::default_delete&lt;folly::fibers::StackCacheEntry&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.5" y="1925" width="0.2" height="15.0" fill="rgb(211,116,8)" rx="2" ry="2" />
<text  x="22.46" y="1935.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="347.5" y="1509" width="0.2" height="15.0" fill="rgb(211,35,4)" rx="2" ry="2" />
<text  x="350.46" y="1519.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::~small_vector (4 samples, 0.07%)</title><rect x="81.4" y="1957" width="0.8" height="15.0" fill="rgb(207,8,1)" rx="2" ry="2" />
<text  x="84.44" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="152.7" y="341" width="0.2" height="15.0" fill="rgb(250,106,47)" rx="2" ry="2" />
<text  x="155.67" y="351.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="19.1" y="1525" width="0.2" height="15.0" fill="rgb(235,0,18)" rx="2" ry="2" />
<text  x="22.06" y="1535.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="97.1" y="1877" width="0.2" height="15.0" fill="rgb(252,1,17)" rx="2" ry="2" />
<text  x="100.13" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="152.7" y="229" width="0.2" height="15.0" fill="rgb(210,220,17)" rx="2" ry="2" />
<text  x="155.67" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="832.4" y="1573" width="0.2" height="15.0" fill="rgb(233,219,8)" rx="2" ry="2" />
<text  x="835.42" y="1583.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="97.1" y="1893" width="0.2" height="15.0" fill="rgb(215,218,45)" rx="2" ry="2" />
<text  x="100.13" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1109.3" y="1653" width="0.2" height="15.0" fill="rgb(251,212,36)" rx="2" ry="2" />
<text  x="1112.31" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (1 samples, 0.02%)</title><rect x="234.2" y="1861" width="0.2" height="15.0" fill="rgb(242,83,24)" rx="2" ry="2" />
<text  x="237.17" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendCommon (2 samples, 0.03%)</title><rect x="614.3" y="2005" width="0.4" height="15.0" fill="rgb(219,87,37)" rx="2" ry="2" />
<text  x="617.29" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="614.1" y="2021" width="2.2" height="15.0" fill="rgb(227,228,34)" rx="2" ry="2" />
<text  x="617.09" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="916.9" y="1701" width="0.2" height="15.0" fill="rgb(253,142,18)" rx="2" ry="2" />
<text  x="919.93" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="1173.1" y="1989" width="0.6" height="15.0" fill="rgb(217,3,14)" rx="2" ry="2" />
<text  x="1176.10" y="1999.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="920.6" y="1717" width="0.2" height="15.0" fill="rgb(241,90,7)" rx="2" ry="2" />
<text  x="923.56" y="1727.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="919.8" y="1909" width="0.2" height="15.0" fill="rgb(253,101,47)" rx="2" ry="2" />
<text  x="922.75" y="1919.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="407.8" y="1685" width="0.2" height="15.0" fill="rgb(249,174,3)" rx="2" ry="2" />
<text  x="410.83" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="101.0" y="2037" width="0.2" height="15.0" fill="rgb(248,198,40)" rx="2" ry="2" />
<text  x="103.95" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1109.3" y="1829" width="0.2" height="15.0" fill="rgb(214,122,21)" rx="2" ry="2" />
<text  x="1112.31" y="1839.5" ></text>
</g>
<g >
<title>security_socket_getpeername (3 samples, 0.05%)</title><rect x="668.6" y="1861" width="0.6" height="15.0" fill="rgb(241,28,26)" rx="2" ry="2" />
<text  x="671.62" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (9 samples, 0.15%)</title><rect x="282.3" y="1637" width="1.8" height="15.0" fill="rgb(208,25,0)" rx="2" ry="2" />
<text  x="285.26" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (3 samples, 0.05%)</title><rect x="1183.4" y="2021" width="0.6" height="15.0" fill="rgb(245,225,21)" rx="2" ry="2" />
<text  x="1186.36" y="2031.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1030.4" y="1893" width="0.2" height="15.0" fill="rgb(252,143,24)" rx="2" ry="2" />
<text  x="1033.43" y="1903.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="88.9" y="1845" width="0.2" height="15.0" fill="rgb(205,143,9)" rx="2" ry="2" />
<text  x="91.88" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="701.8" y="1893" width="0.2" height="15.0" fill="rgb(221,74,13)" rx="2" ry="2" />
<text  x="704.82" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="747.7" y="1717" width="0.2" height="15.0" fill="rgb(213,57,25)" rx="2" ry="2" />
<text  x="750.70" y="1727.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="90.9" y="1941" width="0.2" height="15.0" fill="rgb(224,69,20)" rx="2" ry="2" />
<text  x="93.89" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="29.1" y="1941" width="0.2" height="15.0" fill="rgb(215,226,33)" rx="2" ry="2" />
<text  x="32.12" y="1951.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.02%)</title><rect x="441.6" y="1621" width="0.2" height="15.0" fill="rgb(250,219,0)" rx="2" ry="2" />
<text  x="444.63" y="1631.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="347.5" y="1925" width="0.4" height="15.0" fill="rgb(210,161,24)" rx="2" ry="2" />
<text  x="350.46" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="407.0" y="1989" width="0.2" height="15.0" fill="rgb(243,119,43)" rx="2" ry="2" />
<text  x="410.02" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="465.2" y="2005" width="0.2" height="15.0" fill="rgb(209,3,53)" rx="2" ry="2" />
<text  x="468.18" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1023.0" y="1941" width="0.4" height="15.0" fill="rgb(236,163,39)" rx="2" ry="2" />
<text  x="1025.98" y="1951.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="1058.2" y="1685" width="0.2" height="15.0" fill="rgb(214,72,38)" rx="2" ry="2" />
<text  x="1061.20" y="1695.5" ></text>
</g>
<g >
<title>void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="985.8" y="1925" width="1.2" height="15.0" fill="rgb(218,199,17)" rx="2" ry="2" />
<text  x="988.75" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="552.5" y="1957" width="0.2" height="15.0" fill="rgb(205,187,11)" rx="2" ry="2" />
<text  x="555.51" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (8 samples, 0.14%)</title><rect x="1146.9" y="2037" width="1.6" height="15.0" fill="rgb(245,136,51)" rx="2" ry="2" />
<text  x="1149.94" y="2047.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="984.3" y="1973" width="0.2" height="15.0" fill="rgb(208,193,29)" rx="2" ry="2" />
<text  x="987.35" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (30 samples, 0.51%)</title><rect x="65.5" y="1973" width="6.1" height="15.0" fill="rgb(217,148,5)" rx="2" ry="2" />
<text  x="68.54" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="747.7" y="1637" width="0.2" height="15.0" fill="rgb(245,139,45)" rx="2" ry="2" />
<text  x="750.70" y="1647.5" ></text>
</g>
<g >
<title>folly::EventCallback::EventCallback (3 samples, 0.05%)</title><rect x="547.7" y="1957" width="0.6" height="15.0" fill="rgb(218,35,24)" rx="2" ry="2" />
<text  x="550.68" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="740.7" y="1445" width="0.2" height="15.0" fill="rgb(205,28,3)" rx="2" ry="2" />
<text  x="743.66" y="1455.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::handleErrMessages (15 samples, 0.26%)</title><rect x="35.8" y="1989" width="3.0" height="15.0" fill="rgb(246,91,45)" rx="2" ry="2" />
<text  x="38.76" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="563.2" y="1877" width="0.2" height="15.0" fill="rgb(205,209,21)" rx="2" ry="2" />
<text  x="566.18" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="491.7" y="1877" width="0.2" height="15.0" fill="rgb(237,6,6)" rx="2" ry="2" />
<text  x="494.74" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="840.9" y="1701" width="0.2" height="15.0" fill="rgb(214,119,2)" rx="2" ry="2" />
<text  x="843.87" y="1711.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="342.0" y="1557" width="0.2" height="15.0" fill="rgb(247,158,42)" rx="2" ry="2" />
<text  x="345.03" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="801.2" y="1669" width="0.6" height="15.0" fill="rgb(209,162,11)" rx="2" ry="2" />
<text  x="804.23" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="563.2" y="1861" width="0.2" height="15.0" fill="rgb(224,166,46)" rx="2" ry="2" />
<text  x="566.18" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="721.1" y="1765" width="0.4" height="15.0" fill="rgb(221,128,49)" rx="2" ry="2" />
<text  x="724.14" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="602.2" y="1877" width="0.2" height="15.0" fill="rgb(240,80,46)" rx="2" ry="2" />
<text  x="605.21" y="1887.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="797.8" y="1653" width="0.4" height="15.0" fill="rgb(239,177,42)" rx="2" ry="2" />
<text  x="800.81" y="1663.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1000.0" y="1941" width="0.2" height="15.0" fill="rgb(224,129,12)" rx="2" ry="2" />
<text  x="1003.04" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (15 samples, 0.26%)</title><rect x="646.5" y="2037" width="3.0" height="15.0" fill="rgb(209,150,32)" rx="2" ry="2" />
<text  x="649.48" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (1 samples, 0.02%)</title><rect x="884.9" y="1925" width="0.2" height="15.0" fill="rgb(233,37,37)" rx="2" ry="2" />
<text  x="887.94" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="955.0" y="1973" width="0.2" height="15.0" fill="rgb(251,13,53)" rx="2" ry="2" />
<text  x="957.97" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="305.4" y="1749" width="0.2" height="15.0" fill="rgb(233,156,19)" rx="2" ry="2" />
<text  x="308.40" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="543.9" y="1909" width="0.2" height="15.0" fill="rgb(247,215,18)" rx="2" ry="2" />
<text  x="546.86" y="1919.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (2 samples, 0.03%)</title><rect x="147.4" y="53" width="0.4" height="15.0" fill="rgb(243,156,20)" rx="2" ry="2" />
<text  x="150.44" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="690.4" y="1909" width="0.2" height="15.0" fill="rgb(220,213,29)" rx="2" ry="2" />
<text  x="693.35" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (141 samples, 2.40%)</title><rect x="124.3" y="341" width="28.4" height="15.0" fill="rgb(247,76,42)" rx="2" ry="2" />
<text  x="127.30" y="351.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="925.4" y="1973" width="0.2" height="15.0" fill="rgb(241,206,37)" rx="2" ry="2" />
<text  x="928.39" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1094.0" y="1877" width="0.2" height="15.0" fill="rgb(231,217,32)" rx="2" ry="2" />
<text  x="1097.01" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (9 samples, 0.15%)</title><rect x="140.6" y="37" width="1.8" height="15.0" fill="rgb(253,24,21)" rx="2" ry="2" />
<text  x="143.60" y="47.5" ></text>
</g>
<g >
<title>[unknown] (165 samples, 2.81%)</title><rect x="123.1" y="1941" width="33.2" height="15.0" fill="rgb(251,32,35)" rx="2" ry="2" />
<text  x="126.09" y="1951.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="575.0" y="1973" width="0.5" height="15.0" fill="rgb(242,36,1)" rx="2" ry="2" />
<text  x="578.05" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1030.4" y="2005" width="0.2" height="15.0" fill="rgb(220,54,53)" rx="2" ry="2" />
<text  x="1033.43" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (3 samples, 0.05%)</title><rect x="1169.7" y="2053" width="0.6" height="15.0" fill="rgb(241,105,54)" rx="2" ry="2" />
<text  x="1172.68" y="2063.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="985.6" y="1845" width="0.2" height="15.0" fill="rgb(226,179,41)" rx="2" ry="2" />
<text  x="988.55" y="1855.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="783.3" y="1301" width="0.2" height="15.0" fill="rgb(244,202,21)" rx="2" ry="2" />
<text  x="786.32" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="885" width="29.6" height="15.0" fill="rgb(250,3,29)" rx="2" ry="2" />
<text  x="127.10" y="895.5" >[u..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="730.2" y="1589" width="0.2" height="15.0" fill="rgb(223,24,31)" rx="2" ry="2" />
<text  x="733.19" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1075.9" y="1877" width="0.2" height="15.0" fill="rgb(239,61,30)" rx="2" ry="2" />
<text  x="1078.90" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="902.2" y="2005" width="0.4" height="15.0" fill="rgb(236,67,3)" rx="2" ry="2" />
<text  x="905.24" y="2015.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1152.2" y="2005" width="0.2" height="15.0" fill="rgb(228,132,39)" rx="2" ry="2" />
<text  x="1155.17" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="747.7" y="1493" width="0.2" height="15.0" fill="rgb(217,31,29)" rx="2" ry="2" />
<text  x="750.70" y="1503.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1164.4" y="1909" width="0.4" height="15.0" fill="rgb(221,150,51)" rx="2" ry="2" />
<text  x="1167.44" y="1919.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="345.8" y="1573" width="0.3" height="15.0" fill="rgb(231,182,30)" rx="2" ry="2" />
<text  x="348.85" y="1583.5" ></text>
</g>
<g >
<title>std::__exception_ptr::operator==@plt (1 samples, 0.02%)</title><rect x="942.7" y="1909" width="0.2" height="15.0" fill="rgb(215,30,3)" rx="2" ry="2" />
<text  x="945.69" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="186.3" y="1861" width="0.4" height="15.0" fill="rgb(230,9,30)" rx="2" ry="2" />
<text  x="189.28" y="1871.5" ></text>
</g>
<g >
<title>sk_reset_timer (14 samples, 0.24%)</title><rect x="302.0" y="1781" width="2.8" height="15.0" fill="rgb(241,116,2)" rx="2" ry="2" />
<text  x="304.98" y="1791.5" ></text>
</g>
<g >
<title>__madvise (6 samples, 0.10%)</title><rect x="1126.0" y="2053" width="1.2" height="15.0" fill="rgb(222,138,43)" rx="2" ry="2" />
<text  x="1129.01" y="2063.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSocket (60 samples, 1.02%)</title><rect x="659.4" y="1973" width="12.0" height="15.0" fill="rgb(213,198,53)" rx="2" ry="2" />
<text  x="662.36" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="307.2" y="1813" width="0.2" height="15.0" fill="rgb(254,32,34)" rx="2" ry="2" />
<text  x="310.21" y="1823.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="903.3" y="1621" width="0.2" height="15.0" fill="rgb(241,33,19)" rx="2" ry="2" />
<text  x="906.25" y="1631.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (6 samples, 0.10%)</title><rect x="310.8" y="1925" width="1.2" height="15.0" fill="rgb(230,76,15)" rx="2" ry="2" />
<text  x="313.84" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="433.6" y="1685" width="0.2" height="15.0" fill="rgb(215,196,3)" rx="2" ry="2" />
<text  x="436.58" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="750.1" y="1637" width="0.2" height="15.0" fill="rgb(233,5,8)" rx="2" ry="2" />
<text  x="753.12" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="888.2" y="1813" width="0.2" height="15.0" fill="rgb(231,128,3)" rx="2" ry="2" />
<text  x="891.16" y="1823.5" ></text>
</g>
<g >
<title>__kfree_skb (79 samples, 1.35%)</title><rect x="1068.9" y="1925" width="15.9" height="15.0" fill="rgb(236,106,47)" rx="2" ry="2" />
<text  x="1071.86" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13 samples, 0.22%)</title><rect x="459.5" y="1973" width="2.7" height="15.0" fill="rgb(208,89,20)" rx="2" ry="2" />
<text  x="462.54" y="1983.5" ></text>
</g>
<g >
<title>ip_build_and_send_pkt (1 samples, 0.02%)</title><rect x="840.9" y="1557" width="0.2" height="15.0" fill="rgb(216,168,45)" rx="2" ry="2" />
<text  x="843.87" y="1567.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="516.7" y="1765" width="0.2" height="15.0" fill="rgb(236,130,33)" rx="2" ry="2" />
<text  x="519.69" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="305.4" y="1797" width="0.2" height="15.0" fill="rgb(218,105,27)" rx="2" ry="2" />
<text  x="308.40" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::routeHandlesProcessRequest (4 samples, 0.07%)</title><rect x="924.8" y="2037" width="0.8" height="15.0" fill="rgb(247,165,19)" rx="2" ry="2" />
<text  x="927.78" y="2047.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="388.3" y="1637" width="0.2" height="15.0" fill="rgb(208,174,48)" rx="2" ry="2" />
<text  x="391.31" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="839.3" y="1909" width="0.2" height="15.0" fill="rgb(241,88,29)" rx="2" ry="2" />
<text  x="842.26" y="1919.5" ></text>
</g>
<g >
<title>__alloc_skb (16 samples, 0.27%)</title><rect x="268.2" y="1861" width="3.2" height="15.0" fill="rgb(209,18,45)" rx="2" ry="2" />
<text  x="271.18" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="516.7" y="1653" width="0.2" height="15.0" fill="rgb(224,136,0)" rx="2" ry="2" />
<text  x="519.69" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="64.9" y="1925" width="0.4" height="15.0" fill="rgb(248,2,44)" rx="2" ry="2" />
<text  x="67.94" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="190.1" y="1989" width="0.2" height="15.0" fill="rgb(210,114,16)" rx="2" ry="2" />
<text  x="193.10" y="1999.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="973.5" y="2037" width="0.2" height="15.0" fill="rgb(210,176,45)" rx="2" ry="2" />
<text  x="976.48" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::operator= (2 samples, 0.03%)</title><rect x="648.7" y="2021" width="0.4" height="15.0" fill="rgb(209,207,33)" rx="2" ry="2" />
<text  x="651.70" y="2031.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1144.3" y="1861" width="0.2" height="15.0" fill="rgb(209,212,28)" rx="2" ry="2" />
<text  x="1147.32" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="162.1" y="1989" width="0.2" height="15.0" fill="rgb(239,39,26)" rx="2" ry="2" />
<text  x="165.13" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (13 samples, 0.22%)</title><rect x="391.9" y="2021" width="2.6" height="15.0" fill="rgb(209,109,31)" rx="2" ry="2" />
<text  x="394.93" y="2031.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="642.7" y="1973" width="0.2" height="15.0" fill="rgb(220,73,40)" rx="2" ry="2" />
<text  x="645.66" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::size (1 samples, 0.02%)</title><rect x="1005.9" y="2005" width="0.2" height="15.0" fill="rgb(224,11,51)" rx="2" ry="2" />
<text  x="1008.88" y="2015.5" ></text>
</g>
<g >
<title>rb_first (1 samples, 0.02%)</title><rect x="1105.9" y="1509" width="0.2" height="15.0" fill="rgb(235,111,37)" rx="2" ry="2" />
<text  x="1108.89" y="1519.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (2 samples, 0.03%)</title><rect x="887.8" y="1893" width="0.4" height="15.0" fill="rgb(238,164,7)" rx="2" ry="2" />
<text  x="890.76" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="174.6" y="1925" width="0.2" height="15.0" fill="rgb(254,34,39)" rx="2" ry="2" />
<text  x="177.60" y="1935.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1 samples, 0.02%)</title><rect x="548.9" y="1701" width="0.2" height="15.0" fill="rgb(251,31,46)" rx="2" ry="2" />
<text  x="551.89" y="1711.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="730.2" y="1397" width="0.2" height="15.0" fill="rgb(230,67,22)" rx="2" ry="2" />
<text  x="733.19" y="1407.5" ></text>
</g>
<g >
<title>do_syscall_64 (347 samples, 5.92%)</title><rect x="394.9" y="2005" width="69.9" height="15.0" fill="rgb(216,181,54)" rx="2" ry="2" />
<text  x="397.95" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="968.2" y="1925" width="0.2" height="15.0" fill="rgb(227,81,47)" rx="2" ry="2" />
<text  x="971.25" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1149.2" y="2021" width="0.2" height="15.0" fill="rgb(217,10,14)" rx="2" ry="2" />
<text  x="1152.15" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1094.0" y="1845" width="0.2" height="15.0" fill="rgb(231,103,29)" rx="2" ry="2" />
<text  x="1097.01" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="730.2" y="1621" width="0.2" height="15.0" fill="rgb(226,119,28)" rx="2" ry="2" />
<text  x="733.19" y="1631.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (5 samples, 0.09%)</title><rect x="236.6" y="1829" width="1.0" height="15.0" fill="rgb(215,4,28)" rx="2" ry="2" />
<text  x="239.58" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="840.9" y="1685" width="0.2" height="15.0" fill="rgb(232,228,38)" rx="2" ry="2" />
<text  x="843.87" y="1695.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="887.4" y="1765" width="0.2" height="15.0" fill="rgb(212,76,49)" rx="2" ry="2" />
<text  x="890.35" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1032.4" y="1797" width="0.2" height="15.0" fill="rgb(227,190,21)" rx="2" ry="2" />
<text  x="1035.44" y="1807.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="123.1" y="1877" width="0.2" height="15.0" fill="rgb(245,216,7)" rx="2" ry="2" />
<text  x="126.09" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="486.3" y="1845" width="0.6" height="15.0" fill="rgb(211,26,37)" rx="2" ry="2" />
<text  x="489.31" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="750.1" y="1685" width="0.2" height="15.0" fill="rgb(224,103,41)" rx="2" ry="2" />
<text  x="753.12" y="1695.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="169.6" y="1989" width="0.8" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="172.57" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4 samples, 0.07%)</title><rect x="605.8" y="1973" width="0.8" height="15.0" fill="rgb(240,24,44)" rx="2" ry="2" />
<text  x="608.84" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="347.5" y="1685" width="0.2" height="15.0" fill="rgb(231,20,22)" rx="2" ry="2" />
<text  x="350.46" y="1695.5" ></text>
</g>
<g >
<title>folly::operator!= (1 samples, 0.02%)</title><rect x="855.0" y="1957" width="0.2" height="15.0" fill="rgb(212,166,44)" rx="2" ry="2" />
<text  x="857.96" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="362.6" y="1733" width="0.2" height="15.0" fill="rgb(245,101,50)" rx="2" ry="2" />
<text  x="365.55" y="1743.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="516.7" y="1893" width="0.2" height="15.0" fill="rgb(211,89,49)" rx="2" ry="2" />
<text  x="519.69" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="548.9" y="1781" width="0.2" height="15.0" fill="rgb(230,52,18)" rx="2" ry="2" />
<text  x="551.89" y="1791.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="908.3" y="1973" width="0.2" height="15.0" fill="rgb(246,2,36)" rx="2" ry="2" />
<text  x="911.28" y="1983.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="13.6" y="1861" width="0.8" height="15.0" fill="rgb(221,170,51)" rx="2" ry="2" />
<text  x="16.62" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="51.3" y="1877" width="0.2" height="15.0" fill="rgb(234,226,2)" rx="2" ry="2" />
<text  x="54.25" y="1887.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="929.8" y="1989" width="0.2" height="15.0" fill="rgb(220,157,33)" rx="2" ry="2" />
<text  x="932.81" y="1999.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;folly::ShutdownSocketSet,  (1 samples, 0.02%)</title><rect x="577.9" y="1989" width="0.2" height="15.0" fill="rgb(239,34,50)" rx="2" ry="2" />
<text  x="580.86" y="1999.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.07%)</title><rect x="667.6" y="1861" width="0.8" height="15.0" fill="rgb(228,109,14)" rx="2" ry="2" />
<text  x="670.61" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1153.0" y="1973" width="0.2" height="15.0" fill="rgb(254,88,20)" rx="2" ry="2" />
<text  x="1155.97" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1054.4" y="1957" width="0.2" height="15.0" fill="rgb(221,133,40)" rx="2" ry="2" />
<text  x="1057.37" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="848.1" y="1909" width="0.2" height="15.0" fill="rgb(213,35,40)" rx="2" ry="2" />
<text  x="851.11" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="775.5" y="1461" width="0.2" height="15.0" fill="rgb(224,29,37)" rx="2" ry="2" />
<text  x="778.47" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="114.8" y="1893" width="0.8" height="15.0" fill="rgb(218,27,26)" rx="2" ry="2" />
<text  x="117.84" y="1903.5" ></text>
</g>
<g >
<title>carbon-global-s (11 samples, 0.19%)</title><rect x="10.0" y="2069" width="2.2" height="15.0" fill="rgb(224,138,54)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" ></text>
</g>
<g >
<title>folly::netops::close (2 samples, 0.03%)</title><rect x="852.5" y="1941" width="0.4" height="15.0" fill="rgb(215,147,26)" rx="2" ry="2" />
<text  x="855.54" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1085.0" y="1861" width="0.2" height="15.0" fill="rgb(213,179,10)" rx="2" ry="2" />
<text  x="1087.96" y="1871.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="780.3" y="1605" width="0.2" height="15.0" fill="rgb(248,224,13)" rx="2" ry="2" />
<text  x="783.30" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="1149.2" y="1557" width="0.2" height="15.0" fill="rgb(246,51,47)" rx="2" ry="2" />
<text  x="1152.15" y="1567.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="891.2" y="1781" width="0.2" height="15.0" fill="rgb(250,50,52)" rx="2" ry="2" />
<text  x="894.18" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="265.2" y="1829" width="0.2" height="15.0" fill="rgb(236,71,44)" rx="2" ry="2" />
<text  x="268.16" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="524.7" y="1941" width="0.2" height="15.0" fill="rgb(219,37,20)" rx="2" ry="2" />
<text  x="527.74" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1119.6" y="1861" width="0.2" height="15.0" fill="rgb(239,77,28)" rx="2" ry="2" />
<text  x="1122.57" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="992.0" y="1813" width="0.2" height="15.0" fill="rgb(229,105,38)" rx="2" ry="2" />
<text  x="994.99" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="672.4" y="1957" width="0.2" height="15.0" fill="rgb(240,40,23)" rx="2" ry="2" />
<text  x="675.44" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="819.5" y="1573" width="0.2" height="15.0" fill="rgb(207,153,12)" rx="2" ry="2" />
<text  x="822.54" y="1583.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="967.6" y="2005" width="0.4" height="15.0" fill="rgb(227,46,42)" rx="2" ry="2" />
<text  x="970.64" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McAsciiParserBase::readValue (2 samples, 0.03%)</title><rect x="195.9" y="2021" width="0.4" height="15.0" fill="rgb(245,0,29)" rx="2" ry="2" />
<text  x="198.93" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="818.7" y="1701" width="0.2" height="15.0" fill="rgb(241,51,49)" rx="2" ry="2" />
<text  x="821.73" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (1 samples, 0.02%)</title><rect x="691.8" y="2037" width="0.2" height="15.0" fill="rgb(238,81,11)" rx="2" ry="2" />
<text  x="694.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="997" width="29.8" height="15.0" fill="rgb(231,42,43)" rx="2" ry="2" />
<text  x="127.10" y="1007.5" >[u..</text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="886.1" y="1925" width="0.2" height="15.0" fill="rgb(218,224,45)" rx="2" ry="2" />
<text  x="889.15" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="272.4" y="1717" width="0.2" height="15.0" fill="rgb(229,56,35)" rx="2" ry="2" />
<text  x="275.40" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (13 samples, 0.22%)</title><rect x="693.2" y="1973" width="2.6" height="15.0" fill="rgb(236,71,29)" rx="2" ry="2" />
<text  x="696.17" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (1 samples, 0.02%)</title><rect x="75.6" y="1861" width="0.2" height="15.0" fill="rgb(235,175,0)" rx="2" ry="2" />
<text  x="78.60" y="1871.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="233.0" y="1781" width="0.2" height="15.0" fill="rgb(225,19,43)" rx="2" ry="2" />
<text  x="235.96" y="1791.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="516.7" y="1621" width="0.2" height="15.0" fill="rgb(233,101,54)" rx="2" ry="2" />
<text  x="519.69" y="1631.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="588.9" y="1861" width="0.2" height="15.0" fill="rgb(222,209,4)" rx="2" ry="2" />
<text  x="591.93" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="903.3" y="1797" width="0.2" height="15.0" fill="rgb(243,23,48)" rx="2" ry="2" />
<text  x="906.25" y="1807.5" ></text>
</g>
<g >
<title>evict (65 samples, 1.11%)</title><rect x="730.6" y="1717" width="13.1" height="15.0" fill="rgb(245,95,44)" rx="2" ry="2" />
<text  x="733.60" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="152.3" y="197" width="0.2" height="15.0" fill="rgb(243,68,18)" rx="2" ry="2" />
<text  x="155.27" y="207.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (2 samples, 0.03%)</title><rect x="865.4" y="1941" width="0.4" height="15.0" fill="rgb(227,215,0)" rx="2" ry="2" />
<text  x="868.42" y="1951.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="324.3" y="1941" width="0.2" height="15.0" fill="rgb(246,54,52)" rx="2" ry="2" />
<text  x="327.32" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="312.0" y="1845" width="0.2" height="15.0" fill="rgb(219,23,34)" rx="2" ry="2" />
<text  x="315.04" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="809.5" y="1445" width="0.2" height="15.0" fill="rgb(213,40,18)" rx="2" ry="2" />
<text  x="812.48" y="1455.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.03%)</title><rect x="1121.2" y="2037" width="0.4" height="15.0" fill="rgb(234,130,43)" rx="2" ry="2" />
<text  x="1124.18" y="2047.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="454.7" y="1621" width="0.2" height="15.0" fill="rgb(234,129,29)" rx="2" ry="2" />
<text  x="457.71" y="1631.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (7 samples, 0.12%)</title><rect x="255.9" y="1909" width="1.4" height="15.0" fill="rgb(221,208,26)" rx="2" ry="2" />
<text  x="258.90" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="99.7" y="1957" width="0.2" height="15.0" fill="rgb(248,24,20)" rx="2" ry="2" />
<text  x="102.75" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="930.4" y="1989" width="0.2" height="15.0" fill="rgb(207,189,25)" rx="2" ry="2" />
<text  x="933.42" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="593.2" y="1685" width="0.2" height="15.0" fill="rgb(218,49,1)" rx="2" ry="2" />
<text  x="596.16" y="1695.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="354.9" y="1941" width="0.2" height="15.0" fill="rgb(249,112,7)" rx="2" ry="2" />
<text  x="357.90" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="701.8" y="1781" width="0.2" height="15.0" fill="rgb(238,118,2)" rx="2" ry="2" />
<text  x="704.82" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (14 samples, 0.24%)</title><rect x="42.0" y="1957" width="2.8" height="15.0" fill="rgb(241,97,28)" rx="2" ry="2" />
<text  x="45.00" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="114.4" y="2005" width="0.4" height="15.0" fill="rgb(205,63,52)" rx="2" ry="2" />
<text  x="117.44" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="100.8" y="2037" width="0.2" height="15.0" fill="rgb(234,58,26)" rx="2" ry="2" />
<text  x="103.75" y="2047.5" ></text>
</g>
<g >
<title>__fdget (20 samples, 0.34%)</title><rect x="428.8" y="1973" width="4.0" height="15.0" fill="rgb(243,157,7)" rx="2" ry="2" />
<text  x="431.76" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="90.7" y="1957" width="0.2" height="15.0" fill="rgb(241,117,14)" rx="2" ry="2" />
<text  x="93.69" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="741.9" y="1589" width="0.2" height="15.0" fill="rgb(236,90,41)" rx="2" ry="2" />
<text  x="744.87" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="407.2" y="1957" width="0.2" height="15.0" fill="rgb(215,125,1)" rx="2" ry="2" />
<text  x="410.22" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="891.0" y="1957" width="0.4" height="15.0" fill="rgb(253,12,26)" rx="2" ry="2" />
<text  x="893.98" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="312.4" y="1909" width="0.2" height="15.0" fill="rgb(245,130,48)" rx="2" ry="2" />
<text  x="315.45" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="750.1" y="1525" width="0.2" height="15.0" fill="rgb(212,212,40)" rx="2" ry="2" />
<text  x="753.12" y="1535.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="84.9" y="1893" width="0.2" height="15.0" fill="rgb(241,11,50)" rx="2" ry="2" />
<text  x="87.86" y="1903.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="89.1" y="1829" width="0.2" height="15.0" fill="rgb(225,164,38)" rx="2" ry="2" />
<text  x="92.08" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="707.3" y="1669" width="0.2" height="15.0" fill="rgb(245,119,23)" rx="2" ry="2" />
<text  x="710.25" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="433.6" y="1957" width="0.2" height="15.0" fill="rgb(238,30,44)" rx="2" ry="2" />
<text  x="436.58" y="1967.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.02%)</title><rect x="365.4" y="1893" width="0.2" height="15.0" fill="rgb(254,213,11)" rx="2" ry="2" />
<text  x="368.37" y="1903.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (1 samples, 0.02%)</title><rect x="1152.0" y="1973" width="0.2" height="15.0" fill="rgb(215,164,9)" rx="2" ry="2" />
<text  x="1154.97" y="1983.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="257.1" y="1893" width="0.2" height="15.0" fill="rgb(245,204,14)" rx="2" ry="2" />
<text  x="260.11" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="552.1" y="1973" width="0.6" height="15.0" fill="rgb(233,65,50)" rx="2" ry="2" />
<text  x="555.11" y="1983.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="237.4" y="1781" width="0.2" height="15.0" fill="rgb(231,219,21)" rx="2" ry="2" />
<text  x="240.39" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="623.9" y="2005" width="0.6" height="15.0" fill="rgb(239,57,27)" rx="2" ry="2" />
<text  x="626.95" y="2015.5" ></text>
</g>
<g >
<title>remove_wait_queue (17 samples, 0.29%)</title><rect x="451.5" y="1941" width="3.4" height="15.0" fill="rgb(241,227,1)" rx="2" ry="2" />
<text  x="454.49" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="920.6" y="1813" width="0.2" height="15.0" fill="rgb(253,51,48)" rx="2" ry="2" />
<text  x="923.56" y="1823.5" ></text>
</g>
<g >
<title>vfprintf (7 samples, 0.12%)</title><rect x="216.5" y="2021" width="1.4" height="15.0" fill="rgb(218,89,4)" rx="2" ry="2" />
<text  x="219.46" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="920.0" y="1957" width="0.2" height="15.0" fill="rgb(239,220,43)" rx="2" ry="2" />
<text  x="922.95" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1023.0" y="1845" width="0.4" height="15.0" fill="rgb(251,140,32)" rx="2" ry="2" />
<text  x="1025.98" y="1855.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (48 samples, 0.82%)</title><rect x="661.8" y="1957" width="9.6" height="15.0" fill="rgb(240,21,3)" rx="2" ry="2" />
<text  x="664.78" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="696.2" y="1973" width="0.2" height="15.0" fill="rgb(226,182,30)" rx="2" ry="2" />
<text  x="699.19" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="903.3" y="1589" width="0.2" height="15.0" fill="rgb(254,157,3)" rx="2" ry="2" />
<text  x="906.25" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1096.2" y="1797" width="0.2" height="15.0" fill="rgb(230,55,47)" rx="2" ry="2" />
<text  x="1099.23" y="1807.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1054.6" y="2005" width="0.2" height="15.0" fill="rgb(228,176,46)" rx="2" ry="2" />
<text  x="1057.57" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="272.2" y="1781" width="0.4" height="15.0" fill="rgb(238,48,16)" rx="2" ry="2" />
<text  x="275.20" y="1791.5" ></text>
</g>
<g >
<title>folly::FormatArg::initSlow (2 samples, 0.03%)</title><rect x="973.7" y="2037" width="0.4" height="15.0" fill="rgb(235,111,40)" rx="2" ry="2" />
<text  x="976.68" y="2047.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (3 samples, 0.05%)</title><rect x="215.7" y="2021" width="0.6" height="15.0" fill="rgb(240,27,16)" rx="2" ry="2" />
<text  x="218.65" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (25 samples, 0.43%)</title><rect x="164.5" y="1973" width="5.1" height="15.0" fill="rgb(224,224,54)" rx="2" ry="2" />
<text  x="167.54" y="1983.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::end (1 samples, 0.02%)</title><rect x="972.3" y="2005" width="0.2" height="15.0" fill="rgb(249,150,2)" rx="2" ry="2" />
<text  x="975.27" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::good (2 samples, 0.03%)</title><rect x="860.8" y="1973" width="0.4" height="15.0" fill="rgb(232,65,33)" rx="2" ry="2" />
<text  x="863.79" y="1983.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.03%)</title><rect x="1155.2" y="1973" width="0.4" height="15.0" fill="rgb(233,208,15)" rx="2" ry="2" />
<text  x="1158.19" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (4 samples, 0.07%)</title><rect x="114.8" y="1973" width="0.8" height="15.0" fill="rgb(246,22,18)" rx="2" ry="2" />
<text  x="117.84" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="454.7" y="1845" width="0.2" height="15.0" fill="rgb(211,31,6)" rx="2" ry="2" />
<text  x="457.71" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="299.6" y="1749" width="0.2" height="15.0" fill="rgb(212,33,2)" rx="2" ry="2" />
<text  x="302.57" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8 samples, 0.14%)</title><rect x="380.3" y="1893" width="1.6" height="15.0" fill="rgb(225,140,53)" rx="2" ry="2" />
<text  x="383.26" y="1903.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1088.0" y="1621" width="0.2" height="15.0" fill="rgb(230,82,19)" rx="2" ry="2" />
<text  x="1090.98" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::fiberFunc (23 samples, 0.39%)</title><rect x="987.4" y="1925" width="4.6" height="15.0" fill="rgb(205,89,17)" rx="2" ry="2" />
<text  x="990.36" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="230.5" y="1797" width="0.2" height="15.0" fill="rgb(210,29,31)" rx="2" ry="2" />
<text  x="233.55" y="1807.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (4 samples, 0.07%)</title><rect x="843.5" y="1925" width="0.8" height="15.0" fill="rgb(210,196,48)" rx="2" ry="2" />
<text  x="846.49" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="188.5" y="1909" width="0.2" height="15.0" fill="rgb(238,199,25)" rx="2" ry="2" />
<text  x="191.49" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="593.0" y="1909" width="0.6" height="15.0" fill="rgb(245,101,22)" rx="2" ry="2" />
<text  x="595.96" y="1919.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (2 samples, 0.03%)</title><rect x="194.7" y="1989" width="0.4" height="15.0" fill="rgb(227,195,18)" rx="2" ry="2" />
<text  x="197.73" y="1999.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.07%)</title><rect x="815.3" y="1669" width="0.8" height="15.0" fill="rgb(216,20,44)" rx="2" ry="2" />
<text  x="818.31" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.4" y="1877" width="0.2" height="15.0" fill="rgb(206,227,20)" rx="2" ry="2" />
<text  x="892.37" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1023.0" y="1813" width="0.2" height="15.0" fill="rgb(253,21,36)" rx="2" ry="2" />
<text  x="1025.98" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="721.3" y="1637" width="0.2" height="15.0" fill="rgb(235,164,23)" rx="2" ry="2" />
<text  x="724.34" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="176.4" y="1829" width="0.2" height="15.0" fill="rgb(249,139,37)" rx="2" ry="2" />
<text  x="179.42" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="364.4" y="1861" width="0.2" height="15.0" fill="rgb(228,32,29)" rx="2" ry="2" />
<text  x="367.36" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="631.6" y="1861" width="0.2" height="15.0" fill="rgb(216,157,30)" rx="2" ry="2" />
<text  x="634.59" y="1871.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="78.6" y="1925" width="0.2" height="15.0" fill="rgb(210,223,27)" rx="2" ry="2" />
<text  x="81.62" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="237.4" y="1749" width="0.2" height="15.0" fill="rgb(220,34,18)" rx="2" ry="2" />
<text  x="240.39" y="1759.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (9 samples, 0.15%)</title><rect x="989.8" y="1909" width="1.8" height="15.0" fill="rgb(210,212,33)" rx="2" ry="2" />
<text  x="992.78" y="1919.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="255.1" y="1653" width="0.2" height="15.0" fill="rgb(228,129,48)" rx="2" ry="2" />
<text  x="258.10" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="64.1" y="1733" width="0.2" height="15.0" fill="rgb(251,75,45)" rx="2" ry="2" />
<text  x="67.13" y="1743.5" ></text>
</g>
<g >
<title>___slab_alloc (6 samples, 0.10%)</title><rect x="383.9" y="1877" width="1.2" height="15.0" fill="rgb(224,183,26)" rx="2" ry="2" />
<text  x="386.88" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="593.4" y="1685" width="0.2" height="15.0" fill="rgb(209,36,2)" rx="2" ry="2" />
<text  x="596.36" y="1695.5" ></text>
</g>
<g >
<title>sock_close (359 samples, 6.12%)</title><rect x="750.3" y="1797" width="72.3" height="15.0" fill="rgb(211,229,14)" rx="2" ry="2" />
<text  x="753.32" y="1807.5" >sock_close</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="831.0" y="1589" width="0.2" height="15.0" fill="rgb(251,35,17)" rx="2" ry="2" />
<text  x="834.01" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="539.4" y="1925" width="0.2" height="15.0" fill="rgb(226,218,37)" rx="2" ry="2" />
<text  x="542.43" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="255.1" y="1877" width="0.2" height="15.0" fill="rgb(237,70,7)" rx="2" ry="2" />
<text  x="258.10" y="1887.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.07%)</title><rect x="815.3" y="1621" width="0.8" height="15.0" fill="rgb(212,104,40)" rx="2" ry="2" />
<text  x="818.31" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="464.0" y="1797" width="0.8" height="15.0" fill="rgb(208,185,31)" rx="2" ry="2" />
<text  x="466.97" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="299.6" y="1765" width="0.2" height="15.0" fill="rgb(211,66,22)" rx="2" ry="2" />
<text  x="302.57" y="1775.5" ></text>
</g>
<g >
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="441.6" y="1589" width="0.2" height="15.0" fill="rgb(253,181,5)" rx="2" ry="2" />
<text  x="444.63" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="324.1" y="1973" width="0.4" height="15.0" fill="rgb(221,228,33)" rx="2" ry="2" />
<text  x="327.12" y="1983.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="873.3" y="1989" width="0.2" height="15.0" fill="rgb(221,61,8)" rx="2" ry="2" />
<text  x="876.27" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::stackHighWatermark (2 samples, 0.03%)</title><rect x="166.4" y="1925" width="0.4" height="15.0" fill="rgb(227,119,41)" rx="2" ry="2" />
<text  x="169.35" y="1935.5" ></text>
</g>
<g >
<title>ip_send_check (12 samples, 0.20%)</title><rect x="776.3" y="1621" width="2.4" height="15.0" fill="rgb(226,27,27)" rx="2" ry="2" />
<text  x="779.28" y="1631.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1109.3" y="1717" width="0.2" height="15.0" fill="rgb(247,173,44)" rx="2" ry="2" />
<text  x="1112.31" y="1727.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="347.5" y="1829" width="0.2" height="15.0" fill="rgb(206,87,3)" rx="2" ry="2" />
<text  x="350.46" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="681.5" y="1925" width="0.2" height="15.0" fill="rgb(216,112,18)" rx="2" ry="2" />
<text  x="684.50" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="903.3" y="1813" width="0.2" height="15.0" fill="rgb(209,95,13)" rx="2" ry="2" />
<text  x="906.25" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="741.9" y="1541" width="0.2" height="15.0" fill="rgb(218,61,35)" rx="2" ry="2" />
<text  x="744.87" y="1551.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="153.7" y="901" width="0.2" height="15.0" fill="rgb(250,177,22)" rx="2" ry="2" />
<text  x="156.68" y="911.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="674.1" y="1877" width="0.2" height="15.0" fill="rgb(218,121,53)" rx="2" ry="2" />
<text  x="677.05" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="56.7" y="1861" width="0.2" height="15.0" fill="rgb(226,63,17)" rx="2" ry="2" />
<text  x="59.68" y="1871.5" ></text>
</g>
<g >
<title>sk_destruct (1 samples, 0.02%)</title><rect x="407.8" y="1701" width="0.2" height="15.0" fill="rgb(207,67,53)" rx="2" ry="2" />
<text  x="410.83" y="1711.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="88.9" y="1861" width="0.2" height="15.0" fill="rgb(252,1,25)" rx="2" ry="2" />
<text  x="91.88" y="1871.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="233.0" y="1621" width="0.2" height="15.0" fill="rgb(205,119,0)" rx="2" ry="2" />
<text  x="235.96" y="1631.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="54.1" y="1941" width="0.6" height="15.0" fill="rgb(212,184,45)" rx="2" ry="2" />
<text  x="57.07" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="99.7" y="1941" width="0.2" height="15.0" fill="rgb(254,221,8)" rx="2" ry="2" />
<text  x="102.75" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="633.2" y="1829" width="0.2" height="15.0" fill="rgb(230,208,25)" rx="2" ry="2" />
<text  x="636.20" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="316.1" y="1845" width="0.2" height="15.0" fill="rgb(244,91,1)" rx="2" ry="2" />
<text  x="319.07" y="1855.5" ></text>
</g>
<g >
<title>mod_timer (37 samples, 0.63%)</title><rect x="805.3" y="1621" width="7.4" height="15.0" fill="rgb(229,211,41)" rx="2" ry="2" />
<text  x="808.25" y="1631.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (15 samples, 0.26%)</title><rect x="982.7" y="1989" width="3.1" height="15.0" fill="rgb(214,62,14)" rx="2" ry="2" />
<text  x="985.74" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="255.5" y="1925" width="0.2" height="15.0" fill="rgb(245,175,46)" rx="2" ry="2" />
<text  x="258.50" y="1935.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="67.6" y="1909" width="0.4" height="15.0" fill="rgb(212,117,7)" rx="2" ry="2" />
<text  x="70.55" y="1919.5" ></text>
</g>
<g >
<title>std::__weak_count&lt; (1 samples, 0.02%)</title><rect x="89.1" y="1941" width="0.2" height="15.0" fill="rgb(219,1,26)" rx="2" ry="2" />
<text  x="92.08" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="64.7" y="1733" width="0.2" height="15.0" fill="rgb(213,83,22)" rx="2" ry="2" />
<text  x="67.73" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="968.2" y="1957" width="0.2" height="15.0" fill="rgb(208,174,29)" rx="2" ry="2" />
<text  x="971.25" y="1967.5" ></text>
</g>
<g >
<title>std::move&lt;folly::ShutdownSocketSet*&amp;&gt; (1 samples, 0.02%)</title><rect x="553.9" y="1957" width="0.2" height="15.0" fill="rgb(220,82,9)" rx="2" ry="2" />
<text  x="556.92" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="923.4" y="1941" width="0.2" height="15.0" fill="rgb(231,173,52)" rx="2" ry="2" />
<text  x="926.37" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="968.2" y="1989" width="0.2" height="15.0" fill="rgb(251,123,6)" rx="2" ry="2" />
<text  x="971.25" y="1999.5" ></text>
</g>
<g >
<title>[mcrouter] (1 samples, 0.02%)</title><rect x="121.9" y="2037" width="0.2" height="15.0" fill="rgb(210,221,38)" rx="2" ry="2" />
<text  x="124.88" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="99.7" y="1845" width="0.2" height="15.0" fill="rgb(228,136,23)" rx="2" ry="2" />
<text  x="102.75" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="860.2" y="1941" width="0.2" height="15.0" fill="rgb(208,216,44)" rx="2" ry="2" />
<text  x="863.19" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::reference_wrapper&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="976.5" y="1989" width="0.2" height="15.0" fill="rgb(219,69,31)" rx="2" ry="2" />
<text  x="979.50" y="1999.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="588.3" y="1861" width="0.2" height="15.0" fill="rgb(225,136,14)" rx="2" ry="2" />
<text  x="591.33" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_base_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.10%)</title><rect x="196.3" y="1989" width="1.2" height="15.0" fill="rgb(208,209,3)" rx="2" ry="2" />
<text  x="199.34" y="1999.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="880.1" y="1829" width="0.2" height="15.0" fill="rgb(225,82,14)" rx="2" ry="2" />
<text  x="883.11" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="82.4" y="1957" width="0.2" height="15.0" fill="rgb(222,200,22)" rx="2" ry="2" />
<text  x="85.44" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::pump (1 samples, 0.02%)</title><rect x="1167.3" y="2053" width="0.2" height="15.0" fill="rgb(241,190,39)" rx="2" ry="2" />
<text  x="1170.26" y="2063.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="516.7" y="1605" width="0.2" height="15.0" fill="rgb(224,132,40)" rx="2" ry="2" />
<text  x="519.69" y="1615.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="775.5" y="1557" width="0.2" height="15.0" fill="rgb(211,59,11)" rx="2" ry="2" />
<text  x="778.47" y="1567.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (29 samples, 0.49%)</title><rect x="163.7" y="1989" width="5.9" height="15.0" fill="rgb(230,29,21)" rx="2" ry="2" />
<text  x="166.74" y="1999.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1097.4" y="1893" width="0.4" height="15.0" fill="rgb(229,149,54)" rx="2" ry="2" />
<text  x="1100.44" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestination&lt;facebook::memcache::AsyncMcClient&gt;::handleRxmittingConnection (1 samples, 0.02%)</title><rect x="1167.5" y="2053" width="0.2" height="15.0" fill="rgb(245,176,47)" rx="2" ry="2" />
<text  x="1170.46" y="2063.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (2 samples, 0.03%)</title><rect x="70.6" y="1861" width="0.4" height="15.0" fill="rgb(222,15,39)" rx="2" ry="2" />
<text  x="73.57" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromLocalAddress (78 samples, 1.33%)</title><rect x="579.9" y="1989" width="15.7" height="15.0" fill="rgb(226,156,53)" rx="2" ry="2" />
<text  x="582.88" y="1999.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="573.6" y="1957" width="0.2" height="15.0" fill="rgb(235,201,32)" rx="2" ry="2" />
<text  x="576.64" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1149.2" y="1829" width="0.2" height="15.0" fill="rgb(228,114,29)" rx="2" ry="2" />
<text  x="1152.15" y="1839.5" ></text>
</g>
<g >
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="803.6" y="1653" width="0.6" height="15.0" fill="rgb(210,144,46)" rx="2" ry="2" />
<text  x="806.64" y="1663.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="989.4" y="1797" width="0.2" height="15.0" fill="rgb(218,74,46)" rx="2" ry="2" />
<text  x="992.38" y="1807.5" ></text>
</g>
<g >
<title>inet_sendmsg (261 samples, 4.45%)</title><rect x="258.1" y="1925" width="52.5" height="15.0" fill="rgb(210,51,47)" rx="2" ry="2" />
<text  x="261.11" y="1935.5" >inet_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.05%)</title><rect x="1182.8" y="2021" width="0.6" height="15.0" fill="rgb(218,20,22)" rx="2" ry="2" />
<text  x="1185.76" y="2031.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (1 samples, 0.02%)</title><rect x="1150.8" y="1925" width="0.2" height="15.0" fill="rgb(205,199,34)" rx="2" ry="2" />
<text  x="1153.76" y="1935.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (5 samples, 0.09%)</title><rect x="847.1" y="1909" width="1.0" height="15.0" fill="rgb(242,159,15)" rx="2" ry="2" />
<text  x="850.11" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::empty (7 samples, 0.12%)</title><rect x="37.4" y="1973" width="1.4" height="15.0" fill="rgb(227,150,44)" rx="2" ry="2" />
<text  x="40.37" y="1983.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (3 samples, 0.05%)</title><rect x="843.7" y="1877" width="0.6" height="15.0" fill="rgb(215,170,36)" rx="2" ry="2" />
<text  x="846.69" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="899.4" y="1749" width="0.2" height="15.0" fill="rgb(249,20,45)" rx="2" ry="2" />
<text  x="902.43" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (2 samples, 0.03%)</title><rect x="858.6" y="1989" width="0.4" height="15.0" fill="rgb(224,12,7)" rx="2" ry="2" />
<text  x="861.58" y="1999.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="841.5" y="1909" width="0.2" height="15.0" fill="rgb(206,165,51)" rx="2" ry="2" />
<text  x="844.47" y="1919.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (3 samples, 0.05%)</title><rect x="954.2" y="1989" width="0.6" height="15.0" fill="rgb(248,118,0)" rx="2" ry="2" />
<text  x="957.16" y="1999.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="984.1" y="1973" width="0.2" height="15.0" fill="rgb(241,3,25)" rx="2" ry="2" />
<text  x="987.14" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="188.5" y="1973" width="0.2" height="15.0" fill="rgb(230,142,32)" rx="2" ry="2" />
<text  x="191.49" y="1983.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (1 samples, 0.02%)</title><rect x="730.2" y="1285" width="0.2" height="15.0" fill="rgb(246,171,21)" rx="2" ry="2" />
<text  x="733.19" y="1295.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="1030.4" y="1925" width="0.2" height="15.0" fill="rgb(250,99,54)" rx="2" ry="2" />
<text  x="1033.43" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1109.3" y="1749" width="0.2" height="15.0" fill="rgb(246,65,30)" rx="2" ry="2" />
<text  x="1112.31" y="1759.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="153.9" y="1269" width="0.2" height="15.0" fill="rgb(210,222,40)" rx="2" ry="2" />
<text  x="156.88" y="1279.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="844.9" y="1893" width="0.2" height="15.0" fill="rgb(216,62,16)" rx="2" ry="2" />
<text  x="847.89" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="899.4" y="1845" width="0.2" height="15.0" fill="rgb(227,226,24)" rx="2" ry="2" />
<text  x="902.43" y="1855.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.17%)</title><rect x="1032.6" y="2037" width="2.1" height="15.0" fill="rgb(219,166,34)" rx="2" ry="2" />
<text  x="1035.64" y="2047.5" ></text>
</g>
<g >
<title>sock_recvmsg (264 samples, 4.50%)</title><rect x="1058.4" y="1973" width="53.1" height="15.0" fill="rgb(209,103,39)" rx="2" ry="2" />
<text  x="1061.40" y="1983.5" >sock_..</text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (37 samples, 0.63%)</title><rect x="626.8" y="1989" width="7.4" height="15.0" fill="rgb(230,196,7)" rx="2" ry="2" />
<text  x="629.76" y="1999.5" ></text>
</g>
<g >
<title>__GI___getpeername (47 samples, 0.80%)</title><rect x="661.8" y="1941" width="9.4" height="15.0" fill="rgb(230,68,49)" rx="2" ry="2" />
<text  x="664.78" y="1951.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="862.8" y="1669" width="0.2" height="15.0" fill="rgb(254,171,6)" rx="2" ry="2" />
<text  x="865.80" y="1679.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="747.1" y="1717" width="0.2" height="15.0" fill="rgb(205,1,8)" rx="2" ry="2" />
<text  x="750.10" y="1727.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="114.0" y="2005" width="0.4" height="15.0" fill="rgb(208,111,22)" rx="2" ry="2" />
<text  x="117.03" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="513.3" y="1893" width="0.2" height="15.0" fill="rgb(247,15,17)" rx="2" ry="2" />
<text  x="516.27" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1557" width="30.4" height="15.0" fill="rgb(211,26,38)" rx="2" ry="2" />
<text  x="127.10" y="1567.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::McServerSession::processMultiOpEnd (1 samples, 0.02%)</title><rect x="692.4" y="2037" width="0.2" height="15.0" fill="rgb(210,196,23)" rx="2" ry="2" />
<text  x="695.36" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="846.9" y="1909" width="0.2" height="15.0" fill="rgb(207,36,41)" rx="2" ry="2" />
<text  x="849.91" y="1919.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="1087.8" y="1653" width="0.2" height="15.0" fill="rgb(205,25,9)" rx="2" ry="2" />
<text  x="1090.78" y="1663.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="115.4" y="1829" width="0.2" height="15.0" fill="rgb(224,39,41)" rx="2" ry="2" />
<text  x="118.44" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="767.4" y="1589" width="0.2" height="15.0" fill="rgb(254,120,20)" rx="2" ry="2" />
<text  x="770.42" y="1599.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (1 samples, 0.02%)</title><rect x="601.8" y="1909" width="0.2" height="15.0" fill="rgb(236,19,23)" rx="2" ry="2" />
<text  x="604.81" y="1919.5" ></text>
</g>
<g >
<title>tcp_sndbuf_expand (1 samples, 0.02%)</title><rect x="510.7" y="1589" width="0.2" height="15.0" fill="rgb(233,10,23)" rx="2" ry="2" />
<text  x="513.65" y="1599.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (71 samples, 1.21%)</title><rect x="657.3" y="2005" width="14.3" height="15.0" fill="rgb(244,3,40)" rx="2" ry="2" />
<text  x="660.35" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="345.8" y="1797" width="0.3" height="15.0" fill="rgb(224,75,2)" rx="2" ry="2" />
<text  x="348.85" y="1807.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="919.8" y="1861" width="0.2" height="15.0" fill="rgb(236,28,47)" rx="2" ry="2" />
<text  x="922.75" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1148.7" y="1781" width="0.2" height="15.0" fill="rgb(233,74,37)" rx="2" ry="2" />
<text  x="1151.75" y="1791.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="1058.2" y="1637" width="0.2" height="15.0" fill="rgb(208,133,37)" rx="2" ry="2" />
<text  x="1061.20" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="152.3" y="117" width="0.2" height="15.0" fill="rgb(235,205,15)" rx="2" ry="2" />
<text  x="155.27" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="1027.4" y="2037" width="0.2" height="15.0" fill="rgb(232,63,32)" rx="2" ry="2" />
<text  x="1030.41" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="316.1" y="1797" width="0.2" height="15.0" fill="rgb(246,108,1)" rx="2" ry="2" />
<text  x="319.07" y="1807.5" ></text>
</g>
<g >
<title>folly::EventHandler::libeventCallback (3 samples, 0.05%)</title><rect x="1179.9" y="2053" width="0.6" height="15.0" fill="rgb(210,167,1)" rx="2" ry="2" />
<text  x="1182.94" y="2063.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="962.4" y="2005" width="0.2" height="15.0" fill="rgb(228,214,52)" rx="2" ry="2" />
<text  x="965.41" y="2015.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="114.8" y="1717" width="0.2" height="15.0" fill="rgb(232,155,17)" rx="2" ry="2" />
<text  x="117.84" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="721.3" y="1397" width="0.2" height="15.0" fill="rgb(223,66,30)" rx="2" ry="2" />
<text  x="724.34" y="1407.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="160.1" y="2005" width="0.4" height="15.0" fill="rgb(224,214,14)" rx="2" ry="2" />
<text  x="163.12" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="310.6" y="1877" width="0.2" height="15.0" fill="rgb(205,180,10)" rx="2" ry="2" />
<text  x="313.63" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="1164.4" y="1877" width="0.4" height="15.0" fill="rgb(238,15,22)" rx="2" ry="2" />
<text  x="1167.44" y="1887.5" ></text>
</g>
<g >
<title>__libc_recv (442 samples, 7.54%)</title><rect x="1037.1" y="2053" width="88.9" height="15.0" fill="rgb(254,103,19)" rx="2" ry="2" />
<text  x="1040.07" y="2063.5" >__libc_recv</text>
</g>
<g >
<title>folly::netops::close (649 samples, 11.07%)</title><rect x="706.2" y="1925" width="130.6" height="15.0" fill="rgb(208,203,2)" rx="2" ry="2" />
<text  x="709.25" y="1935.5" >folly::netops::c..</text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (1 samples, 0.02%)</title><rect x="989.6" y="1909" width="0.2" height="15.0" fill="rgb(211,13,13)" rx="2" ry="2" />
<text  x="992.58" y="1919.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="554.7" y="1957" width="0.2" height="15.0" fill="rgb(223,169,14)" rx="2" ry="2" />
<text  x="557.72" y="1967.5" ></text>
</g>
<g >
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="800.6" y="1637" width="0.6" height="15.0" fill="rgb(252,207,4)" rx="2" ry="2" />
<text  x="803.62" y="1647.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="491.5" y="1701" width="0.2" height="15.0" fill="rgb(217,38,34)" rx="2" ry="2" />
<text  x="494.54" y="1711.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="588.3" y="1829" width="0.2" height="15.0" fill="rgb(253,130,2)" rx="2" ry="2" />
<text  x="591.33" y="1839.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="904.9" y="1973" width="0.2" height="15.0" fill="rgb(232,25,0)" rx="2" ry="2" />
<text  x="907.86" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="64.9" y="1957" width="0.4" height="15.0" fill="rgb(232,92,15)" rx="2" ry="2" />
<text  x="67.94" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (10 samples, 0.17%)</title><rect x="839.5" y="1909" width="2.0" height="15.0" fill="rgb(244,203,49)" rx="2" ry="2" />
<text  x="842.46" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (39 samples, 0.67%)</title><rect x="555.5" y="1957" width="7.9" height="15.0" fill="rgb(248,84,45)" rx="2" ry="2" />
<text  x="558.53" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="747.7" y="1749" width="0.2" height="15.0" fill="rgb(216,2,28)" rx="2" ry="2" />
<text  x="750.70" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="633.2" y="1893" width="0.2" height="15.0" fill="rgb(218,63,39)" rx="2" ry="2" />
<text  x="636.20" y="1903.5" ></text>
</g>
<g >
<title>std::__addressof&lt;short const&gt; (1 samples, 0.02%)</title><rect x="237.2" y="1797" width="0.2" height="15.0" fill="rgb(208,43,47)" rx="2" ry="2" />
<text  x="240.19" y="1807.5" ></text>
</g>
<g >
<title>tcp_current_mss (12 samples, 0.20%)</title><rect x="818.9" y="1717" width="2.5" height="15.0" fill="rgb(249,156,10)" rx="2" ry="2" />
<text  x="821.94" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (9 samples, 0.15%)</title><rect x="883.3" y="1941" width="1.8" height="15.0" fill="rgb(228,17,26)" rx="2" ry="2" />
<text  x="886.33" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="100.4" y="2021" width="0.4" height="15.0" fill="rgb(220,102,29)" rx="2" ry="2" />
<text  x="103.35" y="2031.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::begin (1 samples, 0.02%)</title><rect x="973.3" y="2021" width="0.2" height="15.0" fill="rgb(228,216,31)" rx="2" ry="2" />
<text  x="976.28" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="71.0" y="1717" width="0.2" height="15.0" fill="rgb(223,3,41)" rx="2" ry="2" />
<text  x="73.97" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1477" width="30.4" height="15.0" fill="rgb(235,63,43)" rx="2" ry="2" />
<text  x="127.10" y="1487.5" >[u..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="778.5" y="1381" width="0.2" height="15.0" fill="rgb(231,86,21)" rx="2" ry="2" />
<text  x="781.49" y="1391.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (13 samples, 0.22%)</title><rect x="76.2" y="1941" width="2.6" height="15.0" fill="rgb(208,67,37)" rx="2" ry="2" />
<text  x="79.20" y="1951.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (1 samples, 0.02%)</title><rect x="182.0" y="1877" width="0.3" height="15.0" fill="rgb(240,163,16)" rx="2" ry="2" />
<text  x="185.05" y="1887.5" ></text>
</g>
<g >
<title>sys_accept4 (1 samples, 0.02%)</title><rect x="389.7" y="2005" width="0.2" height="15.0" fill="rgb(226,57,39)" rx="2" ry="2" />
<text  x="392.72" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (5 samples, 0.09%)</title><rect x="927.4" y="2037" width="1.0" height="15.0" fill="rgb(251,211,48)" rx="2" ry="2" />
<text  x="930.40" y="2047.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="1126.4" y="1941" width="0.4" height="15.0" fill="rgb(247,199,10)" rx="2" ry="2" />
<text  x="1129.41" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="831.0" y="1701" width="0.2" height="15.0" fill="rgb(234,99,5)" rx="2" ry="2" />
<text  x="834.01" y="1711.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="492.9" y="1813" width="0.2" height="15.0" fill="rgb(224,103,7)" rx="2" ry="2" />
<text  x="495.95" y="1823.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="862.8" y="1701" width="0.2" height="15.0" fill="rgb(253,74,48)" rx="2" ry="2" />
<text  x="865.80" y="1711.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="919.8" y="1877" width="0.2" height="15.0" fill="rgb(228,190,14)" rx="2" ry="2" />
<text  x="922.75" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="529.4" y="1893" width="0.2" height="15.0" fill="rgb(205,126,2)" rx="2" ry="2" />
<text  x="532.37" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.03%)</title><rect x="1027.6" y="2037" width="0.4" height="15.0" fill="rgb(217,127,23)" rx="2" ry="2" />
<text  x="1030.61" y="2047.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="888.2" y="1717" width="0.2" height="15.0" fill="rgb(247,7,54)" rx="2" ry="2" />
<text  x="891.16" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="89.1" y="1909" width="0.2" height="15.0" fill="rgb(226,18,13)" rx="2" ry="2" />
<text  x="92.08" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="362.6" y="1685" width="0.2" height="15.0" fill="rgb(248,87,27)" rx="2" ry="2" />
<text  x="365.55" y="1695.5" ></text>
</g>
<g >
<title>__poll (1 samples, 0.02%)</title><rect x="13.4" y="2053" width="0.2" height="15.0" fill="rgb(227,51,32)" rx="2" ry="2" />
<text  x="16.42" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="55.1" y="1717" width="0.2" height="15.0" fill="rgb(216,50,28)" rx="2" ry="2" />
<text  x="58.08" y="1727.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="890.2" y="1957" width="0.2" height="15.0" fill="rgb(229,120,15)" rx="2" ry="2" />
<text  x="893.17" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.03%)</title><rect x="1178.7" y="1989" width="0.4" height="15.0" fill="rgb(229,98,36)" rx="2" ry="2" />
<text  x="1181.73" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="563.2" y="1893" width="0.2" height="15.0" fill="rgb(245,28,0)" rx="2" ry="2" />
<text  x="566.18" y="1903.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="1072.5" y="1845" width="0.2" height="15.0" fill="rgb(236,202,6)" rx="2" ry="2" />
<text  x="1075.48" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="238.0" y="1717" width="0.2" height="15.0" fill="rgb(215,198,36)" rx="2" ry="2" />
<text  x="240.99" y="1727.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="1087.8" y="1621" width="0.2" height="15.0" fill="rgb(234,118,32)" rx="2" ry="2" />
<text  x="1090.78" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="224.3" y="2021" width="0.4" height="15.0" fill="rgb(214,76,47)" rx="2" ry="2" />
<text  x="227.31" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="83.9" y="1701" width="0.2" height="15.0" fill="rgb(214,42,36)" rx="2" ry="2" />
<text  x="86.85" y="1711.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="569.2" y="1957" width="0.2" height="15.0" fill="rgb(247,200,19)" rx="2" ry="2" />
<text  x="572.21" y="1967.5" ></text>
</g>
<g >
<title>syscall (54 samples, 0.92%)</title><rect x="1156.2" y="1973" width="10.9" height="15.0" fill="rgb(215,150,11)" rx="2" ry="2" />
<text  x="1159.19" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="492.3" y="1797" width="0.2" height="15.0" fill="rgb(209,53,40)" rx="2" ry="2" />
<text  x="495.34" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="345.8" y="1749" width="0.3" height="15.0" fill="rgb(208,92,23)" rx="2" ry="2" />
<text  x="348.85" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="934.8" y="1909" width="0.2" height="15.0" fill="rgb(210,35,5)" rx="2" ry="2" />
<text  x="937.84" y="1919.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="347.5" y="1893" width="0.4" height="15.0" fill="rgb(246,156,25)" rx="2" ry="2" />
<text  x="350.46" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="672.0" y="1973" width="0.2" height="15.0" fill="rgb(226,57,16)" rx="2" ry="2" />
<text  x="675.04" y="1983.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (3 samples, 0.05%)</title><rect x="987.8" y="1909" width="0.6" height="15.0" fill="rgb(213,81,5)" rx="2" ry="2" />
<text  x="990.77" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="1022.0" y="1925" width="0.2" height="15.0" fill="rgb(241,91,14)" rx="2" ry="2" />
<text  x="1024.97" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (7 samples, 0.12%)</title><rect x="568.0" y="2005" width="1.4" height="15.0" fill="rgb(221,185,12)" rx="2" ry="2" />
<text  x="571.00" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1141" width="29.8" height="15.0" fill="rgb(226,123,38)" rx="2" ry="2" />
<text  x="127.10" y="1151.5" >[u..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="533.2" y="1845" width="0.2" height="15.0" fill="rgb(242,35,51)" rx="2" ry="2" />
<text  x="536.19" y="1855.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::clear (2 samples, 0.03%)</title><rect x="841.5" y="1925" width="0.4" height="15.0" fill="rgb(241,72,54)" rx="2" ry="2" />
<text  x="844.47" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="19.1" y="1749" width="0.2" height="15.0" fill="rgb(227,229,26)" rx="2" ry="2" />
<text  x="22.06" y="1759.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="961.0" y="2005" width="0.2" height="15.0" fill="rgb(207,104,12)" rx="2" ry="2" />
<text  x="964.00" y="2015.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1108.9" y="1877" width="0.2" height="15.0" fill="rgb(205,57,24)" rx="2" ry="2" />
<text  x="1111.91" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="907.7" y="1893" width="0.2" height="15.0" fill="rgb(236,16,1)" rx="2" ry="2" />
<text  x="910.68" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="730.2" y="1557" width="0.2" height="15.0" fill="rgb(226,131,28)" rx="2" ry="2" />
<text  x="733.19" y="1567.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="19.1" y="1669" width="0.2" height="15.0" fill="rgb(233,86,38)" rx="2" ry="2" />
<text  x="22.06" y="1679.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (55 samples, 0.94%)</title><rect x="626.4" y="2037" width="11.0" height="15.0" fill="rgb(233,2,13)" rx="2" ry="2" />
<text  x="629.36" y="2047.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McGetReply, std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="626.2" y="2005" width="0.2" height="15.0" fill="rgb(224,42,5)" rx="2" ry="2" />
<text  x="629.16" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1,056 samples, 18.01%)</title><rect x="692.6" y="2021" width="212.5" height="15.0" fill="rgb(241,68,54)" rx="2" ry="2" />
<text  x="695.56" y="2031.5" >[unknown]</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="844.1" y="1637" width="0.2" height="15.0" fill="rgb(246,86,9)" rx="2" ry="2" />
<text  x="847.09" y="1647.5" ></text>
</g>
<g >
<title>lock_sock_nested (14 samples, 0.24%)</title><rect x="347.1" y="1941" width="2.8" height="15.0" fill="rgb(209,16,2)" rx="2" ry="2" />
<text  x="350.06" y="1951.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (12 samples, 0.20%)</title><rect x="281.9" y="1701" width="2.4" height="15.0" fill="rgb(252,121,38)" rx="2" ry="2" />
<text  x="284.86" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="544.1" y="1925" width="0.2" height="15.0" fill="rgb(231,161,42)" rx="2" ry="2" />
<text  x="547.06" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="56.7" y="1813" width="0.2" height="15.0" fill="rgb(253,69,27)" rx="2" ry="2" />
<text  x="59.68" y="1823.5" ></text>
</g>
<g >
<title>new_slab (4 samples, 0.07%)</title><rect x="378.2" y="1861" width="0.9" height="15.0" fill="rgb(241,13,30)" rx="2" ry="2" />
<text  x="381.25" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="188.5" y="1941" width="0.2" height="15.0" fill="rgb(233,168,18)" rx="2" ry="2" />
<text  x="191.49" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1085.0" y="1845" width="0.2" height="15.0" fill="rgb(207,184,1)" rx="2" ry="2" />
<text  x="1087.96" y="1855.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (19 samples, 0.32%)</title><rect x="267.8" y="1877" width="3.8" height="15.0" fill="rgb(238,174,28)" rx="2" ry="2" />
<text  x="270.77" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="588.3" y="1877" width="0.2" height="15.0" fill="rgb(238,3,32)" rx="2" ry="2" />
<text  x="591.33" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="516.7" y="1845" width="0.2" height="15.0" fill="rgb(222,142,9)" rx="2" ry="2" />
<text  x="519.69" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="831.0" y="1637" width="0.2" height="15.0" fill="rgb(246,130,30)" rx="2" ry="2" />
<text  x="834.01" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="347.5" y="1477" width="0.2" height="15.0" fill="rgb(205,214,49)" rx="2" ry="2" />
<text  x="350.46" y="1487.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="42.4" y="1877" width="0.2" height="15.0" fill="rgb(227,65,37)" rx="2" ry="2" />
<text  x="45.40" y="1887.5" ></text>
</g>
<g >
<title>new_slab (2 samples, 0.03%)</title><rect x="461.4" y="1925" width="0.4" height="15.0" fill="rgb(206,8,5)" rx="2" ry="2" />
<text  x="464.35" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="464.0" y="1733" width="0.2" height="15.0" fill="rgb(213,156,44)" rx="2" ry="2" />
<text  x="466.97" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="316.1" y="1733" width="0.2" height="15.0" fill="rgb(248,53,35)" rx="2" ry="2" />
<text  x="319.07" y="1743.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="631.4" y="1845" width="0.2" height="15.0" fill="rgb(213,175,30)" rx="2" ry="2" />
<text  x="634.39" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="593.2" y="1765" width="0.4" height="15.0" fill="rgb(253,17,15)" rx="2" ry="2" />
<text  x="596.16" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.05%)</title><rect x="999.8" y="1989" width="0.6" height="15.0" fill="rgb(247,104,18)" rx="2" ry="2" />
<text  x="1002.84" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="930.4" y="1813" width="0.2" height="15.0" fill="rgb(217,180,46)" rx="2" ry="2" />
<text  x="933.42" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="97.1" y="1813" width="0.2" height="15.0" fill="rgb(223,142,27)" rx="2" ry="2" />
<text  x="100.13" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="433.6" y="1941" width="0.2" height="15.0" fill="rgb(231,16,10)" rx="2" ry="2" />
<text  x="436.58" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1022.0" y="1957" width="0.2" height="15.0" fill="rgb(227,18,38)" rx="2" ry="2" />
<text  x="1024.97" y="1967.5" ></text>
</g>
<g >
<title>new_inode_pseudo (1 samples, 0.02%)</title><rect x="355.1" y="1957" width="0.2" height="15.0" fill="rgb(239,151,29)" rx="2" ry="2" />
<text  x="358.11" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (12 samples, 0.20%)</title><rect x="763.4" y="1701" width="2.4" height="15.0" fill="rgb(218,184,16)" rx="2" ry="2" />
<text  x="766.40" y="1711.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.72 (1 samples, 0.02%)</title><rect x="451.3" y="1893" width="0.2" height="15.0" fill="rgb(250,131,53)" rx="2" ry="2" />
<text  x="454.29" y="1903.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="486.5" y="1781" width="0.2" height="15.0" fill="rgb(228,27,49)" rx="2" ry="2" />
<text  x="489.51" y="1791.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="491.7" y="1813" width="0.2" height="15.0" fill="rgb(224,19,28)" rx="2" ry="2" />
<text  x="494.74" y="1823.5" ></text>
</g>
<g >
<title>folly::netops::getpeername (1 samples, 0.02%)</title><rect x="699.4" y="1925" width="0.2" height="15.0" fill="rgb(221,46,21)" rx="2" ry="2" />
<text  x="702.41" y="1935.5" ></text>
</g>
<g >
<title>inode_wait_for_writeback (6 samples, 0.10%)</title><rect x="740.9" y="1701" width="1.2" height="15.0" fill="rgb(247,195,23)" rx="2" ry="2" />
<text  x="743.86" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (23 samples, 0.39%)</title><rect x="791.0" y="1525" width="4.6" height="15.0" fill="rgb(205,88,1)" rx="2" ry="2" />
<text  x="793.97" y="1535.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.0" y="1877" width="0.2" height="15.0" fill="rgb(244,42,47)" rx="2" ry="2" />
<text  x="889.95" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="633.2" y="1877" width="0.2" height="15.0" fill="rgb(246,47,43)" rx="2" ry="2" />
<text  x="636.20" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="386.9" y="1925" width="1.2" height="15.0" fill="rgb(222,83,39)" rx="2" ry="2" />
<text  x="389.90" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="750.1" y="1557" width="0.2" height="15.0" fill="rgb(252,81,7)" rx="2" ry="2" />
<text  x="753.12" y="1567.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="873.1" y="1989" width="0.2" height="15.0" fill="rgb(226,213,1)" rx="2" ry="2" />
<text  x="876.07" y="1999.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="595.8" y="1973" width="0.2" height="15.0" fill="rgb(211,147,26)" rx="2" ry="2" />
<text  x="598.77" y="1983.5" ></text>
</g>
<g >
<title>inet_accept (1 samples, 0.02%)</title><rect x="389.3" y="1973" width="0.2" height="15.0" fill="rgb(214,0,17)" rx="2" ry="2" />
<text  x="392.31" y="1983.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="345.8" y="1509" width="0.3" height="15.0" fill="rgb(246,158,7)" rx="2" ry="2" />
<text  x="348.85" y="1519.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="690.4" y="1957" width="0.2" height="15.0" fill="rgb(216,191,19)" rx="2" ry="2" />
<text  x="693.35" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="345.4" y="1637" width="0.2" height="15.0" fill="rgb(216,1,47)" rx="2" ry="2" />
<text  x="348.45" y="1647.5" ></text>
</g>
<g >
<title>folly::FormatArg::keyEmpty (2 samples, 0.03%)</title><rect x="972.9" y="2005" width="0.4" height="15.0" fill="rgb(233,217,24)" rx="2" ry="2" />
<text  x="975.88" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="114.8" y="1829" width="0.6" height="15.0" fill="rgb(216,17,6)" rx="2" ry="2" />
<text  x="117.84" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="812.5" y="1541" width="0.2" height="15.0" fill="rgb(214,8,49)" rx="2" ry="2" />
<text  x="815.50" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="812.5" y="1461" width="0.2" height="15.0" fill="rgb(217,75,39)" rx="2" ry="2" />
<text  x="815.50" y="1471.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="1176.1" y="1973" width="0.4" height="15.0" fill="rgb(213,121,14)" rx="2" ry="2" />
<text  x="1179.12" y="1983.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="667.4" y="1861" width="0.2" height="15.0" fill="rgb(210,59,7)" rx="2" ry="2" />
<text  x="670.41" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="840.9" y="1877" width="0.2" height="15.0" fill="rgb(214,3,9)" rx="2" ry="2" />
<text  x="843.87" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="19.1" y="1701" width="0.2" height="15.0" fill="rgb(214,28,4)" rx="2" ry="2" />
<text  x="22.06" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (6 samples, 0.10%)</title><rect x="229.9" y="1925" width="1.2" height="15.0" fill="rgb(206,161,11)" rx="2" ry="2" />
<text  x="232.94" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="775.5" y="1525" width="0.2" height="15.0" fill="rgb(219,228,41)" rx="2" ry="2" />
<text  x="778.47" y="1535.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="831.0" y="1557" width="0.2" height="15.0" fill="rgb(210,176,39)" rx="2" ry="2" />
<text  x="834.01" y="1567.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="864.6" y="1989" width="1.4" height="15.0" fill="rgb(216,146,39)" rx="2" ry="2" />
<text  x="867.61" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="840.9" y="1845" width="0.2" height="15.0" fill="rgb(221,146,53)" rx="2" ry="2" />
<text  x="843.87" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="548.9" y="1797" width="0.2" height="15.0" fill="rgb(225,91,50)" rx="2" ry="2" />
<text  x="551.89" y="1807.5" ></text>
</g>
<g >
<title>validate_xmit_skb (8 samples, 0.14%)</title><rect x="795.6" y="1525" width="1.6" height="15.0" fill="rgb(237,92,18)" rx="2" ry="2" />
<text  x="798.59" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="767.4" y="1653" width="0.2" height="15.0" fill="rgb(248,63,44)" rx="2" ry="2" />
<text  x="770.42" y="1663.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::value (6 samples, 0.10%)</title><rect x="1004.5" y="2005" width="1.2" height="15.0" fill="rgb(236,125,32)" rx="2" ry="2" />
<text  x="1007.47" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::rateLimited&lt;facebook::memcache::McFlushAllRequest&gt; (1 samples, 0.02%)</title><rect x="925.6" y="2005" width="0.2" height="15.0" fill="rgb(236,72,52)" rx="2" ry="2" />
<text  x="928.59" y="2015.5" ></text>
</g>
<g >
<title>netlink_has_listeners (1 samples, 0.02%)</title><rect x="100.6" y="1749" width="0.2" height="15.0" fill="rgb(234,6,48)" rx="2" ry="2" />
<text  x="103.55" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::checkClosed (774 samples, 13.20%)</title><rect x="699.8" y="1989" width="155.8" height="15.0" fill="rgb(212,11,40)" rx="2" ry="2" />
<text  x="702.81" y="1999.5" >facebook::memcache:..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="930.4" y="1781" width="0.2" height="15.0" fill="rgb(205,33,3)" rx="2" ry="2" />
<text  x="933.42" y="1791.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="812.5" y="1333" width="0.2" height="15.0" fill="rgb(217,51,23)" rx="2" ry="2" />
<text  x="815.50" y="1343.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="610.1" y="1973" width="0.2" height="15.0" fill="rgb(225,95,4)" rx="2" ry="2" />
<text  x="613.06" y="1983.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="593.4" y="1653" width="0.2" height="15.0" fill="rgb(247,35,54)" rx="2" ry="2" />
<text  x="596.36" y="1663.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="342.0" y="1765" width="0.2" height="15.0" fill="rgb(247,139,29)" rx="2" ry="2" />
<text  x="345.03" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="55.1" y="1861" width="0.2" height="15.0" fill="rgb(206,200,21)" rx="2" ry="2" />
<text  x="58.08" y="1871.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (62 samples, 1.06%)</title><rect x="554.3" y="2005" width="12.5" height="15.0" fill="rgb(224,126,14)" rx="2" ry="2" />
<text  x="557.32" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="441.4" y="1765" width="0.4" height="15.0" fill="rgb(228,23,22)" rx="2" ry="2" />
<text  x="444.43" y="1775.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="809.5" y="1477" width="0.2" height="15.0" fill="rgb(242,122,19)" rx="2" ry="2" />
<text  x="812.48" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="899.4" y="1893" width="0.2" height="15.0" fill="rgb(240,12,49)" rx="2" ry="2" />
<text  x="902.43" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="778.5" y="1605" width="0.2" height="15.0" fill="rgb(223,176,16)" rx="2" ry="2" />
<text  x="781.49" y="1615.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (11 samples, 0.19%)</title><rect x="140.6" y="53" width="2.2" height="15.0" fill="rgb(249,84,48)" rx="2" ry="2" />
<text  x="143.60" y="63.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="672.0" y="1989" width="0.2" height="15.0" fill="rgb(213,221,11)" rx="2" ry="2" />
<text  x="675.04" y="1999.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="797.4" y="1573" width="0.2" height="15.0" fill="rgb(208,168,10)" rx="2" ry="2" />
<text  x="800.40" y="1583.5" ></text>
</g>
<g >
<title>folly::netops::getsockname (1 samples, 0.02%)</title><rect x="595.4" y="1973" width="0.2" height="15.0" fill="rgb(205,210,1)" rx="2" ry="2" />
<text  x="598.37" y="1983.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="240.6" y="1813" width="0.2" height="15.0" fill="rgb(239,4,34)" rx="2" ry="2" />
<text  x="243.61" y="1823.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::AddressStorage::AddressStorage (1 samples, 0.02%)</title><rect x="580.9" y="1893" width="0.2" height="15.0" fill="rgb(221,23,12)" rx="2" ry="2" />
<text  x="583.88" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="691.6" y="1829" width="0.2" height="15.0" fill="rgb(221,146,19)" rx="2" ry="2" />
<text  x="694.56" y="1839.5" ></text>
</g>
<g >
<title>__check_heap_object (4 samples, 0.07%)</title><rect x="264.6" y="1861" width="0.8" height="15.0" fill="rgb(215,121,22)" rx="2" ry="2" />
<text  x="267.55" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="492.3" y="1861" width="0.2" height="15.0" fill="rgb(237,140,37)" rx="2" ry="2" />
<text  x="495.34" y="1871.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="989.4" y="1765" width="0.2" height="15.0" fill="rgb(245,221,25)" rx="2" ry="2" />
<text  x="992.38" y="1775.5" ></text>
</g>
<g >
<title>folly::atomic_ref&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="194.9" y="1973" width="0.2" height="15.0" fill="rgb(225,210,36)" rx="2" ry="2" />
<text  x="197.93" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::IoHandler (9 samples, 0.15%)</title><rect x="540.4" y="2005" width="1.8" height="15.0" fill="rgb(229,208,6)" rx="2" ry="2" />
<text  x="543.44" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="464.0" y="1941" width="0.8" height="15.0" fill="rgb(227,175,42)" rx="2" ry="2" />
<text  x="466.97" y="1951.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1149.2" y="1701" width="0.2" height="15.0" fill="rgb(208,14,35)" rx="2" ry="2" />
<text  x="1152.15" y="1711.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (4 samples, 0.07%)</title><rect x="170.6" y="2005" width="0.8" height="15.0" fill="rgb(235,13,27)" rx="2" ry="2" />
<text  x="173.58" y="2015.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="802.0" y="1685" width="0.2" height="15.0" fill="rgb(225,124,13)" rx="2" ry="2" />
<text  x="805.03" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="633.4" y="1941" width="0.2" height="15.0" fill="rgb(210,150,54)" rx="2" ry="2" />
<text  x="636.40" y="1951.5" ></text>
</g>
<g >
<title>folly::FormatArg::validate (4 samples, 0.07%)</title><rect x="972.5" y="2021" width="0.8" height="15.0" fill="rgb(230,86,27)" rx="2" ry="2" />
<text  x="975.47" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="364.4" y="1877" width="0.2" height="15.0" fill="rgb(214,214,9)" rx="2" ry="2" />
<text  x="367.36" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="775.5" y="1605" width="0.2" height="15.0" fill="rgb(235,190,47)" rx="2" ry="2" />
<text  x="778.47" y="1615.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (3 samples, 0.05%)</title><rect x="208.2" y="2021" width="0.6" height="15.0" fill="rgb(241,40,1)" rx="2" ry="2" />
<text  x="211.21" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="149.2" y="37" width="0.3" height="15.0" fill="rgb(245,60,52)" rx="2" ry="2" />
<text  x="152.25" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="64.9" y="1909" width="0.4" height="15.0" fill="rgb(244,23,52)" rx="2" ry="2" />
<text  x="67.94" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="65.1" y="1829" width="0.2" height="15.0" fill="rgb(236,49,45)" rx="2" ry="2" />
<text  x="68.14" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="800.8" y="1525" width="0.4" height="15.0" fill="rgb(220,122,37)" rx="2" ry="2" />
<text  x="803.83" y="1535.5" ></text>
</g>
<g >
<title>inet_csk_route_child_sock (1 samples, 0.02%)</title><rect x="832.2" y="1621" width="0.2" height="15.0" fill="rgb(207,210,44)" rx="2" ry="2" />
<text  x="835.22" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="303.8" y="1733" width="0.8" height="15.0" fill="rgb(208,160,51)" rx="2" ry="2" />
<text  x="306.79" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="312.0" y="1797" width="0.2" height="15.0" fill="rgb(213,163,21)" rx="2" ry="2" />
<text  x="315.04" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1111.3" y="1893" width="0.2" height="15.0" fill="rgb(245,152,40)" rx="2" ry="2" />
<text  x="1114.32" y="1903.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="75.2" y="1877" width="0.6" height="15.0" fill="rgb(231,105,23)" rx="2" ry="2" />
<text  x="78.20" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="492.3" y="1733" width="0.2" height="15.0" fill="rgb(208,209,31)" rx="2" ry="2" />
<text  x="495.34" y="1743.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="64.1" y="1749" width="0.2" height="15.0" fill="rgb(221,81,18)" rx="2" ry="2" />
<text  x="67.13" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="923.4" y="1925" width="0.2" height="15.0" fill="rgb(207,110,37)" rx="2" ry="2" />
<text  x="926.37" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="812.5" y="1573" width="0.2" height="15.0" fill="rgb(205,226,36)" rx="2" ry="2" />
<text  x="815.50" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="433.6" y="1653" width="0.2" height="15.0" fill="rgb(237,18,43)" rx="2" ry="2" />
<text  x="436.58" y="1663.5" ></text>
</g>
<g >
<title>free (5 samples, 0.09%)</title><rect x="188.9" y="2005" width="1.0" height="15.0" fill="rgb(232,168,29)" rx="2" ry="2" />
<text  x="191.89" y="2015.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.10 (1 samples, 0.02%)</title><rect x="1126.0" y="1957" width="0.2" height="15.0" fill="rgb(238,165,26)" rx="2" ry="2" />
<text  x="1129.01" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ioReady (320 samples, 5.46%)</title><rect x="32.9" y="2005" width="64.4" height="15.0" fill="rgb(246,128,15)" rx="2" ry="2" />
<text  x="35.94" y="2015.5" >folly::..</text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::~McServerRequestContext (4 samples, 0.07%)</title><rect x="197.9" y="2021" width="0.9" height="15.0" fill="rgb(248,45,8)" rx="2" ry="2" />
<text  x="200.95" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="730.2" y="1413" width="0.2" height="15.0" fill="rgb(228,205,44)" rx="2" ry="2" />
<text  x="733.19" y="1423.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="809.5" y="1365" width="0.2" height="15.0" fill="rgb(213,214,36)" rx="2" ry="2" />
<text  x="812.48" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="152.3" y="229" width="0.2" height="15.0" fill="rgb(241,101,1)" rx="2" ry="2" />
<text  x="155.27" y="239.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="606.2" y="1957" width="0.4" height="15.0" fill="rgb(243,129,27)" rx="2" ry="2" />
<text  x="609.24" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (1 samples, 0.02%)</title><rect x="19.3" y="1941" width="0.2" height="15.0" fill="rgb(224,129,30)" rx="2" ry="2" />
<text  x="22.26" y="1951.5" ></text>
</g>
<g >
<title>intel_pmu_handle_irq (1 samples, 0.02%)</title><rect x="10.6" y="1829" width="0.2" height="15.0" fill="rgb(233,70,47)" rx="2" ry="2" />
<text  x="13.60" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="347.5" y="1733" width="0.2" height="15.0" fill="rgb(208,30,40)" rx="2" ry="2" />
<text  x="350.46" y="1743.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1148.7" y="1925" width="0.2" height="15.0" fill="rgb(227,164,15)" rx="2" ry="2" />
<text  x="1151.75" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="543.9" y="1861" width="0.2" height="15.0" fill="rgb(228,109,54)" rx="2" ry="2" />
<text  x="546.86" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1082.1" y="1701" width="0.2" height="15.0" fill="rgb(211,189,32)" rx="2" ry="2" />
<text  x="1085.14" y="1711.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="790.4" y="1525" width="0.2" height="15.0" fill="rgb(250,72,42)" rx="2" ry="2" />
<text  x="793.36" y="1535.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (8 samples, 0.14%)</title><rect x="849.7" y="1925" width="1.6" height="15.0" fill="rgb(230,141,29)" rx="2" ry="2" />
<text  x="852.72" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1168.7" y="2021" width="0.2" height="15.0" fill="rgb(249,206,26)" rx="2" ry="2" />
<text  x="1171.67" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="920.6" y="1973" width="0.2" height="15.0" fill="rgb(220,225,52)" rx="2" ry="2" />
<text  x="923.56" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="908.7" y="1989" width="0.4" height="15.0" fill="rgb(221,165,15)" rx="2" ry="2" />
<text  x="911.68" y="1999.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="370.0" y="1877" width="0.2" height="15.0" fill="rgb(208,131,40)" rx="2" ry="2" />
<text  x="373.00" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="55.3" y="1893" width="0.2" height="15.0" fill="rgb(245,228,26)" rx="2" ry="2" />
<text  x="58.28" y="1903.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="840.9" y="1541" width="0.2" height="15.0" fill="rgb(222,75,45)" rx="2" ry="2" />
<text  x="843.87" y="1551.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="707.3" y="1861" width="0.2" height="15.0" fill="rgb(220,212,3)" rx="2" ry="2" />
<text  x="710.25" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="388.3" y="1845" width="0.2" height="15.0" fill="rgb(243,229,43)" rx="2" ry="2" />
<text  x="391.31" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="167.6" y="1941" width="0.2" height="15.0" fill="rgb(243,22,25)" rx="2" ry="2" />
<text  x="170.56" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="362.6" y="1749" width="0.2" height="15.0" fill="rgb(241,45,40)" rx="2" ry="2" />
<text  x="365.55" y="1759.5" ></text>
</g>
<g >
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="1141.1" y="1957" width="0.2" height="15.0" fill="rgb(224,9,51)" rx="2" ry="2" />
<text  x="1144.10" y="1967.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="747.1" y="1653" width="0.2" height="15.0" fill="rgb(245,194,22)" rx="2" ry="2" />
<text  x="750.10" y="1663.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (14 samples, 0.24%)</title><rect x="302.0" y="1797" width="2.8" height="15.0" fill="rgb(241,115,2)" rx="2" ry="2" />
<text  x="304.98" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="978.7" y="1941" width="0.2" height="15.0" fill="rgb(236,228,3)" rx="2" ry="2" />
<text  x="981.71" y="1951.5" ></text>
</g>
<g >
<title>new_inode_pseudo (85 samples, 1.45%)</title><rect x="355.5" y="1941" width="17.1" height="15.0" fill="rgb(228,158,33)" rx="2" ry="2" />
<text  x="358.51" y="1951.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="464.4" y="1653" width="0.2" height="15.0" fill="rgb(247,208,3)" rx="2" ry="2" />
<text  x="467.37" y="1663.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="240.6" y="1781" width="0.2" height="15.0" fill="rgb(232,135,18)" rx="2" ry="2" />
<text  x="243.61" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="916.7" y="1893" width="0.2" height="15.0" fill="rgb(208,18,20)" rx="2" ry="2" />
<text  x="919.73" y="1903.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="651.1" y="1941" width="0.2" height="15.0" fill="rgb(215,15,7)" rx="2" ry="2" />
<text  x="654.11" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="342.0" y="1701" width="0.2" height="15.0" fill="rgb(209,65,8)" rx="2" ry="2" />
<text  x="345.03" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1054.4" y="1941" width="0.2" height="15.0" fill="rgb(237,111,17)" rx="2" ry="2" />
<text  x="1057.37" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="64.9" y="1893" width="0.4" height="15.0" fill="rgb(218,200,23)" rx="2" ry="2" />
<text  x="67.94" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1001.2" y="1989" width="0.2" height="15.0" fill="rgb(250,45,17)" rx="2" ry="2" />
<text  x="1004.25" y="1999.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="55.1" y="1701" width="0.2" height="15.0" fill="rgb(206,190,38)" rx="2" ry="2" />
<text  x="58.08" y="1711.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="347.5" y="1669" width="0.2" height="15.0" fill="rgb(241,103,29)" rx="2" ry="2" />
<text  x="350.46" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="593.2" y="1749" width="0.4" height="15.0" fill="rgb(245,107,19)" rx="2" ry="2" />
<text  x="596.16" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (751 samples, 12.81%)</title><rect x="702.6" y="1957" width="151.1" height="15.0" fill="rgb(236,55,4)" rx="2" ry="2" />
<text  x="705.63" y="1967.5" >folly::AsyncSocket:..</text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="84.1" y="1749" width="0.2" height="15.0" fill="rgb(231,45,4)" rx="2" ry="2" />
<text  x="87.05" y="1759.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="433.8" y="1941" width="0.2" height="15.0" fill="rgb(218,134,35)" rx="2" ry="2" />
<text  x="436.79" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="925.6" y="2021" width="0.6" height="15.0" fill="rgb(231,79,41)" rx="2" ry="2" />
<text  x="928.59" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="54.5" y="1925" width="0.2" height="15.0" fill="rgb(235,122,22)" rx="2" ry="2" />
<text  x="57.47" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (4 samples, 0.07%)</title><rect x="572.2" y="1989" width="0.8" height="15.0" fill="rgb(231,7,4)" rx="2" ry="2" />
<text  x="575.23" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_tx_ctxtdesc (1 samples, 0.02%)</title><rect x="295.5" y="1637" width="0.2" height="15.0" fill="rgb(241,124,52)" rx="2" ry="2" />
<text  x="298.54" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="816.5" y="1541" width="0.2" height="15.0" fill="rgb(253,170,12)" rx="2" ry="2" />
<text  x="819.52" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1381" width="30.0" height="15.0" fill="rgb(253,146,36)" rx="2" ry="2" />
<text  x="127.10" y="1391.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::McServerThread::AcceptCallback::connectionAccepted (4 samples, 0.07%)</title><rect x="905.3" y="2005" width="0.8" height="15.0" fill="rgb(252,88,26)" rx="2" ry="2" />
<text  x="908.26" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (4 samples, 0.07%)</title><rect x="464.0" y="1877" width="0.8" height="15.0" fill="rgb(225,0,28)" rx="2" ry="2" />
<text  x="466.97" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (44 samples, 0.75%)</title><rect x="596.6" y="2005" width="8.8" height="15.0" fill="rgb(209,149,1)" rx="2" ry="2" />
<text  x="599.58" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (38 samples, 0.65%)</title><rect x="618.7" y="2037" width="7.7" height="15.0" fill="rgb(252,198,33)" rx="2" ry="2" />
<text  x="621.71" y="2047.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1174.7" y="1941" width="0.2" height="15.0" fill="rgb(226,49,33)" rx="2" ry="2" />
<text  x="1177.71" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="535.2" y="1893" width="0.8" height="15.0" fill="rgb(227,148,27)" rx="2" ry="2" />
<text  x="538.20" y="1903.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="690.4" y="1893" width="0.2" height="15.0" fill="rgb(243,115,22)" rx="2" ry="2" />
<text  x="693.35" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="90.7" y="1893" width="0.2" height="15.0" fill="rgb(239,208,34)" rx="2" ry="2" />
<text  x="93.69" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1168.7" y="2005" width="0.2" height="15.0" fill="rgb(221,163,22)" rx="2" ry="2" />
<text  x="1171.67" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="696.8" y="1989" width="0.2" height="15.0" fill="rgb(250,210,9)" rx="2" ry="2" />
<text  x="699.79" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="790.4" y="1509" width="0.2" height="15.0" fill="rgb(211,42,2)" rx="2" ry="2" />
<text  x="793.36" y="1519.5" ></text>
</g>
<g >
<title>folly::make_atomic_ref_t::operator (1 samples, 0.02%)</title><rect x="195.5" y="2005" width="0.2" height="15.0" fill="rgb(249,99,31)" rx="2" ry="2" />
<text  x="198.53" y="2015.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="940.1" y="1861" width="0.2" height="15.0" fill="rgb(254,41,31)" rx="2" ry="2" />
<text  x="943.08" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.0" y="1765" width="0.2" height="15.0" fill="rgb(234,220,4)" rx="2" ry="2" />
<text  x="834.01" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="173.2" y="1925" width="0.2" height="15.0" fill="rgb(213,169,0)" rx="2" ry="2" />
<text  x="176.20" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="345.8" y="1813" width="0.3" height="15.0" fill="rgb(215,229,14)" rx="2" ry="2" />
<text  x="348.85" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (4 samples, 0.07%)</title><rect x="75.2" y="1893" width="0.8" height="15.0" fill="rgb(218,27,19)" rx="2" ry="2" />
<text  x="78.20" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="740.7" y="1589" width="0.2" height="15.0" fill="rgb(254,106,22)" rx="2" ry="2" />
<text  x="743.66" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="345.4" y="1861" width="0.2" height="15.0" fill="rgb(242,18,41)" rx="2" ry="2" />
<text  x="348.45" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetRequest::~McGetRequest (14 samples, 0.24%)</title><rect x="870.7" y="2005" width="2.8" height="15.0" fill="rgb(247,188,24)" rx="2" ry="2" />
<text  x="873.65" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="347.5" y="1781" width="0.2" height="15.0" fill="rgb(214,99,28)" rx="2" ry="2" />
<text  x="350.46" y="1791.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="188.5" y="1861" width="0.2" height="15.0" fill="rgb(218,175,14)" rx="2" ry="2" />
<text  x="191.49" y="1871.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="1148.7" y="1733" width="0.2" height="15.0" fill="rgb(235,147,40)" rx="2" ry="2" />
<text  x="1151.75" y="1743.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="492.3" y="1637" width="0.2" height="15.0" fill="rgb(238,92,22)" rx="2" ry="2" />
<text  x="495.34" y="1647.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="255.1" y="1829" width="0.2" height="15.0" fill="rgb(222,25,3)" rx="2" ry="2" />
<text  x="258.10" y="1839.5" ></text>
</g>
<g >
<title>free_unref_page (7 samples, 0.12%)</title><rect x="1077.3" y="1845" width="1.4" height="15.0" fill="rgb(215,113,24)" rx="2" ry="2" />
<text  x="1080.31" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="819.5" y="1701" width="0.2" height="15.0" fill="rgb(240,81,30)" rx="2" ry="2" />
<text  x="822.54" y="1711.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="707.1" y="1781" width="0.2" height="15.0" fill="rgb(226,3,50)" rx="2" ry="2" />
<text  x="710.05" y="1791.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="267.0" y="1797" width="0.2" height="15.0" fill="rgb(247,107,53)" rx="2" ry="2" />
<text  x="269.97" y="1807.5" ></text>
</g>
<g >
<title>__libc_sendmsg (371 samples, 6.33%)</title><rect x="245.2" y="2037" width="74.7" height="15.0" fill="rgb(215,29,27)" rx="2" ry="2" />
<text  x="248.24" y="2047.5" >__libc_s..</text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.10%)</title><rect x="824.0" y="1829" width="1.2" height="15.0" fill="rgb(217,173,48)" rx="2" ry="2" />
<text  x="826.97" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1030.4" y="1989" width="0.2" height="15.0" fill="rgb(245,121,32)" rx="2" ry="2" />
<text  x="1033.43" y="1999.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="310.6" y="1637" width="0.2" height="15.0" fill="rgb(240,58,29)" rx="2" ry="2" />
<text  x="313.63" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::readDataAvailable (1 samples, 0.02%)</title><rect x="34.5" y="1989" width="0.3" height="15.0" fill="rgb(230,58,10)" rx="2" ry="2" />
<text  x="37.55" y="1999.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1022.6" y="2021" width="0.2" height="15.0" fill="rgb(223,88,39)" rx="2" ry="2" />
<text  x="1025.58" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="213.6" y="2021" width="0.2" height="15.0" fill="rgb(247,91,5)" rx="2" ry="2" />
<text  x="216.64" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="316.1" y="1637" width="0.2" height="15.0" fill="rgb(250,215,35)" rx="2" ry="2" />
<text  x="319.07" y="1647.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="605.2" y="1989" width="0.2" height="15.0" fill="rgb(232,15,35)" rx="2" ry="2" />
<text  x="608.23" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="441.4" y="1749" width="0.4" height="15.0" fill="rgb(243,113,48)" rx="2" ry="2" />
<text  x="444.43" y="1759.5" ></text>
</g>
<g >
<title>sock_def_wakeup (1 samples, 0.02%)</title><rect x="464.6" y="1669" width="0.2" height="15.0" fill="rgb(243,52,32)" rx="2" ry="2" />
<text  x="467.57" y="1679.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="516.7" y="1813" width="0.2" height="15.0" fill="rgb(252,8,26)" rx="2" ry="2" />
<text  x="519.69" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="234.8" y="1845" width="0.4" height="15.0" fill="rgb(214,80,44)" rx="2" ry="2" />
<text  x="237.77" y="1855.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="668.8" y="1813" width="0.4" height="15.0" fill="rgb(206,50,52)" rx="2" ry="2" />
<text  x="671.82" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1149.2" y="1845" width="0.2" height="15.0" fill="rgb(253,26,51)" rx="2" ry="2" />
<text  x="1152.15" y="1855.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="941.7" y="1861" width="0.2" height="15.0" fill="rgb(214,30,23)" rx="2" ry="2" />
<text  x="944.68" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1181.1" y="1925" width="0.2" height="15.0" fill="rgb(206,216,15)" rx="2" ry="2" />
<text  x="1184.15" y="1935.5" ></text>
</g>
<g >
<title>folly::makeBitIterator&lt;unsigned long*&gt; (2 samples, 0.03%)</title><rect x="529.2" y="1989" width="0.4" height="15.0" fill="rgb(251,170,53)" rx="2" ry="2" />
<text  x="532.17" y="1999.5" ></text>
</g>
<g >
<title>skb_release_all (16 samples, 0.27%)</title><rect x="1102.1" y="1493" width="3.2" height="15.0" fill="rgb(252,14,17)" rx="2" ry="2" />
<text  x="1105.06" y="1503.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="779.9" y="1605" width="0.4" height="15.0" fill="rgb(251,78,22)" rx="2" ry="2" />
<text  x="782.90" y="1615.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs (1 samples, 0.02%)</title><rect x="554.7" y="1845" width="0.2" height="15.0" fill="rgb(209,84,0)" rx="2" ry="2" />
<text  x="557.72" y="1855.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="380.9" y="1877" width="0.8" height="15.0" fill="rgb(226,127,9)" rx="2" ry="2" />
<text  x="383.86" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="707.3" y="1829" width="0.2" height="15.0" fill="rgb(215,98,26)" rx="2" ry="2" />
<text  x="710.25" y="1839.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="177.4" y="1909" width="0.2" height="15.0" fill="rgb(254,55,16)" rx="2" ry="2" />
<text  x="180.42" y="1919.5" ></text>
</g>
<g >
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="756.6" y="1733" width="1.2" height="15.0" fill="rgb(244,120,6)" rx="2" ry="2" />
<text  x="759.56" y="1743.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (2 samples, 0.03%)</title><rect x="81.0" y="1925" width="0.4" height="15.0" fill="rgb(242,81,48)" rx="2" ry="2" />
<text  x="84.03" y="1935.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="682.5" y="1893" width="0.2" height="15.0" fill="rgb(233,215,38)" rx="2" ry="2" />
<text  x="685.50" y="1903.5" ></text>
</g>
<g >
<title>napi_consume_skb (1 samples, 0.02%)</title><rect x="486.3" y="1797" width="0.2" height="15.0" fill="rgb(223,221,10)" rx="2" ry="2" />
<text  x="489.31" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="188.3" y="1861" width="0.2" height="15.0" fill="rgb(234,173,3)" rx="2" ry="2" />
<text  x="191.29" y="1871.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::EventBaseEvent (5 samples, 0.09%)</title><rect x="547.3" y="1973" width="1.0" height="15.0" fill="rgb(214,229,1)" rx="2" ry="2" />
<text  x="550.28" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="19.1" y="1733" width="0.2" height="15.0" fill="rgb(233,182,1)" rx="2" ry="2" />
<text  x="22.06" y="1743.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="265.2" y="1781" width="0.2" height="15.0" fill="rgb(215,74,21)" rx="2" ry="2" />
<text  x="268.16" y="1791.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="603.2" y="1813" width="0.2" height="15.0" fill="rgb(228,185,39)" rx="2" ry="2" />
<text  x="606.22" y="1823.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.12%)</title><rect x="10.8" y="1829" width="1.4" height="15.0" fill="rgb(206,221,5)" rx="2" ry="2" />
<text  x="13.80" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="944.3" y="1813" width="0.2" height="15.0" fill="rgb(239,30,40)" rx="2" ry="2" />
<text  x="947.30" y="1823.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (2 samples, 0.03%)</title><rect x="983.7" y="1973" width="0.4" height="15.0" fill="rgb(214,5,40)" rx="2" ry="2" />
<text  x="986.74" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::onCloseFinish (14 samples, 0.24%)</title><rect x="607.4" y="2005" width="2.9" height="15.0" fill="rgb(216,24,9)" rx="2" ry="2" />
<text  x="610.45" y="2015.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="491.5" y="1781" width="0.2" height="15.0" fill="rgb(215,85,10)" rx="2" ry="2" />
<text  x="494.54" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="845.5" y="1909" width="0.2" height="15.0" fill="rgb(250,46,27)" rx="2" ry="2" />
<text  x="848.50" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (5 samples, 0.09%)</title><rect x="883.7" y="1925" width="1.0" height="15.0" fill="rgb(230,123,43)" rx="2" ry="2" />
<text  x="886.73" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (1 samples, 0.02%)</title><rect x="200.2" y="1973" width="0.2" height="15.0" fill="rgb(213,80,49)" rx="2" ry="2" />
<text  x="203.16" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="740.7" y="1429" width="0.2" height="15.0" fill="rgb(244,178,41)" rx="2" ry="2" />
<text  x="743.66" y="1439.5" ></text>
</g>
<g >
<title>__GI___getpeername (1 samples, 0.02%)</title><rect x="152.1" y="149" width="0.2" height="15.0" fill="rgb(236,68,4)" rx="2" ry="2" />
<text  x="155.07" y="159.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="312.0" y="1829" width="0.2" height="15.0" fill="rgb(226,160,35)" rx="2" ry="2" />
<text  x="315.04" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (23 samples, 0.39%)</title><rect x="913.5" y="1989" width="4.6" height="15.0" fill="rgb(242,19,26)" rx="2" ry="2" />
<text  x="916.51" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1042.1" y="2037" width="0.2" height="15.0" fill="rgb(208,155,36)" rx="2" ry="2" />
<text  x="1045.10" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="845.7" y="1861" width="0.2" height="15.0" fill="rgb(216,36,49)" rx="2" ry="2" />
<text  x="848.70" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="831.8" y="1845" width="0.8" height="15.0" fill="rgb(236,15,17)" rx="2" ry="2" />
<text  x="834.81" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="152.3" y="181" width="0.2" height="15.0" fill="rgb(211,194,49)" rx="2" ry="2" />
<text  x="155.27" y="191.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="454.1" y="1829" width="0.2" height="15.0" fill="rgb(237,71,33)" rx="2" ry="2" />
<text  x="457.11" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="257.5" y="1829" width="0.2" height="15.0" fill="rgb(216,50,9)" rx="2" ry="2" />
<text  x="260.51" y="1839.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.02%)</title><rect x="1126.0" y="1941" width="0.2" height="15.0" fill="rgb(240,144,15)" rx="2" ry="2" />
<text  x="1129.01" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::clear (1 samples, 0.02%)</title><rect x="191.9" y="2021" width="0.2" height="15.0" fill="rgb(233,33,50)" rx="2" ry="2" />
<text  x="194.91" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 0.65%)</title><rect x="618.7" y="2021" width="7.7" height="15.0" fill="rgb(232,73,51)" rx="2" ry="2" />
<text  x="621.71" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="567.2" y="1941" width="0.2" height="15.0" fill="rgb(220,38,21)" rx="2" ry="2" />
<text  x="570.20" y="1951.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1126.6" y="1877" width="0.2" height="15.0" fill="rgb(223,32,45)" rx="2" ry="2" />
<text  x="1129.61" y="1887.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1163.2" y="1893" width="0.2" height="15.0" fill="rgb(241,130,33)" rx="2" ry="2" />
<text  x="1166.24" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="19.1" y="1813" width="0.2" height="15.0" fill="rgb(238,80,52)" rx="2" ry="2" />
<text  x="22.06" y="1823.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="634.0" y="1957" width="0.2" height="15.0" fill="rgb(246,73,17)" rx="2" ry="2" />
<text  x="637.01" y="1967.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="295.7" y="1605" width="0.2" height="15.0" fill="rgb(249,55,22)" rx="2" ry="2" />
<text  x="298.74" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="230.5" y="1781" width="0.2" height="15.0" fill="rgb(243,93,37)" rx="2" ry="2" />
<text  x="233.55" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1022.8" y="2005" width="0.6" height="15.0" fill="rgb(240,221,4)" rx="2" ry="2" />
<text  x="1025.78" y="2015.5" ></text>
</g>
<g >
<title>ipod_hook_fn (1 samples, 0.02%)</title><rect x="272.4" y="1637" width="0.2" height="15.0" fill="rgb(242,13,33)" rx="2" ry="2" />
<text  x="275.40" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="100.6" y="1941" width="0.2" height="15.0" fill="rgb(233,9,50)" rx="2" ry="2" />
<text  x="103.55" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1032.4" y="1669" width="0.2" height="15.0" fill="rgb(209,71,11)" rx="2" ry="2" />
<text  x="1035.44" y="1679.5" ></text>
</g>
<g >
<title>folly::Expected&lt;int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (1 samples, 0.02%)</title><rect x="1006.1" y="1989" width="0.2" height="15.0" fill="rgb(235,150,13)" rx="2" ry="2" />
<text  x="1009.08" y="1999.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="699.2" y="1781" width="0.2" height="15.0" fill="rgb(225,176,26)" rx="2" ry="2" />
<text  x="702.21" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1032.4" y="2005" width="0.2" height="15.0" fill="rgb(239,153,13)" rx="2" ry="2" />
<text  x="1035.44" y="2015.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="743.7" y="1765" width="0.2" height="15.0" fill="rgb(210,36,0)" rx="2" ry="2" />
<text  x="746.68" y="1775.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="244.8" y="2037" width="0.4" height="15.0" fill="rgb(206,112,44)" rx="2" ry="2" />
<text  x="247.83" y="2047.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="605.0" y="1941" width="0.2" height="15.0" fill="rgb(247,170,31)" rx="2" ry="2" />
<text  x="608.03" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="741.9" y="1573" width="0.2" height="15.0" fill="rgb(241,36,31)" rx="2" ry="2" />
<text  x="744.87" y="1583.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="818.7" y="1669" width="0.2" height="15.0" fill="rgb(216,150,1)" rx="2" ry="2" />
<text  x="821.73" y="1679.5" ></text>
</g>
<g >
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1111.1" y="1957" width="0.4" height="15.0" fill="rgb(241,26,4)" rx="2" ry="2" />
<text  x="1114.12" y="1967.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="913.1" y="1989" width="0.2" height="15.0" fill="rgb(251,226,30)" rx="2" ry="2" />
<text  x="916.11" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="862.8" y="1925" width="0.2" height="15.0" fill="rgb(205,74,34)" rx="2" ry="2" />
<text  x="865.80" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="65.1" y="1813" width="0.2" height="15.0" fill="rgb(228,214,0)" rx="2" ry="2" />
<text  x="68.14" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="19.1" y="1973" width="0.2" height="15.0" fill="rgb(249,222,34)" rx="2" ry="2" />
<text  x="22.06" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="819.5" y="1541" width="0.2" height="15.0" fill="rgb(222,23,26)" rx="2" ry="2" />
<text  x="822.54" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="513.3" y="1973" width="0.2" height="15.0" fill="rgb(224,67,34)" rx="2" ry="2" />
<text  x="516.27" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="238.0" y="1829" width="0.2" height="15.0" fill="rgb(251,134,52)" rx="2" ry="2" />
<text  x="240.99" y="1839.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="65.1" y="1685" width="0.2" height="15.0" fill="rgb(222,64,30)" rx="2" ry="2" />
<text  x="68.14" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1082.1" y="1845" width="0.2" height="15.0" fill="rgb(254,197,52)" rx="2" ry="2" />
<text  x="1085.14" y="1855.5" ></text>
</g>
<g >
<title>kmem_cache_free (32 samples, 0.55%)</title><rect x="734.4" y="1669" width="6.5" height="15.0" fill="rgb(250,225,37)" rx="2" ry="2" />
<text  x="737.42" y="1679.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="441.0" y="1861" width="0.2" height="15.0" fill="rgb(219,56,2)" rx="2" ry="2" />
<text  x="444.03" y="1871.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="840.9" y="1525" width="0.2" height="15.0" fill="rgb(222,188,53)" rx="2" ry="2" />
<text  x="843.87" y="1535.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="346.1" y="1909" width="0.4" height="15.0" fill="rgb(245,155,39)" rx="2" ry="2" />
<text  x="349.05" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="944.3" y="1797" width="0.2" height="15.0" fill="rgb(205,223,16)" rx="2" ry="2" />
<text  x="947.30" y="1807.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::small_vector (3 samples, 0.05%)</title><rect x="569.4" y="2005" width="0.6" height="15.0" fill="rgb(251,177,1)" rx="2" ry="2" />
<text  x="572.41" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="83.9" y="1765" width="0.4" height="15.0" fill="rgb(233,73,34)" rx="2" ry="2" />
<text  x="86.85" y="1775.5" ></text>
</g>
<g >
<title>ip_finish_output (31 samples, 0.53%)</title><rect x="1100.5" y="1813" width="6.2" height="15.0" fill="rgb(209,152,42)" rx="2" ry="2" />
<text  x="1103.45" y="1823.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="19.3" y="1925" width="0.2" height="15.0" fill="rgb(253,228,6)" rx="2" ry="2" />
<text  x="22.26" y="1935.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="761.4" y="1701" width="0.2" height="15.0" fill="rgb(211,202,10)" rx="2" ry="2" />
<text  x="764.38" y="1711.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (7 samples, 0.12%)</title><rect x="849.9" y="1909" width="1.4" height="15.0" fill="rgb(218,144,50)" rx="2" ry="2" />
<text  x="852.92" y="1919.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="19.7" y="1765" width="0.2" height="15.0" fill="rgb(205,134,34)" rx="2" ry="2" />
<text  x="22.66" y="1775.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (1 samples, 0.02%)</title><rect x="1032.4" y="2037" width="0.2" height="15.0" fill="rgb(222,223,44)" rx="2" ry="2" />
<text  x="1035.44" y="2047.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (91 samples, 1.55%)</title><rect x="492.5" y="1941" width="18.4" height="15.0" fill="rgb(245,71,1)" rx="2" ry="2" />
<text  x="495.54" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="593.0" y="1845" width="0.6" height="15.0" fill="rgb(221,143,30)" rx="2" ry="2" />
<text  x="595.96" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="19.7" y="1893" width="0.2" height="15.0" fill="rgb(240,174,25)" rx="2" ry="2" />
<text  x="22.66" y="1903.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="211.6" y="2021" width="0.2" height="15.0" fill="rgb(245,154,3)" rx="2" ry="2" />
<text  x="214.63" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="809.5" y="1605" width="0.2" height="15.0" fill="rgb(224,204,33)" rx="2" ry="2" />
<text  x="812.48" y="1615.5" ></text>
</g>
<g >
<title>folly::fibers::StackCache::giveBack (1 samples, 0.02%)</title><rect x="19.7" y="1957" width="0.2" height="15.0" fill="rgb(238,52,7)" rx="2" ry="2" />
<text  x="22.66" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_oom (1 samples, 0.02%)</title><rect x="758.6" y="1733" width="0.2" height="15.0" fill="rgb(205,180,1)" rx="2" ry="2" />
<text  x="761.57" y="1743.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="795.4" y="1445" width="0.2" height="15.0" fill="rgb(240,103,21)" rx="2" ry="2" />
<text  x="798.39" y="1455.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="929.6" y="1989" width="0.2" height="15.0" fill="rgb(220,45,3)" rx="2" ry="2" />
<text  x="932.61" y="1999.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="701.8" y="1621" width="0.2" height="15.0" fill="rgb(232,68,12)" rx="2" ry="2" />
<text  x="704.82" y="1631.5" ></text>
</g>
<g >
<title>folly::Optional&lt;folly::IOBuf&gt;::emplace&lt;folly::IOBuf&gt; (1 samples, 0.02%)</title><rect x="150.9" y="69" width="0.2" height="15.0" fill="rgb(225,152,15)" rx="2" ry="2" />
<text  x="153.86" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="899.4" y="1829" width="0.2" height="15.0" fill="rgb(223,211,27)" rx="2" ry="2" />
<text  x="902.43" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (145 samples, 2.47%)</title><rect x="124.1" y="725" width="29.2" height="15.0" fill="rgb(222,101,12)" rx="2" ry="2" />
<text  x="127.10" y="735.5" >[u..</text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1237" width="29.8" height="15.0" fill="rgb(228,9,0)" rx="2" ry="2" />
<text  x="127.10" y="1247.5" >[u..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="433.6" y="1925" width="0.2" height="15.0" fill="rgb(237,59,6)" rx="2" ry="2" />
<text  x="436.58" y="1935.5" ></text>
</g>
<g >
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="1087.6" y="1637" width="0.2" height="15.0" fill="rgb(208,178,11)" rx="2" ry="2" />
<text  x="1090.58" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="985.6" y="1893" width="0.2" height="15.0" fill="rgb(221,85,29)" rx="2" ry="2" />
<text  x="988.55" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1153.0" y="2037" width="0.2" height="15.0" fill="rgb(223,206,43)" rx="2" ry="2" />
<text  x="1155.97" y="2047.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="345.4" y="1605" width="0.2" height="15.0" fill="rgb(215,185,42)" rx="2" ry="2" />
<text  x="348.45" y="1615.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="533.2" y="1749" width="0.2" height="15.0" fill="rgb(243,14,0)" rx="2" ry="2" />
<text  x="536.19" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="267.0" y="1813" width="0.2" height="15.0" fill="rgb(218,41,9)" rx="2" ry="2" />
<text  x="269.97" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (12 samples, 0.20%)</title><rect x="202.8" y="1989" width="2.4" height="15.0" fill="rgb(230,123,27)" rx="2" ry="2" />
<text  x="205.78" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1152.2" y="1973" width="0.2" height="15.0" fill="rgb(243,2,7)" rx="2" ry="2" />
<text  x="1155.17" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="750.1" y="1589" width="0.2" height="15.0" fill="rgb(251,222,6)" rx="2" ry="2" />
<text  x="753.12" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="66.1" y="1925" width="1.9" height="15.0" fill="rgb(208,213,38)" rx="2" ry="2" />
<text  x="69.14" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="747.7" y="1541" width="0.2" height="15.0" fill="rgb(230,178,3)" rx="2" ry="2" />
<text  x="750.70" y="1551.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="341.8" y="1877" width="0.4" height="15.0" fill="rgb(251,90,9)" rx="2" ry="2" />
<text  x="344.82" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="957.4" y="2005" width="0.4" height="15.0" fill="rgb(229,94,15)" rx="2" ry="2" />
<text  x="960.38" y="2015.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="491.7" y="1605" width="0.2" height="15.0" fill="rgb(218,190,23)" rx="2" ry="2" />
<text  x="494.74" y="1615.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="533.2" y="1765" width="0.2" height="15.0" fill="rgb(254,50,14)" rx="2" ry="2" />
<text  x="536.19" y="1775.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="281.7" y="1733" width="0.2" height="15.0" fill="rgb(224,4,22)" rx="2" ry="2" />
<text  x="284.66" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (133 samples, 2.27%)</title><rect x="124.3" y="85" width="26.8" height="15.0" fill="rgb(227,149,31)" rx="2" ry="2" />
<text  x="127.30" y="95.5" >[..</text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="341.8" y="1797" width="0.2" height="15.0" fill="rgb(221,197,14)" rx="2" ry="2" />
<text  x="344.82" y="1807.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::clear (1 samples, 0.02%)</title><rect x="207.6" y="2021" width="0.2" height="15.0" fill="rgb(218,87,43)" rx="2" ry="2" />
<text  x="210.61" y="2031.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="81.8" y="1861" width="0.2" height="15.0" fill="rgb(222,78,14)" rx="2" ry="2" />
<text  x="84.84" y="1871.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="1022.0" y="1941" width="0.2" height="15.0" fill="rgb(206,62,32)" rx="2" ry="2" />
<text  x="1024.97" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="364.4" y="1813" width="0.2" height="15.0" fill="rgb(211,121,32)" rx="2" ry="2" />
<text  x="367.36" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="845.7" y="1749" width="0.2" height="15.0" fill="rgb(252,47,20)" rx="2" ry="2" />
<text  x="848.70" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::EventBaseBackendBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="235.0" y="1749" width="0.2" height="15.0" fill="rgb(223,30,54)" rx="2" ry="2" />
<text  x="237.97" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="955.2" y="2005" width="0.2" height="15.0" fill="rgb(233,146,23)" rx="2" ry="2" />
<text  x="958.17" y="2015.5" ></text>
</g>
<g >
<title>__netdev_pick_tx (3 samples, 0.05%)</title><rect x="286.3" y="1669" width="0.6" height="15.0" fill="rgb(205,126,52)" rx="2" ry="2" />
<text  x="289.29" y="1679.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="783.7" y="1301" width="0.2" height="15.0" fill="rgb(226,202,13)" rx="2" ry="2" />
<text  x="786.72" y="1311.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="55.1" y="1733" width="0.2" height="15.0" fill="rgb(227,0,18)" rx="2" ry="2" />
<text  x="58.08" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="905.1" y="2021" width="1.0" height="15.0" fill="rgb(214,58,40)" rx="2" ry="2" />
<text  x="908.06" y="2031.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="721.9" y="1765" width="0.2" height="15.0" fill="rgb(206,159,19)" rx="2" ry="2" />
<text  x="724.94" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="55.3" y="1941" width="0.2" height="15.0" fill="rgb(208,214,30)" rx="2" ry="2" />
<text  x="58.28" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="832.2" y="1797" width="0.4" height="15.0" fill="rgb(231,227,29)" rx="2" ry="2" />
<text  x="835.22" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="1101.5" y="1477" width="0.6" height="15.0" fill="rgb(207,213,16)" rx="2" ry="2" />
<text  x="1104.46" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="812.5" y="1429" width="0.2" height="15.0" fill="rgb(247,57,52)" rx="2" ry="2" />
<text  x="815.50" y="1439.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (1 samples, 0.02%)</title><rect x="188.7" y="2005" width="0.2" height="15.0" fill="rgb(206,76,30)" rx="2" ry="2" />
<text  x="191.69" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (36 samples, 0.61%)</title><rect x="662.4" y="1909" width="7.2" height="15.0" fill="rgb(233,130,24)" rx="2" ry="2" />
<text  x="665.38" y="1919.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (15 samples, 0.26%)</title><rect x="220.9" y="2021" width="3.0" height="15.0" fill="rgb(215,48,51)" rx="2" ry="2" />
<text  x="223.89" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (138 samples, 2.35%)</title><rect x="124.3" y="149" width="27.8" height="15.0" fill="rgb(215,22,32)" rx="2" ry="2" />
<text  x="127.30" y="159.5" >[..</text>
</g>
<g >
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="836.2" y="1909" width="0.4" height="15.0" fill="rgb(242,65,36)" rx="2" ry="2" />
<text  x="839.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="891.2" y="1797" width="0.2" height="15.0" fill="rgb(211,129,37)" rx="2" ry="2" />
<text  x="894.18" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="800.8" y="1493" width="0.4" height="15.0" fill="rgb(218,74,26)" rx="2" ry="2" />
<text  x="803.83" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1032.4" y="1909" width="0.2" height="15.0" fill="rgb(207,197,44)" rx="2" ry="2" />
<text  x="1035.44" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1149.2" y="1861" width="0.2" height="15.0" fill="rgb(221,131,9)" rx="2" ry="2" />
<text  x="1152.15" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="255.1" y="1765" width="0.2" height="15.0" fill="rgb(206,130,27)" rx="2" ry="2" />
<text  x="258.10" y="1775.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (17 samples, 0.29%)</title><rect x="115.6" y="2037" width="3.5" height="15.0" fill="rgb(209,200,49)" rx="2" ry="2" />
<text  x="118.64" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (3 samples, 0.05%)</title><rect x="955.4" y="2005" width="0.6" height="15.0" fill="rgb(212,68,32)" rx="2" ry="2" />
<text  x="958.37" y="2015.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::StackCacheEntry*, std::default_delete&lt;folly::fibers::StackCacheEntry&gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="1893" width="0.2" height="15.0" fill="rgb(245,145,16)" rx="2" ry="2" />
<text  x="22.46" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12 samples, 0.20%)</title><rect x="281.9" y="1685" width="2.4" height="15.0" fill="rgb(217,119,48)" rx="2" ry="2" />
<text  x="284.86" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="513.3" y="1781" width="0.2" height="15.0" fill="rgb(230,0,37)" rx="2" ry="2" />
<text  x="516.27" y="1791.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="916.9" y="1797" width="0.2" height="15.0" fill="rgb(232,86,23)" rx="2" ry="2" />
<text  x="919.93" y="1807.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1168.7" y="1813" width="0.2" height="15.0" fill="rgb(223,206,40)" rx="2" ry="2" />
<text  x="1171.67" y="1823.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="297.2" y="1653" width="0.2" height="15.0" fill="rgb(205,149,5)" rx="2" ry="2" />
<text  x="300.15" y="1663.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="546.3" y="1861" width="0.4" height="15.0" fill="rgb(232,12,43)" rx="2" ry="2" />
<text  x="549.27" y="1871.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromIpAddrPort (1 samples, 0.02%)</title><rect x="581.5" y="1909" width="0.2" height="15.0" fill="rgb(223,161,37)" rx="2" ry="2" />
<text  x="584.49" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="887.0" y="1829" width="0.2" height="15.0" fill="rgb(216,29,30)" rx="2" ry="2" />
<text  x="889.95" y="1839.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1032.4" y="1957" width="0.2" height="15.0" fill="rgb(234,17,6)" rx="2" ry="2" />
<text  x="1035.44" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="100.4" y="1989" width="0.4" height="15.0" fill="rgb(240,90,2)" rx="2" ry="2" />
<text  x="103.35" y="1999.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="407.4" y="1941" width="0.2" height="15.0" fill="rgb(249,201,37)" rx="2" ry="2" />
<text  x="410.42" y="1951.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="900.0" y="1989" width="0.2" height="15.0" fill="rgb(212,85,21)" rx="2" ry="2" />
<text  x="903.03" y="1999.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="19.1" y="1589" width="0.2" height="15.0" fill="rgb(211,37,8)" rx="2" ry="2" />
<text  x="22.06" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="661.8" y="1893" width="0.2" height="15.0" fill="rgb(244,105,16)" rx="2" ry="2" />
<text  x="664.78" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::LoopCallback (7 samples, 0.12%)</title><rect x="539.0" y="1989" width="1.4" height="15.0" fill="rgb(235,58,19)" rx="2" ry="2" />
<text  x="542.03" y="1999.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="1128.4" y="2037" width="0.2" height="15.0" fill="rgb(250,154,33)" rx="2" ry="2" />
<text  x="1131.42" y="2047.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4 samples, 0.07%)</title><rect x="748.1" y="1781" width="0.8" height="15.0" fill="rgb(250,22,8)" rx="2" ry="2" />
<text  x="751.10" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="238.2" y="1829" width="0.2" height="15.0" fill="rgb(229,26,7)" rx="2" ry="2" />
<text  x="241.19" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::AsyncTransportCertificate const*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="572.6" y="1957" width="0.2" height="15.0" fill="rgb(243,217,11)" rx="2" ry="2" />
<text  x="575.63" y="1967.5" ></text>
</g>
<g >
<title>__release_sock (1 samples, 0.02%)</title><rect x="1086.8" y="1909" width="0.2" height="15.0" fill="rgb(217,109,31)" rx="2" ry="2" />
<text  x="1089.77" y="1919.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="155.7" y="1893" width="0.2" height="15.0" fill="rgb(247,88,47)" rx="2" ry="2" />
<text  x="158.69" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="721.3" y="1525" width="0.2" height="15.0" fill="rgb(227,116,27)" rx="2" ry="2" />
<text  x="724.34" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="64.7" y="1909" width="0.2" height="15.0" fill="rgb(246,200,12)" rx="2" ry="2" />
<text  x="67.73" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="930.4" y="1861" width="0.2" height="15.0" fill="rgb(216,167,39)" rx="2" ry="2" />
<text  x="933.42" y="1871.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="320.3" y="2037" width="0.2" height="15.0" fill="rgb(236,97,42)" rx="2" ry="2" />
<text  x="323.29" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="767.4" y="1509" width="0.2" height="15.0" fill="rgb(252,54,42)" rx="2" ry="2" />
<text  x="770.42" y="1519.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::writev (75 samples, 1.28%)</title><rect x="875.9" y="1989" width="15.1" height="15.0" fill="rgb(215,38,50)" rx="2" ry="2" />
<text  x="878.88" y="1999.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="342.0" y="1525" width="0.2" height="15.0" fill="rgb(237,129,28)" rx="2" ry="2" />
<text  x="345.03" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="844.1" y="1797" width="0.2" height="15.0" fill="rgb(206,80,23)" rx="2" ry="2" />
<text  x="847.09" y="1807.5" ></text>
</g>
<g >
<title>tcp_fin (1 samples, 0.02%)</title><rect x="388.3" y="1653" width="0.2" height="15.0" fill="rgb(213,229,1)" rx="2" ry="2" />
<text  x="391.31" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (59 samples, 1.01%)</title><rect x="1155.2" y="1989" width="11.9" height="15.0" fill="rgb(217,181,22)" rx="2" ry="2" />
<text  x="1158.19" y="1999.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="1155.4" y="1637" width="0.2" height="15.0" fill="rgb(210,63,10)" rx="2" ry="2" />
<text  x="1158.39" y="1647.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="845.7" y="1669" width="0.2" height="15.0" fill="rgb(227,54,4)" rx="2" ry="2" />
<text  x="848.70" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="152.7" y="181" width="0.2" height="15.0" fill="rgb(244,227,22)" rx="2" ry="2" />
<text  x="155.67" y="191.5" ></text>
</g>
<g >
<title>[unknown] (184 samples, 3.14%)</title><rect x="123.1" y="2005" width="37.0" height="15.0" fill="rgb(241,162,3)" rx="2" ry="2" />
<text  x="126.09" y="2015.5" >[un..</text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="240.4" y="1893" width="0.4" height="15.0" fill="rgb(241,76,36)" rx="2" ry="2" />
<text  x="243.41" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1509" width="30.4" height="15.0" fill="rgb(214,53,37)" rx="2" ry="2" />
<text  x="127.10" y="1519.5" >[u..</text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="270.0" y="1797" width="0.2" height="15.0" fill="rgb(234,94,25)" rx="2" ry="2" />
<text  x="272.99" y="1807.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="365.8" y="1909" width="0.2" height="15.0" fill="rgb(254,77,40)" rx="2" ry="2" />
<text  x="368.77" y="1919.5" ></text>
</g>
<g >
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="681.9" y="1877" width="0.4" height="15.0" fill="rgb(228,172,7)" rx="2" ry="2" />
<text  x="684.90" y="1887.5" ></text>
</g>
<g >
<title>aa_sock_perm (1 samples, 0.02%)</title><rect x="592.0" y="1829" width="0.2" height="15.0" fill="rgb(221,19,12)" rx="2" ry="2" />
<text  x="594.95" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="208.6" y="1925" width="0.2" height="15.0" fill="rgb(238,227,45)" rx="2" ry="2" />
<text  x="211.61" y="1935.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="795.4" y="1429" width="0.2" height="15.0" fill="rgb(252,146,39)" rx="2" ry="2" />
<text  x="798.39" y="1439.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::lockSharedImpl&lt;folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::WaitForever&gt; (2 samples, 0.03%)</title><rect x="209.0" y="2021" width="0.4" height="15.0" fill="rgb(235,57,50)" rx="2" ry="2" />
<text  x="212.01" y="2031.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::fromFd (2 samples, 0.03%)</title><rect x="27.5" y="1989" width="0.4" height="15.0" fill="rgb(229,220,19)" rx="2" ry="2" />
<text  x="30.51" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="196.3" y="1973" width="1.2" height="15.0" fill="rgb(209,93,9)" rx="2" ry="2" />
<text  x="199.34" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="730.2" y="1509" width="0.2" height="15.0" fill="rgb(249,167,49)" rx="2" ry="2" />
<text  x="733.19" y="1519.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (6 samples, 0.10%)</title><rect x="196.3" y="2021" width="1.2" height="15.0" fill="rgb(217,226,50)" rx="2" ry="2" />
<text  x="199.34" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="906.5" y="2005" width="2.0" height="15.0" fill="rgb(231,176,37)" rx="2" ry="2" />
<text  x="909.47" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="932.8" y="1957" width="0.2" height="15.0" fill="rgb(209,67,36)" rx="2" ry="2" />
<text  x="935.83" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="899.4" y="1733" width="0.2" height="15.0" fill="rgb(242,114,33)" rx="2" ry="2" />
<text  x="902.43" y="1743.5" ></text>
</g>
<g >
<title>evmap_io_del_ (2 samples, 0.03%)</title><rect x="125.5" y="37" width="0.4" height="15.0" fill="rgb(218,119,14)" rx="2" ry="2" />
<text  x="128.50" y="47.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (3 samples, 0.05%)</title><rect x="1126.2" y="1957" width="0.6" height="15.0" fill="rgb(251,134,18)" rx="2" ry="2" />
<text  x="1129.21" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="171.0" y="1941" width="0.2" height="15.0" fill="rgb(205,116,52)" rx="2" ry="2" />
<text  x="173.98" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1023.0" y="1781" width="0.2" height="15.0" fill="rgb(234,39,28)" rx="2" ry="2" />
<text  x="1025.98" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1183.2" y="2005" width="0.2" height="15.0" fill="rgb(209,141,18)" rx="2" ry="2" />
<text  x="1186.16" y="2015.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="405.8" y="1989" width="0.6" height="15.0" fill="rgb(252,172,2)" rx="2" ry="2" />
<text  x="408.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt;, false&gt; &gt; &gt;::_Hashtable_alloc (2 samples, 0.03%)</title><rect x="576.1" y="1973" width="0.4" height="15.0" fill="rgb(239,10,36)" rx="2" ry="2" />
<text  x="579.05" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="388.3" y="1605" width="0.2" height="15.0" fill="rgb(220,54,0)" rx="2" ry="2" />
<text  x="391.31" y="1615.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeoutImpl (22 samples, 0.38%)</title><rect x="523.9" y="1989" width="4.5" height="15.0" fill="rgb(238,210,31)" rx="2" ry="2" />
<text  x="526.94" y="1999.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="88.9" y="1829" width="0.2" height="15.0" fill="rgb(252,40,54)" rx="2" ry="2" />
<text  x="91.88" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::~McServerSession (43 samples, 0.73%)</title><rect x="891.4" y="2005" width="8.6" height="15.0" fill="rgb(252,42,6)" rx="2" ry="2" />
<text  x="894.38" y="2015.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (61 samples, 1.04%)</title><rect x="228.7" y="1941" width="12.3" height="15.0" fill="rgb(243,167,41)" rx="2" ry="2" />
<text  x="231.73" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1155.4" y="1733" width="0.2" height="15.0" fill="rgb(214,120,19)" rx="2" ry="2" />
<text  x="1158.39" y="1743.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="256.5" y="1845" width="0.2" height="15.0" fill="rgb(211,31,37)" rx="2" ry="2" />
<text  x="259.50" y="1855.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.05%)</title><rect x="282.7" y="1381" width="0.6" height="15.0" fill="rgb(219,37,48)" rx="2" ry="2" />
<text  x="285.66" y="1391.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="523.1" y="1941" width="0.2" height="15.0" fill="rgb(216,174,4)" rx="2" ry="2" />
<text  x="526.13" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (2 samples, 0.03%)</title><rect x="74.4" y="1941" width="0.4" height="15.0" fill="rgb(227,72,29)" rx="2" ry="2" />
<text  x="77.39" y="1951.5" ></text>
</g>
<g >
<title>ip_queue_xmit (100 samples, 1.71%)</title><rect x="277.8" y="1813" width="20.2" height="15.0" fill="rgb(253,129,2)" rx="2" ry="2" />
<text  x="280.83" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1149.2" y="1813" width="0.2" height="15.0" fill="rgb(248,90,5)" rx="2" ry="2" />
<text  x="1152.15" y="1823.5" ></text>
</g>
<g >
<title>native_irq_return_iret (3 samples, 0.05%)</title><rect x="1140.5" y="2037" width="0.6" height="15.0" fill="rgb(245,67,9)" rx="2" ry="2" />
<text  x="1143.50" y="2047.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="88.9" y="1781" width="0.2" height="15.0" fill="rgb(215,54,20)" rx="2" ry="2" />
<text  x="91.88" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (9 samples, 0.15%)</title><rect x="885.5" y="1941" width="1.9" height="15.0" fill="rgb(230,44,19)" rx="2" ry="2" />
<text  x="888.54" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="707.3" y="1653" width="0.2" height="15.0" fill="rgb(210,59,48)" rx="2" ry="2" />
<text  x="710.25" y="1663.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.02%)</title><rect x="388.5" y="1941" width="0.2" height="15.0" fill="rgb(252,48,49)" rx="2" ry="2" />
<text  x="391.51" y="1951.5" ></text>
</g>
<g >
<title>folly::RequestContextScopeGuard::RequestContextScopeGuard (10 samples, 0.17%)</title><rect x="181.4" y="1925" width="2.1" height="15.0" fill="rgb(242,97,4)" rx="2" ry="2" />
<text  x="184.45" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="54.5" y="1845" width="0.2" height="15.0" fill="rgb(210,81,17)" rx="2" ry="2" />
<text  x="57.47" y="1855.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (29 samples, 0.49%)</title><rect x="1100.5" y="1765" width="5.8" height="15.0" fill="rgb(247,65,44)" rx="2" ry="2" />
<text  x="1103.45" y="1775.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (1 samples, 0.02%)</title><rect x="945.3" y="1941" width="0.2" height="15.0" fill="rgb(239,106,18)" rx="2" ry="2" />
<text  x="948.31" y="1951.5" ></text>
</g>
<g >
<title>__fget_light (37 samples, 0.63%)</title><rect x="1112.1" y="1941" width="7.5" height="15.0" fill="rgb(222,78,27)" rx="2" ry="2" />
<text  x="1115.12" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1121.6" y="1973" width="0.2" height="15.0" fill="rgb(238,148,23)" rx="2" ry="2" />
<text  x="1124.58" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="775.5" y="1621" width="0.2" height="15.0" fill="rgb(228,81,3)" rx="2" ry="2" />
<text  x="778.47" y="1631.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="92.5" y="1941" width="0.2" height="15.0" fill="rgb(251,60,38)" rx="2" ry="2" />
<text  x="95.50" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="619.3" y="2005" width="0.2" height="15.0" fill="rgb(230,180,10)" rx="2" ry="2" />
<text  x="622.32" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="721.3" y="1669" width="0.2" height="15.0" fill="rgb(229,156,40)" rx="2" ry="2" />
<text  x="724.34" y="1679.5" ></text>
</g>
<g >
<title>sys_recvfrom (322 samples, 5.49%)</title><rect x="1055.4" y="2005" width="64.8" height="15.0" fill="rgb(236,11,1)" rx="2" ry="2" />
<text  x="1058.38" y="2015.5" >sys_rec..</text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="551.3" y="1957" width="0.2" height="15.0" fill="rgb(223,16,0)" rx="2" ry="2" />
<text  x="554.30" y="1967.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (4 samples, 0.07%)</title><rect x="901.4" y="2005" width="0.8" height="15.0" fill="rgb(245,44,20)" rx="2" ry="2" />
<text  x="904.44" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="151.9" y="117" width="0.2" height="15.0" fill="rgb(227,137,48)" rx="2" ry="2" />
<text  x="154.87" y="127.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="934.2" y="1845" width="0.2" height="15.0" fill="rgb(247,210,8)" rx="2" ry="2" />
<text  x="937.24" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::operator= (1 samples, 0.02%)</title><rect x="207.0" y="2005" width="0.2" height="15.0" fill="rgb(228,198,8)" rx="2" ry="2" />
<text  x="210.00" y="2015.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="152.1" y="133" width="0.2" height="15.0" fill="rgb(253,128,42)" rx="2" ry="2" />
<text  x="155.07" y="143.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::~McClientRequestContext (11 samples, 0.19%)</title><rect x="614.1" y="2037" width="2.2" height="15.0" fill="rgb(210,3,49)" rx="2" ry="2" />
<text  x="617.09" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (1 samples, 0.02%)</title><rect x="24.9" y="2005" width="0.2" height="15.0" fill="rgb(231,27,6)" rx="2" ry="2" />
<text  x="27.89" y="2015.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.09%)</title><rect x="13.6" y="1957" width="1.0" height="15.0" fill="rgb(254,174,49)" rx="2" ry="2" />
<text  x="16.62" y="1967.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1109.3" y="1797" width="0.2" height="15.0" fill="rgb(228,55,28)" rx="2" ry="2" />
<text  x="1112.31" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="816.5" y="1653" width="0.2" height="15.0" fill="rgb(227,159,45)" rx="2" ry="2" />
<text  x="819.52" y="1663.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="903.5" y="2005" width="0.4" height="15.0" fill="rgb(236,149,14)" rx="2" ry="2" />
<text  x="906.45" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (1 samples, 0.02%)</title><rect x="610.5" y="2037" width="0.2" height="15.0" fill="rgb(207,42,18)" rx="2" ry="2" />
<text  x="613.46" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="919.8" y="1973" width="0.2" height="15.0" fill="rgb(226,46,11)" rx="2" ry="2" />
<text  x="922.75" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="533.4" y="1957" width="0.2" height="15.0" fill="rgb(252,35,36)" rx="2" ry="2" />
<text  x="536.39" y="1967.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="195.1" y="1989" width="0.2" height="15.0" fill="rgb(251,86,49)" rx="2" ry="2" />
<text  x="198.13" y="1999.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (4 samples, 0.07%)</title><rect x="548.3" y="1973" width="0.8" height="15.0" fill="rgb(215,63,40)" rx="2" ry="2" />
<text  x="551.28" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="345.8" y="1413" width="0.3" height="15.0" fill="rgb(213,120,52)" rx="2" ry="2" />
<text  x="348.85" y="1423.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="342.0" y="1749" width="0.2" height="15.0" fill="rgb(249,144,26)" rx="2" ry="2" />
<text  x="345.03" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="572.8" y="1957" width="0.2" height="15.0" fill="rgb(227,202,3)" rx="2" ry="2" />
<text  x="575.83" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="149.5" y="37" width="0.4" height="15.0" fill="rgb(206,218,29)" rx="2" ry="2" />
<text  x="152.45" y="47.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="388.3" y="1925" width="0.2" height="15.0" fill="rgb(216,128,28)" rx="2" ry="2" />
<text  x="391.31" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="310.6" y="1733" width="0.2" height="15.0" fill="rgb(208,215,47)" rx="2" ry="2" />
<text  x="313.63" y="1743.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="513.3" y="1813" width="0.2" height="15.0" fill="rgb(214,210,8)" rx="2" ry="2" />
<text  x="516.27" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="976.5" y="2021" width="0.2" height="15.0" fill="rgb(235,200,17)" rx="2" ry="2" />
<text  x="979.50" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="163.1" y="1957" width="0.4" height="15.0" fill="rgb(243,196,17)" rx="2" ry="2" />
<text  x="166.13" y="1967.5" ></text>
</g>
<g >
<title>folly::EventHandler::setEventBase (2 samples, 0.03%)</title><rect x="541.8" y="1973" width="0.4" height="15.0" fill="rgb(218,116,30)" rx="2" ry="2" />
<text  x="544.85" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1941" width="0.8" height="15.0" fill="rgb(217,147,9)" rx="2" ry="2" />
<text  x="538.20" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::consumeMessage&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="930.8" y="2005" width="0.2" height="15.0" fill="rgb(232,158,20)" rx="2" ry="2" />
<text  x="933.82" y="2015.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.60 (42 samples, 0.72%)</title><rect x="804.2" y="1653" width="8.5" height="15.0" fill="rgb(217,76,30)" rx="2" ry="2" />
<text  x="807.25" y="1663.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;folly::IOBuf*, folly::AsyncSocket::IOBufInfo, std::hash&lt;folly::IOBuf*&gt;, std::equal_to&lt;folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt; &gt;::unordered_map (2 samples, 0.03%)</title><rect x="575.0" y="2005" width="0.5" height="15.0" fill="rgb(231,182,22)" rx="2" ry="2" />
<text  x="578.05" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="668.4" y="1797" width="0.2" height="15.0" fill="rgb(232,160,54)" rx="2" ry="2" />
<text  x="671.42" y="1807.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1058.2" y="1621" width="0.2" height="15.0" fill="rgb(235,140,27)" rx="2" ry="2" />
<text  x="1061.20" y="1631.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (8 samples, 0.14%)</title><rect x="985.8" y="1989" width="1.6" height="15.0" fill="rgb(246,82,50)" rx="2" ry="2" />
<text  x="988.75" y="1999.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="212.2" y="2021" width="0.4" height="15.0" fill="rgb(254,158,42)" rx="2" ry="2" />
<text  x="215.23" y="2031.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="282.1" y="1637" width="0.2" height="15.0" fill="rgb(232,124,7)" rx="2" ry="2" />
<text  x="285.06" y="1647.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="916.9" y="1861" width="0.2" height="15.0" fill="rgb(250,32,51)" rx="2" ry="2" />
<text  x="919.93" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (9 samples, 0.15%)</title><rect x="282.3" y="1589" width="1.8" height="15.0" fill="rgb(211,63,33)" rx="2" ry="2" />
<text  x="285.26" y="1599.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="312.4" y="1941" width="0.2" height="15.0" fill="rgb(234,85,29)" rx="2" ry="2" />
<text  x="315.45" y="1951.5" ></text>
</g>
<g >
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="372.2" y="1877" width="0.2" height="15.0" fill="rgb(251,183,39)" rx="2" ry="2" />
<text  x="375.21" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.07%)</title><rect x="815.3" y="1541" width="0.8" height="15.0" fill="rgb(228,104,10)" rx="2" ry="2" />
<text  x="818.31" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="1023.0" y="1877" width="0.4" height="15.0" fill="rgb(246,206,11)" rx="2" ry="2" />
<text  x="1025.98" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="930.6" y="1989" width="0.2" height="15.0" fill="rgb(248,206,52)" rx="2" ry="2" />
<text  x="933.62" y="1999.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="99.7" y="1685" width="0.2" height="15.0" fill="rgb(254,13,0)" rx="2" ry="2" />
<text  x="102.75" y="1695.5" ></text>
</g>
<g >
<title>native_irq_return_iret (2 samples, 0.03%)</title><rect x="143.4" y="37" width="0.4" height="15.0" fill="rgb(210,153,54)" rx="2" ry="2" />
<text  x="146.41" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (28 samples, 0.48%)</title><rect x="1100.7" y="1605" width="5.6" height="15.0" fill="rgb(247,210,22)" rx="2" ry="2" />
<text  x="1103.65" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (324 samples, 5.53%)</title><rect x="324.7" y="2021" width="65.2" height="15.0" fill="rgb(240,147,17)" rx="2" ry="2" />
<text  x="327.72" y="2031.5" >entry_S..</text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="1163.0" y="1925" width="0.2" height="15.0" fill="rgb(217,30,13)" rx="2" ry="2" />
<text  x="1166.04" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="616.5" y="1973" width="0.2" height="15.0" fill="rgb(253,112,44)" rx="2" ry="2" />
<text  x="619.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.12%)</title><rect x="908.7" y="2021" width="1.4" height="15.0" fill="rgb(239,26,28)" rx="2" ry="2" />
<text  x="911.68" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="78.2" y="1845" width="0.2" height="15.0" fill="rgb(236,38,35)" rx="2" ry="2" />
<text  x="81.22" y="1855.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (2 samples, 0.03%)</title><rect x="471.8" y="1925" width="0.4" height="15.0" fill="rgb(221,93,19)" rx="2" ry="2" />
<text  x="474.82" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="747.1" y="1733" width="0.2" height="15.0" fill="rgb(210,51,1)" rx="2" ry="2" />
<text  x="750.10" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="943.5" y="1957" width="0.2" height="15.0" fill="rgb(241,188,38)" rx="2" ry="2" />
<text  x="946.50" y="1967.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5 samples, 0.09%)</title><rect x="783.1" y="1557" width="1.0" height="15.0" fill="rgb(215,172,41)" rx="2" ry="2" />
<text  x="786.12" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="741.9" y="1525" width="0.2" height="15.0" fill="rgb(220,79,32)" rx="2" ry="2" />
<text  x="744.87" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="978.7" y="2005" width="0.2" height="15.0" fill="rgb(210,202,13)" rx="2" ry="2" />
<text  x="981.71" y="2015.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="850.7" y="1813" width="0.2" height="15.0" fill="rgb(235,108,0)" rx="2" ry="2" />
<text  x="853.73" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1109.3" y="1893" width="0.2" height="15.0" fill="rgb(237,1,11)" rx="2" ry="2" />
<text  x="1112.31" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (204 samples, 3.48%)</title><rect x="469.8" y="2021" width="41.1" height="15.0" fill="rgb(205,31,45)" rx="2" ry="2" />
<text  x="472.81" y="2031.5" >ent..</text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="832.2" y="1573" width="0.2" height="15.0" fill="rgb(247,94,16)" rx="2" ry="2" />
<text  x="835.22" y="1583.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="115.0" y="1781" width="0.2" height="15.0" fill="rgb(236,192,52)" rx="2" ry="2" />
<text  x="118.04" y="1791.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="935.2" y="1941" width="0.2" height="15.0" fill="rgb(224,193,54)" rx="2" ry="2" />
<text  x="938.25" y="1951.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="551.9" y="1957" width="0.2" height="15.0" fill="rgb(244,65,0)" rx="2" ry="2" />
<text  x="554.91" y="1967.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="464.2" y="1669" width="0.2" height="15.0" fill="rgb(216,211,5)" rx="2" ry="2" />
<text  x="467.17" y="1679.5" ></text>
</g>
<g >
<title>SYSC_accept4 (293 samples, 5.00%)</title><rect x="330.0" y="1973" width="58.9" height="15.0" fill="rgb(243,225,31)" rx="2" ry="2" />
<text  x="332.95" y="1983.5" >SYSC_a..</text>
</g>
<g >
<title>ixgbe_update_itr.isra.60 (1 samples, 0.02%)</title><rect x="563.2" y="1781" width="0.2" height="15.0" fill="rgb(229,162,22)" rx="2" ry="2" />
<text  x="566.18" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="261.9" y="1877" width="0.2" height="15.0" fill="rgb(238,104,5)" rx="2" ry="2" />
<text  x="264.94" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::tuple&lt;folly::AsyncSocket::EvbChangeCallback*, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, true&gt; (1 samples, 0.02%)</title><rect x="571.8" y="1989" width="0.2" height="15.0" fill="rgb(227,224,13)" rx="2" ry="2" />
<text  x="574.83" y="1999.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="523.3" y="1797" width="0.2" height="15.0" fill="rgb(227,219,43)" rx="2" ry="2" />
<text  x="526.33" y="1807.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="253.1" y="1941" width="0.2" height="15.0" fill="rgb(228,89,39)" rx="2" ry="2" />
<text  x="256.08" y="1951.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1109.3" y="1781" width="0.2" height="15.0" fill="rgb(216,120,15)" rx="2" ry="2" />
<text  x="1112.31" y="1791.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="652.1" y="1925" width="0.2" height="15.0" fill="rgb(225,210,25)" rx="2" ry="2" />
<text  x="655.12" y="1935.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="1144.3" y="1893" width="0.2" height="15.0" fill="rgb(233,176,15)" rx="2" ry="2" />
<text  x="1147.32" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="454.7" y="1813" width="0.2" height="15.0" fill="rgb(227,31,48)" rx="2" ry="2" />
<text  x="457.71" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="202.0" y="1685" width="0.2" height="15.0" fill="rgb(253,190,30)" rx="2" ry="2" />
<text  x="204.97" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="307.2" y="1605" width="0.2" height="15.0" fill="rgb(213,47,0)" rx="2" ry="2" />
<text  x="310.21" y="1615.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1176.3" y="1957" width="0.2" height="15.0" fill="rgb(232,172,44)" rx="2" ry="2" />
<text  x="1179.32" y="1967.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="661.8" y="1925" width="0.2" height="15.0" fill="rgb(241,100,24)" rx="2" ry="2" />
<text  x="664.78" y="1935.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="837.9" y="1925" width="0.2" height="15.0" fill="rgb(222,167,25)" rx="2" ry="2" />
<text  x="840.85" y="1935.5" ></text>
</g>
<g >
<title>ksize (5 samples, 0.09%)</title><rect x="270.4" y="1845" width="1.0" height="15.0" fill="rgb(248,126,3)" rx="2" ry="2" />
<text  x="273.39" y="1855.5" ></text>
</g>
<g >
<title>release_sock (17 samples, 0.29%)</title><rect x="349.9" y="1941" width="3.4" height="15.0" fill="rgb(241,195,28)" rx="2" ry="2" />
<text  x="352.87" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1397" width="30.0" height="15.0" fill="rgb(209,159,33)" rx="2" ry="2" />
<text  x="127.10" y="1407.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (1 samples, 0.02%)</title><rect x="906.1" y="2005" width="0.2" height="15.0" fill="rgb(205,153,6)" rx="2" ry="2" />
<text  x="909.07" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ServerLoad::ServerLoad (1 samples, 0.02%)</title><rect x="910.3" y="2037" width="0.2" height="15.0" fill="rgb(244,192,41)" rx="2" ry="2" />
<text  x="913.29" y="2047.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="916.9" y="1669" width="0.2" height="15.0" fill="rgb(207,112,46)" rx="2" ry="2" />
<text  x="919.93" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="546.1" y="1925" width="0.6" height="15.0" fill="rgb(236,19,12)" rx="2" ry="2" />
<text  x="549.07" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="257.5" y="1765" width="0.2" height="15.0" fill="rgb(233,33,17)" rx="2" ry="2" />
<text  x="260.51" y="1775.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::fibers::LoopController*, std::default_delete&lt;folly::fibers::LoopController&gt; &gt; (1 samples, 0.02%)</title><rect x="534.6" y="1957" width="0.2" height="15.0" fill="rgb(234,4,31)" rx="2" ry="2" />
<text  x="537.60" y="1967.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="394.7" y="2005" width="0.2" height="15.0" fill="rgb(251,10,30)" rx="2" ry="2" />
<text  x="397.75" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::~Fiber (3 samples, 0.05%)</title><rect x="19.3" y="1973" width="0.6" height="15.0" fill="rgb(243,12,36)" rx="2" ry="2" />
<text  x="22.26" y="1983.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="174.8" y="1941" width="0.4" height="15.0" fill="rgb(237,185,14)" rx="2" ry="2" />
<text  x="177.81" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1109.3" y="1669" width="0.2" height="15.0" fill="rgb(244,46,26)" rx="2" ry="2" />
<text  x="1112.31" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="513.3" y="1749" width="0.2" height="15.0" fill="rgb(230,54,54)" rx="2" ry="2" />
<text  x="516.27" y="1759.5" ></text>
</g>
<g >
<title>ghes_copy_tofrom_phys (1 samples, 0.02%)</title><rect x="494.4" y="1813" width="0.2" height="15.0" fill="rgb(238,3,2)" rx="2" ry="2" />
<text  x="497.36" y="1823.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="66.7" y="1909" width="0.4" height="15.0" fill="rgb(233,20,29)" rx="2" ry="2" />
<text  x="69.75" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (4 samples, 0.07%)</title><rect x="1182.0" y="2037" width="0.8" height="15.0" fill="rgb(208,68,34)" rx="2" ry="2" />
<text  x="1184.95" y="2047.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (2 samples, 0.03%)</title><rect x="94.3" y="1941" width="0.4" height="15.0" fill="rgb(209,227,9)" rx="2" ry="2" />
<text  x="97.31" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="750.1" y="1717" width="0.2" height="15.0" fill="rgb(230,123,35)" rx="2" ry="2" />
<text  x="753.12" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.05%)</title><rect x="1177.3" y="1957" width="0.6" height="15.0" fill="rgb(214,74,12)" rx="2" ry="2" />
<text  x="1180.32" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1205" width="29.8" height="15.0" fill="rgb(210,193,47)" rx="2" ry="2" />
<text  x="127.10" y="1215.5" >[u..</text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="930.4" y="1925" width="0.2" height="15.0" fill="rgb(226,108,18)" rx="2" ry="2" />
<text  x="933.42" y="1935.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="989.4" y="1781" width="0.2" height="15.0" fill="rgb(219,145,6)" rx="2" ry="2" />
<text  x="992.38" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="741.9" y="1621" width="0.2" height="15.0" fill="rgb(236,90,10)" rx="2" ry="2" />
<text  x="744.87" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_previous (1 samples, 0.02%)</title><rect x="934.4" y="1909" width="0.2" height="15.0" fill="rgb(254,159,43)" rx="2" ry="2" />
<text  x="937.44" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="887.4" y="1861" width="0.2" height="15.0" fill="rgb(220,159,45)" rx="2" ry="2" />
<text  x="890.35" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1093" width="29.8" height="15.0" fill="rgb(229,98,53)" rx="2" ry="2" />
<text  x="127.10" y="1103.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="888.2" y="1845" width="0.2" height="15.0" fill="rgb(230,113,41)" rx="2" ry="2" />
<text  x="891.16" y="1855.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="631.6" y="1765" width="0.2" height="15.0" fill="rgb(234,12,27)" rx="2" ry="2" />
<text  x="634.59" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="56.7" y="1717" width="0.2" height="15.0" fill="rgb(211,164,30)" rx="2" ry="2" />
<text  x="59.68" y="1727.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="433.6" y="1621" width="0.2" height="15.0" fill="rgb(241,97,8)" rx="2" ry="2" />
<text  x="436.58" y="1631.5" ></text>
</g>
<g >
<title>folly::SingletonThreadLocal&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;, folly::RequestContext, folly::detail::DefaultMake&lt;std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt; &gt;, folly::RequestContext&gt;::Wrapper::operator std::pair&lt;std::shared_ptr&lt;folly::RequestContext&gt;, std::atomic&lt;long&gt; &gt;&amp; (2 samples, 0.03%)</title><rect x="982.3" y="1973" width="0.4" height="15.0" fill="rgb(247,193,54)" rx="2" ry="2" />
<text  x="985.33" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="930.4" y="1845" width="0.2" height="15.0" fill="rgb(218,30,31)" rx="2" ry="2" />
<text  x="933.42" y="1855.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="432.8" y="1973" width="0.2" height="15.0" fill="rgb(249,26,43)" rx="2" ry="2" />
<text  x="435.78" y="1983.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="464.2" y="1637" width="0.2" height="15.0" fill="rgb(237,112,5)" rx="2" ry="2" />
<text  x="467.17" y="1647.5" ></text>
</g>
<g >
<title>folly::IPAddress::pick&lt;folly::IPAddress::str[abi:cxx11] (41 samples, 0.70%)</title><rect x="596.8" y="1973" width="8.2" height="15.0" fill="rgb(234,211,29)" rx="2" ry="2" />
<text  x="599.78" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (1 samples, 0.02%)</title><rect x="880.1" y="1957" width="0.2" height="15.0" fill="rgb(254,104,21)" rx="2" ry="2" />
<text  x="883.11" y="1967.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="899.2" y="1957" width="0.2" height="15.0" fill="rgb(242,225,46)" rx="2" ry="2" />
<text  x="902.23" y="1967.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="116.7" y="2021" width="0.2" height="15.0" fill="rgb(234,142,29)" rx="2" ry="2" />
<text  x="119.65" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="205.8" y="1909" width="0.2" height="15.0" fill="rgb(242,217,42)" rx="2" ry="2" />
<text  x="208.79" y="1919.5" ></text>
</g>
<g >
<title>sock_poll (41 samples, 0.70%)</title><rect x="434.2" y="1957" width="8.2" height="15.0" fill="rgb(215,145,48)" rx="2" ry="2" />
<text  x="437.19" y="1967.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="978.9" y="2005" width="0.2" height="15.0" fill="rgb(219,159,42)" rx="2" ry="2" />
<text  x="981.91" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="1087.2" y="1909" width="0.2" height="15.0" fill="rgb(246,58,4)" rx="2" ry="2" />
<text  x="1090.17" y="1919.5" ></text>
</g>
<g >
<title>sock_def_readable (4 samples, 0.07%)</title><rect x="282.5" y="1493" width="0.8" height="15.0" fill="rgb(246,153,5)" rx="2" ry="2" />
<text  x="285.46" y="1503.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="347.5" y="1861" width="0.4" height="15.0" fill="rgb(250,43,8)" rx="2" ry="2" />
<text  x="350.46" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (1 samples, 0.02%)</title><rect x="28.1" y="1957" width="0.2" height="15.0" fill="rgb(228,150,23)" rx="2" ry="2" />
<text  x="31.11" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="831.0" y="1797" width="0.2" height="15.0" fill="rgb(233,7,23)" rx="2" ry="2" />
<text  x="834.01" y="1807.5" ></text>
</g>
<g >
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="1105.3" y="1509" width="0.2" height="15.0" fill="rgb(254,19,47)" rx="2" ry="2" />
<text  x="1108.28" y="1519.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="721.3" y="1557" width="0.2" height="15.0" fill="rgb(215,191,0)" rx="2" ry="2" />
<text  x="724.34" y="1567.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="968.2" y="1829" width="0.2" height="15.0" fill="rgb(218,137,40)" rx="2" ry="2" />
<text  x="971.25" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (3 samples, 0.05%)</title><rect x="882.3" y="1893" width="0.6" height="15.0" fill="rgb(231,225,54)" rx="2" ry="2" />
<text  x="885.32" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1072.7" y="1829" width="0.2" height="15.0" fill="rgb(223,197,35)" rx="2" ry="2" />
<text  x="1075.68" y="1839.5" ></text>
</g>
<g >
<title>sys_futex (9 samples, 0.15%)</title><rect x="10.4" y="2005" width="1.8" height="15.0" fill="rgb(216,48,33)" rx="2" ry="2" />
<text  x="13.40" y="2015.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="861.4" y="1909" width="0.2" height="15.0" fill="rgb(218,163,36)" rx="2" ry="2" />
<text  x="864.39" y="1919.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="540.2" y="1973" width="0.2" height="15.0" fill="rgb(230,7,23)" rx="2" ry="2" />
<text  x="543.24" y="1983.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="56.7" y="1637" width="0.2" height="15.0" fill="rgb(234,178,35)" rx="2" ry="2" />
<text  x="59.68" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McSetReply::~McSetReply (8 samples, 0.14%)</title><rect x="961.8" y="2037" width="1.6" height="15.0" fill="rgb(246,152,0)" rx="2" ry="2" />
<text  x="964.81" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="919.8" y="1941" width="0.2" height="15.0" fill="rgb(244,215,0)" rx="2" ry="2" />
<text  x="922.75" y="1951.5" ></text>
</g>
<g >
<title>_copy_to_iter (10 samples, 0.17%)</title><rect x="1094.4" y="1909" width="2.0" height="15.0" fill="rgb(226,104,24)" rx="2" ry="2" />
<text  x="1097.42" y="1919.5" ></text>
</g>
<g >
<title>ip_finish_output2 (82 samples, 1.40%)</title><rect x="280.9" y="1749" width="16.5" height="15.0" fill="rgb(227,81,50)" rx="2" ry="2" />
<text  x="283.85" y="1759.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="154.1" y="1429" width="0.2" height="15.0" fill="rgb(237,150,14)" rx="2" ry="2" />
<text  x="157.08" y="1439.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (3 samples, 0.05%)</title><rect x="166.8" y="1925" width="0.6" height="15.0" fill="rgb(252,207,12)" rx="2" ry="2" />
<text  x="169.76" y="1935.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="257.5" y="1589" width="0.2" height="15.0" fill="rgb(226,35,42)" rx="2" ry="2" />
<text  x="260.51" y="1599.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned int, folly::IOBuf*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt; &gt;::unordered_map (10 samples, 0.17%)</title><rect x="575.5" y="2005" width="2.0" height="15.0" fill="rgb(213,198,43)" rx="2" ry="2" />
<text  x="578.45" y="2015.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="617.3" y="1925" width="0.2" height="15.0" fill="rgb(226,209,18)" rx="2" ry="2" />
<text  x="620.31" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::initLocalData (5 samples, 0.09%)</title><rect x="634.2" y="1989" width="1.0" height="15.0" fill="rgb(249,3,31)" rx="2" ry="2" />
<text  x="637.21" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1054.8" y="1925" width="0.6" height="15.0" fill="rgb(243,176,28)" rx="2" ry="2" />
<text  x="1057.77" y="1935.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="673.0" y="2005" width="0.4" height="15.0" fill="rgb(248,70,54)" rx="2" ry="2" />
<text  x="676.05" y="2015.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (46 samples, 0.78%)</title><rect x="445.7" y="1957" width="9.2" height="15.0" fill="rgb(253,94,26)" rx="2" ry="2" />
<text  x="448.66" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (2 samples, 0.03%)</title><rect x="535.4" y="1845" width="0.4" height="15.0" fill="rgb(233,176,42)" rx="2" ry="2" />
<text  x="538.41" y="1855.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="205.8" y="1973" width="0.2" height="15.0" fill="rgb(243,123,17)" rx="2" ry="2" />
<text  x="208.79" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="177.4" y="1877" width="0.2" height="15.0" fill="rgb(242,164,28)" rx="2" ry="2" />
<text  x="180.42" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="631.6" y="1909" width="0.2" height="15.0" fill="rgb(231,163,39)" rx="2" ry="2" />
<text  x="634.59" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="188.5" y="1925" width="0.2" height="15.0" fill="rgb(223,4,47)" rx="2" ry="2" />
<text  x="191.49" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1157" width="29.8" height="15.0" fill="rgb(235,222,31)" rx="2" ry="2" />
<text  x="127.10" y="1167.5" >[u..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="19.1" y="1845" width="0.2" height="15.0" fill="rgb(241,226,34)" rx="2" ry="2" />
<text  x="22.06" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="691.6" y="1797" width="0.2" height="15.0" fill="rgb(245,211,45)" rx="2" ry="2" />
<text  x="694.56" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1174.7" y="1973" width="0.2" height="15.0" fill="rgb(245,16,0)" rx="2" ry="2" />
<text  x="1177.71" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (7 samples, 0.12%)</title><rect x="77.0" y="1925" width="1.4" height="15.0" fill="rgb(219,159,42)" rx="2" ry="2" />
<text  x="80.01" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerThread::startThread (79 samples, 1.35%)</title><rect x="172.6" y="2005" width="15.9" height="15.0" fill="rgb(242,196,31)" rx="2" ry="2" />
<text  x="175.59" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="208.6" y="1989" width="0.2" height="15.0" fill="rgb(236,226,5)" rx="2" ry="2" />
<text  x="211.61" y="1999.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetReply, facebook::memcache::McSetReply, facebook::memcache::McDeleteReply, facebook::memcache::McLeaseGetReply, facebook::memcache::McLeaseSetReply, facebook::memcache::McAddReply, facebook::memcache::McReplaceReply, facebook::memcache::McGetsReply, facebook::memcache::McCasReply, facebook::memcache::McIncrReply, facebook::memcache::McDecrReply, facebook::memcache::McMetagetReply, facebook::memcache::McVersionReply, facebook::memcache::McAppendReply, facebook::memcache::McPrependReply, facebook::memcache::McTouchReply, facebook::memcache::McShutdownReply, facebook::memcache::McQuitReply, facebook::memcache::McStatsReply, facebook::memcache::McExecReply, facebook::memcache::McFlushReReply, facebook::memcache::McFlushAllReply, facebook::memcache::McGatReply, facebook::memcache::McGatsReply&gt;::cleanup&lt;facebook::memcache::McGetReply&gt; (1 samples, 0.02%)</title><rect x="928.8" y="2005" width="0.2" height="15.0" fill="rgb(227,65,42)" rx="2" ry="2" />
<text  x="931.81" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="593.2" y="1701" width="0.4" height="15.0" fill="rgb(221,97,9)" rx="2" ry="2" />
<text  x="596.16" y="1711.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="188.3" y="1893" width="0.2" height="15.0" fill="rgb(213,167,11)" rx="2" ry="2" />
<text  x="191.29" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="407.8" y="1781" width="0.2" height="15.0" fill="rgb(238,36,9)" rx="2" ry="2" />
<text  x="410.83" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1023.0" y="1797" width="0.2" height="15.0" fill="rgb(217,59,46)" rx="2" ry="2" />
<text  x="1025.98" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="543.9" y="1765" width="0.2" height="15.0" fill="rgb(206,112,10)" rx="2" ry="2" />
<text  x="546.86" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="882.9" y="1909" width="0.4" height="15.0" fill="rgb(206,61,52)" rx="2" ry="2" />
<text  x="885.93" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr (10 samples, 0.17%)</title><rect x="887.6" y="1957" width="2.0" height="15.0" fill="rgb(223,53,28)" rx="2" ry="2" />
<text  x="890.55" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="890.4" y="1957" width="0.4" height="15.0" fill="rgb(231,147,18)" rx="2" ry="2" />
<text  x="893.37" y="1967.5" ></text>
</g>
<g >
<title>tcp_cwnd_restart (4 samples, 0.07%)</title><rect x="272.8" y="1861" width="0.8" height="15.0" fill="rgb(209,4,45)" rx="2" ry="2" />
<text  x="275.80" y="1871.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="999.8" y="1941" width="0.2" height="15.0" fill="rgb(234,25,34)" rx="2" ry="2" />
<text  x="1002.84" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="1054.8" y="1893" width="0.6" height="15.0" fill="rgb(242,36,1)" rx="2" ry="2" />
<text  x="1057.77" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="961.4" y="2021" width="0.4" height="15.0" fill="rgb(242,84,6)" rx="2" ry="2" />
<text  x="964.41" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1174.7" y="1909" width="0.2" height="15.0" fill="rgb(245,26,54)" rx="2" ry="2" />
<text  x="1177.71" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="917.3" y="1941" width="0.2" height="15.0" fill="rgb(229,102,14)" rx="2" ry="2" />
<text  x="920.34" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="202.0" y="1909" width="0.2" height="15.0" fill="rgb(211,51,11)" rx="2" ry="2" />
<text  x="204.97" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="486.7" y="1781" width="0.2" height="15.0" fill="rgb(251,4,11)" rx="2" ry="2" />
<text  x="489.71" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="701.8" y="1733" width="0.2" height="15.0" fill="rgb(209,201,8)" rx="2" ry="2" />
<text  x="704.82" y="1743.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="19.1" y="1541" width="0.2" height="15.0" fill="rgb(224,33,28)" rx="2" ry="2" />
<text  x="22.06" y="1551.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (5 samples, 0.09%)</title><rect x="566.8" y="2005" width="1.0" height="15.0" fill="rgb(215,119,27)" rx="2" ry="2" />
<text  x="569.80" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (2 samples, 0.03%)</title><rect x="576.5" y="1973" width="0.4" height="15.0" fill="rgb(224,159,11)" rx="2" ry="2" />
<text  x="579.46" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="922.0" y="2005" width="0.2" height="15.0" fill="rgb(234,0,54)" rx="2" ry="2" />
<text  x="924.96" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_fdir_add_signature_filter_82599 (1 samples, 0.02%)</title><rect x="295.3" y="1637" width="0.2" height="15.0" fill="rgb(217,70,0)" rx="2" ry="2" />
<text  x="298.34" y="1647.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="202.0" y="1941" width="0.2" height="15.0" fill="rgb(244,202,17)" rx="2" ry="2" />
<text  x="204.97" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="168.0" y="1941" width="0.2" height="15.0" fill="rgb(243,149,50)" rx="2" ry="2" />
<text  x="170.96" y="1951.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (1 samples, 0.02%)</title><rect x="963.2" y="1989" width="0.2" height="15.0" fill="rgb(207,106,39)" rx="2" ry="2" />
<text  x="966.22" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="707.3" y="1749" width="0.2" height="15.0" fill="rgb(248,35,32)" rx="2" ry="2" />
<text  x="710.25" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.31%)</title><rect x="964.0" y="2021" width="3.6" height="15.0" fill="rgb(211,169,40)" rx="2" ry="2" />
<text  x="967.02" y="2031.5" ></text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="1106.5" y="1749" width="0.2" height="15.0" fill="rgb(237,66,44)" rx="2" ry="2" />
<text  x="1109.49" y="1759.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="851.7" y="1829" width="0.2" height="15.0" fill="rgb(240,51,19)" rx="2" ry="2" />
<text  x="854.74" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (154 samples, 2.63%)</title><rect x="123.9" y="1717" width="31.0" height="15.0" fill="rgb(208,133,22)" rx="2" ry="2" />
<text  x="126.89" y="1727.5" >[u..</text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (3 samples, 0.05%)</title><rect x="218.3" y="2037" width="0.6" height="15.0" fill="rgb(250,168,21)" rx="2" ry="2" />
<text  x="221.27" y="2047.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="845.7" y="1685" width="0.2" height="15.0" fill="rgb(236,220,50)" rx="2" ry="2" />
<text  x="848.70" y="1695.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="707.3" y="1797" width="0.2" height="15.0" fill="rgb(253,8,13)" rx="2" ry="2" />
<text  x="710.25" y="1807.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="369.0" y="1829" width="0.2" height="15.0" fill="rgb(235,9,8)" rx="2" ry="2" />
<text  x="371.99" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="241.0" y="1941" width="0.2" height="15.0" fill="rgb(243,156,16)" rx="2" ry="2" />
<text  x="244.01" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="272.4" y="1685" width="0.2" height="15.0" fill="rgb(209,47,30)" rx="2" ry="2" />
<text  x="275.40" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="884.1" y="1893" width="0.4" height="15.0" fill="rgb(241,147,19)" rx="2" ry="2" />
<text  x="887.13" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1119.2" y="1893" width="0.4" height="15.0" fill="rgb(227,151,18)" rx="2" ry="2" />
<text  x="1122.17" y="1903.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="1032.6" y="2021" width="2.1" height="15.0" fill="rgb(221,95,0)" rx="2" ry="2" />
<text  x="1035.64" y="2031.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="19.1" y="1557" width="0.2" height="15.0" fill="rgb(215,76,52)" rx="2" ry="2" />
<text  x="22.06" y="1567.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.7" y="2005" width="0.2" height="15.0" fill="rgb(250,64,35)" rx="2" ry="2" />
<text  x="1177.71" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="891.2" y="1829" width="0.2" height="15.0" fill="rgb(208,206,53)" rx="2" ry="2" />
<text  x="894.18" y="1839.5" ></text>
</g>
<g >
<title>folly::IOBuf::cloneOneAsValue (5 samples, 0.09%)</title><rect x="149.9" y="37" width="1.0" height="15.0" fill="rgb(220,11,53)" rx="2" ry="2" />
<text  x="152.85" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="783.3" y="1429" width="0.8" height="15.0" fill="rgb(222,8,51)" rx="2" ry="2" />
<text  x="786.32" y="1439.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="880.1" y="1893" width="0.2" height="15.0" fill="rgb(240,116,29)" rx="2" ry="2" />
<text  x="883.11" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="1022.4" y="2021" width="0.2" height="15.0" fill="rgb(215,193,19)" rx="2" ry="2" />
<text  x="1025.38" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="334.0" y="1941" width="0.4" height="15.0" fill="rgb(236,227,23)" rx="2" ry="2" />
<text  x="336.98" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="486.7" y="1685" width="0.2" height="15.0" fill="rgb(243,120,12)" rx="2" ry="2" />
<text  x="489.71" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (2 samples, 0.03%)</title><rect x="29.1" y="1973" width="0.4" height="15.0" fill="rgb(240,182,52)" rx="2" ry="2" />
<text  x="32.12" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="605.6" y="2005" width="0.2" height="15.0" fill="rgb(250,110,16)" rx="2" ry="2" />
<text  x="608.63" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1100.5" y="1701" width="0.2" height="15.0" fill="rgb(235,58,10)" rx="2" ry="2" />
<text  x="1103.45" y="1711.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="42.4" y="1893" width="0.2" height="15.0" fill="rgb(209,36,15)" rx="2" ry="2" />
<text  x="45.40" y="1903.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="1109.3" y="1621" width="0.2" height="15.0" fill="rgb(219,133,11)" rx="2" ry="2" />
<text  x="1112.31" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="862.8" y="1909" width="0.2" height="15.0" fill="rgb(205,158,54)" rx="2" ry="2" />
<text  x="865.80" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="963.4" y="1989" width="0.2" height="15.0" fill="rgb(215,224,54)" rx="2" ry="2" />
<text  x="966.42" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1111.3" y="1733" width="0.2" height="15.0" fill="rgb(245,138,12)" rx="2" ry="2" />
<text  x="1114.32" y="1743.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (2 samples, 0.03%)</title><rect x="1087.8" y="1669" width="0.4" height="15.0" fill="rgb(233,154,18)" rx="2" ry="2" />
<text  x="1090.78" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (12 samples, 0.20%)</title><rect x="56.1" y="1941" width="2.4" height="15.0" fill="rgb(222,181,21)" rx="2" ry="2" />
<text  x="59.08" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="691.6" y="1925" width="0.2" height="15.0" fill="rgb(250,217,12)" rx="2" ry="2" />
<text  x="694.56" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="741.9" y="1669" width="0.2" height="15.0" fill="rgb(206,149,23)" rx="2" ry="2" />
<text  x="744.87" y="1679.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="707.1" y="1861" width="0.2" height="15.0" fill="rgb(209,199,13)" rx="2" ry="2" />
<text  x="710.05" y="1871.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (38 samples, 0.65%)</title><rect x="1003.1" y="2021" width="7.6" height="15.0" fill="rgb(239,151,46)" rx="2" ry="2" />
<text  x="1006.06" y="2031.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="747.9" y="1797" width="0.2" height="15.0" fill="rgb(219,149,10)" rx="2" ry="2" />
<text  x="750.90" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="200.4" y="1973" width="0.6" height="15.0" fill="rgb(212,196,43)" rx="2" ry="2" />
<text  x="203.36" y="1983.5" ></text>
</g>
<g >
<title>std::forward&lt;folly::IOBuf*&amp;&gt; (1 samples, 0.02%)</title><rect x="887.6" y="1925" width="0.2" height="15.0" fill="rgb(206,200,31)" rx="2" ry="2" />
<text  x="890.55" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::runLoopCallbacks (59 samples, 1.01%)</title><rect x="175.8" y="1941" width="11.9" height="15.0" fill="rgb(225,202,27)" rx="2" ry="2" />
<text  x="178.81" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="83.9" y="1861" width="0.4" height="15.0" fill="rgb(215,44,2)" rx="2" ry="2" />
<text  x="86.85" y="1871.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="1178.9" y="1941" width="0.2" height="15.0" fill="rgb(212,141,22)" rx="2" ry="2" />
<text  x="1181.93" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::Trie&lt;std::vector&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt;, std::allocator&lt;std::shared_ptr&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt; &gt; &gt;::findPrefix[abi:cxx11] (4 samples, 0.07%)</title><rect x="911.3" y="2037" width="0.8" height="15.0" fill="rgb(221,64,34)" rx="2" ry="2" />
<text  x="914.30" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1082.1" y="1829" width="0.2" height="15.0" fill="rgb(210,83,2)" rx="2" ry="2" />
<text  x="1085.14" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (3 samples, 0.05%)</title><rect x="882.3" y="1925" width="0.6" height="15.0" fill="rgb(217,77,15)" rx="2" ry="2" />
<text  x="885.32" y="1935.5" ></text>
</g>
<g >
<title>std::operator== (2 samples, 0.03%)</title><rect x="66.7" y="1893" width="0.4" height="15.0" fill="rgb(217,7,16)" rx="2" ry="2" />
<text  x="69.75" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="362.6" y="1909" width="0.2" height="15.0" fill="rgb(243,85,5)" rx="2" ry="2" />
<text  x="365.55" y="1919.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="312.0" y="1813" width="0.2" height="15.0" fill="rgb(220,55,45)" rx="2" ry="2" />
<text  x="315.04" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="812.5" y="1381" width="0.2" height="15.0" fill="rgb(217,62,0)" rx="2" ry="2" />
<text  x="815.50" y="1391.5" ></text>
</g>
<g >
<title>unmap_single (1 samples, 0.02%)</title><rect x="208.6" y="1893" width="0.2" height="15.0" fill="rgb(246,27,47)" rx="2" ry="2" />
<text  x="211.61" y="1903.5" ></text>
</g>
<g >
<title>folly::EventHandler::ensureNotRegistered (5 samples, 0.09%)</title><rect x="851.3" y="1925" width="1.0" height="15.0" fill="rgb(208,18,32)" rx="2" ry="2" />
<text  x="854.33" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyBase::FlushCallback::runLoopCallback (1 samples, 0.02%)</title><rect x="175.2" y="1941" width="0.2" height="15.0" fill="rgb(241,150,6)" rx="2" ry="2" />
<text  x="178.21" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="548.9" y="1925" width="0.2" height="15.0" fill="rgb(212,88,7)" rx="2" ry="2" />
<text  x="551.89" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="930.4" y="1749" width="0.2" height="15.0" fill="rgb(235,212,18)" rx="2" ry="2" />
<text  x="933.42" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetRequest::~McSetRequest (11 samples, 0.19%)</title><rect x="906.5" y="2037" width="2.2" height="15.0" fill="rgb(232,66,49)" rx="2" ry="2" />
<text  x="909.47" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (2 samples, 0.03%)</title><rect x="849.3" y="1925" width="0.4" height="15.0" fill="rgb(208,106,7)" rx="2" ry="2" />
<text  x="852.32" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="778.5" y="1477" width="0.2" height="15.0" fill="rgb(229,215,19)" rx="2" ry="2" />
<text  x="781.49" y="1487.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="969.7" y="2005" width="0.4" height="15.0" fill="rgb(245,169,33)" rx="2" ry="2" />
<text  x="972.66" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54 samples, 0.92%)</title><rect x="582.1" y="1925" width="10.9" height="15.0" fill="rgb(247,7,54)" rx="2" ry="2" />
<text  x="585.09" y="1935.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (6 samples, 0.10%)</title><rect x="226.3" y="1941" width="1.2" height="15.0" fill="rgb(210,105,37)" rx="2" ry="2" />
<text  x="229.32" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1111.3" y="1717" width="0.2" height="15.0" fill="rgb(248,179,28)" rx="2" ry="2" />
<text  x="1114.32" y="1727.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="840.9" y="1509" width="0.2" height="15.0" fill="rgb(232,3,37)" rx="2" ry="2" />
<text  x="843.87" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="862.8" y="1813" width="0.2" height="15.0" fill="rgb(242,6,51)" rx="2" ry="2" />
<text  x="865.80" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="407.2" y="1941" width="0.2" height="15.0" fill="rgb(206,103,31)" rx="2" ry="2" />
<text  x="410.22" y="1951.5" ></text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1023.0" y="1717" width="0.2" height="15.0" fill="rgb(228,80,41)" rx="2" ry="2" />
<text  x="1025.98" y="1727.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="816.5" y="1477" width="0.2" height="15.0" fill="rgb(214,9,28)" rx="2" ry="2" />
<text  x="819.52" y="1487.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="862.8" y="1765" width="0.2" height="15.0" fill="rgb(217,70,54)" rx="2" ry="2" />
<text  x="865.80" y="1775.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1144.3" y="2037" width="0.2" height="15.0" fill="rgb(210,100,12)" rx="2" ry="2" />
<text  x="1147.32" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1119.4" y="1813" width="0.2" height="15.0" fill="rgb(231,125,38)" rx="2" ry="2" />
<text  x="1122.37" y="1823.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="433.6" y="1765" width="0.2" height="15.0" fill="rgb(254,136,18)" rx="2" ry="2" />
<text  x="436.58" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="71.0" y="1877" width="0.2" height="15.0" fill="rgb(214,112,28)" rx="2" ry="2" />
<text  x="73.97" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="347.5" y="1621" width="0.2" height="15.0" fill="rgb(231,89,21)" rx="2" ry="2" />
<text  x="350.46" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="880.1" y="1877" width="0.2" height="15.0" fill="rgb(236,170,5)" rx="2" ry="2" />
<text  x="883.11" y="1887.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;facebook::memcache::MultiOpParent, std::allocator&lt;facebook::memcache::MultiOpParent&gt;,  (1 samples, 0.02%)</title><rect x="1031.2" y="2005" width="0.2" height="15.0" fill="rgb(237,30,49)" rx="2" ry="2" />
<text  x="1034.23" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="233.0" y="1733" width="0.2" height="15.0" fill="rgb(249,213,16)" rx="2" ry="2" />
<text  x="235.96" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::fireStateChangeCallbacks (1 samples, 0.02%)</title><rect x="1148.9" y="2053" width="0.3" height="15.0" fill="rgb(218,194,13)" rx="2" ry="2" />
<text  x="1151.95" y="2063.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.0" y="1909" width="0.2" height="15.0" fill="rgb(206,133,4)" rx="2" ry="2" />
<text  x="889.95" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="889.4" y="1845" width="0.2" height="15.0" fill="rgb(242,100,40)" rx="2" ry="2" />
<text  x="892.37" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13 samples, 0.22%)</title><rect x="809.9" y="1589" width="2.6" height="15.0" fill="rgb(242,199,1)" rx="2" ry="2" />
<text  x="812.88" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="345.8" y="1781" width="0.3" height="15.0" fill="rgb(222,109,17)" rx="2" ry="2" />
<text  x="348.85" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="71.0" y="1701" width="0.2" height="15.0" fill="rgb(223,107,11)" rx="2" ry="2" />
<text  x="73.97" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::~AsyncTimeout (1 samples, 0.02%)</title><rect x="79.0" y="1957" width="0.2" height="15.0" fill="rgb(245,128,51)" rx="2" ry="2" />
<text  x="82.02" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::resume (1 samples, 0.02%)</title><rect x="1152.0" y="2005" width="0.2" height="15.0" fill="rgb(220,108,27)" rx="2" ry="2" />
<text  x="1154.97" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1055.0" y="1797" width="0.4" height="15.0" fill="rgb(237,100,30)" rx="2" ry="2" />
<text  x="1057.98" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="312.4" y="1813" width="0.2" height="15.0" fill="rgb(241,184,53)" rx="2" ry="2" />
<text  x="315.45" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1148.7" y="1861" width="0.2" height="15.0" fill="rgb(228,139,29)" rx="2" ry="2" />
<text  x="1151.75" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1032.4" y="2021" width="0.2" height="15.0" fill="rgb(252,76,32)" rx="2" ry="2" />
<text  x="1035.44" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="543.9" y="1781" width="0.2" height="15.0" fill="rgb(236,3,2)" rx="2" ry="2" />
<text  x="546.86" y="1791.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="930.2" y="1989" width="0.2" height="15.0" fill="rgb(213,76,46)" rx="2" ry="2" />
<text  x="933.21" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1181.1" y="1797" width="0.2" height="15.0" fill="rgb(211,151,39)" rx="2" ry="2" />
<text  x="1184.15" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1119.4" y="1781" width="0.2" height="15.0" fill="rgb(233,14,10)" rx="2" ry="2" />
<text  x="1122.37" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="891.2" y="1877" width="0.2" height="15.0" fill="rgb(241,14,34)" rx="2" ry="2" />
<text  x="894.18" y="1887.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (1 samples, 0.02%)</title><rect x="852.3" y="1941" width="0.2" height="15.0" fill="rgb(229,88,5)" rx="2" ry="2" />
<text  x="855.34" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="887.4" y="1957" width="0.2" height="15.0" fill="rgb(251,151,1)" rx="2" ry="2" />
<text  x="890.35" y="1967.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::NetworkSocket (2 samples, 0.03%)</title><rect x="705.8" y="1925" width="0.4" height="15.0" fill="rgb(233,212,7)" rx="2" ry="2" />
<text  x="708.85" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="238.0" y="1669" width="0.2" height="15.0" fill="rgb(215,131,47)" rx="2" ry="2" />
<text  x="240.99" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="199.6" y="1989" width="0.4" height="15.0" fill="rgb(248,128,40)" rx="2" ry="2" />
<text  x="202.56" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1111.3" y="1925" width="0.2" height="15.0" fill="rgb(235,148,16)" rx="2" ry="2" />
<text  x="1114.32" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="912.3" y="1989" width="0.8" height="15.0" fill="rgb(239,79,14)" rx="2" ry="2" />
<text  x="915.31" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1120.4" y="2005" width="0.2" height="15.0" fill="rgb(250,125,28)" rx="2" ry="2" />
<text  x="1123.38" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::TkoTracker::recordSuccess (1 samples, 0.02%)</title><rect x="1170.3" y="2053" width="0.2" height="15.0" fill="rgb(221,21,29)" rx="2" ry="2" />
<text  x="1173.28" y="2063.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.03%)</title><rect x="1184.2" y="2021" width="0.4" height="15.0" fill="rgb(218,229,16)" rx="2" ry="2" />
<text  x="1187.16" y="2031.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="310.6" y="1653" width="0.2" height="15.0" fill="rgb(224,121,4)" rx="2" ry="2" />
<text  x="313.63" y="1663.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="688.7" y="2005" width="0.2" height="15.0" fill="rgb(250,205,52)" rx="2" ry="2" />
<text  x="691.74" y="2015.5" ></text>
</g>
<g >
<title>__close (11 samples, 0.19%)</title><rect x="964.0" y="1973" width="2.2" height="15.0" fill="rgb(215,81,13)" rx="2" ry="2" />
<text  x="967.02" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::~EventBaseEvent (2 samples, 0.03%)</title><rect x="74.8" y="1925" width="0.4" height="15.0" fill="rgb(240,56,39)" rx="2" ry="2" />
<text  x="77.80" y="1935.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="942.1" y="1893" width="0.2" height="15.0" fill="rgb(244,23,4)" rx="2" ry="2" />
<text  x="945.09" y="1903.5" ></text>
</g>
<g >
<title>lock_sock_nested (7 samples, 0.12%)</title><rect x="1085.0" y="1925" width="1.4" height="15.0" fill="rgb(227,127,53)" rx="2" ry="2" />
<text  x="1087.96" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="800.8" y="1461" width="0.4" height="15.0" fill="rgb(229,207,4)" rx="2" ry="2" />
<text  x="803.83" y="1471.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="42.4" y="1861" width="0.2" height="15.0" fill="rgb(247,157,30)" rx="2" ry="2" />
<text  x="45.40" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1045" width="29.8" height="15.0" fill="rgb(228,134,49)" rx="2" ry="2" />
<text  x="127.10" y="1055.5" >[u..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="454.7" y="1797" width="0.2" height="15.0" fill="rgb(239,7,23)" rx="2" ry="2" />
<text  x="457.71" y="1807.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="841.7" y="1829" width="0.2" height="15.0" fill="rgb(221,178,6)" rx="2" ry="2" />
<text  x="844.67" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (3 samples, 0.05%)</title><rect x="1087.6" y="1813" width="0.6" height="15.0" fill="rgb(218,226,52)" rx="2" ry="2" />
<text  x="1090.58" y="1823.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="909.7" y="1989" width="0.4" height="15.0" fill="rgb(227,142,25)" rx="2" ry="2" />
<text  x="912.69" y="1999.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (8 samples, 0.14%)</title><rect x="344.0" y="1893" width="1.6" height="15.0" fill="rgb(221,149,49)" rx="2" ry="2" />
<text  x="347.04" y="1903.5" ></text>
</g>
<g >
<title>tcp_rcv_established (27 samples, 0.46%)</title><rect x="1100.9" y="1557" width="5.4" height="15.0" fill="rgb(225,116,21)" rx="2" ry="2" />
<text  x="1103.86" y="1567.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="747.1" y="1669" width="0.2" height="15.0" fill="rgb(238,90,9)" rx="2" ry="2" />
<text  x="750.10" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="83.9" y="1717" width="0.2" height="15.0" fill="rgb(216,51,42)" rx="2" ry="2" />
<text  x="86.85" y="1727.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="691.6" y="1957" width="0.2" height="15.0" fill="rgb(238,70,48)" rx="2" ry="2" />
<text  x="694.56" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="43.2" y="1925" width="0.8" height="15.0" fill="rgb(205,43,8)" rx="2" ry="2" />
<text  x="46.20" y="1935.5" ></text>
</g>
<g >
<title>kmem_cache_free (17 samples, 0.29%)</title><rect x="448.1" y="1941" width="3.4" height="15.0" fill="rgb(242,162,26)" rx="2" ry="2" />
<text  x="451.07" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1032.4" y="1989" width="0.2" height="15.0" fill="rgb(242,103,28)" rx="2" ry="2" />
<text  x="1035.44" y="1999.5" ></text>
</g>
<g >
<title>std::function&lt;void  (9 samples, 0.15%)</title><rect x="944.5" y="1957" width="1.8" height="15.0" fill="rgb(252,69,19)" rx="2" ry="2" />
<text  x="947.50" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1094.2" y="1877" width="0.2" height="15.0" fill="rgb(253,153,20)" rx="2" ry="2" />
<text  x="1097.22" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="757" width="29.6" height="15.0" fill="rgb(247,189,3)" rx="2" ry="2" />
<text  x="127.10" y="767.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1149.2" y="1957" width="0.2" height="15.0" fill="rgb(210,53,54)" rx="2" ry="2" />
<text  x="1152.15" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="342.0" y="1717" width="0.2" height="15.0" fill="rgb(214,7,31)" rx="2" ry="2" />
<text  x="345.03" y="1727.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1032.4" y="1749" width="0.2" height="15.0" fill="rgb(232,141,2)" rx="2" ry="2" />
<text  x="1035.44" y="1759.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="99.7" y="1653" width="0.2" height="15.0" fill="rgb(228,226,12)" rx="2" ry="2" />
<text  x="102.75" y="1663.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="925.4" y="1941" width="0.2" height="15.0" fill="rgb(254,87,14)" rx="2" ry="2" />
<text  x="928.39" y="1951.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="930.4" y="1685" width="0.2" height="15.0" fill="rgb(213,83,28)" rx="2" ry="2" />
<text  x="933.42" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="701.8" y="1925" width="0.2" height="15.0" fill="rgb(234,215,7)" rx="2" ry="2" />
<text  x="704.82" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::FunctionTraits&lt;void  (3 samples, 0.05%)</title><rect x="979.3" y="2005" width="0.6" height="15.0" fill="rgb(224,19,8)" rx="2" ry="2" />
<text  x="982.31" y="2015.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="255.1" y="1717" width="0.2" height="15.0" fill="rgb(208,176,49)" rx="2" ry="2" />
<text  x="258.10" y="1727.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="320.7" y="2037" width="0.2" height="15.0" fill="rgb(211,138,11)" rx="2" ry="2" />
<text  x="323.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (152 samples, 2.59%)</title><rect x="123.9" y="1637" width="30.6" height="15.0" fill="rgb(252,35,0)" rx="2" ry="2" />
<text  x="126.89" y="1647.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="930.4" y="1941" width="0.2" height="15.0" fill="rgb(228,152,41)" rx="2" ry="2" />
<text  x="933.42" y="1951.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="551.1" y="1957" width="0.2" height="15.0" fill="rgb(228,160,21)" rx="2" ry="2" />
<text  x="554.10" y="1967.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="861.4" y="1893" width="0.2" height="15.0" fill="rgb(233,184,1)" rx="2" ry="2" />
<text  x="864.39" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="935.6" y="1909" width="0.2" height="15.0" fill="rgb(253,198,40)" rx="2" ry="2" />
<text  x="938.65" y="1919.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (8 samples, 0.14%)</title><rect x="10.6" y="1845" width="1.6" height="15.0" fill="rgb(230,48,5)" rx="2" ry="2" />
<text  x="13.60" y="1855.5" ></text>
</g>
<g >
<title>__d_alloc (18 samples, 0.31%)</title><rect x="381.9" y="1925" width="3.6" height="15.0" fill="rgb(221,51,2)" rx="2" ry="2" />
<text  x="384.87" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::AsyncSocket (1 samples, 0.02%)</title><rect x="963.8" y="2037" width="0.2" height="15.0" fill="rgb(235,46,47)" rx="2" ry="2" />
<text  x="966.82" y="2047.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="152.3" y="53" width="0.2" height="15.0" fill="rgb(228,157,7)" rx="2" ry="2" />
<text  x="155.27" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="730.2" y="1637" width="0.2" height="15.0" fill="rgb(227,162,32)" rx="2" ry="2" />
<text  x="733.19" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="888.4" y="1941" width="0.2" height="15.0" fill="rgb(228,155,20)" rx="2" ry="2" />
<text  x="891.36" y="1951.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="652.1" y="1877" width="0.2" height="15.0" fill="rgb(253,112,2)" rx="2" ry="2" />
<text  x="655.12" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="538.8" y="1989" width="0.2" height="15.0" fill="rgb(254,137,0)" rx="2" ry="2" />
<text  x="541.83" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="56.9" y="1925" width="1.4" height="15.0" fill="rgb(241,227,18)" rx="2" ry="2" />
<text  x="59.89" y="1935.5" ></text>
</g>
<g >
<title>__destroy_inode (6 samples, 0.10%)</title><rect x="732.2" y="1685" width="1.2" height="15.0" fill="rgb(233,217,4)" rx="2" ry="2" />
<text  x="735.21" y="1695.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="865.8" y="1925" width="0.2" height="15.0" fill="rgb(235,120,43)" rx="2" ry="2" />
<text  x="868.82" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(212,49,5)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="880.1" y="1861" width="0.2" height="15.0" fill="rgb(253,226,8)" rx="2" ry="2" />
<text  x="883.11" y="1871.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="486.7" y="1621" width="0.2" height="15.0" fill="rgb(251,18,50)" rx="2" ry="2" />
<text  x="489.71" y="1631.5" ></text>
</g>
<g >
<title>__close (3 samples, 0.05%)</title><rect x="1173.1" y="1957" width="0.6" height="15.0" fill="rgb(208,115,33)" rx="2" ry="2" />
<text  x="1176.10" y="1967.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="81.8" y="1893" width="0.2" height="15.0" fill="rgb(236,94,49)" rx="2" ry="2" />
<text  x="84.84" y="1903.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="124.1" y="389" width="0.2" height="15.0" fill="rgb(236,2,47)" rx="2" ry="2" />
<text  x="127.10" y="399.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1030.4" y="1909" width="0.2" height="15.0" fill="rgb(247,109,9)" rx="2" ry="2" />
<text  x="1033.43" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (3 samples, 0.05%)</title><rect x="87.9" y="1909" width="0.6" height="15.0" fill="rgb(227,219,16)" rx="2" ry="2" />
<text  x="90.88" y="1919.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="545.7" y="1861" width="0.4" height="15.0" fill="rgb(246,105,17)" rx="2" ry="2" />
<text  x="548.67" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (6 samples, 0.10%)</title><rect x="89.9" y="1973" width="1.2" height="15.0" fill="rgb(249,164,47)" rx="2" ry="2" />
<text  x="92.89" y="1983.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1023.0" y="1733" width="0.2" height="15.0" fill="rgb(224,36,6)" rx="2" ry="2" />
<text  x="1025.98" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="342.0" y="1797" width="0.2" height="15.0" fill="rgb(216,16,0)" rx="2" ry="2" />
<text  x="345.03" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="190.1" y="2005" width="0.2" height="15.0" fill="rgb(213,190,33)" rx="2" ry="2" />
<text  x="193.10" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="345.8" y="1733" width="0.3" height="15.0" fill="rgb(230,178,14)" rx="2" ry="2" />
<text  x="348.85" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="816.5" y="1637" width="0.2" height="15.0" fill="rgb(210,32,31)" rx="2" ry="2" />
<text  x="819.52" y="1647.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="592.0" y="1813" width="0.2" height="15.0" fill="rgb(225,75,31)" rx="2" ry="2" />
<text  x="594.95" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (1 samples, 0.02%)</title><rect x="549.1" y="1973" width="0.2" height="15.0" fill="rgb(253,137,11)" rx="2" ry="2" />
<text  x="552.09" y="1983.5" ></text>
</g>
<g >
<title>sock_alloc_file (80 samples, 1.36%)</title><rect x="372.6" y="1957" width="16.1" height="15.0" fill="rgb(252,88,21)" rx="2" ry="2" />
<text  x="375.61" y="1967.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="513.3" y="1925" width="0.2" height="15.0" fill="rgb(230,15,26)" rx="2" ry="2" />
<text  x="516.27" y="1935.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="1026.8" y="2037" width="0.6" height="15.0" fill="rgb(223,42,49)" rx="2" ry="2" />
<text  x="1029.80" y="2047.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (3 samples, 0.05%)</title><rect x="1073.1" y="1893" width="0.6" height="15.0" fill="rgb(253,187,24)" rx="2" ry="2" />
<text  x="1076.09" y="1903.5" ></text>
</g>
<g >
<title>__libc_recv (1 samples, 0.02%)</title><rect x="48.4" y="1957" width="0.2" height="15.0" fill="rgb(223,39,3)" rx="2" ry="2" />
<text  x="51.43" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="567.4" y="1941" width="0.4" height="15.0" fill="rgb(220,92,52)" rx="2" ry="2" />
<text  x="570.40" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="691.6" y="1845" width="0.2" height="15.0" fill="rgb(242,183,45)" rx="2" ry="2" />
<text  x="694.56" y="1855.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (3 samples, 0.05%)</title><rect x="926.8" y="2037" width="0.6" height="15.0" fill="rgb(215,104,43)" rx="2" ry="2" />
<text  x="929.79" y="2047.5" ></text>
</g>
<g >
<title>__cmpxchg_double_slab.isra.32 (1 samples, 0.02%)</title><rect x="368.6" y="1845" width="0.2" height="15.0" fill="rgb(212,43,2)" rx="2" ry="2" />
<text  x="371.59" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.0" y="2005" width="0.2" height="15.0" fill="rgb(217,224,32)" rx="2" ry="2" />
<text  x="1024.97" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="441.4" y="1701" width="0.4" height="15.0" fill="rgb(248,12,36)" rx="2" ry="2" />
<text  x="444.43" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::sendSocketMessage (2 samples, 0.03%)</title><rect x="1145.5" y="1989" width="0.4" height="15.0" fill="rgb(207,158,53)" rx="2" ry="2" />
<text  x="1148.53" y="1999.5" ></text>
</g>
<g >
<title>std::move&lt;int&amp;&gt; (1 samples, 0.02%)</title><rect x="1006.3" y="1989" width="0.2" height="15.0" fill="rgb(214,189,52)" rx="2" ry="2" />
<text  x="1009.28" y="1999.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="818.7" y="1573" width="0.2" height="15.0" fill="rgb(243,53,22)" rx="2" ry="2" />
<text  x="821.73" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (23 samples, 0.39%)</title><rect x="291.3" y="1653" width="4.6" height="15.0" fill="rgb(207,100,6)" rx="2" ry="2" />
<text  x="294.32" y="1663.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="64.7" y="1701" width="0.2" height="15.0" fill="rgb(252,4,9)" rx="2" ry="2" />
<text  x="67.73" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (158 samples, 2.69%)</title><rect x="123.5" y="1813" width="31.8" height="15.0" fill="rgb(243,25,17)" rx="2" ry="2" />
<text  x="126.49" y="1823.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="934.2" y="1829" width="0.2" height="15.0" fill="rgb(208,96,28)" rx="2" ry="2" />
<text  x="937.24" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (2 samples, 0.03%)</title><rect x="850.9" y="1893" width="0.4" height="15.0" fill="rgb(254,227,27)" rx="2" ry="2" />
<text  x="853.93" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="202.2" y="1941" width="0.2" height="15.0" fill="rgb(225,122,47)" rx="2" ry="2" />
<text  x="205.17" y="1951.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="801.8" y="1685" width="0.2" height="15.0" fill="rgb(221,227,47)" rx="2" ry="2" />
<text  x="804.83" y="1695.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (1 samples, 0.02%)</title><rect x="734.2" y="1637" width="0.2" height="15.0" fill="rgb(219,8,4)" rx="2" ry="2" />
<text  x="737.22" y="1647.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="717.5" y="1797" width="0.2" height="15.0" fill="rgb(231,30,18)" rx="2" ry="2" />
<text  x="720.52" y="1807.5" ></text>
</g>
<g >
<title>release_sock (2 samples, 0.03%)</title><rect x="758.0" y="1733" width="0.4" height="15.0" fill="rgb(230,163,52)" rx="2" ry="2" />
<text  x="760.96" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1148.7" y="1941" width="0.2" height="15.0" fill="rgb(220,162,46)" rx="2" ry="2" />
<text  x="1151.75" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="114.4" y="1989" width="0.4" height="15.0" fill="rgb(236,77,43)" rx="2" ry="2" />
<text  x="117.44" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="801.6" y="1429" width="0.2" height="15.0" fill="rgb(219,196,1)" rx="2" ry="2" />
<text  x="804.63" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1032.4" y="1877" width="0.2" height="15.0" fill="rgb(220,64,34)" rx="2" ry="2" />
<text  x="1035.44" y="1887.5" ></text>
</g>
<g >
<title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="1078.7" y="1845" width="0.2" height="15.0" fill="rgb(246,183,25)" rx="2" ry="2" />
<text  x="1081.72" y="1855.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="674.1" y="1893" width="0.2" height="15.0" fill="rgb(247,52,12)" rx="2" ry="2" />
<text  x="677.05" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="968.2" y="1781" width="0.2" height="15.0" fill="rgb(226,181,13)" rx="2" ry="2" />
<text  x="971.25" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="56.7" y="1733" width="0.2" height="15.0" fill="rgb(229,102,50)" rx="2" ry="2" />
<text  x="59.68" y="1743.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="198.3" y="1989" width="0.3" height="15.0" fill="rgb(205,196,29)" rx="2" ry="2" />
<text  x="201.35" y="1999.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="238.0" y="1749" width="0.2" height="15.0" fill="rgb(228,53,12)" rx="2" ry="2" />
<text  x="240.99" y="1759.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="56.7" y="1829" width="0.2" height="15.0" fill="rgb(231,218,25)" rx="2" ry="2" />
<text  x="59.68" y="1839.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="941.5" y="1813" width="0.2" height="15.0" fill="rgb(249,176,23)" rx="2" ry="2" />
<text  x="944.48" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="841.7" y="1733" width="0.2" height="15.0" fill="rgb(226,221,1)" rx="2" ry="2" />
<text  x="844.67" y="1743.5" ></text>
</g>
<g >
<title>inet_csk_clone_lock (1 samples, 0.02%)</title><rect x="114.8" y="1749" width="0.2" height="15.0" fill="rgb(248,108,48)" rx="2" ry="2" />
<text  x="117.84" y="1759.5" ></text>
</g>
<g >
<title>inode_init_always (6 samples, 0.10%)</title><rect x="364.6" y="1909" width="1.2" height="15.0" fill="rgb(231,59,19)" rx="2" ry="2" />
<text  x="367.56" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeSetLike&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="137.8" y="37" width="0.4" height="15.0" fill="rgb(220,138,7)" rx="2" ry="2" />
<text  x="140.78" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (60 samples, 1.02%)</title><rect x="674.7" y="1973" width="12.0" height="15.0" fill="rgb(224,139,51)" rx="2" ry="2" />
<text  x="677.66" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="307.2" y="1861" width="0.2" height="15.0" fill="rgb(244,123,4)" rx="2" ry="2" />
<text  x="310.21" y="1871.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (4 samples, 0.07%)</title><rect x="282.5" y="1477" width="0.8" height="15.0" fill="rgb(220,99,13)" rx="2" ry="2" />
<text  x="285.46" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1167.1" y="2037" width="0.2" height="15.0" fill="rgb(227,200,51)" rx="2" ry="2" />
<text  x="1170.06" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="255.1" y="1941" width="0.2" height="15.0" fill="rgb(209,209,20)" rx="2" ry="2" />
<text  x="258.10" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="887.4" y="1845" width="0.2" height="15.0" fill="rgb(227,199,42)" rx="2" ry="2" />
<text  x="890.35" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="64.9" y="1877" width="0.4" height="15.0" fill="rgb(221,66,47)" rx="2" ry="2" />
<text  x="67.94" y="1887.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="721.3" y="1349" width="0.2" height="15.0" fill="rgb(242,110,47)" rx="2" ry="2" />
<text  x="724.34" y="1359.5" ></text>
</g>
<g >
<title>build_skb (1 samples, 0.02%)</title><rect x="1085.0" y="1813" width="0.2" height="15.0" fill="rgb(235,63,16)" rx="2" ry="2" />
<text  x="1087.96" y="1823.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="388.3" y="1909" width="0.2" height="15.0" fill="rgb(232,200,48)" rx="2" ry="2" />
<text  x="391.31" y="1919.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="968.2" y="1749" width="0.2" height="15.0" fill="rgb(254,66,11)" rx="2" ry="2" />
<text  x="971.25" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="604.4" y="1893" width="0.4" height="15.0" fill="rgb(240,227,7)" rx="2" ry="2" />
<text  x="607.43" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1285" width="30.0" height="15.0" fill="rgb(226,143,45)" rx="2" ry="2" />
<text  x="127.10" y="1295.5" >[u..</text>
</g>
<g >
<title>mutex_lock (5 samples, 0.09%)</title><rect x="462.2" y="1973" width="1.0" height="15.0" fill="rgb(223,3,45)" rx="2" ry="2" />
<text  x="465.16" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (140 samples, 2.39%)</title><rect x="124.3" y="325" width="28.2" height="15.0" fill="rgb(235,149,2)" rx="2" ry="2" />
<text  x="127.30" y="335.5" >[..</text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="690.4" y="1861" width="0.2" height="15.0" fill="rgb(216,52,46)" rx="2" ry="2" />
<text  x="693.35" y="1871.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="19.7" y="1829" width="0.2" height="15.0" fill="rgb(253,200,46)" rx="2" ry="2" />
<text  x="22.66" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="767.4" y="1701" width="0.2" height="15.0" fill="rgb(247,64,14)" rx="2" ry="2" />
<text  x="770.42" y="1711.5" ></text>
</g>
<g >
<title>sys_getpeername (1 samples, 0.02%)</title><rect x="699.2" y="1845" width="0.2" height="15.0" fill="rgb(225,155,10)" rx="2" ry="2" />
<text  x="702.21" y="1855.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="690.8" y="1957" width="0.2" height="15.0" fill="rgb(245,40,25)" rx="2" ry="2" />
<text  x="693.75" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (3 samples, 0.05%)</title><rect x="910.5" y="2005" width="0.6" height="15.0" fill="rgb(251,74,42)" rx="2" ry="2" />
<text  x="913.49" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="510.7" y="1749" width="0.2" height="15.0" fill="rgb(242,170,17)" rx="2" ry="2" />
<text  x="513.65" y="1759.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1167.1" y="1957" width="0.2" height="15.0" fill="rgb(229,212,18)" rx="2" ry="2" />
<text  x="1170.06" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1155.4" y="1701" width="0.2" height="15.0" fill="rgb(248,212,15)" rx="2" ry="2" />
<text  x="1158.39" y="1711.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="205.8" y="1845" width="0.2" height="15.0" fill="rgb(208,188,48)" rx="2" ry="2" />
<text  x="208.79" y="1855.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="886.3" y="1925" width="0.4" height="15.0" fill="rgb(209,178,39)" rx="2" ry="2" />
<text  x="889.35" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (456 samples, 7.78%)</title><rect x="122.1" y="2037" width="91.7" height="15.0" fill="rgb(211,200,0)" rx="2" ry="2" />
<text  x="125.08" y="2047.5" >[unknown]</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="701.8" y="1957" width="0.2" height="15.0" fill="rgb(237,145,1)" rx="2" ry="2" />
<text  x="704.82" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="19.1" y="1877" width="0.2" height="15.0" fill="rgb(238,72,7)" rx="2" ry="2" />
<text  x="22.06" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="998.6" y="1957" width="0.2" height="15.0" fill="rgb(208,166,13)" rx="2" ry="2" />
<text  x="1001.63" y="1967.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="920.2" y="1989" width="0.2" height="15.0" fill="rgb(235,151,18)" rx="2" ry="2" />
<text  x="923.15" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="887.4" y="1781" width="0.2" height="15.0" fill="rgb(240,224,50)" rx="2" ry="2" />
<text  x="890.35" y="1791.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="259.5" y="1797" width="0.8" height="15.0" fill="rgb(215,195,36)" rx="2" ry="2" />
<text  x="262.52" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="809.5" y="1541" width="0.2" height="15.0" fill="rgb(209,135,15)" rx="2" ry="2" />
<text  x="812.48" y="1551.5" ></text>
</g>
<g >
<title>facebook::memcache::McSetReply::McSetReply (1 samples, 0.02%)</title><rect x="962.2" y="2005" width="0.2" height="15.0" fill="rgb(236,20,49)" rx="2" ry="2" />
<text  x="965.21" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (2 samples, 0.03%)</title><rect x="923.8" y="2005" width="0.4" height="15.0" fill="rgb(215,92,22)" rx="2" ry="2" />
<text  x="926.78" y="2015.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="816.5" y="1429" width="0.2" height="15.0" fill="rgb(215,25,28)" rx="2" ry="2" />
<text  x="819.52" y="1439.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="533.2" y="1877" width="0.2" height="15.0" fill="rgb(210,160,41)" rx="2" ry="2" />
<text  x="536.19" y="1887.5" ></text>
</g>
<g >
<title>folly::detail::fastIpv4ToString[abi:cxx11] (36 samples, 0.61%)</title><rect x="597.6" y="1925" width="7.2" height="15.0" fill="rgb(214,105,32)" rx="2" ry="2" />
<text  x="600.59" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="756.8" y="1717" width="0.8" height="15.0" fill="rgb(231,8,45)" rx="2" ry="2" />
<text  x="759.76" y="1727.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="925.4" y="2005" width="0.2" height="15.0" fill="rgb(244,164,39)" rx="2" ry="2" />
<text  x="928.39" y="2015.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="441.6" y="1637" width="0.2" height="15.0" fill="rgb(250,127,51)" rx="2" ry="2" />
<text  x="444.63" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="899.4" y="1925" width="0.2" height="15.0" fill="rgb(239,118,27)" rx="2" ry="2" />
<text  x="902.43" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="535.2" y="1877" width="0.8" height="15.0" fill="rgb(205,167,29)" rx="2" ry="2" />
<text  x="538.20" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="115.0" y="1717" width="0.2" height="15.0" fill="rgb(221,27,51)" rx="2" ry="2" />
<text  x="118.04" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1829" width="0.2" height="15.0" fill="rgb(254,33,5)" rx="2" ry="2" />
<text  x="906.25" y="1839.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (33 samples, 0.56%)</title><rect x="936.5" y="1957" width="6.6" height="15.0" fill="rgb(252,44,7)" rx="2" ry="2" />
<text  x="939.45" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1058.2" y="1909" width="0.2" height="15.0" fill="rgb(211,8,47)" rx="2" ry="2" />
<text  x="1061.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (28 samples, 0.48%)</title><rect x="1100.7" y="1589" width="5.6" height="15.0" fill="rgb(224,68,54)" rx="2" ry="2" />
<text  x="1103.65" y="1599.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2 samples, 0.03%)</title><rect x="1108.7" y="1909" width="0.4" height="15.0" fill="rgb(245,160,4)" rx="2" ry="2" />
<text  x="1111.70" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::init (1 samples, 0.02%)</title><rect x="933.6" y="1925" width="0.2" height="15.0" fill="rgb(233,46,15)" rx="2" ry="2" />
<text  x="936.64" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="800.8" y="1573" width="0.4" height="15.0" fill="rgb(247,213,16)" rx="2" ry="2" />
<text  x="803.83" y="1583.5" ></text>
</g>
<g >
<title>release_sock (1 samples, 0.02%)</title><rect x="753.3" y="1749" width="0.2" height="15.0" fill="rgb(252,182,36)" rx="2" ry="2" />
<text  x="756.34" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt; &gt;::route (1 samples, 0.02%)</title><rect x="907.1" y="1989" width="0.2" height="15.0" fill="rgb(215,106,39)" rx="2" ry="2" />
<text  x="910.07" y="1999.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="1141.1" y="2037" width="0.4" height="15.0" fill="rgb(225,183,47)" rx="2" ry="2" />
<text  x="1144.10" y="2047.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (7 samples, 0.12%)</title><rect x="515.7" y="1941" width="1.4" height="15.0" fill="rgb(214,124,34)" rx="2" ry="2" />
<text  x="518.69" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (1 samples, 0.02%)</title><rect x="143.0" y="37" width="0.2" height="15.0" fill="rgb(252,67,52)" rx="2" ry="2" />
<text  x="146.01" y="47.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="832.2" y="1701" width="0.4" height="15.0" fill="rgb(221,201,16)" rx="2" ry="2" />
<text  x="835.22" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (2 samples, 0.03%)</title><rect x="861.6" y="1973" width="0.4" height="15.0" fill="rgb(245,22,47)" rx="2" ry="2" />
<text  x="864.60" y="1983.5" ></text>
</g>
<g >
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="775.5" y="1653" width="0.2" height="15.0" fill="rgb(232,84,40)" rx="2" ry="2" />
<text  x="778.47" y="1663.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="658.8" y="1973" width="0.4" height="15.0" fill="rgb(217,105,0)" rx="2" ry="2" />
<text  x="661.76" y="1983.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="686.3" y="1925" width="0.4" height="15.0" fill="rgb(208,104,35)" rx="2" ry="2" />
<text  x="689.33" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="934.4" y="1877" width="0.2" height="15.0" fill="rgb(210,35,9)" rx="2" ry="2" />
<text  x="937.44" y="1887.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="644.9" y="1925" width="0.4" height="15.0" fill="rgb(217,202,4)" rx="2" ry="2" />
<text  x="647.87" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="491.5" y="1813" width="0.2" height="15.0" fill="rgb(253,138,5)" rx="2" ry="2" />
<text  x="494.54" y="1823.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1094.2" y="1893" width="0.2" height="15.0" fill="rgb(212,149,20)" rx="2" ry="2" />
<text  x="1097.22" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1087.0" y="1909" width="0.2" height="15.0" fill="rgb(252,35,9)" rx="2" ry="2" />
<text  x="1089.97" y="1919.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(246,155,33)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="257.5" y="1845" width="0.2" height="15.0" fill="rgb(208,90,35)" rx="2" ry="2" />
<text  x="260.51" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1082.1" y="1861" width="0.2" height="15.0" fill="rgb(230,202,17)" rx="2" ry="2" />
<text  x="1085.14" y="1871.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="441.2" y="1877" width="0.2" height="15.0" fill="rgb(254,99,0)" rx="2" ry="2" />
<text  x="444.23" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="320.5" y="1989" width="0.2" height="15.0" fill="rgb(249,102,51)" rx="2" ry="2" />
<text  x="323.49" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="19.1" y="1925" width="0.2" height="15.0" fill="rgb(243,15,20)" rx="2" ry="2" />
<text  x="22.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="1072.7" y="1621" width="0.2" height="15.0" fill="rgb(229,229,5)" rx="2" ry="2" />
<text  x="1075.68" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="631.4" y="1669" width="0.2" height="15.0" fill="rgb(223,133,50)" rx="2" ry="2" />
<text  x="634.39" y="1679.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="13.6" y="1877" width="0.8" height="15.0" fill="rgb(227,82,31)" rx="2" ry="2" />
<text  x="16.62" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (167 samples, 2.85%)</title><rect x="123.1" y="1957" width="33.6" height="15.0" fill="rgb(216,1,36)" rx="2" ry="2" />
<text  x="126.09" y="1967.5" >[u..</text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="283.5" y="1461" width="0.2" height="15.0" fill="rgb(230,78,2)" rx="2" ry="2" />
<text  x="286.47" y="1471.5" ></text>
</g>
<g >
<title>skb_release_all (58 samples, 0.99%)</title><rect x="1073.1" y="1909" width="11.7" height="15.0" fill="rgb(240,117,48)" rx="2" ry="2" />
<text  x="1076.09" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="197.1" y="1909" width="0.4" height="15.0" fill="rgb(208,10,7)" rx="2" ry="2" />
<text  x="200.14" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::MultiOpParent,  (7 samples, 0.12%)</title><rect x="146.0" y="37" width="1.4" height="15.0" fill="rgb(245,24,53)" rx="2" ry="2" />
<text  x="149.03" y="47.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::size_holder&lt;false, unsigned long, void&gt;::decrement (1 samples, 0.02%)</title><rect x="629.6" y="1941" width="0.2" height="15.0" fill="rgb(215,123,8)" rx="2" ry="2" />
<text  x="632.58" y="1951.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="920.4" y="2005" width="0.4" height="15.0" fill="rgb(248,74,37)" rx="2" ry="2" />
<text  x="923.35" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="767.4" y="1573" width="0.2" height="15.0" fill="rgb(220,142,38)" rx="2" ry="2" />
<text  x="770.42" y="1583.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="593.0" y="1861" width="0.6" height="15.0" fill="rgb(208,103,22)" rx="2" ry="2" />
<text  x="595.96" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="844.1" y="1733" width="0.2" height="15.0" fill="rgb(252,33,4)" rx="2" ry="2" />
<text  x="847.09" y="1743.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="747.7" y="1509" width="0.2" height="15.0" fill="rgb(249,121,20)" rx="2" ry="2" />
<text  x="750.70" y="1519.5" ></text>
</g>
<g >
<title>carbon::Variant&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt;::cleanup&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="869.6" y="2005" width="0.6" height="15.0" fill="rgb(207,33,24)" rx="2" ry="2" />
<text  x="872.65" y="2015.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="207.4" y="1989" width="0.2" height="15.0" fill="rgb(222,40,24)" rx="2" ry="2" />
<text  x="210.40" y="1999.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="14.4" y="1781" width="0.2" height="15.0" fill="rgb(235,6,40)" rx="2" ry="2" />
<text  x="17.43" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="672.4" y="1813" width="0.2" height="15.0" fill="rgb(221,118,13)" rx="2" ry="2" />
<text  x="675.44" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1121.6" y="2021" width="0.2" height="15.0" fill="rgb(251,104,29)" rx="2" ry="2" />
<text  x="1124.58" y="2031.5" ></text>
</g>
<g >
<title>folly::IOBuf::goodExtBufferSize (1 samples, 0.02%)</title><rect x="643.9" y="2005" width="0.2" height="15.0" fill="rgb(206,209,46)" rx="2" ry="2" />
<text  x="646.87" y="2015.5" ></text>
</g>
<g >
<title>task_work_run (529 samples, 9.02%)</title><rect x="716.5" y="1845" width="106.5" height="15.0" fill="rgb(247,74,32)" rx="2" ry="2" />
<text  x="719.51" y="1855.5" >task_work_run</text>
</g>
<g >
<title>folly::AsyncTimeout::isScheduled (2 samples, 0.03%)</title><rect x="76.6" y="1909" width="0.4" height="15.0" fill="rgb(206,87,8)" rx="2" ry="2" />
<text  x="79.61" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="233.0" y="1813" width="0.2" height="15.0" fill="rgb(253,169,45)" rx="2" ry="2" />
<text  x="235.96" y="1823.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="1100.7" y="1573" width="0.2" height="15.0" fill="rgb(243,210,39)" rx="2" ry="2" />
<text  x="1103.65" y="1583.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="239.8" y="1893" width="0.2" height="15.0" fill="rgb(249,141,20)" rx="2" ry="2" />
<text  x="242.80" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (19 samples, 0.32%)</title><rect x="429.0" y="1957" width="3.8" height="15.0" fill="rgb(248,13,24)" rx="2" ry="2" />
<text  x="431.96" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="255.1" y="1925" width="0.2" height="15.0" fill="rgb(206,212,30)" rx="2" ry="2" />
<text  x="258.10" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="750.1" y="1765" width="0.2" height="15.0" fill="rgb(237,120,37)" rx="2" ry="2" />
<text  x="753.12" y="1775.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="812.5" y="1269" width="0.2" height="15.0" fill="rgb(252,196,21)" rx="2" ry="2" />
<text  x="815.50" y="1279.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="778.5" y="1349" width="0.2" height="15.0" fill="rgb(251,137,54)" rx="2" ry="2" />
<text  x="781.49" y="1359.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (4 samples, 0.07%)</title><rect x="953.4" y="1973" width="0.8" height="15.0" fill="rgb(253,111,6)" rx="2" ry="2" />
<text  x="956.36" y="1983.5" ></text>
</g>
<g >
<title>sys_getpeername (2 samples, 0.03%)</title><rect x="669.6" y="1909" width="0.4" height="15.0" fill="rgb(243,30,18)" rx="2" ry="2" />
<text  x="672.62" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="992.0" y="1877" width="0.2" height="15.0" fill="rgb(246,50,6)" rx="2" ry="2" />
<text  x="994.99" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="381.5" y="1845" width="0.2" height="15.0" fill="rgb(228,129,43)" rx="2" ry="2" />
<text  x="384.47" y="1855.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="992.2" y="1989" width="0.2" height="15.0" fill="rgb(251,207,13)" rx="2" ry="2" />
<text  x="995.19" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::ClientMcParser&lt;facebook::memcache::AsyncMcClientImpl&gt;::handleAscii (2 samples, 0.03%)</title><rect x="142.8" y="53" width="0.4" height="15.0" fill="rgb(253,125,38)" rx="2" ry="2" />
<text  x="145.81" y="63.5" ></text>
</g>
<g >
<title>skb_release_data (16 samples, 0.27%)</title><rect x="1102.1" y="1477" width="3.2" height="15.0" fill="rgb(217,72,42)" rx="2" ry="2" />
<text  x="1105.06" y="1487.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="543.9" y="1877" width="0.2" height="15.0" fill="rgb(250,127,9)" rx="2" ry="2" />
<text  x="546.86" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::ConnectionFifo (143 samples, 2.44%)</title><rect x="578.7" y="2037" width="28.7" height="15.0" fill="rgb(220,13,51)" rx="2" ry="2" />
<text  x="581.67" y="2047.5" >fa..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="923.4" y="1989" width="0.2" height="15.0" fill="rgb(250,142,37)" rx="2" ry="2" />
<text  x="926.37" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1111.3" y="1909" width="0.2" height="15.0" fill="rgb(218,153,2)" rx="2" ry="2" />
<text  x="1114.32" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="97.1" y="1957" width="0.2" height="15.0" fill="rgb(246,177,8)" rx="2" ry="2" />
<text  x="100.13" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="238.6" y="1893" width="0.2" height="15.0" fill="rgb(208,153,4)" rx="2" ry="2" />
<text  x="241.59" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="55.1" y="1925" width="0.2" height="15.0" fill="rgb(233,16,52)" rx="2" ry="2" />
<text  x="58.08" y="1935.5" ></text>
</g>
<g >
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="266.4" y="1861" width="0.4" height="15.0" fill="rgb(236,210,28)" rx="2" ry="2" />
<text  x="269.36" y="1871.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="75.4" y="1829" width="0.2" height="15.0" fill="rgb(240,181,29)" rx="2" ry="2" />
<text  x="78.40" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver (8 samples, 0.14%)</title><rect x="282.3" y="1573" width="1.6" height="15.0" fill="rgb(246,147,49)" rx="2" ry="2" />
<text  x="285.26" y="1583.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="454.7" y="1669" width="0.2" height="15.0" fill="rgb(238,4,8)" rx="2" ry="2" />
<text  x="457.71" y="1679.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1121.8" y="2037" width="0.2" height="15.0" fill="rgb(210,204,32)" rx="2" ry="2" />
<text  x="1124.78" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (1 samples, 0.02%)</title><rect x="1146.3" y="2021" width="0.2" height="15.0" fill="rgb(241,16,50)" rx="2" ry="2" />
<text  x="1149.33" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.02%)</title><rect x="342.0" y="1429" width="0.2" height="15.0" fill="rgb(210,74,1)" rx="2" ry="2" />
<text  x="345.03" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="441.4" y="1781" width="0.4" height="15.0" fill="rgb(230,64,35)" rx="2" ry="2" />
<text  x="444.43" y="1791.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="255.1" y="1813" width="0.2" height="15.0" fill="rgb(254,144,36)" rx="2" ry="2" />
<text  x="258.10" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="816.5" y="1493" width="0.2" height="15.0" fill="rgb(231,48,21)" rx="2" ry="2" />
<text  x="819.52" y="1503.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (8 samples, 0.14%)</title><rect x="782.5" y="1589" width="1.6" height="15.0" fill="rgb(219,202,2)" rx="2" ry="2" />
<text  x="785.51" y="1599.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="364.4" y="1829" width="0.2" height="15.0" fill="rgb(216,183,54)" rx="2" ry="2" />
<text  x="367.36" y="1839.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="181.4" y="1909" width="0.2" height="15.0" fill="rgb(253,96,30)" rx="2" ry="2" />
<text  x="184.45" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="49.6" y="1909" width="0.2" height="15.0" fill="rgb(209,8,27)" rx="2" ry="2" />
<text  x="52.64" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1168.7" y="1925" width="0.2" height="15.0" fill="rgb(247,42,47)" rx="2" ry="2" />
<text  x="1171.67" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="818.7" y="1653" width="0.2" height="15.0" fill="rgb(246,169,54)" rx="2" ry="2" />
<text  x="821.73" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (1 samples, 0.02%)</title><rect x="178.6" y="1877" width="0.2" height="15.0" fill="rgb(206,115,38)" rx="2" ry="2" />
<text  x="181.63" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="202.0" y="1845" width="0.2" height="15.0" fill="rgb(251,68,9)" rx="2" ry="2" />
<text  x="204.97" y="1855.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.07%)</title><rect x="815.3" y="1605" width="0.8" height="15.0" fill="rgb(229,16,9)" rx="2" ry="2" />
<text  x="818.31" y="1615.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="801.6" y="1573" width="0.2" height="15.0" fill="rgb(225,118,19)" rx="2" ry="2" />
<text  x="804.63" y="1583.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache22McServerRequestContext9replyImplINS0_10McGetReplyEJDnDnRbEEENSt9enable_ifIXsrN6carbon7GetLikeINS0_6detail24RequestFromReplyTypeImplIT_NS6_4ListIJNS0_4PairINS0_12McGetRequestES3_EENSC_INS0_12McSetRequestENS0_10McSetReplyEEENSC_INS0_15McDeleteRequestENS0_13McDeleteReplyEEENSC_INS0_17McLeaseGetRequestENS0_15McLeaseGetReplyEEENSC_INS0_17McLeaseSetRequestENS0_15McLeaseSetReplyEEENSC_INS0_12McAddRequestENS0_10McAddReplyEEENSC_INS0_16McReplaceRequestENS0_14McReplaceReplyEEENSC_INS0_13McGetsRequestENS0_11McGetsReplyEEENSC_INS0_12McCasRequestENS0_10McCasReplyEEENSC_INS0_13McIncrRequestENS0_11McIncrReplyEEENSC_INS0_13McDecrRequestENS0_11McDecrReplyEEENSC_INS0_16McMetagetRequestENS0_14McMetagetReplyEEENSC_INS0_16McVersionRequestENS0_14McVersionReplyEEENSC_INS0_15McAppendRequestENS0_13McAppendReplyEEENSC_INS0_16McPrependRequestENS0_14McPrependReplyEEENSC_INS0_14McTouchRequestENS0_12McTouchReplyEEENSC_INS0_17McShutdownRequestENS0_15McShutdownReplyEEENSC_INS0_13McQuitRequestENS0_11McQuitReplyEEENSC_INS0_14McStatsRequestENS0_12McStatsReplyEEENSC_INS0_13McExecRequestENS0_11McExecReplyEEENSC_INS0_16McFlushReRequestENS0_14McFlushReReplyEEENSC_INS0_17McFlushAllRequestENS0_15McFlushAllReplyEEENSC_INS0_12McGatRequestENS0_10McGatReplyEEENSC_INS0_13McGatsRequestENS0_11McGatsReplyEEEEEEE4typeEEE5valueEvE4typeEOS1_OSA_DpOT0_ (1 samples, 0.02%)</title><rect x="618.7" y="2005" width="0.2" height="15.0" fill="rgb(250,174,4)" rx="2" ry="2" />
<text  x="621.71" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="257.5" y="1669" width="0.2" height="15.0" fill="rgb(227,198,41)" rx="2" ry="2" />
<text  x="260.51" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="916.9" y="1829" width="0.2" height="15.0" fill="rgb(216,34,20)" rx="2" ry="2" />
<text  x="919.93" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (3 samples, 0.05%)</title><rect x="517.3" y="1925" width="0.6" height="15.0" fill="rgb(211,205,35)" rx="2" ry="2" />
<text  x="520.30" y="1935.5" ></text>
</g>
<g >
<title>epoll_ctl (6 samples, 0.10%)</title><rect x="1128.4" y="2053" width="1.2" height="15.0" fill="rgb(253,184,4)" rx="2" ry="2" />
<text  x="1131.42" y="2063.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="858.2" y="1877" width="0.2" height="15.0" fill="rgb(237,188,33)" rx="2" ry="2" />
<text  x="861.18" y="1887.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.14%)</title><rect x="10.6" y="1861" width="1.6" height="15.0" fill="rgb(232,153,26)" rx="2" ry="2" />
<text  x="13.60" y="1871.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="757.8" y="1733" width="0.2" height="15.0" fill="rgb(221,60,38)" rx="2" ry="2" />
<text  x="760.76" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="1173.1" y="2037" width="0.6" height="15.0" fill="rgb(224,194,18)" rx="2" ry="2" />
<text  x="1176.10" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="172.8" y="1957" width="0.2" height="15.0" fill="rgb(251,89,27)" rx="2" ry="2" />
<text  x="175.79" y="1967.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="1141.3" y="2005" width="0.2" height="15.0" fill="rgb(234,102,40)" rx="2" ry="2" />
<text  x="1144.30" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="152.7" y="357" width="0.2" height="15.0" fill="rgb(220,101,49)" rx="2" ry="2" />
<text  x="155.67" y="367.5" ></text>
</g>
<g >
<title>[unknown] (140 samples, 2.39%)</title><rect x="124.3" y="309" width="28.2" height="15.0" fill="rgb(249,145,22)" rx="2" ry="2" />
<text  x="127.30" y="319.5" >[..</text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::end (3 samples, 0.05%)</title><rect x="837.2" y="1925" width="0.7" height="15.0" fill="rgb(206,76,18)" rx="2" ry="2" />
<text  x="840.25" y="1935.5" ></text>
</g>
<g >
<title>event_del_nolock_ (1 samples, 0.02%)</title><rect x="1130.6" y="2053" width="0.2" height="15.0" fill="rgb(213,204,52)" rx="2" ry="2" />
<text  x="1133.64" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="606.0" y="1957" width="0.2" height="15.0" fill="rgb(220,100,24)" rx="2" ry="2" />
<text  x="609.04" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="381.5" y="1797" width="0.2" height="15.0" fill="rgb(207,189,42)" rx="2" ry="2" />
<text  x="384.47" y="1807.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="238.0" y="1685" width="0.2" height="15.0" fill="rgb(247,140,3)" rx="2" ry="2" />
<text  x="240.99" y="1695.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (1 samples, 0.02%)</title><rect x="218.5" y="2021" width="0.2" height="15.0" fill="rgb(213,16,47)" rx="2" ry="2" />
<text  x="221.47" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1168.7" y="1861" width="0.2" height="15.0" fill="rgb(250,166,42)" rx="2" ry="2" />
<text  x="1171.67" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="778.5" y="1589" width="0.2" height="15.0" fill="rgb(209,198,35)" rx="2" ry="2" />
<text  x="781.49" y="1599.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="691.6" y="1861" width="0.2" height="15.0" fill="rgb(208,117,29)" rx="2" ry="2" />
<text  x="694.56" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="747.7" y="1605" width="0.2" height="15.0" fill="rgb(238,194,27)" rx="2" ry="2" />
<text  x="750.70" y="1615.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="543.9" y="1717" width="0.2" height="15.0" fill="rgb(240,80,20)" rx="2" ry="2" />
<text  x="546.86" y="1727.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="652.1" y="1909" width="0.2" height="15.0" fill="rgb(228,156,37)" rx="2" ry="2" />
<text  x="655.12" y="1919.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="388.7" y="1909" width="0.2" height="15.0" fill="rgb(206,1,35)" rx="2" ry="2" />
<text  x="391.71" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="928.4" y="2037" width="0.2" height="15.0" fill="rgb(210,2,34)" rx="2" ry="2" />
<text  x="931.40" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="406.8" y="1989" width="0.2" height="15.0" fill="rgb(232,193,54)" rx="2" ry="2" />
<text  x="409.82" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="12.4" y="2021" width="1.0" height="15.0" fill="rgb(210,19,16)" rx="2" ry="2" />
<text  x="15.41" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="501" width="28.8" height="15.0" fill="rgb(238,166,1)" rx="2" ry="2" />
<text  x="127.10" y="511.5" >[u..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="176.2" y="1893" width="0.6" height="15.0" fill="rgb(251,79,14)" rx="2" ry="2" />
<text  x="179.21" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="206.6" y="1957" width="0.2" height="15.0" fill="rgb(242,153,20)" rx="2" ry="2" />
<text  x="209.60" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="207.2" y="2021" width="0.2" height="15.0" fill="rgb(216,15,15)" rx="2" ry="2" />
<text  x="210.20" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (2 samples, 0.03%)</title><rect x="520.5" y="1957" width="0.4" height="15.0" fill="rgb(245,136,19)" rx="2" ry="2" />
<text  x="523.52" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::destroy (761 samples, 12.98%)</title><rect x="702.0" y="1973" width="153.2" height="15.0" fill="rgb(242,52,2)" rx="2" ry="2" />
<text  x="705.02" y="1983.5" >folly::AsyncSocket:..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.7" y="1861" width="0.2" height="15.0" fill="rgb(252,147,48)" rx="2" ry="2" />
<text  x="67.73" y="1871.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="19.1" y="1621" width="0.2" height="15.0" fill="rgb(229,208,44)" rx="2" ry="2" />
<text  x="22.06" y="1631.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fiberFunc (24 samples, 0.41%)</title><rect x="987.4" y="1989" width="4.8" height="15.0" fill="rgb(225,79,18)" rx="2" ry="2" />
<text  x="990.36" y="1999.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="701.8" y="1605" width="0.2" height="15.0" fill="rgb(238,89,12)" rx="2" ry="2" />
<text  x="704.82" y="1615.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="669.2" y="1829" width="0.2" height="15.0" fill="rgb(228,179,6)" rx="2" ry="2" />
<text  x="672.22" y="1839.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="841.7" y="1637" width="0.2" height="15.0" fill="rgb(216,108,37)" rx="2" ry="2" />
<text  x="844.67" y="1647.5" ></text>
</g>
<g >
<title>inet_release (346 samples, 5.90%)</title><rect x="752.1" y="1765" width="69.7" height="15.0" fill="rgb(214,110,29)" rx="2" ry="2" />
<text  x="755.13" y="1775.5" >inet_re..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="690.4" y="1941" width="0.2" height="15.0" fill="rgb(228,109,28)" rx="2" ry="2" />
<text  x="693.35" y="1951.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;facebook::memcache::mcrouter::CarbonRouterInstance&lt;facebook::memcache::MemcacheRouterInfo&gt;,  (3 samples, 0.05%)</title><rect x="917.5" y="1973" width="0.6" height="15.0" fill="rgb(244,227,3)" rx="2" ry="2" />
<text  x="920.54" y="1983.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="551.5" y="1957" width="0.4" height="15.0" fill="rgb(249,163,37)" rx="2" ry="2" />
<text  x="554.50" y="1967.5" ></text>
</g>
<g >
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="299.8" y="1813" width="0.6" height="15.0" fill="rgb(250,21,13)" rx="2" ry="2" />
<text  x="302.77" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_base_set (9 samples, 0.15%)</title><rect x="234.4" y="1877" width="1.8" height="15.0" fill="rgb(250,79,2)" rx="2" ry="2" />
<text  x="237.37" y="1887.5" ></text>
</g>
<g >
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="174.4" y="1845" width="0.2" height="15.0" fill="rgb(214,151,7)" rx="2" ry="2" />
<text  x="177.40" y="1855.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="941.5" y="1717" width="0.2" height="15.0" fill="rgb(209,129,24)" rx="2" ry="2" />
<text  x="944.48" y="1727.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1097.8" y="1893" width="0.2" height="15.0" fill="rgb(237,153,41)" rx="2" ry="2" />
<text  x="1100.84" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1032.4" y="1813" width="0.2" height="15.0" fill="rgb(248,35,4)" rx="2" ry="2" />
<text  x="1035.44" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="441.0" y="1717" width="0.2" height="15.0" fill="rgb(254,98,26)" rx="2" ry="2" />
<text  x="444.03" y="1727.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (1 samples, 0.02%)</title><rect x="197.7" y="2021" width="0.2" height="15.0" fill="rgb(208,40,0)" rx="2" ry="2" />
<text  x="200.75" y="2031.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="63.9" y="1861" width="0.2" height="15.0" fill="rgb(237,66,2)" rx="2" ry="2" />
<text  x="66.93" y="1871.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (2 samples, 0.03%)</title><rect x="124.3" y="37" width="0.4" height="15.0" fill="rgb(220,182,3)" rx="2" ry="2" />
<text  x="127.30" y="47.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (4 samples, 0.07%)</title><rect x="912.3" y="1973" width="0.8" height="15.0" fill="rgb(233,203,16)" rx="2" ry="2" />
<text  x="915.31" y="1983.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="253.1" y="1957" width="0.2" height="15.0" fill="rgb(242,217,31)" rx="2" ry="2" />
<text  x="256.08" y="1967.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="152.3" y="277" width="0.2" height="15.0" fill="rgb(253,65,48)" rx="2" ry="2" />
<text  x="155.27" y="287.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="903.3" y="1509" width="0.2" height="15.0" fill="rgb(233,106,7)" rx="2" ry="2" />
<text  x="906.25" y="1519.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::getReadBuffer (1 samples, 0.02%)</title><rect x="72.0" y="1973" width="0.2" height="15.0" fill="rgb(246,69,51)" rx="2" ry="2" />
<text  x="74.98" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="295.9" y="1621" width="0.2" height="15.0" fill="rgb(221,81,28)" rx="2" ry="2" />
<text  x="298.94" y="1631.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="70.4" y="1909" width="0.6" height="15.0" fill="rgb(254,22,33)" rx="2" ry="2" />
<text  x="73.37" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="257.5" y="1813" width="0.2" height="15.0" fill="rgb(248,40,32)" rx="2" ry="2" />
<text  x="260.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1269" width="29.8" height="15.0" fill="rgb(215,194,28)" rx="2" ry="2" />
<text  x="127.10" y="1279.5" >[u..</text>
</g>
<g >
<title>inet_csk_route_req (1 samples, 0.02%)</title><rect x="730.2" y="1365" width="0.2" height="15.0" fill="rgb(237,196,2)" rx="2" ry="2" />
<text  x="733.19" y="1375.5" ></text>
</g>
<g >
<title>errseq_sample (1 samples, 0.02%)</title><rect x="388.1" y="1941" width="0.2" height="15.0" fill="rgb(231,157,47)" rx="2" ry="2" />
<text  x="391.11" y="1951.5" ></text>
</g>
<g >
<title>lockref_put_return (7 samples, 0.12%)</title><rect x="744.5" y="1781" width="1.4" height="15.0" fill="rgb(218,160,30)" rx="2" ry="2" />
<text  x="747.48" y="1791.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="151.5" y="53" width="0.2" height="15.0" fill="rgb(243,38,11)" rx="2" ry="2" />
<text  x="154.46" y="63.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="491.5" y="1749" width="0.2" height="15.0" fill="rgb(205,226,15)" rx="2" ry="2" />
<text  x="494.54" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="433.6" y="1797" width="0.2" height="15.0" fill="rgb(246,200,52)" rx="2" ry="2" />
<text  x="436.58" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="962.8" y="2005" width="0.2" height="15.0" fill="rgb(240,151,13)" rx="2" ry="2" />
<text  x="965.81" y="2015.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="631.0" y="1861" width="0.2" height="15.0" fill="rgb(209,38,15)" rx="2" ry="2" />
<text  x="633.99" y="1871.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="123.7" y="1717" width="0.2" height="15.0" fill="rgb(238,145,43)" rx="2" ry="2" />
<text  x="126.69" y="1727.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="239.8" y="1877" width="0.2" height="15.0" fill="rgb(206,179,50)" rx="2" ry="2" />
<text  x="242.80" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="345.4" y="1621" width="0.2" height="15.0" fill="rgb(226,131,15)" rx="2" ry="2" />
<text  x="348.45" y="1631.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="1126.4" y="1909" width="0.4" height="15.0" fill="rgb(230,37,2)" rx="2" ry="2" />
<text  x="1129.41" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="775.5" y="1589" width="0.2" height="15.0" fill="rgb(254,214,9)" rx="2" ry="2" />
<text  x="778.47" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="126.1" y="37" width="0.4" height="15.0" fill="rgb(243,72,1)" rx="2" ry="2" />
<text  x="129.11" y="47.5" ></text>
</g>
<g >
<title>sock_alloc (86 samples, 1.47%)</title><rect x="355.3" y="1957" width="17.3" height="15.0" fill="rgb(223,191,28)" rx="2" ry="2" />
<text  x="358.31" y="1967.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.43 (6 samples, 0.10%)</title><rect x="269.2" y="1845" width="1.2" height="15.0" fill="rgb(210,167,52)" rx="2" ry="2" />
<text  x="272.18" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="99.7" y="1973" width="0.2" height="15.0" fill="rgb(246,133,48)" rx="2" ry="2" />
<text  x="102.75" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1121.6" y="1957" width="0.2" height="15.0" fill="rgb(240,180,41)" rx="2" ry="2" />
<text  x="1124.58" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (1 samples, 0.02%)</title><rect x="618.5" y="2037" width="0.2" height="15.0" fill="rgb(232,83,27)" rx="2" ry="2" />
<text  x="621.51" y="2047.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (1 samples, 0.02%)</title><rect x="898.8" y="1957" width="0.2" height="15.0" fill="rgb(247,163,48)" rx="2" ry="2" />
<text  x="901.82" y="1967.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt; (4 samples, 0.07%)</title><rect x="44.0" y="1941" width="0.8" height="15.0" fill="rgb(250,31,11)" rx="2" ry="2" />
<text  x="47.01" y="1951.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1181.1" y="2021" width="0.2" height="15.0" fill="rgb(205,171,10)" rx="2" ry="2" />
<text  x="1184.15" y="2031.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="860.2" y="1909" width="0.2" height="15.0" fill="rgb(219,100,1)" rx="2" ry="2" />
<text  x="863.19" y="1919.5" ></text>
</g>
<g >
<title>tcp_get_metrics (1 samples, 0.02%)</title><rect x="491.7" y="1573" width="0.2" height="15.0" fill="rgb(253,134,4)" rx="2" ry="2" />
<text  x="494.74" y="1583.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1094.2" y="1829" width="0.2" height="15.0" fill="rgb(252,207,32)" rx="2" ry="2" />
<text  x="1097.22" y="1839.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="887.2" y="1925" width="0.2" height="15.0" fill="rgb(234,159,43)" rx="2" ry="2" />
<text  x="890.15" y="1935.5" ></text>
</g>
<g >
<title>folly::Expected&lt;unsigned int, folly::ConversionCode&gt;::Expected&lt;false, 0&gt; (3 samples, 0.05%)</title><rect x="1009.3" y="1973" width="0.6" height="15.0" fill="rgb(207,188,30)" rx="2" ry="2" />
<text  x="1012.30" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1111.3" y="1941" width="0.2" height="15.0" fill="rgb(224,174,39)" rx="2" ry="2" />
<text  x="1114.32" y="1951.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="407.2" y="1925" width="0.2" height="15.0" fill="rgb(224,96,31)" rx="2" ry="2" />
<text  x="410.22" y="1935.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="1181.1" y="1749" width="0.2" height="15.0" fill="rgb(234,145,31)" rx="2" ry="2" />
<text  x="1184.15" y="1759.5" ></text>
</g>
<g >
<title>folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::operator (17 samples, 0.29%)</title><rect x="970.1" y="2037" width="3.4" height="15.0" fill="rgb(214,145,29)" rx="2" ry="2" />
<text  x="973.06" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::AsyncTransport (1 samples, 0.02%)</title><rect x="578.1" y="2021" width="0.2" height="15.0" fill="rgb(205,94,5)" rx="2" ry="2" />
<text  x="581.07" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (4 samples, 0.07%)</title><rect x="114.8" y="1957" width="0.8" height="15.0" fill="rgb(209,189,25)" rx="2" ry="2" />
<text  x="117.84" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="873.3" y="1973" width="0.2" height="15.0" fill="rgb(233,54,24)" rx="2" ry="2" />
<text  x="876.27" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="968.2" y="1797" width="0.2" height="15.0" fill="rgb(206,196,24)" rx="2" ry="2" />
<text  x="971.25" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="899.4" y="1941" width="0.2" height="15.0" fill="rgb(213,77,28)" rx="2" ry="2" />
<text  x="902.43" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="272.2" y="1765" width="0.4" height="15.0" fill="rgb(246,162,26)" rx="2" ry="2" />
<text  x="275.20" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (1 samples, 0.02%)</title><rect x="968.2" y="2037" width="0.2" height="15.0" fill="rgb(219,161,9)" rx="2" ry="2" />
<text  x="971.25" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="668.4" y="1845" width="0.2" height="15.0" fill="rgb(228,32,49)" rx="2" ry="2" />
<text  x="671.42" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1119.6" y="1925" width="0.2" height="15.0" fill="rgb(217,210,48)" rx="2" ry="2" />
<text  x="1122.57" y="1935.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="845.7" y="1845" width="0.2" height="15.0" fill="rgb(216,210,7)" rx="2" ry="2" />
<text  x="848.70" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="1145.5" y="1941" width="0.4" height="15.0" fill="rgb(208,128,19)" rx="2" ry="2" />
<text  x="1148.53" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="307.2" y="1669" width="0.2" height="15.0" fill="rgb(216,116,51)" rx="2" ry="2" />
<text  x="310.21" y="1679.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="154.5" y="1653" width="0.2" height="15.0" fill="rgb(212,227,21)" rx="2" ry="2" />
<text  x="157.48" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (117 samples, 2.00%)</title><rect x="124.3" y="69" width="23.5" height="15.0" fill="rgb(205,168,22)" rx="2" ry="2" />
<text  x="127.30" y="79.5" >[..</text>
</g>
<g >
<title>__tcp_send_ack.part.39 (33 samples, 0.56%)</title><rect x="1100.3" y="1893" width="6.6" height="15.0" fill="rgb(253,61,20)" rx="2" ry="2" />
<text  x="1103.25" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::duration&lt;long, void&gt; (1 samples, 0.02%)</title><rect x="529.8" y="1973" width="0.2" height="15.0" fill="rgb(248,10,29)" rx="2" ry="2" />
<text  x="532.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="968.2" y="1765" width="0.2" height="15.0" fill="rgb(208,194,25)" rx="2" ry="2" />
<text  x="971.25" y="1775.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="1130.2" y="2053" width="0.4" height="15.0" fill="rgb(221,131,44)" rx="2" ry="2" />
<text  x="1133.24" y="2063.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="441.0" y="1797" width="0.2" height="15.0" fill="rgb(232,180,4)" rx="2" ry="2" />
<text  x="444.03" y="1807.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="928.4" y="1909" width="0.2" height="15.0" fill="rgb(213,174,12)" rx="2" ry="2" />
<text  x="931.40" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="56.7" y="1925" width="0.2" height="15.0" fill="rgb(223,41,52)" rx="2" ry="2" />
<text  x="59.68" y="1935.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="345.8" y="1461" width="0.3" height="15.0" fill="rgb(234,85,26)" rx="2" ry="2" />
<text  x="348.85" y="1471.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="297.6" y="1797" width="0.4" height="15.0" fill="rgb(232,185,37)" rx="2" ry="2" />
<text  x="300.55" y="1807.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="441.4" y="1573" width="0.2" height="15.0" fill="rgb(233,17,14)" rx="2" ry="2" />
<text  x="444.43" y="1583.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="265.2" y="1765" width="0.2" height="15.0" fill="rgb(243,42,34)" rx="2" ry="2" />
<text  x="268.16" y="1775.5" ></text>
</g>
<g >
<title>folly::EventBase::getBackend (4 samples, 0.07%)</title><rect x="69.2" y="1909" width="0.8" height="15.0" fill="rgb(243,38,16)" rx="2" ry="2" />
<text  x="72.16" y="1919.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="889.4" y="1861" width="0.2" height="15.0" fill="rgb(253,116,24)" rx="2" ry="2" />
<text  x="892.37" y="1871.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="633.2" y="1813" width="0.2" height="15.0" fill="rgb(221,127,25)" rx="2" ry="2" />
<text  x="636.20" y="1823.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="238.0" y="1637" width="0.2" height="15.0" fill="rgb(254,120,42)" rx="2" ry="2" />
<text  x="240.99" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="362.6" y="1861" width="0.2" height="15.0" fill="rgb(240,188,25)" rx="2" ry="2" />
<text  x="365.55" y="1871.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="310.0" y="1845" width="0.2" height="15.0" fill="rgb(217,190,8)" rx="2" ry="2" />
<text  x="313.03" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.07%)</title><rect x="282.5" y="1445" width="0.8" height="15.0" fill="rgb(237,200,1)" rx="2" ry="2" />
<text  x="285.46" y="1455.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="916.7" y="1957" width="0.4" height="15.0" fill="rgb(227,21,5)" rx="2" ry="2" />
<text  x="919.73" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="870.2" y="2005" width="0.5" height="15.0" fill="rgb(205,70,16)" rx="2" ry="2" />
<text  x="873.25" y="2015.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;folly::ShutdownSocketSet&gt;::lock (6 samples, 0.10%)</title><rect x="841.9" y="1925" width="1.2" height="15.0" fill="rgb(250,144,20)" rx="2" ry="2" />
<text  x="844.88" y="1935.5" ></text>
</g>
<g >
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="1106.1" y="1541" width="0.2" height="15.0" fill="rgb(217,144,53)" rx="2" ry="2" />
<text  x="1109.09" y="1551.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="256.5" y="1797" width="0.2" height="15.0" fill="rgb(237,4,15)" rx="2" ry="2" />
<text  x="259.50" y="1807.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="533.0" y="1989" width="0.4" height="15.0" fill="rgb(242,145,16)" rx="2" ry="2" />
<text  x="535.99" y="1999.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="604.4" y="1877" width="0.4" height="15.0" fill="rgb(211,170,33)" rx="2" ry="2" />
<text  x="607.43" y="1887.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="767.4" y="1461" width="0.2" height="15.0" fill="rgb(232,193,42)" rx="2" ry="2" />
<text  x="770.42" y="1471.5" ></text>
</g>
<g >
<title>inet_csk_reqsk_queue_drop (1 samples, 0.02%)</title><rect x="233.0" y="1589" width="0.2" height="15.0" fill="rgb(253,229,0)" rx="2" ry="2" />
<text  x="235.96" y="1599.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (4 samples, 0.07%)</title><rect x="651.3" y="2037" width="0.8" height="15.0" fill="rgb(229,124,33)" rx="2" ry="2" />
<text  x="654.31" y="2047.5" ></text>
</g>
<g >
<title>boost::operators_impl::totally_ordered1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::totally_ordered1 (2 samples, 0.03%)</title><rect x="569.4" y="1989" width="0.4" height="15.0" fill="rgb(224,72,33)" rx="2" ry="2" />
<text  x="572.41" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="433.6" y="1877" width="0.2" height="15.0" fill="rgb(248,157,6)" rx="2" ry="2" />
<text  x="436.58" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="691.6" y="2005" width="0.2" height="15.0" fill="rgb(244,83,46)" rx="2" ry="2" />
<text  x="694.56" y="2015.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (1 samples, 0.02%)</title><rect x="809.7" y="1605" width="0.2" height="15.0" fill="rgb(245,99,25)" rx="2" ry="2" />
<text  x="812.68" y="1615.5" ></text>
</g>
<g >
<title>accept4@plt (1 samples, 0.02%)</title><rect x="24.3" y="2005" width="0.2" height="15.0" fill="rgb(230,220,16)" rx="2" ry="2" />
<text  x="27.29" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="552.5" y="1925" width="0.2" height="15.0" fill="rgb(241,51,35)" rx="2" ry="2" />
<text  x="555.51" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="963.4" y="2021" width="0.4" height="15.0" fill="rgb(221,81,26)" rx="2" ry="2" />
<text  x="966.42" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1096.2" y="1813" width="0.2" height="15.0" fill="rgb(241,144,37)" rx="2" ry="2" />
<text  x="1099.23" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="97.1" y="1941" width="0.2" height="15.0" fill="rgb(219,128,37)" rx="2" ry="2" />
<text  x="100.13" y="1951.5" ></text>
</g>
<g >
<title>skb_clone (14 samples, 0.24%)</title><rect x="798.4" y="1669" width="2.8" height="15.0" fill="rgb(213,214,9)" rx="2" ry="2" />
<text  x="801.41" y="1679.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="259.5" y="1861" width="0.8" height="15.0" fill="rgb(246,115,42)" rx="2" ry="2" />
<text  x="262.52" y="1871.5" ></text>
</g>
<g >
<title>tcp_write_xmit (234 samples, 3.99%)</title><rect x="768.2" y="1701" width="47.1" height="15.0" fill="rgb(225,127,29)" rx="2" ry="2" />
<text  x="771.23" y="1711.5" >tcp_..</text>
</g>
<g >
<title>event_assign (6 samples, 0.10%)</title><rect x="190.3" y="2021" width="1.2" height="15.0" fill="rgb(236,121,52)" rx="2" ry="2" />
<text  x="193.30" y="2031.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="812.5" y="1589" width="0.2" height="15.0" fill="rgb(241,43,23)" rx="2" ry="2" />
<text  x="815.50" y="1599.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (15 samples, 0.26%)</title><rect x="514.9" y="1973" width="3.0" height="15.0" fill="rgb(253,39,0)" rx="2" ry="2" />
<text  x="517.88" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="316.1" y="1653" width="0.2" height="15.0" fill="rgb(245,28,3)" rx="2" ry="2" />
<text  x="319.07" y="1663.5" ></text>
</g>
<g >
<title>security_sk_clone (1 samples, 0.02%)</title><rect x="783.3" y="1269" width="0.2" height="15.0" fill="rgb(246,177,47)" rx="2" ry="2" />
<text  x="786.32" y="1279.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="345.6" y="1909" width="0.5" height="15.0" fill="rgb(218,18,26)" rx="2" ry="2" />
<text  x="348.65" y="1919.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="279.4" y="1781" width="0.2" height="15.0" fill="rgb(243,117,1)" rx="2" ry="2" />
<text  x="282.44" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1023.0" y="1893" width="0.4" height="15.0" fill="rgb(233,75,36)" rx="2" ry="2" />
<text  x="1025.98" y="1903.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="517.9" y="1989" width="0.6" height="15.0" fill="rgb(254,124,6)" rx="2" ry="2" />
<text  x="520.90" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (9 samples, 0.15%)</title><rect x="940.3" y="1893" width="1.8" height="15.0" fill="rgb(222,223,24)" rx="2" ry="2" />
<text  x="943.28" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="840.9" y="1445" width="0.2" height="15.0" fill="rgb(238,133,40)" rx="2" ry="2" />
<text  x="843.87" y="1455.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="1106.3" y="1765" width="0.4" height="15.0" fill="rgb(245,79,27)" rx="2" ry="2" />
<text  x="1109.29" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1170.3" y="1989" width="0.2" height="15.0" fill="rgb(232,193,30)" rx="2" ry="2" />
<text  x="1173.28" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1121.6" y="2005" width="0.2" height="15.0" fill="rgb(242,139,47)" rx="2" ry="2" />
<text  x="1124.58" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="533.2" y="1813" width="0.2" height="15.0" fill="rgb(251,217,10)" rx="2" ry="2" />
<text  x="536.19" y="1823.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (1 samples, 0.02%)</title><rect x="195.7" y="2005" width="0.2" height="15.0" fill="rgb(238,221,25)" rx="2" ry="2" />
<text  x="198.73" y="2015.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="747.1" y="1685" width="0.2" height="15.0" fill="rgb(240,40,9)" rx="2" ry="2" />
<text  x="750.10" y="1695.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="652.1" y="1957" width="0.2" height="15.0" fill="rgb(243,122,44)" rx="2" ry="2" />
<text  x="655.12" y="1967.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="94.7" y="1957" width="0.2" height="15.0" fill="rgb(221,35,22)" rx="2" ry="2" />
<text  x="97.72" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.19%)</title><rect x="906.5" y="2021" width="2.2" height="15.0" fill="rgb(249,52,47)" rx="2" ry="2" />
<text  x="909.47" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="64.7" y="1749" width="0.2" height="15.0" fill="rgb(228,134,48)" rx="2" ry="2" />
<text  x="67.73" y="1759.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getFlags (3 samples, 0.05%)</title><rect x="881.7" y="1941" width="0.6" height="15.0" fill="rgb(245,72,41)" rx="2" ry="2" />
<text  x="884.72" y="1951.5" ></text>
</g>
<g >
<title>ip_local_out (31 samples, 0.53%)</title><rect x="1100.5" y="1845" width="6.2" height="15.0" fill="rgb(211,121,8)" rx="2" ry="2" />
<text  x="1103.45" y="1855.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.02%)</title><rect x="271.4" y="1861" width="0.2" height="15.0" fill="rgb(217,225,20)" rx="2" ry="2" />
<text  x="274.39" y="1871.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="721.5" y="1781" width="0.6" height="15.0" fill="rgb(245,105,29)" rx="2" ry="2" />
<text  x="724.54" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="316.9" y="2005" width="0.2" height="15.0" fill="rgb(232,123,54)" rx="2" ry="2" />
<text  x="319.87" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="812.5" y="1525" width="0.2" height="15.0" fill="rgb(245,200,6)" rx="2" ry="2" />
<text  x="815.50" y="1535.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1149.2" y="1605" width="0.2" height="15.0" fill="rgb(245,130,27)" rx="2" ry="2" />
<text  x="1152.15" y="1615.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="790.4" y="1445" width="0.2" height="15.0" fill="rgb(251,193,49)" rx="2" ry="2" />
<text  x="793.36" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (160 samples, 2.73%)</title><rect x="123.3" y="1861" width="32.2" height="15.0" fill="rgb(238,40,31)" rx="2" ry="2" />
<text  x="126.29" y="1871.5" >[u..</text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="661" width="28.8" height="15.0" fill="rgb(209,49,48)" rx="2" ry="2" />
<text  x="127.10" y="671.5" >[u..</text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="71.0" y="1669" width="0.2" height="15.0" fill="rgb(218,47,30)" rx="2" ry="2" />
<text  x="73.97" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="554.7" y="1941" width="0.2" height="15.0" fill="rgb(220,221,8)" rx="2" ry="2" />
<text  x="557.72" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1075.9" y="1813" width="0.2" height="15.0" fill="rgb(222,19,11)" rx="2" ry="2" />
<text  x="1078.90" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="809.5" y="1509" width="0.2" height="15.0" fill="rgb(211,227,1)" rx="2" ry="2" />
<text  x="812.48" y="1519.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="636.2" y="1957" width="0.2" height="15.0" fill="rgb(215,55,2)" rx="2" ry="2" />
<text  x="639.22" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="532.6" y="1941" width="0.2" height="15.0" fill="rgb(222,115,37)" rx="2" ry="2" />
<text  x="535.59" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="853" width="29.6" height="15.0" fill="rgb(229,169,30)" rx="2" ry="2" />
<text  x="127.10" y="863.5" >[u..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="831.0" y="1781" width="0.2" height="15.0" fill="rgb(249,36,51)" rx="2" ry="2" />
<text  x="834.01" y="1791.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="56.7" y="1909" width="0.2" height="15.0" fill="rgb(229,222,3)" rx="2" ry="2" />
<text  x="59.68" y="1919.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (4 samples, 0.07%)</title><rect x="616.9" y="1957" width="0.8" height="15.0" fill="rgb(208,88,47)" rx="2" ry="2" />
<text  x="619.90" y="1967.5" ></text>
</g>
<g >
<title>__gthread_active_p (1 samples, 0.02%)</title><rect x="886.7" y="1909" width="0.3" height="15.0" fill="rgb(232,54,40)" rx="2" ry="2" />
<text  x="889.75" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="42.4" y="1909" width="0.2" height="15.0" fill="rgb(217,12,20)" rx="2" ry="2" />
<text  x="45.40" y="1919.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.15%)</title><rect x="10.4" y="1989" width="1.8" height="15.0" fill="rgb(244,144,1)" rx="2" ry="2" />
<text  x="13.40" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1109.3" y="1733" width="0.2" height="15.0" fill="rgb(209,124,22)" rx="2" ry="2" />
<text  x="1112.31" y="1743.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="944.3" y="1893" width="0.2" height="15.0" fill="rgb(254,161,17)" rx="2" ry="2" />
<text  x="947.30" y="1903.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (2 samples, 0.03%)</title><rect x="986.6" y="1893" width="0.4" height="15.0" fill="rgb(250,88,28)" rx="2" ry="2" />
<text  x="989.56" y="1903.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="320.9" y="2037" width="0.2" height="15.0" fill="rgb(205,191,29)" rx="2" ry="2" />
<text  x="323.90" y="2047.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="310.6" y="1813" width="0.2" height="15.0" fill="rgb(252,85,36)" rx="2" ry="2" />
<text  x="313.63" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1109.3" y="1845" width="0.2" height="15.0" fill="rgb(217,5,33)" rx="2" ry="2" />
<text  x="1112.31" y="1855.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="345.8" y="1557" width="0.3" height="15.0" fill="rgb(215,208,43)" rx="2" ry="2" />
<text  x="348.85" y="1567.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;std::thread::id, std::thread::id&gt; (2 samples, 0.03%)</title><rect x="885.7" y="1925" width="0.4" height="15.0" fill="rgb(230,89,41)" rx="2" ry="2" />
<text  x="888.74" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="233.0" y="1701" width="0.2" height="15.0" fill="rgb(246,86,54)" rx="2" ry="2" />
<text  x="235.96" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="631.6" y="1893" width="0.2" height="15.0" fill="rgb(236,136,1)" rx="2" ry="2" />
<text  x="634.59" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="523.5" y="1973" width="0.4" height="15.0" fill="rgb(238,61,51)" rx="2" ry="2" />
<text  x="526.53" y="1983.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="310.2" y="1877" width="0.2" height="15.0" fill="rgb(225,146,28)" rx="2" ry="2" />
<text  x="313.23" y="1887.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="510.3" y="1861" width="0.6" height="15.0" fill="rgb(229,48,11)" rx="2" ry="2" />
<text  x="513.25" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::setsockopt (76 samples, 1.30%)</title><rect x="673.4" y="2005" width="15.3" height="15.0" fill="rgb(242,144,5)" rx="2" ry="2" />
<text  x="676.45" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="920.6" y="1669" width="0.2" height="15.0" fill="rgb(246,16,5)" rx="2" ry="2" />
<text  x="923.56" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1144.3" y="2005" width="0.2" height="15.0" fill="rgb(249,210,21)" rx="2" ry="2" />
<text  x="1147.32" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="930.4" y="1973" width="0.2" height="15.0" fill="rgb(205,98,5)" rx="2" ry="2" />
<text  x="933.42" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1111.3" y="1845" width="0.2" height="15.0" fill="rgb(220,1,39)" rx="2" ry="2" />
<text  x="1114.32" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="944.3" y="1717" width="0.2" height="15.0" fill="rgb(244,34,1)" rx="2" ry="2" />
<text  x="947.30" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="320.5" y="2005" width="0.2" height="15.0" fill="rgb(234,206,10)" rx="2" ry="2" />
<text  x="323.49" y="2015.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="342.0" y="1493" width="0.2" height="15.0" fill="rgb(235,213,38)" rx="2" ry="2" />
<text  x="345.03" y="1503.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="269.6" y="1829" width="0.6" height="15.0" fill="rgb(211,29,26)" rx="2" ry="2" />
<text  x="272.58" y="1839.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="844.1" y="1573" width="0.2" height="15.0" fill="rgb(230,175,28)" rx="2" ry="2" />
<text  x="847.09" y="1583.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="151.9" y="69" width="0.2" height="15.0" fill="rgb(250,108,42)" rx="2" ry="2" />
<text  x="154.87" y="79.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1111.3" y="1749" width="0.2" height="15.0" fill="rgb(210,52,20)" rx="2" ry="2" />
<text  x="1114.32" y="1759.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedReply::prepareImpl (1 samples, 0.02%)</title><rect x="513.7" y="2037" width="0.2" height="15.0" fill="rgb(215,122,30)" rx="2" ry="2" />
<text  x="516.67" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="888.2" y="1829" width="0.2" height="15.0" fill="rgb(223,176,28)" rx="2" ry="2" />
<text  x="891.16" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onTransactionCompleted (1 samples, 0.02%)</title><rect x="692.0" y="2037" width="0.2" height="15.0" fill="rgb(236,173,37)" rx="2" ry="2" />
<text  x="694.96" y="2047.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="778.5" y="1525" width="0.2" height="15.0" fill="rgb(247,205,25)" rx="2" ry="2" />
<text  x="781.49" y="1535.5" ></text>
</g>
<g >
<title>folly::detail::digits_to&lt;unsigned int&gt; (19 samples, 0.32%)</title><rect x="1006.9" y="2005" width="3.8" height="15.0" fill="rgb(212,91,2)" rx="2" ry="2" />
<text  x="1009.88" y="2015.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="669.2" y="1861" width="0.4" height="15.0" fill="rgb(223,24,34)" rx="2" ry="2" />
<text  x="672.22" y="1871.5" ></text>
</g>
<g >
<title>folly::netops::recv (2 samples, 0.03%)</title><rect x="71.6" y="1973" width="0.4" height="15.0" fill="rgb(223,207,21)" rx="2" ry="2" />
<text  x="74.58" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="272.2" y="1829" width="0.4" height="15.0" fill="rgb(218,84,34)" rx="2" ry="2" />
<text  x="275.20" y="1839.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="151.5" y="101" width="0.2" height="15.0" fill="rgb(221,216,18)" rx="2" ry="2" />
<text  x="154.46" y="111.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="235.0" y="1781" width="0.2" height="15.0" fill="rgb(215,42,33)" rx="2" ry="2" />
<text  x="237.97" y="1791.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (4 samples, 0.07%)</title><rect x="690.2" y="1973" width="0.8" height="15.0" fill="rgb(224,165,41)" rx="2" ry="2" />
<text  x="693.15" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::GuardPageAllocator::deallocate (1 samples, 0.02%)</title><rect x="19.5" y="1957" width="0.2" height="15.0" fill="rgb(248,95,6)" rx="2" ry="2" />
<text  x="22.46" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="310.6" y="1765" width="0.2" height="15.0" fill="rgb(243,165,12)" rx="2" ry="2" />
<text  x="313.63" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.07%)</title><rect x="114.8" y="1989" width="0.8" height="15.0" fill="rgb(226,203,24)" rx="2" ry="2" />
<text  x="117.84" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="832.0" y="1813" width="0.6" height="15.0" fill="rgb(217,24,9)" rx="2" ry="2" />
<text  x="835.02" y="1823.5" ></text>
</g>
<g >
<title>swiotlb_unmap_page (1 samples, 0.02%)</title><rect x="208.6" y="1909" width="0.2" height="15.0" fill="rgb(220,162,4)" rx="2" ry="2" />
<text  x="211.61" y="1919.5" ></text>
</g>
<g >
<title>__clock_gettime (1 samples, 0.02%)</title><rect x="704.0" y="1941" width="0.2" height="15.0" fill="rgb(227,83,11)" rx="2" ry="2" />
<text  x="707.03" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1178.7" y="1957" width="0.2" height="15.0" fill="rgb(249,69,4)" rx="2" ry="2" />
<text  x="1181.73" y="1967.5" ></text>
</g>
<g >
<title>std::__exception_ptr::exception_ptr::~exception_ptr (1 samples, 0.02%)</title><rect x="942.5" y="1909" width="0.2" height="15.0" fill="rgb(227,34,29)" rx="2" ry="2" />
<text  x="945.49" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="510.7" y="1685" width="0.2" height="15.0" fill="rgb(221,221,54)" rx="2" ry="2" />
<text  x="513.65" y="1695.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="581.3" y="1909" width="0.2" height="15.0" fill="rgb(243,205,17)" rx="2" ry="2" />
<text  x="584.29" y="1919.5" ></text>
</g>
<g >
<title>folly::EventHandler::EventHandler (6 samples, 0.10%)</title><rect x="541.0" y="1989" width="1.2" height="15.0" fill="rgb(225,136,44)" rx="2" ry="2" />
<text  x="544.04" y="1999.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="454.7" y="1829" width="0.2" height="15.0" fill="rgb(229,10,50)" rx="2" ry="2" />
<text  x="457.71" y="1839.5" ></text>
</g>
<g >
<title>std::_Sp_counted_deleter&lt;facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;*, facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::process (4 samples, 0.07%)</title><rect x="992.4" y="1989" width="0.8" height="15.0" fill="rgb(253,104,6)" rx="2" ry="2" />
<text  x="995.39" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="510.7" y="1701" width="0.2" height="15.0" fill="rgb(238,139,28)" rx="2" ry="2" />
<text  x="513.65" y="1711.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="689.7" y="1973" width="0.5" height="15.0" fill="rgb(226,217,48)" rx="2" ry="2" />
<text  x="692.75" y="1983.5" ></text>
</g>
<g >
<title>SYSC_getpeername (1 samples, 0.02%)</title><rect x="699.2" y="1829" width="0.2" height="15.0" fill="rgb(209,57,45)" rx="2" ry="2" />
<text  x="702.21" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="341.8" y="1813" width="0.4" height="15.0" fill="rgb(211,52,35)" rx="2" ry="2" />
<text  x="344.82" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="775.5" y="1445" width="0.2" height="15.0" fill="rgb(249,2,29)" rx="2" ry="2" />
<text  x="778.47" y="1455.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="341.6" y="1909" width="0.6" height="15.0" fill="rgb(206,19,36)" rx="2" ry="2" />
<text  x="344.62" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::Callback (7 samples, 0.12%)</title><rect x="162.3" y="1989" width="1.4" height="15.0" fill="rgb(215,39,22)" rx="2" ry="2" />
<text  x="165.33" y="1999.5" ></text>
</g>
<g >
<title>folly::EventHandler::~EventHandler (3 samples, 0.05%)</title><rect x="80.0" y="1957" width="0.6" height="15.0" fill="rgb(246,87,25)" rx="2" ry="2" />
<text  x="83.03" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_destroy_sock (1 samples, 0.02%)</title><rect x="115.2" y="1733" width="0.2" height="15.0" fill="rgb(246,27,16)" rx="2" ry="2" />
<text  x="118.24" y="1743.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="908.7" y="1973" width="0.4" height="15.0" fill="rgb(220,190,33)" rx="2" ry="2" />
<text  x="911.68" y="1983.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="986.8" y="1877" width="0.2" height="15.0" fill="rgb(228,155,36)" rx="2" ry="2" />
<text  x="989.76" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="272.4" y="1653" width="0.2" height="15.0" fill="rgb(220,0,42)" rx="2" ry="2" />
<text  x="275.40" y="1663.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="955.8" y="1973" width="0.2" height="15.0" fill="rgb(245,66,28)" rx="2" ry="2" />
<text  x="958.77" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isFamilyInet (1 samples, 0.02%)</title><rect x="605.4" y="2005" width="0.2" height="15.0" fill="rgb(243,119,44)" rx="2" ry="2" />
<text  x="608.43" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="740.7" y="1621" width="0.2" height="15.0" fill="rgb(233,54,13)" rx="2" ry="2" />
<text  x="743.66" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="345.4" y="1701" width="0.2" height="15.0" fill="rgb(211,1,30)" rx="2" ry="2" />
<text  x="348.45" y="1711.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="216.3" y="2021" width="0.2" height="15.0" fill="rgb(230,202,24)" rx="2" ry="2" />
<text  x="219.26" y="2031.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (1 samples, 0.02%)</title><rect x="681.7" y="1909" width="0.2" height="15.0" fill="rgb(217,138,2)" rx="2" ry="2" />
<text  x="684.70" y="1919.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="960.6" y="1973" width="0.4" height="15.0" fill="rgb(207,104,40)" rx="2" ry="2" />
<text  x="963.60" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (9 samples, 0.15%)</title><rect x="282.3" y="1605" width="1.8" height="15.0" fill="rgb(234,196,6)" rx="2" ry="2" />
<text  x="285.26" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="12.2" y="1957" width="0.2" height="15.0" fill="rgb(243,229,46)" rx="2" ry="2" />
<text  x="15.21" y="1967.5" ></text>
</g>
<g >
<title>mcrouter (5,841 samples, 99.61%)</title><rect x="14.6" y="2069" width="1175.4" height="15.0" fill="rgb(239,204,43)" rx="2" ry="2" />
<text  x="17.63" y="2079.5" >mcrouter</text>
</g>
<g >
<title>folly::IOBuf::operator= (1 samples, 0.02%)</title><rect x="197.5" y="2005" width="0.2" height="15.0" fill="rgb(252,81,14)" rx="2" ry="2" />
<text  x="200.54" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.15%)</title><rect x="602.2" y="1893" width="1.8" height="15.0" fill="rgb(248,175,47)" rx="2" ry="2" />
<text  x="605.21" y="1903.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="154.7" y="1669" width="0.2" height="15.0" fill="rgb(252,191,3)" rx="2" ry="2" />
<text  x="157.68" y="1679.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (3 samples, 0.05%)</title><rect x="1071.9" y="1861" width="0.6" height="15.0" fill="rgb(225,91,15)" rx="2" ry="2" />
<text  x="1074.88" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="841.7" y="1765" width="0.2" height="15.0" fill="rgb(235,205,10)" rx="2" ry="2" />
<text  x="844.67" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1155.4" y="1941" width="0.2" height="15.0" fill="rgb(218,157,19)" rx="2" ry="2" />
<text  x="1158.39" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="72.6" y="1973" width="0.2" height="15.0" fill="rgb(213,212,44)" rx="2" ry="2" />
<text  x="75.58" y="1983.5" ></text>
</g>
<g >
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="758.0" y="1717" width="0.4" height="15.0" fill="rgb(250,143,37)" rx="2" ry="2" />
<text  x="760.96" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="310.6" y="1781" width="0.2" height="15.0" fill="rgb(217,0,4)" rx="2" ry="2" />
<text  x="313.63" y="1791.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="812.5" y="1493" width="0.2" height="15.0" fill="rgb(248,24,47)" rx="2" ry="2" />
<text  x="815.50" y="1503.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="790.4" y="1381" width="0.2" height="15.0" fill="rgb(207,135,16)" rx="2" ry="2" />
<text  x="793.36" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="707.3" y="1717" width="0.2" height="15.0" fill="rgb(218,22,2)" rx="2" ry="2" />
<text  x="710.25" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="78.4" y="1925" width="0.2" height="15.0" fill="rgb(214,72,51)" rx="2" ry="2" />
<text  x="81.42" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="513.3" y="1829" width="0.2" height="15.0" fill="rgb(215,174,28)" rx="2" ry="2" />
<text  x="516.27" y="1839.5" ></text>
</g>
<g >
<title>tcp_update_metrics (1 samples, 0.02%)</title><rect x="801.6" y="1365" width="0.2" height="15.0" fill="rgb(254,145,5)" rx="2" ry="2" />
<text  x="804.63" y="1375.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="100.8" y="1973" width="0.2" height="15.0" fill="rgb(251,58,2)" rx="2" ry="2" />
<text  x="103.75" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.03%)</title><rect x="519.7" y="1973" width="0.4" height="15.0" fill="rgb(249,13,26)" rx="2" ry="2" />
<text  x="522.71" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="801.6" y="1477" width="0.2" height="15.0" fill="rgb(211,21,32)" rx="2" ry="2" />
<text  x="804.63" y="1487.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="1149.2" y="1589" width="0.2" height="15.0" fill="rgb(236,134,3)" rx="2" ry="2" />
<text  x="1152.15" y="1599.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="152.9" y="661" width="0.2" height="15.0" fill="rgb(209,179,49)" rx="2" ry="2" />
<text  x="155.87" y="671.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="99.7" y="1909" width="0.2" height="15.0" fill="rgb(223,84,2)" rx="2" ry="2" />
<text  x="102.75" y="1919.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="672.4" y="1781" width="0.2" height="15.0" fill="rgb(241,80,36)" rx="2" ry="2" />
<text  x="675.44" y="1791.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="941.5" y="1845" width="0.2" height="15.0" fill="rgb(239,101,37)" rx="2" ry="2" />
<text  x="944.48" y="1855.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (2 samples, 0.03%)</title><rect x="783.5" y="1333" width="0.4" height="15.0" fill="rgb(217,112,27)" rx="2" ry="2" />
<text  x="786.52" y="1343.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="324.1" y="2005" width="0.4" height="15.0" fill="rgb(245,166,49)" rx="2" ry="2" />
<text  x="327.12" y="2015.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1127.2" y="2053" width="0.2" height="15.0" fill="rgb(208,104,25)" rx="2" ry="2" />
<text  x="1130.22" y="2063.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1023.0" y="1829" width="0.2" height="15.0" fill="rgb(238,36,26)" rx="2" ry="2" />
<text  x="1025.98" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="441.4" y="1717" width="0.4" height="15.0" fill="rgb(214,113,12)" rx="2" ry="2" />
<text  x="444.43" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::prepareReadBuffer (35 samples, 0.60%)</title><rect x="58.5" y="1973" width="7.0" height="15.0" fill="rgb(229,78,3)" rx="2" ry="2" />
<text  x="61.50" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="441.0" y="1685" width="0.2" height="15.0" fill="rgb(213,22,52)" rx="2" ry="2" />
<text  x="444.03" y="1695.5" ></text>
</g>
<g >
<title>__close (645 samples, 11.00%)</title><rect x="706.4" y="1909" width="129.8" height="15.0" fill="rgb(233,209,0)" rx="2" ry="2" />
<text  x="709.45" y="1919.5" >__close</text>
</g>
<g >
<title>__mmdrop (2 samples, 0.03%)</title><rect x="492.5" y="1877" width="0.4" height="15.0" fill="rgb(243,58,8)" rx="2" ry="2" />
<text  x="495.54" y="1887.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="259.5" y="1813" width="0.8" height="15.0" fill="rgb(209,15,49)" rx="2" ry="2" />
<text  x="262.52" y="1823.5" ></text>
</g>
<g >
<title>folly::IPAddress::family (1 samples, 0.02%)</title><rect x="605.2" y="1957" width="0.2" height="15.0" fill="rgb(218,38,29)" rx="2" ry="2" />
<text  x="608.23" y="1967.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.09%)</title><rect x="937.1" y="1909" width="1.0" height="15.0" fill="rgb(213,169,3)" rx="2" ry="2" />
<text  x="940.06" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="934.2" y="1861" width="0.2" height="15.0" fill="rgb(214,156,4)" rx="2" ry="2" />
<text  x="937.24" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1155.4" y="1797" width="0.2" height="15.0" fill="rgb(238,109,52)" rx="2" ry="2" />
<text  x="1158.39" y="1807.5" ></text>
</g>
<g >
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="775.5" y="1413" width="0.2" height="15.0" fill="rgb(229,19,6)" rx="2" ry="2" />
<text  x="778.47" y="1423.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::finalize&lt;unsigned int&gt; (2 samples, 0.03%)</title><rect x="1006.1" y="2005" width="0.4" height="15.0" fill="rgb(226,143,11)" rx="2" ry="2" />
<text  x="1009.08" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::create (68 samples, 1.16%)</title><rect x="227.5" y="1957" width="13.7" height="15.0" fill="rgb(211,135,13)" rx="2" ry="2" />
<text  x="230.53" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="65.1" y="1797" width="0.2" height="15.0" fill="rgb(248,102,51)" rx="2" ry="2" />
<text  x="68.14" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="809.5" y="1573" width="0.2" height="15.0" fill="rgb(245,79,36)" rx="2" ry="2" />
<text  x="812.48" y="1583.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="812.5" y="1445" width="0.2" height="15.0" fill="rgb(251,158,29)" rx="2" ry="2" />
<text  x="815.50" y="1455.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="790.4" y="1461" width="0.2" height="15.0" fill="rgb(205,33,14)" rx="2" ry="2" />
<text  x="793.36" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="707.3" y="1765" width="0.2" height="15.0" fill="rgb(224,180,31)" rx="2" ry="2" />
<text  x="710.25" y="1775.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="388.3" y="1621" width="0.2" height="15.0" fill="rgb(235,21,54)" rx="2" ry="2" />
<text  x="391.31" y="1631.5" ></text>
</g>
<g >
<title>non-virtual thunk to facebook::memcache::McServerSession::writeSuccess (2 samples, 0.03%)</title><rect x="889.6" y="1973" width="0.4" height="15.0" fill="rgb(242,1,40)" rx="2" ry="2" />
<text  x="892.57" y="1983.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="184.9" y="1877" width="0.4" height="15.0" fill="rgb(230,137,42)" rx="2" ry="2" />
<text  x="187.87" y="1887.5" ></text>
</g>
<g >
<title>tcp_synack_rtt_meas (1 samples, 0.02%)</title><rect x="691.6" y="1765" width="0.2" height="15.0" fill="rgb(233,162,15)" rx="2" ry="2" />
<text  x="694.56" y="1775.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1155.4" y="1685" width="0.2" height="15.0" fill="rgb(246,189,19)" rx="2" ry="2" />
<text  x="1158.39" y="1695.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.02%)</title><rect x="1072.5" y="1813" width="0.2" height="15.0" fill="rgb(205,93,23)" rx="2" ry="2" />
<text  x="1075.48" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="548.9" y="1941" width="0.2" height="15.0" fill="rgb(209,173,27)" rx="2" ry="2" />
<text  x="551.89" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="176.4" y="1845" width="0.2" height="15.0" fill="rgb(234,10,40)" rx="2" ry="2" />
<text  x="179.42" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="114.8" y="1861" width="0.8" height="15.0" fill="rgb(243,196,2)" rx="2" ry="2" />
<text  x="117.84" y="1871.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="533.2" y="1893" width="0.2" height="15.0" fill="rgb(235,32,51)" rx="2" ry="2" />
<text  x="536.19" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.03%)</title><rect x="525.7" y="1957" width="0.4" height="15.0" fill="rgb(252,165,31)" rx="2" ry="2" />
<text  x="528.75" y="1967.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="362.6" y="1653" width="0.2" height="15.0" fill="rgb(214,25,48)" rx="2" ry="2" />
<text  x="365.55" y="1663.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="963.0" y="1989" width="0.2" height="15.0" fill="rgb(229,15,18)" rx="2" ry="2" />
<text  x="966.02" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="841.7" y="1685" width="0.2" height="15.0" fill="rgb(218,153,0)" rx="2" ry="2" />
<text  x="844.67" y="1695.5" ></text>
</g>
<g >
<title>folly::netops::(anonymous namespace)::wrapSocketFunction&lt;long, long  (2 samples, 0.03%)</title><rect x="54.7" y="1941" width="0.4" height="15.0" fill="rgb(210,77,13)" rx="2" ry="2" />
<text  x="57.67" y="1951.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="840.9" y="1765" width="0.2" height="15.0" fill="rgb(250,191,49)" rx="2" ry="2" />
<text  x="843.87" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="701.8" y="1749" width="0.2" height="15.0" fill="rgb(206,229,44)" rx="2" ry="2" />
<text  x="704.82" y="1759.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1155.4" y="1621" width="0.2" height="15.0" fill="rgb(229,164,46)" rx="2" ry="2" />
<text  x="1158.39" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="55.5" y="1957" width="0.4" height="15.0" fill="rgb(230,214,33)" rx="2" ry="2" />
<text  x="58.48" y="1967.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned long, 4ul&gt;::_S_ptr (2 samples, 0.03%)</title><rect x="527.8" y="1941" width="0.4" height="15.0" fill="rgb(212,99,30)" rx="2" ry="2" />
<text  x="530.76" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="916.9" y="1781" width="0.2" height="15.0" fill="rgb(209,195,14)" rx="2" ry="2" />
<text  x="919.93" y="1791.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1032.4" y="1781" width="0.2" height="15.0" fill="rgb(240,125,3)" rx="2" ry="2" />
<text  x="1035.44" y="1791.5" ></text>
</g>
<g >
<title>kfree_call_rcu (3 samples, 0.05%)</title><rect x="733.8" y="1669" width="0.6" height="15.0" fill="rgb(236,149,0)" rx="2" ry="2" />
<text  x="736.82" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="1175.1" y="2005" width="0.2" height="15.0" fill="rgb(246,77,20)" rx="2" ry="2" />
<text  x="1178.11" y="2015.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (2 samples, 0.03%)</title><rect x="91.5" y="1989" width="0.4" height="15.0" fill="rgb(235,32,27)" rx="2" ry="2" />
<text  x="94.50" y="1999.5" ></text>
</g>
<g >
<title>carbon::ReplyCommon::~ReplyCommon (1 samples, 0.02%)</title><rect x="142.8" y="37" width="0.2" height="15.0" fill="rgb(253,131,49)" rx="2" ry="2" />
<text  x="145.81" y="47.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="903.3" y="1733" width="0.2" height="15.0" fill="rgb(244,119,26)" rx="2" ry="2" />
<text  x="906.25" y="1743.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="842.7" y="1877" width="0.4" height="15.0" fill="rgb(210,68,9)" rx="2" ry="2" />
<text  x="845.68" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="890.0" y="1973" width="0.4" height="15.0" fill="rgb(234,23,43)" rx="2" ry="2" />
<text  x="892.97" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="64.1" y="1669" width="0.2" height="15.0" fill="rgb(206,190,39)" rx="2" ry="2" />
<text  x="67.13" y="1679.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="961.8" y="1957" width="0.2" height="15.0" fill="rgb(232,94,46)" rx="2" ry="2" />
<text  x="964.81" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1333" width="30.0" height="15.0" fill="rgb(207,128,54)" rx="2" ry="2" />
<text  x="127.10" y="1343.5" >[u..</text>
</g>
<g >
<title>folly::fibers::EventBaseLoopController::schedule (1 samples, 0.02%)</title><rect x="1150.8" y="1989" width="0.2" height="15.0" fill="rgb(221,215,6)" rx="2" ry="2" />
<text  x="1153.76" y="1999.5" ></text>
</g>
<g >
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="440.4" y="1893" width="0.8" height="15.0" fill="rgb(228,172,38)" rx="2" ry="2" />
<text  x="443.43" y="1903.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (3 samples, 0.05%)</title><rect x="198.1" y="2005" width="0.7" height="15.0" fill="rgb(219,58,10)" rx="2" ry="2" />
<text  x="201.15" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="307.2" y="1717" width="0.2" height="15.0" fill="rgb(246,11,44)" rx="2" ry="2" />
<text  x="310.21" y="1727.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="265.2" y="1573" width="0.2" height="15.0" fill="rgb(239,85,54)" rx="2" ry="2" />
<text  x="268.16" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="535.0" y="2005" width="1.0" height="15.0" fill="rgb(214,58,36)" rx="2" ry="2" />
<text  x="538.00" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="778.5" y="1445" width="0.2" height="15.0" fill="rgb(226,172,53)" rx="2" ry="2" />
<text  x="781.49" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1189" width="29.8" height="15.0" fill="rgb(208,26,19)" rx="2" ry="2" />
<text  x="127.10" y="1199.5" >[u..</text>
</g>
<g >
<title>__GI___getpeername (2 samples, 0.03%)</title><rect x="156.3" y="1941" width="0.4" height="15.0" fill="rgb(248,20,14)" rx="2" ry="2" />
<text  x="159.29" y="1951.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="800.8" y="1381" width="0.2" height="15.0" fill="rgb(210,96,41)" rx="2" ry="2" />
<text  x="803.83" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="607.0" y="2021" width="0.2" height="15.0" fill="rgb(216,204,10)" rx="2" ry="2" />
<text  x="610.04" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="71.0" y="1797" width="0.2" height="15.0" fill="rgb(245,180,17)" rx="2" ry="2" />
<text  x="73.97" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1032.4" y="1845" width="0.2" height="15.0" fill="rgb(226,183,30)" rx="2" ry="2" />
<text  x="1035.44" y="1855.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="538.8" y="1957" width="0.2" height="15.0" fill="rgb(237,198,38)" rx="2" ry="2" />
<text  x="541.83" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (9 samples, 0.15%)</title><rect x="87.3" y="1941" width="1.8" height="15.0" fill="rgb(213,130,20)" rx="2" ry="2" />
<text  x="90.27" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="565" width="28.8" height="15.0" fill="rgb(248,81,15)" rx="2" ry="2" />
<text  x="127.10" y="575.5" >[u..</text>
</g>
<g >
<title>[unknown] (160 samples, 2.73%)</title><rect x="123.3" y="1845" width="32.2" height="15.0" fill="rgb(220,24,38)" rx="2" ry="2" />
<text  x="126.29" y="1855.5" >[u..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1181.1" y="1909" width="0.2" height="15.0" fill="rgb(252,159,40)" rx="2" ry="2" />
<text  x="1184.15" y="1919.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="115.2" y="1765" width="0.2" height="15.0" fill="rgb(214,209,4)" rx="2" ry="2" />
<text  x="118.24" y="1775.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="925.4" y="1925" width="0.2" height="15.0" fill="rgb(241,2,24)" rx="2" ry="2" />
<text  x="928.39" y="1935.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="1054.6" y="1973" width="0.2" height="15.0" fill="rgb(241,13,16)" rx="2" ry="2" />
<text  x="1057.57" y="1983.5" ></text>
</g>
<g >
<title>__slab_alloc (11 samples, 0.19%)</title><rect x="376.8" y="1893" width="2.3" height="15.0" fill="rgb(252,35,48)" rx="2" ry="2" />
<text  x="379.84" y="1903.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned long, 4ul&gt;::data (2 samples, 0.03%)</title><rect x="527.8" y="1957" width="0.4" height="15.0" fill="rgb(239,94,16)" rx="2" ry="2" />
<text  x="530.76" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::~AsyncSocket (79 samples, 1.35%)</title><rect x="73.4" y="1973" width="15.9" height="15.0" fill="rgb(252,185,5)" rx="2" ry="2" />
<text  x="76.39" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::McServerRequestContext (2 samples, 0.03%)</title><rect x="696.4" y="1989" width="0.4" height="15.0" fill="rgb(246,47,7)" rx="2" ry="2" />
<text  x="699.39" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="1178.5" y="1989" width="0.2" height="15.0" fill="rgb(231,3,45)" rx="2" ry="2" />
<text  x="1181.53" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="661.8" y="1861" width="0.2" height="15.0" fill="rgb(231,126,50)" rx="2" ry="2" />
<text  x="664.78" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="525.9" y="1941" width="0.2" height="15.0" fill="rgb(242,117,0)" rx="2" ry="2" />
<text  x="528.95" y="1951.5" ></text>
</g>
<g >
<title>import_single_range (1 samples, 0.02%)</title><rect x="1058.0" y="1973" width="0.2" height="15.0" fill="rgb(217,112,41)" rx="2" ry="2" />
<text  x="1060.99" y="1983.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="173.8" y="1941" width="0.4" height="15.0" fill="rgb(235,2,10)" rx="2" ry="2" />
<text  x="176.80" y="1951.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="880.1" y="1765" width="0.2" height="15.0" fill="rgb(220,186,5)" rx="2" ry="2" />
<text  x="883.11" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1096.2" y="1861" width="0.2" height="15.0" fill="rgb(221,36,30)" rx="2" ry="2" />
<text  x="1099.23" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="819.5" y="1685" width="0.2" height="15.0" fill="rgb(224,13,11)" rx="2" ry="2" />
<text  x="822.54" y="1695.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="783.3" y="1317" width="0.2" height="15.0" fill="rgb(211,145,17)" rx="2" ry="2" />
<text  x="786.32" y="1327.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="14.4" y="1861" width="0.2" height="15.0" fill="rgb(222,7,47)" rx="2" ry="2" />
<text  x="17.43" y="1871.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="642.5" y="1957" width="0.2" height="15.0" fill="rgb(223,108,11)" rx="2" ry="2" />
<text  x="645.46" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (1 samples, 0.02%)</title><rect x="234.2" y="1845" width="0.2" height="15.0" fill="rgb(231,162,6)" rx="2" ry="2" />
<text  x="237.17" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="767.4" y="1637" width="0.2" height="15.0" fill="rgb(216,221,23)" rx="2" ry="2" />
<text  x="770.42" y="1647.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::RootRoute&lt;facebook::memcache::MemcacheRouteHandleIf&gt;::routeImpl&lt;facebook::memcache::McGetRequest&gt; (4 samples, 0.07%)</title><rect x="956.4" y="2005" width="0.8" height="15.0" fill="rgb(209,181,1)" rx="2" ry="2" />
<text  x="959.37" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="968.2" y="1941" width="0.2" height="15.0" fill="rgb(242,12,16)" rx="2" ry="2" />
<text  x="971.25" y="1951.5" ></text>
</g>
<g >
<title>folly::FormatArg::enforce&lt;bool, char const  (1 samples, 0.02%)</title><rect x="972.7" y="2005" width="0.2" height="15.0" fill="rgb(252,227,10)" rx="2" ry="2" />
<text  x="975.67" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="935.0" y="1909" width="0.2" height="15.0" fill="rgb(243,107,44)" rx="2" ry="2" />
<text  x="938.04" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="916.9" y="1813" width="0.2" height="15.0" fill="rgb(220,15,18)" rx="2" ry="2" />
<text  x="919.93" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, folly::IOBuf*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="574.0" y="1941" width="0.2" height="15.0" fill="rgb(237,168,21)" rx="2" ry="2" />
<text  x="577.04" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.09%)</title><rect x="317.1" y="2005" width="1.0" height="15.0" fill="rgb(243,49,7)" rx="2" ry="2" />
<text  x="320.07" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="13.4" y="2021" width="0.2" height="15.0" fill="rgb(237,158,16)" rx="2" ry="2" />
<text  x="16.42" y="2031.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (1 samples, 0.02%)</title><rect x="542.0" y="1941" width="0.2" height="15.0" fill="rgb(210,174,50)" rx="2" ry="2" />
<text  x="545.05" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="784.9" y="1557" width="0.4" height="15.0" fill="rgb(241,159,27)" rx="2" ry="2" />
<text  x="787.93" y="1567.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="307.2" y="1781" width="0.2" height="15.0" fill="rgb(237,26,27)" rx="2" ry="2" />
<text  x="310.21" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1155.4" y="1877" width="0.2" height="15.0" fill="rgb(226,183,3)" rx="2" ry="2" />
<text  x="1158.39" y="1887.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.03%)</title><rect x="1108.7" y="1893" width="0.4" height="15.0" fill="rgb(237,81,21)" rx="2" ry="2" />
<text  x="1111.70" y="1903.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.02%)</title><rect x="342.2" y="1925" width="0.2" height="15.0" fill="rgb(223,28,2)" rx="2" ry="2" />
<text  x="345.23" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="99.7" y="1877" width="0.2" height="15.0" fill="rgb(239,219,33)" rx="2" ry="2" />
<text  x="102.75" y="1887.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="707.1" y="1797" width="0.2" height="15.0" fill="rgb(233,133,19)" rx="2" ry="2" />
<text  x="710.05" y="1807.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="516.7" y="1669" width="0.2" height="15.0" fill="rgb(211,141,33)" rx="2" ry="2" />
<text  x="519.69" y="1679.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="300.4" y="1829" width="0.2" height="15.0" fill="rgb(206,28,48)" rx="2" ry="2" />
<text  x="303.37" y="1839.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="407.4" y="1925" width="0.2" height="15.0" fill="rgb(226,38,32)" rx="2" ry="2" />
<text  x="410.42" y="1935.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="1026.4" y="2037" width="0.4" height="15.0" fill="rgb(245,23,3)" rx="2" ry="2" />
<text  x="1029.40" y="2047.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1097.2" y="1893" width="0.2" height="15.0" fill="rgb(217,13,51)" rx="2" ry="2" />
<text  x="1100.23" y="1903.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="540.2" y="1941" width="0.2" height="15.0" fill="rgb(251,120,12)" rx="2" ry="2" />
<text  x="543.24" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (4 samples, 0.07%)</title><rect x="75.2" y="1925" width="0.8" height="15.0" fill="rgb(244,109,47)" rx="2" ry="2" />
<text  x="78.20" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="310.6" y="1669" width="0.2" height="15.0" fill="rgb(237,156,6)" rx="2" ry="2" />
<text  x="313.63" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="701.8" y="1829" width="0.2" height="15.0" fill="rgb(244,63,17)" rx="2" ry="2" />
<text  x="704.82" y="1839.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="997.4" y="1989" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1000.42" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="63.1" y="1941" width="0.2" height="15.0" fill="rgb(232,23,27)" rx="2" ry="2" />
<text  x="66.12" y="1951.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.02%)</title><rect x="749.9" y="1765" width="0.2" height="15.0" fill="rgb(254,162,51)" rx="2" ry="2" />
<text  x="752.91" y="1775.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="944.3" y="1957" width="0.2" height="15.0" fill="rgb(209,173,0)" rx="2" ry="2" />
<text  x="947.30" y="1967.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="152.7" y="69" width="0.2" height="15.0" fill="rgb(208,203,2)" rx="2" ry="2" />
<text  x="155.67" y="79.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="650.1" y="2021" width="1.2" height="15.0" fill="rgb(235,55,51)" rx="2" ry="2" />
<text  x="653.11" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="989.2" y="1893" width="0.4" height="15.0" fill="rgb(224,75,53)" rx="2" ry="2" />
<text  x="992.17" y="1903.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1086.8" y="1813" width="0.2" height="15.0" fill="rgb(214,115,45)" rx="2" ry="2" />
<text  x="1089.77" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="1120.6" y="2037" width="0.6" height="15.0" fill="rgb(233,224,29)" rx="2" ry="2" />
<text  x="1123.58" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::closeNow (1 samples, 0.02%)</title><rect x="701.8" y="1973" width="0.2" height="15.0" fill="rgb(231,73,38)" rx="2" ry="2" />
<text  x="704.82" y="1983.5" ></text>
</g>
<g >
<title>dput (118 samples, 2.01%)</title><rect x="722.1" y="1797" width="23.8" height="15.0" fill="rgb(227,6,50)" rx="2" ry="2" />
<text  x="725.15" y="1807.5" >d..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="888.2" y="1861" width="0.2" height="15.0" fill="rgb(228,105,22)" rx="2" ry="2" />
<text  x="891.16" y="1871.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="669.2" y="1813" width="0.2" height="15.0" fill="rgb(235,195,35)" rx="2" ry="2" />
<text  x="672.22" y="1823.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="944.3" y="1909" width="0.2" height="15.0" fill="rgb(227,168,49)" rx="2" ry="2" />
<text  x="947.30" y="1919.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="790.4" y="1493" width="0.2" height="15.0" fill="rgb(237,149,34)" rx="2" ry="2" />
<text  x="793.36" y="1503.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="29.7" y="1989" width="0.2" height="15.0" fill="rgb(232,33,24)" rx="2" ry="2" />
<text  x="32.72" y="1999.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (2 samples, 0.03%)</title><rect x="616.3" y="2005" width="0.4" height="15.0" fill="rgb(222,111,12)" rx="2" ry="2" />
<text  x="619.30" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="19.7" y="1941" width="0.2" height="15.0" fill="rgb(251,219,36)" rx="2" ry="2" />
<text  x="22.66" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="307.2" y="1701" width="0.2" height="15.0" fill="rgb(236,147,18)" rx="2" ry="2" />
<text  x="310.21" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="97.1" y="1797" width="0.2" height="15.0" fill="rgb(235,4,35)" rx="2" ry="2" />
<text  x="100.13" y="1807.5" ></text>
</g>
<g >
<title>kmem_cache_free (16 samples, 0.27%)</title><rect x="342.4" y="1925" width="3.2" height="15.0" fill="rgb(250,6,52)" rx="2" ry="2" />
<text  x="345.43" y="1935.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (5 samples, 0.09%)</title><rect x="812.9" y="1685" width="1.0" height="15.0" fill="rgb(250,76,10)" rx="2" ry="2" />
<text  x="815.90" y="1695.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="844.1" y="1589" width="0.2" height="15.0" fill="rgb(209,41,14)" rx="2" ry="2" />
<text  x="847.09" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="238.2" y="1893" width="0.2" height="15.0" fill="rgb(224,135,22)" rx="2" ry="2" />
<text  x="241.19" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="998.8" y="1957" width="0.4" height="15.0" fill="rgb(225,220,8)" rx="2" ry="2" />
<text  x="1001.83" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="765.2" y="1685" width="0.2" height="15.0" fill="rgb(206,28,6)" rx="2" ry="2" />
<text  x="768.21" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.07%)</title><rect x="609.3" y="1973" width="0.8" height="15.0" fill="rgb(239,179,40)" rx="2" ry="2" />
<text  x="612.26" y="1983.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="345.4" y="1813" width="0.2" height="15.0" fill="rgb(247,220,52)" rx="2" ry="2" />
<text  x="348.45" y="1823.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="174.4" y="1861" width="0.2" height="15.0" fill="rgb(209,200,30)" rx="2" ry="2" />
<text  x="177.40" y="1871.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="1058.2" y="1701" width="0.2" height="15.0" fill="rgb(236,126,21)" rx="2" ry="2" />
<text  x="1061.20" y="1711.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (5 samples, 0.09%)</title><rect x="493.1" y="1813" width="1.1" height="15.0" fill="rgb(221,200,23)" rx="2" ry="2" />
<text  x="496.15" y="1823.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="12.6" y="1925" width="0.8" height="15.0" fill="rgb(234,56,27)" rx="2" ry="2" />
<text  x="15.62" y="1935.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="967.6" y="1989" width="0.4" height="15.0" fill="rgb(223,98,8)" rx="2" ry="2" />
<text  x="970.64" y="1999.5" ></text>
</g>
<g >
<title>event_assign (4 samples, 0.07%)</title><rect x="966.8" y="2005" width="0.8" height="15.0" fill="rgb(251,200,15)" rx="2" ry="2" />
<text  x="969.84" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="12.4" y="2037" width="1.0" height="15.0" fill="rgb(237,111,7)" rx="2" ry="2" />
<text  x="15.41" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_uses_single_bucket (2 samples, 0.03%)</title><rect x="88.1" y="1893" width="0.4" height="15.0" fill="rgb(214,139,11)" rx="2" ry="2" />
<text  x="91.08" y="1903.5" ></text>
</g>
<g >
<title>folly::DelayedDestruction::DelayedDestruction (1 samples, 0.02%)</title><rect x="567.8" y="2005" width="0.2" height="15.0" fill="rgb(206,82,46)" rx="2" ry="2" />
<text  x="570.80" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="78.2" y="1829" width="0.2" height="15.0" fill="rgb(234,203,36)" rx="2" ry="2" />
<text  x="81.22" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="433.6" y="1781" width="0.2" height="15.0" fill="rgb(215,24,40)" rx="2" ry="2" />
<text  x="436.58" y="1791.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_del (8 samples, 0.14%)</title><rect x="68.4" y="1925" width="1.6" height="15.0" fill="rgb(232,157,34)" rx="2" ry="2" />
<text  x="71.36" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::initExtBuffer (12 samples, 0.20%)</title><rect x="640.4" y="1989" width="2.5" height="15.0" fill="rgb(206,103,41)" rx="2" ry="2" />
<text  x="643.45" y="1999.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="297.4" y="1749" width="0.2" height="15.0" fill="rgb(208,107,41)" rx="2" ry="2" />
<text  x="300.35" y="1759.5" ></text>
</g>
<g >
<title>apparmor_sk_free_security (1 samples, 0.02%)</title><rect x="407.8" y="1669" width="0.2" height="15.0" fill="rgb(247,42,53)" rx="2" ry="2" />
<text  x="410.83" y="1679.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="903.3" y="1877" width="0.2" height="15.0" fill="rgb(209,23,9)" rx="2" ry="2" />
<text  x="906.25" y="1887.5" ></text>
</g>
<g >
<title>ixgbe_write_eitr (1 samples, 0.02%)</title><rect x="347.7" y="1845" width="0.2" height="15.0" fill="rgb(206,51,19)" rx="2" ry="2" />
<text  x="350.66" y="1855.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="312.4" y="1861" width="0.2" height="15.0" fill="rgb(209,137,10)" rx="2" ry="2" />
<text  x="315.45" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="613" width="28.8" height="15.0" fill="rgb(243,116,12)" rx="2" ry="2" />
<text  x="127.10" y="623.5" >[u..</text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="100.8" y="1925" width="0.2" height="15.0" fill="rgb(242,218,36)" rx="2" ry="2" />
<text  x="103.75" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="347.5" y="1813" width="0.2" height="15.0" fill="rgb(228,76,41)" rx="2" ry="2" />
<text  x="350.46" y="1823.5" ></text>
</g>
<g >
<title>inet_csk_clear_xmit_timers (1 samples, 0.02%)</title><rect x="1032.4" y="1733" width="0.2" height="15.0" fill="rgb(228,21,9)" rx="2" ry="2" />
<text  x="1035.44" y="1743.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeoutImpl (1 samples, 0.02%)</title><rect x="535.0" y="1925" width="0.2" height="15.0" fill="rgb(221,55,18)" rx="2" ry="2" />
<text  x="538.00" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::reply (1 samples, 0.02%)</title><rect x="695.8" y="1973" width="0.2" height="15.0" fill="rgb(207,104,26)" rx="2" ry="2" />
<text  x="698.78" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::recordStackPosition (1 samples, 0.02%)</title><rect x="940.1" y="1877" width="0.2" height="15.0" fill="rgb(246,89,0)" rx="2" ry="2" />
<text  x="943.08" y="1887.5" ></text>
</g>
<g >
<title>new_slab (3 samples, 0.05%)</title><rect x="384.5" y="1861" width="0.6" height="15.0" fill="rgb(222,221,0)" rx="2" ry="2" />
<text  x="387.48" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="887.4" y="1925" width="0.2" height="15.0" fill="rgb(237,196,41)" rx="2" ry="2" />
<text  x="890.35" y="1935.5" ></text>
</g>
<g >
<title>tcp_parse_options (1 samples, 0.02%)</title><rect x="55.1" y="1685" width="0.2" height="15.0" fill="rgb(254,41,18)" rx="2" ry="2" />
<text  x="58.08" y="1695.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="238.0" y="1861" width="0.2" height="15.0" fill="rgb(248,203,28)" rx="2" ry="2" />
<text  x="240.99" y="1871.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="749.3" y="1749" width="0.2" height="15.0" fill="rgb(214,36,38)" rx="2" ry="2" />
<text  x="752.31" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="563.2" y="1797" width="0.2" height="15.0" fill="rgb(227,202,0)" rx="2" ry="2" />
<text  x="566.18" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="888.2" y="1765" width="0.2" height="15.0" fill="rgb(233,142,37)" rx="2" ry="2" />
<text  x="891.16" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="156.1" y="1893" width="0.2" height="15.0" fill="rgb(229,102,53)" rx="2" ry="2" />
<text  x="159.09" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1349" width="30.0" height="15.0" fill="rgb(229,206,1)" rx="2" ry="2" />
<text  x="127.10" y="1359.5" >[u..</text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="919.8" y="1845" width="0.2" height="15.0" fill="rgb(216,185,47)" rx="2" ry="2" />
<text  x="922.75" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.14%)</title><rect x="524.5" y="1973" width="1.6" height="15.0" fill="rgb(237,166,37)" rx="2" ry="2" />
<text  x="527.54" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="307.2" y="1733" width="0.2" height="15.0" fill="rgb(211,185,8)" rx="2" ry="2" />
<text  x="310.21" y="1743.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="71.0" y="1813" width="0.2" height="15.0" fill="rgb(241,111,49)" rx="2" ry="2" />
<text  x="73.97" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (7 samples, 0.12%)</title><rect x="689.5" y="1989" width="1.5" height="15.0" fill="rgb(209,162,40)" rx="2" ry="2" />
<text  x="692.55" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (6 samples, 0.10%)</title><rect x="196.3" y="1941" width="1.2" height="15.0" fill="rgb(205,15,35)" rx="2" ry="2" />
<text  x="199.34" y="1951.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (8 samples, 0.14%)</title><rect x="985.8" y="1973" width="1.6" height="15.0" fill="rgb(225,183,23)" rx="2" ry="2" />
<text  x="988.75" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="617.7" y="2021" width="0.2" height="15.0" fill="rgb(243,116,30)" rx="2" ry="2" />
<text  x="620.71" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="163.1" y="1973" width="0.4" height="15.0" fill="rgb(233,184,19)" rx="2" ry="2" />
<text  x="166.13" y="1983.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="152.7" y="261" width="0.2" height="15.0" fill="rgb(224,77,19)" rx="2" ry="2" />
<text  x="155.67" y="271.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (7 samples, 0.12%)</title><rect x="898.4" y="1989" width="1.4" height="15.0" fill="rgb(230,1,10)" rx="2" ry="2" />
<text  x="901.42" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1181.1" y="1973" width="0.2" height="15.0" fill="rgb(237,9,0)" rx="2" ry="2" />
<text  x="1184.15" y="1983.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1082.1" y="1685" width="0.2" height="15.0" fill="rgb(246,31,26)" rx="2" ry="2" />
<text  x="1085.14" y="1695.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="941.5" y="1701" width="0.2" height="15.0" fill="rgb(212,214,48)" rx="2" ry="2" />
<text  x="944.48" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="604.0" y="1893" width="0.4" height="15.0" fill="rgb(217,176,42)" rx="2" ry="2" />
<text  x="607.02" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="633.2" y="1701" width="0.2" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="636.20" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="631.4" y="1733" width="0.2" height="15.0" fill="rgb(230,18,48)" rx="2" ry="2" />
<text  x="634.39" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="964.0" y="2005" width="2.8" height="15.0" fill="rgb(213,17,22)" rx="2" ry="2" />
<text  x="967.02" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="721.1" y="1733" width="0.4" height="15.0" fill="rgb(230,222,43)" rx="2" ry="2" />
<text  x="724.14" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="855.2" y="1973" width="0.2" height="15.0" fill="rgb(218,109,54)" rx="2" ry="2" />
<text  x="858.16" y="1983.5" ></text>
</g>
<g >
<title>folly::operator== (1 samples, 0.02%)</title><rect x="853.1" y="1925" width="0.2" height="15.0" fill="rgb(233,37,46)" rx="2" ry="2" />
<text  x="856.14" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McSerializedRequest::getBodySize (2 samples, 0.03%)</title><rect x="1152.8" y="2053" width="0.4" height="15.0" fill="rgb(234,109,43)" rx="2" ry="2" />
<text  x="1155.77" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="48.4" y="1941" width="0.2" height="15.0" fill="rgb(252,115,46)" rx="2" ry="2" />
<text  x="51.43" y="1951.5" ></text>
</g>
<g >
<title>folly::SocketAddress::~SocketAddress (1 samples, 0.02%)</title><rect x="80.6" y="1957" width="0.2" height="15.0" fill="rgb(228,9,18)" rx="2" ry="2" />
<text  x="83.63" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McSetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="697.0" y="1989" width="0.2" height="15.0" fill="rgb(250,170,32)" rx="2" ry="2" />
<text  x="699.99" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait (5 samples, 0.09%)</title><rect x="535.0" y="1957" width="1.0" height="15.0" fill="rgb(221,191,9)" rx="2" ry="2" />
<text  x="538.00" y="1967.5" ></text>
</g>
<g >
<title>__slab_free (7 samples, 0.12%)</title><rect x="450.1" y="1925" width="1.4" height="15.0" fill="rgb(235,71,46)" rx="2" ry="2" />
<text  x="453.09" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="967.6" y="2021" width="0.6" height="15.0" fill="rgb(250,146,17)" rx="2" ry="2" />
<text  x="970.64" y="2031.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.02%)</title><rect x="552.5" y="1909" width="0.2" height="15.0" fill="rgb(244,213,5)" rx="2" ry="2" />
<text  x="555.51" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="767.4" y="1685" width="0.2" height="15.0" fill="rgb(229,223,18)" rx="2" ry="2" />
<text  x="770.42" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="899.4" y="1957" width="0.2" height="15.0" fill="rgb(221,213,35)" rx="2" ry="2" />
<text  x="902.43" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::~IoHandler (9 samples, 0.15%)</title><rect x="74.4" y="1957" width="1.8" height="15.0" fill="rgb(249,121,7)" rx="2" ry="2" />
<text  x="77.39" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyStats::increment (1 samples, 0.02%)</title><rect x="610.3" y="2005" width="0.2" height="15.0" fill="rgb(245,73,3)" rx="2" ry="2" />
<text  x="613.26" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (152 samples, 2.59%)</title><rect x="123.9" y="1589" width="30.6" height="15.0" fill="rgb(206,102,8)" rx="2" ry="2" />
<text  x="126.89" y="1599.5" >[u..</text>
</g>
<g >
<title>tcp_event_new_data_sent (52 samples, 0.89%)</title><rect x="802.2" y="1685" width="10.5" height="15.0" fill="rgb(217,45,42)" rx="2" ry="2" />
<text  x="805.23" y="1695.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="197.5" y="2021" width="0.2" height="15.0" fill="rgb(237,4,10)" rx="2" ry="2" />
<text  x="200.54" y="2031.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::recordStackPosition (10 samples, 0.17%)</title><rect x="165.3" y="1957" width="2.1" height="15.0" fill="rgb(218,29,54)" rx="2" ry="2" />
<text  x="168.35" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="433.8" y="1925" width="0.2" height="15.0" fill="rgb(208,180,27)" rx="2" ry="2" />
<text  x="436.79" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (617 samples, 10.52%)</title><rect x="707.7" y="1893" width="124.1" height="15.0" fill="rgb(231,32,42)" rx="2" ry="2" />
<text  x="710.66" y="1903.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="924.6" y="2005" width="0.2" height="15.0" fill="rgb(244,61,51)" rx="2" ry="2" />
<text  x="927.58" y="2015.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="523.5" y="1957" width="0.4" height="15.0" fill="rgb(231,154,8)" rx="2" ry="2" />
<text  x="526.53" y="1967.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::data (2 samples, 0.03%)</title><rect x="837.4" y="1909" width="0.5" height="15.0" fill="rgb(231,137,18)" rx="2" ry="2" />
<text  x="840.45" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="185.1" y="1845" width="0.2" height="15.0" fill="rgb(207,209,44)" rx="2" ry="2" />
<text  x="188.07" y="1855.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="841.7" y="1653" width="0.2" height="15.0" fill="rgb(214,170,1)" rx="2" ry="2" />
<text  x="844.67" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (1 samples, 0.02%)</title><rect x="524.9" y="1957" width="0.2" height="15.0" fill="rgb(219,88,17)" rx="2" ry="2" />
<text  x="527.94" y="1967.5" ></text>
</g>
<g >
<title>sys_recvfrom (2 samples, 0.03%)</title><rect x="1120.2" y="2021" width="0.4" height="15.0" fill="rgb(236,168,44)" rx="2" ry="2" />
<text  x="1123.17" y="2031.5" ></text>
</g>
<g >
<title>ksize (8 samples, 0.14%)</title><rect x="765.8" y="1701" width="1.6" height="15.0" fill="rgb(246,183,23)" rx="2" ry="2" />
<text  x="768.81" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="272.4" y="1669" width="0.2" height="15.0" fill="rgb(222,115,2)" rx="2" ry="2" />
<text  x="275.40" y="1679.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1148.7" y="1797" width="0.2" height="15.0" fill="rgb(228,166,44)" rx="2" ry="2" />
<text  x="1151.75" y="1807.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="347.5" y="1637" width="0.2" height="15.0" fill="rgb(224,136,27)" rx="2" ry="2" />
<text  x="350.46" y="1647.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="305.6" y="1877" width="0.8" height="15.0" fill="rgb(247,15,25)" rx="2" ry="2" />
<text  x="308.60" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1111.3" y="1781" width="0.2" height="15.0" fill="rgb(230,157,42)" rx="2" ry="2" />
<text  x="1114.32" y="1791.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1119.6" y="1877" width="0.2" height="15.0" fill="rgb(221,90,11)" rx="2" ry="2" />
<text  x="1122.57" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="454.7" y="1781" width="0.2" height="15.0" fill="rgb(250,86,7)" rx="2" ry="2" />
<text  x="457.71" y="1791.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="331.4" y="1845" width="0.2" height="15.0" fill="rgb(210,196,37)" rx="2" ry="2" />
<text  x="334.36" y="1855.5" ></text>
</g>
<g >
<title>__sched_text_start (91 samples, 1.55%)</title><rect x="492.5" y="1909" width="18.4" height="15.0" fill="rgb(218,54,54)" rx="2" ry="2" />
<text  x="495.54" y="1919.5" ></text>
</g>
<g >
<title>alloc_inode (49 samples, 0.84%)</title><rect x="362.8" y="1925" width="9.8" height="15.0" fill="rgb(215,222,47)" rx="2" ry="2" />
<text  x="365.75" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (71 samples, 1.21%)</title><rect x="657.3" y="2021" width="14.3" height="15.0" fill="rgb(254,74,49)" rx="2" ry="2" />
<text  x="660.35" y="2031.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (430 samples, 7.33%)</title><rect x="14.6" y="2053" width="86.6" height="15.0" fill="rgb(213,99,18)" rx="2" ry="2" />
<text  x="17.63" y="2063.5" >[libevent-..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (10 samples, 0.17%)</title><rect x="66.1" y="1941" width="2.1" height="15.0" fill="rgb(224,123,31)" rx="2" ry="2" />
<text  x="69.14" y="1951.5" ></text>
</g>
<g >
<title>__sk_destruct (1 samples, 0.02%)</title><rect x="1058.2" y="1669" width="0.2" height="15.0" fill="rgb(238,22,24)" rx="2" ry="2" />
<text  x="1061.20" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="388.3" y="1749" width="0.2" height="15.0" fill="rgb(241,43,49)" rx="2" ry="2" />
<text  x="391.31" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1128.6" y="2037" width="0.2" height="15.0" fill="rgb(218,200,30)" rx="2" ry="2" />
<text  x="1131.63" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (351 samples, 5.99%)</title><rect x="394.5" y="2021" width="70.7" height="15.0" fill="rgb(252,214,2)" rx="2" ry="2" />
<text  x="397.55" y="2031.5" >entry_S..</text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="322.1" y="2021" width="2.0" height="15.0" fill="rgb(241,160,38)" rx="2" ry="2" />
<text  x="325.10" y="2031.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="750.1" y="1509" width="0.2" height="15.0" fill="rgb(251,139,6)" rx="2" ry="2" />
<text  x="753.12" y="1519.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (2 samples, 0.03%)</title><rect x="604.4" y="1845" width="0.4" height="15.0" fill="rgb(247,16,20)" rx="2" ry="2" />
<text  x="607.43" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="1164.4" y="1957" width="0.4" height="15.0" fill="rgb(236,4,49)" rx="2" ry="2" />
<text  x="1167.44" y="1967.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="691.6" y="1941" width="0.2" height="15.0" fill="rgb(230,218,27)" rx="2" ry="2" />
<text  x="694.56" y="1951.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="840.9" y="1493" width="0.2" height="15.0" fill="rgb(209,5,4)" rx="2" ry="2" />
<text  x="843.87" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (3 samples, 0.05%)</title><rect x="889.0" y="1909" width="0.6" height="15.0" fill="rgb(227,136,24)" rx="2" ry="2" />
<text  x="891.96" y="1919.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.02%)</title><rect x="1167.1" y="1973" width="0.2" height="15.0" fill="rgb(237,63,53)" rx="2" ry="2" />
<text  x="1170.06" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="441.0" y="1669" width="0.2" height="15.0" fill="rgb(220,123,53)" rx="2" ry="2" />
<text  x="444.03" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="831.8" y="1861" width="0.8" height="15.0" fill="rgb(225,46,53)" rx="2" ry="2" />
<text  x="834.81" y="1871.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="1149.2" y="1637" width="0.2" height="15.0" fill="rgb(250,139,10)" rx="2" ry="2" />
<text  x="1152.15" y="1647.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1109.3" y="1701" width="0.2" height="15.0" fill="rgb(237,17,44)" rx="2" ry="2" />
<text  x="1112.31" y="1711.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="567.2" y="1909" width="0.2" height="15.0" fill="rgb(239,200,52)" rx="2" ry="2" />
<text  x="570.20" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1072.7" y="1653" width="0.2" height="15.0" fill="rgb(224,114,41)" rx="2" ry="2" />
<text  x="1075.68" y="1663.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::onAccepted (6 samples, 0.10%)</title><rect x="171.4" y="2005" width="1.2" height="15.0" fill="rgb(246,3,11)" rx="2" ry="2" />
<text  x="174.38" y="2015.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="115.0" y="1749" width="0.2" height="15.0" fill="rgb(234,69,3)" rx="2" ry="2" />
<text  x="118.04" y="1759.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="388.3" y="1797" width="0.2" height="15.0" fill="rgb(235,203,52)" rx="2" ry="2" />
<text  x="391.31" y="1807.5" ></text>
</g>
<g >
<title>__sk_free (1 samples, 0.02%)</title><rect x="407.8" y="1717" width="0.2" height="15.0" fill="rgb(251,138,31)" rx="2" ry="2" />
<text  x="410.83" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (13 samples, 0.22%)</title><rect x="55.9" y="1957" width="2.6" height="15.0" fill="rgb(239,25,3)" rx="2" ry="2" />
<text  x="58.88" y="1967.5" ></text>
</g>
<g >
<title>folly::detail::writeIntegerString&lt;unsigned char,  (18 samples, 0.31%)</title><rect x="598.2" y="1893" width="3.6" height="15.0" fill="rgb(218,170,15)" rx="2" ry="2" />
<text  x="601.19" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="767.4" y="1669" width="0.2" height="15.0" fill="rgb(241,137,27)" rx="2" ry="2" />
<text  x="770.42" y="1679.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.02%)</title><rect x="633.4" y="1845" width="0.2" height="15.0" fill="rgb(220,102,43)" rx="2" ry="2" />
<text  x="636.40" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="674.1" y="1861" width="0.2" height="15.0" fill="rgb(219,94,30)" rx="2" ry="2" />
<text  x="677.05" y="1871.5" ></text>
</g>
<g >
<title>epoll_ctl (384 samples, 6.55%)</title><rect x="391.7" y="2037" width="77.3" height="15.0" fill="rgb(208,200,46)" rx="2" ry="2" />
<text  x="394.73" y="2047.5" >epoll_ctl</text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="837" width="29.6" height="15.0" fill="rgb(238,191,40)" rx="2" ry="2" />
<text  x="127.10" y="847.5" >[u..</text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="162.7" y="1973" width="0.2" height="15.0" fill="rgb(235,174,12)" rx="2" ry="2" />
<text  x="165.73" y="1983.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="454.1" y="1877" width="0.2" height="15.0" fill="rgb(210,141,12)" rx="2" ry="2" />
<text  x="457.11" y="1887.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::scheduleTimeout (95 samples, 1.62%)</title><rect x="514.3" y="2005" width="19.1" height="15.0" fill="rgb(235,87,32)" rx="2" ry="2" />
<text  x="517.28" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="968.2" y="1813" width="0.2" height="15.0" fill="rgb(253,207,5)" rx="2" ry="2" />
<text  x="971.25" y="1823.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="843.7" y="1909" width="0.6" height="15.0" fill="rgb(246,136,18)" rx="2" ry="2" />
<text  x="846.69" y="1919.5" ></text>
</g>
<g >
<title>__fd_install (1 samples, 0.02%)</title><rect x="331.6" y="1941" width="0.2" height="15.0" fill="rgb(245,218,46)" rx="2" ry="2" />
<text  x="334.56" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="244.0" y="1957" width="0.2" height="15.0" fill="rgb(206,156,11)" rx="2" ry="2" />
<text  x="247.03" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="962.4" y="1989" width="0.2" height="15.0" fill="rgb(226,89,33)" rx="2" ry="2" />
<text  x="965.41" y="1999.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="941.5" y="1749" width="0.2" height="15.0" fill="rgb(211,158,13)" rx="2" ry="2" />
<text  x="944.48" y="1759.5" ></text>
</g>
<g >
<title>__fdget_raw (5 samples, 0.09%)</title><rect x="561.4" y="1925" width="1.0" height="15.0" fill="rgb(207,178,13)" rx="2" ry="2" />
<text  x="564.36" y="1935.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="667.2" y="1861" width="0.2" height="15.0" fill="rgb(212,109,14)" rx="2" ry="2" />
<text  x="670.21" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="257.5" y="1749" width="0.2" height="15.0" fill="rgb(234,53,26)" rx="2" ry="2" />
<text  x="260.51" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="773" width="29.6" height="15.0" fill="rgb(209,24,47)" rx="2" ry="2" />
<text  x="127.10" y="783.5" >[u..</text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::~Callback (6 samples, 0.10%)</title><rect x="196.3" y="2005" width="1.2" height="15.0" fill="rgb(254,90,33)" rx="2" ry="2" />
<text  x="199.34" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="801.6" y="1381" width="0.2" height="15.0" fill="rgb(213,34,19)" rx="2" ry="2" />
<text  x="804.63" y="1391.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="832.0" y="1829" width="0.6" height="15.0" fill="rgb(253,182,30)" rx="2" ry="2" />
<text  x="835.02" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="831.0" y="1621" width="0.2" height="15.0" fill="rgb(245,196,36)" rx="2" ry="2" />
<text  x="834.01" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="750.1" y="1701" width="0.2" height="15.0" fill="rgb(235,100,41)" rx="2" ry="2" />
<text  x="753.12" y="1711.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1168.7" y="1829" width="0.2" height="15.0" fill="rgb(248,75,11)" rx="2" ry="2" />
<text  x="1171.67" y="1839.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="64.1" y="1781" width="0.2" height="15.0" fill="rgb(205,125,54)" rx="2" ry="2" />
<text  x="67.13" y="1791.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1086.8" y="1877" width="0.2" height="15.0" fill="rgb(251,156,9)" rx="2" ry="2" />
<text  x="1089.77" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="433.6" y="1749" width="0.2" height="15.0" fill="rgb(231,90,34)" rx="2" ry="2" />
<text  x="436.58" y="1759.5" ></text>
</g>
<g >
<title>std::thread::id::id (1 samples, 0.02%)</title><rect x="95.7" y="1957" width="0.2" height="15.0" fill="rgb(208,19,3)" rx="2" ry="2" />
<text  x="98.72" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="492.3" y="1749" width="0.2" height="15.0" fill="rgb(232,71,35)" rx="2" ry="2" />
<text  x="495.34" y="1759.5" ></text>
</g>
<g >
<title>iput (85 samples, 1.45%)</title><rect x="726.6" y="1733" width="17.1" height="15.0" fill="rgb(225,201,43)" rx="2" ry="2" />
<text  x="729.57" y="1743.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (1 samples, 0.02%)</title><rect x="1006.5" y="2005" width="0.2" height="15.0" fill="rgb(226,205,42)" rx="2" ry="2" />
<text  x="1009.48" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (4 samples, 0.07%)</title><rect x="114.8" y="1877" width="0.8" height="15.0" fill="rgb(227,18,48)" rx="2" ry="2" />
<text  x="117.84" y="1887.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="795.4" y="1493" width="0.2" height="15.0" fill="rgb(237,37,33)" rx="2" ry="2" />
<text  x="798.39" y="1503.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (13 samples, 0.22%)</title><rect x="1028.0" y="2037" width="2.6" height="15.0" fill="rgb(213,53,26)" rx="2" ry="2" />
<text  x="1031.01" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="631.4" y="1861" width="0.2" height="15.0" fill="rgb(237,55,36)" rx="2" ry="2" />
<text  x="634.39" y="1871.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="58.1" y="1909" width="0.2" height="15.0" fill="rgb(238,163,14)" rx="2" ry="2" />
<text  x="61.09" y="1919.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::DestructorGuard (1 samples, 0.02%)</title><rect x="901.2" y="2005" width="0.2" height="15.0" fill="rgb(244,15,25)" rx="2" ry="2" />
<text  x="904.24" y="2015.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.17 (111 samples, 1.89%)</title><rect x="470.2" y="1957" width="22.3" height="15.0" fill="rgb(210,50,17)" rx="2" ry="2" />
<text  x="473.21" y="1967.5" >e..</text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="214.2" y="2037" width="0.2" height="15.0" fill="rgb(239,172,14)" rx="2" ry="2" />
<text  x="217.25" y="2047.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="885.9" y="1909" width="0.2" height="15.0" fill="rgb(222,39,9)" rx="2" ry="2" />
<text  x="888.94" y="1919.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (10 samples, 0.17%)</title><rect x="1094.4" y="1893" width="2.0" height="15.0" fill="rgb(214,8,0)" rx="2" ry="2" />
<text  x="1097.42" y="1903.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="486.3" y="1893" width="0.6" height="15.0" fill="rgb(245,31,46)" rx="2" ry="2" />
<text  x="489.31" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="800.8" y="1541" width="0.4" height="15.0" fill="rgb(250,197,54)" rx="2" ry="2" />
<text  x="803.83" y="1551.5" ></text>
</g>
<g >
<title>copyin (1 samples, 0.02%)</title><rect x="266.8" y="1877" width="0.2" height="15.0" fill="rgb(232,129,31)" rx="2" ry="2" />
<text  x="269.77" y="1887.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="707.3" y="1781" width="0.2" height="15.0" fill="rgb(229,19,7)" rx="2" ry="2" />
<text  x="710.25" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1111.3" y="1861" width="0.2" height="15.0" fill="rgb(240,195,42)" rx="2" ry="2" />
<text  x="1114.32" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6 samples, 0.10%)</title><rect x="318.7" y="2021" width="1.2" height="15.0" fill="rgb(253,210,14)" rx="2" ry="2" />
<text  x="321.68" y="2031.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="486.3" y="1781" width="0.2" height="15.0" fill="rgb(248,163,49)" rx="2" ry="2" />
<text  x="489.31" y="1791.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="312.0" y="1909" width="0.2" height="15.0" fill="rgb(230,216,30)" rx="2" ry="2" />
<text  x="315.04" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1058.2" y="1829" width="0.2" height="15.0" fill="rgb(254,89,19)" rx="2" ry="2" />
<text  x="1061.20" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="230.9" y="1877" width="0.2" height="15.0" fill="rgb(215,146,35)" rx="2" ry="2" />
<text  x="233.95" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="441.0" y="1829" width="0.2" height="15.0" fill="rgb(248,209,41)" rx="2" ry="2" />
<text  x="444.03" y="1839.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (4 samples, 0.07%)</title><rect x="317.3" y="1877" width="0.8" height="15.0" fill="rgb(209,47,6)" rx="2" ry="2" />
<text  x="320.27" y="1887.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="816.5" y="1397" width="0.2" height="15.0" fill="rgb(224,14,30)" rx="2" ry="2" />
<text  x="819.52" y="1407.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1082.1" y="1797" width="0.2" height="15.0" fill="rgb(246,10,34)" rx="2" ry="2" />
<text  x="1085.14" y="1807.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="195.9" y="2005" width="0.4" height="15.0" fill="rgb(232,82,25)" rx="2" ry="2" />
<text  x="198.93" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (8 samples, 0.14%)</title><rect x="234.4" y="1861" width="1.6" height="15.0" fill="rgb(232,207,1)" rx="2" ry="2" />
<text  x="237.37" y="1871.5" ></text>
</g>
<g >
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="775.3" y="1653" width="0.2" height="15.0" fill="rgb(233,196,9)" rx="2" ry="2" />
<text  x="778.27" y="1663.5" ></text>
</g>
<g >
<title>__note_gp_changes (1 samples, 0.02%)</title><rect x="554.7" y="1877" width="0.2" height="15.0" fill="rgb(221,109,44)" rx="2" ry="2" />
<text  x="557.72" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::runBeforeLoop (1 samples, 0.02%)</title><rect x="173.2" y="1941" width="0.2" height="15.0" fill="rgb(251,169,1)" rx="2" ry="2" />
<text  x="176.20" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="1178.9" y="1957" width="0.2" height="15.0" fill="rgb(221,93,27)" rx="2" ry="2" />
<text  x="1181.93" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="170.4" y="1989" width="0.2" height="15.0" fill="rgb(232,206,32)" rx="2" ry="2" />
<text  x="173.38" y="1999.5" ></text>
</g>
<g >
<title>switch_to_thread_stack (1 samples, 0.02%)</title><rect x="1122.0" y="2037" width="0.2" height="15.0" fill="rgb(224,21,2)" rx="2" ry="2" />
<text  x="1124.98" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (2 samples, 0.03%)</title><rect x="668.8" y="1845" width="0.4" height="15.0" fill="rgb(245,55,39)" rx="2" ry="2" />
<text  x="671.82" y="1855.5" ></text>
</g>
<g >
<title>task_numa_work (1 samples, 0.02%)</title><rect x="631.6" y="1813" width="0.2" height="15.0" fill="rgb(248,128,49)" rx="2" ry="2" />
<text  x="634.59" y="1823.5" ></text>
</g>
<g >
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="275.4" y="1829" width="0.2" height="15.0" fill="rgb(239,20,28)" rx="2" ry="2" />
<text  x="278.42" y="1839.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1085.0" y="1909" width="0.2" height="15.0" fill="rgb(207,207,23)" rx="2" ry="2" />
<text  x="1087.96" y="1919.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="778.5" y="1413" width="0.2" height="15.0" fill="rgb(230,199,44)" rx="2" ry="2" />
<text  x="781.49" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_previous (1 samples, 0.02%)</title><rect x="525.1" y="1941" width="0.2" height="15.0" fill="rgb(242,122,19)" rx="2" ry="2" />
<text  x="528.14" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="783.3" y="1413" width="0.8" height="15.0" fill="rgb(233,153,0)" rx="2" ry="2" />
<text  x="786.32" y="1423.5" ></text>
</g>
<g >
<title>folly::detail::fastIpV4ToBufferUnsafe (20 samples, 0.34%)</title><rect x="597.8" y="1909" width="4.0" height="15.0" fill="rgb(219,26,0)" rx="2" ry="2" />
<text  x="600.79" y="1919.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.02%)</title><rect x="121.9" y="2005" width="0.2" height="15.0" fill="rgb(250,209,13)" rx="2" ry="2" />
<text  x="124.88" y="2015.5" ></text>
</g>
<g >
<title>folly::getSocketClosedLocallyEx (2 samples, 0.03%)</title><rect x="854.6" y="1957" width="0.4" height="15.0" fill="rgb(241,216,37)" rx="2" ry="2" />
<text  x="857.55" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="652.1" y="2005" width="0.2" height="15.0" fill="rgb(221,17,6)" rx="2" ry="2" />
<text  x="655.12" y="2015.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="347.5" y="1653" width="0.2" height="15.0" fill="rgb(228,91,22)" rx="2" ry="2" />
<text  x="350.46" y="1663.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="605.2" y="1973" width="0.2" height="15.0" fill="rgb(236,155,35)" rx="2" ry="2" />
<text  x="608.23" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="927.4" y="2021" width="1.0" height="15.0" fill="rgb(217,153,14)" rx="2" ry="2" />
<text  x="930.40" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="152.7" y="373" width="0.2" height="15.0" fill="rgb(219,94,23)" rx="2" ry="2" />
<text  x="155.67" y="383.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (3 samples, 0.05%)</title><rect x="168.4" y="1957" width="0.6" height="15.0" fill="rgb(231,118,50)" rx="2" ry="2" />
<text  x="171.37" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1164.6" y="1813" width="0.2" height="15.0" fill="rgb(248,157,35)" rx="2" ry="2" />
<text  x="1167.65" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1109.3" y="1685" width="0.2" height="15.0" fill="rgb(213,1,4)" rx="2" ry="2" />
<text  x="1112.31" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="840.9" y="1637" width="0.2" height="15.0" fill="rgb(222,56,54)" rx="2" ry="2" />
<text  x="843.87" y="1647.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="83.9" y="1909" width="0.4" height="15.0" fill="rgb(219,138,14)" rx="2" ry="2" />
<text  x="86.85" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="381.5" y="1861" width="0.2" height="15.0" fill="rgb(216,177,15)" rx="2" ry="2" />
<text  x="384.47" y="1871.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (15 samples, 0.26%)</title><rect x="958.0" y="2005" width="3.0" height="15.0" fill="rgb(222,220,41)" rx="2" ry="2" />
<text  x="960.98" y="2015.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1054.8" y="2005" width="0.6" height="15.0" fill="rgb(246,221,35)" rx="2" ry="2" />
<text  x="1057.77" y="2015.5" ></text>
</g>
<g >
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1106.7" y="1845" width="0.2" height="15.0" fill="rgb(235,3,53)" rx="2" ry="2" />
<text  x="1109.69" y="1855.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="1023.0" y="1749" width="0.2" height="15.0" fill="rgb(242,158,38)" rx="2" ry="2" />
<text  x="1025.98" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (3 samples, 0.05%)</title><rect x="1087.6" y="1845" width="0.6" height="15.0" fill="rgb(207,216,52)" rx="2" ry="2" />
<text  x="1090.58" y="1855.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="696.2" y="1957" width="0.2" height="15.0" fill="rgb(234,50,5)" rx="2" ry="2" />
<text  x="699.19" y="1967.5" ></text>
</g>
<g >
<title>native_write_msr (68 samples, 1.16%)</title><rect x="496.6" y="1813" width="13.7" height="15.0" fill="rgb(218,139,37)" rx="2" ry="2" />
<text  x="499.57" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="64.1" y="1653" width="0.2" height="15.0" fill="rgb(215,78,13)" rx="2" ry="2" />
<text  x="67.13" y="1663.5" ></text>
</g>
<g >
<title>ip_finish_output (88 samples, 1.50%)</title><rect x="279.8" y="1765" width="17.8" height="15.0" fill="rgb(221,39,42)" rx="2" ry="2" />
<text  x="282.85" y="1775.5" ></text>
</g>
<g >
<title>__d_instantiate (5 samples, 0.09%)</title><rect x="385.9" y="1925" width="1.0" height="15.0" fill="rgb(236,154,14)" rx="2" ry="2" />
<text  x="388.89" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="1154.0" y="2053" width="0.2" height="15.0" fill="rgb(214,102,19)" rx="2" ry="2" />
<text  x="1156.98" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (2 samples, 0.03%)</title><rect x="575.0" y="1989" width="0.5" height="15.0" fill="rgb(227,157,54)" rx="2" ry="2" />
<text  x="578.05" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 2.61%)</title><rect x="123.9" y="1669" width="30.8" height="15.0" fill="rgb(237,117,42)" rx="2" ry="2" />
<text  x="126.89" y="1679.5" >[u..</text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="55.1" y="1845" width="0.2" height="15.0" fill="rgb(221,110,49)" rx="2" ry="2" />
<text  x="58.08" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="316.1" y="1877" width="0.2" height="15.0" fill="rgb(231,20,23)" rx="2" ry="2" />
<text  x="319.07" y="1887.5" ></text>
</g>
<g >
<title>[libjemalloc.so.1] (72 samples, 1.23%)</title><rect x="101.2" y="2053" width="14.4" height="15.0" fill="rgb(213,70,48)" rx="2" ry="2" />
<text  x="104.16" y="2063.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1055.2" y="1733" width="0.2" height="15.0" fill="rgb(226,222,16)" rx="2" ry="2" />
<text  x="1058.18" y="1743.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="189.9" y="2005" width="0.2" height="15.0" fill="rgb(226,123,6)" rx="2" ry="2" />
<text  x="192.90" y="2015.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="644.9" y="1989" width="0.4" height="15.0" fill="rgb(253,39,47)" rx="2" ry="2" />
<text  x="647.87" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="259.7" y="1765" width="0.6" height="15.0" fill="rgb(219,31,33)" rx="2" ry="2" />
<text  x="262.72" y="1775.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="845.7" y="1781" width="0.2" height="15.0" fill="rgb(213,127,37)" rx="2" ry="2" />
<text  x="848.70" y="1791.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1144.3" y="1973" width="0.2" height="15.0" fill="rgb(238,57,35)" rx="2" ry="2" />
<text  x="1147.32" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="233.0" y="1829" width="0.2" height="15.0" fill="rgb(213,45,2)" rx="2" ry="2" />
<text  x="235.96" y="1839.5" ></text>
</g>
<g >
<title>__build_skb (1 samples, 0.02%)</title><rect x="510.5" y="1781" width="0.2" height="15.0" fill="rgb(207,1,39)" rx="2" ry="2" />
<text  x="513.45" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (1 samples, 0.02%)</title><rect x="1171.5" y="2021" width="0.2" height="15.0" fill="rgb(219,131,5)" rx="2" ry="2" />
<text  x="1174.49" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1183.8" y="1989" width="0.2" height="15.0" fill="rgb(227,211,49)" rx="2" ry="2" />
<text  x="1186.76" y="1999.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (6 samples, 0.10%)</title><rect x="1109.9" y="1941" width="1.2" height="15.0" fill="rgb(247,131,16)" rx="2" ry="2" />
<text  x="1112.91" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_node_ptr (2 samples, 0.03%)</title><rect x="524.5" y="1957" width="0.4" height="15.0" fill="rgb(213,57,41)" rx="2" ry="2" />
<text  x="527.54" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="816.5" y="1525" width="0.2" height="15.0" fill="rgb(228,229,49)" rx="2" ry="2" />
<text  x="819.52" y="1535.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionFifo::isConnected (2 samples, 0.03%)</title><rect x="1146.5" y="2053" width="0.4" height="15.0" fill="rgb(234,131,39)" rx="2" ry="2" />
<text  x="1149.53" y="2063.5" ></text>
</g>
<g >
<title>folly::IOBuf::sharedInfo (1 samples, 0.02%)</title><rect x="198.6" y="1989" width="0.2" height="15.0" fill="rgb(254,30,22)" rx="2" ry="2" />
<text  x="201.55" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="801.6" y="1525" width="0.2" height="15.0" fill="rgb(215,54,29)" rx="2" ry="2" />
<text  x="804.63" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1170.3" y="1893" width="0.2" height="15.0" fill="rgb(207,102,40)" rx="2" ry="2" />
<text  x="1173.28" y="1903.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="562.4" y="1925" width="0.2" height="15.0" fill="rgb(251,126,36)" rx="2" ry="2" />
<text  x="565.37" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="730.2" y="1669" width="0.2" height="15.0" fill="rgb(229,55,48)" rx="2" ry="2" />
<text  x="733.19" y="1679.5" ></text>
</g>
<g >
<title>ep_unregister_pollwait.isra.10 (1 samples, 0.02%)</title><rect x="458.5" y="1973" width="0.2" height="15.0" fill="rgb(224,95,29)" rx="2" ry="2" />
<text  x="461.54" y="1983.5" ></text>
</g>
<g >
<title>_raw_write_unlock_bh (1 samples, 0.02%)</title><rect x="753.1" y="1749" width="0.2" height="15.0" fill="rgb(242,10,34)" rx="2" ry="2" />
<text  x="756.13" y="1759.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="750.1" y="1605" width="0.2" height="15.0" fill="rgb(243,131,6)" rx="2" ry="2" />
<text  x="753.12" y="1615.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="1023.4" y="2021" width="0.4" height="15.0" fill="rgb(226,116,47)" rx="2" ry="2" />
<text  x="1026.38" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="532.4" y="1957" width="0.6" height="15.0" fill="rgb(217,74,15)" rx="2" ry="2" />
<text  x="535.39" y="1967.5" ></text>
</g>
<g >
<title>task_work_add (1 samples, 0.02%)</title><rect x="826.0" y="1797" width="0.2" height="15.0" fill="rgb(235,73,41)" rx="2" ry="2" />
<text  x="828.98" y="1807.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="54.5" y="1909" width="0.2" height="15.0" fill="rgb(238,204,36)" rx="2" ry="2" />
<text  x="57.47" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBuffer::noReply (2 samples, 0.03%)</title><rect x="900.2" y="2005" width="0.4" height="15.0" fill="rgb(237,7,14)" rx="2" ry="2" />
<text  x="903.23" y="2015.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="84.1" y="1733" width="0.2" height="15.0" fill="rgb(214,73,6)" rx="2" ry="2" />
<text  x="87.05" y="1743.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="299.6" y="1717" width="0.2" height="15.0" fill="rgb(243,120,38)" rx="2" ry="2" />
<text  x="302.57" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="968.2" y="1973" width="0.2" height="15.0" fill="rgb(242,130,39)" rx="2" ry="2" />
<text  x="971.25" y="1983.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="205.8" y="1861" width="0.2" height="15.0" fill="rgb(210,28,3)" rx="2" ry="2" />
<text  x="208.79" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="238.0" y="1733" width="0.2" height="15.0" fill="rgb(243,108,33)" rx="2" ry="2" />
<text  x="240.99" y="1743.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="924.6" y="2021" width="0.2" height="15.0" fill="rgb(206,50,4)" rx="2" ry="2" />
<text  x="927.58" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="56.7" y="1877" width="0.2" height="15.0" fill="rgb(220,117,12)" rx="2" ry="2" />
<text  x="59.68" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="928.4" y="1989" width="0.2" height="15.0" fill="rgb(228,199,48)" rx="2" ry="2" />
<text  x="931.40" y="1999.5" ></text>
</g>
<g >
<title>folly::SocketAddress::AddrStorage::AddrStorage (4 samples, 0.07%)</title><rect x="568.6" y="1989" width="0.8" height="15.0" fill="rgb(207,10,52)" rx="2" ry="2" />
<text  x="571.61" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="324.1" y="1989" width="0.4" height="15.0" fill="rgb(224,167,26)" rx="2" ry="2" />
<text  x="327.12" y="1999.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.03%)</title><rect x="1035.7" y="2053" width="0.4" height="15.0" fill="rgb(243,127,43)" rx="2" ry="2" />
<text  x="1038.66" y="2063.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="631.6" y="1877" width="0.2" height="15.0" fill="rgb(252,133,30)" rx="2" ry="2" />
<text  x="634.59" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1111.3" y="1685" width="0.2" height="15.0" fill="rgb(245,4,51)" rx="2" ry="2" />
<text  x="1114.32" y="1695.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="880.1" y="1797" width="0.2" height="15.0" fill="rgb(212,1,7)" rx="2" ry="2" />
<text  x="883.11" y="1807.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="82.8" y="1957" width="0.2" height="15.0" fill="rgb(240,67,10)" rx="2" ry="2" />
<text  x="85.84" y="1967.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="790.4" y="1365" width="0.2" height="15.0" fill="rgb(242,101,29)" rx="2" ry="2" />
<text  x="793.36" y="1375.5" ></text>
</g>
<g >
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="801.2" y="1653" width="0.6" height="15.0" fill="rgb(250,184,6)" rx="2" ry="2" />
<text  x="804.23" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="433.6" y="1973" width="0.2" height="15.0" fill="rgb(226,190,30)" rx="2" ry="2" />
<text  x="436.58" y="1983.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="567.4" y="1957" width="0.4" height="15.0" fill="rgb(216,74,36)" rx="2" ry="2" />
<text  x="570.40" y="1967.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="649.3" y="2021" width="0.2" height="15.0" fill="rgb(216,126,25)" rx="2" ry="2" />
<text  x="652.30" y="2031.5" ></text>
</g>
<g >
<title>__fget (15 samples, 0.26%)</title><rect x="313.3" y="1909" width="3.0" height="15.0" fill="rgb(228,32,48)" rx="2" ry="2" />
<text  x="316.25" y="1919.5" ></text>
</g>
<g >
<title>folly::IOBuf::freeExtBuffer (3 samples, 0.05%)</title><rect x="1173.1" y="2005" width="0.6" height="15.0" fill="rgb(226,74,42)" rx="2" ry="2" />
<text  x="1176.10" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="64.1" y="1861" width="0.2" height="15.0" fill="rgb(209,206,14)" rx="2" ry="2" />
<text  x="67.13" y="1871.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="167.8" y="1941" width="0.2" height="15.0" fill="rgb(210,116,38)" rx="2" ry="2" />
<text  x="170.76" y="1951.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1075.9" y="1797" width="0.2" height="15.0" fill="rgb(233,88,36)" rx="2" ry="2" />
<text  x="1078.90" y="1807.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1181.1" y="1877" width="0.2" height="15.0" fill="rgb(236,83,40)" rx="2" ry="2" />
<text  x="1184.15" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="812.5" y="1365" width="0.2" height="15.0" fill="rgb(249,27,14)" rx="2" ry="2" />
<text  x="815.50" y="1375.5" ></text>
</g>
<g >
<title>folly::event_ref_flags (2 samples, 0.03%)</title><rect x="70.6" y="1877" width="0.4" height="15.0" fill="rgb(206,197,43)" rx="2" ry="2" />
<text  x="73.57" y="1887.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="255.1" y="1861" width="0.2" height="15.0" fill="rgb(226,78,22)" rx="2" ry="2" />
<text  x="258.10" y="1871.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="188.3" y="1941" width="0.2" height="15.0" fill="rgb(224,226,42)" rx="2" ry="2" />
<text  x="191.29" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::str_to_integral&lt;int&gt; (1 samples, 0.02%)</title><rect x="976.3" y="2037" width="0.2" height="15.0" fill="rgb(208,218,28)" rx="2" ry="2" />
<text  x="979.30" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::checkForImmediateRead (59 samples, 1.01%)</title><rect x="1155.2" y="2021" width="11.9" height="15.0" fill="rgb(207,35,48)" rx="2" ry="2" />
<text  x="1158.19" y="2031.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="531.4" y="1989" width="0.6" height="15.0" fill="rgb(226,43,40)" rx="2" ry="2" />
<text  x="534.38" y="1999.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1152.2" y="1989" width="0.2" height="15.0" fill="rgb(210,37,21)" rx="2" ry="2" />
<text  x="1155.17" y="1999.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="152.7" y="389" width="0.2" height="15.0" fill="rgb(223,126,26)" rx="2" ry="2" />
<text  x="155.67" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="862.8" y="1845" width="0.2" height="15.0" fill="rgb(238,155,15)" rx="2" ry="2" />
<text  x="865.80" y="1855.5" ></text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (2 samples, 0.03%)</title><rect x="124.7" y="37" width="0.4" height="15.0" fill="rgb(244,123,35)" rx="2" ry="2" />
<text  x="127.70" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="273.8" y="1733" width="0.2" height="15.0" fill="rgb(218,112,7)" rx="2" ry="2" />
<text  x="276.81" y="1743.5" ></text>
</g>
<g >
<title>sock_put (1 samples, 0.02%)</title><rect x="1058.2" y="1733" width="0.2" height="15.0" fill="rgb(217,10,39)" rx="2" ry="2" />
<text  x="1061.20" y="1743.5" ></text>
</g>
<g >
<title>folly::IPAddress::isV4 (1 samples, 0.02%)</title><rect x="597.4" y="1957" width="0.2" height="15.0" fill="rgb(236,202,22)" rx="2" ry="2" />
<text  x="600.38" y="1967.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::data (1 samples, 0.02%)</title><rect x="1005.7" y="2005" width="0.2" height="15.0" fill="rgb(237,146,12)" rx="2" ry="2" />
<text  x="1008.68" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="310.6" y="1861" width="0.2" height="15.0" fill="rgb(233,199,14)" rx="2" ry="2" />
<text  x="313.63" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="188.5" y="1989" width="0.2" height="15.0" fill="rgb(251,2,17)" rx="2" ry="2" />
<text  x="191.49" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="721.1" y="1781" width="0.4" height="15.0" fill="rgb(205,34,10)" rx="2" ry="2" />
<text  x="724.14" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.02%)</title><rect x="516.7" y="1557" width="0.2" height="15.0" fill="rgb(214,166,29)" rx="2" ry="2" />
<text  x="519.69" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1153.0" y="1989" width="0.2" height="15.0" fill="rgb(243,124,44)" rx="2" ry="2" />
<text  x="1155.97" y="1999.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="743.7" y="1749" width="0.2" height="15.0" fill="rgb(237,127,19)" rx="2" ry="2" />
<text  x="746.68" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="83.9" y="1877" width="0.4" height="15.0" fill="rgb(232,134,50)" rx="2" ry="2" />
<text  x="86.85" y="1887.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (86 samples, 1.47%)</title><rect x="492.9" y="1877" width="17.4" height="15.0" fill="rgb(243,203,38)" rx="2" ry="2" />
<text  x="495.95" y="1887.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::tuple&lt;folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt;, true&gt; (10 samples, 0.17%)</title><rect x="49.8" y="1909" width="2.1" height="15.0" fill="rgb(243,11,7)" rx="2" ry="2" />
<text  x="52.84" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (2 samples, 0.03%)</title><rect x="441.4" y="1845" width="0.4" height="15.0" fill="rgb(245,126,21)" rx="2" ry="2" />
<text  x="444.43" y="1855.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="529.6" y="1989" width="0.2" height="15.0" fill="rgb(232,141,14)" rx="2" ry="2" />
<text  x="532.57" y="1999.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (5 samples, 0.09%)</title><rect x="311.0" y="1893" width="1.0" height="15.0" fill="rgb(237,222,2)" rx="2" ry="2" />
<text  x="314.04" y="1903.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="433.6" y="1845" width="0.2" height="15.0" fill="rgb(211,71,12)" rx="2" ry="2" />
<text  x="436.58" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="548.9" y="1909" width="0.2" height="15.0" fill="rgb(254,192,3)" rx="2" ry="2" />
<text  x="551.89" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::MessageQueue&lt;facebook::memcache::mcrouter::ProxyMessage&gt;::attachEventBase (2 samples, 0.03%)</title><rect x="173.0" y="1957" width="0.4" height="15.0" fill="rgb(230,181,0)" rx="2" ry="2" />
<text  x="175.99" y="1967.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="920.6" y="1925" width="0.2" height="15.0" fill="rgb(240,43,27)" rx="2" ry="2" />
<text  x="923.56" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;facebook::memcache::Fifo&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.05%)</title><rect x="213.0" y="2021" width="0.6" height="15.0" fill="rgb(239,11,17)" rx="2" ry="2" />
<text  x="216.04" y="2031.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="707.1" y="1845" width="0.2" height="15.0" fill="rgb(233,159,30)" rx="2" ry="2" />
<text  x="710.05" y="1855.5" ></text>
</g>
<g >
<title>boost::operators_impl::less_than_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt; &gt;::less_than_comparable1 (1 samples, 0.02%)</title><rect x="569.6" y="1973" width="0.2" height="15.0" fill="rgb(237,47,26)" rx="2" ry="2" />
<text  x="572.61" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::get (2 samples, 0.03%)</title><rect x="207.8" y="2021" width="0.4" height="15.0" fill="rgb(217,88,54)" rx="2" ry="2" />
<text  x="210.81" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="454.7" y="1861" width="0.2" height="15.0" fill="rgb(249,133,12)" rx="2" ry="2" />
<text  x="457.71" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="152.3" y="261" width="0.2" height="15.0" fill="rgb(212,62,6)" rx="2" ry="2" />
<text  x="155.27" y="271.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="88.9" y="1877" width="0.2" height="15.0" fill="rgb(206,67,47)" rx="2" ry="2" />
<text  x="91.88" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1170.3" y="1877" width="0.2" height="15.0" fill="rgb(252,193,33)" rx="2" ry="2" />
<text  x="1173.28" y="1887.5" ></text>
</g>
<g >
<title>__vsnprintf_chk (5 samples, 0.09%)</title><rect x="1127.4" y="2053" width="1.0" height="15.0" fill="rgb(234,161,15)" rx="2" ry="2" />
<text  x="1130.42" y="2063.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="1149.2" y="1621" width="0.2" height="15.0" fill="rgb(220,66,40)" rx="2" ry="2" />
<text  x="1152.15" y="1631.5" ></text>
</g>
<g >
<title>folly::RequestContext::getStaticContext (1 samples, 0.02%)</title><rect x="205.4" y="1973" width="0.2" height="15.0" fill="rgb(214,68,41)" rx="2" ry="2" />
<text  x="208.39" y="1983.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="809.5" y="1493" width="0.2" height="15.0" fill="rgb(238,174,18)" rx="2" ry="2" />
<text  x="812.48" y="1503.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="832.0" y="1781" width="0.2" height="15.0" fill="rgb(232,15,15)" rx="2" ry="2" />
<text  x="835.02" y="1791.5" ></text>
</g>
<g >
<title>move_addr_to_user (6 samples, 0.10%)</title><rect x="590.7" y="1861" width="1.3" height="15.0" fill="rgb(226,17,11)" rx="2" ry="2" />
<text  x="593.74" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1156.0" y="1893" width="0.2" height="15.0" fill="rgb(214,79,16)" rx="2" ry="2" />
<text  x="1158.99" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="606.6" y="1973" width="0.2" height="15.0" fill="rgb(230,100,6)" rx="2" ry="2" />
<text  x="609.64" y="1983.5" ></text>
</g>
<g >
<title>security_sock_graft (1 samples, 0.02%)</title><rect x="353.3" y="1941" width="0.2" height="15.0" fill="rgb(246,56,53)" rx="2" ry="2" />
<text  x="356.29" y="1951.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="631.4" y="1653" width="0.2" height="15.0" fill="rgb(246,228,23)" rx="2" ry="2" />
<text  x="634.39" y="1663.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2 samples, 0.03%)</title><rect x="842.1" y="1893" width="0.4" height="15.0" fill="rgb(235,107,15)" rx="2" ry="2" />
<text  x="845.08" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::get_next (2 samples, 0.03%)</title><rect x="845.1" y="1909" width="0.4" height="15.0" fill="rgb(222,163,40)" rx="2" ry="2" />
<text  x="848.10" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1153.0" y="1957" width="0.2" height="15.0" fill="rgb(222,136,46)" rx="2" ry="2" />
<text  x="1155.97" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="730.2" y="1445" width="0.2" height="15.0" fill="rgb(234,146,20)" rx="2" ry="2" />
<text  x="733.19" y="1455.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (5 samples, 0.09%)</title><rect x="573.6" y="1973" width="1.0" height="15.0" fill="rgb(205,30,37)" rx="2" ry="2" />
<text  x="576.64" y="1983.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1156.0" y="1925" width="0.2" height="15.0" fill="rgb(209,44,8)" rx="2" ry="2" />
<text  x="1158.99" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="83.9" y="1845" width="0.4" height="15.0" fill="rgb(228,42,25)" rx="2" ry="2" />
<text  x="86.85" y="1855.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="177.4" y="1845" width="0.2" height="15.0" fill="rgb(243,107,22)" rx="2" ry="2" />
<text  x="180.42" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="83.9" y="1925" width="0.4" height="15.0" fill="rgb(236,224,30)" rx="2" ry="2" />
<text  x="86.85" y="1935.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1085.0" y="1877" width="0.2" height="15.0" fill="rgb(217,22,8)" rx="2" ry="2" />
<text  x="1087.96" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyDestinationBase::maySend (1 samples, 0.02%)</title><rect x="909.3" y="2005" width="0.2" height="15.0" fill="rgb(215,56,9)" rx="2" ry="2" />
<text  x="912.29" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="1023.0" y="1925" width="0.4" height="15.0" fill="rgb(232,133,53)" rx="2" ry="2" />
<text  x="1025.98" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="100.8" y="1941" width="0.2" height="15.0" fill="rgb(249,184,53)" rx="2" ry="2" />
<text  x="103.75" y="1951.5" ></text>
</g>
<g >
<title>evmap_io_active_ (59 samples, 1.01%)</title><rect x="1130.8" y="2053" width="11.9" height="15.0" fill="rgb(227,108,46)" rx="2" ry="2" />
<text  x="1133.84" y="2063.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="831.0" y="1573" width="0.2" height="15.0" fill="rgb(224,9,20)" rx="2" ry="2" />
<text  x="834.01" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="265.2" y="1797" width="0.2" height="15.0" fill="rgb(212,204,28)" rx="2" ry="2" />
<text  x="268.16" y="1807.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="848.7" y="1941" width="0.2" height="15.0" fill="rgb(244,189,32)" rx="2" ry="2" />
<text  x="851.72" y="1951.5" ></text>
</g>
<g >
<title>sys_getsockname (22 samples, 0.38%)</title><rect x="588.5" y="1893" width="4.5" height="15.0" fill="rgb(230,156,24)" rx="2" ry="2" />
<text  x="591.53" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1120.4" y="1973" width="0.2" height="15.0" fill="rgb(231,65,6)" rx="2" ry="2" />
<text  x="1123.38" y="1983.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="316.1" y="1605" width="0.2" height="15.0" fill="rgb(247,107,30)" rx="2" ry="2" />
<text  x="319.07" y="1615.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.11 (1 samples, 0.02%)</title><rect x="790.4" y="1429" width="0.2" height="15.0" fill="rgb(250,160,32)" rx="2" ry="2" />
<text  x="793.36" y="1439.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="13.4" y="1973" width="0.2" height="15.0" fill="rgb(218,201,31)" rx="2" ry="2" />
<text  x="16.42" y="1983.5" ></text>
</g>
<g >
<title>free (63 samples, 1.07%)</title><rect x="1011.1" y="2037" width="12.7" height="15.0" fill="rgb(243,131,4)" rx="2" ry="2" />
<text  x="1014.11" y="2047.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cacheLocalAddress (80 samples, 1.36%)</title><rect x="579.5" y="2005" width="16.1" height="15.0" fill="rgb(212,161,41)" rx="2" ry="2" />
<text  x="582.47" y="2015.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="707.3" y="1605" width="0.2" height="15.0" fill="rgb(254,54,22)" rx="2" ry="2" />
<text  x="710.25" y="1615.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="255.1" y="1685" width="0.2" height="15.0" fill="rgb(253,96,36)" rx="2" ry="2" />
<text  x="258.10" y="1695.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (9 samples, 0.15%)</title><rect x="580.1" y="1957" width="1.8" height="15.0" fill="rgb(219,21,47)" rx="2" ry="2" />
<text  x="583.08" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;folly::IOBuf*, std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, std::allocator&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;folly::IOBuf*&gt;, std::hash&lt;folly::IOBuf*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (1 samples, 0.02%)</title><rect x="85.5" y="1941" width="0.2" height="15.0" fill="rgb(224,98,6)" rx="2" ry="2" />
<text  x="88.46" y="1951.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (1 samples, 0.02%)</title><rect x="71.4" y="1957" width="0.2" height="15.0" fill="rgb(246,134,11)" rx="2" ry="2" />
<text  x="74.37" y="1967.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::RequestContext&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="183.3" y="1909" width="0.2" height="15.0" fill="rgb(231,54,3)" rx="2" ry="2" />
<text  x="186.26" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="816.5" y="1717" width="0.2" height="15.0" fill="rgb(209,119,17)" rx="2" ry="2" />
<text  x="819.52" y="1727.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="721.3" y="1509" width="0.2" height="15.0" fill="rgb(208,29,9)" rx="2" ry="2" />
<text  x="724.34" y="1519.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (24 samples, 0.41%)</title><rect x="938.1" y="1925" width="4.8" height="15.0" fill="rgb(252,99,44)" rx="2" ry="2" />
<text  x="941.06" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.09%)</title><rect x="933.6" y="1941" width="1.0" height="15.0" fill="rgb(222,166,1)" rx="2" ry="2" />
<text  x="936.64" y="1951.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::ReadResult::ReadResult (1 samples, 0.02%)</title><rect x="41.4" y="1973" width="0.2" height="15.0" fill="rgb(249,65,53)" rx="2" ry="2" />
<text  x="44.39" y="1983.5" ></text>
</g>
<g >
<title>do_tcp_setsockopt.isra.38 (1 samples, 0.02%)</title><rect x="682.3" y="1909" width="0.2" height="15.0" fill="rgb(229,177,11)" rx="2" ry="2" />
<text  x="685.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (59 samples, 1.01%)</title><rect x="912.3" y="2021" width="11.9" height="15.0" fill="rgb(245,192,27)" rx="2" ry="2" />
<text  x="915.31" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="672.0" y="2005" width="0.2" height="15.0" fill="rgb(211,122,28)" rx="2" ry="2" />
<text  x="675.04" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.07%)</title><rect x="114.8" y="2005" width="0.8" height="15.0" fill="rgb(243,154,44)" rx="2" ry="2" />
<text  x="117.84" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="602.0" y="1893" width="0.2" height="15.0" fill="rgb(244,11,13)" rx="2" ry="2" />
<text  x="605.01" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="968.2" y="1893" width="0.2" height="15.0" fill="rgb(229,167,8)" rx="2" ry="2" />
<text  x="971.25" y="1903.5" ></text>
</g>
<g >
<title>__skb_clone (9 samples, 0.15%)</title><rect x="298.0" y="1797" width="1.8" height="15.0" fill="rgb(247,91,7)" rx="2" ry="2" />
<text  x="300.96" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="674.1" y="1941" width="0.2" height="15.0" fill="rgb(228,208,28)" rx="2" ry="2" />
<text  x="677.05" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1168.7" y="1941" width="0.2" height="15.0" fill="rgb(206,184,21)" rx="2" ry="2" />
<text  x="1171.67" y="1951.5" ></text>
</g>
<g >
<title>sk_reset_timer (42 samples, 0.72%)</title><rect x="804.2" y="1637" width="8.5" height="15.0" fill="rgb(222,53,19)" rx="2" ry="2" />
<text  x="807.25" y="1647.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (4 samples, 0.07%)</title><rect x="317.3" y="1989" width="0.8" height="15.0" fill="rgb(232,4,36)" rx="2" ry="2" />
<text  x="320.27" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="570.0" y="2005" width="0.2" height="15.0" fill="rgb(210,156,0)" rx="2" ry="2" />
<text  x="573.02" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::ConnectionTracker::touch (2 samples, 0.03%)</title><rect x="696.0" y="1989" width="0.4" height="15.0" fill="rgb(250,127,44)" rx="2" ry="2" />
<text  x="698.99" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="453" width="28.8" height="15.0" fill="rgb(245,222,5)" rx="2" ry="2" />
<text  x="127.10" y="463.5" >[u..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1148.7" y="1893" width="0.2" height="15.0" fill="rgb(251,170,52)" rx="2" ry="2" />
<text  x="1151.75" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="64.7" y="1893" width="0.2" height="15.0" fill="rgb(215,147,38)" rx="2" ry="2" />
<text  x="67.73" y="1903.5" ></text>
</g>
<g >
<title>folly::Range&lt;char const*&gt;::empty (1 samples, 0.02%)</title><rect x="973.1" y="1989" width="0.2" height="15.0" fill="rgb(236,190,8)" rx="2" ry="2" />
<text  x="976.08" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1 samples, 0.02%)</title><rect x="523.3" y="1941" width="0.2" height="15.0" fill="rgb(231,7,51)" rx="2" ry="2" />
<text  x="526.33" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (141 samples, 2.40%)</title><rect x="124.3" y="357" width="28.4" height="15.0" fill="rgb(246,32,10)" rx="2" ry="2" />
<text  x="127.30" y="367.5" >[u..</text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="891.0" y="1925" width="0.4" height="15.0" fill="rgb(234,25,45)" rx="2" ry="2" />
<text  x="893.98" y="1935.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1111.3" y="1813" width="0.2" height="15.0" fill="rgb(249,95,19)" rx="2" ry="2" />
<text  x="1114.32" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="844.1" y="1605" width="0.2" height="15.0" fill="rgb(221,8,10)" rx="2" ry="2" />
<text  x="847.09" y="1615.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.14%)</title><rect x="10.6" y="1941" width="1.6" height="15.0" fill="rgb(223,217,32)" rx="2" ry="2" />
<text  x="13.60" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="890.8" y="1973" width="0.2" height="15.0" fill="rgb(229,181,45)" rx="2" ry="2" />
<text  x="893.77" y="1983.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="301.8" y="1813" width="0.2" height="15.0" fill="rgb(249,104,45)" rx="2" ry="2" />
<text  x="304.78" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt; (4 samples, 0.07%)</title><rect x="84.3" y="1925" width="0.8" height="15.0" fill="rgb(246,59,17)" rx="2" ry="2" />
<text  x="87.25" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="920.0" y="1973" width="0.2" height="15.0" fill="rgb(218,96,16)" rx="2" ry="2" />
<text  x="922.95" y="1983.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="230.5" y="1589" width="0.2" height="15.0" fill="rgb(222,212,0)" rx="2" ry="2" />
<text  x="233.55" y="1599.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="55.3" y="1909" width="0.2" height="15.0" fill="rgb(251,68,33)" rx="2" ry="2" />
<text  x="58.28" y="1919.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="173.2" y="1893" width="0.2" height="15.0" fill="rgb(213,186,5)" rx="2" ry="2" />
<text  x="176.20" y="1903.5" ></text>
</g>
<g >
<title>__slab_free (19 samples, 0.32%)</title><rect x="737.0" y="1653" width="3.9" height="15.0" fill="rgb(253,35,50)" rx="2" ry="2" />
<text  x="740.04" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="180.6" y="1861" width="0.4" height="15.0" fill="rgb(206,40,16)" rx="2" ry="2" />
<text  x="183.64" y="1871.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (1 samples, 0.02%)</title><rect x="115.2" y="1717" width="0.2" height="15.0" fill="rgb(224,222,2)" rx="2" ry="2" />
<text  x="118.24" y="1727.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="941.5" y="1861" width="0.2" height="15.0" fill="rgb(247,190,22)" rx="2" ry="2" />
<text  x="944.48" y="1871.5" ></text>
</g>
<g >
<title>import_single_range (2 samples, 0.03%)</title><rect x="1119.8" y="1989" width="0.4" height="15.0" fill="rgb(217,38,10)" rx="2" ry="2" />
<text  x="1122.77" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="56.7" y="1749" width="0.2" height="15.0" fill="rgb(219,187,6)" rx="2" ry="2" />
<text  x="59.68" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="259.1" y="1893" width="0.2" height="15.0" fill="rgb(226,143,29)" rx="2" ry="2" />
<text  x="262.12" y="1903.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="548.9" y="1877" width="0.2" height="15.0" fill="rgb(252,99,31)" rx="2" ry="2" />
<text  x="551.89" y="1887.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="1126.6" y="1893" width="0.2" height="15.0" fill="rgb(240,149,15)" rx="2" ry="2" />
<text  x="1129.61" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="888.2" y="1701" width="0.2" height="15.0" fill="rgb(221,18,45)" rx="2" ry="2" />
<text  x="891.16" y="1711.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="971.1" y="2021" width="0.2" height="15.0" fill="rgb(231,157,32)" rx="2" ry="2" />
<text  x="974.06" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (11 samples, 0.19%)</title><rect x="281.9" y="1669" width="2.2" height="15.0" fill="rgb(249,52,50)" rx="2" ry="2" />
<text  x="284.86" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 2.29%)</title><rect x="124.3" y="101" width="27.0" height="15.0" fill="rgb(223,34,38)" rx="2" ry="2" />
<text  x="127.30" y="111.5" >[..</text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1365" width="30.0" height="15.0" fill="rgb(247,194,42)" rx="2" ry="2" />
<text  x="127.10" y="1375.5" >[u..</text>
</g>
<g >
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="796.8" y="1493" width="0.4" height="15.0" fill="rgb(221,51,15)" rx="2" ry="2" />
<text  x="799.80" y="1503.5" ></text>
</g>
<g >
<title>folly::netops::detail::SocketFileDescriptorMap::fdToSocket (1 samples, 0.02%)</title><rect x="27.7" y="1973" width="0.2" height="15.0" fill="rgb(211,14,16)" rx="2" ry="2" />
<text  x="30.71" y="1983.5" ></text>
</g>
<g >
<title>SYSC_getsockname (20 samples, 0.34%)</title><rect x="588.7" y="1877" width="4.1" height="15.0" fill="rgb(254,54,51)" rx="2" ry="2" />
<text  x="591.73" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::AsciiSerializedRequest::addStrings&lt;folly::Range&lt;char const*&gt;, char const  (1 samples, 0.02%)</title><rect x="978.1" y="2005" width="0.2" height="15.0" fill="rgb(210,184,38)" rx="2" ry="2" />
<text  x="981.11" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="888.6" y="1925" width="0.2" height="15.0" fill="rgb(223,153,37)" rx="2" ry="2" />
<text  x="891.56" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (3 samples, 0.05%)</title><rect x="1054.8" y="1909" width="0.6" height="15.0" fill="rgb(241,153,14)" rx="2" ry="2" />
<text  x="1057.77" y="1919.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="307.2" y="1685" width="0.2" height="15.0" fill="rgb(237,37,31)" rx="2" ry="2" />
<text  x="310.21" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="19.1" y="1957" width="0.2" height="15.0" fill="rgb(207,35,51)" rx="2" ry="2" />
<text  x="22.06" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="916.9" y="1909" width="0.2" height="15.0" fill="rgb(248,41,44)" rx="2" ry="2" />
<text  x="919.93" y="1919.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.02%)</title><rect x="365.2" y="1893" width="0.2" height="15.0" fill="rgb(208,94,14)" rx="2" ry="2" />
<text  x="368.17" y="1903.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="307.0" y="1861" width="0.2" height="15.0" fill="rgb(253,131,14)" rx="2" ry="2" />
<text  x="310.01" y="1871.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="919.8" y="1893" width="0.2" height="15.0" fill="rgb(223,169,7)" rx="2" ry="2" />
<text  x="922.75" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (18 samples, 0.31%)</title><rect x="143.8" y="53" width="3.6" height="15.0" fill="rgb(248,81,44)" rx="2" ry="2" />
<text  x="146.82" y="63.5" ></text>
</g>
<g >
<title>tcp_create_openreq_child (1 samples, 0.02%)</title><rect x="114.8" y="1765" width="0.2" height="15.0" fill="rgb(247,120,8)" rx="2" ry="2" />
<text  x="117.84" y="1775.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="114.6" y="1957" width="0.2" height="15.0" fill="rgb(235,70,23)" rx="2" ry="2" />
<text  x="117.64" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="916.9" y="1717" width="0.2" height="15.0" fill="rgb(214,152,5)" rx="2" ry="2" />
<text  x="919.93" y="1727.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="858.8" y="1973" width="0.2" height="15.0" fill="rgb(249,73,12)" rx="2" ry="2" />
<text  x="861.78" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="844.1" y="1701" width="0.2" height="15.0" fill="rgb(232,96,45)" rx="2" ry="2" />
<text  x="847.09" y="1711.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="617.1" y="1893" width="0.2" height="15.0" fill="rgb(234,21,13)" rx="2" ry="2" />
<text  x="620.10" y="1903.5" ></text>
</g>
<g >
<title>inet_csk_destroy_sock (1 samples, 0.02%)</title><rect x="115.2" y="1749" width="0.2" height="15.0" fill="rgb(244,91,8)" rx="2" ry="2" />
<text  x="118.24" y="1759.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="369.8" y="1877" width="0.2" height="15.0" fill="rgb(251,15,41)" rx="2" ry="2" />
<text  x="372.80" y="1887.5" ></text>
</g>
<g >
<title>___sys_sendmsg (288 samples, 4.91%)</title><rect x="254.3" y="1957" width="57.9" height="15.0" fill="rgb(221,177,36)" rx="2" ry="2" />
<text  x="257.29" y="1967.5" >___sys..</text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="963.0" y="2005" width="0.4" height="15.0" fill="rgb(251,32,52)" rx="2" ry="2" />
<text  x="966.02" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="233.0" y="1669" width="0.2" height="15.0" fill="rgb(219,83,40)" rx="2" ry="2" />
<text  x="235.96" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="955.8" y="1941" width="0.2" height="15.0" fill="rgb(209,229,53)" rx="2" ry="2" />
<text  x="958.77" y="1951.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="880.1" y="1781" width="0.2" height="15.0" fill="rgb(244,52,15)" rx="2" ry="2" />
<text  x="883.11" y="1791.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="513.3" y="1877" width="0.2" height="15.0" fill="rgb(244,86,22)" rx="2" ry="2" />
<text  x="516.27" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="800.8" y="1397" width="0.2" height="15.0" fill="rgb(252,83,20)" rx="2" ry="2" />
<text  x="803.83" y="1407.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="19.7" y="1861" width="0.2" height="15.0" fill="rgb(228,92,7)" rx="2" ry="2" />
<text  x="22.66" y="1871.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="1164.4" y="1941" width="0.4" height="15.0" fill="rgb(216,136,24)" rx="2" ry="2" />
<text  x="1167.44" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="603.2" y="1829" width="0.2" height="15.0" fill="rgb(229,214,21)" rx="2" ry="2" />
<text  x="606.22" y="1839.5" ></text>
</g>
<g >
<title>folly::DelayedDestructionBase::DestructorGuard::~DestructorGuard (1 samples, 0.02%)</title><rect x="854.2" y="1957" width="0.2" height="15.0" fill="rgb(244,2,37)" rx="2" ry="2" />
<text  x="857.15" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (4 samples, 0.07%)</title><rect x="645.3" y="2021" width="0.8" height="15.0" fill="rgb(231,206,6)" rx="2" ry="2" />
<text  x="648.28" y="2031.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="438.2" y="1909" width="0.2" height="15.0" fill="rgb(240,61,19)" rx="2" ry="2" />
<text  x="441.21" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="701.8" y="1877" width="0.2" height="15.0" fill="rgb(250,12,14)" rx="2" ry="2" />
<text  x="704.82" y="1887.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.12 (98 samples, 1.67%)</title><rect x="472.2" y="1925" width="19.7" height="15.0" fill="rgb(236,206,24)" rx="2" ry="2" />
<text  x="475.22" y="1935.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (2 samples, 0.03%)</title><rect x="578.3" y="2021" width="0.4" height="15.0" fill="rgb(225,221,40)" rx="2" ry="2" />
<text  x="581.27" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1072.7" y="1765" width="0.2" height="15.0" fill="rgb(254,3,54)" rx="2" ry="2" />
<text  x="1075.68" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="154.9" y="1701" width="0.2" height="15.0" fill="rgb(208,40,44)" rx="2" ry="2" />
<text  x="157.88" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="165" width="28.0" height="15.0" fill="rgb(250,213,35)" rx="2" ry="2" />
<text  x="127.30" y="175.5" >[..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="627.4" y="1973" width="0.2" height="15.0" fill="rgb(245,137,54)" rx="2" ry="2" />
<text  x="630.37" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (6 samples, 0.10%)</title><rect x="635.2" y="1973" width="1.2" height="15.0" fill="rgb(235,212,27)" rx="2" ry="2" />
<text  x="638.21" y="1983.5" ></text>
</g>
<g >
<title>sock_rfree (8 samples, 0.14%)</title><rect x="1083.1" y="1893" width="1.7" height="15.0" fill="rgb(233,36,25)" rx="2" ry="2" />
<text  x="1086.15" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="930.4" y="1957" width="0.2" height="15.0" fill="rgb(218,142,14)" rx="2" ry="2" />
<text  x="933.42" y="1967.5" ></text>
</g>
<g >
<title>sock_destroy_inode (35 samples, 0.60%)</title><rect x="733.8" y="1685" width="7.1" height="15.0" fill="rgb(224,168,24)" rx="2" ry="2" />
<text  x="736.82" y="1695.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::cachePeerAddress (7 samples, 0.12%)</title><rect x="698.2" y="1957" width="1.4" height="15.0" fill="rgb(224,151,48)" rx="2" ry="2" />
<text  x="701.20" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="58.1" y="1893" width="0.2" height="15.0" fill="rgb(214,18,0)" rx="2" ry="2" />
<text  x="61.09" y="1903.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="510.7" y="1637" width="0.2" height="15.0" fill="rgb(247,1,22)" rx="2" ry="2" />
<text  x="513.65" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="240.6" y="1829" width="0.2" height="15.0" fill="rgb(214,173,2)" rx="2" ry="2" />
<text  x="243.61" y="1839.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="510.3" y="1829" width="0.2" height="15.0" fill="rgb(224,113,13)" rx="2" ry="2" />
<text  x="513.25" y="1839.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="273.8" y="1813" width="0.2" height="15.0" fill="rgb(208,73,45)" rx="2" ry="2" />
<text  x="276.81" y="1823.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.05%)</title><rect x="521.7" y="1957" width="0.6" height="15.0" fill="rgb(223,141,34)" rx="2" ry="2" />
<text  x="524.72" y="1967.5" ></text>
</g>
<g >
<title>mod_timer (11 samples, 0.19%)</title><rect x="302.4" y="1765" width="2.2" height="15.0" fill="rgb(233,203,28)" rx="2" ry="2" />
<text  x="305.38" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="237.4" y="1765" width="0.2" height="15.0" fill="rgb(229,186,53)" rx="2" ry="2" />
<text  x="240.39" y="1775.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="354.5" y="1925" width="0.4" height="15.0" fill="rgb(249,224,11)" rx="2" ry="2" />
<text  x="357.50" y="1935.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1121.6" y="1941" width="0.2" height="15.0" fill="rgb(221,24,31)" rx="2" ry="2" />
<text  x="1124.58" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="265.2" y="1589" width="0.2" height="15.0" fill="rgb(208,140,10)" rx="2" ry="2" />
<text  x="268.16" y="1599.5" ></text>
</g>
<g >
<title>rb_insert_color_cached (1 samples, 0.02%)</title><rect x="407.6" y="1989" width="0.2" height="15.0" fill="rgb(254,101,30)" rx="2" ry="2" />
<text  x="410.63" y="1999.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1149.2" y="1717" width="0.2" height="15.0" fill="rgb(211,118,7)" rx="2" ry="2" />
<text  x="1152.15" y="1727.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="152.7" y="37" width="0.2" height="15.0" fill="rgb(249,57,42)" rx="2" ry="2" />
<text  x="155.67" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1022.0" y="1973" width="0.2" height="15.0" fill="rgb(239,139,20)" rx="2" ry="2" />
<text  x="1024.97" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="831.0" y="1717" width="0.2" height="15.0" fill="rgb(217,45,12)" rx="2" ry="2" />
<text  x="834.01" y="1727.5" ></text>
</g>
<g >
<title>event_callback_activate_nolock_ (1 samples, 0.02%)</title><rect x="155.5" y="1861" width="0.2" height="15.0" fill="rgb(246,152,33)" rx="2" ry="2" />
<text  x="158.49" y="1871.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="800.8" y="1557" width="0.4" height="15.0" fill="rgb(215,165,7)" rx="2" ry="2" />
<text  x="803.83" y="1567.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setCloseOnExec (10 samples, 0.17%)</title><rect x="1171.1" y="2053" width="2.0" height="15.0" fill="rgb(252,170,20)" rx="2" ry="2" />
<text  x="1174.08" y="2063.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::count (1 samples, 0.02%)</title><rect x="531.0" y="1925" width="0.2" height="15.0" fill="rgb(254,223,12)" rx="2" ry="2" />
<text  x="533.98" y="1935.5" ></text>
</g>
<g >
<title>folly::Function&lt;void  (5 samples, 0.09%)</title><rect x="937.1" y="1925" width="1.0" height="15.0" fill="rgb(212,28,2)" rx="2" ry="2" />
<text  x="940.06" y="1935.5" ></text>
</g>
<g >
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="880.1" y="1749" width="0.2" height="15.0" fill="rgb(232,5,39)" rx="2" ry="2" />
<text  x="883.11" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_alloc_rx_buffers (1 samples, 0.02%)</title><rect x="316.9" y="1925" width="0.2" height="15.0" fill="rgb(244,198,37)" rx="2" ry="2" />
<text  x="319.87" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="903.3" y="1749" width="0.2" height="15.0" fill="rgb(207,118,18)" rx="2" ry="2" />
<text  x="906.25" y="1759.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="633.2" y="1845" width="0.2" height="15.0" fill="rgb(244,94,32)" rx="2" ry="2" />
<text  x="636.20" y="1855.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="76.0" y="1925" width="0.2" height="15.0" fill="rgb(212,173,31)" rx="2" ry="2" />
<text  x="79.00" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncTransportCertificate const, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="570.4" y="2005" width="0.2" height="15.0" fill="rgb(245,128,26)" rx="2" ry="2" />
<text  x="573.42" y="2015.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="256.5" y="1813" width="0.2" height="15.0" fill="rgb(252,213,10)" rx="2" ry="2" />
<text  x="259.50" y="1823.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="54.5" y="1701" width="0.2" height="15.0" fill="rgb(224,142,5)" rx="2" ry="2" />
<text  x="57.47" y="1711.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1153.0" y="2021" width="0.2" height="15.0" fill="rgb(235,226,0)" rx="2" ry="2" />
<text  x="1155.97" y="2031.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue (1 samples, 0.02%)</title><rect x="644.3" y="1989" width="0.2" height="15.0" fill="rgb(237,189,46)" rx="2" ry="2" />
<text  x="647.27" y="1999.5" ></text>
</g>
<g >
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1055.0" y="1813" width="0.4" height="15.0" fill="rgb(216,149,31)" rx="2" ry="2" />
<text  x="1057.98" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="543.9" y="1797" width="0.2" height="15.0" fill="rgb(211,170,43)" rx="2" ry="2" />
<text  x="546.86" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="78.2" y="1877" width="0.2" height="15.0" fill="rgb(222,124,0)" rx="2" ry="2" />
<text  x="81.22" y="1887.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="1148.7" y="1765" width="0.2" height="15.0" fill="rgb(215,79,4)" rx="2" ry="2" />
<text  x="1151.75" y="1775.5" ></text>
</g>
<g >
<title>siphash_3u32 (1 samples, 0.02%)</title><rect x="916.9" y="1637" width="0.2" height="15.0" fill="rgb(227,151,23)" rx="2" ry="2" />
<text  x="919.93" y="1647.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (15 samples, 0.26%)</title><rect x="376.2" y="1909" width="3.1" height="15.0" fill="rgb(246,183,39)" rx="2" ry="2" />
<text  x="379.23" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="257.5" y="1685" width="0.2" height="15.0" fill="rgb(252,100,22)" rx="2" ry="2" />
<text  x="260.51" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (152 samples, 2.59%)</title><rect x="123.9" y="1621" width="30.6" height="15.0" fill="rgb(249,213,36)" rx="2" ry="2" />
<text  x="126.89" y="1631.5" >[u..</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="491.7" y="1717" width="0.2" height="15.0" fill="rgb(216,209,34)" rx="2" ry="2" />
<text  x="494.74" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="668.4" y="1861" width="0.2" height="15.0" fill="rgb(212,73,20)" rx="2" ry="2" />
<text  x="671.42" y="1871.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="191.3" y="1957" width="0.2" height="15.0" fill="rgb(208,18,46)" rx="2" ry="2" />
<text  x="194.31" y="1967.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="464.0" y="1717" width="0.2" height="15.0" fill="rgb(222,44,21)" rx="2" ry="2" />
<text  x="466.97" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="277" width="28.0" height="15.0" fill="rgb(244,57,48)" rx="2" ry="2" />
<text  x="127.30" y="287.5" >[..</text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="992.0" y="1909" width="0.2" height="15.0" fill="rgb(237,105,39)" rx="2" ry="2" />
<text  x="994.99" y="1919.5" ></text>
</g>
<g >
<title>std::operator&amp; (1 samples, 0.02%)</title><rect x="195.3" y="1989" width="0.2" height="15.0" fill="rgb(208,221,50)" rx="2" ry="2" />
<text  x="198.33" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="844.1" y="1669" width="0.2" height="15.0" fill="rgb(220,71,49)" rx="2" ry="2" />
<text  x="847.09" y="1679.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="701.8" y="1813" width="0.2" height="15.0" fill="rgb(205,32,6)" rx="2" ry="2" />
<text  x="704.82" y="1823.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (5 samples, 0.09%)</title><rect x="311.0" y="1909" width="1.0" height="15.0" fill="rgb(253,39,31)" rx="2" ry="2" />
<text  x="314.04" y="1919.5" ></text>
</g>
<g >
<title>__GI___getsockname (66 samples, 1.13%)</title><rect x="582.1" y="1941" width="13.3" height="15.0" fill="rgb(221,5,37)" rx="2" ry="2" />
<text  x="585.09" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="888.4" y="1925" width="0.2" height="15.0" fill="rgb(218,44,31)" rx="2" ry="2" />
<text  x="891.36" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setReadCB (1 samples, 0.02%)</title><rect x="858.0" y="1973" width="0.2" height="15.0" fill="rgb(252,162,8)" rx="2" ry="2" />
<text  x="860.97" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::~WriteResult (2 samples, 0.03%)</title><rect x="882.9" y="1941" width="0.4" height="15.0" fill="rgb(252,104,19)" rx="2" ry="2" />
<text  x="885.93" y="1951.5" ></text>
</g>
<g >
<title>folly::IPAddressV4::IPAddressV4 (1 samples, 0.02%)</title><rect x="581.1" y="1893" width="0.2" height="15.0" fill="rgb(244,88,32)" rx="2" ry="2" />
<text  x="584.08" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26 samples, 0.44%)</title><rect x="1174.7" y="2037" width="5.2" height="15.0" fill="rgb(227,114,0)" rx="2" ry="2" />
<text  x="1177.71" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="316.3" y="2021" width="0.6" height="15.0" fill="rgb(232,155,40)" rx="2" ry="2" />
<text  x="319.27" y="2031.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="533.0" y="1973" width="0.2" height="15.0" fill="rgb(251,224,29)" rx="2" ry="2" />
<text  x="535.99" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::local&lt;facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::McrouterFiberContext&gt; (2 samples, 0.03%)</title><rect x="909.7" y="2005" width="0.4" height="15.0" fill="rgb(245,21,36)" rx="2" ry="2" />
<text  x="912.69" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="114.0" y="2037" width="0.4" height="15.0" fill="rgb(233,227,1)" rx="2" ry="2" />
<text  x="117.03" y="2047.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="342.0" y="1653" width="0.2" height="15.0" fill="rgb(206,74,22)" rx="2" ry="2" />
<text  x="345.03" y="1663.5" ></text>
</g>
<g >
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="764.6" y="1669" width="0.6" height="15.0" fill="rgb(231,100,42)" rx="2" ry="2" />
<text  x="767.60" y="1679.5" ></text>
</g>
<g >
<title>security_socket_setsockopt (3 samples, 0.05%)</title><rect x="681.7" y="1925" width="0.6" height="15.0" fill="rgb(207,122,10)" rx="2" ry="2" />
<text  x="684.70" y="1935.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1096.2" y="1877" width="0.2" height="15.0" fill="rgb(242,219,12)" rx="2" ry="2" />
<text  x="1099.23" y="1887.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="978.7" y="1957" width="0.2" height="15.0" fill="rgb(239,61,8)" rx="2" ry="2" />
<text  x="981.71" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="64.1" y="1701" width="0.2" height="15.0" fill="rgb(239,141,40)" rx="2" ry="2" />
<text  x="67.13" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="992.0" y="1845" width="0.2" height="15.0" fill="rgb(221,40,53)" rx="2" ry="2" />
<text  x="994.99" y="1855.5" ></text>
</g>
<g >
<title>folly::SocketAddress::isInitialized (1 samples, 0.02%)</title><rect x="1147.3" y="1989" width="0.2" height="15.0" fill="rgb(247,150,28)" rx="2" ry="2" />
<text  x="1150.34" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="631.4" y="1829" width="0.2" height="15.0" fill="rgb(253,32,2)" rx="2" ry="2" />
<text  x="634.39" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="407.8" y="1877" width="0.2" height="15.0" fill="rgb(234,38,45)" rx="2" ry="2" />
<text  x="410.83" y="1887.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="309.8" y="1845" width="0.2" height="15.0" fill="rgb(237,145,29)" rx="2" ry="2" />
<text  x="312.83" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="731.6" y="1701" width="0.2" height="15.0" fill="rgb(225,43,37)" rx="2" ry="2" />
<text  x="734.60" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (27 samples, 0.46%)</title><rect x="1100.9" y="1573" width="5.4" height="15.0" fill="rgb(224,2,0)" rx="2" ry="2" />
<text  x="1103.86" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="492.3" y="1893" width="0.2" height="15.0" fill="rgb(252,9,24)" rx="2" ry="2" />
<text  x="495.34" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="605.8" y="1957" width="0.2" height="15.0" fill="rgb(214,181,5)" rx="2" ry="2" />
<text  x="608.84" y="1967.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="946.7" y="1941" width="0.2" height="15.0" fill="rgb(210,103,54)" rx="2" ry="2" />
<text  x="949.72" y="1951.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (3 samples, 0.05%)</title><rect x="843.7" y="1893" width="0.6" height="15.0" fill="rgb(249,199,0)" rx="2" ry="2" />
<text  x="846.69" y="1903.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="925.4" y="2021" width="0.2" height="15.0" fill="rgb(224,221,4)" rx="2" ry="2" />
<text  x="928.39" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1085.2" y="1909" width="0.6" height="15.0" fill="rgb(220,121,24)" rx="2" ry="2" />
<text  x="1088.16" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::peekNextPending (1 samples, 0.02%)</title><rect x="1149.2" y="2053" width="0.2" height="15.0" fill="rgb(222,177,19)" rx="2" ry="2" />
<text  x="1152.15" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1493" width="30.4" height="15.0" fill="rgb(225,24,54)" rx="2" ry="2" />
<text  x="127.10" y="1503.5" >[u..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="904.9" y="1989" width="0.2" height="15.0" fill="rgb(249,98,32)" rx="2" ry="2" />
<text  x="907.86" y="1999.5" ></text>
</g>
<g >
<title>__call_rcu.constprop.69 (3 samples, 0.05%)</title><rect x="733.8" y="1653" width="0.6" height="15.0" fill="rgb(220,84,40)" rx="2" ry="2" />
<text  x="736.82" y="1663.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (2 samples, 0.03%)</title><rect x="1145.5" y="1973" width="0.4" height="15.0" fill="rgb(214,214,48)" rx="2" ry="2" />
<text  x="1148.53" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="831.0" y="1653" width="0.2" height="15.0" fill="rgb(240,216,24)" rx="2" ry="2" />
<text  x="834.01" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="930.4" y="1733" width="0.2" height="15.0" fill="rgb(217,214,26)" rx="2" ry="2" />
<text  x="933.42" y="1743.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="672.4" y="1861" width="0.2" height="15.0" fill="rgb(205,8,42)" rx="2" ry="2" />
<text  x="675.44" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (3 samples, 0.05%)</title><rect x="546.1" y="1909" width="0.6" height="15.0" fill="rgb(241,150,8)" rx="2" ry="2" />
<text  x="549.07" y="1919.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6 samples, 0.10%)</title><rect x="670.0" y="1925" width="1.2" height="15.0" fill="rgb(234,169,17)" rx="2" ry="2" />
<text  x="673.03" y="1935.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="1119.6" y="1957" width="0.2" height="15.0" fill="rgb(235,226,31)" rx="2" ry="2" />
<text  x="1122.57" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="633.2" y="1781" width="0.2" height="15.0" fill="rgb(219,85,11)" rx="2" ry="2" />
<text  x="636.20" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (338 samples, 5.76%)</title><rect x="248.3" y="2005" width="68.0" height="15.0" fill="rgb(226,85,49)" rx="2" ry="2" />
<text  x="251.25" y="2015.5" >do_sysc..</text>
</g>
<g >
<title>sk_stop_timer (1 samples, 0.02%)</title><rect x="1032.4" y="1717" width="0.2" height="15.0" fill="rgb(213,129,12)" rx="2" ry="2" />
<text  x="1035.44" y="1727.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="631.4" y="1893" width="0.2" height="15.0" fill="rgb(207,189,27)" rx="2" ry="2" />
<text  x="634.39" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::IOBuf&gt;, void&gt; (9 samples, 0.15%)</title><rect x="573.2" y="2005" width="1.8" height="15.0" fill="rgb(246,84,51)" rx="2" ry="2" />
<text  x="576.24" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="845.7" y="1653" width="0.2" height="15.0" fill="rgb(246,165,21)" rx="2" ry="2" />
<text  x="848.70" y="1663.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="371.6" y="1877" width="0.2" height="15.0" fill="rgb(246,22,10)" rx="2" ry="2" />
<text  x="374.61" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::cancelLoopCallback (8 samples, 0.14%)</title><rect x="201.2" y="1989" width="1.6" height="15.0" fill="rgb(213,212,51)" rx="2" ry="2" />
<text  x="204.17" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::__uniq_ptr_impl (2 samples, 0.03%)</title><rect x="571.4" y="1989" width="0.4" height="15.0" fill="rgb(242,58,2)" rx="2" ry="2" />
<text  x="574.43" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="100.6" y="1797" width="0.2" height="15.0" fill="rgb(243,63,0)" rx="2" ry="2" />
<text  x="103.55" y="1807.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="980.1" y="1957" width="0.2" height="15.0" fill="rgb(218,131,0)" rx="2" ry="2" />
<text  x="983.12" y="1967.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="868.4" y="1989" width="0.6" height="15.0" fill="rgb(229,162,4)" rx="2" ry="2" />
<text  x="871.44" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="906.3" y="1989" width="0.2" height="15.0" fill="rgb(222,183,12)" rx="2" ry="2" />
<text  x="909.27" y="1999.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="861.2" y="1957" width="0.4" height="15.0" fill="rgb(243,125,24)" rx="2" ry="2" />
<text  x="864.19" y="1967.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="492.7" y="1861" width="0.2" height="15.0" fill="rgb(244,130,1)" rx="2" ry="2" />
<text  x="495.75" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.7" y="2021" width="0.2" height="15.0" fill="rgb(240,44,38)" rx="2" ry="2" />
<text  x="1177.71" y="2031.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::BitReference (1 samples, 0.02%)</title><rect x="526.4" y="1925" width="0.2" height="15.0" fill="rgb(240,9,4)" rx="2" ry="2" />
<text  x="529.35" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::thread::id const&gt; (1 samples, 0.02%)</title><rect x="204.0" y="1957" width="0.2" height="15.0" fill="rgb(211,60,2)" rx="2" ry="2" />
<text  x="206.98" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1175.9" y="1973" width="0.2" height="15.0" fill="rgb(219,182,25)" rx="2" ry="2" />
<text  x="1178.91" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="42.4" y="1925" width="0.2" height="15.0" fill="rgb(205,90,13)" rx="2" ry="2" />
<text  x="45.40" y="1935.5" ></text>
</g>
<g >
<title>folly::detail::function::execSmall&lt;std::reference_wrapper&lt;folly::fibers::FiberManager::AddTaskFinallyHelper&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="975.9" y="2037" width="0.4" height="15.0" fill="rgb(208,139,26)" rx="2" ry="2" />
<text  x="978.89" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="255.1" y="1637" width="0.2" height="15.0" fill="rgb(207,187,47)" rx="2" ry="2" />
<text  x="258.10" y="1647.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="202.0" y="1877" width="0.2" height="15.0" fill="rgb(231,100,48)" rx="2" ry="2" />
<text  x="204.97" y="1887.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="279.6" y="1765" width="0.2" height="15.0" fill="rgb(254,217,12)" rx="2" ry="2" />
<text  x="282.65" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="778.5" y="1397" width="0.2" height="15.0" fill="rgb(221,90,54)" rx="2" ry="2" />
<text  x="781.49" y="1407.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="631.4" y="1797" width="0.2" height="15.0" fill="rgb(250,59,8)" rx="2" ry="2" />
<text  x="634.39" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="933" width="29.8" height="15.0" fill="rgb(214,72,52)" rx="2" ry="2" />
<text  x="127.10" y="943.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;facebook::memcache::WriteBuffer, std::default_delete&lt;facebook::memcache::WriteBuffer&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="1031.4" y="2037" width="0.2" height="15.0" fill="rgb(246,81,6)" rx="2" ry="2" />
<text  x="1034.43" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (160 samples, 2.73%)</title><rect x="123.3" y="1829" width="32.2" height="15.0" fill="rgb(251,176,54)" rx="2" ry="2" />
<text  x="126.29" y="1839.5" >[u..</text>
</g>
<g >
<title>___slab_alloc (10 samples, 0.17%)</title><rect x="367.8" y="1861" width="2.0" height="15.0" fill="rgb(242,167,37)" rx="2" ry="2" />
<text  x="370.78" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="968.2" y="1909" width="0.2" height="15.0" fill="rgb(229,96,6)" rx="2" ry="2" />
<text  x="971.25" y="1919.5" ></text>
</g>
<g >
<title>ep_remove (78 samples, 1.33%)</title><rect x="442.8" y="1973" width="15.7" height="15.0" fill="rgb(225,70,4)" rx="2" ry="2" />
<text  x="445.84" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="928.4" y="2021" width="0.2" height="15.0" fill="rgb(209,35,12)" rx="2" ry="2" />
<text  x="931.40" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="685.9" y="1861" width="0.2" height="15.0" fill="rgb(236,112,29)" rx="2" ry="2" />
<text  x="688.92" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (2 samples, 0.03%)</title><rect x="1145.5" y="1957" width="0.4" height="15.0" fill="rgb(242,108,44)" rx="2" ry="2" />
<text  x="1148.53" y="1967.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="182.3" y="1877" width="0.4" height="15.0" fill="rgb(238,224,28)" rx="2" ry="2" />
<text  x="185.25" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (7 samples, 0.12%)</title><rect x="985.8" y="1957" width="1.4" height="15.0" fill="rgb(218,177,42)" rx="2" ry="2" />
<text  x="988.75" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::iiterator_members&lt;boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="176.2" y="1845" width="0.2" height="15.0" fill="rgb(238,72,39)" rx="2" ry="2" />
<text  x="179.21" y="1855.5" ></text>
</g>
<g >
<title>__sys_sendmsg (311 samples, 5.30%)</title><rect x="253.7" y="1973" width="62.6" height="15.0" fill="rgb(231,15,16)" rx="2" ry="2" />
<text  x="256.69" y="1983.5" >__sys_..</text>
</g>
<g >
<title>folly::fibers::Fiber::resume (8 samples, 0.14%)</title><rect x="1150.4" y="2005" width="1.6" height="15.0" fill="rgb(239,205,9)" rx="2" ry="2" />
<text  x="1153.36" y="2015.5" ></text>
</g>
<g >
<title>sys_poll (1 samples, 0.02%)</title><rect x="13.4" y="2005" width="0.2" height="15.0" fill="rgb(229,102,35)" rx="2" ry="2" />
<text  x="16.42" y="2015.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientAsciiParser::initializeReplyParser&lt;facebook::memcache::McGetRequest&gt; (3 samples, 0.05%)</title><rect x="613.5" y="2037" width="0.6" height="15.0" fill="rgb(241,53,1)" rx="2" ry="2" />
<text  x="616.48" y="2047.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="919.8" y="1829" width="0.2" height="15.0" fill="rgb(248,224,31)" rx="2" ry="2" />
<text  x="922.75" y="1839.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="812.5" y="1349" width="0.2" height="15.0" fill="rgb(205,69,4)" rx="2" ry="2" />
<text  x="815.50" y="1359.5" ></text>
</g>
<g >
<title>napi_schedule_prep (1 samples, 0.02%)</title><rect x="1075.9" y="1765" width="0.2" height="15.0" fill="rgb(242,192,43)" rx="2" ry="2" />
<text  x="1078.90" y="1775.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::getInstance (2 samples, 0.03%)</title><rect x="975.5" y="2005" width="0.4" height="15.0" fill="rgb(213,50,32)" rx="2" ry="2" />
<text  x="978.49" y="2015.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="244.2" y="2037" width="0.6" height="15.0" fill="rgb(212,204,48)" rx="2" ry="2" />
<text  x="247.23" y="2047.5" ></text>
</g>
<g >
<title>get_partial_node.isra.73 (2 samples, 0.03%)</title><rect x="377.8" y="1861" width="0.4" height="15.0" fill="rgb(250,106,30)" rx="2" ry="2" />
<text  x="380.84" y="1871.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="206.0" y="1989" width="0.2" height="15.0" fill="rgb(227,186,37)" rx="2" ry="2" />
<text  x="209.00" y="1999.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.05%)</title><rect x="1054.8" y="1989" width="0.6" height="15.0" fill="rgb(254,208,33)" rx="2" ry="2" />
<text  x="1057.77" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="819.5" y="1669" width="0.2" height="15.0" fill="rgb(225,128,42)" rx="2" ry="2" />
<text  x="822.54" y="1679.5" ></text>
</g>
<g >
<title>folly::fibers::Fiber::preempt (3 samples, 0.05%)</title><rect x="170.8" y="1989" width="0.6" height="15.0" fill="rgb(247,201,5)" rx="2" ry="2" />
<text  x="173.78" y="1999.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="1057.8" y="1973" width="0.2" height="15.0" fill="rgb(241,137,2)" rx="2" ry="2" />
<text  x="1060.79" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1058.2" y="1845" width="0.2" height="15.0" fill="rgb(254,26,53)" rx="2" ry="2" />
<text  x="1061.20" y="1855.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="989.2" y="1845" width="0.4" height="15.0" fill="rgb(229,110,28)" rx="2" ry="2" />
<text  x="992.17" y="1855.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="285.5" y="1701" width="0.2" height="15.0" fill="rgb(226,108,0)" rx="2" ry="2" />
<text  x="288.48" y="1711.5" ></text>
</g>
<g >
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="273.6" y="1877" width="0.2" height="15.0" fill="rgb(247,46,52)" rx="2" ry="2" />
<text  x="276.61" y="1887.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="631.4" y="1589" width="0.2" height="15.0" fill="rgb(216,88,29)" rx="2" ry="2" />
<text  x="634.39" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="54.5" y="1797" width="0.2" height="15.0" fill="rgb(221,176,40)" rx="2" ry="2" />
<text  x="57.47" y="1807.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="930.2" y="1925" width="0.2" height="15.0" fill="rgb(246,43,53)" rx="2" ry="2" />
<text  x="933.21" y="1935.5" ></text>
</g>
<g >
<title>evmap_io_add_ (1 samples, 0.02%)</title><rect x="158.7" y="1989" width="0.2" height="15.0" fill="rgb(230,140,6)" rx="2" ry="2" />
<text  x="161.71" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::failAllWrites (1 samples, 0.02%)</title><rect x="853.9" y="1957" width="0.3" height="15.0" fill="rgb(213,136,5)" rx="2" ry="2" />
<text  x="856.95" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteTimeout::WriteTimeout (36 samples, 0.61%)</title><rect x="542.2" y="2005" width="7.3" height="15.0" fill="rgb(216,65,23)" rx="2" ry="2" />
<text  x="545.25" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="961.6" y="1941" width="0.2" height="15.0" fill="rgb(216,123,9)" rx="2" ry="2" />
<text  x="964.61" y="1951.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="121.9" y="2021" width="0.2" height="15.0" fill="rgb(215,27,3)" rx="2" ry="2" />
<text  x="124.88" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="862.8" y="1781" width="0.2" height="15.0" fill="rgb(233,229,12)" rx="2" ry="2" />
<text  x="865.80" y="1791.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1109.7" y="1941" width="0.2" height="15.0" fill="rgb(210,77,14)" rx="2" ry="2" />
<text  x="1112.71" y="1951.5" ></text>
</g>
<g >
<title>move_addr_to_user (5 samples, 0.09%)</title><rect x="354.1" y="1957" width="1.0" height="15.0" fill="rgb(209,219,7)" rx="2" ry="2" />
<text  x="357.10" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="202.8" y="1973" width="2.2" height="15.0" fill="rgb(224,0,6)" rx="2" ry="2" />
<text  x="205.78" y="1983.5" ></text>
</g>
<g >
<title>std::condition_variable::wait_for&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(251,150,16)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="652.1" y="1941" width="0.2" height="15.0" fill="rgb(222,209,30)" rx="2" ry="2" />
<text  x="655.12" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::detail::CallbackWrapper&lt;facebook::memcache::ServerMcParser&lt;facebook::memcache::McServerSession&gt;, carbon::List&lt;facebook::memcache::McGetRequest, facebook::memcache::McSetRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McAddRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McGetsRequest, facebook::memcache::McCasRequest, facebook::memcache::McIncrRequest, facebook::memcache::McDecrRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McVersionRequest, facebook::memcache::McAppendRequest, facebook::memcache::McPrependRequest, facebook::memcache::McTouchRequest, facebook::memcache::McShutdownRequest, facebook::memcache::McQuitRequest, facebook::memcache::McStatsRequest, facebook::memcache::McExecRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest&gt; &gt;::onRequest (1 samples, 0.02%)</title><rect x="911.1" y="2005" width="0.2" height="15.0" fill="rgb(218,211,19)" rx="2" ry="2" />
<text  x="914.10" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="345.4" y="1749" width="0.2" height="15.0" fill="rgb(249,174,39)" rx="2" ry="2" />
<text  x="348.45" y="1759.5" ></text>
</g>
<g >
<title>std::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt;::tuple&lt;folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt;, true&gt; (1 samples, 0.02%)</title><rect x="890.6" y="1941" width="0.2" height="15.0" fill="rgb(228,6,8)" rx="2" ry="2" />
<text  x="893.57" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="464.6" y="1701" width="0.2" height="15.0" fill="rgb(211,102,28)" rx="2" ry="2" />
<text  x="467.57" y="1711.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (2 samples, 0.03%)</title><rect x="195.9" y="1989" width="0.4" height="15.0" fill="rgb(207,203,2)" rx="2" ry="2" />
<text  x="198.93" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::deactivateFiber (1 samples, 0.02%)</title><rect x="171.2" y="1957" width="0.2" height="15.0" fill="rgb(214,199,32)" rx="2" ry="2" />
<text  x="174.18" y="1967.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="152.3" y="133" width="0.2" height="15.0" fill="rgb(217,188,7)" rx="2" ry="2" />
<text  x="155.27" y="143.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="899.4" y="1765" width="0.2" height="15.0" fill="rgb(229,200,43)" rx="2" ry="2" />
<text  x="902.43" y="1775.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="151.9" y="85" width="0.2" height="15.0" fill="rgb(254,118,31)" rx="2" ry="2" />
<text  x="154.87" y="95.5" ></text>
</g>
<g >
<title>sk_clone_lock (1 samples, 0.02%)</title><rect x="783.3" y="1285" width="0.2" height="15.0" fill="rgb(240,165,38)" rx="2" ry="2" />
<text  x="786.32" y="1295.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="903.3" y="1941" width="0.2" height="15.0" fill="rgb(253,187,53)" rx="2" ry="2" />
<text  x="906.25" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="815.1" y="1685" width="0.2" height="15.0" fill="rgb(248,121,12)" rx="2" ry="2" />
<text  x="818.11" y="1695.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1141.1" y="2005" width="0.2" height="15.0" fill="rgb(216,179,31)" rx="2" ry="2" />
<text  x="1144.10" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.05%)</title><rect x="593.0" y="1893" width="0.6" height="15.0" fill="rgb(217,106,32)" rx="2" ry="2" />
<text  x="595.96" y="1903.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="861.2" y="1973" width="0.4" height="15.0" fill="rgb(249,218,22)" rx="2" ry="2" />
<text  x="864.19" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (4 samples, 0.07%)</title><rect x="535.2" y="1925" width="0.8" height="15.0" fill="rgb(210,135,27)" rx="2" ry="2" />
<text  x="538.20" y="1935.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="19.1" y="1637" width="0.2" height="15.0" fill="rgb(249,111,32)" rx="2" ry="2" />
<text  x="22.06" y="1647.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (1 samples, 0.02%)</title><rect x="204.2" y="1957" width="0.2" height="15.0" fill="rgb(243,129,51)" rx="2" ry="2" />
<text  x="207.18" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="114.4" y="2021" width="0.4" height="15.0" fill="rgb(214,18,6)" rx="2" ry="2" />
<text  x="117.44" y="2031.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="740.7" y="1413" width="0.2" height="15.0" fill="rgb(227,17,23)" rx="2" ry="2" />
<text  x="743.66" y="1423.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="748.9" y="1781" width="1.4" height="15.0" fill="rgb(221,132,24)" rx="2" ry="2" />
<text  x="751.91" y="1791.5" ></text>
</g>
<g >
<title>__skb_clone (1 samples, 0.02%)</title><rect x="771.4" y="1669" width="0.2" height="15.0" fill="rgb(248,114,1)" rx="2" ry="2" />
<text  x="774.45" y="1679.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (2 samples, 0.03%)</title><rect x="912.7" y="1941" width="0.4" height="15.0" fill="rgb(246,162,45)" rx="2" ry="2" />
<text  x="915.71" y="1951.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1181.1" y="1781" width="0.2" height="15.0" fill="rgb(219,41,36)" rx="2" ry="2" />
<text  x="1184.15" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1177.9" y="1973" width="0.4" height="15.0" fill="rgb(219,139,30)" rx="2" ry="2" />
<text  x="1180.93" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="850.7" y="1861" width="0.2" height="15.0" fill="rgb(239,81,7)" rx="2" ry="2" />
<text  x="853.73" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.05%)</title><rect x="1087.6" y="1765" width="0.6" height="15.0" fill="rgb(212,53,3)" rx="2" ry="2" />
<text  x="1090.58" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="441.4" y="1861" width="0.4" height="15.0" fill="rgb(231,181,22)" rx="2" ry="2" />
<text  x="444.43" y="1871.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11 samples, 0.19%)</title><rect x="1164.8" y="1957" width="2.3" height="15.0" fill="rgb(213,150,40)" rx="2" ry="2" />
<text  x="1167.85" y="1967.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="19.1" y="1653" width="0.2" height="15.0" fill="rgb(239,126,42)" rx="2" ry="2" />
<text  x="22.06" y="1663.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="1184.2" y="2053" width="0.4" height="15.0" fill="rgb(239,141,30)" rx="2" ry="2" />
<text  x="1187.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="906.1" y="2021" width="0.4" height="15.0" fill="rgb(225,34,21)" rx="2" ry="2" />
<text  x="909.07" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="381.5" y="1829" width="0.2" height="15.0" fill="rgb(243,67,41)" rx="2" ry="2" />
<text  x="384.47" y="1839.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="255.1" y="1893" width="0.2" height="15.0" fill="rgb(243,64,54)" rx="2" ry="2" />
<text  x="258.10" y="1903.5" ></text>
</g>
<g >
<title>change_prot_numa (1 samples, 0.02%)</title><rect x="1054.6" y="1957" width="0.2" height="15.0" fill="rgb(208,183,16)" rx="2" ry="2" />
<text  x="1057.57" y="1967.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::post (10 samples, 0.17%)</title><rect x="1150.0" y="2037" width="2.0" height="15.0" fill="rgb(239,210,30)" rx="2" ry="2" />
<text  x="1152.96" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="19.3" y="1877" width="0.2" height="15.0" fill="rgb(249,202,29)" rx="2" ry="2" />
<text  x="22.26" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="202.0" y="1829" width="0.2" height="15.0" fill="rgb(247,226,0)" rx="2" ry="2" />
<text  x="204.97" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="58.3" y="1925" width="0.2" height="15.0" fill="rgb(226,109,12)" rx="2" ry="2" />
<text  x="61.29" y="1935.5" ></text>
</g>
<g >
<title>folly::IOBuf::allocExtBuffer (22 samples, 0.38%)</title><rect x="639.4" y="2005" width="4.5" height="15.0" fill="rgb(236,126,8)" rx="2" ry="2" />
<text  x="642.44" y="2015.5" ></text>
</g>
<g >
<title>std::chrono::operator/&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (6 samples, 0.10%)</title><rect x="522.3" y="1973" width="1.2" height="15.0" fill="rgb(209,173,41)" rx="2" ry="2" />
<text  x="525.33" y="1983.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="798.2" y="1669" width="0.2" height="15.0" fill="rgb(209,118,48)" rx="2" ry="2" />
<text  x="801.21" y="1679.5" ></text>
</g>
<g >
<title>tcp_check_req (3 samples, 0.05%)</title><rect x="1087.6" y="1685" width="0.6" height="15.0" fill="rgb(250,72,42)" rx="2" ry="2" />
<text  x="1090.58" y="1695.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback::cancelTimeout (4 samples, 0.07%)</title><rect x="518.5" y="1989" width="0.8" height="15.0" fill="rgb(225,54,5)" rx="2" ry="2" />
<text  x="521.50" y="1999.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="441.4" y="1605" width="0.2" height="15.0" fill="rgb(219,16,1)" rx="2" ry="2" />
<text  x="444.43" y="1615.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (1 samples, 0.02%)</title><rect x="1087.8" y="1605" width="0.2" height="15.0" fill="rgb(220,192,15)" rx="2" ry="2" />
<text  x="1090.78" y="1615.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="378.9" y="1829" width="0.2" height="15.0" fill="rgb(209,201,50)" rx="2" ry="2" />
<text  x="381.85" y="1839.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getAddressStr[abi:cxx11] (1 samples, 0.02%)</title><rect x="606.8" y="2021" width="0.2" height="15.0" fill="rgb(253,91,43)" rx="2" ry="2" />
<text  x="609.84" y="2031.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="845.7" y="1877" width="0.2" height="15.0" fill="rgb(233,6,37)" rx="2" ry="2" />
<text  x="848.70" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::flags (1 samples, 0.02%)</title><rect x="899.4" y="1973" width="0.2" height="15.0" fill="rgb(252,124,26)" rx="2" ry="2" />
<text  x="902.43" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.07%)</title><rect x="464.0" y="1957" width="0.8" height="15.0" fill="rgb(246,59,3)" rx="2" ry="2" />
<text  x="466.97" y="1967.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (2 samples, 0.03%)</title><rect x="954.8" y="1989" width="0.4" height="15.0" fill="rgb(209,72,44)" rx="2" ry="2" />
<text  x="957.76" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="731.6" y="1653" width="0.2" height="15.0" fill="rgb(229,20,41)" rx="2" ry="2" />
<text  x="734.60" y="1663.5" ></text>
</g>
<g >
<title>folly::EventBase::runInLoop (38 samples, 0.65%)</title><rect x="199.4" y="2005" width="7.6" height="15.0" fill="rgb(209,120,18)" rx="2" ry="2" />
<text  x="202.36" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="71.0" y="1765" width="0.2" height="15.0" fill="rgb(238,28,49)" rx="2" ry="2" />
<text  x="73.97" y="1775.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::fibers::Fiber*, folly::fibers::Fiber*&gt; (1 samples, 0.02%)</title><rect x="617.5" y="1925" width="0.2" height="15.0" fill="rgb(210,63,30)" rx="2" ry="2" />
<text  x="620.51" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="240.6" y="1845" width="0.2" height="15.0" fill="rgb(227,135,35)" rx="2" ry="2" />
<text  x="243.61" y="1855.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="944.3" y="1877" width="0.2" height="15.0" fill="rgb(254,106,4)" rx="2" ry="2" />
<text  x="947.30" y="1887.5" ></text>
</g>
<g >
<title>folly::SocketAddress::SocketAddress (1 samples, 0.02%)</title><rect x="28.1" y="1989" width="0.2" height="15.0" fill="rgb(207,180,41)" rx="2" ry="2" />
<text  x="31.11" y="1999.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="230.5" y="1685" width="0.2" height="15.0" fill="rgb(231,221,19)" rx="2" ry="2" />
<text  x="233.55" y="1695.5" ></text>
</g>
<g >
<title>__gthread_self (1 samples, 0.02%)</title><rect x="551.7" y="1941" width="0.2" height="15.0" fill="rgb(221,98,47)" rx="2" ry="2" />
<text  x="554.71" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::thrift::McGetReply::~McGetReply (1 samples, 0.02%)</title><rect x="624.5" y="2005" width="0.3" height="15.0" fill="rgb(214,102,46)" rx="2" ry="2" />
<text  x="627.55" y="2015.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="740.7" y="1573" width="0.2" height="15.0" fill="rgb(232,10,0)" rx="2" ry="2" />
<text  x="743.66" y="1583.5" ></text>
</g>
<g >
<title>inet_csk_complete_hashdance (1 samples, 0.02%)</title><rect x="233.0" y="1605" width="0.2" height="15.0" fill="rgb(206,229,30)" rx="2" ry="2" />
<text  x="235.96" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="1086.8" y="1829" width="0.2" height="15.0" fill="rgb(212,220,48)" rx="2" ry="2" />
<text  x="1089.77" y="1839.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="819.5" y="1589" width="0.2" height="15.0" fill="rgb(247,25,2)" rx="2" ry="2" />
<text  x="822.54" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="13.4" y="1957" width="0.2" height="15.0" fill="rgb(239,36,8)" rx="2" ry="2" />
<text  x="16.42" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::ServerEventHandler::handlerReady (42 samples, 0.72%)</title><rect x="24.1" y="2021" width="8.4" height="15.0" fill="rgb(211,152,53)" rx="2" ry="2" />
<text  x="27.09" y="2031.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (2 samples, 0.03%)</title><rect x="838.3" y="1925" width="0.4" height="15.0" fill="rgb(217,28,21)" rx="2" ry="2" />
<text  x="841.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (1 samples, 0.02%)</title><rect x="86.7" y="1909" width="0.2" height="15.0" fill="rgb(236,94,27)" rx="2" ry="2" />
<text  x="89.67" y="1919.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="100.8" y="1957" width="0.2" height="15.0" fill="rgb(219,129,10)" rx="2" ry="2" />
<text  x="103.75" y="1967.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::advance (1 samples, 0.02%)</title><rect x="527.2" y="1925" width="0.2" height="15.0" fill="rgb(211,0,24)" rx="2" ry="2" />
<text  x="530.16" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (1 samples, 0.02%)</title><rect x="579.7" y="1973" width="0.2" height="15.0" fill="rgb(250,10,41)" rx="2" ry="2" />
<text  x="582.68" y="1983.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="464.4" y="1669" width="0.2" height="15.0" fill="rgb(243,39,35)" rx="2" ry="2" />
<text  x="467.37" y="1679.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="267.0" y="1877" width="0.2" height="15.0" fill="rgb(241,211,49)" rx="2" ry="2" />
<text  x="269.97" y="1887.5" ></text>
</g>
<g >
<title>folly::RequestContext::setContext (16 samples, 0.27%)</title><rect x="183.9" y="1909" width="3.2" height="15.0" fill="rgb(233,175,38)" rx="2" ry="2" />
<text  x="186.86" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="407.8" y="1989" width="0.2" height="15.0" fill="rgb(208,8,10)" rx="2" ry="2" />
<text  x="410.83" y="1999.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="233.0" y="1861" width="0.2" height="15.0" fill="rgb(236,204,19)" rx="2" ry="2" />
<text  x="235.96" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="887.4" y="1813" width="0.2" height="15.0" fill="rgb(207,207,13)" rx="2" ry="2" />
<text  x="890.35" y="1823.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (33 samples, 0.56%)</title><rect x="1100.3" y="1877" width="6.6" height="15.0" fill="rgb(221,182,53)" rx="2" ry="2" />
<text  x="1103.25" y="1887.5" ></text>
</g>
<g >
<title>discard_slab (1 samples, 0.02%)</title><rect x="1072.5" y="1829" width="0.2" height="15.0" fill="rgb(231,64,10)" rx="2" ry="2" />
<text  x="1075.48" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 2.37%)</title><rect x="124.3" y="261" width="28.0" height="15.0" fill="rgb(233,17,0)" rx="2" ry="2" />
<text  x="127.30" y="271.5" >[..</text>
</g>
<g >
<title>folly::format_value::formatString&lt;std::enable_if&lt;folly::IsSomeString&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::value, void&gt;::type folly::BaseFormatter&lt;folly::Formatter&lt;false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;, false, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int&gt;::appendTo&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (19 samples, 0.32%)</title><rect x="997.6" y="2037" width="3.8" height="15.0" fill="rgb(253,210,37)" rx="2" ry="2" />
<text  x="1000.63" y="2047.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (66 samples, 1.13%)</title><rect x="784.1" y="1573" width="13.3" height="15.0" fill="rgb(249,166,10)" rx="2" ry="2" />
<text  x="787.12" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="464.0" y="1781" width="0.8" height="15.0" fill="rgb(236,160,50)" rx="2" ry="2" />
<text  x="466.97" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::markNextAsSent (2 samples, 0.03%)</title><rect x="127.3" y="37" width="0.4" height="15.0" fill="rgb(232,74,49)" rx="2" ry="2" />
<text  x="130.32" y="47.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="255.1" y="1909" width="0.2" height="15.0" fill="rgb(237,182,48)" rx="2" ry="2" />
<text  x="258.10" y="1919.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="100.6" y="1909" width="0.2" height="15.0" fill="rgb(250,52,49)" rx="2" ry="2" />
<text  x="103.55" y="1919.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="809.5" y="1301" width="0.2" height="15.0" fill="rgb(228,39,18)" rx="2" ry="2" />
<text  x="812.48" y="1311.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="345.8" y="1845" width="0.3" height="15.0" fill="rgb(232,227,52)" rx="2" ry="2" />
<text  x="348.85" y="1855.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="407.4" y="1989" width="0.2" height="15.0" fill="rgb(216,82,48)" rx="2" ry="2" />
<text  x="410.42" y="1999.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;::zero (1 samples, 0.02%)</title><rect x="529.8" y="1989" width="0.2" height="15.0" fill="rgb(222,105,44)" rx="2" ry="2" />
<text  x="532.77" y="1999.5" ></text>
</g>
<g >
<title>dev_queue_xmit (67 samples, 1.14%)</title><rect x="784.1" y="1589" width="13.5" height="15.0" fill="rgb(208,177,21)" rx="2" ry="2" />
<text  x="787.12" y="1599.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="767.4" y="1621" width="0.2" height="15.0" fill="rgb(228,10,28)" rx="2" ry="2" />
<text  x="770.42" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="342.0" y="1781" width="0.2" height="15.0" fill="rgb(223,220,28)" rx="2" ry="2" />
<text  x="345.03" y="1791.5" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 0.02%)</title><rect x="818.7" y="1589" width="0.2" height="15.0" fill="rgb(219,182,29)" rx="2" ry="2" />
<text  x="821.73" y="1599.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="923.4" y="1973" width="0.2" height="15.0" fill="rgb(233,187,21)" rx="2" ry="2" />
<text  x="926.37" y="1983.5" ></text>
</g>
<g >
<title>folly::AsyncServerSocket::dispatchSocket (5 samples, 0.09%)</title><rect x="26.3" y="1989" width="1.0" height="15.0" fill="rgb(226,222,45)" rx="2" ry="2" />
<text  x="29.30" y="1999.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::performWrite (6 samples, 0.10%)</title><rect x="1144.7" y="2005" width="1.2" height="15.0" fill="rgb(236,34,18)" rx="2" ry="2" />
<text  x="1147.72" y="2015.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="188.5" y="1893" width="0.2" height="15.0" fill="rgb(230,212,25)" rx="2" ry="2" />
<text  x="191.49" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1055.0" y="1781" width="0.4" height="15.0" fill="rgb(223,180,15)" rx="2" ry="2" />
<text  x="1057.98" y="1791.5" ></text>
</g>
<g >
<title>schedule (91 samples, 1.55%)</title><rect x="492.5" y="1925" width="18.4" height="15.0" fill="rgb(224,118,36)" rx="2" ry="2" />
<text  x="495.54" y="1935.5" ></text>
</g>
<g >
<title>tcp_make_synack (1 samples, 0.02%)</title><rect x="257.5" y="1621" width="0.2" height="15.0" fill="rgb(244,109,33)" rx="2" ry="2" />
<text  x="260.51" y="1631.5" ></text>
</g>
<g >
<title>tcp_v4_send_synack (1 samples, 0.02%)</title><rect x="257.5" y="1637" width="0.2" height="15.0" fill="rgb(218,26,35)" rx="2" ry="2" />
<text  x="260.51" y="1647.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.05%)</title><rect x="282.7" y="1365" width="0.6" height="15.0" fill="rgb(218,190,28)" rx="2" ry="2" />
<text  x="285.66" y="1375.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="795.2" y="1509" width="0.2" height="15.0" fill="rgb(242,8,0)" rx="2" ry="2" />
<text  x="798.19" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.05%)</title><rect x="1087.6" y="1925" width="0.6" height="15.0" fill="rgb(245,144,25)" rx="2" ry="2" />
<text  x="1090.58" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (4 samples, 0.07%)</title><rect x="990.0" y="1893" width="0.8" height="15.0" fill="rgb(234,143,43)" rx="2" ry="2" />
<text  x="992.98" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="257.5" y="1877" width="0.2" height="15.0" fill="rgb(214,198,9)" rx="2" ry="2" />
<text  x="260.51" y="1887.5" ></text>
</g>
<g >
<title>std::operator!=&lt;void&gt; (1 samples, 0.02%)</title><rect x="534.0" y="2005" width="0.2" height="15.0" fill="rgb(208,91,15)" rx="2" ry="2" />
<text  x="537.00" y="2015.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="631.4" y="1877" width="0.2" height="15.0" fill="rgb(211,134,9)" rx="2" ry="2" />
<text  x="634.39" y="1887.5" ></text>
</g>
<g >
<title>inet_gro_receive (1 samples, 0.02%)</title><rect x="1121.6" y="1909" width="0.2" height="15.0" fill="rgb(230,26,44)" rx="2" ry="2" />
<text  x="1124.58" y="1919.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="747.3" y="1717" width="0.2" height="15.0" fill="rgb(226,109,12)" rx="2" ry="2" />
<text  x="750.30" y="1727.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (1 samples, 0.02%)</title><rect x="533.2" y="1973" width="0.2" height="15.0" fill="rgb(246,5,49)" rx="2" ry="2" />
<text  x="536.19" y="1983.5" ></text>
</g>
<g >
<title>tcp_init_transfer (1 samples, 0.02%)</title><rect x="845.7" y="1637" width="0.2" height="15.0" fill="rgb(220,228,3)" rx="2" ry="2" />
<text  x="848.70" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;folly::fibers::Fiber, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (14 samples, 0.24%)</title><rect x="629.8" y="1941" width="2.8" height="15.0" fill="rgb(216,104,42)" rx="2" ry="2" />
<text  x="632.78" y="1951.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.02%)</title><rect x="1148.7" y="1717" width="0.2" height="15.0" fill="rgb(248,112,25)" rx="2" ry="2" />
<text  x="1151.75" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="441.4" y="1797" width="0.4" height="15.0" fill="rgb(225,33,7)" rx="2" ry="2" />
<text  x="444.43" y="1807.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="89.1" y="1893" width="0.2" height="15.0" fill="rgb(247,166,20)" rx="2" ry="2" />
<text  x="92.08" y="1903.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::get (2 samples, 0.03%)</title><rect x="851.9" y="1845" width="0.4" height="15.0" fill="rgb(212,208,20)" rx="2" ry="2" />
<text  x="854.94" y="1855.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="362.6" y="1845" width="0.2" height="15.0" fill="rgb(245,72,47)" rx="2" ry="2" />
<text  x="365.55" y="1855.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="492.3" y="1701" width="0.2" height="15.0" fill="rgb(208,155,44)" rx="2" ry="2" />
<text  x="495.34" y="1711.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (4 samples, 0.07%)</title><rect x="185.9" y="1877" width="0.8" height="15.0" fill="rgb(221,92,3)" rx="2" ry="2" />
<text  x="188.87" y="1887.5" ></text>
</g>
<g >
<title>tcp_set_state (1 samples, 0.02%)</title><rect x="832.4" y="1605" width="0.2" height="15.0" fill="rgb(227,126,21)" rx="2" ry="2" />
<text  x="835.42" y="1615.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="307.2" y="1637" width="0.2" height="15.0" fill="rgb(243,157,45)" rx="2" ry="2" />
<text  x="310.21" y="1647.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="331.4" y="1877" width="0.2" height="15.0" fill="rgb(207,188,17)" rx="2" ry="2" />
<text  x="334.36" y="1887.5" ></text>
</g>
<g >
<title>folly::EventBase::attachTimeoutManager (19 samples, 0.32%)</title><rect x="543.5" y="1973" width="3.8" height="15.0" fill="rgb(214,98,39)" rx="2" ry="2" />
<text  x="546.45" y="1983.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="158.3" y="1989" width="0.2" height="15.0" fill="rgb(233,79,8)" rx="2" ry="2" />
<text  x="161.30" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.02%)</title><rect x="1175.5" y="1989" width="0.2" height="15.0" fill="rgb(244,27,28)" rx="2" ry="2" />
<text  x="1178.51" y="1999.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.03%)</title><rect x="592.2" y="1845" width="0.4" height="15.0" fill="rgb(227,227,51)" rx="2" ry="2" />
<text  x="595.15" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="341.6" y="1925" width="0.6" height="15.0" fill="rgb(207,199,48)" rx="2" ry="2" />
<text  x="344.62" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="99.7" y="1813" width="0.2" height="15.0" fill="rgb(216,42,9)" rx="2" ry="2" />
<text  x="102.75" y="1823.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="831.0" y="1669" width="0.2" height="15.0" fill="rgb(212,173,31)" rx="2" ry="2" />
<text  x="834.01" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (150 samples, 2.56%)</title><rect x="124.1" y="1461" width="30.2" height="15.0" fill="rgb(251,52,27)" rx="2" ry="2" />
<text  x="127.10" y="1471.5" >[u..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (3 samples, 0.05%)</title><rect x="811.9" y="1573" width="0.6" height="15.0" fill="rgb(221,3,41)" rx="2" ry="2" />
<text  x="814.89" y="1583.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getCurrentFiberManager (2 samples, 0.03%)</title><rect x="992.8" y="1973" width="0.4" height="15.0" fill="rgb(227,156,27)" rx="2" ry="2" />
<text  x="995.80" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="891.2" y="1845" width="0.2" height="15.0" fill="rgb(206,37,45)" rx="2" ry="2" />
<text  x="894.18" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (2 samples, 0.03%)</title><rect x="633.0" y="1925" width="0.4" height="15.0" fill="rgb(228,124,20)" rx="2" ry="2" />
<text  x="636.00" y="1935.5" ></text>
</g>
<g >
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="740.7" y="1349" width="0.2" height="15.0" fill="rgb(213,173,24)" rx="2" ry="2" />
<text  x="743.66" y="1359.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="819.5" y="1525" width="0.2" height="15.0" fill="rgb(245,166,39)" rx="2" ry="2" />
<text  x="822.54" y="1535.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (10 samples, 0.17%)</title><rect x="246.0" y="2021" width="2.1" height="15.0" fill="rgb(237,135,7)" rx="2" ry="2" />
<text  x="249.04" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1109.3" y="1861" width="0.2" height="15.0" fill="rgb(240,145,52)" rx="2" ry="2" />
<text  x="1112.31" y="1871.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="89.1" y="1861" width="0.2" height="15.0" fill="rgb(233,143,28)" rx="2" ry="2" />
<text  x="92.08" y="1871.5" ></text>
</g>
<g >
<title>folly::EventHandler::unregisterHandler (15 samples, 0.26%)</title><rect x="68.2" y="1941" width="3.0" height="15.0" fill="rgb(205,22,29)" rx="2" ry="2" />
<text  x="71.15" y="1951.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="347.5" y="1573" width="0.2" height="15.0" fill="rgb(231,143,19)" rx="2" ry="2" />
<text  x="350.46" y="1583.5" ></text>
</g>
<g >
<title>skb_clone (1 samples, 0.02%)</title><rect x="301.2" y="1829" width="0.2" height="15.0" fill="rgb(230,24,0)" rx="2" ry="2" />
<text  x="304.18" y="1839.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="1149.2" y="1765" width="0.2" height="15.0" fill="rgb(241,144,42)" rx="2" ry="2" />
<text  x="1152.15" y="1775.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="707.1" y="1829" width="0.2" height="15.0" fill="rgb(236,181,53)" rx="2" ry="2" />
<text  x="710.05" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="230.5" y="1829" width="0.2" height="15.0" fill="rgb(245,147,42)" rx="2" ry="2" />
<text  x="233.55" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::__uniq_ptr_impl (3 samples, 0.05%)</title><rect x="48.6" y="1941" width="0.6" height="15.0" fill="rgb(231,219,6)" rx="2" ry="2" />
<text  x="51.64" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="546.3" y="1893" width="0.4" height="15.0" fill="rgb(236,104,48)" rx="2" ry="2" />
<text  x="549.27" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="100.6" y="1893" width="0.2" height="15.0" fill="rgb(223,54,10)" rx="2" ry="2" />
<text  x="103.55" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestLogger&lt;facebook::memcache::MemcacheRouterInfo&gt;::logError (1 samples, 0.02%)</title><rect x="1169.5" y="2053" width="0.2" height="15.0" fill="rgb(221,131,21)" rx="2" ry="2" />
<text  x="1172.47" y="2063.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="747.1" y="1621" width="0.2" height="15.0" fill="rgb(250,0,27)" rx="2" ry="2" />
<text  x="750.10" y="1631.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="492.3" y="1781" width="0.2" height="15.0" fill="rgb(218,227,18)" rx="2" ry="2" />
<text  x="495.34" y="1791.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="1127.4" y="2037" width="0.2" height="15.0" fill="rgb(228,54,35)" rx="2" ry="2" />
<text  x="1130.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (144 samples, 2.46%)</title><rect x="124.1" y="677" width="29.0" height="15.0" fill="rgb(224,17,36)" rx="2" ry="2" />
<text  x="127.10" y="687.5" >[u..</text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="152.7" y="293" width="0.2" height="15.0" fill="rgb(238,150,17)" rx="2" ry="2" />
<text  x="155.67" y="303.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="364.4" y="1893" width="0.2" height="15.0" fill="rgb(250,164,47)" rx="2" ry="2" />
<text  x="367.36" y="1903.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="633.2" y="1653" width="0.2" height="15.0" fill="rgb(240,185,22)" rx="2" ry="2" />
<text  x="636.20" y="1663.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="320.5" y="2037" width="0.2" height="15.0" fill="rgb(228,86,28)" rx="2" ry="2" />
<text  x="323.49" y="2047.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_event_add (2 samples, 0.03%)</title><rect x="234.0" y="1877" width="0.4" height="15.0" fill="rgb(254,57,14)" rx="2" ry="2" />
<text  x="236.97" y="1887.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McSetRequest&gt;::waitForReply (7 samples, 0.12%)</title><rect x="616.3" y="2037" width="1.4" height="15.0" fill="rgb(249,50,23)" rx="2" ry="2" />
<text  x="619.30" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1149.2" y="1973" width="0.2" height="15.0" fill="rgb(239,144,51)" rx="2" ry="2" />
<text  x="1152.15" y="1983.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="686.5" y="1909" width="0.2" height="15.0" fill="rgb(212,10,53)" rx="2" ry="2" />
<text  x="689.53" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="510.7" y="1621" width="0.2" height="15.0" fill="rgb(217,71,22)" rx="2" ry="2" />
<text  x="513.65" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="934.2" y="1877" width="0.2" height="15.0" fill="rgb(239,196,5)" rx="2" ry="2" />
<text  x="937.24" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="647.5" y="2021" width="0.2" height="15.0" fill="rgb(241,79,15)" rx="2" ry="2" />
<text  x="650.49" y="2031.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="261.9" y="1861" width="0.2" height="15.0" fill="rgb(229,53,13)" rx="2" ry="2" />
<text  x="264.94" y="1871.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="832.2" y="1717" width="0.4" height="15.0" fill="rgb(234,226,22)" rx="2" ry="2" />
<text  x="835.22" y="1727.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="997.4" y="1973" width="0.2" height="15.0" fill="rgb(229,172,21)" rx="2" ry="2" />
<text  x="1000.42" y="1983.5" ></text>
</g>
<g >
<title>___slab_alloc (1 samples, 0.02%)</title><rect x="1144.3" y="1829" width="0.2" height="15.0" fill="rgb(232,191,53)" rx="2" ry="2" />
<text  x="1147.32" y="1839.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (18 samples, 0.31%)</title><rect x="312.6" y="1957" width="3.7" height="15.0" fill="rgb(222,206,2)" rx="2" ry="2" />
<text  x="315.65" y="1967.5" ></text>
</g>
<g >
<title>folly::BitIterator&lt;unsigned long*&gt;::dereference (1 samples, 0.02%)</title><rect x="526.4" y="1941" width="0.2" height="15.0" fill="rgb(246,106,40)" rx="2" ry="2" />
<text  x="529.35" y="1951.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="19.1" y="1781" width="0.2" height="15.0" fill="rgb(248,80,22)" rx="2" ry="2" />
<text  x="22.06" y="1791.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (5 samples, 0.09%)</title><rect x="898.4" y="1973" width="1.0" height="15.0" fill="rgb(213,227,23)" rx="2" ry="2" />
<text  x="901.42" y="1983.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1148.7" y="2005" width="0.2" height="15.0" fill="rgb(210,109,34)" rx="2" ry="2" />
<text  x="1151.75" y="2015.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="968.2" y="1861" width="0.2" height="15.0" fill="rgb(248,75,20)" rx="2" ry="2" />
<text  x="971.25" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="844.1" y="1653" width="0.2" height="15.0" fill="rgb(233,65,47)" rx="2" ry="2" />
<text  x="847.09" y="1663.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="345.8" y="1445" width="0.3" height="15.0" fill="rgb(207,47,43)" rx="2" ry="2" />
<text  x="348.85" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::unlink (2 samples, 0.03%)</title><rect x="934.2" y="1925" width="0.4" height="15.0" fill="rgb(240,23,12)" rx="2" ry="2" />
<text  x="937.24" y="1935.5" ></text>
</g>
<g >
<title>event_assign (1 samples, 0.02%)</title><rect x="849.1" y="1925" width="0.2" height="15.0" fill="rgb(228,61,24)" rx="2" ry="2" />
<text  x="852.12" y="1935.5" ></text>
</g>
<g >
<title>tcp_close (339 samples, 5.78%)</title><rect x="753.5" y="1749" width="68.3" height="15.0" fill="rgb(254,82,9)" rx="2" ry="2" />
<text  x="756.54" y="1759.5" >tcp_close</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="801.6" y="1461" width="0.2" height="15.0" fill="rgb(238,147,38)" rx="2" ry="2" />
<text  x="804.63" y="1471.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="888.2" y="1733" width="0.2" height="15.0" fill="rgb(231,137,41)" rx="2" ry="2" />
<text  x="891.16" y="1743.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1119.6" y="1893" width="0.2" height="15.0" fill="rgb(229,132,32)" rx="2" ry="2" />
<text  x="1122.57" y="1903.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="100.6" y="1925" width="0.2" height="15.0" fill="rgb(238,112,35)" rx="2" ry="2" />
<text  x="103.55" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::~MemcacheRouteHandle (7 samples, 0.12%)</title><rect x="908.7" y="2037" width="1.4" height="15.0" fill="rgb(210,122,50)" rx="2" ry="2" />
<text  x="911.68" y="2047.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McSetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McSetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="928.4" y="2005" width="0.2" height="15.0" fill="rgb(233,192,47)" rx="2" ry="2" />
<text  x="931.40" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="701.8" y="1765" width="0.2" height="15.0" fill="rgb(211,35,35)" rx="2" ry="2" />
<text  x="704.82" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="633.2" y="1749" width="0.2" height="15.0" fill="rgb(221,13,47)" rx="2" ry="2" />
<text  x="636.20" y="1759.5" ></text>
</g>
<g >
<title>__GI___setsockopt (3 samples, 0.05%)</title><rect x="1171.1" y="2037" width="0.6" height="15.0" fill="rgb(225,110,34)" rx="2" ry="2" />
<text  x="1174.08" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;folly::fibers::Fiber*&gt;::pointer_to (3 samples, 0.05%)</title><rect x="632.0" y="1909" width="0.6" height="15.0" fill="rgb(241,72,37)" rx="2" ry="2" />
<text  x="635.00" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt; const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="616.3" y="1941" width="0.2" height="15.0" fill="rgb(249,98,36)" rx="2" ry="2" />
<text  x="619.30" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McGetReply::McGetReply (2 samples, 0.03%)</title><rect x="618.9" y="2005" width="0.4" height="15.0" fill="rgb(222,71,33)" rx="2" ry="2" />
<text  x="621.92" y="2015.5" ></text>
</g>
<g >
<title>ip_output (89 samples, 1.52%)</title><rect x="279.6" y="1781" width="18.0" height="15.0" fill="rgb(221,60,40)" rx="2" ry="2" />
<text  x="282.65" y="1791.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="707.3" y="1685" width="0.2" height="15.0" fill="rgb(244,151,12)" rx="2" ry="2" />
<text  x="710.25" y="1695.5" ></text>
</g>
<g >
<title>trigger_dyntick_cpu.isra.35 (1 samples, 0.02%)</title><rect x="304.6" y="1765" width="0.2" height="15.0" fill="rgb(237,6,35)" rx="2" ry="2" />
<text  x="307.60" y="1775.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (4 samples, 0.07%)</title><rect x="568.6" y="1973" width="0.8" height="15.0" fill="rgb(248,128,4)" rx="2" ry="2" />
<text  x="571.61" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="303.2" y="1749" width="0.4" height="15.0" fill="rgb(242,210,13)" rx="2" ry="2" />
<text  x="306.19" y="1759.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="661.8" y="1909" width="0.2" height="15.0" fill="rgb(211,166,2)" rx="2" ry="2" />
<text  x="664.78" y="1919.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (14 samples, 0.24%)</title><rect x="549.9" y="1989" width="2.8" height="15.0" fill="rgb(208,198,42)" rx="2" ry="2" />
<text  x="552.89" y="1999.5" ></text>
</g>
<g >
<title>tcp_send_ack (33 samples, 0.56%)</title><rect x="1100.3" y="1909" width="6.6" height="15.0" fill="rgb(245,131,43)" rx="2" ry="2" />
<text  x="1103.25" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="832.2" y="1637" width="0.2" height="15.0" fill="rgb(226,17,29)" rx="2" ry="2" />
<text  x="835.22" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (151 samples, 2.58%)</title><rect x="124.1" y="1541" width="30.4" height="15.0" fill="rgb(236,70,53)" rx="2" ry="2" />
<text  x="127.10" y="1551.5" >[u..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="920.6" y="1765" width="0.2" height="15.0" fill="rgb(240,52,26)" rx="2" ry="2" />
<text  x="923.56" y="1775.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="71.0" y="1637" width="0.2" height="15.0" fill="rgb(211,170,18)" rx="2" ry="2" />
<text  x="73.97" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (14 samples, 0.24%)</title><rect x="451.5" y="1925" width="2.8" height="15.0" fill="rgb(232,101,7)" rx="2" ry="2" />
<text  x="454.49" y="1935.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1174.7" y="1957" width="0.2" height="15.0" fill="rgb(207,86,50)" rx="2" ry="2" />
<text  x="1177.71" y="1967.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="686.5" y="1877" width="0.2" height="15.0" fill="rgb(223,71,25)" rx="2" ry="2" />
<text  x="689.53" y="1887.5" ></text>
</g>
<g >
<title>tcp_v4_conn_request (1 samples, 0.02%)</title><rect x="1148.7" y="1749" width="0.2" height="15.0" fill="rgb(224,67,9)" rx="2" ry="2" />
<text  x="1151.75" y="1759.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1072.7" y="1797" width="0.2" height="15.0" fill="rgb(252,205,49)" rx="2" ry="2" />
<text  x="1075.68" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="238.0" y="1877" width="0.2" height="15.0" fill="rgb(237,122,5)" rx="2" ry="2" />
<text  x="240.99" y="1887.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::fibers::Fiber*&gt; (2 samples, 0.03%)</title><rect x="991.2" y="1893" width="0.4" height="15.0" fill="rgb(253,7,4)" rx="2" ry="2" />
<text  x="994.19" y="1903.5" ></text>
</g>
<g >
<title>aa_sock_perm (2 samples, 0.03%)</title><rect x="668.8" y="1829" width="0.4" height="15.0" fill="rgb(252,70,54)" rx="2" ry="2" />
<text  x="671.82" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::list_node_traits&lt;void*&gt;::set_next (1 samples, 0.02%)</title><rect x="934.2" y="1909" width="0.2" height="15.0" fill="rgb(230,132,43)" rx="2" ry="2" />
<text  x="937.24" y="1919.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="516.7" y="1749" width="0.2" height="15.0" fill="rgb(235,75,42)" rx="2" ry="2" />
<text  x="519.69" y="1759.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="862.8" y="1717" width="0.2" height="15.0" fill="rgb(232,189,39)" rx="2" ry="2" />
<text  x="865.80" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1030.6" y="2021" width="0.2" height="15.0" fill="rgb(236,113,26)" rx="2" ry="2" />
<text  x="1033.63" y="2031.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="64.1" y="1717" width="0.2" height="15.0" fill="rgb(229,127,5)" rx="2" ry="2" />
<text  x="67.13" y="1727.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="832.2" y="1733" width="0.4" height="15.0" fill="rgb(238,229,23)" rx="2" ry="2" />
<text  x="835.22" y="1743.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="186.7" y="1877" width="0.4" height="15.0" fill="rgb(246,104,6)" rx="2" ry="2" />
<text  x="189.68" y="1887.5" ></text>
</g>
<g >
<title>folly::IOBuf::decrementRefcount (1 samples, 0.02%)</title><rect x="649.1" y="2005" width="0.2" height="15.0" fill="rgb(241,165,45)" rx="2" ry="2" />
<text  x="652.10" y="2015.5" ></text>
</g>
<g >
<title>ep_poll_callback (4 samples, 0.07%)</title><rect x="282.5" y="1429" width="0.8" height="15.0" fill="rgb(210,26,48)" rx="2" ry="2" />
<text  x="285.46" y="1439.5" ></text>
</g>
<g >
<title>ip_finish_output (91 samples, 1.55%)</title><rect x="779.5" y="1621" width="18.3" height="15.0" fill="rgb(232,96,18)" rx="2" ry="2" />
<text  x="782.50" y="1631.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1023.0" y="1957" width="0.4" height="15.0" fill="rgb(254,48,43)" rx="2" ry="2" />
<text  x="1025.98" y="1967.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.12%)</title><rect x="263.9" y="1877" width="1.5" height="15.0" fill="rgb(239,0,17)" rx="2" ry="2" />
<text  x="266.95" y="1887.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (7 samples, 0.12%)</title><rect x="698.2" y="1973" width="1.4" height="15.0" fill="rgb(220,38,22)" rx="2" ry="2" />
<text  x="701.20" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="816.5" y="1589" width="0.2" height="15.0" fill="rgb(229,107,38)" rx="2" ry="2" />
<text  x="819.52" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="114.6" y="1941" width="0.2" height="15.0" fill="rgb(211,160,26)" rx="2" ry="2" />
<text  x="117.64" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="307.2" y="1653" width="0.2" height="15.0" fill="rgb(235,167,53)" rx="2" ry="2" />
<text  x="310.21" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_Tuple_impl (5 samples, 0.09%)</title><rect x="50.4" y="1893" width="1.1" height="15.0" fill="rgb(242,115,36)" rx="2" ry="2" />
<text  x="53.45" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerRequestContext::replyImpl2&lt;facebook::memcache::McGetReply, facebook::memcache::McServerSession&gt; (1 samples, 0.02%)</title><rect x="218.7" y="2021" width="0.2" height="15.0" fill="rgb(209,153,20)" rx="2" ry="2" />
<text  x="221.67" y="2031.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="651.1" y="1925" width="0.2" height="15.0" fill="rgb(217,73,3)" rx="2" ry="2" />
<text  x="654.11" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::get (4 samples, 0.07%)</title><rect x="888.8" y="1925" width="0.8" height="15.0" fill="rgb(214,15,34)" rx="2" ry="2" />
<text  x="891.76" y="1935.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::operator short const&amp; (2 samples, 0.03%)</title><rect x="851.9" y="1861" width="0.4" height="15.0" fill="rgb(254,1,36)" rx="2" ry="2" />
<text  x="854.94" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="65.1" y="1765" width="0.2" height="15.0" fill="rgb(234,45,28)" rx="2" ry="2" />
<text  x="68.14" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::IoHandler::handlerReady (332 samples, 5.66%)</title><rect x="32.5" y="2021" width="66.8" height="15.0" fill="rgb(227,194,20)" rx="2" ry="2" />
<text  x="35.54" y="2031.5" >folly::..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="674.3" y="1973" width="0.4" height="15.0" fill="rgb(252,81,32)" rx="2" ry="2" />
<text  x="677.25" y="1983.5" ></text>
</g>
<g >
<title>__sock_release (359 samples, 6.12%)</title><rect x="750.3" y="1781" width="72.3" height="15.0" fill="rgb(244,139,17)" rx="2" ry="2" />
<text  x="753.32" y="1791.5" >__sock_r..</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="256.5" y="1781" width="0.2" height="15.0" fill="rgb(253,80,2)" rx="2" ry="2" />
<text  x="259.50" y="1791.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (2 samples, 0.03%)</title><rect x="76.6" y="1877" width="0.4" height="15.0" fill="rgb(244,22,37)" rx="2" ry="2" />
<text  x="79.61" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (1 samples, 0.02%)</title><rect x="174.6" y="1941" width="0.2" height="15.0" fill="rgb(230,66,45)" rx="2" ry="2" />
<text  x="177.60" y="1951.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="844.1" y="1765" width="0.2" height="15.0" fill="rgb(212,38,2)" rx="2" ry="2" />
<text  x="847.09" y="1775.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="930.4" y="1765" width="0.2" height="15.0" fill="rgb(222,227,54)" rx="2" ry="2" />
<text  x="933.42" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="778.5" y="1557" width="0.2" height="15.0" fill="rgb(234,43,40)" rx="2" ry="2" />
<text  x="781.49" y="1567.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1111.3" y="1701" width="0.2" height="15.0" fill="rgb(210,28,21)" rx="2" ry="2" />
<text  x="1114.32" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="491.5" y="1861" width="0.2" height="15.0" fill="rgb(219,149,15)" rx="2" ry="2" />
<text  x="494.54" y="1871.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="187.9" y="1925" width="0.2" height="15.0" fill="rgb(210,78,48)" rx="2" ry="2" />
<text  x="190.89" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (1 samples, 0.02%)</title><rect x="617.7" y="2005" width="0.2" height="15.0" fill="rgb(228,112,50)" rx="2" ry="2" />
<text  x="620.71" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="265.2" y="1701" width="0.2" height="15.0" fill="rgb(218,120,33)" rx="2" ry="2" />
<text  x="268.16" y="1711.5" ></text>
</g>
<g >
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="1087.6" y="1749" width="0.6" height="15.0" fill="rgb(224,206,12)" rx="2" ry="2" />
<text  x="1090.58" y="1759.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="916.7" y="1941" width="0.4" height="15.0" fill="rgb(207,119,4)" rx="2" ry="2" />
<text  x="919.73" y="1951.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="212.6" y="2021" width="0.2" height="15.0" fill="rgb(248,5,4)" rx="2" ry="2" />
<text  x="215.64" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.03%)</title><rect x="1178.7" y="1973" width="0.4" height="15.0" fill="rgb(246,162,36)" rx="2" ry="2" />
<text  x="1181.73" y="1983.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="923.6" y="2005" width="0.2" height="15.0" fill="rgb(211,42,36)" rx="2" ry="2" />
<text  x="926.57" y="2015.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="362.6" y="1829" width="0.2" height="15.0" fill="rgb(234,111,25)" rx="2" ry="2" />
<text  x="365.55" y="1839.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (41 samples, 0.70%)</title><rect x="1111.5" y="1973" width="8.3" height="15.0" fill="rgb(229,192,46)" rx="2" ry="2" />
<text  x="1114.52" y="1983.5" ></text>
</g>
<g >
<title>_atomic_dec_and_lock (18 samples, 0.31%)</title><rect x="726.8" y="1717" width="3.6" height="15.0" fill="rgb(237,22,8)" rx="2" ry="2" />
<text  x="729.77" y="1727.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="523.3" y="1829" width="0.2" height="15.0" fill="rgb(239,101,21)" rx="2" ry="2" />
<text  x="526.33" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="901" width="29.6" height="15.0" fill="rgb(245,129,5)" rx="2" ry="2" />
<text  x="127.10" y="911.5" >[u..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="100.6" y="1813" width="0.2" height="15.0" fill="rgb(225,136,35)" rx="2" ry="2" />
<text  x="103.55" y="1823.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1106.3" y="1749" width="0.2" height="15.0" fill="rgb(212,160,8)" rx="2" ry="2" />
<text  x="1109.29" y="1759.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="699.2" y="1765" width="0.2" height="15.0" fill="rgb(254,2,35)" rx="2" ry="2" />
<text  x="702.21" y="1775.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="202.0" y="1781" width="0.2" height="15.0" fill="rgb(243,43,31)" rx="2" ry="2" />
<text  x="204.97" y="1791.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="433.6" y="1573" width="0.2" height="15.0" fill="rgb(231,18,22)" rx="2" ry="2" />
<text  x="436.58" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="97.1" y="1973" width="0.2" height="15.0" fill="rgb(254,198,25)" rx="2" ry="2" />
<text  x="100.13" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1082.1" y="1733" width="0.2" height="15.0" fill="rgb(209,152,15)" rx="2" ry="2" />
<text  x="1085.14" y="1743.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextTyped&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest&gt;::sendReply (2 samples, 0.03%)</title><rect x="1169.1" y="2053" width="0.4" height="15.0" fill="rgb(229,47,48)" rx="2" ry="2" />
<text  x="1172.07" y="2063.5" ></text>
</g>
<g >
<title>std::atomic&lt;std::thread::id&gt;::load (2 samples, 0.03%)</title><rect x="96.5" y="1973" width="0.4" height="15.0" fill="rgb(242,158,51)" rx="2" ry="2" />
<text  x="99.53" y="1983.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::createTaskFinally&lt;std::enable_if&lt;carbon::ListContains&lt;carbon::List&lt;facebook::memcache::McAddRequest, facebook::memcache::McAppendRequest, facebook::memcache::McCasRequest, facebook::memcache::McDecrRequest, facebook::memcache::McDeleteRequest, facebook::memcache::McFlushAllRequest, facebook::memcache::McFlushReRequest, facebook::memcache::McGatRequest, facebook::memcache::McGatsRequest, facebook::memcache::McGetRequest, facebook::memcache::McGetsRequest, facebook::memcache::McIncrRequest, facebook::memcache::McLeaseGetRequest, facebook::memcache::McLeaseSetRequest, facebook::memcache::McMetagetRequest, facebook::memcache::McPrependRequest, facebook::memcache::McReplaceRequest, facebook::memcache::McSetRequest, facebook::memcache::McTouchRequest&gt;, facebook::memcache::McGetRequest&gt;::value, void&gt;::type facebook::memcache::mcrouter::Proxy&lt;facebook::memcache::MemcacheRouterInfo&gt;::addRouteTask&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="976.7" y="2037" width="0.2" height="15.0" fill="rgb(215,161,25)" rx="2" ry="2" />
<text  x="979.70" y="2047.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="989.4" y="1749" width="0.2" height="15.0" fill="rgb(222,213,0)" rx="2" ry="2" />
<text  x="992.38" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="10.2" y="2037" width="2.0" height="15.0" fill="rgb(229,0,7)" rx="2" ry="2" />
<text  x="13.20" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::~unique_ptr (2 samples, 0.03%)</title><rect x="882.9" y="1925" width="0.4" height="15.0" fill="rgb(214,200,13)" rx="2" ry="2" />
<text  x="885.93" y="1935.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (2 samples, 0.03%)</title><rect x="593.2" y="1813" width="0.4" height="15.0" fill="rgb(215,6,53)" rx="2" ry="2" />
<text  x="596.16" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::queueWrite (41 samples, 0.70%)</title><rect x="199.0" y="2021" width="8.2" height="15.0" fill="rgb(237,64,1)" rx="2" ry="2" />
<text  x="201.95" y="2031.5" ></text>
</g>
<g >
<title>folly::EventHandler::registerHandler (24 samples, 0.41%)</title><rect x="233.4" y="1909" width="4.8" height="15.0" fill="rgb(243,185,16)" rx="2" ry="2" />
<text  x="236.36" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="388.3" y="1717" width="0.2" height="15.0" fill="rgb(239,77,12)" rx="2" ry="2" />
<text  x="391.31" y="1727.5" ></text>
</g>
<g >
<title>folly::IOBuf::~IOBuf (1 samples, 0.02%)</title><rect x="151.1" y="53" width="0.2" height="15.0" fill="rgb(214,94,13)" rx="2" ry="2" />
<text  x="154.06" y="63.5" ></text>
</g>
<g >
<title>__close_fd (39 samples, 0.67%)</title><rect x="823.4" y="1845" width="7.8" height="15.0" fill="rgb(208,201,5)" rx="2" ry="2" />
<text  x="826.36" y="1855.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1119.4" y="1749" width="0.2" height="15.0" fill="rgb(225,198,14)" rx="2" ry="2" />
<text  x="1122.37" y="1759.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="861.4" y="1877" width="0.2" height="15.0" fill="rgb(232,109,32)" rx="2" ry="2" />
<text  x="864.39" y="1887.5" ></text>
</g>
<g >
<title>__fsnotify_inode_delete (4 samples, 0.07%)</title><rect x="732.4" y="1669" width="0.8" height="15.0" fill="rgb(232,225,53)" rx="2" ry="2" />
<text  x="735.41" y="1679.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="831.0" y="1525" width="0.2" height="15.0" fill="rgb(251,184,38)" rx="2" ry="2" />
<text  x="834.01" y="1535.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="903.3" y="1909" width="0.2" height="15.0" fill="rgb(233,40,2)" rx="2" ry="2" />
<text  x="906.25" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="56.7" y="1781" width="0.2" height="15.0" fill="rgb(253,222,18)" rx="2" ry="2" />
<text  x="59.68" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="916.9" y="1877" width="0.2" height="15.0" fill="rgb(228,163,19)" rx="2" ry="2" />
<text  x="919.93" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="441.0" y="1701" width="0.2" height="15.0" fill="rgb(223,139,51)" rx="2" ry="2" />
<text  x="444.03" y="1711.5" ></text>
</g>
<g >
<title>std::this_thread::get_id (2 samples, 0.03%)</title><rect x="204.6" y="1957" width="0.4" height="15.0" fill="rgb(239,171,16)" rx="2" ry="2" />
<text  x="207.59" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBase::LoopCallback::~LoopCallback (1 samples, 0.02%)</title><rect x="79.8" y="1957" width="0.2" height="15.0" fill="rgb(247,89,43)" rx="2" ry="2" />
<text  x="82.83" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::WriteBufferQueue::pop (1 samples, 0.02%)</title><rect x="863.8" y="1989" width="0.2" height="15.0" fill="rgb(254,156,32)" rx="2" ry="2" />
<text  x="866.81" y="1999.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="153.3" y="725" width="0.2" height="15.0" fill="rgb(225,67,0)" rx="2" ry="2" />
<text  x="156.27" y="735.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="929.8" y="1973" width="0.2" height="15.0" fill="rgb(239,135,51)" rx="2" ry="2" />
<text  x="932.81" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="273.8" y="1749" width="0.2" height="15.0" fill="rgb(225,172,33)" rx="2" ry="2" />
<text  x="276.81" y="1759.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="523.3" y="1733" width="0.2" height="15.0" fill="rgb(222,72,12)" rx="2" ry="2" />
<text  x="526.33" y="1743.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::getPeerAddress (8 samples, 0.14%)</title><rect x="1146.9" y="2021" width="1.6" height="15.0" fill="rgb(217,111,24)" rx="2" ry="2" />
<text  x="1149.94" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="869" width="29.6" height="15.0" fill="rgb(211,160,36)" rx="2" ry="2" />
<text  x="127.10" y="879.5" >[u..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="790.4" y="1477" width="0.2" height="15.0" fill="rgb(250,123,26)" rx="2" ry="2" />
<text  x="793.36" y="1487.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::consumeGetLike&lt;facebook::memcache::McGetRequest&gt; (14 samples, 0.24%)</title><rect x="135.0" y="37" width="2.8" height="15.0" fill="rgb(214,66,38)" rx="2" ry="2" />
<text  x="137.96" y="47.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="19.7" y="1781" width="0.2" height="15.0" fill="rgb(216,45,54)" rx="2" ry="2" />
<text  x="22.66" y="1791.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="891.0" y="1941" width="0.4" height="15.0" fill="rgb(244,116,0)" rx="2" ry="2" />
<text  x="893.98" y="1951.5" ></text>
</g>
<g >
<title>security_socket_getsockname (1 samples, 0.02%)</title><rect x="592.0" y="1861" width="0.2" height="15.0" fill="rgb(222,170,33)" rx="2" ry="2" />
<text  x="594.95" y="1871.5" ></text>
</g>
<g >
<title>tcp_poll (2 samples, 0.03%)</title><rect x="442.4" y="1957" width="0.4" height="15.0" fill="rgb(233,145,43)" rx="2" ry="2" />
<text  x="445.44" y="1967.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="462.8" y="1957" width="0.2" height="15.0" fill="rgb(234,47,12)" rx="2" ry="2" />
<text  x="465.76" y="1967.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="730.2" y="1477" width="0.2" height="15.0" fill="rgb(205,172,47)" rx="2" ry="2" />
<text  x="733.19" y="1487.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="342.0" y="1621" width="0.2" height="15.0" fill="rgb(214,30,25)" rx="2" ry="2" />
<text  x="345.03" y="1631.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="661.8" y="1829" width="0.2" height="15.0" fill="rgb(234,25,46)" rx="2" ry="2" />
<text  x="664.78" y="1839.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (12 samples, 0.20%)</title><rect x="281.9" y="1733" width="2.4" height="15.0" fill="rgb(205,41,52)" rx="2" ry="2" />
<text  x="284.86" y="1743.5" ></text>
</g>
<g >
<title>evmap_io_del_ (1 samples, 0.02%)</title><rect x="153.5" y="741" width="0.2" height="15.0" fill="rgb(228,66,3)" rx="2" ry="2" />
<text  x="156.48" y="751.5" ></text>
</g>
<g >
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="681.9" y="1893" width="0.4" height="15.0" fill="rgb(240,9,32)" rx="2" ry="2" />
<text  x="684.90" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (40 samples, 0.68%)</title><rect x="1156.4" y="1957" width="8.0" height="15.0" fill="rgb(254,41,27)" rx="2" ry="2" />
<text  x="1159.39" y="1967.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="765.4" y="1685" width="0.4" height="15.0" fill="rgb(213,110,29)" rx="2" ry="2" />
<text  x="768.41" y="1695.5" ></text>
</g>
<g >
<title>do_softirq.part.17 (2 samples, 0.03%)</title><rect x="347.5" y="1909" width="0.4" height="15.0" fill="rgb(245,2,15)" rx="2" ry="2" />
<text  x="350.46" y="1919.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="331.4" y="1861" width="0.2" height="15.0" fill="rgb(212,108,8)" rx="2" ry="2" />
<text  x="334.36" y="1871.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1058.2" y="1973" width="0.2" height="15.0" fill="rgb(250,213,37)" rx="2" ry="2" />
<text  x="1061.20" y="1983.5" ></text>
</g>
<g >
<title>del_timer (1 samples, 0.02%)</title><rect x="1032.4" y="1701" width="0.2" height="15.0" fill="rgb(219,137,40)" rx="2" ry="2" />
<text  x="1035.44" y="1711.5" ></text>
</g>
<g >
<title>ixgbe_poll (5 samples, 0.09%)</title><rect x="783.1" y="1509" width="1.0" height="15.0" fill="rgb(207,13,44)" rx="2" ry="2" />
<text  x="786.12" y="1519.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="845.7" y="1909" width="0.2" height="15.0" fill="rgb(248,87,24)" rx="2" ry="2" />
<text  x="848.70" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14 samples, 0.24%)</title><rect x="602.0" y="1909" width="2.8" height="15.0" fill="rgb(228,175,6)" rx="2" ry="2" />
<text  x="605.01" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="465.2" y="2021" width="0.2" height="15.0" fill="rgb(212,108,7)" rx="2" ry="2" />
<text  x="468.18" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="64.1" y="1813" width="0.2" height="15.0" fill="rgb(249,13,21)" rx="2" ry="2" />
<text  x="67.13" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="801.6" y="1557" width="0.2" height="15.0" fill="rgb(246,54,17)" rx="2" ry="2" />
<text  x="804.63" y="1567.5" ></text>
</g>
<g >
<title>__check_object_size (15 samples, 0.26%)</title><rect x="1091.4" y="1909" width="3.0" height="15.0" fill="rgb(245,21,29)" rx="2" ry="2" />
<text  x="1094.40" y="1919.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.05%)</title><rect x="838.7" y="1893" width="0.6" height="15.0" fill="rgb(227,178,26)" rx="2" ry="2" />
<text  x="841.66" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="529.4" y="1925" width="0.2" height="15.0" fill="rgb(233,135,12)" rx="2" ry="2" />
<text  x="532.37" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="930.4" y="1797" width="0.2" height="15.0" fill="rgb(229,35,12)" rx="2" ry="2" />
<text  x="933.42" y="1807.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="731.6" y="1637" width="0.2" height="15.0" fill="rgb(216,71,38)" rx="2" ry="2" />
<text  x="734.60" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1032.4" y="1973" width="0.2" height="15.0" fill="rgb(249,181,32)" rx="2" ry="2" />
<text  x="1035.44" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="491.7" y="1829" width="0.2" height="15.0" fill="rgb(221,226,48)" rx="2" ry="2" />
<text  x="494.74" y="1839.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(254,77,0)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="19.1" y="1893" width="0.2" height="15.0" fill="rgb(215,186,25)" rx="2" ry="2" />
<text  x="22.06" y="1903.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="563.2" y="1813" width="0.2" height="15.0" fill="rgb(251,120,34)" rx="2" ry="2" />
<text  x="566.18" y="1823.5" ></text>
</g>
<g >
<title>sys_madvise (6 samples, 0.10%)</title><rect x="1126.0" y="2005" width="1.2" height="15.0" fill="rgb(221,91,12)" rx="2" ry="2" />
<text  x="1129.01" y="2015.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (3 samples, 0.05%)</title><rect x="851.7" y="1893" width="0.6" height="15.0" fill="rgb(237,99,33)" rx="2" ry="2" />
<text  x="854.74" y="1903.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="342.0" y="1733" width="0.2" height="15.0" fill="rgb(233,30,16)" rx="2" ry="2" />
<text  x="345.03" y="1743.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="818.7" y="1685" width="0.2" height="15.0" fill="rgb(239,78,27)" rx="2" ry="2" />
<text  x="821.73" y="1695.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="767.4" y="1557" width="0.2" height="15.0" fill="rgb(238,187,49)" rx="2" ry="2" />
<text  x="770.42" y="1567.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="284.1" y="1669" width="0.2" height="15.0" fill="rgb(207,187,21)" rx="2" ry="2" />
<text  x="287.07" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="152.7" y="165" width="0.2" height="15.0" fill="rgb(209,21,1)" rx="2" ry="2" />
<text  x="155.67" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::Callback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="934.6" y="1941" width="0.6" height="15.0" fill="rgb(244,143,13)" rx="2" ry="2" />
<text  x="937.64" y="1951.5" ></text>
</g>
<g >
<title>tcp_conn_request (1 samples, 0.02%)</title><rect x="202.0" y="1669" width="0.2" height="15.0" fill="rgb(247,126,46)" rx="2" ry="2" />
<text  x="204.97" y="1679.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="64.7" y="1813" width="0.2" height="15.0" fill="rgb(237,57,3)" rx="2" ry="2" />
<text  x="67.73" y="1823.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1058.2" y="1861" width="0.2" height="15.0" fill="rgb(207,188,29)" rx="2" ry="2" />
<text  x="1061.20" y="1871.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="99.7" y="1893" width="0.2" height="15.0" fill="rgb(252,192,9)" rx="2" ry="2" />
<text  x="102.75" y="1903.5" ></text>
</g>
<g >
<title>folly::checkedMalloc (4 samples, 0.07%)</title><rect x="642.9" y="1989" width="0.8" height="15.0" fill="rgb(225,149,22)" rx="2" ry="2" />
<text  x="645.86" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="12.2" y="2037" width="0.2" height="15.0" fill="rgb(209,211,30)" rx="2" ry="2" />
<text  x="15.21" y="2047.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="14.4" y="1877" width="0.2" height="15.0" fill="rgb(216,11,12)" rx="2" ry="2" />
<text  x="17.43" y="1887.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="592.8" y="1877" width="0.2" height="15.0" fill="rgb(242,215,11)" rx="2" ry="2" />
<text  x="595.76" y="1887.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="54.5" y="1861" width="0.2" height="15.0" fill="rgb(254,47,14)" rx="2" ry="2" />
<text  x="57.47" y="1871.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContext&lt;facebook::memcache::McGetRequest&gt;::waitForReply (79 samples, 1.35%)</title><rect x="931.0" y="2005" width="15.9" height="15.0" fill="rgb(236,28,52)" rx="2" ry="2" />
<text  x="934.02" y="2015.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="441.0" y="1765" width="0.2" height="15.0" fill="rgb(219,13,13)" rx="2" ry="2" />
<text  x="444.03" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1032.4" y="1829" width="0.2" height="15.0" fill="rgb(239,48,50)" rx="2" ry="2" />
<text  x="1035.44" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1096.2" y="1845" width="0.2" height="15.0" fill="rgb(208,138,49)" rx="2" ry="2" />
<text  x="1099.23" y="1855.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="944.3" y="1733" width="0.2" height="15.0" fill="rgb(210,40,12)" rx="2" ry="2" />
<text  x="947.30" y="1743.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::TimeoutHandler::~TimeoutHandler (1 samples, 0.02%)</title><rect x="976.5" y="2037" width="0.2" height="15.0" fill="rgb(253,13,22)" rx="2" ry="2" />
<text  x="979.50" y="2047.5" ></text>
</g>
<g >
<title>__alloc_skb (40 samples, 0.68%)</title><rect x="759.6" y="1717" width="8.0" height="15.0" fill="rgb(250,167,37)" rx="2" ry="2" />
<text  x="762.57" y="1727.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="407.8" y="1909" width="0.2" height="15.0" fill="rgb(238,187,48)" rx="2" ry="2" />
<text  x="410.83" y="1919.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1000.0" y="1925" width="0.2" height="15.0" fill="rgb(251,179,54)" rx="2" ry="2" />
<text  x="1003.04" y="1935.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (2 samples, 0.03%)</title><rect x="434.2" y="1941" width="0.4" height="15.0" fill="rgb(243,176,32)" rx="2" ry="2" />
<text  x="437.19" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (3 samples, 0.05%)</title><rect x="230.1" y="1861" width="0.6" height="15.0" fill="rgb(241,39,21)" rx="2" ry="2" />
<text  x="233.14" y="1871.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.05%)</title><rect x="317.5" y="1861" width="0.6" height="15.0" fill="rgb(250,174,37)" rx="2" ry="2" />
<text  x="320.48" y="1871.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (5 samples, 0.09%)</title><rect x="904.1" y="2005" width="1.0" height="15.0" fill="rgb(253,16,41)" rx="2" ry="2" />
<text  x="907.06" y="2015.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="840.9" y="1733" width="0.2" height="15.0" fill="rgb(247,112,36)" rx="2" ry="2" />
<text  x="843.87" y="1743.5" ></text>
</g>
<g >
<title>tcp_done (1 samples, 0.02%)</title><rect x="832.4" y="1621" width="0.2" height="15.0" fill="rgb(252,115,22)" rx="2" ry="2" />
<text  x="835.42" y="1631.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1059.0" y="1941" width="0.2" height="15.0" fill="rgb(214,193,8)" rx="2" ry="2" />
<text  x="1062.00" y="1951.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.02%)</title><rect x="740.7" y="1365" width="0.2" height="15.0" fill="rgb(210,187,25)" rx="2" ry="2" />
<text  x="743.66" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::detail::default_header_holder&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::get_node (1 samples, 0.02%)</title><rect x="907.7" y="1909" width="0.2" height="15.0" fill="rgb(236,19,16)" rx="2" ry="2" />
<text  x="910.68" y="1919.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="55.1" y="1797" width="0.2" height="15.0" fill="rgb(209,73,25)" rx="2" ry="2" />
<text  x="58.08" y="1807.5" ></text>
</g>
<g >
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="1184.2" y="2037" width="0.4" height="15.0" fill="rgb(240,125,5)" rx="2" ry="2" />
<text  x="1187.16" y="2047.5" ></text>
</g>
<g >
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="345.8" y="1621" width="0.3" height="15.0" fill="rgb(218,191,40)" rx="2" ry="2" />
<text  x="348.85" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1085.0" y="1781" width="0.2" height="15.0" fill="rgb(243,115,1)" rx="2" ry="2" />
<text  x="1087.96" y="1791.5" ></text>
</g>
<g >
<title>__sock_wfree (1 samples, 0.02%)</title><rect x="1030.4" y="1877" width="0.2" height="15.0" fill="rgb(240,58,36)" rx="2" ry="2" />
<text  x="1033.43" y="1887.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="1144.3" y="1941" width="0.2" height="15.0" fill="rgb(252,42,1)" rx="2" ry="2" />
<text  x="1147.32" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17 samples, 0.29%)</title><rect x="787.1" y="1541" width="3.5" height="15.0" fill="rgb(250,85,34)" rx="2" ry="2" />
<text  x="790.14" y="1551.5" ></text>
</g>
<g >
<title>__slab_free (8 samples, 0.14%)</title><rect x="1071.1" y="1877" width="1.6" height="15.0" fill="rgb(245,211,20)" rx="2" ry="2" />
<text  x="1074.07" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="845.7" y="1701" width="0.2" height="15.0" fill="rgb(223,228,47)" rx="2" ry="2" />
<text  x="848.70" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (2 samples, 0.03%)</title><rect x="966.4" y="1957" width="0.4" height="15.0" fill="rgb(235,106,30)" rx="2" ry="2" />
<text  x="969.44" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="816.5" y="1685" width="0.2" height="15.0" fill="rgb(236,179,23)" rx="2" ry="2" />
<text  x="819.52" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4 samples, 0.07%)</title><rect x="998.4" y="1973" width="0.8" height="15.0" fill="rgb(235,107,32)" rx="2" ry="2" />
<text  x="1001.43" y="1983.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (8 samples, 0.14%)</title><rect x="490.3" y="1893" width="1.6" height="15.0" fill="rgb(244,66,35)" rx="2" ry="2" />
<text  x="493.33" y="1903.5" ></text>
</g>
<g >
<title>tcp_sendmsg (259 samples, 4.42%)</title><rect x="258.3" y="1909" width="52.1" height="15.0" fill="rgb(230,189,33)" rx="2" ry="2" />
<text  x="261.32" y="1919.5" >tcp_s..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1170.3" y="1861" width="0.2" height="15.0" fill="rgb(220,159,54)" rx="2" ry="2" />
<text  x="1173.28" y="1871.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.39 (1 samples, 0.02%)</title><rect x="19.7" y="1797" width="0.2" height="15.0" fill="rgb(249,126,4)" rx="2" ry="2" />
<text  x="22.66" y="1807.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="588.3" y="1893" width="0.2" height="15.0" fill="rgb(241,177,39)" rx="2" ry="2" />
<text  x="591.33" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (1 samples, 0.02%)</title><rect x="531.2" y="1973" width="0.2" height="15.0" fill="rgb(209,155,11)" rx="2" ry="2" />
<text  x="534.18" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11 samples, 0.19%)</title><rect x="728.2" y="1701" width="2.2" height="15.0" fill="rgb(254,178,34)" rx="2" ry="2" />
<text  x="731.18" y="1711.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="513.3" y="1797" width="0.2" height="15.0" fill="rgb(212,103,41)" rx="2" ry="2" />
<text  x="516.27" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::inited (2 samples, 0.03%)</title><rect x="933.8" y="1925" width="0.4" height="15.0" fill="rgb(228,71,35)" rx="2" ry="2" />
<text  x="936.84" y="1935.5" ></text>
</g>
<g >
<title>facebook::memcache::MemcacheRouteHandle&lt;facebook::memcache::mcrouter::DestinationRoute&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::AsyncMcClient&gt; &gt;::route (8 samples, 0.14%)</title><rect x="619.5" y="2005" width="1.6" height="15.0" fill="rgb(217,6,19)" rx="2" ry="2" />
<text  x="622.52" y="2015.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="176.4" y="1813" width="0.2" height="15.0" fill="rgb(212,9,44)" rx="2" ry="2" />
<text  x="179.42" y="1823.5" ></text>
</g>
<g >
<title>ip_local_out (110 samples, 1.88%)</title><rect x="775.7" y="1653" width="22.1" height="15.0" fill="rgb(215,27,20)" rx="2" ry="2" />
<text  x="778.67" y="1663.5" >i..</text>
</g>
<g >
<title>carbon::Keys&lt;folly::IOBuf&gt;::Keys (1 samples, 0.02%)</title><rect x="152.3" y="293" width="0.2" height="15.0" fill="rgb(234,25,22)" rx="2" ry="2" />
<text  x="155.27" y="303.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="152.7" y="101" width="0.2" height="15.0" fill="rgb(216,26,22)" rx="2" ry="2" />
<text  x="155.67" y="111.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.02%)</title><rect x="62.5" y="1957" width="0.2" height="15.0" fill="rgb(215,118,7)" rx="2" ry="2" />
<text  x="65.52" y="1967.5" ></text>
</g>
<g >
<title>tcp_check_req (1 samples, 0.02%)</title><rect x="691.6" y="1781" width="0.2" height="15.0" fill="rgb(241,221,29)" rx="2" ry="2" />
<text  x="694.56" y="1791.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="930.4" y="1717" width="0.2" height="15.0" fill="rgb(228,37,38)" rx="2" ry="2" />
<text  x="933.42" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.05%)</title><rect x="176.2" y="1877" width="0.6" height="15.0" fill="rgb(239,62,5)" rx="2" ry="2" />
<text  x="179.21" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.72%)</title><rect x="555.1" y="1973" width="8.5" height="15.0" fill="rgb(236,99,33)" rx="2" ry="2" />
<text  x="558.13" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="672.4" y="1973" width="0.2" height="15.0" fill="rgb(245,117,6)" rx="2" ry="2" />
<text  x="675.44" y="1983.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextBase::~McClientRequestContextBase (1 samples, 0.02%)</title><rect x="976.5" y="2005" width="0.2" height="15.0" fill="rgb(238,214,17)" rx="2" ry="2" />
<text  x="979.50" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="260.3" y="1877" width="1.2" height="15.0" fill="rgb(214,120,9)" rx="2" ry="2" />
<text  x="263.33" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="83.9" y="1749" width="0.2" height="15.0" fill="rgb(245,135,18)" rx="2" ry="2" />
<text  x="86.85" y="1759.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.05%)</title><rect x="330.8" y="1957" width="0.6" height="15.0" fill="rgb(208,52,53)" rx="2" ry="2" />
<text  x="333.76" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="114.4" y="1973" width="0.4" height="15.0" fill="rgb(233,11,18)" rx="2" ry="2" />
<text  x="117.44" y="1983.5" ></text>
</g>
<g >
<title>folly::NetworkSocket::toFd (1 samples, 0.02%)</title><rect x="27.9" y="1989" width="0.2" height="15.0" fill="rgb(218,23,10)" rx="2" ry="2" />
<text  x="30.91" y="1999.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(228,101,39)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>[libevent-2.1.so.6.0.2] (1 samples, 0.02%)</title><rect x="123.3" y="1813" width="0.2" height="15.0" fill="rgb(230,87,48)" rx="2" ry="2" />
<text  x="126.29" y="1823.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1072.7" y="1861" width="0.2" height="15.0" fill="rgb(245,66,29)" rx="2" ry="2" />
<text  x="1075.68" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list&lt;folly::EventBase::LoopCallback, boost::intrusive::constant_time_size&lt;false&gt;, void, void, void&gt;::~list (3 samples, 0.05%)</title><rect x="176.2" y="1925" width="0.6" height="15.0" fill="rgb(226,153,41)" rx="2" ry="2" />
<text  x="179.21" y="1935.5" ></text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (1 samples, 0.02%)</title><rect x="691.0" y="2021" width="0.2" height="15.0" fill="rgb(242,147,54)" rx="2" ry="2" />
<text  x="693.95" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.07%)</title><rect x="609.3" y="1957" width="0.8" height="15.0" fill="rgb(221,179,44)" rx="2" ry="2" />
<text  x="612.26" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::annotate_ignore_thread_sanitizer_guard (3 samples, 0.05%)</title><rect x="635.6" y="1957" width="0.6" height="15.0" fill="rgb(229,65,48)" rx="2" ry="2" />
<text  x="638.62" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="860.2" y="1861" width="0.2" height="15.0" fill="rgb(214,148,32)" rx="2" ry="2" />
<text  x="863.19" y="1871.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddressV46::IPAddressV46 (1 samples, 0.02%)</title><rect x="671.8" y="2021" width="0.2" height="15.0" fill="rgb(229,118,51)" rx="2" ry="2" />
<text  x="674.84" y="2031.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::ShutdownSocketSet*&gt; (1 samples, 0.02%)</title><rect x="554.1" y="1957" width="0.2" height="15.0" fill="rgb(219,159,19)" rx="2" ry="2" />
<text  x="557.12" y="1967.5" ></text>
</g>
<g >
<title>_ZN8facebook8memcache11WriteBuffer12prepareTypedINS0_10McGetReplyEEENSt9enable_ifIXsrN6carbon12ListContainsINS5_4ListIJNS0_12McGetRequestENS0_12McSetRequestENS0_15McDeleteRequestENS0_17McLeaseGetRequestENS0_17McLeaseSetRequestENS0_12McAddRequestENS0_16McReplaceRequestENS0_13McGetsRequestENS0_12McCasRequestENS0_13McIncrRequestENS0_13McDecrRequestENS0_16McMetagetRequestENS0_16McVersionRequestENS0_15McAppendRequestENS0_16McPrependRequestENS0_14McTouchRequestENS0_17McShutdownRequestENS0_13McQuitRequestENS0_14McStatsRequestENS0_13McExecRequestENS0_16McFlushReRequestENS0_17McFlushAllRequestENS0_12McGatRequestENS0_13McGatsRequestEEEENS0_6detail24RequestFromReplyTypeImplIT_NS7_IJNS0_4PairIS8_S3_EENS10_IS9_NS0_10McSetReplyEEENS10_ISA_NS0_13McDeleteReplyEEENS10_ISB_NS0_15McLeaseGetReplyEEENS10_ISC_NS0_15McLeaseSetReplyEEENS10_ISD_NS0_10McAddReplyEEENS10_ISE_NS0_14McReplaceReplyEEENS10_ISF_NS0_11McGetsReplyEEENS10_ISG_NS0_10McCasReplyEEENS10_ISH_NS0_11McIncrReplyEEENS10_ISI_NS0_11McDecrReplyEEENS10_ISJ_NS0_14McMetagetReplyEEENS10_ISK_NS0_14McVersionReplyEEENS10_ISL_NS0_13McAppendReplyEEENS10_ISM_NS0_14McPrependReplyEEENS10_ISN_NS0_12McTouchReplyEEENS10_ISO_NS0_15McShutdownReplyEEENS10_ISP_NS0_11McQuitReplyEEENS10_ISQ_NS0_12McStatsReplyEEENS10_ISR_NS0_11McExecReplyEEENS10_ISS_NS0_14McFlushReReplyEEENS10_IST_NS0_15McFlushAllReplyEEENS10_ISU_NS0_10McGatReplyEEENS10_ISV_NS0_11McGatsReplyEEEEEEE4typeEEE5valueEbE4typeEONS0_22McServerRequestContextEOSZ_St10unique_ptrIvPFvPvEEPKNS0_19CompressionCodecMapERKNS0_12CodecIdRangeEm (2 samples, 0.03%)</title><rect x="217.9" y="2037" width="0.4" height="15.0" fill="rgb(239,55,52)" rx="2" ry="2" />
<text  x="220.87" y="2047.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1164.6" y="1829" width="0.2" height="15.0" fill="rgb(242,1,38)" rx="2" ry="2" />
<text  x="1167.65" y="1839.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;short const&gt;::reference_wrapper (1 samples, 0.02%)</title><rect x="516.7" y="1909" width="0.2" height="15.0" fill="rgb(244,94,31)" rx="2" ry="2" />
<text  x="519.69" y="1919.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="569.4" y="1973" width="0.2" height="15.0" fill="rgb(218,45,19)" rx="2" ry="2" />
<text  x="572.41" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="272.2" y="1845" width="0.4" height="15.0" fill="rgb(228,176,34)" rx="2" ry="2" />
<text  x="275.20" y="1855.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="433.8" y="1957" width="0.2" height="15.0" fill="rgb(247,190,52)" rx="2" ry="2" />
<text  x="436.79" y="1967.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.14%)</title><rect x="10.6" y="1893" width="1.6" height="15.0" fill="rgb(220,25,26)" rx="2" ry="2" />
<text  x="13.60" y="1903.5" ></text>
</g>
<g >
<title>event_set (1 samples, 0.02%)</title><rect x="233.6" y="1877" width="0.2" height="15.0" fill="rgb(234,68,53)" rx="2" ry="2" />
<text  x="236.56" y="1887.5" ></text>
</g>
<g >
<title>ip_mc_drop_socket (4 samples, 0.07%)</title><rect x="821.8" y="1765" width="0.8" height="15.0" fill="rgb(245,17,16)" rx="2" ry="2" />
<text  x="824.75" y="1775.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="190.1" y="1925" width="0.2" height="15.0" fill="rgb(241,91,37)" rx="2" ry="2" />
<text  x="193.10" y="1935.5" ></text>
</g>
<g >
<title>folly::fibers::FiberManager::getFiber (3 samples, 0.05%)</title><rect x="907.3" y="1973" width="0.6" height="15.0" fill="rgb(234,217,53)" rx="2" ry="2" />
<text  x="910.27" y="1983.5" ></text>
</g>
<g >
<title>__libc_fcntl (61 samples, 1.04%)</title><rect x="554.5" y="1989" width="12.3" height="15.0" fill="rgb(244,99,32)" rx="2" ry="2" />
<text  x="557.52" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="516.7" y="1877" width="0.2" height="15.0" fill="rgb(216,105,13)" rx="2" ry="2" />
<text  x="519.69" y="1887.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="721.3" y="1589" width="0.2" height="15.0" fill="rgb(252,75,31)" rx="2" ry="2" />
<text  x="724.34" y="1599.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="230.5" y="1749" width="0.2" height="15.0" fill="rgb(237,109,44)" rx="2" ry="2" />
<text  x="233.55" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="235.2" y="1845" width="0.8" height="15.0" fill="rgb(205,168,52)" rx="2" ry="2" />
<text  x="238.17" y="1855.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="310.6" y="1797" width="0.2" height="15.0" fill="rgb(220,156,36)" rx="2" ry="2" />
<text  x="313.63" y="1807.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="64.7" y="1829" width="0.2" height="15.0" fill="rgb(253,225,47)" rx="2" ry="2" />
<text  x="67.73" y="1839.5" ></text>
</g>
<g >
<title>aa_sock_msg_perm (6 samples, 0.10%)</title><rect x="1109.9" y="1925" width="1.2" height="15.0" fill="rgb(246,204,38)" rx="2" ry="2" />
<text  x="1112.91" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1022.0" y="1989" width="0.2" height="15.0" fill="rgb(232,192,41)" rx="2" ry="2" />
<text  x="1024.97" y="1999.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (2 samples, 0.03%)</title><rect x="974.5" y="2037" width="0.4" height="15.0" fill="rgb(207,164,36)" rx="2" ry="2" />
<text  x="977.48" y="2047.5" ></text>
</g>
<g >
<title>____fput (524 samples, 8.94%)</title><rect x="717.3" y="1829" width="105.5" height="15.0" fill="rgb(208,32,44)" rx="2" ry="2" />
<text  x="720.32" y="1839.5" >____fput</text>
</g>
<g >
<title>tcp_v4_syn_recv_sock (1 samples, 0.02%)</title><rect x="1055.0" y="1749" width="0.2" height="15.0" fill="rgb(212,223,23)" rx="2" ry="2" />
<text  x="1057.98" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="407.2" y="1989" width="0.2" height="15.0" fill="rgb(238,91,44)" rx="2" ry="2" />
<text  x="410.22" y="1999.5" ></text>
</g>
<g >
<title>sk_free (1 samples, 0.02%)</title><rect x="100.6" y="1765" width="0.2" height="15.0" fill="rgb(234,129,51)" rx="2" ry="2" />
<text  x="103.55" y="1775.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.05%)</title><rect x="1087.6" y="1861" width="0.6" height="15.0" fill="rgb(223,219,16)" rx="2" ry="2" />
<text  x="1090.58" y="1871.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1155.4" y="1749" width="0.2" height="15.0" fill="rgb(216,137,42)" rx="2" ry="2" />
<text  x="1158.39" y="1759.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="930.4" y="1701" width="0.2" height="15.0" fill="rgb(243,199,21)" rx="2" ry="2" />
<text  x="933.42" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="740.7" y="1509" width="0.2" height="15.0" fill="rgb(253,57,37)" rx="2" ry="2" />
<text  x="743.66" y="1519.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;folly::FunctionScheduler::start (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(223,201,39)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="71.4" y="1925" width="0.2" height="15.0" fill="rgb(226,69,16)" rx="2" ry="2" />
<text  x="74.37" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="469" width="28.8" height="15.0" fill="rgb(232,210,43)" rx="2" ry="2" />
<text  x="127.10" y="479.5" >[u..</text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="114.8" y="1845" width="0.6" height="15.0" fill="rgb(210,99,6)" rx="2" ry="2" />
<text  x="117.84" y="1855.5" ></text>
</g>
<g >
<title>folly::EventHandler::isHandlerRegistered (7 samples, 0.12%)</title><rect x="236.6" y="1877" width="1.4" height="15.0" fill="rgb(250,30,3)" rx="2" ry="2" />
<text  x="239.58" y="1887.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.02%)</title><rect x="1101.9" y="1461" width="0.2" height="15.0" fill="rgb(212,110,27)" rx="2" ry="2" />
<text  x="1104.86" y="1471.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="273.8" y="1781" width="0.2" height="15.0" fill="rgb(220,199,43)" rx="2" ry="2" />
<text  x="276.81" y="1791.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McSetRequest&gt; (2 samples, 0.03%)</title><rect x="908.7" y="2005" width="0.4" height="15.0" fill="rgb(230,184,0)" rx="2" ry="2" />
<text  x="911.68" y="2015.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="916.9" y="1749" width="0.2" height="15.0" fill="rgb(231,89,27)" rx="2" ry="2" />
<text  x="919.93" y="1759.5" ></text>
</g>
<g >
<title>folly::EventUtil::isEventRegistered (13 samples, 0.22%)</title><rect x="515.3" y="1957" width="2.6" height="15.0" fill="rgb(240,135,22)" rx="2" ry="2" />
<text  x="518.28" y="1967.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::link_before (3 samples, 0.05%)</title><rect x="525.1" y="1957" width="0.6" height="15.0" fill="rgb(241,96,9)" rx="2" ry="2" />
<text  x="528.14" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="347.5" y="1877" width="0.4" height="15.0" fill="rgb(216,137,27)" rx="2" ry="2" />
<text  x="350.46" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="441.6" y="1573" width="0.2" height="15.0" fill="rgb(218,7,24)" rx="2" ry="2" />
<text  x="444.63" y="1583.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="345.4" y="1669" width="0.2" height="15.0" fill="rgb(231,3,12)" rx="2" ry="2" />
<text  x="348.45" y="1679.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="672.4" y="1829" width="0.2" height="15.0" fill="rgb(223,42,44)" rx="2" ry="2" />
<text  x="675.44" y="1839.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="267.0" y="1861" width="0.2" height="15.0" fill="rgb(236,13,12)" rx="2" ry="2" />
<text  x="269.97" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="362.6" y="1765" width="0.2" height="15.0" fill="rgb(240,216,20)" rx="2" ry="2" />
<text  x="365.55" y="1775.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::wait&lt;folly::fibers::Baton::wait (2 samples, 0.03%)</title><rect x="943.1" y="1973" width="0.4" height="15.0" fill="rgb(228,155,35)" rx="2" ry="2" />
<text  x="946.09" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocket::EvbChangeCallback, std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocket::EvbChangeCallback&gt;, void&gt; (3 samples, 0.05%)</title><rect x="571.4" y="2005" width="0.6" height="15.0" fill="rgb(223,8,26)" rx="2" ry="2" />
<text  x="574.43" y="2015.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="731.6" y="1605" width="0.2" height="15.0" fill="rgb(228,103,44)" rx="2" ry="2" />
<text  x="734.60" y="1615.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="19.7" y="1845" width="0.2" height="15.0" fill="rgb(207,0,39)" rx="2" ry="2" />
<text  x="22.66" y="1855.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="152.7" y="53" width="0.2" height="15.0" fill="rgb(218,197,13)" rx="2" ry="2" />
<text  x="155.67" y="63.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="207.4" y="1909" width="0.2" height="15.0" fill="rgb(253,58,12)" rx="2" ry="2" />
<text  x="210.40" y="1919.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="832.0" y="1765" width="0.2" height="15.0" fill="rgb(224,102,13)" rx="2" ry="2" />
<text  x="835.02" y="1775.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="331.4" y="1957" width="0.2" height="15.0" fill="rgb(246,209,1)" rx="2" ry="2" />
<text  x="334.36" y="1967.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::eb_ev_base (1 samples, 0.02%)</title><rect x="233.8" y="1877" width="0.2" height="15.0" fill="rgb(226,195,36)" rx="2" ry="2" />
<text  x="236.77" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (6 samples, 0.10%)</title><rect x="985.8" y="1941" width="1.2" height="15.0" fill="rgb(210,175,51)" rx="2" ry="2" />
<text  x="988.75" y="1951.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::max_size (1 samples, 0.02%)</title><rect x="998.8" y="1941" width="0.2" height="15.0" fill="rgb(247,112,10)" rx="2" ry="2" />
<text  x="1001.83" y="1951.5" ></text>
</g>
<g >
<title>folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;::Data::buffer (1 samples, 0.02%)</title><rect x="81.8" y="1909" width="0.2" height="15.0" fill="rgb(213,12,16)" rx="2" ry="2" />
<text  x="84.84" y="1919.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="491.7" y="1621" width="0.2" height="15.0" fill="rgb(243,116,52)" rx="2" ry="2" />
<text  x="494.74" y="1631.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::nextReplyAvailable (1 samples, 0.02%)</title><rect x="125.9" y="37" width="0.2" height="15.0" fill="rgb(230,228,4)" rx="2" ry="2" />
<text  x="128.91" y="47.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="707.3" y="1733" width="0.2" height="15.0" fill="rgb(218,143,54)" rx="2" ry="2" />
<text  x="710.25" y="1743.5" ></text>
</g>
<g >
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="324.3" y="1925" width="0.2" height="15.0" fill="rgb(218,62,36)" rx="2" ry="2" />
<text  x="327.32" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="491.7" y="1701" width="0.2" height="15.0" fill="rgb(246,201,42)" rx="2" ry="2" />
<text  x="494.74" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="208.6" y="1941" width="0.2" height="15.0" fill="rgb(216,71,8)" rx="2" ry="2" />
<text  x="211.61" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="464.0" y="1973" width="0.8" height="15.0" fill="rgb(237,227,31)" rx="2" ry="2" />
<text  x="466.97" y="1983.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="809.5" y="1589" width="0.2" height="15.0" fill="rgb(240,76,31)" rx="2" ry="2" />
<text  x="812.48" y="1599.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (27 samples, 0.46%)</title><rect x="290.7" y="1685" width="5.4" height="15.0" fill="rgb(211,69,0)" rx="2" ry="2" />
<text  x="293.71" y="1695.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="316.9" y="1909" width="0.2" height="15.0" fill="rgb(233,75,36)" rx="2" ry="2" />
<text  x="319.87" y="1919.5" ></text>
</g>
<g >
<title>__libc_fcntl (7 samples, 0.12%)</title><rect x="1171.7" y="2037" width="1.4" height="15.0" fill="rgb(240,32,46)" rx="2" ry="2" />
<text  x="1174.69" y="2047.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (6 samples, 0.10%)</title><rect x="660.6" y="1925" width="1.2" height="15.0" fill="rgb(217,63,30)" rx="2" ry="2" />
<text  x="663.57" y="1935.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="631.4" y="1685" width="0.2" height="15.0" fill="rgb(221,24,13)" rx="2" ry="2" />
<text  x="634.39" y="1695.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="206.6" y="1941" width="0.2" height="15.0" fill="rgb(233,125,49)" rx="2" ry="2" />
<text  x="209.60" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="267.0" y="1845" width="0.2" height="15.0" fill="rgb(214,44,21)" rx="2" ry="2" />
<text  x="269.97" y="1855.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="212.0" y="2021" width="0.2" height="15.0" fill="rgb(211,173,32)" rx="2" ry="2" />
<text  x="215.03" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="603.2" y="1845" width="0.2" height="15.0" fill="rgb(243,159,39)" rx="2" ry="2" />
<text  x="606.22" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="345.4" y="1845" width="0.2" height="15.0" fill="rgb(220,27,18)" rx="2" ry="2" />
<text  x="348.45" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (3 samples, 0.05%)</title><rect x="850.3" y="1893" width="0.6" height="15.0" fill="rgb(242,154,29)" rx="2" ry="2" />
<text  x="853.33" y="1903.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="151.3" y="53" width="0.2" height="15.0" fill="rgb(245,58,48)" rx="2" ry="2" />
<text  x="154.26" y="63.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="265.2" y="1813" width="0.2" height="15.0" fill="rgb(216,103,39)" rx="2" ry="2" />
<text  x="268.16" y="1823.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (1 samples, 0.02%)</title><rect x="730.2" y="1333" width="0.2" height="15.0" fill="rgb(205,57,43)" rx="2" ry="2" />
<text  x="733.19" y="1343.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::IOBuf*, std::default_delete&lt;folly::IOBuf&gt; &gt; (1 samples, 0.02%)</title><rect x="889.4" y="1893" width="0.2" height="15.0" fill="rgb(206,83,42)" rx="2" ry="2" />
<text  x="892.37" y="1903.5" ></text>
</g>
<g >
<title>folly::fibers::Baton::FiberWaiter::~FiberWaiter (2 samples, 0.03%)</title><rect x="936.5" y="1941" width="0.4" height="15.0" fill="rgb(220,12,16)" rx="2" ry="2" />
<text  x="939.45" y="1951.5" ></text>
</g>
<g >
<title>folly::detail::atomic_ref_integral_base&lt;unsigned int&gt;::atomic_ref_base (1 samples, 0.02%)</title><rect x="194.9" y="1957" width="0.2" height="15.0" fill="rgb(233,50,34)" rx="2" ry="2" />
<text  x="197.93" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (2 samples, 0.03%)</title><rect x="1179.5" y="2005" width="0.4" height="15.0" fill="rgb(224,78,46)" rx="2" ry="2" />
<text  x="1182.54" y="2015.5" ></text>
</g>
<g >
<title>folly::detail::SignedValueHandler&lt;int, true&gt;::init (2 samples, 0.03%)</title><rect x="1002.5" y="2021" width="0.4" height="15.0" fill="rgb(242,146,42)" rx="2" ry="2" />
<text  x="1005.46" y="2031.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.02%)</title><rect x="1054.6" y="1941" width="0.2" height="15.0" fill="rgb(253,83,52)" rx="2" ry="2" />
<text  x="1057.57" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (3 samples, 0.05%)</title><rect x="520.3" y="1973" width="0.6" height="15.0" fill="rgb(218,221,2)" rx="2" ry="2" />
<text  x="523.31" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="265.2" y="1637" width="0.2" height="15.0" fill="rgb(237,226,0)" rx="2" ry="2" />
<text  x="268.16" y="1647.5" ></text>
</g>
<g >
<title>folly::EventBase::bumpHandlingTime (1 samples, 0.02%)</title><rect x="19.9" y="2037" width="0.2" height="15.0" fill="rgb(208,109,22)" rx="2" ry="2" />
<text  x="22.86" y="2047.5" ></text>
</g>
<g >
<title>kmem_cache_free (19 samples, 0.32%)</title><rect x="1069.1" y="1893" width="3.8" height="15.0" fill="rgb(211,115,33)" rx="2" ry="2" />
<text  x="1072.06" y="1903.5" ></text>
</g>
<g >
<title>mpol_misplaced (1 samples, 0.02%)</title><rect x="63.9" y="1877" width="0.2" height="15.0" fill="rgb(206,0,31)" rx="2" ry="2" />
<text  x="66.93" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1109.3" y="1765" width="0.2" height="15.0" fill="rgb(220,154,25)" rx="2" ry="2" />
<text  x="1112.31" y="1775.5" ></text>
</g>
<g >
<title>tcp_child_process (1 samples, 0.02%)</title><rect x="809.5" y="1349" width="0.2" height="15.0" fill="rgb(213,134,17)" rx="2" ry="2" />
<text  x="812.48" y="1359.5" ></text>
</g>
<g >
<title>facebook::memcache::FifoManager::fetchThreadLocal (10 samples, 0.17%)</title><rect x="1146.9" y="2053" width="2.0" height="15.0" fill="rgb(234,192,35)" rx="2" ry="2" />
<text  x="1149.94" y="2063.5" ></text>
</g>
<g >
<title>__ip_dev_find (1 samples, 0.02%)</title><rect x="730.2" y="1301" width="0.2" height="15.0" fill="rgb(220,4,28)" rx="2" ry="2" />
<text  x="733.19" y="1311.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="97.1" y="1909" width="0.2" height="15.0" fill="rgb(218,5,22)" rx="2" ry="2" />
<text  x="100.13" y="1919.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="153.9" y="1253" width="0.2" height="15.0" fill="rgb(209,92,12)" rx="2" ry="2" />
<text  x="156.88" y="1263.5" ></text>
</g>
<g >
<title>folly::IOBuf::IOBuf (1 samples, 0.02%)</title><rect x="671.6" y="2021" width="0.2" height="15.0" fill="rgb(246,136,49)" rx="2" ry="2" />
<text  x="674.64" y="2031.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="347.5" y="1845" width="0.2" height="15.0" fill="rgb(221,57,36)" rx="2" ry="2" />
<text  x="350.46" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, folly::IOBuf*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, folly::IOBuf*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (6 samples, 0.10%)</title><rect x="575.7" y="1989" width="1.2" height="15.0" fill="rgb(228,32,1)" rx="2" ry="2" />
<text  x="578.65" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="730.2" y="1461" width="0.2" height="15.0" fill="rgb(227,166,13)" rx="2" ry="2" />
<text  x="733.19" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="240.6" y="1765" width="0.2" height="15.0" fill="rgb(213,155,53)" rx="2" ry="2" />
<text  x="243.61" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="538.8" y="2005" width="0.2" height="15.0" fill="rgb(220,58,41)" rx="2" ry="2" />
<text  x="541.83" y="2015.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="388.3" y="1685" width="0.2" height="15.0" fill="rgb(243,17,6)" rx="2" ry="2" />
<text  x="391.31" y="1695.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1058.2" y="1749" width="0.2" height="15.0" fill="rgb(206,147,18)" rx="2" ry="2" />
<text  x="1061.20" y="1759.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;folly::ShutdownSocketSet&gt;::shared_ptr (6 samples, 0.10%)</title><rect x="841.9" y="1909" width="1.2" height="15.0" fill="rgb(227,174,19)" rx="2" ry="2" />
<text  x="844.88" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1181.1" y="1989" width="0.2" height="15.0" fill="rgb(247,181,43)" rx="2" ry="2" />
<text  x="1184.15" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::fixStackUnwinding (1 samples, 0.02%)</title><rect x="990.4" y="1877" width="0.2" height="15.0" fill="rgb(235,188,31)" rx="2" ry="2" />
<text  x="993.38" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void folly::fibers::Baton::waitFiber&lt;folly::fibers::Baton::wait (1 samples, 0.02%)</title><rect x="987.2" y="1957" width="0.2" height="15.0" fill="rgb(216,94,1)" rx="2" ry="2" />
<text  x="990.16" y="1967.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1155.4" y="1781" width="0.2" height="15.0" fill="rgb(234,217,43)" rx="2" ry="2" />
<text  x="1158.39" y="1791.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (3 samples, 0.05%)</title><rect x="286.3" y="1685" width="0.6" height="15.0" fill="rgb(250,188,3)" rx="2" ry="2" />
<text  x="289.29" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="645" width="28.8" height="15.0" fill="rgb(240,182,4)" rx="2" ry="2" />
<text  x="127.10" y="655.5" >[u..</text>
</g>
<g >
<title>facebook::memcache::AsyncMcServerWorker::addClientSocket (96 samples, 1.64%)</title><rect x="224.9" y="2005" width="19.3" height="15.0" fill="rgb(253,92,33)" rx="2" ry="2" />
<text  x="227.91" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="205.8" y="1941" width="0.2" height="15.0" fill="rgb(228,68,0)" rx="2" ry="2" />
<text  x="208.79" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::fiber_local&lt;facebook::memcache::MemcacheRouterInfo&gt;::runWithoutLocals&lt;facebook::memcache::mcrouter::detail::ProxyRequestContextTypedWithCallback&lt;facebook::memcache::MemcacheRouterInfo, facebook::memcache::McGetRequest, std::unique_ptr&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;, std::default_delete&lt;facebook::memcache::mcrouter::ProxyRequestContextWithInfo&gt; &gt; facebook::memcache::mcrouter::CarbonRouterClient&lt;facebook::memcache::MemcacheRouterInfo&gt;::makeProxyRequestContext&lt;facebook::memcache::McGetRequest, void facebook::memcache::mcrouter::ServerOnRequest&lt;facebook::memcache::MemcacheRouterInfo&gt;::send&lt;facebook::memcache::McServerRequestContext, facebook::memcache::McGetRequest&gt; (2 samples, 0.03%)</title><rect x="1170.7" y="2053" width="0.4" height="15.0" fill="rgb(234,135,33)" rx="2" ry="2" />
<text  x="1173.68" y="2063.5" ></text>
</g>
<g >
<title>inet_csk_reset_keepalive_timer (1 samples, 0.02%)</title><rect x="1088.0" y="1637" width="0.2" height="15.0" fill="rgb(231,206,21)" rx="2" ry="2" />
<text  x="1090.98" y="1647.5" ></text>
</g>
<g >
<title>dput.part.26 (110 samples, 1.88%)</title><rect x="722.3" y="1781" width="22.2" height="15.0" fill="rgb(227,227,41)" rx="2" ry="2" />
<text  x="725.35" y="1791.5" >d..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="860.2" y="1957" width="0.2" height="15.0" fill="rgb(250,142,40)" rx="2" ry="2" />
<text  x="863.19" y="1967.5" ></text>
</g>
<g >
<title>folly::annotate_ignore_thread_sanitizer_guard::~annotate_ignore_thread_sanitizer_guard (1 samples, 0.02%)</title><rect x="1181.7" y="2037" width="0.3" height="15.0" fill="rgb(231,198,34)" rx="2" ry="2" />
<text  x="1184.75" y="2047.5" ></text>
</g>
<g >
<title>apparmor_socket_getpeername (1 samples, 0.02%)</title><rect x="699.2" y="1797" width="0.2" height="15.0" fill="rgb(228,177,40)" rx="2" ry="2" />
<text  x="702.21" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::bhtraits_base&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node&lt;void*&gt;*, boost::intrusive::dft_tag, 1u&gt;::to_value_ptr (3 samples, 0.05%)</title><rect x="178.0" y="1893" width="0.6" height="15.0" fill="rgb(248,158,51)" rx="2" ry="2" />
<text  x="181.03" y="1903.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1156.0" y="1941" width="0.2" height="15.0" fill="rgb(216,14,13)" rx="2" ry="2" />
<text  x="1158.99" y="1951.5" ></text>
</g>
<g >
<title>kfree_skbmem (20 samples, 0.34%)</title><rect x="1068.9" y="1909" width="4.0" height="15.0" fill="rgb(242,199,16)" rx="2" ry="2" />
<text  x="1071.86" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1174.7" y="1989" width="0.2" height="15.0" fill="rgb(223,174,4)" rx="2" ry="2" />
<text  x="1177.71" y="1999.5" ></text>
</g>
<g >
<title>folly::fibers::FiberImpl::deactivate (5 samples, 0.09%)</title><rect x="940.9" y="1877" width="1.0" height="15.0" fill="rgb(223,117,30)" rx="2" ry="2" />
<text  x="943.88" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="10.2" y="2021" width="2.0" height="15.0" fill="rgb(249,138,3)" rx="2" ry="2" />
<text  x="13.20" y="2031.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1181.1" y="1829" width="0.2" height="15.0" fill="rgb(233,188,25)" rx="2" ry="2" />
<text  x="1184.15" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="513.3" y="1845" width="0.2" height="15.0" fill="rgb(231,193,27)" rx="2" ry="2" />
<text  x="516.27" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_ptr (7 samples, 0.12%)</title><rect x="42.6" y="1941" width="1.4" height="15.0" fill="rgb(214,128,40)" rx="2" ry="2" />
<text  x="45.60" y="1951.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.02%)</title><rect x="543.9" y="1733" width="0.2" height="15.0" fill="rgb(248,35,7)" rx="2" ry="2" />
<text  x="546.86" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (2 samples, 0.03%)</title><rect x="539.6" y="1941" width="0.4" height="15.0" fill="rgb(231,118,48)" rx="2" ry="2" />
<text  x="542.63" y="1951.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.02%)</title><rect x="253.1" y="1909" width="0.2" height="15.0" fill="rgb(227,1,36)" rx="2" ry="2" />
<text  x="256.08" y="1919.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="543.9" y="1925" width="0.2" height="15.0" fill="rgb(242,24,8)" rx="2" ry="2" />
<text  x="546.86" y="1935.5" ></text>
</g>
<g >
<title>folly::SocketAddress::getFamily (2 samples, 0.03%)</title><rect x="595.6" y="1989" width="0.4" height="15.0" fill="rgb(251,152,7)" rx="2" ry="2" />
<text  x="598.57" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="775.5" y="1573" width="0.2" height="15.0" fill="rgb(237,99,26)" rx="2" ry="2" />
<text  x="778.47" y="1583.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 0.02%)</title><rect x="903.3" y="1525" width="0.2" height="15.0" fill="rgb(248,36,22)" rx="2" ry="2" />
<text  x="906.25" y="1535.5" ></text>
</g>
<g >
<title>inet_getname (1 samples, 0.02%)</title><rect x="353.7" y="1957" width="0.2" height="15.0" fill="rgb(237,26,54)" rx="2" ry="2" />
<text  x="356.70" y="1967.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="433.6" y="1589" width="0.2" height="15.0" fill="rgb(209,72,16)" rx="2" ry="2" />
<text  x="436.58" y="1599.5" ></text>
</g>
<g >
<title>tcp_init_cwnd (1 samples, 0.02%)</title><rect x="767.6" y="1701" width="0.2" height="15.0" fill="rgb(227,117,1)" rx="2" ry="2" />
<text  x="770.62" y="1711.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="97.1" y="1925" width="0.2" height="15.0" fill="rgb(213,140,25)" rx="2" ry="2" />
<text  x="100.13" y="1935.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.07%)</title><rect x="815.3" y="1637" width="0.8" height="15.0" fill="rgb(220,159,0)" rx="2" ry="2" />
<text  x="818.31" y="1647.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="592.6" y="1845" width="0.2" height="15.0" fill="rgb(219,89,4)" rx="2" ry="2" />
<text  x="595.55" y="1855.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="115.0" y="1765" width="0.2" height="15.0" fill="rgb(212,127,8)" rx="2" ry="2" />
<text  x="118.04" y="1775.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1072.7" y="1685" width="0.2" height="15.0" fill="rgb(218,161,45)" rx="2" ry="2" />
<text  x="1075.68" y="1695.5" ></text>
</g>
<g >
<title>folly::bititerator_detail::BitReference&lt;unsigned long&amp;, unsigned long&gt;::operator= (2 samples, 0.03%)</title><rect x="527.4" y="1973" width="0.4" height="15.0" fill="rgb(233,44,18)" rx="2" ry="2" />
<text  x="530.36" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::__uniq_ptr_impl (6 samples, 0.10%)</title><rect x="573.4" y="1989" width="1.2" height="15.0" fill="rgb(226,43,29)" rx="2" ry="2" />
<text  x="576.44" y="1999.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="317.3" y="1941" width="0.8" height="15.0" fill="rgb(229,37,11)" rx="2" ry="2" />
<text  x="320.27" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="78.2" y="1909" width="0.2" height="15.0" fill="rgb(220,122,5)" rx="2" ry="2" />
<text  x="81.22" y="1919.5" ></text>
</g>
<g >
<title>prefetch_freepointer (2 samples, 0.03%)</title><rect x="385.1" y="1893" width="0.4" height="15.0" fill="rgb(207,117,21)" rx="2" ry="2" />
<text  x="388.09" y="1903.5" ></text>
</g>
<g >
<title>ip_local_deliver (28 samples, 0.48%)</title><rect x="1100.7" y="1621" width="5.6" height="15.0" fill="rgb(221,121,18)" rx="2" ry="2" />
<text  x="1103.65" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="443.8" y="1957" width="0.9" height="15.0" fill="rgb(219,29,24)" rx="2" ry="2" />
<text  x="446.85" y="1967.5" ></text>
</g>
<g >
<title>__tcp_get_metrics (1 samples, 0.02%)</title><rect x="1111.3" y="1637" width="0.2" height="15.0" fill="rgb(252,70,31)" rx="2" ry="2" />
<text  x="1114.32" y="1647.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (2 samples, 0.03%)</title><rect x="984.5" y="1957" width="0.4" height="15.0" fill="rgb(239,149,44)" rx="2" ry="2" />
<text  x="987.55" y="1967.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1120.4" y="1957" width="0.2" height="15.0" fill="rgb(247,87,1)" rx="2" ry="2" />
<text  x="1123.38" y="1967.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::updateEventRegistration (36 samples, 0.61%)</title><rect x="231.1" y="1925" width="7.3" height="15.0" fill="rgb(237,44,11)" rx="2" ry="2" />
<text  x="234.15" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="730.2" y="1429" width="0.2" height="15.0" fill="rgb(221,88,17)" rx="2" ry="2" />
<text  x="733.19" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="549" width="28.8" height="15.0" fill="rgb(240,157,4)" rx="2" ry="2" />
<text  x="127.10" y="559.5" >[u..</text>
</g>
<g >
<title>sys_setsockopt (27 samples, 0.46%)</title><rect x="681.3" y="1941" width="5.4" height="15.0" fill="rgb(231,9,3)" rx="2" ry="2" />
<text  x="684.30" y="1951.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="461.8" y="1957" width="0.2" height="15.0" fill="rgb(205,1,52)" rx="2" ry="2" />
<text  x="464.76" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="633.4" y="1925" width="0.2" height="15.0" fill="rgb(237,111,0)" rx="2" ry="2" />
<text  x="636.40" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.09%)</title><rect x="605.8" y="2005" width="1.0" height="15.0" fill="rgb(232,47,45)" rx="2" ry="2" />
<text  x="608.84" y="2015.5" ></text>
</g>
<g >
<title>std::swap&lt;folly::RequestContext*&gt; (1 samples, 0.02%)</title><rect x="532.8" y="1941" width="0.2" height="15.0" fill="rgb(248,15,4)" rx="2" ry="2" />
<text  x="535.79" y="1951.5" ></text>
</g>
<g >
<title>__internal_add_timer (1 samples, 0.02%)</title><rect x="302.2" y="1765" width="0.2" height="15.0" fill="rgb(232,26,53)" rx="2" ry="2" />
<text  x="305.18" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::~_Hashtable_alloc (2 samples, 0.03%)</title><rect x="86.9" y="1941" width="0.4" height="15.0" fill="rgb(244,215,34)" rx="2" ry="2" />
<text  x="89.87" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="153.3" y="709" width="0.2" height="15.0" fill="rgb(207,108,13)" rx="2" ry="2" />
<text  x="156.27" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (1 samples, 0.02%)</title><rect x="235.0" y="1797" width="0.2" height="15.0" fill="rgb(210,214,23)" rx="2" ry="2" />
<text  x="237.97" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1030.4" y="1973" width="0.2" height="15.0" fill="rgb(237,8,39)" rx="2" ry="2" />
<text  x="1033.43" y="1983.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="362.6" y="1701" width="0.2" height="15.0" fill="rgb(234,172,13)" rx="2" ry="2" />
<text  x="365.55" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4 samples, 0.07%)</title><rect x="464.0" y="1845" width="0.8" height="15.0" fill="rgb(228,147,40)" rx="2" ry="2" />
<text  x="466.97" y="1855.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="78.2" y="1893" width="0.2" height="15.0" fill="rgb(249,57,53)" rx="2" ry="2" />
<text  x="81.22" y="1903.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="97.1" y="1845" width="0.2" height="15.0" fill="rgb(209,144,48)" rx="2" ry="2" />
<text  x="100.13" y="1855.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::SendMsgParamsCallback::getDefaultFlags (2 samples, 0.03%)</title><rect x="881.9" y="1925" width="0.4" height="15.0" fill="rgb(205,37,23)" rx="2" ry="2" />
<text  x="884.92" y="1935.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="1087.8" y="1589" width="0.2" height="15.0" fill="rgb(232,37,33)" rx="2" ry="2" />
<text  x="1090.78" y="1599.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="19.1" y="1765" width="0.2" height="15.0" fill="rgb(214,43,25)" rx="2" ry="2" />
<text  x="22.06" y="1775.5" ></text>
</g>
<g >
<title>folly::AsyncTimeout::libeventCallback (4 samples, 0.07%)</title><rect x="19.1" y="2037" width="0.8" height="15.0" fill="rgb(213,25,10)" rx="2" ry="2" />
<text  x="22.06" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="533.4" y="1941" width="0.2" height="15.0" fill="rgb(236,22,31)" rx="2" ry="2" />
<text  x="536.39" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="433.6" y="1893" width="0.2" height="15.0" fill="rgb(224,135,26)" rx="2" ry="2" />
<text  x="436.58" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::fibers::LoopController, std::default_delete&lt;folly::fibers::LoopController&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="534.2" y="2005" width="0.6" height="15.0" fill="rgb(253,210,26)" rx="2" ry="2" />
<text  x="537.20" y="2015.5" ></text>
</g>
<g >
<title>irq_may_run (1 samples, 0.02%)</title><rect x="346.9" y="1877" width="0.2" height="15.0" fill="rgb(245,82,11)" rx="2" ry="2" />
<text  x="349.86" y="1887.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.09%)</title><rect x="12.4" y="1989" width="1.0" height="15.0" fill="rgb(231,210,48)" rx="2" ry="2" />
<text  x="15.41" y="1999.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;folly::RequestContext,  (3 samples, 0.05%)</title><rect x="985.2" y="1957" width="0.6" height="15.0" fill="rgb(216,219,11)" rx="2" ry="2" />
<text  x="988.15" y="1967.5" ></text>
</g>
<g >
<title>d_instantiate (12 samples, 0.20%)</title><rect x="385.7" y="1941" width="2.4" height="15.0" fill="rgb(242,102,4)" rx="2" ry="2" />
<text  x="388.69" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncTransportCertificate const*, std::default_delete&lt;folly::AsyncTransportCertificate const&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="572.2" y="1973" width="0.2" height="15.0" fill="rgb(249,183,45)" rx="2" ry="2" />
<text  x="575.23" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="492.3" y="1829" width="0.2" height="15.0" fill="rgb(217,204,37)" rx="2" ry="2" />
<text  x="495.34" y="1839.5" ></text>
</g>
<g >
<title>pthread_self@plt (1 samples, 0.02%)</title><rect x="1150.6" y="1957" width="0.2" height="15.0" fill="rgb(230,216,45)" rx="2" ry="2" />
<text  x="1153.56" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (149 samples, 2.54%)</title><rect x="124.1" y="1301" width="30.0" height="15.0" fill="rgb(223,50,51)" rx="2" ry="2" />
<text  x="127.10" y="1311.5" >[u..</text>
</g>
<g >
<title>skb_clone (9 samples, 0.15%)</title><rect x="298.0" y="1813" width="1.8" height="15.0" fill="rgb(233,203,52)" rx="2" ry="2" />
<text  x="300.96" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (13 samples, 0.22%)</title><rect x="49.2" y="1941" width="2.7" height="15.0" fill="rgb(238,25,37)" rx="2" ry="2" />
<text  x="52.24" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="862.8" y="1973" width="0.2" height="15.0" fill="rgb(246,191,13)" rx="2" ry="2" />
<text  x="865.80" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (37 samples, 0.63%)</title><rect x="1157.0" y="1941" width="7.4" height="15.0" fill="rgb(219,142,18)" rx="2" ry="2" />
<text  x="1160.00" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (147 samples, 2.51%)</title><rect x="124.1" y="805" width="29.6" height="15.0" fill="rgb(224,189,25)" rx="2" ry="2" />
<text  x="127.10" y="815.5" >[u..</text>
</g>
<g >
<title>locks_remove_posix (25 samples, 0.43%)</title><rect x="826.2" y="1813" width="5.0" height="15.0" fill="rgb(229,31,37)" rx="2" ry="2" />
<text  x="829.18" y="1823.5" ></text>
</g>
<g >
<title>folly::goodMallocSize (1 samples, 0.02%)</title><rect x="640.2" y="1973" width="0.2" height="15.0" fill="rgb(207,218,54)" rx="2" ry="2" />
<text  x="643.25" y="1983.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="930.4" y="1829" width="0.2" height="15.0" fill="rgb(239,76,38)" rx="2" ry="2" />
<text  x="933.42" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="819.5" y="1621" width="0.2" height="15.0" fill="rgb(238,131,18)" rx="2" ry="2" />
<text  x="822.54" y="1631.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="1055.2" y="1717" width="0.2" height="15.0" fill="rgb(221,118,21)" rx="2" ry="2" />
<text  x="1058.18" y="1727.5" ></text>
</g>
<g >
<title>tcp_push (158 samples, 2.69%)</title><rect x="273.8" y="1877" width="31.8" height="15.0" fill="rgb(248,188,10)" rx="2" ry="2" />
<text  x="276.81" y="1887.5" >tc..</text>
</g>
<g >
<title>folly::EventBase::dcheckIsInEventBaseThread (11 samples, 0.19%)</title><rect x="885.1" y="1957" width="2.3" height="15.0" fill="rgb(230,120,23)" rx="2" ry="2" />
<text  x="888.14" y="1967.5" ></text>
</g>
<g >
<title>ip_queue_xmit (117 samples, 2.00%)</title><rect x="774.7" y="1669" width="23.5" height="15.0" fill="rgb(242,132,20)" rx="2" ry="2" />
<text  x="777.67" y="1679.5" >i..</text>
</g>
<g >
<title>__init_rwsem (9 samples, 0.15%)</title><rect x="362.8" y="1909" width="1.8" height="15.0" fill="rgb(240,156,1)" rx="2" ry="2" />
<text  x="365.75" y="1919.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="783.5" y="1301" width="0.2" height="15.0" fill="rgb(230,97,13)" rx="2" ry="2" />
<text  x="786.52" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (4 samples, 0.07%)</title><rect x="1000.6" y="2005" width="0.8" height="15.0" fill="rgb(235,207,12)" rx="2" ry="2" />
<text  x="1003.64" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="324.5" y="2021" width="0.2" height="15.0" fill="rgb(209,152,23)" rx="2" ry="2" />
<text  x="327.52" y="2031.5" ></text>
</g>
<g >
<title>release_sock (3 samples, 0.05%)</title><rect x="261.5" y="1893" width="0.6" height="15.0" fill="rgb(232,20,21)" rx="2" ry="2" />
<text  x="264.53" y="1903.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;folly::IOBuf*&gt; (1 samples, 0.02%)</title><rect x="150.9" y="37" width="0.2" height="15.0" fill="rgb(238,40,23)" rx="2" ry="2" />
<text  x="153.86" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="747.7" y="1477" width="0.2" height="15.0" fill="rgb(245,131,3)" rx="2" ry="2" />
<text  x="750.70" y="1487.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="701.8" y="1685" width="0.2" height="15.0" fill="rgb(220,176,53)" rx="2" ry="2" />
<text  x="704.82" y="1695.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.23 (1 samples, 0.02%)</title><rect x="13.6" y="1829" width="0.2" height="15.0" fill="rgb(239,135,10)" rx="2" ry="2" />
<text  x="16.62" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="609.7" y="1925" width="0.4" height="15.0" fill="rgb(236,91,52)" rx="2" ry="2" />
<text  x="612.66" y="1935.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="1032.4" y="1941" width="0.2" height="15.0" fill="rgb(246,23,5)" rx="2" ry="2" />
<text  x="1035.44" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 2.44%)</title><rect x="124.1" y="485" width="28.8" height="15.0" fill="rgb(238,210,2)" rx="2" ry="2" />
<text  x="127.10" y="495.5" >[u..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="433.6" y="1717" width="0.2" height="15.0" fill="rgb(241,221,54)" rx="2" ry="2" />
<text  x="436.58" y="1727.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="433.6" y="1701" width="0.2" height="15.0" fill="rgb(227,34,48)" rx="2" ry="2" />
<text  x="436.58" y="1711.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::WriteResult::WriteResult (3 samples, 0.05%)</title><rect x="882.3" y="1941" width="0.6" height="15.0" fill="rgb(220,179,47)" rx="2" ry="2" />
<text  x="885.32" y="1951.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (3 samples, 0.05%)</title><rect x="95.9" y="1973" width="0.6" height="15.0" fill="rgb(248,112,24)" rx="2" ry="2" />
<text  x="98.92" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="1184.0" y="2021" width="0.2" height="15.0" fill="rgb(223,90,30)" rx="2" ry="2" />
<text  x="1186.96" y="2031.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="548.9" y="1829" width="0.2" height="15.0" fill="rgb(230,122,38)" rx="2" ry="2" />
<text  x="551.89" y="1839.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="840.9" y="1797" width="0.2" height="15.0" fill="rgb(217,223,30)" rx="2" ry="2" />
<text  x="843.87" y="1807.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="324.1" y="2021" width="0.4" height="15.0" fill="rgb(218,219,54)" rx="2" ry="2" />
<text  x="327.12" y="2031.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.09%)</title><rect x="13.6" y="1973" width="1.0" height="15.0" fill="rgb(244,195,0)" rx="2" ry="2" />
<text  x="16.62" y="1983.5" ></text>
</g>
<g >
<title>_raw_write_lock_bh (1 samples, 0.02%)</title><rect x="752.9" y="1749" width="0.2" height="15.0" fill="rgb(237,208,7)" rx="2" ry="2" />
<text  x="755.93" y="1759.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="880.1" y="1813" width="0.2" height="15.0" fill="rgb(234,206,49)" rx="2" ry="2" />
<text  x="883.11" y="1823.5" ></text>
</g>
<g >
<title>google::GetReferenceableValue&lt;std::thread::id&gt; (2 samples, 0.03%)</title><rect x="550.3" y="1957" width="0.4" height="15.0" fill="rgb(240,200,35)" rx="2" ry="2" />
<text  x="553.30" y="1967.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="64.9" y="1941" width="0.4" height="15.0" fill="rgb(205,145,38)" rx="2" ry="2" />
<text  x="67.94" y="1951.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1155.4" y="1893" width="0.2" height="15.0" fill="rgb(233,37,17)" rx="2" ry="2" />
<text  x="1158.39" y="1903.5" ></text>
</g>
<g >
<title>std::cref&lt;short&gt; (5 samples, 0.09%)</title><rect x="515.9" y="1925" width="1.0" height="15.0" fill="rgb(242,21,12)" rx="2" ry="2" />
<text  x="518.89" y="1935.5" ></text>
</g>
<g >
<title>tcp_poll (17 samples, 0.29%)</title><rect x="486.9" y="1893" width="3.4" height="15.0" fill="rgb(208,173,37)" rx="2" ry="2" />
<text  x="489.91" y="1903.5" ></text>
</g>
<g >
<title>security_file_free (11 samples, 0.19%)</title><rect x="748.1" y="1797" width="2.2" height="15.0" fill="rgb(209,189,25)" rx="2" ry="2" />
<text  x="751.10" y="1807.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="207.4" y="1893" width="0.2" height="15.0" fill="rgb(237,193,45)" rx="2" ry="2" />
<text  x="210.40" y="1903.5" ></text>
</g>
<g >
<title>tcp_v4_init_req (1 samples, 0.02%)</title><rect x="844.1" y="1541" width="0.2" height="15.0" fill="rgb(239,7,17)" rx="2" ry="2" />
<text  x="847.09" y="1551.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="55.1" y="1829" width="0.2" height="15.0" fill="rgb(206,24,51)" rx="2" ry="2" />
<text  x="58.08" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;folly::RequestContext&gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="187.1" y="1909" width="0.4" height="15.0" fill="rgb(207,87,40)" rx="2" ry="2" />
<text  x="190.08" y="1919.5" ></text>
</g>
<g >
<title>folly::AsyncTransport::~AsyncTransport (1 samples, 0.02%)</title><rect x="89.3" y="1973" width="0.2" height="15.0" fill="rgb(247,116,12)" rx="2" ry="2" />
<text  x="92.28" y="1983.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="491.7" y="1797" width="0.2" height="15.0" fill="rgb(254,228,14)" rx="2" ry="2" />
<text  x="494.74" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (28 samples, 0.48%)</title><rect x="1100.7" y="1685" width="5.6" height="15.0" fill="rgb(239,158,46)" rx="2" ry="2" />
<text  x="1103.65" y="1695.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1054.4" y="1989" width="0.2" height="15.0" fill="rgb(234,25,27)" rx="2" ry="2" />
<text  x="1057.37" y="1999.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.03%)</title><rect x="591.5" y="1829" width="0.5" height="15.0" fill="rgb(216,62,7)" rx="2" ry="2" />
<text  x="594.55" y="1839.5" ></text>
</g>
<g >
<title>boost::operators_impl::equality_comparable1&lt;folly::small_vector&lt;folly::AsyncTransport::LifecycleObserver*, 2ul, void, void, void&gt;, folly::detail::IntegralSizePolicy&lt;unsigned long, true&gt; &gt;::equality_comparable1 (1 samples, 0.02%)</title><rect x="569.6" y="1957" width="0.2" height="15.0" fill="rgb(251,31,28)" rx="2" ry="2" />
<text  x="572.61" y="1967.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.03%)</title><rect x="213.8" y="2037" width="0.4" height="15.0" fill="rgb(246,132,51)" rx="2" ry="2" />
<text  x="216.84" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="272.2" y="1813" width="0.4" height="15.0" fill="rgb(253,40,48)" rx="2" ry="2" />
<text  x="275.20" y="1823.5" ></text>
</g>
<g >
<title>facebook::memcache::McClientRequestContextQueue::reply&lt;facebook::memcache::McGetReply&gt; (13 samples, 0.22%)</title><rect x="1149.4" y="2053" width="2.6" height="15.0" fill="rgb(224,204,30)" rx="2" ry="2" />
<text  x="1152.35" y="2063.5" ></text>
</g>
<g >
<title>folly::EventBase::loopBody (75 samples, 1.28%)</title><rect x="173.4" y="1957" width="15.1" height="15.0" fill="rgb(248,77,50)" rx="2" ry="2" />
<text  x="176.40" y="1967.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerSession::asciiRequestReady&lt;facebook::memcache::McGetRequest&gt; (7 samples, 0.12%)</title><rect x="149.5" y="53" width="1.4" height="15.0" fill="rgb(247,209,8)" rx="2" ry="2" />
<text  x="152.45" y="63.5" ></text>
</g>
<g >
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1084.8" y="1925" width="0.2" height="15.0" fill="rgb(221,91,41)" rx="2" ry="2" />
<text  x="1087.76" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="516.7" y="1829" width="0.2" height="15.0" fill="rgb(230,170,37)" rx="2" ry="2" />
<text  x="519.69" y="1839.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::sendSync&lt;facebook::memcache::McGetRequest&gt; (9 samples, 0.15%)</title><rect x="929.0" y="2005" width="1.8" height="15.0" fill="rgb(251,172,9)" rx="2" ry="2" />
<text  x="932.01" y="2015.5" ></text>
</g>
<g >
<title>google::Check_EQImpl&lt;folly::IOBuf*, folly::IOBuf*&gt; (9 samples, 0.15%)</title><rect x="951.5" y="1973" width="1.9" height="15.0" fill="rgb(226,136,21)" rx="2" ry="2" />
<text  x="954.55" y="1983.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="672.0" y="2021" width="0.2" height="15.0" fill="rgb(207,14,45)" rx="2" ry="2" />
<text  x="675.04" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (79 samples, 1.35%)</title><rect x="172.6" y="1989" width="15.9" height="15.0" fill="rgb(249,35,0)" rx="2" ry="2" />
<text  x="175.59" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="236.0" y="1861" width="0.2" height="15.0" fill="rgb(207,174,9)" rx="2" ry="2" />
<text  x="238.98" y="1871.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="920.6" y="1749" width="0.2" height="15.0" fill="rgb(232,33,20)" rx="2" ry="2" />
<text  x="923.56" y="1759.5" ></text>
</g>
<g >
<title>___d_drop (2 samples, 0.03%)</title><rect x="723.8" y="1765" width="0.4" height="15.0" fill="rgb(234,19,53)" rx="2" ry="2" />
<text  x="726.76" y="1775.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (7 samples, 0.12%)</title><rect x="1171.7" y="2021" width="1.4" height="15.0" fill="rgb(227,152,39)" rx="2" ry="2" />
<text  x="1174.69" y="2031.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="407.8" y="1941" width="0.2" height="15.0" fill="rgb(226,186,7)" rx="2" ry="2" />
<text  x="410.83" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="510.7" y="1781" width="0.2" height="15.0" fill="rgb(213,109,13)" rx="2" ry="2" />
<text  x="513.65" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_stage2 (3 samples, 0.05%)</title><rect x="219.9" y="2021" width="0.6" height="15.0" fill="rgb(241,211,40)" rx="2" ry="2" />
<text  x="222.88" y="2031.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.02%)</title><rect x="12.2" y="1989" width="0.2" height="15.0" fill="rgb(213,95,46)" rx="2" ry="2" />
<text  x="15.21" y="1999.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.02%)</title><rect x="64.7" y="1685" width="0.2" height="15.0" fill="rgb(237,77,4)" rx="2" ry="2" />
<text  x="67.73" y="1695.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="801.0" y="1413" width="0.2" height="15.0" fill="rgb(254,108,21)" rx="2" ry="2" />
<text  x="804.03" y="1423.5" ></text>
</g>
<g >
<title>folly::EventBase::getLibeventBase (14 samples, 0.24%)</title><rect x="543.9" y="1941" width="2.8" height="15.0" fill="rgb(249,120,30)" rx="2" ry="2" />
<text  x="546.86" y="1951.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.10%)</title><rect x="157.1" y="1989" width="1.2" height="15.0" fill="rgb(231,210,50)" rx="2" ry="2" />
<text  x="160.10" y="1999.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="492.3" y="1845" width="0.2" height="15.0" fill="rgb(213,190,0)" rx="2" ry="2" />
<text  x="495.34" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="299.6" y="1781" width="0.2" height="15.0" fill="rgb(211,140,25)" rx="2" ry="2" />
<text  x="302.57" y="1791.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (4 samples, 0.07%)</title><rect x="379.5" y="1893" width="0.8" height="15.0" fill="rgb(214,144,12)" rx="2" ry="2" />
<text  x="382.45" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;folly::EventBase::LoopCallback, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="173.0" y="1941" width="0.2" height="15.0" fill="rgb(215,67,15)" rx="2" ry="2" />
<text  x="175.99" y="1951.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (1 samples, 0.02%)</title><rect x="844.9" y="1909" width="0.2" height="15.0" fill="rgb(236,207,7)" rx="2" ry="2" />
<text  x="847.89" y="1919.5" ></text>
</g>
<g >
<title>sock_sendmsg (271 samples, 4.62%)</title><rect x="257.7" y="1941" width="54.5" height="15.0" fill="rgb(221,34,15)" rx="2" ry="2" />
<text  x="260.71" y="1951.5" >sock_..</text>
</g>
<g >
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="593.0" y="1829" width="0.2" height="15.0" fill="rgb(212,37,50)" rx="2" ry="2" />
<text  x="595.96" y="1839.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="887.4" y="1797" width="0.2" height="15.0" fill="rgb(223,56,9)" rx="2" ry="2" />
<text  x="890.35" y="1807.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="65.1" y="1701" width="0.2" height="15.0" fill="rgb(224,115,21)" rx="2" ry="2" />
<text  x="68.14" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;folly::IOBuf* const, folly::AsyncSocket::IOBufInfo&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="86.5" y="1909" width="0.2" height="15.0" fill="rgb(218,118,54)" rx="2" ry="2" />
<text  x="89.47" y="1919.5" ></text>
</g>
<g >
<title>napi_gro_receive (2 samples, 0.03%)</title><rect x="486.5" y="1797" width="0.4" height="15.0" fill="rgb(245,19,26)" rx="2" ry="2" />
<text  x="489.51" y="1807.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (20 samples, 0.34%)</title><rect x="437.4" y="1925" width="4.0" height="15.0" fill="rgb(223,115,0)" rx="2" ry="2" />
<text  x="440.41" y="1935.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="19.1" y="1717" width="0.2" height="15.0" fill="rgb(252,226,26)" rx="2" ry="2" />
<text  x="22.06" y="1727.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="433.6" y="1813" width="0.2" height="15.0" fill="rgb(220,52,23)" rx="2" ry="2" />
<text  x="436.58" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="890.2" y="1925" width="0.2" height="15.0" fill="rgb(238,41,40)" rx="2" ry="2" />
<text  x="893.17" y="1935.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="152.7" y="325" width="0.2" height="15.0" fill="rgb(243,198,16)" rx="2" ry="2" />
<text  x="155.67" y="335.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.02%)</title><rect x="903.3" y="1637" width="0.2" height="15.0" fill="rgb(239,211,36)" rx="2" ry="2" />
<text  x="906.25" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::operator bool (5 samples, 0.09%)</title><rect x="230.1" y="1909" width="1.0" height="15.0" fill="rgb(209,31,40)" rx="2" ry="2" />
<text  x="233.14" y="1919.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.02%)</title><rect x="1023.2" y="1829" width="0.2" height="15.0" fill="rgb(253,29,46)" rx="2" ry="2" />
<text  x="1026.18" y="1839.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point (5 samples, 0.09%)</title><rect x="935.4" y="1941" width="1.1" height="15.0" fill="rgb(226,71,5)" rx="2" ry="2" />
<text  x="938.45" y="1951.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="1087.6" y="1701" width="0.6" height="15.0" fill="rgb(253,180,4)" rx="2" ry="2" />
<text  x="1090.58" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="548.9" y="1813" width="0.2" height="15.0" fill="rgb(251,87,16)" rx="2" ry="2" />
<text  x="551.89" y="1823.5" ></text>
</g>
<g >
<title>ixgbe_poll (1 samples, 0.02%)</title><rect x="345.4" y="1797" width="0.2" height="15.0" fill="rgb(233,193,31)" rx="2" ry="2" />
<text  x="348.45" y="1807.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="407.8" y="1861" width="0.2" height="15.0" fill="rgb(245,124,12)" rx="2" ry="2" />
<text  x="410.83" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="999.2" y="1941" width="0.2" height="15.0" fill="rgb(251,121,39)" rx="2" ry="2" />
<text  x="1002.24" y="1951.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="464.0" y="1765" width="0.8" height="15.0" fill="rgb(224,11,30)" rx="2" ry="2" />
<text  x="466.97" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="554.7" y="1925" width="0.2" height="15.0" fill="rgb(229,31,1)" rx="2" ry="2" />
<text  x="557.72" y="1935.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="100.6" y="1845" width="0.2" height="15.0" fill="rgb(232,194,43)" rx="2" ry="2" />
<text  x="103.55" y="1855.5" ></text>
</g>
<g >
<title>folly::operator!= (2 samples, 0.03%)</title><rect x="852.9" y="1941" width="0.4" height="15.0" fill="rgb(206,164,24)" rx="2" ry="2" />
<text  x="855.94" y="1951.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.07%)</title><rect x="114.8" y="2037" width="0.8" height="15.0" fill="rgb(252,49,1)" rx="2" ry="2" />
<text  x="117.84" y="2047.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="14.4" y="1829" width="0.2" height="15.0" fill="rgb(243,126,7)" rx="2" ry="2" />
<text  x="17.43" y="1839.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="812.5" y="1397" width="0.2" height="15.0" fill="rgb(221,180,40)" rx="2" ry="2" />
<text  x="815.50" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::pointer_traits&lt;boost::intrusive::list_node&lt;void*&gt;*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="631.4" y="1909" width="0.2" height="15.0" fill="rgb(212,165,28)" rx="2" ry="2" />
<text  x="634.39" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::_M_ptr (4 samples, 0.07%)</title><rect x="230.1" y="1877" width="0.8" height="15.0" fill="rgb(244,160,39)" rx="2" ry="2" />
<text  x="233.14" y="1887.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1120.4" y="1941" width="0.2" height="15.0" fill="rgb(208,212,21)" rx="2" ry="2" />
<text  x="1123.38" y="1951.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.02%)</title><rect x="1170.3" y="1941" width="0.2" height="15.0" fill="rgb(252,91,46)" rx="2" ry="2" />
<text  x="1173.28" y="1951.5" ></text>
</g>
<g >
<title>facebook::memcache::McServerAsciiParser::opTypeConsumer (9 samples, 0.15%)</title><rect x="138.2" y="37" width="1.8" height="15.0" fill="rgb(252,207,12)" rx="2" ry="2" />
<text  x="141.18" y="47.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="899.8" y="1973" width="0.2" height="15.0" fill="rgb(226,66,14)" rx="2" ry="2" />
<text  x="902.83" y="1983.5" ></text>
</g>
<g >
<title>folly::EventBaseEvent::isEventRegistered (6 samples, 0.10%)</title><rect x="236.6" y="1861" width="1.2" height="15.0" fill="rgb(251,27,10)" rx="2" ry="2" />
<text  x="239.58" y="1871.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="832.2" y="1765" width="0.4" height="15.0" fill="rgb(223,44,31)" rx="2" ry="2" />
<text  x="835.22" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="1126.0" y="2037" width="1.2" height="15.0" fill="rgb(205,60,0)" rx="2" ry="2" />
<text  x="1129.01" y="2047.5" ></text>
</g>
<g >
<title>event_add (1 samples, 0.02%)</title><rect x="234.0" y="1861" width="0.2" height="15.0" fill="rgb(254,100,24)" rx="2" ry="2" />
<text  x="236.97" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="955.8" y="1957" width="0.2" height="15.0" fill="rgb(233,11,34)" rx="2" ry="2" />
<text  x="958.77" y="1967.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.09%)</title><rect x="13.6" y="1941" width="1.0" height="15.0" fill="rgb(219,61,29)" rx="2" ry="2" />
<text  x="16.62" y="1951.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1181.1" y="1765" width="0.2" height="15.0" fill="rgb(241,184,9)" rx="2" ry="2" />
<text  x="1184.15" y="1775.5" ></text>
</g>
<g >
<title>ixgbe_msix_clean_rings (1 samples, 0.02%)</title><rect x="1094.2" y="1797" width="0.2" height="15.0" fill="rgb(229,225,19)" rx="2" ry="2" />
<text  x="1097.22" y="1807.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="1178.9" y="1925" width="0.2" height="15.0" fill="rgb(235,90,48)" rx="2" ry="2" />
<text  x="1181.93" y="1935.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7 samples, 0.12%)</title><rect x="282.5" y="1509" width="1.4" height="15.0" fill="rgb(227,40,11)" rx="2" ry="2" />
<text  x="285.46" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1013" width="29.8" height="15.0" fill="rgb(222,208,39)" rx="2" ry="2" />
<text  x="127.10" y="1023.5" >[u..</text>
</g>
<g >
<title>__fget_light (5 samples, 0.09%)</title><rect x="561.4" y="1909" width="1.0" height="15.0" fill="rgb(238,174,9)" rx="2" ry="2" />
<text  x="564.36" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::generic_hook&lt; (5 samples, 0.09%)</title><rect x="539.2" y="1957" width="1.0" height="15.0" fill="rgb(247,175,19)" rx="2" ry="2" />
<text  x="542.23" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="721.3" y="1317" width="0.2" height="15.0" fill="rgb(222,89,42)" rx="2" ry="2" />
<text  x="724.34" y="1327.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1094.2" y="1813" width="0.2" height="15.0" fill="rgb(214,69,31)" rx="2" ry="2" />
<text  x="1097.22" y="1823.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="100.6" y="1861" width="0.2" height="15.0" fill="rgb(244,115,24)" rx="2" ry="2" />
<text  x="103.55" y="1871.5" ></text>
</g>
<g >
<title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="930.0" y="1989" width="0.2" height="15.0" fill="rgb(229,215,50)" rx="2" ry="2" />
<text  x="933.01" y="1999.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="378.9" y="1813" width="0.2" height="15.0" fill="rgb(253,71,1)" rx="2" ry="2" />
<text  x="381.85" y="1823.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (1 samples, 0.02%)</title><rect x="202.0" y="1701" width="0.2" height="15.0" fill="rgb(230,96,46)" rx="2" ry="2" />
<text  x="204.97" y="1711.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1181.1" y="1893" width="0.2" height="15.0" fill="rgb(237,221,41)" rx="2" ry="2" />
<text  x="1184.15" y="1903.5" ></text>
</g>
<g >
<title>facebook::memcache::mcrouter::ProxyRequestContextWithInfo&lt;facebook::memcache::MemcacheRouterInfo&gt;::~ProxyRequestContextWithInfo (1 samples, 0.02%)</title><rect x="864.4" y="1989" width="0.2" height="15.0" fill="rgb(253,229,50)" rx="2" ry="2" />
<text  x="867.41" y="1999.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="783.9" y="1381" width="0.2" height="15.0" fill="rgb(207,5,29)" rx="2" ry="2" />
<text  x="786.92" y="1391.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1023.0" y="1861" width="0.4" height="15.0" fill="rgb(220,193,52)" rx="2" ry="2" />
<text  x="1025.98" y="1871.5" ></text>
</g>
<g >
<title>__entry_trampoline_start (1 samples, 0.02%)</title><rect x="121.9" y="1989" width="0.2" height="15.0" fill="rgb(225,134,53)" rx="2" ry="2" />
<text  x="124.88" y="1999.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="202.0" y="1733" width="0.2" height="15.0" fill="rgb(232,227,38)" rx="2" ry="2" />
<text  x="204.97" y="1743.5" ></text>
</g>
<g >
<title>folly::canNallocx (1 samples, 0.02%)</title><rect x="640.0" y="1973" width="0.2" height="15.0" fill="rgb(230,88,10)" rx="2" ry="2" />
<text  x="643.04" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="1001.2" y="1973" width="0.2" height="15.0" fill="rgb(238,150,2)" rx="2" ry="2" />
<text  x="1004.25" y="1983.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1155.4" y="1813" width="0.2" height="15.0" fill="rgb(245,51,7)" rx="2" ry="2" />
<text  x="1158.39" y="1823.5" ></text>
</g>
<g >
<title>sock_rfree (4 samples, 0.07%)</title><rect x="1082.3" y="1877" width="0.8" height="15.0" fill="rgb(229,204,47)" rx="2" ry="2" />
<text  x="1085.34" y="1887.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="631.4" y="1717" width="0.2" height="15.0" fill="rgb(211,83,28)" rx="2" ry="2" />
<text  x="634.39" y="1727.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="961.6" y="1925" width="0.2" height="15.0" fill="rgb(254,179,4)" rx="2" ry="2" />
<text  x="964.61" y="1935.5" ></text>
</g>
<g >
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="24.5" y="2005" width="0.4" height="15.0" fill="rgb(252,141,25)" rx="2" ry="2" />
<text  x="27.49" y="2015.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="316.1" y="1621" width="0.2" height="15.0" fill="rgb(245,99,50)" rx="2" ry="2" />
<text  x="319.07" y="1631.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="174.4" y="1909" width="0.2" height="15.0" fill="rgb(214,31,49)" rx="2" ry="2" />
<text  x="177.40" y="1919.5" ></text>
</g>
<g >
<title>folly::IPAddress::IPAddress (3 samples, 0.05%)</title><rect x="580.7" y="1909" width="0.6" height="15.0" fill="rgb(216,194,25)" rx="2" ry="2" />
<text  x="583.68" y="1919.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="280.7" y="1749" width="0.2" height="15.0" fill="rgb(228,54,29)" rx="2" ry="2" />
<text  x="283.65" y="1759.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="775.5" y="1429" width="0.2" height="15.0" fill="rgb(220,132,15)" rx="2" ry="2" />
<text  x="778.47" y="1439.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="545.9" y="1845" width="0.2" height="15.0" fill="rgb(250,111,41)" rx="2" ry="2" />
<text  x="548.87" y="1855.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="353.9" y="1957" width="0.2" height="15.0" fill="rgb(217,200,50)" rx="2" ry="2" />
<text  x="356.90" y="1967.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="999.2" y="1909" width="0.2" height="15.0" fill="rgb(252,79,14)" rx="2" ry="2" />
<text  x="1002.24" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="861.4" y="1941" width="0.2" height="15.0" fill="rgb(253,217,20)" rx="2" ry="2" />
<text  x="864.39" y="1951.5" ></text>
</g>
<g >
<title>__napi_schedule_irqoff (1 samples, 0.02%)</title><rect x="256.5" y="1749" width="0.2" height="15.0" fill="rgb(226,201,20)" rx="2" ry="2" />
<text  x="259.50" y="1759.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="71.4" y="1941" width="0.2" height="15.0" fill="rgb(224,209,22)" rx="2" ry="2" />
<text  x="74.37" y="1951.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.09%)</title><rect x="13.6" y="1909" width="1.0" height="15.0" fill="rgb(229,72,13)" rx="2" ry="2" />
<text  x="16.62" y="1919.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1119.6" y="1909" width="0.2" height="15.0" fill="rgb(254,204,47)" rx="2" ry="2" />
<text  x="1122.57" y="1919.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="1031.0" y="2005" width="0.2" height="15.0" fill="rgb(254,77,3)" rx="2" ry="2" />
<text  x="1034.03" y="2015.5" ></text>
</g>
<g >
<title>folly::MicroSpinLock::lock (4 samples, 0.07%)</title><rect x="1180.5" y="2053" width="0.8" height="15.0" fill="rgb(249,181,52)" rx="2" ry="2" />
<text  x="1183.54" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::IOBuf, std::default_delete&lt;folly::IOBuf&gt; &gt;::release (5 samples, 0.09%)</title><rect x="888.6" y="1941" width="1.0" height="15.0" fill="rgb(254,195,0)" rx="2" ry="2" />
<text  x="891.56" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, folly::EventBaseBackendBase*, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt; (2 samples, 0.03%)</title><rect x="69.2" y="1845" width="0.4" height="15.0" fill="rgb(239,225,48)" rx="2" ry="2" />
<text  x="72.16" y="1855.5" ></text>
</g>
<g >
<title>filp_close (30 samples, 0.51%)</title><rect x="825.2" y="1829" width="6.0" height="15.0" fill="rgb(213,0,37)" rx="2" ry="2" />
<text  x="828.17" y="1839.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="831.0" y="1509" width="0.2" height="15.0" fill="rgb(238,150,19)" rx="2" ry="2" />
<text  x="834.01" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="916.9" y="1925" width="0.2" height="15.0" fill="rgb(230,93,35)" rx="2" ry="2" />
<text  x="919.93" y="1935.5" ></text>
</g>
<g >
<title>folly::AsyncSocket::setSendTimeout (10 samples, 0.17%)</title><rect x="688.9" y="2021" width="2.1" height="15.0" fill="rgb(224,185,36)" rx="2" ry="2" />
<text  x="691.94" y="2031.5" ></text>
</g>
<g >
<title>new_slab (1 samples, 0.02%)</title><rect x="440.8" y="1861" width="0.2" height="15.0" fill="rgb(241,180,20)" rx="2" ry="2" />
<text  x="443.83" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1221" width="29.8" height="15.0" fill="rgb(244,159,36)" rx="2" ry="2" />
<text  x="127.10" y="1231.5" >[u..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="920.6" y="1941" width="0.2" height="15.0" fill="rgb(247,217,2)" rx="2" ry="2" />
<text  x="923.56" y="1951.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, folly::AsyncSocketException const*, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="883.1" y="1861" width="0.2" height="15.0" fill="rgb(254,131,14)" rx="2" ry="2" />
<text  x="886.13" y="1871.5" ></text>
</g>
<g >
<title>folly::RequestContext::saveContext (2 samples, 0.03%)</title><rect x="528.6" y="1989" width="0.4" height="15.0" fill="rgb(217,81,49)" rx="2" ry="2" />
<text  x="531.56" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (148 samples, 2.52%)</title><rect x="124.1" y="1125" width="29.8" height="15.0" fill="rgb(224,202,14)" rx="2" ry="2" />
<text  x="127.10" y="1135.5" >[u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="698.6" y="1877" width="0.8" height="15.0" fill="rgb(243,61,10)" rx="2" ry="2" />
<text  x="701.60" y="1887.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="801.6" y="1493" width="0.2" height="15.0" fill="rgb(225,75,19)" rx="2" ry="2" />
<text  x="804.63" y="1503.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1022.2" y="2021" width="0.2" height="15.0" fill="rgb(207,165,5)" rx="2" ry="2" />
<text  x="1025.18" y="2031.5" ></text>
</g>
<g >
<title>facebook::memcache::McParser::getReadBuffer (27 samples, 0.46%)</title><rect x="127.7" y="37" width="5.5" height="15.0" fill="rgb(223,95,5)" rx="2" ry="2" />
<text  x="130.72" y="47.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="1155.4" y="1845" width="0.2" height="15.0" fill="rgb(235,216,10)" rx="2" ry="2" />
<text  x="1158.39" y="1855.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1170.3" y="2037" width="0.2" height="15.0" fill="rgb(254,88,47)" rx="2" ry="2" />
<text  x="1173.28" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="880.1" y="1925" width="0.2" height="15.0" fill="rgb(252,152,7)" rx="2" ry="2" />
<text  x="883.11" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="945.1" y="1909" width="0.2" height="15.0" fill="rgb(241,167,9)" rx="2" ry="2" />
<text  x="948.11" y="1919.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="100.8" y="2021" width="0.2" height="15.0" fill="rgb(234,181,16)" rx="2" ry="2" />
<text  x="103.75" y="2031.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="747.7" y="1669" width="0.2" height="15.0" fill="rgb(225,149,50)" rx="2" ry="2" />
<text  x="750.70" y="1679.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="809.5" y="1413" width="0.2" height="15.0" fill="rgb(238,17,25)" rx="2" ry="2" />
<text  x="812.48" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="801.6" y="1509" width="0.2" height="15.0" fill="rgb(220,71,6)" rx="2" ry="2" />
<text  x="804.63" y="1519.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="875.5" y="1973" width="0.2" height="15.0" fill="rgb(247,84,4)" rx="2" ry="2" />
<text  x="878.48" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="999.2" y="1957" width="0.2" height="15.0" fill="rgb(224,169,11)" rx="2" ry="2" />
<text  x="1002.24" y="1967.5" ></text>
</g>
<g >
<title>folly::SharedMutexImpl&lt;false, void, std::atomic, false, false&gt;::tryUnlockTokenlessSharedDeferred (1 samples, 0.02%)</title><rect x="209.4" y="2021" width="0.2" height="15.0" fill="rgb(210,10,26)" rx="2" ry="2" />
<text  x="212.42" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="295.7" y="1637" width="0.2" height="15.0" fill="rgb(210,91,26)" rx="2" ry="2" />
<text  x="298.74" y="1647.5" ></text>
</g>
<g >
<title>folly::detail::IntegralSizePolicyBase&lt;unsigned long, true&gt;::doSize (1 samples, 0.02%)</title><rect x="837.2" y="1909" width="0.2" height="15.0" fill="rgb(253,139,32)" rx="2" ry="2" />
<text  x="840.25" y="1919.5" ></text>
</g>
<g >
<title>folly::HHWheelTimerBase&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::timeToWheelTicks (1 samples, 0.02%)</title><rect x="528.4" y="1989" width="0.2" height="15.0" fill="rgb(231,63,18)" rx="2" ry="2" />
<text  x="531.36" y="1999.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="65.1" y="1845" width="0.2" height="15.0" fill="rgb(231,103,40)" rx="2" ry="2" />
<text  x="68.14" y="1855.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.02%)</title><rect x="533.2" y="1733" width="0.2" height="15.0" fill="rgb(209,182,23)" rx="2" ry="2" />
<text  x="536.19" y="1743.5" ></text>
</g>
<g >
<title>cmpxchg_double_slab.isra.33 (1 samples, 0.02%)</title><rect x="450.7" y="1909" width="0.2" height="15.0" fill="rgb(249,37,24)" rx="2" ry="2" />
<text  x="453.69" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::EventBaseBackendBase, std::default_delete&lt;folly::EventBaseBackendBase&gt; &gt;::get (4 samples, 0.07%)</title><rect x="69.2" y="1893" width="0.8" height="15.0" fill="rgb(242,153,12)" rx="2" ry="2" />
<text  x="72.16" y="1903.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.02%)</title><rect x="721.3" y="1333" width="0.2" height="15.0" fill="rgb(227,147,23)" rx="2" ry="2" />
<text  x="724.34" y="1343.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1164.6" y="1781" width="0.2" height="15.0" fill="rgb(236,212,11)" rx="2" ry="2" />
<text  x="1167.65" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;folly::AsyncSocketException const, std::default_delete&lt;folly::AsyncSocketException const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;folly::AsyncSocketException const&gt;, void&gt; (4 samples, 0.07%)</title><rect x="883.9" y="1909" width="0.8" height="15.0" fill="rgb(221,180,19)" rx="2" ry="2" />
<text  x="886.93" y="1919.5" ></text>
</g>
<g >
<title>facebook::memcache::AsyncMcClientImpl::~AsyncMcClientImpl (5 samples, 0.09%)</title><rect x="535.0" y="2037" width="1.0" height="15.0" fill="rgb(254,165,29)" rx="2" ry="2" />
<text  x="538.00" y="2047.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="730.2" y="1493" width="0.2" height="15.0" fill="rgb(219,119,52)" rx="2" ry="2" />
<text  x="733.19" y="1503.5" ></text>
</g>
<g >
<title>folly::EventBase::checkIsInEventBaseThread (11 samples, 0.19%)</title><rect x="549.9" y="1973" width="2.2" height="15.0" fill="rgb(227,126,21)" rx="2" ry="2" />
<text  x="552.89" y="1983.5" ></text>
</g>
<g >
<title>folly::SocketAddress::setFromSockaddr (7 samples, 0.12%)</title><rect x="660.4" y="1957" width="1.4" height="15.0" fill="rgb(212,171,25)" rx="2" ry="2" />
<text  x="663.37" y="1967.5" ></text>
</g>
<g >
<title>folly::tryEmplaceWith&lt;facebook::memcache::McSerializedRequest::McSerializedRequest&lt;facebook::memcache::McGetRequest&gt; (1 samples, 0.02%)</title><rect x="993.2" y="2005" width="0.2" height="15.0" fill="rgb(218,73,35)" rx="2" ry="2" />
<text  x="996.20" y="2015.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="1149.2" y="1573" width="0.2" height="15.0" fill="rgb(230,154,37)" rx="2" ry="2" />
<text  x="1152.15" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.02%)</title><rect x="230.5" y="1733" width="0.2" height="15.0" fill="rgb(243,21,19)" rx="2" ry="2" />
<text  x="233.55" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="188.5" y="1957" width="0.2" height="15.0" fill="rgb(252,225,21)" rx="2" ry="2" />
<text  x="191.49" y="1967.5" ></text>
</g>
</g>
</svg>
